openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: resiliencehub
  x-aws-serviceName: resiliencehub
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2020-04-30'
  title: AWS Resilience Hub
  description: |-
    Resilience Hub helps you proactively prepare and protect your Amazon Web Services applications from disruptions. It offers continual resiliency assessment and validation that integrates into your software development lifecycle. This enables you to uncover resiliency weaknesses, ensure recovery time objective (RTO) and recovery point objective (RPO) targets for your applications are met, and resolve issues before they are released into production.
servers:
- description: The AWS Resilience Hub regional endpoint
  url: https://resiliencehub.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /accept-resource-grouping-recommendations:
    post:
      operationId: AcceptResourceGroupingRecommendations
      description: |-
        Accepts the resource grouping recommendations suggested by Resilience Hub for your application.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appArn:
                  $ref: '#/components/schemas/Arn'
                entries:
                  $ref: '#/components/schemas/AcceptGroupingRecommendationEntries'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /add-draft-app-version-resource-mappings:
    post:
      operationId: AddDraftAppVersionResourceMappings
      description: |-
        Adds the source of resource-maps to the draft version of an application. During assessment, Resilience Hub will use these resource-maps to resolve the latest physical ID for each resource in the application template. For more information about different types of resources supported by Resilience Hub and how to add them in your application, see [Step 2: How is your application managed?](https://docs.aws.amazon.com/resilience-hub/latest/userguide/how-app-manage.html) in the Resilience Hub User Guide.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appArn:
                  $ref: '#/components/schemas/Arn'
                resourceMappings:
                  $ref: '#/components/schemas/ResourceMappingList'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This exception occurs when a conflict with a previous successful write is detected. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            This exception occurs when you have exceeded your service quota. To perform the requested action, remove some of the relevant resources, or use Service Quotas to request a service quota increase.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /batch-update-recommendation-status:
    post:
      operationId: BatchUpdateRecommendationStatus
      description: |-
        Enables you to include or exclude one or more operational recommendations.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appArn:
                  $ref: '#/components/schemas/Arn'
                requestEntries:
                  $ref: '#/components/schemas/UpdateRecommendationStatusRequestEntries'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /create-app:
    post:
      operationId: CreateApp
      description: |-
        Creates an Resilience Hub application. An Resilience Hub application is a collection of Amazon Web Services resources structured to prevent and recover Amazon Web Services application disruptions. To describe a Resilience Hub application, you provide an application name, resources from one or more CloudFormation stacks, Resource Groups, Terraform state files, AppRegistry applications, and an appropriate resiliency policy. In addition, you can also add resources that are located on Amazon Elastic Kubernetes Service (Amazon EKS) clusters as optional resources. For more information about the number of resources supported per application, see [Service quotas](https://docs.aws.amazon.com/general/latest/gr/resiliencehub.html#limits_resiliencehub).

        After you create an Resilience Hub application, you publish it so that you can run a resiliency assessment on it. You can then use recommendations from the assessment to improve resiliency by running another assessment, comparing results, and then iterating the process until you achieve your goals for recovery time objective (RTO) and recovery point objective (RPO).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/EntityName'
                description:
                  $ref: '#/components/schemas/EntityDescription'
                policyArn:
                  $ref: '#/components/schemas/Arn'
                tags:
                  $ref: '#/components/schemas/TagMap'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                assessmentSchedule:
                  $ref: '#/components/schemas/AppAssessmentScheduleType'
                permissionModel:
                  $ref: '#/components/schemas/PermissionModel'
                eventSubscriptions:
                  $ref: '#/components/schemas/EventSubscriptionList'
                awsApplicationArn:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This exception occurs when a conflict with a previous successful write is detected. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            This exception occurs when you have exceeded your service quota. To perform the requested action, remove some of the relevant resources, or use Service Quotas to request a service quota increase.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /create-app-version-app-component:
    post:
      operationId: CreateAppVersionAppComponent
      description: |-
        Creates a new Application Component in the Resilience Hub application.

        This API updates the Resilience Hub application draft version. To use this Application Component for running assessments, you must publish the Resilience Hub application using the `PublishAppVersion` API.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appArn:
                  $ref: '#/components/schemas/Arn'
                id:
                  $ref: '#/components/schemas/String255'
                name:
                  $ref: '#/components/schemas/String255'
                type:
                  $ref: '#/components/schemas/String255'
                additionalInfo:
                  $ref: '#/components/schemas/AdditionalInfoMap'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This exception occurs when a conflict with a previous successful write is detected. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            This exception occurs when you have exceeded your service quota. To perform the requested action, remove some of the relevant resources, or use Service Quotas to request a service quota increase.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /create-app-version-resource:
    post:
      operationId: CreateAppVersionResource
      description: |-
        Adds a resource to the Resilience Hub application and assigns it to the specified Application Components. If you specify a new Application Component, Resilience Hub will automatically create the Application Component.

          * This action has no effect outside Resilience Hub.

          * This API updates the Resilience Hub application draft version. To use this resource for running resiliency assessments, you must publish the Resilience Hub application using the `PublishAppVersion` API.

          * To update application version with new `physicalResourceID`, you must call `ResolveAppVersionResources` API.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appArn:
                  $ref: '#/components/schemas/Arn'
                resourceName:
                  $ref: '#/components/schemas/EntityName'
                logicalResourceId:
                  $ref: '#/components/schemas/LogicalResourceId'
                physicalResourceId:
                  $ref: '#/components/schemas/String2048'
                awsRegion:
                  $ref: '#/components/schemas/AwsRegion'
                awsAccountId:
                  $ref: '#/components/schemas/CustomerId'
                resourceType:
                  $ref: '#/components/schemas/String255'
                appComponents:
                  $ref: '#/components/schemas/AppComponentNameList'
                additionalInfo:
                  $ref: '#/components/schemas/AdditionalInfoMap'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This exception occurs when a conflict with a previous successful write is detected. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            This exception occurs when you have exceeded your service quota. To perform the requested action, remove some of the relevant resources, or use Service Quotas to request a service quota increase.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /create-recommendation-template:
    post:
      operationId: CreateRecommendationTemplate
      description: |-
        Creates a new recommendation template for the Resilience Hub application.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                recommendationIds:
                  $ref: '#/components/schemas/RecommendationIdList'
                format:
                  $ref: '#/components/schemas/TemplateFormat'
                recommendationTypes:
                  $ref: '#/components/schemas/RenderRecommendationTypeList'
                assessmentArn:
                  $ref: '#/components/schemas/Arn'
                name:
                  $ref: '#/components/schemas/EntityName'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                tags:
                  $ref: '#/components/schemas/TagMap'
                bucketName:
                  $ref: '#/components/schemas/EntityName'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This exception occurs when a conflict with a previous successful write is detected. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            This exception occurs when you have exceeded your service quota. To perform the requested action, remove some of the relevant resources, or use Service Quotas to request a service quota increase.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /create-resiliency-policy:
    post:
      operationId: CreateResiliencyPolicy
      description: |-
        Creates a resiliency policy for an application.

        Resilience Hub allows you to provide a value of zero for `rtoInSecs` and `rpoInSecs` of your resiliency policy. But, while assessing your application, the lowest possible assessment result is near zero. Hence, if you provide value zero for `rtoInSecs` and `rpoInSecs`, the estimated workload RTO and estimated workload RPO result will be near zero and the **Compliance status** for your application will be set to **Policy breached**.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                policyName:
                  $ref: '#/components/schemas/EntityName'
                policyDescription:
                  $ref: '#/components/schemas/EntityDescription'
                dataLocationConstraint:
                  $ref: '#/components/schemas/DataLocationConstraint'
                tier:
                  $ref: '#/components/schemas/ResiliencyPolicyTier'
                policy:
                  $ref: '#/components/schemas/DisruptionPolicy'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This exception occurs when a conflict with a previous successful write is detected. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            This exception occurs when you have exceeded your service quota. To perform the requested action, remove some of the relevant resources, or use Service Quotas to request a service quota increase.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /delete-app:
    post:
      operationId: DeleteApp
      description: |-
        Deletes an Resilience Hub application. This is a destructive action that can't be undone.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appArn:
                  $ref: '#/components/schemas/Arn'
                forceDelete:
                  $ref: '#/components/schemas/BooleanOptional'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '409':
          description: |-
            This exception occurs when a conflict with a previous successful write is detected. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /delete-app-assessment:
    post:
      operationId: DeleteAppAssessment
      description: |-
        Deletes an Resilience Hub application assessment. This is a destructive action that can't be undone.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                assessmentArn:
                  $ref: '#/components/schemas/Arn'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This exception occurs when a conflict with a previous successful write is detected. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /delete-app-input-source:
    post:
      operationId: DeleteAppInputSource
      description: |-
        Deletes the input source and all of its imported resources from the Resilience Hub application.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appArn:
                  $ref: '#/components/schemas/Arn'
                sourceArn:
                  $ref: '#/components/schemas/Arn'
                terraformSource:
                  $ref: '#/components/schemas/TerraformSource'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                eksSourceClusterNamespace:
                  $ref: '#/components/schemas/EksSourceClusterNamespace'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This exception occurs when a conflict with a previous successful write is detected. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /delete-app-version-app-component:
    post:
      operationId: DeleteAppVersionAppComponent
      description: |-
        Deletes an Application Component from the Resilience Hub application.

          * This API updates the Resilience Hub application draft version. To use this Application Component for running assessments, you must publish the Resilience Hub application using the `PublishAppVersion` API.

          * You will not be able to delete an Application Component if it has resources associated with it.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appArn:
                  $ref: '#/components/schemas/Arn'
                id:
                  $ref: '#/components/schemas/String255'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This exception occurs when a conflict with a previous successful write is detected. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /delete-app-version-resource:
    post:
      operationId: DeleteAppVersionResource
      description: |-
        Deletes a resource from the Resilience Hub application.

          * You can only delete a manually added resource. To exclude non-manually added resources, use the `UpdateAppVersionResource` API.

          * This action has no effect outside Resilience Hub.

          * This API updates the Resilience Hub application draft version. To use this resource for running resiliency assessments, you must publish the Resilience Hub application using the `PublishAppVersion` API.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appArn:
                  $ref: '#/components/schemas/Arn'
                resourceName:
                  $ref: '#/components/schemas/EntityName'
                logicalResourceId:
                  $ref: '#/components/schemas/LogicalResourceId'
                physicalResourceId:
                  $ref: '#/components/schemas/String2048'
                awsRegion:
                  $ref: '#/components/schemas/AwsRegion'
                awsAccountId:
                  $ref: '#/components/schemas/CustomerId'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This exception occurs when a conflict with a previous successful write is detected. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /delete-recommendation-template:
    post:
      operationId: DeleteRecommendationTemplate
      description: |-
        Deletes a recommendation template. This is a destructive action that can't be undone.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                recommendationTemplateArn:
                  $ref: '#/components/schemas/Arn'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /delete-resiliency-policy:
    post:
      operationId: DeleteResiliencyPolicy
      description: |-
        Deletes a resiliency policy. This is a destructive action that can't be undone.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                policyArn:
                  $ref: '#/components/schemas/Arn'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This exception occurs when a conflict with a previous successful write is detected. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /describe-app:
    post:
      operationId: DescribeApp
      description: |-
        Describes an Resilience Hub application.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appArn:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /describe-app-assessment:
    post:
      operationId: DescribeAppAssessment
      description: |-
        Describes an assessment for an Resilience Hub application.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                assessmentArn:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /describe-app-version:
    post:
      operationId: DescribeAppVersion
      description: |-
        Describes the Resilience Hub application version.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appArn:
                  $ref: '#/components/schemas/Arn'
                appVersion:
                  $ref: '#/components/schemas/EntityVersion'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /describe-app-version-app-component:
    post:
      operationId: DescribeAppVersionAppComponent
      description: |-
        Describes an Application Component in the Resilience Hub application.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appArn:
                  $ref: '#/components/schemas/Arn'
                appVersion:
                  $ref: '#/components/schemas/EntityVersion'
                id:
                  $ref: '#/components/schemas/String255'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This exception occurs when a conflict with a previous successful write is detected. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /describe-app-version-resource:
    post:
      operationId: DescribeAppVersionResource
      description: |-
        Describes a resource of the Resilience Hub application.

        This API accepts only one of the following parameters to describe the resource:

          * `resourceName`

          * `logicalResourceId`

          * `physicalResourceId` (Along with `physicalResourceId`, you can also provide `awsAccountId`, and `awsRegion`)
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appArn:
                  $ref: '#/components/schemas/Arn'
                appVersion:
                  $ref: '#/components/schemas/EntityVersion'
                resourceName:
                  $ref: '#/components/schemas/EntityName'
                logicalResourceId:
                  $ref: '#/components/schemas/LogicalResourceId'
                physicalResourceId:
                  $ref: '#/components/schemas/String2048'
                awsRegion:
                  $ref: '#/components/schemas/AwsRegion'
                awsAccountId:
                  $ref: '#/components/schemas/CustomerId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This exception occurs when a conflict with a previous successful write is detected. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /describe-app-version-resources-resolution-status:
    post:
      operationId: DescribeAppVersionResourcesResolutionStatus
      description: |-
        Returns the resolution status for the specified resolution identifier for an application version. If `resolutionId` is not specified, the current resolution status is returned.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appArn:
                  $ref: '#/components/schemas/Arn'
                appVersion:
                  $ref: '#/components/schemas/EntityVersion'
                resolutionId:
                  $ref: '#/components/schemas/String255'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /describe-app-version-template:
    post:
      operationId: DescribeAppVersionTemplate
      description: |-
        Describes details about an Resilience Hub application.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appArn:
                  $ref: '#/components/schemas/Arn'
                appVersion:
                  $ref: '#/components/schemas/EntityVersion'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /describe-draft-app-version-resources-import-status:
    post:
      operationId: DescribeDraftAppVersionResourcesImportStatus
      description: |-
        Describes the status of importing resources to an application version.

        If you get a 404 error with `ResourceImportStatusNotFoundAppMetadataException`, you must call `importResourcesToDraftAppVersion` after creating the application and before calling `describeDraftAppVersionResourcesImportStatus` to obtain the status.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appArn:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /describe-metrics-export:
    post:
      operationId: DescribeMetricsExport
      description: |-
        Describes the metrics of the application configuration being exported.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                metricsExportId:
                  $ref: '#/components/schemas/String255'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /describe-resiliency-policy:
    post:
      operationId: DescribeResiliencyPolicy
      description: |-
        Describes a specified resiliency policy for an Resilience Hub application. The returned policy object includes creation time, data location constraints, the Amazon Resource Name (ARN) for the policy, tags, tier, and more.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                policyArn:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /describe-resource-grouping-recommendation-task:
    post:
      operationId: DescribeResourceGroupingRecommendationTask
      description: |-
        Describes the resource grouping recommendation tasks run by Resilience Hub for your application.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appArn:
                  $ref: '#/components/schemas/Arn'
                groupingId:
                  $ref: '#/components/schemas/String255'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /import-resources-to-draft-app-version:
    post:
      operationId: ImportResourcesToDraftAppVersion
      description: |-
        Imports resources to Resilience Hub application draft version from different input sources. For more information about the input sources supported by Resilience Hub, see [Discover the structure and describe your Resilience Hub application](https://docs.aws.amazon.com/resilience-hub/latest/userguide/discover-structure.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appArn:
                  $ref: '#/components/schemas/Arn'
                sourceArns:
                  $ref: '#/components/schemas/ArnList'
                terraformSources:
                  $ref: '#/components/schemas/TerraformSourceList'
                importStrategy:
                  $ref: '#/components/schemas/ResourceImportStrategyType'
                eksSources:
                  $ref: '#/components/schemas/EksSourceList'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This exception occurs when a conflict with a previous successful write is detected. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            This exception occurs when you have exceeded your service quota. To perform the requested action, remove some of the relevant resources, or use Service Quotas to request a service quota increase.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /list-alarm-recommendations:
    post:
      operationId: ListAlarmRecommendations
      description: |-
        Lists the alarm recommendations for an Resilience Hub application.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                assessmentArn:
                  $ref: '#/components/schemas/Arn'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /list-app-assessment-compliance-drifts:
    post:
      operationId: ListAppAssessmentComplianceDrifts
      description: |-
        List of compliance drifts that were detected while running an assessment.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                assessmentArn:
                  $ref: '#/components/schemas/Arn'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /list-app-assessment-resource-drifts:
    post:
      operationId: ListAppAssessmentResourceDrifts
      description: |-
        List of resource drifts that were detected while running an assessment.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                assessmentArn:
                  $ref: '#/components/schemas/Arn'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /list-app-assessments:
    get:
      operationId: ListAppAssessments
      description: |-
        Lists the assessments for an Resilience Hub application. You can use request parameters to refine the results for the response object.
      parameters:
      - name: appArn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Arn'
      - name: assessmentName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/EntityName'
      - name: assessmentStatus
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AssessmentStatusList'
      - name: complianceStatus
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ComplianceStatus'
      - name: invoker
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AssessmentInvoker'
      - name: reverseOrder
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/BooleanOptional'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /list-app-component-compliances:
    post:
      operationId: ListAppComponentCompliances
      description: |-
        Lists the compliances for an Resilience Hub Application Component.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nextToken:
                  $ref: '#/components/schemas/NextToken'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
                assessmentArn:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /list-app-component-recommendations:
    post:
      operationId: ListAppComponentRecommendations
      description: |-
        Lists the recommendations for an Resilience Hub Application Component.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                assessmentArn:
                  $ref: '#/components/schemas/Arn'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /list-app-input-sources:
    post:
      operationId: ListAppInputSources
      description: |-
        Lists all the input sources of the Resilience Hub application. For more information about the input sources supported by Resilience Hub, see [Discover the structure and describe your Resilience Hub application](https://docs.aws.amazon.com/resilience-hub/latest/userguide/discover-structure.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appArn:
                  $ref: '#/components/schemas/Arn'
                appVersion:
                  $ref: '#/components/schemas/EntityVersion'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /list-app-version-app-components:
    post:
      operationId: ListAppVersionAppComponents
      description: |-
        Lists all the Application Components in the Resilience Hub application.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appArn:
                  $ref: '#/components/schemas/Arn'
                appVersion:
                  $ref: '#/components/schemas/EntityVersion'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This exception occurs when a conflict with a previous successful write is detected. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /list-app-version-resource-mappings:
    post:
      operationId: ListAppVersionResourceMappings
      description: |-
        Lists how the resources in an application version are mapped/sourced from. Mappings can be physical resource identifiers, CloudFormation stacks, resource-groups, or an application registry app.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appArn:
                  $ref: '#/components/schemas/Arn'
                appVersion:
                  $ref: '#/components/schemas/EntityVersion'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /list-app-version-resources:
    post:
      operationId: ListAppVersionResources
      description: |-
        Lists all the resources in an Resilience Hub application.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appArn:
                  $ref: '#/components/schemas/Arn'
                appVersion:
                  $ref: '#/components/schemas/EntityVersion'
                resolutionId:
                  $ref: '#/components/schemas/String255'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This exception occurs when a conflict with a previous successful write is detected. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /list-app-versions:
    post:
      operationId: ListAppVersions
      description: |-
        Lists the different versions for the Resilience Hub applications.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appArn:
                  $ref: '#/components/schemas/Arn'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
                startTime:
                  $ref: '#/components/schemas/TimeStamp'
                endTime:
                  $ref: '#/components/schemas/TimeStamp'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /list-apps:
    get:
      operationId: ListApps
      description: |-
        Lists your Resilience Hub applications.

        You can filter applications using only one filter at a time or without using any filter. If you try to filter applications using multiple filters, you will get the following error:

        `An error occurred (ValidationException) when calling the ListApps operation: Only one filter is supported for this operation.`
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: name
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/EntityName'
      - name: appArn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Arn'
      - name: fromLastAssessmentTime
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/TimeStamp'
      - name: toLastAssessmentTime
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/TimeStamp'
      - name: reverseOrder
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/BooleanOptional'
      - name: awsApplicationArn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /list-metrics:
    post:
      operationId: ListMetrics
      description: |-
        Lists the metrics that can be exported.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nextToken:
                  $ref: '#/components/schemas/NextToken'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
                fields:
                  $ref: '#/components/schemas/FieldList'
                dataSource:
                  $ref: '#/components/schemas/String255'
                conditions:
                  $ref: '#/components/schemas/ConditionList'
                sorts:
                  $ref: '#/components/schemas/SortList'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /list-recommendation-templates:
    get:
      operationId: ListRecommendationTemplates
      description: |-
        Lists the recommendation templates for the Resilience Hub applications.
      parameters:
      - name: assessmentArn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Arn'
      - name: reverseOrder
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/BooleanOptional'
      - name: status
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/RecommendationTemplateStatusList'
      - name: recommendationTemplateArn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Arn'
      - name: name
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/EntityName'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /list-resiliency-policies:
    get:
      operationId: ListResiliencyPolicies
      description: |-
        Lists the resiliency policies for the Resilience Hub applications.
      parameters:
      - name: policyName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/EntityName'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /list-resource-grouping-recommendations:
    get:
      operationId: ListResourceGroupingRecommendations
      description: |-
        Lists the resource grouping recommendations suggested by Resilience Hub for your application.
      parameters:
      - name: appArn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Arn'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /list-sop-recommendations:
    post:
      operationId: ListSopRecommendations
      description: |-
        Lists the standard operating procedure (SOP) recommendations for the Resilience Hub applications.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nextToken:
                  $ref: '#/components/schemas/NextToken'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
                assessmentArn:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This exception occurs when a conflict with a previous successful write is detected. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /list-suggested-resiliency-policies:
    get:
      operationId: ListSuggestedResiliencyPolicies
      description: |-
        Lists the suggested resiliency policies for the Resilience Hub applications.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tags/{resourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Lists the tags for your resources in your Resilience Hub applications.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: TagResource
      description: |-
        Applies one or more tags to a resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: UntagResource
      description: |-
        Removes one or more tags from a resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeyList'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /list-test-recommendations:
    post:
      operationId: ListTestRecommendations
      description: |-
        Lists the test recommendations for the Resilience Hub application.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nextToken:
                  $ref: '#/components/schemas/NextToken'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
                assessmentArn:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This exception occurs when a conflict with a previous successful write is detected. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /list-unsupported-app-version-resources:
    post:
      operationId: ListUnsupportedAppVersionResources
      description: |-
        Lists the resources that are not currently supported in Resilience Hub. An unsupported resource is a resource that exists in the object that was used to create an app, but is not supported by Resilience Hub.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appArn:
                  $ref: '#/components/schemas/Arn'
                appVersion:
                  $ref: '#/components/schemas/EntityVersion'
                resolutionId:
                  $ref: '#/components/schemas/String255'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This exception occurs when a conflict with a previous successful write is detected. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /publish-app-version:
    post:
      operationId: PublishAppVersion
      description: |-
        Publishes a new version of a specific Resilience Hub application.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appArn:
                  $ref: '#/components/schemas/Arn'
                versionName:
                  $ref: '#/components/schemas/EntityVersion'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This exception occurs when a conflict with a previous successful write is detected. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /put-draft-app-version-template:
    post:
      operationId: PutDraftAppVersionTemplate
      description: |-
        Adds or updates the app template for an Resilience Hub application draft version.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appArn:
                  $ref: '#/components/schemas/Arn'
                appTemplateBody:
                  $ref: '#/components/schemas/AppTemplateBody'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This exception occurs when a conflict with a previous successful write is detected. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /reject-resource-grouping-recommendations:
    post:
      operationId: RejectResourceGroupingRecommendations
      description: |-
        Rejects resource grouping recommendations.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appArn:
                  $ref: '#/components/schemas/Arn'
                entries:
                  $ref: '#/components/schemas/RejectGroupingRecommendationEntries'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /remove-draft-app-version-resource-mappings:
    post:
      operationId: RemoveDraftAppVersionResourceMappings
      description: |-
        Removes resource mappings from a draft application version.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appArn:
                  $ref: '#/components/schemas/Arn'
                resourceNames:
                  $ref: '#/components/schemas/EntityNameList'
                logicalStackNames:
                  $ref: '#/components/schemas/String255List'
                appRegistryAppNames:
                  $ref: '#/components/schemas/EntityNameList'
                resourceGroupNames:
                  $ref: '#/components/schemas/EntityNameList'
                terraformSourceNames:
                  $ref: '#/components/schemas/String255List'
                eksSourceNames:
                  $ref: '#/components/schemas/String255List'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This exception occurs when a conflict with a previous successful write is detected. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /resolve-app-version-resources:
    post:
      operationId: ResolveAppVersionResources
      description: |-
        Resolves the resources for an application version.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appArn:
                  $ref: '#/components/schemas/Arn'
                appVersion:
                  $ref: '#/components/schemas/EntityVersion'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This exception occurs when a conflict with a previous successful write is detected. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /start-app-assessment:
    post:
      operationId: StartAppAssessment
      description: |-
        Creates a new application assessment for an application.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appArn:
                  $ref: '#/components/schemas/Arn'
                appVersion:
                  $ref: '#/components/schemas/EntityVersion'
                assessmentName:
                  $ref: '#/components/schemas/EntityName'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This exception occurs when a conflict with a previous successful write is detected. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            This exception occurs when you have exceeded your service quota. To perform the requested action, remove some of the relevant resources, or use Service Quotas to request a service quota increase.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /start-metrics-export:
    post:
      operationId: StartMetricsExport
      description: |-
        Initiates the export task of metrics.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bucketName:
                  $ref: '#/components/schemas/EntityName'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This exception occurs when a conflict with a previous successful write is detected. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            This exception occurs when you have exceeded your service quota. To perform the requested action, remove some of the relevant resources, or use Service Quotas to request a service quota increase.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /start-resource-grouping-recommendation-task:
    post:
      operationId: StartResourceGroupingRecommendationTask
      description: |-
        Starts grouping recommendation task.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appArn:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This exception occurs when a conflict with a previous successful write is detected. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /update-app:
    post:
      operationId: UpdateApp
      description: |-
        Updates an application.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appArn:
                  $ref: '#/components/schemas/Arn'
                description:
                  $ref: '#/components/schemas/EntityDescription'
                policyArn:
                  $ref: '#/components/schemas/Arn'
                clearResiliencyPolicyArn:
                  $ref: '#/components/schemas/BooleanOptional'
                assessmentSchedule:
                  $ref: '#/components/schemas/AppAssessmentScheduleType'
                permissionModel:
                  $ref: '#/components/schemas/PermissionModel'
                eventSubscriptions:
                  $ref: '#/components/schemas/EventSubscriptionList'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This exception occurs when a conflict with a previous successful write is detected. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /update-app-version:
    post:
      operationId: UpdateAppVersion
      description: |-
        Updates the Resilience Hub application version.

        This API updates the Resilience Hub application draft version. To use this information for running resiliency assessments, you must publish the Resilience Hub application using the `PublishAppVersion` API.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appArn:
                  $ref: '#/components/schemas/Arn'
                additionalInfo:
                  $ref: '#/components/schemas/AdditionalInfoMap'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This exception occurs when a conflict with a previous successful write is detected. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /update-app-version-app-component:
    post:
      operationId: UpdateAppVersionAppComponent
      description: |-
        Updates an existing Application Component in the Resilience Hub application.

        This API updates the Resilience Hub application draft version. To use this Application Component for running assessments, you must publish the Resilience Hub application using the `PublishAppVersion` API.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appArn:
                  $ref: '#/components/schemas/Arn'
                id:
                  $ref: '#/components/schemas/String255'
                name:
                  $ref: '#/components/schemas/String255'
                type:
                  $ref: '#/components/schemas/String255'
                additionalInfo:
                  $ref: '#/components/schemas/AdditionalInfoMap'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This exception occurs when a conflict with a previous successful write is detected. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /update-app-version-resource:
    post:
      operationId: UpdateAppVersionResource
      description: |-
        Updates the resource details in the Resilience Hub application.

          * This action has no effect outside Resilience Hub.

          * This API updates the Resilience Hub application draft version. To use this resource for running resiliency assessments, you must publish the Resilience Hub application using the `PublishAppVersion` API.

          * To update application version with new `physicalResourceID`, you must call `ResolveAppVersionResources` API.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appArn:
                  $ref: '#/components/schemas/Arn'
                resourceName:
                  $ref: '#/components/schemas/EntityName'
                logicalResourceId:
                  $ref: '#/components/schemas/LogicalResourceId'
                physicalResourceId:
                  $ref: '#/components/schemas/String2048'
                awsRegion:
                  $ref: '#/components/schemas/AwsRegion'
                awsAccountId:
                  $ref: '#/components/schemas/CustomerId'
                resourceType:
                  $ref: '#/components/schemas/String255'
                appComponents:
                  $ref: '#/components/schemas/AppComponentNameList'
                additionalInfo:
                  $ref: '#/components/schemas/AdditionalInfoMap'
                excluded:
                  $ref: '#/components/schemas/BooleanOptional'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This exception occurs when a conflict with a previous successful write is detected. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            This exception occurs when you have exceeded your service quota. To perform the requested action, remove some of the relevant resources, or use Service Quotas to request a service quota increase.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /update-resiliency-policy:
    post:
      operationId: UpdateResiliencyPolicy
      description: |-
        Updates a resiliency policy.

        Resilience Hub allows you to provide a value of zero for `rtoInSecs` and `rpoInSecs` of your resiliency policy. But, while assessing your application, the lowest possible assessment result is near zero. Hence, if you provide value zero for `rtoInSecs` and `rpoInSecs`, the estimated workload RTO and estimated workload RPO result will be near zero and the **Compliance status** for your application will be set to **Policy breached**.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                policyArn:
                  $ref: '#/components/schemas/Arn'
                policyName:
                  $ref: '#/components/schemas/EntityName'
                policyDescription:
                  $ref: '#/components/schemas/EntityDescription'
                dataLocationConstraint:
                  $ref: '#/components/schemas/DataLocationConstraint'
                tier:
                  $ref: '#/components/schemas/ResiliencyPolicyTier'
                policy:
                  $ref: '#/components/schemas/DisruptionPolicy'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This exception occurs when a conflict with a previous successful write is detected. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Resilience Hub service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception occurs when the specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception occurs when you have exceeded the limit on the number of requests per second.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception occurs when a request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    AcceptGroupingRecommendationEntries:
      type: array
      items:
        $ref: '#/components/schemas/AcceptGroupingRecommendationEntry'
    AcceptGroupingRecommendationEntry:
      type: object
      properties:
        groupingRecommendationId:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Indicates the identifier of the grouping recommendation.
      required:
      - groupingRecommendationId
      description: Indicates the grouping recommendation you have accepted to include
        in your application.
    AcceptResourceGroupingRecommendationsRequest:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        entries:
          allOf:
          - $ref: '#/components/schemas/AcceptGroupingRecommendationEntries'
          description: List of resource grouping recommendations you want to include
            in your application.
      required:
      - appArn
      - entries
    AcceptResourceGroupingRecommendationsResponse:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        failedEntries:
          allOf:
          - $ref: '#/components/schemas/FailedGroupingRecommendationEntries'
          description: List of resource grouping recommendations that could not be
            included in your application.
      required:
      - appArn
      - failedEntries
    AccessDeniedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String500'
      description: You don't have permissions to perform the requested operation.
        The user or role that is making the request must have at least one IAM permissions
        policy attached that grants the required permissions.
    AddDraftAppVersionResourceMappingsRequest:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        resourceMappings:
          allOf:
          - $ref: '#/components/schemas/ResourceMappingList'
          description: Mappings used to map logical resources from the template to
            physical resources. You can use the mapping type `CFN_STACK` if the application
            template uses a logical stack name. Or you can map individual resources
            by using the mapping type `RESOURCE`. We recommend using the mapping type
            `CFN_STACK` if the application is backed by a CloudFormation stack.
      required:
      - appArn
      - resourceMappings
    AddDraftAppVersionResourceMappingsResponse:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        appVersion:
          allOf:
          - $ref: '#/components/schemas/EntityVersion'
          description: The version of the application.
        resourceMappings:
          allOf:
          - $ref: '#/components/schemas/ResourceMappingList'
          description: List of sources that are used to map a logical resource from
            the template to a physical resource. You can use sources such as CloudFormation,
            Terraform state files, AppRegistry applications, or Amazon EKS.
      required:
      - appArn
      - appVersion
      - resourceMappings
    AdditionalInfoMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/AdditionalInfoValueList'
    AdditionalInfoValueList:
      type: array
      items:
        $ref: '#/components/schemas/String1024'
    Alarm:
      type: object
      properties:
        alarmArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: Amazon Resource Name (ARN) of the Amazon CloudWatch alarm.
        source:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Indicates the source of the Amazon CloudWatch alarm. That is,
            it indicates if the alarm was created using Resilience Hub recommendation
            (`AwsResilienceHub`), or if you had created the alarm in Amazon CloudWatch
            (`Customer`).
      description: Indicates the Amazon CloudWatch alarm detected while running an
        assessment.
    AlarmRecommendation:
      type: object
      properties:
        recommendationId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: Identifier of the alarm recommendation.
        referenceId:
          allOf:
          - $ref: '#/components/schemas/SpecReferenceId'
          description: Reference identifier of the alarm recommendation.
        name:
          allOf:
          - $ref: '#/components/schemas/String500'
          description: Name of the alarm recommendation.
        description:
          allOf:
          - $ref: '#/components/schemas/EntityDescription'
          description: Description of the alarm recommendation.
        type:
          allOf:
          - $ref: '#/components/schemas/AlarmType'
          description: Type of alarm recommendation.
        appComponentName:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          description: Application Component name for the CloudWatch alarm recommendation.
            This name is saved as the first item in the `appComponentNames` list.
        items:
          allOf:
          - $ref: '#/components/schemas/RecommendationItemList'
          description: List of CloudWatch alarm recommendations.
        prerequisite:
          allOf:
          - $ref: '#/components/schemas/String500'
          description: The prerequisite for the alarm recommendation.
        appComponentNames:
          allOf:
          - $ref: '#/components/schemas/AppComponentNameList'
          description: List of Application Component names for the CloudWatch alarm
            recommendation.
        recommendationStatus:
          allOf:
          - $ref: '#/components/schemas/RecommendationStatus'
          description: Status of the recommended Amazon CloudWatch alarm.
      required:
      - recommendationId
      - referenceId
      - name
      - type
      description: Defines a recommendation for a CloudWatch alarm.
    AlarmRecommendationList:
      type: array
      items:
        $ref: '#/components/schemas/AlarmRecommendation'
    AlarmReferenceIdList:
      type: array
      items:
        $ref: '#/components/schemas/String500'
    AlarmType:
      type: string
      enum:
      - Metric
      - Composite
      - Canary
      - Logs
      - Event
    App:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        name:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          description: Name for the application.
        description:
          allOf:
          - $ref: '#/components/schemas/EntityDescription'
          description: Optional description for an application.
        policyArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the resiliency policy. The format
            for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:resiliency-policy/`policy-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        creationTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          description: Date and time when the application was created.
        status:
          allOf:
          - $ref: '#/components/schemas/AppStatusType'
          description: Status of the application.
        complianceStatus:
          allOf:
          - $ref: '#/components/schemas/AppComplianceStatusType'
          description: Current status of compliance for the resiliency policy.
        lastAppComplianceEvaluationTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          description: Date and time the most recent compliance evaluation.
        resiliencyScore:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: Current resiliency score for the application.
        lastResiliencyScoreEvaluationTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          description: Date and time the most recent resiliency score evaluation.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Tags assigned to the resource. A tag is a label that you assign
            to an Amazon Web Services resource. Each tag consists of a key/value pair.
        assessmentSchedule:
          allOf:
          - $ref: '#/components/schemas/AppAssessmentScheduleType'
          description: Assessment execution schedule with 'Daily' or 'Disabled' values.
        permissionModel:
          allOf:
          - $ref: '#/components/schemas/PermissionModel'
          description: Defines the roles and credentials that Resilience Hub would
            use while creating the application, importing its resources, and running
            an assessment.
        eventSubscriptions:
          allOf:
          - $ref: '#/components/schemas/EventSubscriptionList'
          description: The list of events you would like to subscribe and get notification
            for. Currently, Resilience Hub supports notifications only for **Drift
            detected** and **Scheduled assessment failure** events.
        driftStatus:
          allOf:
          - $ref: '#/components/schemas/AppDriftStatusType'
          description: Indicates if compliance drifts (deviations) were detected while
            running an assessment for your application.
        lastDriftEvaluationTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          description: Indicates the last time that a drift was evaluated.
        rtoInSecs:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          description: Recovery Time Objective (RTO) in seconds.
        rpoInSecs:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          description: Recovery Point Objective (RPO) in seconds.
        awsApplicationArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: Amazon Resource Name (ARN) of Resource Groups group that is
            integrated with an AppRegistry application. For more information about
            ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.
      required:
      - appArn
      - name
      - creationTime
      description: Defines an Resilience Hub application.
    AppAssessment:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        appVersion:
          allOf:
          - $ref: '#/components/schemas/EntityVersion'
          description: Version of an application.
        invoker:
          allOf:
          - $ref: '#/components/schemas/AssessmentInvoker'
          description: The entity that invoked the assessment.
        cost:
          allOf:
          - $ref: '#/components/schemas/Cost'
          description: Cost for the application.
        resiliencyScore:
          allOf:
          - $ref: '#/components/schemas/ResiliencyScore'
          description: Current resiliency score for an application.
        compliance:
          allOf:
          - $ref: '#/components/schemas/AssessmentCompliance'
          description: Application compliance against the resiliency policy.
        complianceStatus:
          allOf:
          - $ref: '#/components/schemas/ComplianceStatus'
          description: Current status of the compliance for the resiliency policy.
        assessmentStatus:
          allOf:
          - $ref: '#/components/schemas/AssessmentStatus'
          description: Current status of the assessment for the resiliency policy.
        startTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          description: Starting time for the action.
        endTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          description: End time for the action.
        message:
          allOf:
          - $ref: '#/components/schemas/String500'
          description: Error or warning message from the assessment execution
        assessmentName:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          description: Name of the assessment.
        assessmentArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the assessment. The format for
            this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app-assessment/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        policy:
          allOf:
          - $ref: '#/components/schemas/ResiliencyPolicy'
          description: Resiliency policy of an application.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Tags assigned to the resource. A tag is a label that you assign
            to an Amazon Web Services resource. Each tag consists of a key/value pair.
        resourceErrorsDetails:
          allOf:
          - $ref: '#/components/schemas/ResourceErrorsDetails'
          description: A resource error object containing a list of errors retrieving
            an application's resources.
        versionName:
          allOf:
          - $ref: '#/components/schemas/EntityVersion'
          description: Version name of the published application.
        driftStatus:
          allOf:
          - $ref: '#/components/schemas/DriftStatus'
          description: Indicates if compliance drifts (deviations) were detected while
            running an assessment for your application.
        summary:
          allOf:
          - $ref: '#/components/schemas/AssessmentSummary'
          description: 'Indicates the AI-generated summary for the Resilience Hub
            assessment, providing a concise overview that highlights the top risks
            and recommendations.


            This property is available only in the US East (N. Virginia) Region.'
      required:
      - invoker
      - assessmentStatus
      - assessmentArn
      description: Defines an application assessment.
    AppAssessmentScheduleType:
      type: string
      enum:
      - Disabled
      - Daily
    AppAssessmentSummary:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        appVersion:
          allOf:
          - $ref: '#/components/schemas/EntityVersion'
          description: Version of an application.
        assessmentStatus:
          allOf:
          - $ref: '#/components/schemas/AssessmentStatus'
          description: Current status of the assessment for the resiliency policy.
        invoker:
          allOf:
          - $ref: '#/components/schemas/AssessmentInvoker'
          description: Entity that invoked the assessment.
        startTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          description: Starting time for the action.
        endTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          description: End time for the action.
        message:
          allOf:
          - $ref: '#/components/schemas/String500'
          description: Message from the assessment run.
        assessmentName:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          description: Name of the assessment.
        assessmentArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the assessment. The format for
            this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app-assessment/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        complianceStatus:
          allOf:
          - $ref: '#/components/schemas/ComplianceStatus'
          description: Current status of compliance for the resiliency policy.
        cost:
          allOf:
          - $ref: '#/components/schemas/Cost'
          description: Cost for an application.
        resiliencyScore:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: Current resiliency score for the application.
        versionName:
          allOf:
          - $ref: '#/components/schemas/EntityVersion'
          description: Name of an application version.
        driftStatus:
          allOf:
          - $ref: '#/components/schemas/DriftStatus'
          description: Indicates if compliance drifts (deviations) were detected while
            running an assessment for your application.
      required:
      - assessmentStatus
      - assessmentArn
      description: Defines an application assessment summary.
    AppAssessmentSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/AppAssessmentSummary'
    AppComplianceStatusType:
      type: string
      enum:
      - PolicyBreached
      - PolicyMet
      - NotAssessed
      - ChangesDetected
      - NotApplicable
      - MissingPolicy
    AppComponent:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/EntityName255'
          description: Name of the Application Component.
        type:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: The type of Application Component.
        id:
          allOf:
          - $ref: '#/components/schemas/EntityName255'
          description: Identifier of the Application Component.
        additionalInfo:
          allOf:
          - $ref: '#/components/schemas/AdditionalInfoMap'
          description: 'Additional configuration parameters for an Resilience Hub
            application. If you want to implement `additionalInfo` through the Resilience
            Hub console rather than using an API call, see [Configure the application
            configuration parameters](https://docs.aws.amazon.com/resilience-hub/latest/userguide/app-config-param.html).


            Currently, this parameter accepts a key-value mapping (in a string format)
            of only one failover region and one associated account.


            Key: `"failover-regions"`


            Value: `"[{"region":"<REGION>", "accounts":[{"id":"<ACCOUNT_ID>"}]}]"`'
      required:
      - name
      - type
      description: Defines an Application Component.
    AppComponentCompliance:
      type: object
      properties:
        cost:
          allOf:
          - $ref: '#/components/schemas/Cost'
          description: The cost for the application.
        appComponentName:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          description: Name of the Application Component.
        compliance:
          allOf:
          - $ref: '#/components/schemas/AssessmentCompliance'
          description: The compliance of the Application Component against the resiliency
            policy.
        message:
          allOf:
          - $ref: '#/components/schemas/String500'
          description: The compliance message.
        status:
          allOf:
          - $ref: '#/components/schemas/ComplianceStatus'
          description: Status of the action.
        resiliencyScore:
          allOf:
          - $ref: '#/components/schemas/ResiliencyScore'
          description: The current resiliency score for the application.
      description: Defines the compliance of an Application Component against the
        resiliency policy.
    AppComponentList:
      type: array
      items:
        $ref: '#/components/schemas/AppComponent'
    AppComponentNameList:
      type: array
      items:
        $ref: '#/components/schemas/String255'
    AppDriftStatusType:
      type: string
      enum:
      - NotChecked
      - NotDetected
      - Detected
    AppInputSource:
      type: object
      properties:
        sourceName:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: The name of the input source.
        importType:
          allOf:
          - $ref: '#/components/schemas/ResourceMappingType'
          description: The resource type of the input source.
        sourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the input source. For more
            information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.
        terraformSource:
          allOf:
          - $ref: '#/components/schemas/TerraformSource'
          description: The name of the Terraform s3 state ﬁle.
        resourceCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of resources.
        eksSourceClusterNamespace:
          allOf:
          - $ref: '#/components/schemas/EksSourceClusterNamespace'
          description: The namespace on your Amazon Elastic Kubernetes Service cluster.
      required:
      - importType
      description: The list of Resilience Hub application input sources.
    AppInputSourceList:
      type: array
      items:
        $ref: '#/components/schemas/AppInputSource'
    AppStatusType:
      type: string
      enum:
      - Active
      - Deleting
    AppSummary:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        name:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          description: The name of the application.
        description:
          allOf:
          - $ref: '#/components/schemas/EntityDescription'
          description: The optional description for an app.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          description: Date and time when the app was created.
        complianceStatus:
          allOf:
          - $ref: '#/components/schemas/AppComplianceStatusType'
          description: The current status of compliance for the resiliency policy.
        resiliencyScore:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The current resiliency score for the application.
        assessmentSchedule:
          allOf:
          - $ref: '#/components/schemas/AppAssessmentScheduleType'
          description: Assessment execution schedule with 'Daily' or 'Disabled' values.
        status:
          allOf:
          - $ref: '#/components/schemas/AppStatusType'
          description: Status of the application.
        driftStatus:
          allOf:
          - $ref: '#/components/schemas/AppDriftStatusType'
          description: Indicates if compliance drifts (deviations) were detected while
            running an assessment for your application.
        lastAppComplianceEvaluationTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          description: Date and time of the most recent compliance evaluation.
        rtoInSecs:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          description: Recovery Time Objective (RTO) in seconds.
        rpoInSecs:
          allOf:
          - $ref: '#/components/schemas/IntegerOptional'
          description: Recovery Point Objective (RPO) in seconds.
        awsApplicationArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: Amazon Resource Name (ARN) of Resource Groups group that is
            integrated with an AppRegistry application. For more information about
            ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.
      required:
      - appArn
      - name
      - creationTime
      description: Defines an application summary.
    AppSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/AppSummary'
    AppTemplateBody:
      type: string
      pattern: ^[\w\s:,-\.'\/{}\[\]:"\\]+$
      minLength: 0
      maxLength: 409600
    AppVersionList:
      type: array
      items:
        $ref: '#/components/schemas/AppVersionSummary'
    AppVersionSummary:
      type: object
      properties:
        appVersion:
          allOf:
          - $ref: '#/components/schemas/EntityVersion'
          description: Version of an application.
        identifier:
          allOf:
          - $ref: '#/components/schemas/LongOptional'
          description: Identifier of the application version.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          description: Creation time of the application version.
        versionName:
          allOf:
          - $ref: '#/components/schemas/EntityVersion'
          description: Name of the application version.
      required:
      - appVersion
      description: Version of an application.
    Arn:
      type: string
      pattern: ^arn:(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:([a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]):[0-9]{12}:[A-Za-z0-9/][A-Za-z0-9:_/+.-]{0,1023}$
    ArnList:
      type: array
      items:
        $ref: '#/components/schemas/Arn'
    AssessmentCompliance:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/DisruptionCompliance'
    AssessmentInvoker:
      type: string
      enum:
      - User
      - System
    AssessmentRiskRecommendation:
      type: object
      properties:
        risk:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: 'Indicates the description of the potential risk identified
            in the application as part of the Resilience Hub assessment.


            This property is available only in the US East (N. Virginia) Region.'
        recommendation:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: 'Indicates the recommendation provided by the Resilience Hub
            to address the identified risks in the application.


            This property is available only in the US East (N. Virginia) Region.'
        appComponents:
          allOf:
          - $ref: '#/components/schemas/AppComponentNameList'
          description: 'Indicates the Application Components (AppComponents) that
            were assessed as part of the assessment and are associated with the identified
            risk and recommendation.


            This property is available only in the US East (N. Virginia) Region.'
      description: 'Indicates a specific risk identified in the Resilience Hub assessment
        and the corresponding recommendation provided to address that risk.


        The assessment summary generated by large language models (LLMs) on Amazon
        Bedrock are only suggestions. The current level of generative AI technology
        is not perfect and LLMs are not infallible. Bias and incorrect answers, although
        rare, should be expected. Review each recommendation in the assessment summary
        before you use the output from an LLM.


        This property is available only in the US East (N. Virginia) Region.'
    AssessmentRiskRecommendationList:
      type: array
      items:
        $ref: '#/components/schemas/AssessmentRiskRecommendation'
    AssessmentStatus:
      type: string
      enum:
      - Pending
      - InProgress
      - Failed
      - Success
    AssessmentStatusList:
      type: array
      items:
        $ref: '#/components/schemas/AssessmentStatus'
    AssessmentSummary:
      type: object
      properties:
        summary:
          allOf:
          - $ref: '#/components/schemas/String500'
          description: 'Indicates a concise summary that provides an overview of the
            Resilience Hub assessment.


            This property is available only in the US East (N. Virginia) Region.'
        riskRecommendations:
          allOf:
          - $ref: '#/components/schemas/AssessmentRiskRecommendationList'
          description: 'Indicates the top risks and recommendations identified by
            the Resilience Hub assessment, each representing a specific risk and the
            corresponding recommendation to address it.


            This property is available only in the US East (N. Virginia) Region.'
      description: 'Indicates the AI-generated summary for the Resilience Hub assessment,
        providing a concise overview that highlights the top risks and recommendations.


        This property is available only in the US East (N. Virginia) Region.'
    AwsRegion:
      type: string
      pattern: ^[a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]$
    BatchUpdateRecommendationStatusFailedEntries:
      type: array
      items:
        $ref: '#/components/schemas/BatchUpdateRecommendationStatusFailedEntry'
    BatchUpdateRecommendationStatusFailedEntry:
      type: object
      properties:
        entryId:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: 'An identifier of an entry in this batch that is used to communicate
            the result.


            The `entryId`s of a batch request need to be unique within a request.'
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: Indicates the error that occurred while excluding an operational
            recommendation.
      required:
      - entryId
      - errorMessage
      description: List of operational recommendations that did not get included or
        excluded.
    BatchUpdateRecommendationStatusRequest:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        requestEntries:
          allOf:
          - $ref: '#/components/schemas/UpdateRecommendationStatusRequestEntries'
          description: Defines the list of operational recommendations that need to
            be included or excluded.
      required:
      - appArn
      - requestEntries
    BatchUpdateRecommendationStatusResponse:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        successfulEntries:
          allOf:
          - $ref: '#/components/schemas/BatchUpdateRecommendationStatusSuccessfulEntries'
          description: A list of items that were included or excluded.
        failedEntries:
          allOf:
          - $ref: '#/components/schemas/BatchUpdateRecommendationStatusFailedEntries'
          description: A list of items with error details about each item, which could
            not be included or excluded.
      required:
      - appArn
      - successfulEntries
      - failedEntries
    BatchUpdateRecommendationStatusSuccessfulEntries:
      type: array
      items:
        $ref: '#/components/schemas/BatchUpdateRecommendationStatusSuccessfulEntry'
    BatchUpdateRecommendationStatusSuccessfulEntry:
      type: object
      properties:
        entryId:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: 'An identifier for an entry in this batch that is used to communicate
            the result.


            The `entryId`s of a batch request need to be unique within a request.'
        referenceId:
          allOf:
          - $ref: '#/components/schemas/SpecReferenceId'
          description: Reference identifier of the operational recommendation.
        item:
          allOf:
          - $ref: '#/components/schemas/UpdateRecommendationStatusItem'
          description: The operational recommendation item.
        excluded:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          description: Indicates if the operational recommendation was successfully
            excluded.
        appComponentId:
          allOf:
          - $ref: '#/components/schemas/EntityName255'
          description: Indicates the identifier of an AppComponent.
        excludeReason:
          allOf:
          - $ref: '#/components/schemas/ExcludeRecommendationReason'
          description: Indicates the reason for excluding an operational recommendation.
      required:
      - entryId
      - referenceId
      - excluded
      description: List of operational recommendations that were successfully included
        or excluded.
    BooleanOptional:
      type: boolean
    ClientToken:
      type: string
      pattern: ^[A-Za-z0-9_.-]{0,63}$
      minLength: 1
      maxLength: 63
    ComplianceDrift:
      type: object
      properties:
        entityId:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Identifier of an entity in which drift was detected. For compliance
            drift, the entity ID can be either application ID or the AppComponent
            ID.
        entityType:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: The type of entity in which drift was detected. For compliance
            drifts, Resilience Hub supports `AWS::ResilienceHub::AppComponent` and
            `AWS::ResilienceHub::Application`.
        driftType:
          allOf:
          - $ref: '#/components/schemas/DriftType'
          description: The type of drift detected. Currently, Resilience Hub supports
            only **ApplicationCompliance** drift type.
        appId:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Identifier of your application.
        appVersion:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Published version of your application on which drift was detected.
        expectedReferenceId:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Assessment identifier of a previous assessment of the same
            application version. Resilience Hub uses the previous assessment (associated
            with the reference identifier) to compare the compliance with the current
            assessment to identify drifts.
        expectedValue:
          allOf:
          - $ref: '#/components/schemas/AssessmentCompliance'
          description: The expected compliance value of an entity.
        actualReferenceId:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Assessment identifier that is associated with this drift item.
        actualValue:
          allOf:
          - $ref: '#/components/schemas/AssessmentCompliance'
          description: Actual compliance value of the entity.
        diffType:
          allOf:
          - $ref: '#/components/schemas/DifferenceType'
          description: Difference type between actual and expected recovery point
            objective (RPO) and recovery time objective (RTO) values. Currently, Resilience
            Hub supports only `NotEqual` difference type.
      description: Indicates the compliance drifts (recovery time objective (RTO)
        and recovery point objective (RPO)) that were detected for an assessed entity.
    ComplianceDriftList:
      type: array
      items:
        $ref: '#/components/schemas/ComplianceDrift'
    ComplianceStatus:
      type: string
      enum:
      - PolicyBreached
      - PolicyMet
      - NotApplicable
      - MissingPolicy
    ComponentCompliancesList:
      type: array
      items:
        $ref: '#/components/schemas/AppComponentCompliance'
    ComponentRecommendation:
      type: object
      properties:
        appComponentName:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          description: Name of the Application Component.
        recommendationStatus:
          allOf:
          - $ref: '#/components/schemas/RecommendationComplianceStatus'
          description: Status of the recommendation.
        configRecommendations:
          allOf:
          - $ref: '#/components/schemas/ConfigRecommendationList'
          description: List of recommendations.
      required:
      - appComponentName
      - recommendationStatus
      - configRecommendations
      description: Defines recommendations for an Resilience Hub Application Component,
        returned as an object. This object contains component names, configuration
        recommendations, and recommendation statuses.
    ComponentRecommendationList:
      type: array
      items:
        $ref: '#/components/schemas/ComponentRecommendation'
    Condition:
      type: object
      properties:
        field:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Indicates the field in the metric.
        operator:
          allOf:
          - $ref: '#/components/schemas/ConditionOperatorType'
          description: Indicates the type of operator or comparison to be used when
            evaluating a condition against the specified field.
        value:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Indicates the value or data against which a condition is evaluated.
      required:
      - field
      - operator
      description: Indicates the condition based on which you want to filter the metrics.
    ConditionList:
      type: array
      items:
        $ref: '#/components/schemas/Condition'
    ConditionOperatorType:
      type: string
      enum:
      - Equals
      - NotEquals
      - GreaterThen
      - GreaterOrEquals
      - LessThen
      - LessOrEquals
    ConfigRecommendation:
      type: object
      properties:
        cost:
          allOf:
          - $ref: '#/components/schemas/Cost'
          description: The cost for the application.
        appComponentName:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          description: Name of the Application Component.
        compliance:
          allOf:
          - $ref: '#/components/schemas/AssessmentCompliance'
          description: The current compliance against the resiliency policy before
            applying the configuration change.
        recommendationCompliance:
          allOf:
          - $ref: '#/components/schemas/RecommendationCompliance'
          description: The expected compliance against the resiliency policy after
            applying the configuration change.
        optimizationType:
          allOf:
          - $ref: '#/components/schemas/ConfigRecommendationOptimizationType'
          description: The type of optimization.
        name:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          description: The name of the recommendation configuration.
        description:
          allOf:
          - $ref: '#/components/schemas/EntityDescription'
          description: The optional description for an app.
        suggestedChanges:
          allOf:
          - $ref: '#/components/schemas/SuggestedChangesList'
          description: List of the suggested configuration changes.
        haArchitecture:
          allOf:
          - $ref: '#/components/schemas/HaArchitecture'
          description: The architecture type.
        referenceId:
          allOf:
          - $ref: '#/components/schemas/SpecReferenceId'
          description: Reference identifier for the recommendation configuration.
      required:
      - optimizationType
      - name
      - referenceId
      description: Defines a recommendation configuration.
    ConfigRecommendationList:
      type: array
      items:
        $ref: '#/components/schemas/ConfigRecommendation'
    ConfigRecommendationOptimizationType:
      type: string
      enum:
      - LeastCost
      - LeastChange
      - BestAZRecovery
      - LeastErrors
      - BestAttainable
      - BestRegionRecovery
    ConflictException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String500'
        resourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: The identifier of the resource that the exception applies to.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The type of the resource that the exception applies to.
      description: This exception occurs when a conflict with a previous successful
        write is detected. This generally occurs when the previous write did not have
        time to propagate to the host serving the current request. A retry (with appropriate
        backoff logic) is the recommended response to this exception.
    Cost:
      type: object
      properties:
        amount:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The cost amount.
        currency:
          allOf:
          - $ref: '#/components/schemas/CurrencyCode'
          description: The cost currency, for example `USD`.
        frequency:
          allOf:
          - $ref: '#/components/schemas/CostFrequency'
          description: The cost frequency.
      required:
      - amount
      - currency
      - frequency
      description: Defines a cost object.
    CostFrequency:
      type: string
      enum:
      - Hourly
      - Daily
      - Monthly
      - Yearly
    CreateAppRequest:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          description: Name of the application.
        description:
          allOf:
          - $ref: '#/components/schemas/EntityDescription'
          description: The optional description for an app.
        policyArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the resiliency policy. The format
            for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:resiliency-policy/`policy-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Tags assigned to the resource. A tag is a label that you assign
            to an Amazon Web Services resource. Each tag consists of a key/value pair.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: Used for an idempotency token. A client token is a unique,
            case-sensitive string of up to 64 ASCII characters. You should not reuse
            the same client token for other API requests.
        assessmentSchedule:
          allOf:
          - $ref: '#/components/schemas/AppAssessmentScheduleType'
          description: Assessment execution schedule with 'Daily' or 'Disabled' values.
        permissionModel:
          allOf:
          - $ref: '#/components/schemas/PermissionModel'
          description: Defines the roles and credentials that Resilience Hub would
            use while creating the application, importing its resources, and running
            an assessment.
        eventSubscriptions:
          allOf:
          - $ref: '#/components/schemas/EventSubscriptionList'
          description: The list of events you would like to subscribe and get notification
            for. Currently, Resilience Hub supports only **Drift detected** and **Scheduled
            assessment failure** events notification.
        awsApplicationArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: Amazon Resource Name (ARN) of Resource Groups group that is
            integrated with an AppRegistry application. For more information about
            ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.
      required:
      - name
    CreateAppResponse:
      type: object
      properties:
        app:
          allOf:
          - $ref: '#/components/schemas/App'
          description: The created application returned as an object with details
            including compliance status, creation time, description, resiliency score,
            and more.
      required:
      - app
    CreateAppVersionAppComponentRequest:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        id:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Identifier of the Application Component.
        name:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Name of the Application Component.
        type:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Type of Application Component. For more information about the
            types of Application Component, see [Grouping resources in an AppComponent](https://docs.aws.amazon.com/resilience-hub/latest/userguide/AppComponent.grouping.html).
        additionalInfo:
          allOf:
          - $ref: '#/components/schemas/AdditionalInfoMap'
          description: Currently, there is no supported additional information for
            Application Components.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: Used for an idempotency token. A client token is a unique,
            case-sensitive string of up to 64 ASCII characters. You should not reuse
            the same client token for other API requests.
      required:
      - appArn
      - name
      - type
    CreateAppVersionAppComponentResponse:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        appVersion:
          allOf:
          - $ref: '#/components/schemas/EntityVersion'
          description: Resilience Hub application version.
        appComponent:
          allOf:
          - $ref: '#/components/schemas/AppComponent'
          description: List of Application Components that belong to this resource.
      required:
      - appArn
      - appVersion
    CreateAppVersionResourceRequest:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        resourceName:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          description: Name of the resource.
        logicalResourceId:
          allOf:
          - $ref: '#/components/schemas/LogicalResourceId'
          description: Logical identifier of the resource.
        physicalResourceId:
          allOf:
          - $ref: '#/components/schemas/String2048'
          description: Physical identifier of the resource.
        awsRegion:
          allOf:
          - $ref: '#/components/schemas/AwsRegion'
          description: Amazon Web Services region that owns the physical resource.
        awsAccountId:
          allOf:
          - $ref: '#/components/schemas/CustomerId'
          description: Amazon Web Services account that owns the physical resource.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Type of resource.
        appComponents:
          allOf:
          - $ref: '#/components/schemas/AppComponentNameList'
          description: List of Application Components that this resource belongs to.
            If an Application Component is not part of the Resilience Hub application,
            it will be added.
        additionalInfo:
          allOf:
          - $ref: '#/components/schemas/AdditionalInfoMap'
          description: Currently, there is no supported additional information for
            resources.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: Used for an idempotency token. A client token is a unique,
            case-sensitive string of up to 64 ASCII characters. You should not reuse
            the same client token for other API requests.
      required:
      - appArn
      - logicalResourceId
      - physicalResourceId
      - resourceType
      - appComponents
    CreateAppVersionResourceResponse:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        appVersion:
          allOf:
          - $ref: '#/components/schemas/EntityVersion'
          description: Resilience Hub application version.
        physicalResource:
          allOf:
          - $ref: '#/components/schemas/PhysicalResource'
          description: Defines a physical resource. A physical resource is a resource
            that exists in your account. It can be identified using an Amazon Resource
            Name (ARN) or a Resilience Hub-native identifier.
      required:
      - appArn
      - appVersion
    CreateRecommendationTemplateRequest:
      type: object
      properties:
        recommendationIds:
          allOf:
          - $ref: '#/components/schemas/RecommendationIdList'
          description: Identifiers for the recommendations used to create a recommendation
            template.
        format:
          allOf:
          - $ref: '#/components/schemas/TemplateFormat'
          description: "The format for the recommendation template.\n\nCfnJson\n\n\
            \    \n\nThe template is CloudFormation JSON.\n\nCfnYaml\n\n    \n\nThe\
            \ template is CloudFormation YAML."
        recommendationTypes:
          allOf:
          - $ref: '#/components/schemas/RenderRecommendationTypeList'
          description: "An array of strings that specify the recommendation template\
            \ type or types.\n\nAlarm\n\n    \n\nThe template is an AlarmRecommendation\
            \ template.\n\nSop\n\n    \n\nThe template is a SopRecommendation template.\n\
            \nTest\n\n    \n\nThe template is a TestRecommendation template."
        assessmentArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the assessment. The format for
            this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app-assessment/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        name:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          description: The name for the recommendation template.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: Used for an idempotency token. A client token is a unique,
            case-sensitive string of up to 64 ASCII characters. You should not reuse
            the same client token for other API requests.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Tags assigned to the resource. A tag is a label that you assign
            to an Amazon Web Services resource. Each tag consists of a key/value pair.
        bucketName:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          description: The name of the Amazon S3 bucket that will contain the recommendation
            template.
      required:
      - assessmentArn
      - name
    CreateRecommendationTemplateResponse:
      type: object
      properties:
        recommendationTemplate:
          allOf:
          - $ref: '#/components/schemas/RecommendationTemplate'
          description: The newly created recommendation template, returned as an object.
            This object includes the template's name, format, status, tags, Amazon
            S3 bucket location, and more.
    CreateResiliencyPolicyRequest:
      type: object
      properties:
        policyName:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          description: Name of the resiliency policy.
        policyDescription:
          allOf:
          - $ref: '#/components/schemas/EntityDescription'
          description: Description of the resiliency policy.
        dataLocationConstraint:
          allOf:
          - $ref: '#/components/schemas/DataLocationConstraint'
          description: Specifies a high-level geographical location constraint for
            where your resilience policy data can be stored.
        tier:
          allOf:
          - $ref: '#/components/schemas/ResiliencyPolicyTier'
          description: The tier for this resiliency policy, ranging from the highest
            severity (`MissionCritical`) to lowest (`NonCritical`).
        policy:
          allOf:
          - $ref: '#/components/schemas/DisruptionPolicy'
          description: The type of resiliency policy to be created, including the
            recovery time objective (RTO) and recovery point objective (RPO) in seconds.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: Used for an idempotency token. A client token is a unique,
            case-sensitive string of up to 64 ASCII characters. You should not reuse
            the same client token for other API requests.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Tags assigned to the resource. A tag is a label that you assign
            to an Amazon Web Services resource. Each tag consists of a key/value pair.
      required:
      - policyName
      - tier
      - policy
    CreateResiliencyPolicyResponse:
      type: object
      properties:
        policy:
          allOf:
          - $ref: '#/components/schemas/ResiliencyPolicy'
          description: The type of resiliency policy that was created, including the
            recovery time objective (RTO) and recovery point objective (RPO) in seconds.
      required:
      - policy
    CurrencyCode:
      type: string
      minLength: 0
      maxLength: 3
    CustomerId:
      type: string
      pattern: ^[0-9]{12}$
    DataLocationConstraint:
      type: string
      enum:
      - AnyLocation
      - SameContinent
      - SameCountry
    DeleteAppAssessmentRequest:
      type: object
      properties:
        assessmentArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the assessment. The format for
            this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app-assessment/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: Used for an idempotency token. A client token is a unique,
            case-sensitive string of up to 64 ASCII characters. You should not reuse
            the same client token for other API requests.
      required:
      - assessmentArn
    DeleteAppAssessmentResponse:
      type: object
      properties:
        assessmentArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the assessment. The format for
            this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app-assessment/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        assessmentStatus:
          allOf:
          - $ref: '#/components/schemas/AssessmentStatus'
          description: The current status of the assessment for the resiliency policy.
      required:
      - assessmentArn
      - assessmentStatus
    DeleteAppInputSourceRequest:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        sourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the imported resource you
            want to remove from the Resilience Hub application. For more information
            about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.
        terraformSource:
          allOf:
          - $ref: '#/components/schemas/TerraformSource'
          description: The imported Terraform s3 state ﬁle you want to remove from
            the Resilience Hub application.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: Used for an idempotency token. A client token is a unique,
            case-sensitive string of up to 64 ASCII characters. You should not reuse
            the same client token for other API requests.
        eksSourceClusterNamespace:
          allOf:
          - $ref: '#/components/schemas/EksSourceClusterNamespace'
          description: The namespace on your Amazon Elastic Kubernetes Service cluster
            that you want to delete from the Resilience Hub application.
      required:
      - appArn
    DeleteAppInputSourceResponse:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        appInputSource:
          allOf:
          - $ref: '#/components/schemas/AppInputSource'
          description: Name of the input source from where the application resource
            is imported from.
    DeleteAppRequest:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        forceDelete:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          description: A boolean option to force the deletion of an Resilience Hub
            application.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: Used for an idempotency token. A client token is a unique,
            case-sensitive string of up to 64 ASCII characters. You should not reuse
            the same client token for other API requests.
      required:
      - appArn
    DeleteAppResponse:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
      required:
      - appArn
    DeleteAppVersionAppComponentRequest:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        id:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Identifier of the Application Component.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: Used for an idempotency token. A client token is a unique,
            case-sensitive string of up to 64 ASCII characters. You should not reuse
            the same client token for other API requests.
      required:
      - appArn
      - id
    DeleteAppVersionAppComponentResponse:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        appVersion:
          allOf:
          - $ref: '#/components/schemas/EntityVersion'
          description: Resilience Hub application version.
        appComponent:
          allOf:
          - $ref: '#/components/schemas/AppComponent'
          description: List of Application Components that belong to this resource.
      required:
      - appArn
      - appVersion
    DeleteAppVersionResourceRequest:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        resourceName:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          description: Name of the resource.
        logicalResourceId:
          allOf:
          - $ref: '#/components/schemas/LogicalResourceId'
          description: Logical identifier of the resource.
        physicalResourceId:
          allOf:
          - $ref: '#/components/schemas/String2048'
          description: Physical identifier of the resource.
        awsRegion:
          allOf:
          - $ref: '#/components/schemas/AwsRegion'
          description: Amazon Web Services region that owns the physical resource.
        awsAccountId:
          allOf:
          - $ref: '#/components/schemas/CustomerId'
          description: Amazon Web Services account that owns the physical resource.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: Used for an idempotency token. A client token is a unique,
            case-sensitive string of up to 64 ASCII characters. You should not reuse
            the same client token for other API requests.
      required:
      - appArn
    DeleteAppVersionResourceResponse:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        appVersion:
          allOf:
          - $ref: '#/components/schemas/EntityVersion'
          description: Resilience Hub application version.
        physicalResource:
          allOf:
          - $ref: '#/components/schemas/PhysicalResource'
          description: Defines a physical resource. A physical resource is a resource
            that exists in your account. It can be identified using an Amazon Resource
            Name (ARN) or a Resilience Hub-native identifier.
      required:
      - appArn
      - appVersion
    DeleteRecommendationTemplateRequest:
      type: object
      properties:
        recommendationTemplateArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) for a recommendation template.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: Used for an idempotency token. A client token is a unique,
            case-sensitive string of up to 64 ASCII characters. You should not reuse
            the same client token for other API requests.
      required:
      - recommendationTemplateArn
    DeleteRecommendationTemplateResponse:
      type: object
      properties:
        recommendationTemplateArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) for a recommendation template.
        status:
          allOf:
          - $ref: '#/components/schemas/RecommendationTemplateStatus'
          description: Status of the action.
      required:
      - recommendationTemplateArn
      - status
    DeleteResiliencyPolicyRequest:
      type: object
      properties:
        policyArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the resiliency policy. The format
            for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:resiliency-policy/`policy-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: Used for an idempotency token. A client token is a unique,
            case-sensitive string of up to 64 ASCII characters. You should not reuse
            the same client token for other API requests.
      required:
      - policyArn
    DeleteResiliencyPolicyResponse:
      type: object
      properties:
        policyArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the resiliency policy. The format
            for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:resiliency-policy/`policy-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
      required:
      - policyArn
    DescribeAppAssessmentRequest:
      type: object
      properties:
        assessmentArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the assessment. The format for
            this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app-assessment/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
      required:
      - assessmentArn
    DescribeAppAssessmentResponse:
      type: object
      properties:
        assessment:
          allOf:
          - $ref: '#/components/schemas/AppAssessment'
          description: The assessment for an Resilience Hub application, returned
            as an object. This object includes Amazon Resource Names (ARNs), compliance
            information, compliance status, cost, messages, resiliency scores, and
            more.
      required:
      - assessment
    DescribeAppRequest:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
      required:
      - appArn
    DescribeAppResponse:
      type: object
      properties:
        app:
          allOf:
          - $ref: '#/components/schemas/App'
          description: The specified application, returned as an object with details
            including compliance status, creation time, description, resiliency score,
            and more.
      required:
      - app
    DescribeAppVersionAppComponentRequest:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        appVersion:
          allOf:
          - $ref: '#/components/schemas/EntityVersion'
          description: Resilience Hub application version.
        id:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Identifier of the Application Component.
      required:
      - appArn
      - appVersion
      - id
    DescribeAppVersionAppComponentResponse:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        appVersion:
          allOf:
          - $ref: '#/components/schemas/EntityVersion'
          description: Resilience Hub application version.
        appComponent:
          allOf:
          - $ref: '#/components/schemas/AppComponent'
          description: List of Application Components that belong to this resource.
      required:
      - appArn
      - appVersion
    DescribeAppVersionRequest:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        appVersion:
          allOf:
          - $ref: '#/components/schemas/EntityVersion'
          description: Resilience Hub application version.
      required:
      - appArn
      - appVersion
    DescribeAppVersionResourceRequest:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        appVersion:
          allOf:
          - $ref: '#/components/schemas/EntityVersion'
          description: Resilience Hub application version.
        resourceName:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          description: Name of the resource.
        logicalResourceId:
          allOf:
          - $ref: '#/components/schemas/LogicalResourceId'
          description: Logical identifier of the resource.
        physicalResourceId:
          allOf:
          - $ref: '#/components/schemas/String2048'
          description: Physical identifier of the resource.
        awsRegion:
          allOf:
          - $ref: '#/components/schemas/AwsRegion'
          description: Amazon Web Services region that owns the physical resource.
        awsAccountId:
          allOf:
          - $ref: '#/components/schemas/CustomerId'
          description: Amazon Web Services account that owns the physical resource.
      required:
      - appArn
      - appVersion
    DescribeAppVersionResourceResponse:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        appVersion:
          allOf:
          - $ref: '#/components/schemas/EntityVersion'
          description: Resilience Hub application version.
        physicalResource:
          allOf:
          - $ref: '#/components/schemas/PhysicalResource'
          description: Defines a physical resource. A physical resource is a resource
            that exists in your account. It can be identified using an Amazon Resource
            Name (ARN) or a Resilience Hub-native identifier.
      required:
      - appArn
      - appVersion
    DescribeAppVersionResourcesResolutionStatusRequest:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        appVersion:
          allOf:
          - $ref: '#/components/schemas/EntityVersion'
          description: The version of the application.
        resolutionId:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: The identifier for a specific resolution.
      required:
      - appArn
      - appVersion
    DescribeAppVersionResourcesResolutionStatusResponse:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        appVersion:
          allOf:
          - $ref: '#/components/schemas/EntityVersion'
          description: The version of the application.
        resolutionId:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: The identifier for a specific resolution.
        status:
          allOf:
          - $ref: '#/components/schemas/ResourceResolutionStatusType'
          description: Status of the action.
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/String500'
          description: The returned error message for the request.
      required:
      - appArn
      - appVersion
      - resolutionId
      - status
    DescribeAppVersionResponse:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        appVersion:
          allOf:
          - $ref: '#/components/schemas/EntityVersion'
          description: Resilience Hub application version.
        additionalInfo:
          allOf:
          - $ref: '#/components/schemas/AdditionalInfoMap'
          description: 'Additional configuration parameters for an Resilience Hub
            application. If you want to implement `additionalInfo` through the Resilience
            Hub console rather than using an API call, see [Configure the application
            configuration parameters](https://docs.aws.amazon.com/resilience-hub/latest/userguide/app-config-param.html).


            Currently, this parameter supports only failover region and account.'
      required:
      - appArn
      - appVersion
    DescribeAppVersionTemplateRequest:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        appVersion:
          allOf:
          - $ref: '#/components/schemas/EntityVersion'
          description: The version of the application.
      required:
      - appArn
      - appVersion
    DescribeAppVersionTemplateResponse:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        appVersion:
          allOf:
          - $ref: '#/components/schemas/EntityVersion'
          description: The version of the application.
        appTemplateBody:
          allOf:
          - $ref: '#/components/schemas/AppTemplateBody'
          description: "A JSON string that provides information about your application\
            \ structure. To learn more about the `appTemplateBody` template, see the\
            \ sample template provided in the _Examples_ section.\n\nThe `appTemplateBody`\
            \ JSON string has the following structure:\n\n  * **`resources` **\n\n\
            The list of logical resources that must be included in the Resilience\
            \ Hub application.\n\nType: Array\n\nDon't add the resources that you\
            \ want to exclude.\n\nEach `resources` array item includes the following\
            \ fields:\n\n    * _`logicalResourceId` _\n\nLogical identifier of the\
            \ resource.\n\nType: Object\n\nEach `logicalResourceId` object includes\
            \ the following fields:\n\n      * `identifier`\n\nIdentifier of the resource.\n\
            \nType: String\n\n      * `logicalStackName`\n\nThe name of the CloudFormation\
            \ stack this resource belongs to.\n\nType: String\n\n      * `resourceGroupName`\n\
            \nThe name of the resource group this resource belongs to.\n\nType: String\n\
            \n      * `terraformSourceName`\n\nThe name of the Terraform S3 state\
            \ file this resource belongs to.\n\nType: String\n\n      * `eksSourceName`\n\
            \nName of the Amazon Elastic Kubernetes Service cluster and namespace\
            \ this resource belongs to.\n\nThis parameter accepts values in \"eks-cluster/namespace\"\
            \ format.\n\nType: String\n\n    * _`type` _\n\nThe type of resource.\n\
            \nType: string\n\n    * _`name` _\n\nThe name of the resource.\n\nType:\
            \ String\n\n    * `additionalInfo`\n\nAdditional configuration parameters\
            \ for an Resilience Hub application. If you want to implement `additionalInfo`\
            \ through the Resilience Hub console rather than using an API call, see\
            \ [Configure the application configuration parameters](https://docs.aws.amazon.com/resilience-hub/latest/userguide/app-config-param.html).\n\
            \nCurrently, this parameter accepts a key-value mapping (in a string format)\
            \ of only one failover region and one associated account.\n\nKey: `\"\
            failover-regions\"`\n\nValue: `\"[{\"region\":\"<REGION>\", \"accounts\"\
            :[{\"id\":\"<ACCOUNT_ID>\"}]}]\"`\n\n  * **`appComponents` **\n\nList\
            \ of Application Components that this resource belongs to. If an Application\
            \ Component is not part of the Resilience Hub application, it will be\
            \ added.\n\nType: Array\n\nEach `appComponents` array item includes the\
            \ following fields:\n\n    * `name`\n\nName of the Application Component.\n\
            \nType: String\n\n    * `type`\n\nType of Application Component. For more\
            \ information about the types of Application Component, see [Grouping\
            \ resources in an AppComponent](https://docs.aws.amazon.com/resilience-hub/latest/userguide/AppComponent.grouping.html).\n\
            \nType: String\n\n    * `resourceNames`\n\nThe list of included resources\
            \ that are assigned to the Application Component.\n\nType: Array of strings\n\
            \n    * `additionalInfo`\n\nAdditional configuration parameters for an\
            \ Resilience Hub application. If you want to implement `additionalInfo`\
            \ through the Resilience Hub console rather than using an API call, see\
            \ [Configure the application configuration parameters](https://docs.aws.amazon.com/resilience-hub/latest/userguide/app-config-param.html).\n\
            \nCurrently, this parameter accepts a key-value mapping (in a string format)\
            \ of only one failover region and one associated account.\n\nKey: `\"\
            failover-regions\"`\n\nValue: `\"[{\"region\":\"<REGION>\", \"accounts\"\
            :[{\"id\":\"<ACCOUNT_ID>\"}]}]\"`\n\n  * **`excludedResources` **\n\n\
            The list of logical resource identifiers to be excluded from the application.\n\
            \nType: Array\n\nDon't add the resources that you want to include.\n\n\
            Each `excludedResources` array item includes the following fields:\n\n\
            \    * _`logicalResourceIds` _\n\nLogical identifier of the resource.\n\
            \nType: Object\n\nYou can configure only one of the following fields:\n\
            \n      * `logicalStackName`\n\n      * `resourceGroupName`\n\n      *\
            \ `terraformSourceName`\n\n      * `eksSourceName`\n\nEach `logicalResourceIds`\
            \ object includes the following fields:\n\n      * `identifier`\n\nIdentifier\
            \ of the resource.\n\nType: String\n\n      * `logicalStackName`\n\nThe\
            \ name of the CloudFormation stack this resource belongs to.\n\nType:\
            \ String\n\n      * `resourceGroupName`\n\nThe name of the resource group\
            \ this resource belongs to.\n\nType: String\n\n      * `terraformSourceName`\n\
            \nThe name of the Terraform S3 state file this resource belongs to.\n\n\
            Type: String\n\n      * `eksSourceName`\n\nName of the Amazon Elastic\
            \ Kubernetes Service cluster and namespace this resource belongs to.\n\
            \nThis parameter accepts values in \"eks-cluster/namespace\" format.\n\
            \nType: String\n\n  * **`version` **\n\nResilience Hub application version.\n\
            \n  * `additionalInfo`\n\nAdditional configuration parameters for an Resilience\
            \ Hub application. If you want to implement `additionalInfo` through the\
            \ Resilience Hub console rather than using an API call, see [Configure\
            \ the application configuration parameters](https://docs.aws.amazon.com/resilience-hub/latest/userguide/app-config-param.html).\n\
            \nCurrently, this parameter accepts a key-value mapping (in a string format)\
            \ of only one failover region and one associated account.\n\nKey: `\"\
            failover-regions\"`\n\nValue: `\"[{\"region\":\"<REGION>\", \"accounts\"\
            :[{\"id\":\"<ACCOUNT_ID>\"}]}]\"`"
      required:
      - appArn
      - appVersion
      - appTemplateBody
    DescribeDraftAppVersionResourcesImportStatusRequest:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
      required:
      - appArn
    DescribeDraftAppVersionResourcesImportStatusResponse:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        appVersion:
          allOf:
          - $ref: '#/components/schemas/EntityVersion'
          description: The version of the application.
        status:
          allOf:
          - $ref: '#/components/schemas/ResourceImportStatusType'
          description: Status of the action.
        statusChangeTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          description: The time when the status last changed.
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/String500'
          description: The error message returned for the resource request.
        errorDetails:
          allOf:
          - $ref: '#/components/schemas/ErrorDetailList'
          description: List of errors that were encountered while importing resources.
      required:
      - appArn
      - appVersion
      - status
      - statusChangeTime
    DescribeMetricsExportRequest:
      type: object
      properties:
        metricsExportId:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Identifier of the metrics export task.
      required:
      - metricsExportId
    DescribeMetricsExportResponse:
      type: object
      properties:
        metricsExportId:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Identifier for the metrics export task.
        status:
          allOf:
          - $ref: '#/components/schemas/MetricsExportStatusType'
          description: Indicates the status of the metrics export task.
        exportLocation:
          allOf:
          - $ref: '#/components/schemas/S3Location'
          description: Specifies the name of the Amazon S3 bucket where the exported
            metrics is stored.
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/String500'
          description: Explains the error that occurred while exporting the metrics.
      required:
      - metricsExportId
      - status
    DescribeResiliencyPolicyRequest:
      type: object
      properties:
        policyArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the resiliency policy. The format
            for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:resiliency-policy/`policy-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
      required:
      - policyArn
    DescribeResiliencyPolicyResponse:
      type: object
      properties:
        policy:
          allOf:
          - $ref: '#/components/schemas/ResiliencyPolicy'
          description: Information about the specific resiliency policy, returned
            as an object. This object includes creation time, data location constraints,
            its name, description, tags, the recovery time objective (RTO) and recovery
            point objective (RPO) in seconds, and more.
      required:
      - policy
    DescribeResourceGroupingRecommendationTaskRequest:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        groupingId:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Identifier of the grouping recommendation task.
      required:
      - appArn
    DescribeResourceGroupingRecommendationTaskResponse:
      type: object
      properties:
        groupingId:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Identifier of the grouping recommendation task.
        status:
          allOf:
          - $ref: '#/components/schemas/ResourcesGroupingRecGenStatusType'
          description: Status of the action.
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/String500'
          description: Error that occurred while generating a grouping recommendation.
      required:
      - groupingId
      - status
    DifferenceType:
      type: string
      enum:
      - NotEqual
      - Added
      - Removed
    DisruptionCompliance:
      type: object
      properties:
        achievableRtoInSecs:
          allOf:
          - $ref: '#/components/schemas/Seconds'
          description: The Recovery Time Objective (RTO) that is achievable, in seconds
        currentRtoInSecs:
          allOf:
          - $ref: '#/components/schemas/Seconds'
          description: The current RTO, in seconds.
        rtoReferenceId:
          allOf:
          - $ref: '#/components/schemas/String500'
          description: Reference identifier of the RTO.
        rtoDescription:
          allOf:
          - $ref: '#/components/schemas/String500'
          description: The RTO description.
        currentRpoInSecs:
          allOf:
          - $ref: '#/components/schemas/Seconds'
          description: The current RPO, in seconds.
        rpoReferenceId:
          allOf:
          - $ref: '#/components/schemas/String500'
          description: Reference identifier of the RPO .
        rpoDescription:
          allOf:
          - $ref: '#/components/schemas/String500'
          description: The RPO description.
        complianceStatus:
          allOf:
          - $ref: '#/components/schemas/ComplianceStatus'
          description: The current status of compliance for the resiliency policy.
        achievableRpoInSecs:
          allOf:
          - $ref: '#/components/schemas/Seconds'
          description: The Recovery Point Objective (RPO) that is achievable, in seconds.
        message:
          allOf:
          - $ref: '#/components/schemas/String500'
          description: The disruption compliance message.
      required:
      - complianceStatus
      description: Defines the compliance against the resiliency policy for a disruption.
    DisruptionPolicy:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/FailurePolicy'
    DisruptionResiliencyScore:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Double'
    DisruptionType:
      type: string
      enum:
      - Software
      - Hardware
      - AZ
      - Region
    DocumentName:
      type: string
      minLength: 1
      maxLength: 500
    Double:
      type: number
      format: double
      default: 0
    DriftStatus:
      type: string
      enum:
      - NotChecked
      - NotDetected
      - Detected
    DriftType:
      type: string
      enum:
      - ApplicationCompliance
      - AppComponentResiliencyComplianceStatus
    EksNamespace:
      type: string
      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
      minLength: 1
      maxLength: 63
    EksNamespaceList:
      type: array
      items:
        $ref: '#/components/schemas/EksNamespace'
    EksSource:
      type: object
      properties:
        eksClusterArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Amazon Elastic Kubernetes
            Service cluster. The format for this ARN is: arn:`aws`:eks:`region`:`account-id`:cluster/`cluster-name`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        namespaces:
          allOf:
          - $ref: '#/components/schemas/EksNamespaceList'
          description: The list of namespaces located on your Amazon Elastic Kubernetes
            Service cluster.
      required:
      - eksClusterArn
      - namespaces
      description: The input source of the Amazon Elastic Kubernetes Service cluster.
    EksSourceClusterNamespace:
      type: object
      properties:
        eksClusterArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Amazon Elastic Kubernetes
            Service cluster. The format for this ARN is: arn:`aws`:eks:`region`:`account-id`:cluster/`cluster-name`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        namespace:
          allOf:
          - $ref: '#/components/schemas/EksNamespace'
          description: Name of the namespace that is located on your Amazon Elastic
            Kubernetes Service cluster.
      required:
      - eksClusterArn
      - namespace
      description: The input source of the namespace that is located on your Amazon
        Elastic Kubernetes Service cluster.
    EksSourceList:
      type: array
      items:
        $ref: '#/components/schemas/EksSource'
    EntityDescription:
      type: string
      minLength: 0
      maxLength: 500
    EntityId:
      type: string
      pattern: ^\S{1,255}$
    EntityName:
      type: string
      pattern: ^[A-Za-z0-9][A-Za-z0-9_\-]{1,59}$
    EntityName255:
      type: string
      pattern: ^[A-Za-z0-9][A-Za-z0-9_\-]{0,254}$
    EntityNameList:
      type: array
      items:
        $ref: '#/components/schemas/EntityName'
    EntityVersion:
      type: string
      pattern: ^\S{1,50}$
    ErrorDetail:
      type: object
      properties:
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: Provides additional information about the error.
      description: Indicates the error that was encountered while importing a resource.
    ErrorDetailList:
      type: array
      items:
        $ref: '#/components/schemas/ErrorDetail'
    ErrorMessage:
      type: string
      minLength: 0
      maxLength: 500
    EstimatedCostTier:
      type: string
      enum:
      - L1
      - L2
      - L3
      - L4
    EventSubscription:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Unique name to identify an event subscription.
        eventType:
          allOf:
          - $ref: '#/components/schemas/EventType'
          description: The type of event you would like to subscribe and get notification
            for. Currently, Resilience Hub supports notifications only for **Drift
            detected** (`DriftDetected`) and **Scheduled assessment failure** (`ScheduledAssessmentFailure`)
            events.
        snsTopicArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Amazon Simple Notification
            Service topic. The format for this ARN is: `arn:partition:sns:region:account:topic-name`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
      required:
      - name
      - eventType
      description: Indicates an event you would like to subscribe and get notification
        for. Currently, Resilience Hub supports notifications only for **Drift detected**
        and **Scheduled assessment failure** events.
    EventSubscriptionList:
      type: array
      items:
        $ref: '#/components/schemas/EventSubscription'
    EventType:
      type: string
      enum:
      - ScheduledAssessmentFailure
      - DriftDetected
    ExcludeRecommendationReason:
      type: string
      enum:
      - AlreadyImplemented
      - NotRelevant
      - ComplexityOfImplementation
    Experiment:
      type: object
      properties:
        experimentArn:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Amazon Resource Name (ARN) of the FIS experiment.
        experimentTemplateId:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Identifier of the FIS experiment template.
      description: Indicates the FIS experiment detected while running an assessment.
    FailedGroupingRecommendationEntries:
      type: array
      items:
        $ref: '#/components/schemas/FailedGroupingRecommendationEntry'
    FailedGroupingRecommendationEntry:
      type: object
      properties:
        groupingRecommendationId:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Indicates the identifier of the grouping recommendation.
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: Indicates the error that occurred while implementing a grouping
            recommendation.
      required:
      - groupingRecommendationId
      - errorMessage
      description: Indicates the accepted grouping recommendation whose implementation
        failed.
    FailurePolicy:
      type: object
      properties:
        rtoInSecs:
          allOf:
          - $ref: '#/components/schemas/Seconds'
          description: Recovery Time Objective (RTO) in seconds.
        rpoInSecs:
          allOf:
          - $ref: '#/components/schemas/Seconds'
          description: Recovery Point Objective (RPO) in seconds.
      required:
      - rtoInSecs
      - rpoInSecs
      description: Defines a failure policy.
    Field:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Name of the field.
        aggregation:
          allOf:
          - $ref: '#/components/schemas/FieldAggregationType'
          description: (Optional) Indicates the type of aggregation or summary operation
            (such as Sum, Average, and so on) to be performed on a particular field
            or set of data.
      required:
      - name
      description: Indicates the field or attribute of a resource or data structure
        on which a condition is being applied or evaluated.
    FieldAggregationType:
      type: string
      enum:
      - Min
      - Max
      - Sum
      - Avg
      - Count
    FieldList:
      type: array
      items:
        $ref: '#/components/schemas/Field'
    GroupingAppComponent:
      type: object
      properties:
        appComponentId:
          allOf:
          - $ref: '#/components/schemas/EntityName255'
          description: Indicates the identifier of an AppComponent.
        appComponentType:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Indicates the type of an AppComponent.
        appComponentName:
          allOf:
          - $ref: '#/components/schemas/EntityName255'
          description: Indicates the name of an AppComponent.
      required:
      - appComponentId
      - appComponentType
      - appComponentName
      description: Creates a new recommended Application Component (AppComponent).
    GroupingRecommendation:
      type: object
      properties:
        groupingRecommendationId:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Indicates all the reasons available for rejecting a grouping
            recommendation.
        groupingAppComponent:
          allOf:
          - $ref: '#/components/schemas/GroupingAppComponent'
          description: Indicates the name of the recommended Application Component
            (AppComponent).
        resources:
          allOf:
          - $ref: '#/components/schemas/GroupingResourceList'
          description: Indicates the resources that are grouped in a recommended AppComponent.
        score:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: Indicates the confidence level of the grouping recommendation.
        recommendationReasons:
          allOf:
          - $ref: '#/components/schemas/String255List'
          description: Indicates all the reasons available for rejecting a grouping
            recommendation.
        status:
          allOf:
          - $ref: '#/components/schemas/GroupingRecommendationStatusType'
          description: Indicates the status of grouping resources into AppComponents.
        confidenceLevel:
          allOf:
          - $ref: '#/components/schemas/GroupingRecommendationConfidenceLevel'
          description: Indicates the confidence level of Resilience Hub on the grouping
            recommendation.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          description: Indicates the creation time of the grouping recommendation.
        rejectionReason:
          allOf:
          - $ref: '#/components/schemas/GroupingRecommendationRejectionReason'
          description: Indicates the reason you had selected while rejecting a grouping
            recommendation.
      required:
      - groupingRecommendationId
      - groupingAppComponent
      - resources
      - score
      - recommendationReasons
      - status
      - confidenceLevel
      - creationTime
      description: Creates a new grouping recommendation.
    GroupingRecommendationConfidenceLevel:
      type: string
      enum:
      - High
      - Medium
    GroupingRecommendationList:
      type: array
      items:
        $ref: '#/components/schemas/GroupingRecommendation'
    GroupingRecommendationRejectionReason:
      type: string
      enum:
      - DistinctBusinessPurpose
      - SeparateDataConcern
      - DistinctUserGroupHandling
      - Other
    GroupingRecommendationStatusType:
      type: string
      enum:
      - Accepted
      - Rejected
      - PendingDecision
    GroupingResource:
      type: object
      properties:
        resourceName:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Indicates the resource name.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Indicates the resource type.
        physicalResourceId:
          allOf:
          - $ref: '#/components/schemas/PhysicalResourceId'
          description: Indicates the physical identifier of the resource.
        logicalResourceId:
          allOf:
          - $ref: '#/components/schemas/LogicalResourceId'
          description: Indicates the logical identifier of the resource.
        sourceAppComponentIds:
          allOf:
          - $ref: '#/components/schemas/String255List'
          description: Indicates the identifier of the source AppComponents in which
            the resources were previously grouped into.
      required:
      - resourceName
      - resourceType
      - physicalResourceId
      - logicalResourceId
      - sourceAppComponentIds
      description: Indicates the resource that will be grouped in the recommended
        Application Component (AppComponent).
    GroupingResourceList:
      type: array
      items:
        $ref: '#/components/schemas/GroupingResource'
    HaArchitecture:
      type: string
      enum:
      - MultiSite
      - WarmStandby
      - PilotLight
      - BackupAndRestore
      - NoRecoveryPlan
    IamRoleArn:
      type: string
      pattern: ^arn:(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):iam::[0-9]{12}:role/(([^/][!-~]+/){1,511})?[A-Za-z0-9_+=,.@-]{1,64}$
    IamRoleArnList:
      type: array
      items:
        $ref: '#/components/schemas/IamRoleArn'
    IamRoleName:
      type: string
      pattern: ^([^/]([!-~]+/){1,511})?[A-Za-z0-9_+=,.@-]{1,64}$
    ImportResourcesToDraftAppVersionRequest:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        sourceArns:
          allOf:
          - $ref: '#/components/schemas/ArnList'
          description: The Amazon Resource Names (ARNs) for the resources.
        terraformSources:
          allOf:
          - $ref: '#/components/schemas/TerraformSourceList'
          description: A list of terraform file s3 URLs you need to import.
        importStrategy:
          allOf:
          - $ref: '#/components/schemas/ResourceImportStrategyType'
          description: The import strategy you would like to set to import resources
            into Resilience Hub application.
        eksSources:
          allOf:
          - $ref: '#/components/schemas/EksSourceList'
          description: The input sources of the Amazon Elastic Kubernetes Service
            resources you need to import.
      required:
      - appArn
    ImportResourcesToDraftAppVersionResponse:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        appVersion:
          allOf:
          - $ref: '#/components/schemas/EntityVersion'
          description: The version of the application.
        sourceArns:
          allOf:
          - $ref: '#/components/schemas/ArnList'
          description: The Amazon Resource Names (ARNs) for the resources you have
            imported.
        status:
          allOf:
          - $ref: '#/components/schemas/ResourceImportStatusType'
          description: Status of the action.
        terraformSources:
          allOf:
          - $ref: '#/components/schemas/TerraformSourceList'
          description: A list of terraform file s3 URLs you have imported.
        eksSources:
          allOf:
          - $ref: '#/components/schemas/EksSourceList'
          description: The input sources of the Amazon Elastic Kubernetes Service
            resources you have imported.
      required:
      - appArn
      - appVersion
      - status
    Integer:
      type: integer
      default: 0
    IntegerOptional:
      type: integer
    InternalServerException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String500'
      description: This exception occurs when there is an internal failure in the
        Resilience Hub service.
    ListAlarmRecommendationsRequest:
      type: object
      properties:
        assessmentArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the assessment. The format for
            this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app-assessment/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Null, or the token from a previous call to get the next set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Maximum number of results to include in the response. If more
            results exist than the specified `MaxResults` value, a token is included
            in the response so that the remaining results can be retrieved.
      required:
      - assessmentArn
    ListAlarmRecommendationsResponse:
      type: object
      properties:
        alarmRecommendations:
          allOf:
          - $ref: '#/components/schemas/AlarmRecommendationList'
          description: The alarm recommendations for an Resilience Hub application,
            returned as an object. This object includes Application Component names,
            descriptions, information about whether a recommendation has already been
            implemented or not, prerequisites, and more.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Token for the next set of results, or null if there are no
            more results.
      required:
      - alarmRecommendations
    ListAppAssessmentComplianceDriftsRequest:
      type: object
      properties:
        assessmentArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the assessment. The format for
            this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app-assessment/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Null, or the token from a previous call to get the next set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Maximum number of compliance drifts requested.
      required:
      - assessmentArn
    ListAppAssessmentComplianceDriftsResponse:
      type: object
      properties:
        complianceDrifts:
          allOf:
          - $ref: '#/components/schemas/ComplianceDriftList'
          description: Indicates compliance drifts (recovery time objective (RTO)
            and recovery point objective (RPO)) detected for an assessed entity.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Null, or the token from a previous call to get the next set
            of results.
      required:
      - complianceDrifts
    ListAppAssessmentResourceDriftsRequest:
      type: object
      properties:
        assessmentArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the assessment. The format for
            this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app-assessment/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Null, or the token from a previous call to get the next set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Maximum number of drift results to include in the response.
            If more results exist than the specified `MaxResults` value, a token is
            included in the response so that the remaining results can be retrieved.
      required:
      - assessmentArn
    ListAppAssessmentResourceDriftsResponse:
      type: object
      properties:
        resourceDrifts:
          allOf:
          - $ref: '#/components/schemas/ResourceDriftList'
          description: Indicates all the resource drifts detected for an assessed
            entity.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Null, or the token from a previous call to get the next set
            of results.
      required:
      - resourceDrifts
    ListAppAssessmentsRequest:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        assessmentName:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          description: The name for the assessment.
        assessmentStatus:
          allOf:
          - $ref: '#/components/schemas/AssessmentStatusList'
          description: The current status of the assessment for the resiliency policy.
        complianceStatus:
          allOf:
          - $ref: '#/components/schemas/ComplianceStatus'
          description: The current status of compliance for the resiliency policy.
        invoker:
          allOf:
          - $ref: '#/components/schemas/AssessmentInvoker'
          description: Specifies the entity that invoked a specific assessment, either
            a `User` or the `System`.
        reverseOrder:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          description: The default is to sort by ascending **startTime**. To sort
            by descending **startTime** , set reverseOrder to `true`.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Null, or the token from a previous call to get the next set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Maximum number of results to include in the response. If more
            results exist than the specified `MaxResults` value, a token is included
            in the response so that the remaining results can be retrieved.
    ListAppAssessmentsResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Token for the next set of results, or null if there are no
            more results.
        assessmentSummaries:
          allOf:
          - $ref: '#/components/schemas/AppAssessmentSummaryList'
          description: The summaries for the specified assessments, returned as an
            object. This object includes application versions, associated Amazon Resource
            Numbers (ARNs), cost, messages, resiliency scores, and more.
      required:
      - assessmentSummaries
    ListAppComponentCompliancesRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Null, or the token from a previous call to get the next set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Maximum number of results to include in the response. If more
            results exist than the specified `MaxResults` value, a token is included
            in the response so that the remaining results can be retrieved.
        assessmentArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the assessment. The format for
            this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app-assessment/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
      required:
      - assessmentArn
    ListAppComponentCompliancesResponse:
      type: object
      properties:
        componentCompliances:
          allOf:
          - $ref: '#/components/schemas/ComponentCompliancesList'
          description: The compliances for an Resilience Hub Application Component,
            returned as an object. This object contains the names of the Application
            Components, compliances, costs, resiliency scores, outage scores, and
            more.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Token for the next set of results, or null if there are no
            more results.
      required:
      - componentCompliances
    ListAppComponentRecommendationsRequest:
      type: object
      properties:
        assessmentArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the assessment. The format for
            this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app-assessment/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Null, or the token from a previous call to get the next set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Maximum number of results to include in the response. If more
            results exist than the specified `MaxResults` value, a token is included
            in the response so that the remaining results can be retrieved.
      required:
      - assessmentArn
    ListAppComponentRecommendationsResponse:
      type: object
      properties:
        componentRecommendations:
          allOf:
          - $ref: '#/components/schemas/ComponentRecommendationList'
          description: The recommendations for an Resilience Hub Application Component,
            returned as an object. This object contains the names of the Application
            Components, configuration recommendations, and recommendation statuses.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Token for the next set of results, or null if there are no
            more results.
      required:
      - componentRecommendations
    ListAppInputSourcesRequest:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        appVersion:
          allOf:
          - $ref: '#/components/schemas/EntityVersion'
          description: Resilience Hub application version.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Null, or the token from a previous call to get the next set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Maximum number of input sources to be displayed per Resilience
            Hub application.
      required:
      - appArn
      - appVersion
    ListAppInputSourcesResponse:
      type: object
      properties:
        appInputSources:
          allOf:
          - $ref: '#/components/schemas/AppInputSourceList'
          description: The list of Resilience Hub application input sources.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Token for the next set of results, or null if there are no
            more results.
      required:
      - appInputSources
    ListAppVersionAppComponentsRequest:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        appVersion:
          allOf:
          - $ref: '#/components/schemas/EntityVersion'
          description: Version of the Application Component.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Null, or the token from a previous call to get the next set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Maximum number of Application Components to be displayed per
            Resilience Hub application version.
      required:
      - appArn
      - appVersion
    ListAppVersionAppComponentsResponse:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        appVersion:
          allOf:
          - $ref: '#/components/schemas/EntityVersion'
          description: Resilience Hub application version.
        appComponents:
          allOf:
          - $ref: '#/components/schemas/AppComponentList'
          description: Defines an Application Component.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Token for the next set of results, or null if there are no
            more results.
      required:
      - appArn
      - appVersion
    ListAppVersionResourceMappingsRequest:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        appVersion:
          allOf:
          - $ref: '#/components/schemas/EntityVersion'
          description: The version of the application.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Null, or the token from a previous call to get the next set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Maximum number of results to include in the response. If more
            results exist than the specified `MaxResults` value, a token is included
            in the response so that the remaining results can be retrieved.
      required:
      - appArn
      - appVersion
    ListAppVersionResourceMappingsResponse:
      type: object
      properties:
        resourceMappings:
          allOf:
          - $ref: '#/components/schemas/ResourceMappingList'
          description: Mappings used to map logical resources from the template to
            physical resources. You can use the mapping type `CFN_STACK` if the application
            template uses a logical stack name. Or you can map individual resources
            by using the mapping type `RESOURCE`. We recommend using the mapping type
            `CFN_STACK` if the application is backed by a CloudFormation stack.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Token for the next set of results, or null if there are no
            more results.
      required:
      - resourceMappings
    ListAppVersionResourcesRequest:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        appVersion:
          allOf:
          - $ref: '#/components/schemas/EntityVersion'
          description: The version of the application.
        resolutionId:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: The identifier for a specific resolution.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Null, or the token from a previous call to get the next set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Maximum number of results to include in the response. If more
            results exist than the specified `MaxResults` value, a token is included
            in the response so that the remaining results can be retrieved.
      required:
      - appArn
      - appVersion
    ListAppVersionResourcesResponse:
      type: object
      properties:
        physicalResources:
          allOf:
          - $ref: '#/components/schemas/PhysicalResourceList'
          description: The physical resources in the application version.
        resolutionId:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: The ID for a specific resolution.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Token for the next set of results, or null if there are no
            more results.
      required:
      - physicalResources
      - resolutionId
    ListAppVersionsRequest:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Null, or the token from a previous call to get the next set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Maximum number of results to include in the response. If more
            results exist than the specified `MaxResults` value, a token is included
            in the response so that the remaining results can be retrieved.
        startTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          description: Lower limit of the time range to filter the application versions.
        endTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          description: Upper limit of the time range to filter the application versions.
      required:
      - appArn
    ListAppVersionsResponse:
      type: object
      properties:
        appVersions:
          allOf:
          - $ref: '#/components/schemas/AppVersionList'
          description: The version of the application.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Token for the next set of results, or null if there are no
            more results.
      required:
      - appVersions
    ListAppsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Null, or the token from a previous call to get the next set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Maximum number of results to include in the response. If more
            results exist than the specified `MaxResults` value, a token is included
            in the response so that the remaining results can be retrieved.
        name:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          description: The name for the one of the listed applications.
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        fromLastAssessmentTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          description: Lower limit of the range that is used to filter applications
            based on their last assessment times.
        toLastAssessmentTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          description: Upper limit of the range that is used to filter the applications
            based on their last assessment times.
        reverseOrder:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          description: The application list is sorted based on the values of `lastAppComplianceEvaluationTime`
            field. By default, application list is sorted in ascending order. To sort
            the application list in descending order, set this field to `True`.
        awsApplicationArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: Amazon Resource Name (ARN) of Resource Groups group that is
            integrated with an AppRegistry application. For more information about
            ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.
    ListAppsResponse:
      type: object
      properties:
        appSummaries:
          allOf:
          - $ref: '#/components/schemas/AppSummaryList'
          description: Summaries for the Resilience Hub application.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Token for the next set of results, or null if there are no
            more results.
      required:
      - appSummaries
    ListMetricsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Null, or the token from a previous call to get the next set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Maximum number of results to include in the response. If more
            results exist than the specified `MaxResults` value, a token is included
            in the response so that the remaining results can be retrieved.
        fields:
          allOf:
          - $ref: '#/components/schemas/FieldList'
          description: Indicates the list of fields in the data source.
        dataSource:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Indicates the data source of the metrics.
        conditions:
          allOf:
          - $ref: '#/components/schemas/ConditionList'
          description: Indicates the list of all the conditions that were applied
            on the metrics.
        sorts:
          allOf:
          - $ref: '#/components/schemas/SortList'
          description: (Optional) Indicates the order in which you want to sort the
            fields in the metrics. By default, the fields are sorted in the ascending
            order.
    ListMetricsResponse:
      type: object
      properties:
        rows:
          allOf:
          - $ref: '#/components/schemas/RowList'
          description: Specifies all the list of metric values for each row of metrics.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Token for the next set of results, or null if there are no
            more results.
      required:
      - rows
    ListRecommendationTemplatesRequest:
      type: object
      properties:
        assessmentArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the assessment. The format for
            this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app-assessment/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        reverseOrder:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          description: The default is to sort by ascending **startTime**. To sort
            by descending **startTime** , set reverseOrder to `true`.
        status:
          allOf:
          - $ref: '#/components/schemas/RecommendationTemplateStatusList'
          description: Status of the action.
        recommendationTemplateArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) for a recommendation template.
        name:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          description: The name for one of the listed recommendation templates.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Null, or the token from a previous call to get the next set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Maximum number of results to include in the response. If more
            results exist than the specified `MaxResults` value, a token is included
            in the response so that the remaining results can be retrieved.
    ListRecommendationTemplatesResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Token for the next set of results, or null if there are no
            more results.
        recommendationTemplates:
          allOf:
          - $ref: '#/components/schemas/RecommendationTemplateList'
          description: The recommendation templates for the Resilience Hub applications.
    ListResiliencyPoliciesRequest:
      type: object
      properties:
        policyName:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          description: Name of the resiliency policy.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Null, or the token from a previous call to get the next set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Maximum number of results to include in the response. If more
            results exist than the specified `MaxResults` value, a token is included
            in the response so that the remaining results can be retrieved.
    ListResiliencyPoliciesResponse:
      type: object
      properties:
        resiliencyPolicies:
          allOf:
          - $ref: '#/components/schemas/ResiliencyPolicies'
          description: The resiliency policies for the Resilience Hub applications.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Token for the next set of results, or null if there are no
            more results.
      required:
      - resiliencyPolicies
    ListResourceGroupingRecommendationsRequest:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Null, or the token from a previous call to get the next set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Maximum number of grouping recommendations to be displayed
            per Resilience Hub application.
    ListResourceGroupingRecommendationsResponse:
      type: object
      properties:
        groupingRecommendations:
          allOf:
          - $ref: '#/components/schemas/GroupingRecommendationList'
          description: List of resource grouping recommendations generated by Resilience
            Hub.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Null, or the token from a previous call to get the next set
            of results.
      required:
      - groupingRecommendations
    ListSopRecommendationsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Null, or the token from a previous call to get the next set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Maximum number of results to include in the response. If more
            results exist than the specified `MaxResults` value, a token is included
            in the response so that the remaining results can be retrieved.
        assessmentArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the assessment. The format for
            this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app-assessment/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
      required:
      - assessmentArn
    ListSopRecommendationsResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Token for the next set of results, or null if there are no
            more results.
        sopRecommendations:
          allOf:
          - $ref: '#/components/schemas/SopRecommendationList'
          description: The standard operating procedure (SOP) recommendations for
            the Resilience Hub applications.
      required:
      - sopRecommendations
    ListSuggestedResiliencyPoliciesRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Null, or the token from a previous call to get the next set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Maximum number of results to include in the response. If more
            results exist than the specified `MaxResults` value, a token is included
            in the response so that the remaining results can be retrieved.
    ListSuggestedResiliencyPoliciesResponse:
      type: object
      properties:
        resiliencyPolicies:
          allOf:
          - $ref: '#/components/schemas/ResiliencyPolicies'
          description: The suggested resiliency policies for the Resilience Hub applications.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Token for the next set of results, or null if there are no
            more results.
      required:
      - resiliencyPolicies
    ListTagsForResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) for a specific resource in your
            Resilience Hub application.
      required:
      - resourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Tags assigned to the resource. A tag is a label that you assign
            to an Amazon Web Services resource. Each tag consists of a key/value pair.
    ListTestRecommendationsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Null, or the token from a previous call to get the next set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Maximum number of results to include in the response. If more
            results exist than the specified `MaxResults` value, a token is included
            in the response so that the remaining results can be retrieved.
        assessmentArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the assessment. The format for
            this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app-assessment/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
      required:
      - assessmentArn
    ListTestRecommendationsResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Token for the next set of results, or null if there are no
            more results.
        testRecommendations:
          allOf:
          - $ref: '#/components/schemas/TestRecommendationList'
          description: The test recommendations for the Resilience Hub application.
      required:
      - testRecommendations
    ListUnsupportedAppVersionResourcesRequest:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        appVersion:
          allOf:
          - $ref: '#/components/schemas/EntityVersion'
          description: The version of the application.
        resolutionId:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: The identifier for a specific resolution.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Null, or the token from a previous call to get the next set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Maximum number of results to include in the response. If more
            results exist than the specified `MaxResults` value, a token is included
            in the response so that the remaining results can be retrieved.
      required:
      - appArn
      - appVersion
    ListUnsupportedAppVersionResourcesResponse:
      type: object
      properties:
        unsupportedResources:
          allOf:
          - $ref: '#/components/schemas/UnsupportedResourceList'
          description: The unsupported resources for the application.
        resolutionId:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: The identifier for a specific resolution.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Token for the next set of results, or null if there are no
            more results.
      required:
      - unsupportedResources
      - resolutionId
    LogicalResourceId:
      type: object
      properties:
        identifier:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Identifier of the resource.
        logicalStackName:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: The name of the CloudFormation stack this resource belongs
            to.
        resourceGroupName:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          description: The name of the resource group that this resource belongs to.
        terraformSourceName:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: The name of the Terraform S3 state file this resource belongs
            to.
        eksSourceName:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: 'Name of the Amazon Elastic Kubernetes Service cluster and
            namespace this resource belongs to.


            This parameter accepts values in "eks-cluster/namespace" format.'
      required:
      - identifier
      description: Defines a logical resource identifier.
    Long:
      type: integer
      format: int64
      default: 0
    LongOptional:
      type: integer
      format: int64
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    MetricsExportStatusType:
      type: string
      enum:
      - Pending
      - InProgress
      - Failed
      - Success
    NextToken:
      type: string
      pattern: ^\S{1,2000}$
    PermissionModel:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/PermissionModelType'
          description: Defines how Resilience Hub scans your resources. It can scan
            for the resources by using a pre-existing role in your Amazon Web Services
            account, or by using the credentials of the current IAM user.
        invokerRoleName:
          allOf:
          - $ref: '#/components/schemas/IamRoleName'
          description: "Existing Amazon Web Services IAM role name in the primary\
            \ Amazon Web Services account that will be assumed by Resilience Hub Service\
            \ Principle to obtain a read-only access to your application resources\
            \ while running an assessment.\n\nIf your IAM role includes a path, you\
            \ must include the path in the `invokerRoleName` parameter. For example,\
            \ if your IAM role's ARN is `arn:aws:iam:123456789012:role/my-path/role-name`,\
            \ you should pass `my-path/role-name`.\n\n  * You must have `iam:passRole`\
            \ permission for this role while creating or updating the application.\n\
            \n  * Currently, `invokerRoleName` accepts only `[A-Za-z0-9_+=,.@-]` characters."
        crossAccountRoleArns:
          allOf:
          - $ref: '#/components/schemas/IamRoleArnList'
          description: "Defines a list of role Amazon Resource Names (ARNs) to be\
            \ used in other accounts. These ARNs are used for querying purposes while\
            \ importing resources and assessing your application.\n\n  * These ARNs\
            \ are required only when your resources are in other accounts and you\
            \ have different role name in these accounts. Else, the invoker role name\
            \ will be used in the other accounts.\n\n  * These roles must have a trust\
            \ policy with `iam:AssumeRole` permission to the invoker role in the primary\
            \ account."
      required:
      - type
      description: Defines the roles and credentials that Resilience Hub would use
        while creating the application, importing its resources, and running an assessment.
    PermissionModelType:
      type: string
      enum:
      - LegacyIAMUser
      - RoleBased
    PhysicalIdentifierType:
      type: string
      enum:
      - Arn
      - Native
    PhysicalResource:
      type: object
      properties:
        resourceName:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          description: The name of the resource.
        logicalResourceId:
          allOf:
          - $ref: '#/components/schemas/LogicalResourceId'
          description: Logical identifier of the resource.
        physicalResourceId:
          allOf:
          - $ref: '#/components/schemas/PhysicalResourceId'
          description: Identifier of the physical resource.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Type of resource.
        appComponents:
          allOf:
          - $ref: '#/components/schemas/AppComponentList'
          description: The application components that belong to this resource.
        additionalInfo:
          allOf:
          - $ref: '#/components/schemas/AdditionalInfoMap'
          description: 'Additional configuration parameters for an Resilience Hub
            application. If you want to implement `additionalInfo` through the Resilience
            Hub console rather than using an API call, see [Configure the application
            configuration parameters](https://docs.aws.amazon.com/resilience-hub/latest/userguide/app-config-param.html).


            Currently, this parameter accepts a key-value mapping (in a string format)
            of only one failover region and one associated account.


            Key: `"failover-regions"`


            Value: `"[{"region":"<REGION>", "accounts":[{"id":"<ACCOUNT_ID>"}]}]"`'
        excluded:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          description: Indicates if a resource is included or excluded from the assessment.
        sourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceSourceType'
          description: Type of input source.
        parentResourceName:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          description: Name of the parent resource.
      required:
      - logicalResourceId
      - physicalResourceId
      - resourceType
      description: Defines a physical resource. A physical resource is a resource
        that exists in your account. It can be identified using an Amazon Resource
        Name (ARN) or an Resilience Hub-native identifier.
    PhysicalResourceId:
      type: object
      properties:
        identifier:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Identifier of the physical resource.
        type:
          allOf:
          - $ref: '#/components/schemas/PhysicalIdentifierType'
          description: "Specifies the type of physical resource identifier.\n\nArn\n\
            \n    \n\nThe resource identifier is an Amazon Resource Name (ARN) and\
            \ it can identify the following list of resources:\n\n  * `AWS::ECS::Service`\n\
            \n  * `AWS::EFS::FileSystem`\n\n  * `AWS::ElasticLoadBalancingV2::LoadBalancer`\n\
            \n  * `AWS::Lambda::Function`\n\n  * `AWS::SNS::Topic`\n\nNative\n\n \
            \   \n\nThe resource identifier is an Resilience Hub-native identifier\
            \ and it can identify the following list of resources:\n\n  * `AWS::ApiGateway::RestApi`\n\
            \n  * `AWS::ApiGatewayV2::Api`\n\n  * `AWS::AutoScaling::AutoScalingGroup`\n\
            \n  * `AWS::DocDB::DBCluster`\n\n  * `AWS::DocDB::DBGlobalCluster`\n\n\
            \  * `AWS::DocDB::DBInstance`\n\n  * `AWS::DynamoDB::GlobalTable`\n\n\
            \  * `AWS::DynamoDB::Table`\n\n  * `AWS::EC2::EC2Fleet`\n\n  * `AWS::EC2::Instance`\n\
            \n  * `AWS::EC2::NatGateway`\n\n  * `AWS::EC2::Volume`\n\n  * `AWS::ElasticLoadBalancing::LoadBalancer`\n\
            \n  * `AWS::RDS::DBCluster`\n\n  * `AWS::RDS::DBInstance`\n\n  * `AWS::RDS::GlobalCluster`\n\
            \n  * `AWS::Route53::RecordSet`\n\n  * `AWS::S3::Bucket`\n\n  * `AWS::SQS::Queue`"
        awsRegion:
          allOf:
          - $ref: '#/components/schemas/AwsRegion'
          description: The Amazon Web Services Region that the physical resource is
            located in.
        awsAccountId:
          allOf:
          - $ref: '#/components/schemas/CustomerId'
          description: The Amazon Web Services account that owns the physical resource.
      required:
      - identifier
      - type
      description: Defines a physical resource identifier.
    PhysicalResourceList:
      type: array
      items:
        $ref: '#/components/schemas/PhysicalResource'
    PublishAppVersionRequest:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        versionName:
          allOf:
          - $ref: '#/components/schemas/EntityVersion'
          description: Name of the application version.
      required:
      - appArn
    PublishAppVersionResponse:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        appVersion:
          allOf:
          - $ref: '#/components/schemas/EntityVersion'
          description: The version of the application.
        identifier:
          allOf:
          - $ref: '#/components/schemas/LongOptional'
          description: Identifier of the application version.
        versionName:
          allOf:
          - $ref: '#/components/schemas/EntityVersion'
          description: Name of the application version.
      required:
      - appArn
    PutDraftAppVersionTemplateRequest:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        appTemplateBody:
          allOf:
          - $ref: '#/components/schemas/AppTemplateBody'
          description: "A JSON string that provides information about your application\
            \ structure. To learn more about the `appTemplateBody` template, see the\
            \ sample template provided in the _Examples_ section.\n\nThe `appTemplateBody`\
            \ JSON string has the following structure:\n\n  * **`resources` **\n\n\
            The list of logical resources that must be included in the Resilience\
            \ Hub application.\n\nType: Array\n\nDon't add the resources that you\
            \ want to exclude.\n\nEach `resources` array item includes the following\
            \ fields:\n\n    * _`logicalResourceId` _\n\nLogical identifier of the\
            \ resource.\n\nType: Object\n\nEach `logicalResourceId` object includes\
            \ the following fields:\n\n      * `identifier`\n\nIdentifier of the resource.\n\
            \nType: String\n\n      * `logicalStackName`\n\nThe name of the CloudFormation\
            \ stack this resource belongs to.\n\nType: String\n\n      * `resourceGroupName`\n\
            \nThe name of the resource group this resource belongs to.\n\nType: String\n\
            \n      * `terraformSourceName`\n\nThe name of the Terraform S3 state\
            \ file this resource belongs to.\n\nType: String\n\n      * `eksSourceName`\n\
            \nName of the Amazon Elastic Kubernetes Service cluster and namespace\
            \ this resource belongs to.\n\nThis parameter accepts values in \"eks-cluster/namespace\"\
            \ format.\n\nType: String\n\n    * _`type` _\n\nThe type of resource.\n\
            \nType: string\n\n    * _`name` _\n\nThe name of the resource.\n\nType:\
            \ String\n\n    * `additionalInfo`\n\nAdditional configuration parameters\
            \ for an Resilience Hub application. If you want to implement `additionalInfo`\
            \ through the Resilience Hub console rather than using an API call, see\
            \ [Configure the application configuration parameters](https://docs.aws.amazon.com/resilience-hub/latest/userguide/app-config-param.html).\n\
            \nCurrently, this parameter accepts a key-value mapping (in a string format)\
            \ of only one failover region and one associated account.\n\nKey: `\"\
            failover-regions\"`\n\nValue: `\"[{\"region\":\"<REGION>\", \"accounts\"\
            :[{\"id\":\"<ACCOUNT_ID>\"}]}]\"`\n\n  * **`appComponents` **\n\nList\
            \ of Application Components that this resource belongs to. If an Application\
            \ Component is not part of the Resilience Hub application, it will be\
            \ added.\n\nType: Array\n\nEach `appComponents` array item includes the\
            \ following fields:\n\n    * `name`\n\nName of the Application Component.\n\
            \nType: String\n\n    * `type`\n\nType of Application Component. For more\
            \ information about the types of Application Component, see [Grouping\
            \ resources in an AppComponent](https://docs.aws.amazon.com/resilience-hub/latest/userguide/AppComponent.grouping.html).\n\
            \nType: String\n\n    * `resourceNames`\n\nThe list of included resources\
            \ that are assigned to the Application Component.\n\nType: Array of strings\n\
            \n    * `additionalInfo`\n\nAdditional configuration parameters for an\
            \ Resilience Hub application. If you want to implement `additionalInfo`\
            \ through the Resilience Hub console rather than using an API call, see\
            \ [Configure the application configuration parameters](https://docs.aws.amazon.com/resilience-hub/latest/userguide/app-config-param.html).\n\
            \nCurrently, this parameter accepts a key-value mapping (in a string format)\
            \ of only one failover region and one associated account.\n\nKey: `\"\
            failover-regions\"`\n\nValue: `\"[{\"region\":\"<REGION>\", \"accounts\"\
            :[{\"id\":\"<ACCOUNT_ID>\"}]}]\"`\n\n  * **`excludedResources` **\n\n\
            The list of logical resource identifiers to be excluded from the application.\n\
            \nType: Array\n\nDon't add the resources that you want to include.\n\n\
            Each `excludedResources` array item includes the following fields:\n\n\
            \    * _`logicalResourceIds` _\n\nLogical identifier of the resource.\n\
            \nType: Object\n\nYou can configure only one of the following fields:\n\
            \n      * `logicalStackName`\n\n      * `resourceGroupName`\n\n      *\
            \ `terraformSourceName`\n\n      * `eksSourceName`\n\nEach `logicalResourceIds`\
            \ object includes the following fields:\n\n      * `identifier`\n\nIdentifier\
            \ of the resource.\n\nType: String\n\n      * `logicalStackName`\n\nThe\
            \ name of the CloudFormation stack this resource belongs to.\n\nType:\
            \ String\n\n      * `resourceGroupName`\n\nThe name of the resource group\
            \ this resource belongs to.\n\nType: String\n\n      * `terraformSourceName`\n\
            \nThe name of the Terraform S3 state file this resource belongs to.\n\n\
            Type: String\n\n      * `eksSourceName`\n\nName of the Amazon Elastic\
            \ Kubernetes Service cluster and namespace this resource belongs to.\n\
            \nThis parameter accepts values in \"eks-cluster/namespace\" format.\n\
            \nType: String\n\n  * **`version` **\n\nResilience Hub application version.\n\
            \n  * `additionalInfo`\n\nAdditional configuration parameters for an Resilience\
            \ Hub application. If you want to implement `additionalInfo` through the\
            \ Resilience Hub console rather than using an API call, see [Configure\
            \ the application configuration parameters](https://docs.aws.amazon.com/resilience-hub/latest/userguide/app-config-param.html).\n\
            \nCurrently, this parameter accepts a key-value mapping (in a string format)\
            \ of only one failover region and one associated account.\n\nKey: `\"\
            failover-regions\"`\n\nValue: `\"[{\"region\":\"<REGION>\", \"accounts\"\
            :[{\"id\":\"<ACCOUNT_ID>\"}]}]\"`"
      required:
      - appArn
      - appTemplateBody
    PutDraftAppVersionTemplateResponse:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        appVersion:
          allOf:
          - $ref: '#/components/schemas/EntityVersion'
          description: The version of the application.
    RecommendationCompliance:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/RecommendationDisruptionCompliance'
    RecommendationComplianceStatus:
      type: string
      enum:
      - BreachedUnattainable
      - BreachedCanMeet
      - MetCanImprove
      - MissingPolicy
    RecommendationDisruptionCompliance:
      type: object
      properties:
        expectedComplianceStatus:
          allOf:
          - $ref: '#/components/schemas/ComplianceStatus'
          description: The expected compliance status after applying the recommended
            configuration change.
        expectedRtoInSecs:
          allOf:
          - $ref: '#/components/schemas/Seconds'
          description: The expected RTO after applying the recommended configuration
            change.
        expectedRtoDescription:
          allOf:
          - $ref: '#/components/schemas/String500'
          description: The expected Recovery Time Objective (RTO) description after
            applying the recommended configuration change.
        expectedRpoInSecs:
          allOf:
          - $ref: '#/components/schemas/Seconds'
          description: The expected RPO after applying the recommended configuration
            change.
        expectedRpoDescription:
          allOf:
          - $ref: '#/components/schemas/String500'
          description: The expected Recovery Point Objective (RPO) description after
            applying the recommended configuration change.
      required:
      - expectedComplianceStatus
      description: Defines a disruption compliance recommendation.
    RecommendationIdList:
      type: array
      items:
        $ref: '#/components/schemas/Uuid'
    RecommendationItem:
      type: object
      properties:
        resourceId:
          allOf:
          - $ref: '#/components/schemas/String500'
          description: Identifier of the resource.
        targetAccountId:
          allOf:
          - $ref: '#/components/schemas/CustomerId'
          description: Identifier of the target account.
        targetRegion:
          allOf:
          - $ref: '#/components/schemas/AwsRegion'
          description: The target region.
        alreadyImplemented:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          description: Specifies if the recommendation has already been implemented.
        excluded:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          description: Indicates if an operational recommendation item is excluded.
        excludeReason:
          allOf:
          - $ref: '#/components/schemas/ExcludeRecommendationReason'
          description: Indicates the reason for excluding an operational recommendation.
        latestDiscoveredExperiment:
          allOf:
          - $ref: '#/components/schemas/Experiment'
          description: Indicates the experiment created in FIS that was discovered
            by Resilience Hub, which matches the recommendation.
        discoveredAlarm:
          allOf:
          - $ref: '#/components/schemas/Alarm'
          description: Indicates the previously implemented Amazon CloudWatch alarm
            discovered by Resilience Hub.
      description: Defines a recommendation.
    RecommendationItemList:
      type: array
      items:
        $ref: '#/components/schemas/RecommendationItem'
    RecommendationStatus:
      type: string
      enum:
      - Implemented
      - Inactive
      - NotImplemented
      - Excluded
    RecommendationTemplate:
      type: object
      properties:
        templatesLocation:
          allOf:
          - $ref: '#/components/schemas/S3Location'
          description: The file location of the template.
        assessmentArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the assessment. The format for
            this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app-assessment/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        recommendationIds:
          allOf:
          - $ref: '#/components/schemas/RecommendationIdList'
          description: Identifiers for the recommendations used in the recommendation
            template.
        recommendationTypes:
          allOf:
          - $ref: '#/components/schemas/RenderRecommendationTypeList'
          description: "An array of strings that specify the recommendation template\
            \ type or types.\n\nAlarm\n\n    \n\nThe template is an AlarmRecommendation\
            \ template.\n\nSop\n\n    \n\nThe template is a SopRecommendation template.\n\
            \nTest\n\n    \n\nThe template is a TestRecommendation template."
        format:
          allOf:
          - $ref: '#/components/schemas/TemplateFormat'
          description: "Format of the recommendation template.\n\nCfnJson\n\n    \n\
            \nThe template is CloudFormation JSON.\n\nCfnYaml\n\n    \n\nThe template\
            \ is CloudFormation YAML."
        recommendationTemplateArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: Amazon Resource Name (ARN) for the recommendation template.
        message:
          allOf:
          - $ref: '#/components/schemas/String500'
          description: Message for the recommendation template.
        status:
          allOf:
          - $ref: '#/components/schemas/RecommendationTemplateStatus'
          description: Status of the action.
        name:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          description: Name for the recommendation template.
        startTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          description: The start time for the action.
        endTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          description: The end time for the action.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Tags assigned to the resource. A tag is a label that you assign
            to an Amazon Web Services resource. Each tag consists of a key/value pair.
        needsReplacements:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          description: Indicates if replacements are needed.
      required:
      - assessmentArn
      - recommendationTypes
      - format
      - recommendationTemplateArn
      - status
      - name
      description: Defines a recommendation template created with the CreateRecommendationTemplate
        action.
    RecommendationTemplateList:
      type: array
      items:
        $ref: '#/components/schemas/RecommendationTemplate'
    RecommendationTemplateStatus:
      type: string
      enum:
      - Pending
      - InProgress
      - Failed
      - Success
    RecommendationTemplateStatusList:
      type: array
      items:
        $ref: '#/components/schemas/RecommendationTemplateStatus'
    RejectGroupingRecommendationEntries:
      type: array
      items:
        $ref: '#/components/schemas/RejectGroupingRecommendationEntry'
    RejectGroupingRecommendationEntry:
      type: object
      properties:
        groupingRecommendationId:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Indicates the identifier of the grouping recommendation.
        rejectionReason:
          allOf:
          - $ref: '#/components/schemas/GroupingRecommendationRejectionReason'
          description: Indicates the reason you had selected while rejecting a grouping
            recommendation.
      required:
      - groupingRecommendationId
      description: Indicates the rejected grouping recommendation.
    RejectResourceGroupingRecommendationsRequest:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        entries:
          allOf:
          - $ref: '#/components/schemas/RejectGroupingRecommendationEntries'
          description: List of resource grouping recommendations you have selected
            to exclude from your application.
      required:
      - appArn
      - entries
    RejectResourceGroupingRecommendationsResponse:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        failedEntries:
          allOf:
          - $ref: '#/components/schemas/FailedGroupingRecommendationEntries'
          description: List of resource grouping recommendations that failed to get
            excluded in your application.
      required:
      - appArn
      - failedEntries
    RemoveDraftAppVersionResourceMappingsRequest:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        resourceNames:
          allOf:
          - $ref: '#/components/schemas/EntityNameList'
          description: The names of the resources you want to remove from the resource
            mappings.
        logicalStackNames:
          allOf:
          - $ref: '#/components/schemas/String255List'
          description: The names of the CloudFormation stacks you want to remove from
            the resource mappings.
        appRegistryAppNames:
          allOf:
          - $ref: '#/components/schemas/EntityNameList'
          description: The names of the registered applications you want to remove
            from the resource mappings.
        resourceGroupNames:
          allOf:
          - $ref: '#/components/schemas/EntityNameList'
          description: The names of the resource groups you want to remove from the
            resource mappings.
        terraformSourceNames:
          allOf:
          - $ref: '#/components/schemas/String255List'
          description: The names of the Terraform sources you want to remove from
            the resource mappings.
        eksSourceNames:
          allOf:
          - $ref: '#/components/schemas/String255List'
          description: 'The names of the Amazon Elastic Kubernetes Service clusters
            and namespaces you want to remove from the resource mappings.


            This parameter accepts values in "eks-cluster/namespace" format.'
      required:
      - appArn
    RemoveDraftAppVersionResourceMappingsResponse:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        appVersion:
          allOf:
          - $ref: '#/components/schemas/EntityVersion'
          description: The version of the application.
    RenderRecommendationType:
      type: string
      enum:
      - Alarm
      - Sop
      - Test
    RenderRecommendationTypeList:
      type: array
      items:
        $ref: '#/components/schemas/RenderRecommendationType'
    ResiliencyPolicies:
      type: array
      items:
        $ref: '#/components/schemas/ResiliencyPolicy'
    ResiliencyPolicy:
      type: object
      properties:
        policyArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the resiliency policy. The format
            for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:resiliency-policy/`policy-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        policyName:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          description: The name of the policy
        policyDescription:
          allOf:
          - $ref: '#/components/schemas/EntityDescription'
          description: Description of the resiliency policy.
        dataLocationConstraint:
          allOf:
          - $ref: '#/components/schemas/DataLocationConstraint'
          description: Specifies a high-level geographical location constraint for
            where your resilience policy data can be stored.
        tier:
          allOf:
          - $ref: '#/components/schemas/ResiliencyPolicyTier'
          description: The tier for this resiliency policy, ranging from the highest
            severity (`MissionCritical`) to lowest (`NonCritical`).
        estimatedCostTier:
          allOf:
          - $ref: '#/components/schemas/EstimatedCostTier'
          description: Specifies the estimated cost tier of the resiliency policy.
        policy:
          allOf:
          - $ref: '#/components/schemas/DisruptionPolicy'
          description: The resiliency policy.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          description: Date and time when the resiliency policy was created.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Tags assigned to the resource. A tag is a label that you assign
            to an Amazon Web Services resource. Each tag consists of a key/value pair.
      description: 'Defines a resiliency policy.


        Resilience Hub allows you to provide a value of zero for `rtoInSecs` and `rpoInSecs`
        of your resiliency policy. But, while assessing your application, the lowest
        possible assessment result is near zero. Hence, if you provide value zero
        for `rtoInSecs` and `rpoInSecs`, the estimated workload RTO and estimated
        workload RPO result will be near zero and the **Compliance status** for your
        application will be set to **Policy breached**.'
    ResiliencyPolicyTier:
      type: string
      enum:
      - MissionCritical
      - Critical
      - Important
      - CoreServices
      - NonCritical
      - NotApplicable
    ResiliencyScore:
      type: object
      properties:
        score:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The outage score for a valid key.
        disruptionScore:
          allOf:
          - $ref: '#/components/schemas/DisruptionResiliencyScore'
          description: The disruption score for a valid key.
        componentScore:
          allOf:
          - $ref: '#/components/schemas/ScoringComponentResiliencyScores'
          description: 'The score generated by Resilience Hub for the scoring component
            after running an assessment.


            For example, if the `score` is 25 points, it indicates the overall score
            of your application generated by Resilience Hub after running an assessment.'
      required:
      - score
      - disruptionScore
      description: The overall resiliency score, returned as an object that includes
        the disruption score and outage score.
    ResiliencyScoreType:
      type: string
      enum:
      - Compliance
      - Test
      - Alarm
      - Sop
    ResolveAppVersionResourcesRequest:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        appVersion:
          allOf:
          - $ref: '#/components/schemas/EntityVersion'
          description: The version of the application.
      required:
      - appArn
      - appVersion
    ResolveAppVersionResourcesResponse:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        appVersion:
          allOf:
          - $ref: '#/components/schemas/EntityVersion'
          description: The version of the application.
        resolutionId:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: The identifier for a specific resolution.
        status:
          allOf:
          - $ref: '#/components/schemas/ResourceResolutionStatusType'
          description: Status of the action.
      required:
      - appArn
      - appVersion
      - resolutionId
      - status
    ResourceDrift:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the application whose resources
            have drifted. The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app-assessment/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        appVersion:
          allOf:
          - $ref: '#/components/schemas/EntityVersion'
          description: Version of the application whose resources have drifted.
        referenceId:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          description: Reference identifier of the resource drift.
        resourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/ResourceIdentifier'
          description: Identifier of the drifted resource.
        diffType:
          allOf:
          - $ref: '#/components/schemas/DifferenceType'
          description: Indicates if the resource was added or removed.
      description: Indicates the resources that have drifted in the current application
        version.
    ResourceDriftList:
      type: array
      items:
        $ref: '#/components/schemas/ResourceDrift'
    ResourceError:
      type: object
      properties:
        logicalResourceId:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Identifier of the logical resource.
        physicalResourceId:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Identifier of the physical resource.
        reason:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: This is the error message.
      description: Defines application resource errors.
    ResourceErrorList:
      type: array
      items:
        $ref: '#/components/schemas/ResourceError'
    ResourceErrorsDetails:
      type: object
      properties:
        resourceErrors:
          allOf:
          - $ref: '#/components/schemas/ResourceErrorList'
          description: A list of errors retrieving an application's resources.
        hasMoreErrors:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          description: This indicates if there are more errors not listed in the `resourceErrors`
            list.
      description: A list of errors retrieving an application's resources.
    ResourceId:
      type: string
      pattern: .*
    ResourceIdentifier:
      type: object
      properties:
        logicalResourceId:
          allOf:
          - $ref: '#/components/schemas/LogicalResourceId'
          description: Logical identifier of the drifted resource.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Type of the drifted resource.
      description: Defines a resource identifier for the drifted resource.
    ResourceImportStatusType:
      type: string
      enum:
      - Pending
      - InProgress
      - Failed
      - Success
    ResourceImportStrategyType:
      type: string
      enum:
      - AddOnly
      - ReplaceAll
    ResourceMapping:
      type: object
      properties:
        resourceName:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          description: Name of the resource that this resource is mapped to when the
            `mappingType` is `Resource`.
        logicalStackName:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Name of the CloudFormation stack this resource is mapped to
            when the `mappingType` is `CfnStack`.
        appRegistryAppName:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          description: Name of the application this resource is mapped to when the
            `mappingType` is `AppRegistryApp`.
        resourceGroupName:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          description: Name of the Resource Groups that this resource is mapped to
            when the `mappingType` is `ResourceGroup`.
        mappingType:
          allOf:
          - $ref: '#/components/schemas/ResourceMappingType'
          description: Specifies the type of resource mapping.
        physicalResourceId:
          allOf:
          - $ref: '#/components/schemas/PhysicalResourceId'
          description: Identifier of the physical resource.
        terraformSourceName:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Name of the Terraform source that this resource is mapped to
            when the `mappingType` is `Terraform`.
        eksSourceName:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: 'Name of the Amazon Elastic Kubernetes Service cluster and
            namespace that this resource is mapped to when the `mappingType` is `EKS`.


            This parameter accepts values in "eks-cluster/namespace" format.'
      required:
      - mappingType
      - physicalResourceId
      description: Defines a resource mapping.
    ResourceMappingList:
      type: array
      items:
        $ref: '#/components/schemas/ResourceMapping'
    ResourceMappingType:
      type: string
      enum:
      - CfnStack
      - Resource
      - AppRegistryApp
      - ResourceGroup
      - Terraform
      - EKS
    ResourceNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String500'
        resourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: The identifier of the resource that the exception applies to.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The type of the resource that the exception applies to.
      description: This exception occurs when the specified resource could not be
        found.
    ResourceResolutionStatusType:
      type: string
      enum:
      - Pending
      - InProgress
      - Failed
      - Success
    ResourceSourceType:
      type: string
      enum:
      - AppTemplate
      - Discovered
    ResourceType:
      type: string
      pattern: .*
    ResourcesGroupingRecGenStatusType:
      type: string
      enum:
      - Pending
      - InProgress
      - Failed
      - Success
    RetryAfterSeconds:
      type: integer
    Row:
      type: array
      items:
        $ref: '#/components/schemas/String255'
    RowList:
      type: array
      items:
        $ref: '#/components/schemas/Row'
    S3Location:
      type: object
      properties:
        bucket:
          allOf:
          - $ref: '#/components/schemas/String500'
          description: The name of the Amazon S3 bucket.
        prefix:
          allOf:
          - $ref: '#/components/schemas/String500'
          description: The prefix for the Amazon S3 bucket.
      description: The location of the Amazon S3 bucket.
    S3Url:
      type: string
      pattern: ^((https://([^/]+)\.s3((-|\.)[^/]+)?\.amazonaws\.com(.cn)?)|(s3://([^/]+)))/\S{1,2000}$
      maxLength: 2000
    ScoringComponentResiliencyScore:
      type: object
      properties:
        score:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: Resiliency score points given for the scoring component. The
            score is always less than or equal to the `possibleScore`.
        possibleScore:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: 'Maximum possible score that can be obtained for the scoring
            component.


            For example, if the `possibleScore` is 20 points, it indicates the maximum
            possible score you can achieve for the scoring component when you run
            a new assessment after implementing all the Resilience Hub recommendations.'
        outstandingCount:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: 'Number of recommendations that must be implemented to obtain
            the maximum possible score for the scoring component. For SOPs, alarms,
            and tests, these are the number of recommendations that must be implemented.
            For compliance, these are the number of Application Components that have
            breached the resiliency policy.


            For example, if the `outstandingCount` for Alarms coverage scoring component
            is 5, it indicates that 5 Amazon CloudWatch alarms need to be implemented
            to achieve the maximum possible score.'
        excludedCount:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: 'Number of recommendations that were excluded from the assessment.


            For example, if the `excludedCount` for Alarms coverage scoring component
            is 7, it indicates that 7 Amazon CloudWatch alarms are excluded from the
            assessment.'
      description: Resiliency score of each scoring component. For more information
        about scoring component, see [Calculating resiliency score](https://docs.aws.amazon.com/resilience-hub/latest/userguide/calculate-score.html).
    ScoringComponentResiliencyScores:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ScoringComponentResiliencyScore'
    Seconds:
      type: integer
      default: 0
      minimum: 0
    ServiceQuotaExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String500'
      description: This exception occurs when you have exceeded your service quota.
        To perform the requested action, remove some of the relevant resources, or
        use Service Quotas to request a service quota increase.
    SopRecommendation:
      type: object
      properties:
        serviceType:
          allOf:
          - $ref: '#/components/schemas/SopServiceType'
          description: The service type.
        appComponentName:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          description: Name of the Application Component.
        description:
          allOf:
          - $ref: '#/components/schemas/String500'
          description: Description of the SOP recommendation.
        recommendationId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: Identifier for the SOP recommendation.
        name:
          allOf:
          - $ref: '#/components/schemas/DocumentName'
          description: Name of the SOP recommendation.
        items:
          allOf:
          - $ref: '#/components/schemas/RecommendationItemList'
          description: The recommendation items.
        referenceId:
          allOf:
          - $ref: '#/components/schemas/SpecReferenceId'
          description: Reference identifier for the SOP recommendation.
        prerequisite:
          allOf:
          - $ref: '#/components/schemas/String500'
          description: Prerequisite for the SOP recommendation.
        recommendationStatus:
          allOf:
          - $ref: '#/components/schemas/RecommendationStatus'
          description: Status of the recommended standard operating procedure.
      required:
      - serviceType
      - recommendationId
      - referenceId
      description: Defines a standard operating procedure (SOP) recommendation.
    SopRecommendationList:
      type: array
      items:
        $ref: '#/components/schemas/SopRecommendation'
    SopServiceType:
      type: string
      enum:
      - SSM
    Sort:
      type: object
      properties:
        field:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Indicates the order in which you want to sort the metrics.
            By default, the list is sorted in ascending order. To sort the list in
            descending order, set this field to False.
        ascending:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          description: Indicates the name or identifier of the field or attribute
            that should be used as the basis for sorting the metrics.
      required:
      - field
      description: Indicates the sorting order of the fields in the metrics.
    SortList:
      type: array
      items:
        $ref: '#/components/schemas/Sort'
    SpecReferenceId:
      type: string
      minLength: 1
      maxLength: 500
    StartAppAssessmentRequest:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        appVersion:
          allOf:
          - $ref: '#/components/schemas/EntityVersion'
          description: The version of the application.
        assessmentName:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          description: The name for the assessment.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: Used for an idempotency token. A client token is a unique,
            case-sensitive string of up to 64 ASCII characters. You should not reuse
            the same client token for other API requests.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Tags assigned to the resource. A tag is a label that you assign
            to an Amazon Web Services resource. Each tag consists of a key/value pair.
      required:
      - appArn
      - appVersion
      - assessmentName
    StartAppAssessmentResponse:
      type: object
      properties:
        assessment:
          allOf:
          - $ref: '#/components/schemas/AppAssessment'
          description: The assessment created.
      required:
      - assessment
    StartMetricsExportRequest:
      type: object
      properties:
        bucketName:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          description: (Optional) Specifies the name of the Amazon Simple Storage
            Service bucket where the exported metrics will be stored.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: Used for an idempotency token. A client token is a unique,
            case-sensitive string of up to 64 ASCII characters. You should not reuse
            the same client token for other API requests.
    StartMetricsExportResponse:
      type: object
      properties:
        metricsExportId:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Identifier of the metrics export task.
        status:
          allOf:
          - $ref: '#/components/schemas/MetricsExportStatusType'
          description: Indicates the status of the metrics export task.
      required:
      - metricsExportId
      - status
    StartResourceGroupingRecommendationTaskRequest:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
      required:
      - appArn
    StartResourceGroupingRecommendationTaskResponse:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        groupingId:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Identifier of the grouping recommendation task.
        status:
          allOf:
          - $ref: '#/components/schemas/ResourcesGroupingRecGenStatusType'
          description: Status of the action.
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/String500'
          description: Error that occurred while executing a grouping recommendation
            task.
      required:
      - appArn
      - groupingId
      - status
    String1024:
      type: string
      minLength: 1
      maxLength: 1024
    String128WithoutWhitespace:
      type: string
      pattern: ^\S{1,128}$
    String2048:
      type: string
      minLength: 1
      maxLength: 2048
    String255:
      type: string
      minLength: 1
      maxLength: 255
    String255List:
      type: array
      items:
        $ref: '#/components/schemas/String255'
    String500:
      type: string
      minLength: 1
      maxLength: 500
    SuggestedChangesList:
      type: array
      items:
        $ref: '#/components/schemas/EntityDescription'
    TagKey:
      type: string
      pattern: ^[^\x00-\x1f\x22]+$
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      x-sensitive: true
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: Amazon Resource Name (ARN) of the resource.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags to assign to the resource. Each tag consists of a
            key/value pair.
      required:
      - resourceArn
      - tags
    TagResourceResponse:
      type: object
      properties: {}
    TagValue:
      type: string
      pattern: ^[^\x00-\x1f\x22]*$
      minLength: 0
      maxLength: 256
    TemplateFormat:
      type: string
      enum:
      - CfnYaml
      - CfnJson
    TerraformSource:
      type: object
      properties:
        s3StateFileUrl:
          allOf:
          - $ref: '#/components/schemas/S3Url'
          description: The URL of the Terraform s3 state file you need to import.
      required:
      - s3StateFileUrl
      description: The Terraform s3 state file you need to import.
    TerraformSourceList:
      type: array
      items:
        $ref: '#/components/schemas/TerraformSource'
    TestRecommendation:
      type: object
      properties:
        recommendationId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: Identifier for the test recommendation.
        referenceId:
          allOf:
          - $ref: '#/components/schemas/SpecReferenceId'
          description: Reference identifier for the test recommendation.
        appComponentId:
          allOf:
          - $ref: '#/components/schemas/EntityName255'
          description: Indicates the identifier of the AppComponent.
        appComponentName:
          allOf:
          - $ref: '#/components/schemas/EntityId'
          description: Name of the Application Component.
        name:
          allOf:
          - $ref: '#/components/schemas/DocumentName'
          description: Name of the test recommendation.
        intent:
          allOf:
          - $ref: '#/components/schemas/EntityDescription'
          description: Intent of the test recommendation.
        risk:
          allOf:
          - $ref: '#/components/schemas/TestRisk'
          description: Level of risk for this test recommendation.
        type:
          allOf:
          - $ref: '#/components/schemas/TestType'
          description: Type of test recommendation.
        description:
          allOf:
          - $ref: '#/components/schemas/String500'
          description: Description for the test recommendation.
        items:
          allOf:
          - $ref: '#/components/schemas/RecommendationItemList'
          description: The test recommendation items.
        prerequisite:
          allOf:
          - $ref: '#/components/schemas/String500'
          description: Prerequisite of the test recommendation.
        dependsOnAlarms:
          allOf:
          - $ref: '#/components/schemas/AlarmReferenceIdList'
          description: A list of recommended alarms that are used in the test and
            must be exported before or with the test.
        recommendationStatus:
          allOf:
          - $ref: '#/components/schemas/RecommendationStatus'
          description: Status of the recommended test.
      required:
      - referenceId
      description: Defines a test recommendation.
    TestRecommendationList:
      type: array
      items:
        $ref: '#/components/schemas/TestRecommendation'
    TestRisk:
      type: string
      enum:
      - Small
      - Medium
      - High
    TestType:
      type: string
      enum:
      - Software
      - Hardware
      - AZ
      - Region
    ThrottlingException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String500'
        retryAfterSeconds:
          allOf:
          - $ref: '#/components/schemas/RetryAfterSeconds'
          description: The number of seconds to wait before retrying the operation.
      description: This exception occurs when you have exceeded the limit on the number
        of requests per second.
    TimeStamp:
      type: string
      format: date-time
    UnsupportedResource:
      type: object
      properties:
        logicalResourceId:
          allOf:
          - $ref: '#/components/schemas/LogicalResourceId'
          description: Logical resource identifier for the unsupported resource.
        physicalResourceId:
          allOf:
          - $ref: '#/components/schemas/PhysicalResourceId'
          description: Physical resource identifier for the unsupported resource.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: The type of resource.
        unsupportedResourceStatus:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: The status of the unsupported resource.
      required:
      - logicalResourceId
      - physicalResourceId
      - resourceType
      description: Defines a resource that is not supported by Resilience Hub.
    UnsupportedResourceList:
      type: array
      items:
        $ref: '#/components/schemas/UnsupportedResource'
    UntagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: Amazon Resource Name (ARN) of the resource.
        tagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: The keys of the tags you want to remove.
      required:
      - resourceArn
      - tagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateAppRequest:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        description:
          allOf:
          - $ref: '#/components/schemas/EntityDescription'
          description: The optional description for an app.
        policyArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the resiliency policy. The format
            for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:resiliency-policy/`policy-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        clearResiliencyPolicyArn:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          description: Specifies if the resiliency policy ARN should be cleared.
        assessmentSchedule:
          allOf:
          - $ref: '#/components/schemas/AppAssessmentScheduleType'
          description: Assessment execution schedule with 'Daily' or 'Disabled' values.
        permissionModel:
          allOf:
          - $ref: '#/components/schemas/PermissionModel'
          description: Defines the roles and credentials that Resilience Hub would
            use while creating an application, importing its resources, and running
            an assessment.
        eventSubscriptions:
          allOf:
          - $ref: '#/components/schemas/EventSubscriptionList'
          description: The list of events you would like to subscribe and get notification
            for. Currently, Resilience Hub supports notifications only for **Drift
            detected** and **Scheduled assessment failure** events.
      required:
      - appArn
    UpdateAppResponse:
      type: object
      properties:
        app:
          allOf:
          - $ref: '#/components/schemas/App'
          description: The specified application, returned as an object with details
            including compliance status, creation time, description, resiliency score,
            and more.
      required:
      - app
    UpdateAppVersionAppComponentRequest:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        id:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Identifier of the Application Component.
        name:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Name of the Application Component.
        type:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Type of Application Component. For more information about the
            types of Application Component, see [Grouping resources in an AppComponent](https://docs.aws.amazon.com/resilience-hub/latest/userguide/AppComponent.grouping.html).
        additionalInfo:
          allOf:
          - $ref: '#/components/schemas/AdditionalInfoMap'
          description: Currently, there is no supported additional information for
            Application Components.
      required:
      - appArn
      - id
    UpdateAppVersionAppComponentResponse:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        appVersion:
          allOf:
          - $ref: '#/components/schemas/EntityVersion'
          description: Resilience Hub application version.
        appComponent:
          allOf:
          - $ref: '#/components/schemas/AppComponent'
          description: List of Application Components that belong to this resource.
      required:
      - appArn
      - appVersion
    UpdateAppVersionRequest:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        additionalInfo:
          allOf:
          - $ref: '#/components/schemas/AdditionalInfoMap'
          description: 'Additional configuration parameters for an Resilience Hub
            application. If you want to implement `additionalInfo` through the Resilience
            Hub console rather than using an API call, see [Configure the application
            configuration parameters](https://docs.aws.amazon.com/resilience-hub/latest/userguide/app-config-param.html).


            Currently, this parameter accepts a key-value mapping (in a string format)
            of only one failover region and one associated account.


            Key: `"failover-regions"`


            Value: `"[{"region":"<REGION>", "accounts":[{"id":"<ACCOUNT_ID>"}]}]"`'
      required:
      - appArn
    UpdateAppVersionResourceRequest:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        resourceName:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          description: Name of the resource.
        logicalResourceId:
          allOf:
          - $ref: '#/components/schemas/LogicalResourceId'
          description: Logical identifier of the resource.
        physicalResourceId:
          allOf:
          - $ref: '#/components/schemas/String2048'
          description: Physical identifier of the resource.
        awsRegion:
          allOf:
          - $ref: '#/components/schemas/AwsRegion'
          description: Amazon Web Services region that owns the physical resource.
        awsAccountId:
          allOf:
          - $ref: '#/components/schemas/CustomerId'
          description: Amazon Web Services account that owns the physical resource.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: Type of resource.
        appComponents:
          allOf:
          - $ref: '#/components/schemas/AppComponentNameList'
          description: List of Application Components that this resource belongs to.
            If an Application Component is not part of the Resilience Hub application,
            it will be added.
        additionalInfo:
          allOf:
          - $ref: '#/components/schemas/AdditionalInfoMap'
          description: Currently, there is no supported additional information for
            resources.
        excluded:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          description: 'Indicates if a resource is excluded from an Resilience Hub
            application.


            You can exclude only imported resources from an Resilience Hub application.'
      required:
      - appArn
    UpdateAppVersionResourceResponse:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        appVersion:
          allOf:
          - $ref: '#/components/schemas/EntityVersion'
          description: Resilience Hub application version.
        physicalResource:
          allOf:
          - $ref: '#/components/schemas/PhysicalResource'
          description: Defines a physical resource. A physical resource is a resource
            that exists in your account. It can be identified using an Amazon Resource
            Name (ARN) or a Resilience Hub-native identifier.
      required:
      - appArn
      - appVersion
    UpdateAppVersionResponse:
      type: object
      properties:
        appArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the Resilience Hub application.
            The format for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:app/`app-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        appVersion:
          allOf:
          - $ref: '#/components/schemas/EntityVersion'
          description: Resilience Hub application version.
        additionalInfo:
          allOf:
          - $ref: '#/components/schemas/AdditionalInfoMap'
          description: 'Additional configuration parameters for an Resilience Hub
            application. If you want to implement `additionalInfo` through the Resilience
            Hub console rather than using an API call, see [Configure the application
            configuration parameters](https://docs.aws.amazon.com/resilience-hub/latest/userguide/app-config-param.html).


            Currently, this parameter supports only failover region and account.'
      required:
      - appArn
      - appVersion
    UpdateRecommendationStatusItem:
      type: object
      properties:
        resourceId:
          allOf:
          - $ref: '#/components/schemas/String500'
          description: Resource identifier of the operational recommendation item.
        targetAccountId:
          allOf:
          - $ref: '#/components/schemas/CustomerId'
          description: Identifier of the target Amazon Web Services account.
        targetRegion:
          allOf:
          - $ref: '#/components/schemas/AwsRegion'
          description: Identifier of the target Amazon Web Services Region.
      description: Defines the operational recommendation item that needs a status
        update.
    UpdateRecommendationStatusRequestEntries:
      type: array
      items:
        $ref: '#/components/schemas/UpdateRecommendationStatusRequestEntry'
    UpdateRecommendationStatusRequestEntry:
      type: object
      properties:
        entryId:
          allOf:
          - $ref: '#/components/schemas/String255'
          description: 'An identifier for an entry in this batch that is used to communicate
            the result.


            The `entryId`s of a batch request need to be unique within a request.'
        referenceId:
          allOf:
          - $ref: '#/components/schemas/SpecReferenceId'
          description: Reference identifier of the operational recommendation item.
        item:
          allOf:
          - $ref: '#/components/schemas/UpdateRecommendationStatusItem'
          description: The operational recommendation item.
        excluded:
          allOf:
          - $ref: '#/components/schemas/BooleanOptional'
          description: Indicates if the operational recommendation needs to be excluded.
            If set to True, the operational recommendation will be excluded.
        appComponentId:
          allOf:
          - $ref: '#/components/schemas/EntityName255'
          description: Indicates the identifier of the AppComponent.
        excludeReason:
          allOf:
          - $ref: '#/components/schemas/ExcludeRecommendationReason'
          description: Indicates the reason for excluding an operational recommendation.
      required:
      - entryId
      - referenceId
      - excluded
      description: Defines the operational recommendation item that is to be included
        or excluded.
    UpdateResiliencyPolicyRequest:
      type: object
      properties:
        policyArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'Amazon Resource Name (ARN) of the resiliency policy. The format
            for this ARN is: arn:`partition`:resiliencehub:`region`:`account`:resiliency-policy/`policy-id`.
            For more information about ARNs, see [ Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            in the _Amazon Web Services General Reference_ guide.'
        policyName:
          allOf:
          - $ref: '#/components/schemas/EntityName'
          description: Name of the resiliency policy.
        policyDescription:
          allOf:
          - $ref: '#/components/schemas/EntityDescription'
          description: Description of the resiliency policy.
        dataLocationConstraint:
          allOf:
          - $ref: '#/components/schemas/DataLocationConstraint'
          description: Specifies a high-level geographical location constraint for
            where your resilience policy data can be stored.
        tier:
          allOf:
          - $ref: '#/components/schemas/ResiliencyPolicyTier'
          description: The tier for this resiliency policy, ranging from the highest
            severity (`MissionCritical`) to lowest (`NonCritical`).
        policy:
          allOf:
          - $ref: '#/components/schemas/DisruptionPolicy'
          description: Resiliency policy to be created, including the recovery time
            objective (RTO) and recovery point objective (RPO) in seconds.
      required:
      - policyArn
    UpdateResiliencyPolicyResponse:
      type: object
      properties:
        policy:
          allOf:
          - $ref: '#/components/schemas/ResiliencyPolicy'
          description: The resiliency policy that was updated, including the recovery
            time objective (RTO) and recovery point objective (RPO) in seconds.
      required:
      - policy
    Uuid:
      type: string
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$
    ValidationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String500'
      description: This exception occurs when a request is not valid.
