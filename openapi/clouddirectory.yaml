openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: clouddirectory
  x-aws-serviceName: clouddirectory
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2017-01-11'
  title: Amazon CloudDirectory
  description: |-
    Amazon Cloud Directory

    Amazon Cloud Directory is a component of the AWS Directory Service that simplifies the development and management of cloud-scale web, mobile, and IoT applications. This guide describes the Cloud Directory operations that you can call programmatically and includes detailed information on data types and errors. For information about Cloud Directory features, see [AWS Directory Service](https://aws.amazon.com/directoryservice/) and the [Amazon Cloud Directory Developer Guide](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html).
servers:
- description: The Amazon CloudDirectory regional endpoint
  url: https://clouddirectory.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /amazonclouddirectory/2017-01-11/object/facets:
    put:
      operationId: AddFacetToObject
      description: |-
        Adds a new Facet to an object. An object can have more than one facet applied on it.
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SchemaFacet:
                  $ref: '#/components/schemas/SchemaFacet'
                ObjectAttributeList:
                  $ref: '#/components/schemas/AttributeKeyAndValueList'
                ObjectReference:
                  $ref: '#/components/schemas/ObjectReference'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/schema/apply:
    put:
      operationId: ApplySchema
      description: |-
        Copies the input published schema, at the specified version, into the Directory with the same name and version as that of the published schema.
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                PublishedSchemaArn:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/object/attach:
    put:
      operationId: AttachObject
      description: |-
        Attaches an existing object to another object. An object can be accessed in two ways:

          1. Using the path

          2. Using `ObjectIdentifier`
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ParentReference:
                  $ref: '#/components/schemas/ObjectReference'
                ChildReference:
                  $ref: '#/components/schemas/ObjectReference'
                LinkName:
                  $ref: '#/components/schemas/LinkName'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/policy/attach:
    put:
      operationId: AttachPolicy
      description: |-
        Attaches a policy object to a regular object. An object can have a limited number of attached policies.
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                PolicyReference:
                  $ref: '#/components/schemas/ObjectReference'
                ObjectReference:
                  $ref: '#/components/schemas/ObjectReference'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/index/attach:
    put:
      operationId: AttachToIndex
      description: |-
        Attaches the specified object to the specified index.
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                IndexReference:
                  $ref: '#/components/schemas/ObjectReference'
                TargetReference:
                  $ref: '#/components/schemas/ObjectReference'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/typedlink/attach:
    put:
      operationId: AttachTypedLink
      description: |-
        Attaches a typed link to a specified source and target object. For more information, see [Typed Links](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink).
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SourceObjectReference:
                  $ref: '#/components/schemas/ObjectReference'
                TargetObjectReference:
                  $ref: '#/components/schemas/ObjectReference'
                TypedLinkFacet:
                  $ref: '#/components/schemas/TypedLinkSchemaAndFacetName'
                Attributes:
                  $ref: '#/components/schemas/AttributeNameAndValueList'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/batchread:
    post:
      operationId: BatchRead
      description: |-
        Performs all the read operations in a batch.
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      - name: x-amz-consistency-level
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/ConsistencyLevel'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Operations:
                  $ref: '#/components/schemas/BatchReadOperationList'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/batchwrite:
    put:
      operationId: BatchWrite
      description: |-
        Performs all the write operations in a batch. Either all the operations succeed or none.
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Operations:
                  $ref: '#/components/schemas/BatchWriteOperationList'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/directory/create:
    put:
      operationId: CreateDirectory
      description: |-
        Creates a Directory by copying the published schema into the directory. A directory cannot be created without a schema.

        You can also quickly create a directory using a managed schema, called the `QuickStartSchema`. For more information, see [Managed Schema](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_managed.html) in the _Amazon Cloud Directory Developer Guide_.
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/DirectoryName'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/facet/create:
    put:
      operationId: CreateFacet
      description: |-
        Creates a new Facet in a schema. Facet creation is allowed only in development or applied schemas.
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/FacetName'
                Attributes:
                  $ref: '#/components/schemas/FacetAttributeList'
                ObjectType:
                  $ref: '#/components/schemas/ObjectType'
                FacetStyle:
                  $ref: '#/components/schemas/FacetStyle'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/index:
    put:
      operationId: CreateIndex
      description: |-
        Creates an index object. See [Indexing and search](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/indexing_search.html) for more information.
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                OrderedIndexedAttributeList:
                  $ref: '#/components/schemas/AttributeKeyList'
                IsUnique:
                  $ref: '#/components/schemas/Bool'
                ParentReference:
                  $ref: '#/components/schemas/ObjectReference'
                LinkName:
                  $ref: '#/components/schemas/LinkName'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/object:
    put:
      operationId: CreateObject
      description: |-
        Creates an object in a Directory. Additionally attaches the object to a parent, if a parent reference and `LinkName` is specified. An object is simply a collection of Facet attributes. You can also use this API call to create a policy object, if the facet from which you create the object is a policy facet.
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SchemaFacets:
                  $ref: '#/components/schemas/SchemaFacetList'
                ObjectAttributeList:
                  $ref: '#/components/schemas/AttributeKeyAndValueList'
                ParentReference:
                  $ref: '#/components/schemas/ObjectReference'
                LinkName:
                  $ref: '#/components/schemas/LinkName'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/schema/create:
    put:
      operationId: CreateSchema
      description: |-
        Creates a new schema in a development state. A schema can exist in three phases:

          * _Development:_ This is a mutable phase of the schema. All new schemas are in the development phase. Once the schema is finalized, it can be published.

          * _Published:_ Published schemas are immutable and have a version associated with them.

          * _Applied:_ Applied schemas are mutable in a way that allows you to add new schema facets. You can also add new, nonrequired attributes to existing schema facets. You can apply only published schemas to directories.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/SchemaName'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/typedlink/facet/create:
    put:
      operationId: CreateTypedLinkFacet
      description: |-
        Creates a TypedLinkFacet. For more information, see [Typed Links](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink).
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Facet:
                  $ref: '#/components/schemas/TypedLinkFacet'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/directory:
    put:
      operationId: DeleteDirectory
      description: |-
        Deletes a directory. Only disabled directories can be deleted. A deleted directory cannot be undone. Exercise extreme caution when deleting directories.
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/facet/delete:
    put:
      operationId: DeleteFacet
      description: |-
        Deletes a given Facet. All attributes and Rules that are associated with the facet will be deleted. Only development schema facets are allowed deletion.
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/FacetName'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/object/delete:
    put:
      operationId: DeleteObject
      description: |-
        Deletes an object and its associated attributes. Only objects with no children and no parents can be deleted. The maximum number of attributes that can be deleted during an object deletion is 30. For more information, see [Amazon Cloud Directory Limits](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html).
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ObjectReference:
                  $ref: '#/components/schemas/ObjectReference'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/schema:
    put:
      operationId: DeleteSchema
      description: |-
        Deletes a given schema. Schemas in a development and published state can only be deleted.
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/typedlink/facet/delete:
    put:
      operationId: DeleteTypedLinkFacet
      description: |-
        Deletes a TypedLinkFacet. For more information, see [Typed Links](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink).
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/TypedLinkName'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/index/detach:
    put:
      operationId: DetachFromIndex
      description: |-
        Detaches the specified object from the specified index.
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                IndexReference:
                  $ref: '#/components/schemas/ObjectReference'
                TargetReference:
                  $ref: '#/components/schemas/ObjectReference'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/object/detach:
    put:
      operationId: DetachObject
      description: |-
        Detaches a given object from the parent object. The object that is to be detached from the parent is specified by the link name.
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ParentReference:
                  $ref: '#/components/schemas/ObjectReference'
                LinkName:
                  $ref: '#/components/schemas/LinkName'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/policy/detach:
    put:
      operationId: DetachPolicy
      description: |-
        Detaches a policy from an object.
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                PolicyReference:
                  $ref: '#/components/schemas/ObjectReference'
                ObjectReference:
                  $ref: '#/components/schemas/ObjectReference'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/typedlink/detach:
    put:
      operationId: DetachTypedLink
      description: |-
        Detaches a typed link from a specified source and target object. For more information, see [Typed Links](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink).
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TypedLinkSpecifier:
                  $ref: '#/components/schemas/TypedLinkSpecifier'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/directory/disable:
    put:
      operationId: DisableDirectory
      description: |-
        Disables the specified directory. Disabled directories cannot be read or written to. Only enabled directories can be disabled. Disabled directories may be reenabled.
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/directory/enable:
    put:
      operationId: EnableDirectory
      description: |-
        Enables the specified directory. Only disabled directories can be enabled. Once enabled, the directory can then be read and written to.
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/schema/getappliedschema:
    post:
      operationId: GetAppliedSchemaVersion
      description: |-
        Returns current applied schema version ARN, including the minor version in use.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SchemaArn:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/directory/get:
    post:
      operationId: GetDirectory
      description: |-
        Retrieves metadata about a directory.
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/DirectoryArn'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/facet:
    post:
      operationId: GetFacet
      description: |-
        Gets details of the Facet, such as facet name, attributes, Rules, or `ObjectType`. You can call this on all kinds of schema facets -- published, development, or applied.
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/FacetName'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
    put:
      operationId: UpdateFacet
      description: |-
        Does the following:

          1. Adds new `Attributes`, `Rules`, or `ObjectTypes`.

          2. Updates existing `Attributes`, `Rules`, or `ObjectTypes`.

          3. Deletes existing `Attributes`, `Rules`, or `ObjectTypes`.
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/FacetName'
                AttributeUpdates:
                  $ref: '#/components/schemas/FacetAttributeUpdateList'
                ObjectType:
                  $ref: '#/components/schemas/ObjectType'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/typedlink/attributes/get:
    post:
      operationId: GetLinkAttributes
      description: |-
        Retrieves attributes that are associated with a typed link.
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TypedLinkSpecifier:
                  $ref: '#/components/schemas/TypedLinkSpecifier'
                AttributeNames:
                  $ref: '#/components/schemas/AttributeNameList'
                ConsistencyLevel:
                  $ref: '#/components/schemas/ConsistencyLevel'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/object/attributes/get:
    post:
      operationId: GetObjectAttributes
      description: |-
        Retrieves attributes within a facet that are associated with an object.
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      - name: x-amz-consistency-level
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/ConsistencyLevel'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ObjectReference:
                  $ref: '#/components/schemas/ObjectReference'
                SchemaFacet:
                  $ref: '#/components/schemas/SchemaFacet'
                AttributeNames:
                  $ref: '#/components/schemas/AttributeNameList'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/object/information:
    post:
      operationId: GetObjectInformation
      description: |-
        Retrieves metadata about an object.
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      - name: x-amz-consistency-level
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/ConsistencyLevel'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ObjectReference:
                  $ref: '#/components/schemas/ObjectReference'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/schema/json:
    post:
      operationId: GetSchemaAsJson
      description: |-
        Retrieves a JSON representation of the schema. See [JSON Schema Format](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_jsonformat.html#schemas_json) for more information.
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
    put:
      operationId: PutSchemaFromJson
      description: |-
        Allows a schema to be updated using JSON upload. Only available for development schemas. See [JSON Schema Format](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_jsonformat.html#schemas_json) for more information.
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Document:
                  $ref: '#/components/schemas/SchemaJsonDocument'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/typedlink/facet/get:
    post:
      operationId: GetTypedLinkFacetInformation
      description: |-
        Returns the identity attribute order for a specific TypedLinkFacet. For more information, see [Typed Links](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink).
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/TypedLinkName'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/schema/applied:
    post:
      operationId: ListAppliedSchemaArns
      description: |-
        Lists schema major versions applied to a directory. If `SchemaArn` is provided, lists the minor version.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DirectoryArn:
                  $ref: '#/components/schemas/Arn'
                SchemaArn:
                  $ref: '#/components/schemas/Arn'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                MaxResults:
                  $ref: '#/components/schemas/NumberResults'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/object/indices:
    post:
      operationId: ListAttachedIndices
      description: |-
        Lists indices attached to the specified object.
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      - name: x-amz-consistency-level
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/ConsistencyLevel'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TargetReference:
                  $ref: '#/components/schemas/ObjectReference'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                MaxResults:
                  $ref: '#/components/schemas/NumberResults'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/schema/development:
    post:
      operationId: ListDevelopmentSchemaArns
      description: |-
        Retrieves each Amazon Resource Name (ARN) of schemas in the development state.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                MaxResults:
                  $ref: '#/components/schemas/NumberResults'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/directory/list:
    post:
      operationId: ListDirectories
      description: |-
        Lists directories created within an account.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                MaxResults:
                  $ref: '#/components/schemas/NumberResults'
                state:
                  $ref: '#/components/schemas/DirectoryState'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/facet/attributes:
    post:
      operationId: ListFacetAttributes
      description: |-
        Retrieves attributes attached to the facet.
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/FacetName'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                MaxResults:
                  $ref: '#/components/schemas/NumberResults'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/facet/list:
    post:
      operationId: ListFacetNames
      description: |-
        Retrieves the names of facets that exist in a schema.
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                MaxResults:
                  $ref: '#/components/schemas/NumberResults'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/typedlink/incoming:
    post:
      operationId: ListIncomingTypedLinks
      description: |-
        Returns a paginated list of all the incoming TypedLinkSpecifier information for an object. It also supports filtering by typed link facet and identity attributes. For more information, see [Typed Links](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink).
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ObjectReference:
                  $ref: '#/components/schemas/ObjectReference'
                FilterAttributeRanges:
                  $ref: '#/components/schemas/TypedLinkAttributeRangeList'
                FilterTypedLink:
                  $ref: '#/components/schemas/TypedLinkSchemaAndFacetName'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                MaxResults:
                  $ref: '#/components/schemas/NumberResults'
                ConsistencyLevel:
                  $ref: '#/components/schemas/ConsistencyLevel'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/index/targets:
    post:
      operationId: ListIndex
      description: |-
        Lists objects attached to the specified index.
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      - name: x-amz-consistency-level
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/ConsistencyLevel'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                RangesOnIndexedValues:
                  $ref: '#/components/schemas/ObjectAttributeRangeList'
                IndexReference:
                  $ref: '#/components/schemas/ObjectReference'
                MaxResults:
                  $ref: '#/components/schemas/NumberResults'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/schema/managed:
    post:
      operationId: ListManagedSchemaArns
      description: |-
        Lists the major version families of each managed schema. If a major version ARN is provided as SchemaArn, the minor version revisions in that family are listed instead.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SchemaArn:
                  $ref: '#/components/schemas/Arn'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                MaxResults:
                  $ref: '#/components/schemas/NumberResults'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /amazonclouddirectory/2017-01-11/object/attributes:
    post:
      operationId: ListObjectAttributes
      description: |-
        Lists all attributes that are associated with an object.
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      - name: x-amz-consistency-level
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/ConsistencyLevel'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ObjectReference:
                  $ref: '#/components/schemas/ObjectReference'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                MaxResults:
                  $ref: '#/components/schemas/NumberResults'
                FacetFilter:
                  $ref: '#/components/schemas/SchemaFacet'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/object/children:
    post:
      operationId: ListObjectChildren
      description: |-
        Returns a paginated list of child objects that are associated with a given object.
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      - name: x-amz-consistency-level
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/ConsistencyLevel'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ObjectReference:
                  $ref: '#/components/schemas/ObjectReference'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                MaxResults:
                  $ref: '#/components/schemas/NumberResults'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/object/parentpaths:
    post:
      operationId: ListObjectParentPaths
      description: |-
        Retrieves all available parent paths for any object type such as node, leaf node, policy node, and index node objects. For more information about objects, see [Directory Structure](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/key_concepts_directorystructure.html).

        Use this API to evaluate all parents for an object. The call returns all objects from the root of the directory up to the requested object. The API returns the number of paths based on user-defined `MaxResults`, in case there are multiple paths to the parent. The order of the paths and nodes returned is consistent among multiple API calls unless the objects are deleted or moved. Paths not leading to the directory root are ignored from the target object.
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ObjectReference:
                  $ref: '#/components/schemas/ObjectReference'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                MaxResults:
                  $ref: '#/components/schemas/NumberResults'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/object/parent:
    post:
      operationId: ListObjectParents
      description: |-
        Lists parent objects that are associated with a given object in pagination fashion.
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      - name: x-amz-consistency-level
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/ConsistencyLevel'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ObjectReference:
                  $ref: '#/components/schemas/ObjectReference'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                MaxResults:
                  $ref: '#/components/schemas/NumberResults'
                IncludeAllLinksToEachParent:
                  $ref: '#/components/schemas/Bool'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/object/policy:
    post:
      operationId: ListObjectPolicies
      description: |-
        Returns policies attached to an object in pagination fashion.
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      - name: x-amz-consistency-level
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/ConsistencyLevel'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ObjectReference:
                  $ref: '#/components/schemas/ObjectReference'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                MaxResults:
                  $ref: '#/components/schemas/NumberResults'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/typedlink/outgoing:
    post:
      operationId: ListOutgoingTypedLinks
      description: |-
        Returns a paginated list of all the outgoing TypedLinkSpecifier information for an object. It also supports filtering by typed link facet and identity attributes. For more information, see [Typed Links](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink).
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ObjectReference:
                  $ref: '#/components/schemas/ObjectReference'
                FilterAttributeRanges:
                  $ref: '#/components/schemas/TypedLinkAttributeRangeList'
                FilterTypedLink:
                  $ref: '#/components/schemas/TypedLinkSchemaAndFacetName'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                MaxResults:
                  $ref: '#/components/schemas/NumberResults'
                ConsistencyLevel:
                  $ref: '#/components/schemas/ConsistencyLevel'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/policy/attachment:
    post:
      operationId: ListPolicyAttachments
      description: |-
        Returns all of the `ObjectIdentifiers` to which a given policy is attached.
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      - name: x-amz-consistency-level
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/ConsistencyLevel'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                PolicyReference:
                  $ref: '#/components/schemas/ObjectReference'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                MaxResults:
                  $ref: '#/components/schemas/NumberResults'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/schema/published:
    post:
      operationId: ListPublishedSchemaArns
      description: |-
        Lists the major version families of each published schema. If a major version ARN is provided as `SchemaArn`, the minor version revisions in that family are listed instead.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SchemaArn:
                  $ref: '#/components/schemas/Arn'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                MaxResults:
                  $ref: '#/components/schemas/NumberResults'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/tags:
    post:
      operationId: ListTagsForResource
      description: |-
        Returns tags for a resource. Tagging is currently supported only for directories with a limit of 50 tags per directory. All 50 tags are returned for a given directory with this API call.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ResourceArn:
                  $ref: '#/components/schemas/Arn'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                MaxResults:
                  $ref: '#/components/schemas/TagsNumberResults'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/typedlink/facet/attributes:
    post:
      operationId: ListTypedLinkFacetAttributes
      description: |-
        Returns a paginated list of all attribute definitions for a particular TypedLinkFacet. For more information, see [Typed Links](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink).
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/TypedLinkName'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                MaxResults:
                  $ref: '#/components/schemas/NumberResults'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/typedlink/facet/list:
    post:
      operationId: ListTypedLinkFacetNames
      description: |-
        Returns a paginated list of `TypedLink` facet names for a particular schema. For more information, see [Typed Links](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink).
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                MaxResults:
                  $ref: '#/components/schemas/NumberResults'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/policy/lookup:
    post:
      operationId: LookupPolicy
      description: |-
        Lists all policies from the root of the Directory to the object specified. If there are no policies present, an empty list is returned. If policies are present, and if some objects don't have the policies attached, it returns the `ObjectIdentifier` for such objects. If policies are present, it returns `ObjectIdentifier`, `policyId`, and `policyType`. Paths that don't lead to the root from the target object are ignored. For more information, see [Policies](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/key_concepts_directory.html#key_concepts_policies).
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ObjectReference:
                  $ref: '#/components/schemas/ObjectReference'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                MaxResults:
                  $ref: '#/components/schemas/NumberResults'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/schema/publish:
    put:
      operationId: PublishSchema
      description: |-
        Publishes a development schema with a major version and a recommended minor version.
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Version:
                  $ref: '#/components/schemas/Version'
                MinorVersion:
                  $ref: '#/components/schemas/Version'
                Name:
                  $ref: '#/components/schemas/SchemaName'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/object/facets/delete:
    put:
      operationId: RemoveFacetFromObject
      description: |-
        Removes the specified facet from the specified object.
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SchemaFacet:
                  $ref: '#/components/schemas/SchemaFacet'
                ObjectReference:
                  $ref: '#/components/schemas/ObjectReference'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/tags/add:
    put:
      operationId: TagResource
      description: |-
        An API operation for adding tags to a resource.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ResourceArn:
                  $ref: '#/components/schemas/Arn'
                Tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/tags/remove:
    put:
      operationId: UntagResource
      description: |-
        An API operation for removing tags from a resource.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ResourceArn:
                  $ref: '#/components/schemas/Arn'
                TagKeys:
                  $ref: '#/components/schemas/TagKeyList'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/typedlink/attributes/update:
    post:
      operationId: UpdateLinkAttributes
      description: |-
        Updates a given typed link’s attributes. Attributes to be updated must not contribute to the typed link’s identity, as defined by its `IdentityAttributeOrder`.
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TypedLinkSpecifier:
                  $ref: '#/components/schemas/TypedLinkSpecifier'
                AttributeUpdates:
                  $ref: '#/components/schemas/LinkAttributeUpdateList'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/object/update:
    put:
      operationId: UpdateObjectAttributes
      description: |-
        Updates a given object's attributes.
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ObjectReference:
                  $ref: '#/components/schemas/ObjectReference'
                AttributeUpdates:
                  $ref: '#/components/schemas/ObjectAttributeUpdateList'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/schema/update:
    put:
      operationId: UpdateSchema
      description: |-
        Updates the schema name with a new name. Only development schema names can be updated.
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/SchemaName'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/typedlink/facet:
    put:
      operationId: UpdateTypedLinkFacet
      description: |-
        Updates a TypedLinkFacet. For more information, see [Typed Links](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink).
      parameters:
      - name: x-amz-data-partition
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/TypedLinkName'
                AttributeUpdates:
                  $ref: '#/components/schemas/TypedLinkFacetAttributeUpdateList'
                IdentityAttributeOrder:
                  $ref: '#/components/schemas/AttributeNameList'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/schema/upgradeapplied:
    put:
      operationId: UpgradeAppliedSchema
      description: |-
        Upgrades a single directory in-place using the `PublishedSchemaArn` with schema updates found in `MinorVersion`. Backwards-compatible minor version upgrades are instantaneously available for readers on all objects in the directory. Note: This is a synchronous API call and upgrades only one schema on a given directory per call. To upgrade multiple directories from one schema, you would need to call this API on each directory.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                PublishedSchemaArn:
                  $ref: '#/components/schemas/Arn'
                DirectoryArn:
                  $ref: '#/components/schemas/Arn'
                DryRun:
                  $ref: '#/components/schemas/Bool'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
  /amazonclouddirectory/2017-01-11/schema/upgradepublished:
    put:
      operationId: UpgradePublishedSchema
      description: |-
        Upgrades a published schema under a new minor version revision using the current contents of `DevelopmentSchemaArn`.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DevelopmentSchemaArn:
                  $ref: '#/components/schemas/Arn'
                PublishedSchemaArn:
                  $ref: '#/components/schemas/Arn'
                MinorVersion:
                  $ref: '#/components/schemas/Version'
                DryRun:
                  $ref: '#/components/schemas/Bool'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied or directory not found. Either you don't have permissions for this directory or the directory does not exist. Try calling ListDirectories and check your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Indicates that your request is malformed in some manner. See the exception message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Indicates a problem that must be resolved by Amazon Web Services. This might be a transient error in which case you can retry your request until it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/) site to see if there are any operational issues with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            Occurs when a conflict with a previous successful write is detected. For example, if a write operation occurs on an object and then an attempt is made to read the object using “SERIALIZABLE” consistency, this exception may result. This generally occurs when the previous write did not have time to propagate to the host serving the current request. A retry (with appropriate backoff logic) is the recommended response to this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryableConflictException'
components:
  schemas:
    AccessDeniedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Access denied or directory not found. Either you don't have permissions
        for this directory or the directory does not exist. Try calling ListDirectories
        and check your permissions.
    AddFacetToObjectRequest:
      type: object
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) that is associated with the
            Directory where the object resides. For more information, see arns.
        SchemaFacet:
          allOf:
          - $ref: '#/components/schemas/SchemaFacet'
          description: Identifiers for the facet that you are adding to the object.
            See SchemaFacet for details.
        ObjectAttributeList:
          allOf:
          - $ref: '#/components/schemas/AttributeKeyAndValueList'
          description: Attributes on the facet that you are adding to the object.
        ObjectReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: A reference to the object you are adding the specified facet
            to.
      required:
      - DirectoryArn
      - SchemaFacet
      - ObjectReference
    AddFacetToObjectResponse:
      type: object
      properties: {}
    ApplySchemaRequest:
      type: object
      properties:
        PublishedSchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: Published schema Amazon Resource Name (ARN) that needs to be
            copied. For more information, see arns.
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) that is associated with the
            Directory into which the schema is copied. For more information, see arns.
      required:
      - PublishedSchemaArn
      - DirectoryArn
    ApplySchemaResponse:
      type: object
      properties:
        AppliedSchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The applied schema ARN that is associated with the copied schema
            in the Directory. You can use this ARN to describe the schema information
            applied on this directory. For more information, see arns.
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN that is associated with the Directory. For more information,
            see arns.
    Arn:
      type: string
    Arns:
      type: array
      items:
        $ref: '#/components/schemas/Arn'
    AttachObjectRequest:
      type: object
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: Amazon Resource Name (ARN) that is associated with the Directory
            where both objects reside. For more information, see arns.
        ParentReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: The parent object reference.
        ChildReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: The child object reference to be attached to the object.
        LinkName:
          allOf:
          - $ref: '#/components/schemas/LinkName'
          description: The link name with which the child object is attached to the
            parent.
      required:
      - DirectoryArn
      - ParentReference
      - ChildReference
      - LinkName
    AttachObjectResponse:
      type: object
      properties:
        AttachedObjectIdentifier:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifier'
          description: The attached `ObjectIdentifier`, which is the child `ObjectIdentifier`.
    AttachPolicyRequest:
      type: object
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) that is associated with the
            Directory where both objects reside. For more information, see arns.
        PolicyReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: The reference that is associated with the policy object.
        ObjectReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: The reference that identifies the object to which the policy
            will be attached.
      required:
      - DirectoryArn
      - PolicyReference
      - ObjectReference
    AttachPolicyResponse:
      type: object
      properties: {}
    AttachToIndexRequest:
      type: object
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the directory where the object
            and index exist.
        IndexReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: A reference to the index that you are attaching the object
            to.
        TargetReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: A reference to the object that you are attaching to the index.
      required:
      - DirectoryArn
      - IndexReference
      - TargetReference
    AttachToIndexResponse:
      type: object
      properties:
        AttachedObjectIdentifier:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifier'
          description: The `ObjectIdentifier` of the object that was attached to the
            index.
    AttachTypedLinkRequest:
      type: object
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the directory where you want
            to attach the typed link.
        SourceObjectReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: Identifies the source object that the typed link will attach
            to.
        TargetObjectReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: Identifies the target object that the typed link will attach
            to.
        TypedLinkFacet:
          allOf:
          - $ref: '#/components/schemas/TypedLinkSchemaAndFacetName'
          description: Identifies the typed link facet that is associated with the
            typed link.
        Attributes:
          allOf:
          - $ref: '#/components/schemas/AttributeNameAndValueList'
          description: A set of attributes that are associated with the typed link.
      required:
      - DirectoryArn
      - SourceObjectReference
      - TargetObjectReference
      - TypedLinkFacet
      - Attributes
    AttachTypedLinkResponse:
      type: object
      properties:
        TypedLinkSpecifier:
          allOf:
          - $ref: '#/components/schemas/TypedLinkSpecifier'
          description: Returns a typed link specifier as output.
    AttributeKey:
      type: object
      properties:
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the schema that contains
            the facet and attribute.
        FacetName:
          allOf:
          - $ref: '#/components/schemas/FacetName'
          description: The name of the facet that the attribute exists within.
        Name:
          allOf:
          - $ref: '#/components/schemas/AttributeName'
          description: The name of the attribute.
      required:
      - SchemaArn
      - FacetName
      - Name
      description: A unique identifier for an attribute.
    AttributeKeyAndValue:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/AttributeKey'
          description: The key of the attribute.
        Value:
          allOf:
          - $ref: '#/components/schemas/TypedAttributeValue'
          description: The value of the attribute.
      required:
      - Key
      - Value
      description: The combination of an attribute key and an attribute value.
    AttributeKeyAndValueList:
      type: array
      items:
        $ref: '#/components/schemas/AttributeKeyAndValue'
    AttributeKeyList:
      type: array
      items:
        $ref: '#/components/schemas/AttributeKey'
    AttributeName:
      type: string
      pattern: ^[a-zA-Z0-9._:-]*$
      minLength: 1
      maxLength: 230
    AttributeNameAndValue:
      type: object
      properties:
        AttributeName:
          allOf:
          - $ref: '#/components/schemas/AttributeName'
          description: The attribute name of the typed link.
        Value:
          allOf:
          - $ref: '#/components/schemas/TypedAttributeValue'
          description: The value for the typed link.
      required:
      - AttributeName
      - Value
      description: Identifies the attribute name and value for a typed link.
    AttributeNameAndValueList:
      type: array
      items:
        $ref: '#/components/schemas/AttributeNameAndValue'
    AttributeNameList:
      type: array
      items:
        $ref: '#/components/schemas/AttributeName'
    BatchAddFacetToObject:
      type: object
      properties:
        SchemaFacet:
          allOf:
          - $ref: '#/components/schemas/SchemaFacet'
          description: Represents the facet being added to the object.
        ObjectAttributeList:
          allOf:
          - $ref: '#/components/schemas/AttributeKeyAndValueList'
          description: The attributes to set on the object.
        ObjectReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: A reference to the object being mutated.
      required:
      - SchemaFacet
      - ObjectAttributeList
      - ObjectReference
      description: Represents the output of a batch add facet to object operation.
    BatchAddFacetToObjectResponse:
      type: object
      properties: {}
      description: The result of a batch add facet to object operation.
    BatchAttachObject:
      type: object
      properties:
        ParentReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: The parent object reference.
        ChildReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: The child object reference that is to be attached to the object.
        LinkName:
          allOf:
          - $ref: '#/components/schemas/LinkName'
          description: The name of the link.
      required:
      - ParentReference
      - ChildReference
      - LinkName
      description: Represents the output of an AttachObject operation.
    BatchAttachObjectResponse:
      type: object
      properties:
        attachedObjectIdentifier:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifier'
          description: The `ObjectIdentifier` of the object that has been attached.
      description: Represents the output batch AttachObject response operation.
    BatchAttachPolicy:
      type: object
      properties:
        PolicyReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: The reference that is associated with the policy object.
        ObjectReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: The reference that identifies the object to which the policy
            will be attached.
      required:
      - PolicyReference
      - ObjectReference
      description: Attaches a policy object to a regular object inside a BatchRead
        operation. For more information, see AttachPolicy and BatchReadRequest$Operations.
    BatchAttachPolicyResponse:
      type: object
      properties: {}
      description: Represents the output of an AttachPolicy response operation.
    BatchAttachToIndex:
      type: object
      properties:
        IndexReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: A reference to the index that you are attaching the object
            to.
        TargetReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: A reference to the object that you are attaching to the index.
      required:
      - IndexReference
      - TargetReference
      description: Attaches the specified object to the specified index inside a BatchRead
        operation. For more information, see AttachToIndex and BatchReadRequest$Operations.
    BatchAttachToIndexResponse:
      type: object
      properties:
        AttachedObjectIdentifier:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifier'
          description: The `ObjectIdentifier` of the object that was attached to the
            index.
      description: Represents the output of a AttachToIndex response operation.
    BatchAttachTypedLink:
      type: object
      properties:
        SourceObjectReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: Identifies the source object that the typed link will attach
            to.
        TargetObjectReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: Identifies the target object that the typed link will attach
            to.
        TypedLinkFacet:
          allOf:
          - $ref: '#/components/schemas/TypedLinkSchemaAndFacetName'
          description: Identifies the typed link facet that is associated with the
            typed link.
        Attributes:
          allOf:
          - $ref: '#/components/schemas/AttributeNameAndValueList'
          description: A set of attributes that are associated with the typed link.
      required:
      - SourceObjectReference
      - TargetObjectReference
      - TypedLinkFacet
      - Attributes
      description: Attaches a typed link to a specified source and target object inside
        a BatchRead operation. For more information, see AttachTypedLink and BatchReadRequest$Operations.
    BatchAttachTypedLinkResponse:
      type: object
      properties:
        TypedLinkSpecifier:
          allOf:
          - $ref: '#/components/schemas/TypedLinkSpecifier'
          description: Returns a typed link specifier as output.
      description: Represents the output of a AttachTypedLink response operation.
    BatchCreateIndex:
      type: object
      properties:
        OrderedIndexedAttributeList:
          allOf:
          - $ref: '#/components/schemas/AttributeKeyList'
          description: Specifies the attributes that should be indexed on. Currently
            only a single attribute is supported.
        IsUnique:
          allOf:
          - $ref: '#/components/schemas/Bool'
          description: Indicates whether the attribute that is being indexed has unique
            values or not.
        ParentReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: A reference to the parent object that contains the index object.
        LinkName:
          allOf:
          - $ref: '#/components/schemas/LinkName'
          description: The name of the link between the parent object and the index
            object.
        BatchReferenceName:
          allOf:
          - $ref: '#/components/schemas/BatchReferenceName'
          description: The batch reference name. See [Transaction Support](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/transaction_support.html)
            for more information.
      required:
      - OrderedIndexedAttributeList
      - IsUnique
      description: Creates an index object inside of a BatchRead operation. For more
        information, see CreateIndex and BatchReadRequest$Operations.
    BatchCreateIndexResponse:
      type: object
      properties:
        ObjectIdentifier:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifier'
          description: The `ObjectIdentifier` of the index created by this operation.
      description: Represents the output of a CreateIndex response operation.
    BatchCreateObject:
      type: object
      properties:
        SchemaFacet:
          allOf:
          - $ref: '#/components/schemas/SchemaFacetList'
          description: A list of `FacetArns` that will be associated with the object.
            For more information, see arns.
        ObjectAttributeList:
          allOf:
          - $ref: '#/components/schemas/AttributeKeyAndValueList'
          description: An attribute map, which contains an attribute ARN as the key
            and attribute value as the map value.
        ParentReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: If specified, the parent reference to which this object will
            be attached.
        LinkName:
          allOf:
          - $ref: '#/components/schemas/LinkName'
          description: The name of the link.
        BatchReferenceName:
          allOf:
          - $ref: '#/components/schemas/BatchReferenceName'
          description: The batch reference name. See [Transaction Support](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/transaction_support.html)
            for more information.
      required:
      - SchemaFacet
      - ObjectAttributeList
      description: Represents the output of a CreateObject operation.
    BatchCreateObjectResponse:
      type: object
      properties:
        ObjectIdentifier:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifier'
          description: The ID that is associated with the object.
      description: Represents the output of a CreateObject response operation.
    BatchDeleteObject:
      type: object
      properties:
        ObjectReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: The reference that identifies the object.
      required:
      - ObjectReference
      description: Represents the output of a DeleteObject operation.
    BatchDeleteObjectResponse:
      type: object
      properties: {}
      description: Represents the output of a DeleteObject response operation.
    BatchDetachFromIndex:
      type: object
      properties:
        IndexReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: A reference to the index object.
        TargetReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: A reference to the object being detached from the index.
      required:
      - IndexReference
      - TargetReference
      description: Detaches the specified object from the specified index inside a
        BatchRead operation. For more information, see DetachFromIndex and BatchReadRequest$Operations.
    BatchDetachFromIndexResponse:
      type: object
      properties:
        DetachedObjectIdentifier:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifier'
          description: The `ObjectIdentifier` of the object that was detached from
            the index.
      description: Represents the output of a DetachFromIndex response operation.
    BatchDetachObject:
      type: object
      properties:
        ParentReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: Parent reference from which the object with the specified link
            name is detached.
        LinkName:
          allOf:
          - $ref: '#/components/schemas/LinkName'
          description: The name of the link.
        BatchReferenceName:
          allOf:
          - $ref: '#/components/schemas/BatchReferenceName'
          description: The batch reference name. See [Transaction Support](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/transaction_support.html)
            for more information.
      required:
      - ParentReference
      - LinkName
      description: Represents the output of a DetachObject operation.
    BatchDetachObjectResponse:
      type: object
      properties:
        detachedObjectIdentifier:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifier'
          description: The `ObjectIdentifier` of the detached object.
      description: Represents the output of a DetachObject response operation.
    BatchDetachPolicy:
      type: object
      properties:
        PolicyReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: Reference that identifies the policy object.
        ObjectReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: Reference that identifies the object whose policy object will
            be detached.
      required:
      - PolicyReference
      - ObjectReference
      description: Detaches the specified policy from the specified directory inside
        a BatchWrite operation. For more information, see DetachPolicy and BatchWriteRequest$Operations.
    BatchDetachPolicyResponse:
      type: object
      properties: {}
      description: Represents the output of a DetachPolicy response operation.
    BatchDetachTypedLink:
      type: object
      properties:
        TypedLinkSpecifier:
          allOf:
          - $ref: '#/components/schemas/TypedLinkSpecifier'
          description: Used to accept a typed link specifier as input.
      required:
      - TypedLinkSpecifier
      description: Detaches a typed link from a specified source and target object
        inside a BatchRead operation. For more information, see DetachTypedLink and
        BatchReadRequest$Operations.
    BatchDetachTypedLinkResponse:
      type: object
      properties: {}
      description: Represents the output of a DetachTypedLink response operation.
    BatchGetLinkAttributes:
      type: object
      properties:
        TypedLinkSpecifier:
          allOf:
          - $ref: '#/components/schemas/TypedLinkSpecifier'
          description: Allows a typed link specifier to be accepted as input.
        AttributeNames:
          allOf:
          - $ref: '#/components/schemas/AttributeNameList'
          description: A list of attribute names whose values will be retrieved.
      required:
      - TypedLinkSpecifier
      - AttributeNames
      description: Retrieves attributes that are associated with a typed link inside
        a BatchRead operation. For more information, see GetLinkAttributes and BatchReadRequest$Operations.
    BatchGetLinkAttributesResponse:
      type: object
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/AttributeKeyAndValueList'
          description: The attributes that are associated with the typed link.
      description: Represents the output of a GetLinkAttributes response operation.
    BatchGetObjectAttributes:
      type: object
      properties:
        ObjectReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: Reference that identifies the object whose attributes will
            be retrieved.
        SchemaFacet:
          allOf:
          - $ref: '#/components/schemas/SchemaFacet'
          description: Identifier for the facet whose attributes will be retrieved.
            See SchemaFacet for details.
        AttributeNames:
          allOf:
          - $ref: '#/components/schemas/AttributeNameList'
          description: List of attribute names whose values will be retrieved.
      required:
      - ObjectReference
      - SchemaFacet
      - AttributeNames
      description: Retrieves attributes within a facet that are associated with an
        object inside an BatchRead operation. For more information, see GetObjectAttributes
        and BatchReadRequest$Operations.
    BatchGetObjectAttributesResponse:
      type: object
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/AttributeKeyAndValueList'
          description: The attribute values that are associated with an object.
      description: Represents the output of a GetObjectAttributes response operation.
    BatchGetObjectInformation:
      type: object
      properties:
        ObjectReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: A reference to the object.
      required:
      - ObjectReference
      description: Retrieves metadata about an object inside a BatchRead operation.
        For more information, see GetObjectInformation and BatchReadRequest$Operations.
    BatchGetObjectInformationResponse:
      type: object
      properties:
        SchemaFacets:
          allOf:
          - $ref: '#/components/schemas/SchemaFacetList'
          description: The facets attached to the specified object.
        ObjectIdentifier:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifier'
          description: The `ObjectIdentifier` of the specified object.
      description: Represents the output of a GetObjectInformation response operation.
    BatchListAttachedIndices:
      type: object
      properties:
        TargetReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: A reference to the object that has indices attached.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          description: The maximum number of results to retrieve.
      required:
      - TargetReference
      description: Lists indices attached to an object inside a BatchRead operation.
        For more information, see ListAttachedIndices and BatchReadRequest$Operations.
    BatchListAttachedIndicesResponse:
      type: object
      properties:
        IndexAttachments:
          allOf:
          - $ref: '#/components/schemas/IndexAttachmentList'
          description: The indices attached to the specified object.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
      description: Represents the output of a ListAttachedIndices response operation.
    BatchListIncomingTypedLinks:
      type: object
      properties:
        ObjectReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: The reference that identifies the object whose attributes will
            be listed.
        FilterAttributeRanges:
          allOf:
          - $ref: '#/components/schemas/TypedLinkAttributeRangeList'
          description: Provides range filters for multiple attributes. When providing
            ranges to typed link selection, any inexact ranges must be specified at
            the end. Any attributes that do not have a range specified are presumed
            to match the entire range.
        FilterTypedLink:
          allOf:
          - $ref: '#/components/schemas/TypedLinkSchemaAndFacetName'
          description: Filters are interpreted in the order of the attributes on the
            typed link facet, not the order in which they are supplied to any API
            calls.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          description: The maximum number of results to retrieve.
      required:
      - ObjectReference
      description: Returns a paginated list of all the incoming TypedLinkSpecifier
        information for an object inside a BatchRead operation. For more information,
        see ListIncomingTypedLinks and BatchReadRequest$Operations.
    BatchListIncomingTypedLinksResponse:
      type: object
      properties:
        LinkSpecifiers:
          allOf:
          - $ref: '#/components/schemas/TypedLinkSpecifierList'
          description: Returns one or more typed link specifiers as output.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
      description: Represents the output of a ListIncomingTypedLinks response operation.
    BatchListIndex:
      type: object
      properties:
        RangesOnIndexedValues:
          allOf:
          - $ref: '#/components/schemas/ObjectAttributeRangeList'
          description: Specifies the ranges of indexed values that you want to query.
        IndexReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: The reference to the index to list.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          description: The maximum number of results to retrieve.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
      required:
      - IndexReference
      description: Lists objects attached to the specified index inside a BatchRead
        operation. For more information, see ListIndex and BatchReadRequest$Operations.
    BatchListIndexResponse:
      type: object
      properties:
        IndexAttachments:
          allOf:
          - $ref: '#/components/schemas/IndexAttachmentList'
          description: The objects and indexed values attached to the index.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
      description: Represents the output of a ListIndex response operation.
    BatchListObjectAttributes:
      type: object
      properties:
        ObjectReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: Reference of the object whose attributes need to be listed.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          description: The maximum number of items to be retrieved in a single call.
            This is an approximate number.
        FacetFilter:
          allOf:
          - $ref: '#/components/schemas/SchemaFacet'
          description: Used to filter the list of object attributes that are associated
            with a certain facet.
      required:
      - ObjectReference
      description: Represents the output of a ListObjectAttributes operation.
    BatchListObjectAttributesResponse:
      type: object
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/AttributeKeyAndValueList'
          description: The attributes map that is associated with the object. `AttributeArn`
            is the key; attribute value is the value.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
      description: Represents the output of a ListObjectAttributes response operation.
    BatchListObjectChildren:
      type: object
      properties:
        ObjectReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: Reference of the object for which child objects are being listed.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          description: Maximum number of items to be retrieved in a single call. This
            is an approximate number.
      required:
      - ObjectReference
      description: Represents the output of a ListObjectChildren operation.
    BatchListObjectChildrenResponse:
      type: object
      properties:
        Children:
          allOf:
          - $ref: '#/components/schemas/LinkNameToObjectIdentifierMap'
          description: The children structure, which is a map with the key as the
            `LinkName` and `ObjectIdentifier` as the value.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
      description: Represents the output of a ListObjectChildren response operation.
    BatchListObjectParentPaths:
      type: object
      properties:
        ObjectReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: The reference that identifies the object whose attributes will
            be listed.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          description: The maximum number of results to retrieve.
      required:
      - ObjectReference
      description: Retrieves all available parent paths for any object type such as
        node, leaf node, policy node, and index node objects inside a BatchRead operation.
        For more information, see ListObjectParentPaths and BatchReadRequest$Operations.
    BatchListObjectParentPathsResponse:
      type: object
      properties:
        PathToObjectIdentifiersList:
          allOf:
          - $ref: '#/components/schemas/PathToObjectIdentifiersList'
          description: Returns the path to the `ObjectIdentifiers` that are associated
            with the directory.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
      description: Represents the output of a ListObjectParentPaths response operation.
    BatchListObjectParents:
      type: object
      properties:
        ObjectReference:
          $ref: '#/components/schemas/ObjectReference'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          description: The maximum number of items to be retrieved in a single call.
            This is an approximate number.
      required:
      - ObjectReference
      description: Lists parent objects that are associated with a given object in
        pagination fashion.
    BatchListObjectParentsResponse:
      type: object
      properties:
        ParentLinks:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifierAndLinkNameList'
          description: Returns a list of parent reference and LinkName Tuples.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
      description: Represents the output of a ListObjectParents response operation.
    BatchListObjectPolicies:
      type: object
      properties:
        ObjectReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: The reference that identifies the object whose attributes will
            be listed.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          description: The maximum number of results to retrieve.
      required:
      - ObjectReference
      description: Returns policies attached to an object in pagination fashion inside
        a BatchRead operation. For more information, see ListObjectPolicies and BatchReadRequest$Operations.
    BatchListObjectPoliciesResponse:
      type: object
      properties:
        AttachedPolicyIds:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifierList'
          description: A list of policy `ObjectIdentifiers`, that are attached to
            the object.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
      description: Represents the output of a ListObjectPolicies response operation.
    BatchListOutgoingTypedLinks:
      type: object
      properties:
        ObjectReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: The reference that identifies the object whose attributes will
            be listed.
        FilterAttributeRanges:
          allOf:
          - $ref: '#/components/schemas/TypedLinkAttributeRangeList'
          description: Provides range filters for multiple attributes. When providing
            ranges to typed link selection, any inexact ranges must be specified at
            the end. Any attributes that do not have a range specified are presumed
            to match the entire range.
        FilterTypedLink:
          allOf:
          - $ref: '#/components/schemas/TypedLinkSchemaAndFacetName'
          description: Filters are interpreted in the order of the attributes defined
            on the typed link facet, not the order they are supplied to any API calls.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          description: The maximum number of results to retrieve.
      required:
      - ObjectReference
      description: Returns a paginated list of all the outgoing TypedLinkSpecifier
        information for an object inside a BatchRead operation. For more information,
        see ListOutgoingTypedLinks and BatchReadRequest$Operations.
    BatchListOutgoingTypedLinksResponse:
      type: object
      properties:
        TypedLinkSpecifiers:
          allOf:
          - $ref: '#/components/schemas/TypedLinkSpecifierList'
          description: Returns a typed link specifier as output.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
      description: Represents the output of a ListOutgoingTypedLinks response operation.
    BatchListPolicyAttachments:
      type: object
      properties:
        PolicyReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: The reference that identifies the policy object.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          description: The maximum number of results to retrieve.
      required:
      - PolicyReference
      description: Returns all of the `ObjectIdentifiers` to which a given policy
        is attached inside a BatchRead operation. For more information, see ListPolicyAttachments
        and BatchReadRequest$Operations.
    BatchListPolicyAttachmentsResponse:
      type: object
      properties:
        ObjectIdentifiers:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifierList'
          description: A list of `ObjectIdentifiers` to which the policy is attached.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
      description: Represents the output of a ListPolicyAttachments response operation.
    BatchLookupPolicy:
      type: object
      properties:
        ObjectReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: Reference that identifies the object whose policies will be
            looked up.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          description: The maximum number of results to retrieve.
      required:
      - ObjectReference
      description: Lists all policies from the root of the Directory to the object
        specified inside a BatchRead operation. For more information, see LookupPolicy
        and BatchReadRequest$Operations.
    BatchLookupPolicyResponse:
      type: object
      properties:
        PolicyToPathList:
          allOf:
          - $ref: '#/components/schemas/PolicyToPathList'
          description: Provides list of path to policies. Policies contain `PolicyId`,
            `ObjectIdentifier`, and `PolicyType`. For more information, see [Policies](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/key_concepts_directory.html#key_concepts_policies).
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
      description: Represents the output of a LookupPolicy response operation.
    BatchOperationIndex:
      type: integer
      default: 0
    BatchReadException:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/BatchReadExceptionType'
          description: A type of exception, such as `InvalidArnException`.
        Message:
          allOf:
          - $ref: '#/components/schemas/ExceptionMessage'
          description: An exception message that is associated with the failure.
      description: The batch read exception structure, which contains the exception
        type and message.
    BatchReadExceptionType:
      type: string
      enum:
      - ValidationException
      - InvalidArnException
      - ResourceNotFoundException
      - InvalidNextTokenException
      - AccessDeniedException
      - NotNodeException
      - FacetValidationException
      - CannotListParentOfRootException
      - NotIndexException
      - NotPolicyException
      - DirectoryNotEnabledException
      - LimitExceededException
      - InternalServiceException
    BatchReadOperation:
      type: object
      properties:
        ListObjectAttributes:
          allOf:
          - $ref: '#/components/schemas/BatchListObjectAttributes'
          description: Lists all attributes that are associated with an object.
        ListObjectChildren:
          allOf:
          - $ref: '#/components/schemas/BatchListObjectChildren'
          description: Returns a paginated list of child objects that are associated
            with a given object.
        ListAttachedIndices:
          allOf:
          - $ref: '#/components/schemas/BatchListAttachedIndices'
          description: Lists indices attached to an object.
        ListObjectParentPaths:
          allOf:
          - $ref: '#/components/schemas/BatchListObjectParentPaths'
          description: Retrieves all available parent paths for any object type such
            as node, leaf node, policy node, and index node objects. For more information
            about objects, see [Directory Structure](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/key_concepts_directorystructure.html).
        GetObjectInformation:
          allOf:
          - $ref: '#/components/schemas/BatchGetObjectInformation'
          description: Retrieves metadata about an object.
        GetObjectAttributes:
          allOf:
          - $ref: '#/components/schemas/BatchGetObjectAttributes'
          description: Retrieves attributes within a facet that are associated with
            an object.
        ListObjectParents:
          allOf:
          - $ref: '#/components/schemas/BatchListObjectParents'
          description: Lists parent objects that are associated with a given object
            in pagination fashion.
        ListObjectPolicies:
          allOf:
          - $ref: '#/components/schemas/BatchListObjectPolicies'
          description: Returns policies attached to an object in pagination fashion.
        ListPolicyAttachments:
          allOf:
          - $ref: '#/components/schemas/BatchListPolicyAttachments'
          description: Returns all of the `ObjectIdentifiers` to which a given policy
            is attached.
        LookupPolicy:
          allOf:
          - $ref: '#/components/schemas/BatchLookupPolicy'
          description: Lists all policies from the root of the Directory to the object
            specified. If there are no policies present, an empty list is returned.
            If policies are present, and if some objects don't have the policies attached,
            it returns the `ObjectIdentifier` for such objects. If policies are present,
            it returns `ObjectIdentifier`, `policyId`, and `policyType`. Paths that
            don't lead to the root from the target object are ignored. For more information,
            see [Policies](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/key_concepts_directory.html#key_concepts_policies).
        ListIndex:
          allOf:
          - $ref: '#/components/schemas/BatchListIndex'
          description: Lists objects attached to the specified index.
        ListOutgoingTypedLinks:
          allOf:
          - $ref: '#/components/schemas/BatchListOutgoingTypedLinks'
          description: Returns a paginated list of all the outgoing TypedLinkSpecifier
            information for an object. It also supports filtering by typed link facet
            and identity attributes. For more information, see [Typed Links](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink).
        ListIncomingTypedLinks:
          allOf:
          - $ref: '#/components/schemas/BatchListIncomingTypedLinks'
          description: Returns a paginated list of all the incoming TypedLinkSpecifier
            information for an object. It also supports filtering by typed link facet
            and identity attributes. For more information, see [Typed Links](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink).
        GetLinkAttributes:
          allOf:
          - $ref: '#/components/schemas/BatchGetLinkAttributes'
          description: Retrieves attributes that are associated with a typed link.
      description: Represents the output of a `BatchRead` operation.
    BatchReadOperationList:
      type: array
      items:
        $ref: '#/components/schemas/BatchReadOperation'
    BatchReadOperationResponse:
      type: object
      properties:
        SuccessfulResponse:
          allOf:
          - $ref: '#/components/schemas/BatchReadSuccessfulResponse'
          description: Identifies which operation in a batch has succeeded.
        ExceptionResponse:
          allOf:
          - $ref: '#/components/schemas/BatchReadException'
          description: Identifies which operation in a batch has failed.
      description: Represents the output of a `BatchRead` response operation.
    BatchReadOperationResponseList:
      type: array
      items:
        $ref: '#/components/schemas/BatchReadOperationResponse'
    BatchReadRequest:
      type: object
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) that is associated with the
            Directory. For more information, see arns.
        Operations:
          allOf:
          - $ref: '#/components/schemas/BatchReadOperationList'
          description: A list of operations that are part of the batch.
        ConsistencyLevel:
          allOf:
          - $ref: '#/components/schemas/ConsistencyLevel'
          description: Represents the manner and timing in which the successful write
            or update of an object is reflected in a subsequent read operation of
            that same object.
      required:
      - DirectoryArn
      - Operations
    BatchReadResponse:
      type: object
      properties:
        Responses:
          allOf:
          - $ref: '#/components/schemas/BatchReadOperationResponseList'
          description: A list of all the responses for each batch read.
    BatchReadSuccessfulResponse:
      type: object
      properties:
        ListObjectAttributes:
          allOf:
          - $ref: '#/components/schemas/BatchListObjectAttributesResponse'
          description: Lists all attributes that are associated with an object.
        ListObjectChildren:
          allOf:
          - $ref: '#/components/schemas/BatchListObjectChildrenResponse'
          description: Returns a paginated list of child objects that are associated
            with a given object.
        GetObjectInformation:
          allOf:
          - $ref: '#/components/schemas/BatchGetObjectInformationResponse'
          description: Retrieves metadata about an object.
        GetObjectAttributes:
          allOf:
          - $ref: '#/components/schemas/BatchGetObjectAttributesResponse'
          description: Retrieves attributes within a facet that are associated with
            an object.
        ListAttachedIndices:
          allOf:
          - $ref: '#/components/schemas/BatchListAttachedIndicesResponse'
          description: Lists indices attached to an object.
        ListObjectParentPaths:
          allOf:
          - $ref: '#/components/schemas/BatchListObjectParentPathsResponse'
          description: Retrieves all available parent paths for any object type such
            as node, leaf node, policy node, and index node objects. For more information
            about objects, see [Directory Structure](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/key_concepts_directorystructure.html).
        ListObjectPolicies:
          allOf:
          - $ref: '#/components/schemas/BatchListObjectPoliciesResponse'
          description: Returns policies attached to an object in pagination fashion.
        ListPolicyAttachments:
          allOf:
          - $ref: '#/components/schemas/BatchListPolicyAttachmentsResponse'
          description: Returns all of the `ObjectIdentifiers` to which a given policy
            is attached.
        LookupPolicy:
          allOf:
          - $ref: '#/components/schemas/BatchLookupPolicyResponse'
          description: Lists all policies from the root of the Directory to the object
            specified. If there are no policies present, an empty list is returned.
            If policies are present, and if some objects don't have the policies attached,
            it returns the `ObjectIdentifier` for such objects. If policies are present,
            it returns `ObjectIdentifier`, `policyId`, and `policyType`. Paths that
            don't lead to the root from the target object are ignored. For more information,
            see [Policies](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/key_concepts_directory.html#key_concepts_policies).
        ListIndex:
          allOf:
          - $ref: '#/components/schemas/BatchListIndexResponse'
          description: Lists objects attached to the specified index.
        ListOutgoingTypedLinks:
          allOf:
          - $ref: '#/components/schemas/BatchListOutgoingTypedLinksResponse'
          description: Returns a paginated list of all the outgoing TypedLinkSpecifier
            information for an object. It also supports filtering by typed link facet
            and identity attributes. For more information, see [Typed Links](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink).
        ListIncomingTypedLinks:
          allOf:
          - $ref: '#/components/schemas/BatchListIncomingTypedLinksResponse'
          description: Returns a paginated list of all the incoming TypedLinkSpecifier
            information for an object. It also supports filtering by typed link facet
            and identity attributes. For more information, see [Typed Links](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink).
        GetLinkAttributes:
          allOf:
          - $ref: '#/components/schemas/BatchGetLinkAttributesResponse'
          description: The list of attributes to retrieve from the typed link.
        ListObjectParents:
          allOf:
          - $ref: '#/components/schemas/BatchListObjectParentsResponse'
          description: The list of parent objects to retrieve.
      description: Represents the output of a `BatchRead` success response operation.
    BatchReferenceName:
      type: string
    BatchRemoveFacetFromObject:
      type: object
      properties:
        SchemaFacet:
          allOf:
          - $ref: '#/components/schemas/SchemaFacet'
          description: The facet to remove from the object.
        ObjectReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: A reference to the object whose facet will be removed.
      required:
      - SchemaFacet
      - ObjectReference
      description: A batch operation to remove a facet from an object.
    BatchRemoveFacetFromObjectResponse:
      type: object
      properties: {}
      description: An empty result that represents success.
    BatchUpdateLinkAttributes:
      type: object
      properties:
        TypedLinkSpecifier:
          allOf:
          - $ref: '#/components/schemas/TypedLinkSpecifier'
          description: Allows a typed link specifier to be accepted as input.
        AttributeUpdates:
          allOf:
          - $ref: '#/components/schemas/LinkAttributeUpdateList'
          description: The attributes update structure.
      required:
      - TypedLinkSpecifier
      - AttributeUpdates
      description: Updates a given typed link’s attributes inside a BatchRead operation.
        Attributes to be updated must not contribute to the typed link’s identity,
        as defined by its `IdentityAttributeOrder`. For more information, see UpdateLinkAttributes
        and BatchReadRequest$Operations.
    BatchUpdateLinkAttributesResponse:
      type: object
      properties: {}
      description: Represents the output of a UpdateLinkAttributes response operation.
    BatchUpdateObjectAttributes:
      type: object
      properties:
        ObjectReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: Reference that identifies the object.
        AttributeUpdates:
          allOf:
          - $ref: '#/components/schemas/ObjectAttributeUpdateList'
          description: Attributes update structure.
      required:
      - ObjectReference
      - AttributeUpdates
      description: Represents the output of a `BatchUpdate` operation.
    BatchUpdateObjectAttributesResponse:
      type: object
      properties:
        ObjectIdentifier:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifier'
          description: ID that is associated with the object.
      description: Represents the output of a `BatchUpdate` response operation.
    BatchWriteException:
      type: object
      properties:
        Index:
          $ref: '#/components/schemas/BatchOperationIndex'
        Type:
          $ref: '#/components/schemas/BatchWriteExceptionType'
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: A `BatchWrite` exception has occurred.
    BatchWriteExceptionType:
      type: string
      enum:
      - InternalServiceException
      - ValidationException
      - InvalidArnException
      - LinkNameAlreadyInUseException
      - StillContainsLinksException
      - FacetValidationException
      - ObjectNotDetachedException
      - ResourceNotFoundException
      - AccessDeniedException
      - InvalidAttachmentException
      - NotIndexException
      - NotNodeException
      - IndexedAttributeMissingException
      - ObjectAlreadyDetachedException
      - NotPolicyException
      - DirectoryNotEnabledException
      - LimitExceededException
      - UnsupportedIndexTypeException
    BatchWriteOperation:
      type: object
      properties:
        CreateObject:
          allOf:
          - $ref: '#/components/schemas/BatchCreateObject'
          description: Creates an object.
        AttachObject:
          allOf:
          - $ref: '#/components/schemas/BatchAttachObject'
          description: Attaches an object to a Directory.
        DetachObject:
          allOf:
          - $ref: '#/components/schemas/BatchDetachObject'
          description: Detaches an object from a Directory.
        UpdateObjectAttributes:
          allOf:
          - $ref: '#/components/schemas/BatchUpdateObjectAttributes'
          description: Updates a given object's attributes.
        DeleteObject:
          allOf:
          - $ref: '#/components/schemas/BatchDeleteObject'
          description: Deletes an object in a Directory.
        AddFacetToObject:
          allOf:
          - $ref: '#/components/schemas/BatchAddFacetToObject'
          description: A batch operation that adds a facet to an object.
        RemoveFacetFromObject:
          allOf:
          - $ref: '#/components/schemas/BatchRemoveFacetFromObject'
          description: A batch operation that removes a facet from an object.
        AttachPolicy:
          allOf:
          - $ref: '#/components/schemas/BatchAttachPolicy'
          description: Attaches a policy object to a regular object. An object can
            have a limited number of attached policies.
        DetachPolicy:
          allOf:
          - $ref: '#/components/schemas/BatchDetachPolicy'
          description: Detaches a policy from a Directory.
        CreateIndex:
          allOf:
          - $ref: '#/components/schemas/BatchCreateIndex'
          description: Creates an index object. See [Indexing and search](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/indexing_search.htm)
            for more information.
        AttachToIndex:
          allOf:
          - $ref: '#/components/schemas/BatchAttachToIndex'
          description: Attaches the specified object to the specified index.
        DetachFromIndex:
          allOf:
          - $ref: '#/components/schemas/BatchDetachFromIndex'
          description: Detaches the specified object from the specified index.
        AttachTypedLink:
          allOf:
          - $ref: '#/components/schemas/BatchAttachTypedLink'
          description: Attaches a typed link to a specified source and target object.
            For more information, see [Typed Links](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink).
        DetachTypedLink:
          allOf:
          - $ref: '#/components/schemas/BatchDetachTypedLink'
          description: Detaches a typed link from a specified source and target object.
            For more information, see [Typed Links](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink).
        UpdateLinkAttributes:
          allOf:
          - $ref: '#/components/schemas/BatchUpdateLinkAttributes'
          description: Updates a given object's attributes.
      description: Represents the output of a `BatchWrite` operation.
    BatchWriteOperationList:
      type: array
      items:
        $ref: '#/components/schemas/BatchWriteOperation'
    BatchWriteOperationResponse:
      type: object
      properties:
        CreateObject:
          allOf:
          - $ref: '#/components/schemas/BatchCreateObjectResponse'
          description: Creates an object in a Directory.
        AttachObject:
          allOf:
          - $ref: '#/components/schemas/BatchAttachObjectResponse'
          description: Attaches an object to a Directory.
        DetachObject:
          allOf:
          - $ref: '#/components/schemas/BatchDetachObjectResponse'
          description: Detaches an object from a Directory.
        UpdateObjectAttributes:
          allOf:
          - $ref: '#/components/schemas/BatchUpdateObjectAttributesResponse'
          description: Updates a given object’s attributes.
        DeleteObject:
          allOf:
          - $ref: '#/components/schemas/BatchDeleteObjectResponse'
          description: Deletes an object in a Directory.
        AddFacetToObject:
          allOf:
          - $ref: '#/components/schemas/BatchAddFacetToObjectResponse'
          description: The result of an add facet to object batch operation.
        RemoveFacetFromObject:
          allOf:
          - $ref: '#/components/schemas/BatchRemoveFacetFromObjectResponse'
          description: The result of a batch remove facet from object operation.
        AttachPolicy:
          allOf:
          - $ref: '#/components/schemas/BatchAttachPolicyResponse'
          description: Attaches a policy object to a regular object. An object can
            have a limited number of attached policies.
        DetachPolicy:
          allOf:
          - $ref: '#/components/schemas/BatchDetachPolicyResponse'
          description: Detaches a policy from a Directory.
        CreateIndex:
          allOf:
          - $ref: '#/components/schemas/BatchCreateIndexResponse'
          description: Creates an index object. See [Indexing and search](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/indexing_search.htm)
            for more information.
        AttachToIndex:
          allOf:
          - $ref: '#/components/schemas/BatchAttachToIndexResponse'
          description: Attaches the specified object to the specified index.
        DetachFromIndex:
          allOf:
          - $ref: '#/components/schemas/BatchDetachFromIndexResponse'
          description: Detaches the specified object from the specified index.
        AttachTypedLink:
          allOf:
          - $ref: '#/components/schemas/BatchAttachTypedLinkResponse'
          description: Attaches a typed link to a specified source and target object.
            For more information, see [Typed Links](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink).
        DetachTypedLink:
          allOf:
          - $ref: '#/components/schemas/BatchDetachTypedLinkResponse'
          description: Detaches a typed link from a specified source and target object.
            For more information, see [Typed Links](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink).
        UpdateLinkAttributes:
          allOf:
          - $ref: '#/components/schemas/BatchUpdateLinkAttributesResponse'
          description: Represents the output of a `BatchWrite` response operation.
      description: Represents the output of a `BatchWrite` response operation.
    BatchWriteOperationResponseList:
      type: array
      items:
        $ref: '#/components/schemas/BatchWriteOperationResponse'
    BatchWriteRequest:
      type: object
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) that is associated with the
            Directory. For more information, see arns.
        Operations:
          allOf:
          - $ref: '#/components/schemas/BatchWriteOperationList'
          description: A list of operations that are part of the batch.
      required:
      - DirectoryArn
      - Operations
    BatchWriteResponse:
      type: object
      properties:
        Responses:
          allOf:
          - $ref: '#/components/schemas/BatchWriteOperationResponseList'
          description: A list of all the responses for each batch write.
    BinaryAttributeValue:
      type: string
      format: byte
    Bool:
      type: boolean
      default: false
    BooleanAttributeValue:
      type: boolean
    CannotListParentOfRootException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Cannot list the parents of a Directory root.
    ConsistencyLevel:
      type: string
      enum:
      - SERIALIZABLE
      - EVENTUAL
    CreateDirectoryRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DirectoryName'
          description: The name of the Directory. Should be unique per account, per
            region.
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the published schema that
            will be copied into the data Directory. For more information, see arns.
      required:
      - Name
      - SchemaArn
    CreateDirectoryResponse:
      type: object
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/DirectoryArn'
          description: The ARN that is associated with the Directory. For more information,
            see arns.
        Name:
          allOf:
          - $ref: '#/components/schemas/DirectoryName'
          description: The name of the Directory.
        ObjectIdentifier:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifier'
          description: The root object node of the created directory.
        AppliedSchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the published schema in the Directory. Once a published
            schema is copied into the directory, it has its own ARN, which is referred
            to applied schema ARN. For more information, see arns.
      required:
      - DirectoryArn
      - Name
      - ObjectIdentifier
      - AppliedSchemaArn
    CreateFacetRequest:
      type: object
      properties:
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The schema ARN in which the new Facet will be created. For
            more information, see arns.
        Name:
          allOf:
          - $ref: '#/components/schemas/FacetName'
          description: The name of the Facet, which is unique for a given schema.
        Attributes:
          allOf:
          - $ref: '#/components/schemas/FacetAttributeList'
          description: The attributes that are associated with the Facet.
        ObjectType:
          allOf:
          - $ref: '#/components/schemas/ObjectType'
          description: "Specifies whether a given object created from this facet is\
            \ of type node, leaf node, policy or index.\n\n  * Node: Can have multiple\
            \ children but one parent.\n\n  * Leaf node: Cannot have children but\
            \ can have multiple parents.\n\n  * Policy: Allows you to store a policy\
            \ document and policy type. For more information, see [Policies](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/key_concepts_directory.html#key_concepts_policies).\n\
            \n  * Index: Can be created with the Index API."
        FacetStyle:
          allOf:
          - $ref: '#/components/schemas/FacetStyle'
          description: There are two different styles that you can define on any given
            facet, `Static` and `Dynamic`. For static facets, all attributes must
            be defined in the schema. For dynamic facets, attributes can be defined
            during data plane operations.
      required:
      - SchemaArn
      - Name
    CreateFacetResponse:
      type: object
      properties: {}
    CreateIndexRequest:
      type: object
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the directory where the index should be created.
        OrderedIndexedAttributeList:
          allOf:
          - $ref: '#/components/schemas/AttributeKeyList'
          description: Specifies the attributes that should be indexed on. Currently
            only a single attribute is supported.
        IsUnique:
          allOf:
          - $ref: '#/components/schemas/Bool'
          description: Indicates whether the attribute that is being indexed has unique
            values or not.
        ParentReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: A reference to the parent object that contains the index object.
        LinkName:
          allOf:
          - $ref: '#/components/schemas/LinkName'
          description: The name of the link between the parent object and the index
            object.
      required:
      - DirectoryArn
      - OrderedIndexedAttributeList
      - IsUnique
    CreateIndexResponse:
      type: object
      properties:
        ObjectIdentifier:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifier'
          description: The `ObjectIdentifier` of the index created by this operation.
    CreateObjectRequest:
      type: object
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) that is associated with the
            Directory in which the object will be created. For more information, see
            arns.
        SchemaFacets:
          allOf:
          - $ref: '#/components/schemas/SchemaFacetList'
          description: A list of schema facets to be associated with the object. Do
            not provide minor version components. See SchemaFacet for details.
        ObjectAttributeList:
          allOf:
          - $ref: '#/components/schemas/AttributeKeyAndValueList'
          description: The attribute map whose attribute ARN contains the key and
            attribute value as the map value.
        ParentReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: If specified, the parent reference to which this object will
            be attached.
        LinkName:
          allOf:
          - $ref: '#/components/schemas/LinkName'
          description: The name of link that is used to attach this object to a parent.
      required:
      - DirectoryArn
      - SchemaFacets
    CreateObjectResponse:
      type: object
      properties:
        ObjectIdentifier:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifier'
          description: The identifier that is associated with the object.
    CreateSchemaRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/SchemaName'
          description: The name that is associated with the schema. This is unique
            to each account and in each region.
      required:
      - Name
    CreateSchemaResponse:
      type: object
      properties:
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) that is associated with the
            schema. For more information, see arns.
    CreateTypedLinkFacetRequest:
      type: object
      properties:
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) that is associated with the
            schema. For more information, see arns.
        Facet:
          allOf:
          - $ref: '#/components/schemas/TypedLinkFacet'
          description: Facet structure that is associated with the typed link facet.
      required:
      - SchemaArn
      - Facet
    CreateTypedLinkFacetResponse:
      type: object
      properties: {}
    Date:
      type: string
      format: date-time
    DatetimeAttributeValue:
      type: string
      format: date-time
    DeleteDirectoryRequest:
      type: object
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the directory to delete.
      required:
      - DirectoryArn
    DeleteDirectoryResponse:
      type: object
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the deleted directory.
      required:
      - DirectoryArn
    DeleteFacetRequest:
      type: object
      properties:
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) that is associated with the
            Facet. For more information, see arns.
        Name:
          allOf:
          - $ref: '#/components/schemas/FacetName'
          description: The name of the facet to delete.
      required:
      - SchemaArn
      - Name
    DeleteFacetResponse:
      type: object
      properties: {}
    DeleteObjectRequest:
      type: object
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) that is associated with the
            Directory where the object resides. For more information, see arns.
        ObjectReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: A reference that identifies the object.
      required:
      - DirectoryArn
      - ObjectReference
    DeleteObjectResponse:
      type: object
      properties: {}
    DeleteSchemaRequest:
      type: object
      properties:
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the development schema. For
            more information, see arns.
      required:
      - SchemaArn
    DeleteSchemaResponse:
      type: object
      properties:
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The input ARN that is returned as part of the response. For
            more information, see arns.
    DeleteTypedLinkFacetRequest:
      type: object
      properties:
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) that is associated with the
            schema. For more information, see arns.
        Name:
          allOf:
          - $ref: '#/components/schemas/TypedLinkName'
          description: The unique name of the typed link facet.
      required:
      - SchemaArn
      - Name
    DeleteTypedLinkFacetResponse:
      type: object
      properties: {}
    DetachFromIndexRequest:
      type: object
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the directory the index and
            object exist in.
        IndexReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: A reference to the index object.
        TargetReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: A reference to the object being detached from the index.
      required:
      - DirectoryArn
      - IndexReference
      - TargetReference
    DetachFromIndexResponse:
      type: object
      properties:
        DetachedObjectIdentifier:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifier'
          description: The `ObjectIdentifier` of the object that was detached from
            the index.
    DetachObjectRequest:
      type: object
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) that is associated with the
            Directory where objects reside. For more information, see arns.
        ParentReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: The parent reference from which the object with the specified
            link name is detached.
        LinkName:
          allOf:
          - $ref: '#/components/schemas/LinkName'
          description: The link name associated with the object that needs to be detached.
      required:
      - DirectoryArn
      - ParentReference
      - LinkName
    DetachObjectResponse:
      type: object
      properties:
        DetachedObjectIdentifier:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifier'
          description: The `ObjectIdentifier` that was detached from the object.
    DetachPolicyRequest:
      type: object
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) that is associated with the
            Directory where both objects reside. For more information, see arns.
        PolicyReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: Reference that identifies the policy object.
        ObjectReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: Reference that identifies the object whose policy object will
            be detached.
      required:
      - DirectoryArn
      - PolicyReference
      - ObjectReference
    DetachPolicyResponse:
      type: object
      properties: {}
    DetachTypedLinkRequest:
      type: object
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the directory where you want
            to detach the typed link.
        TypedLinkSpecifier:
          allOf:
          - $ref: '#/components/schemas/TypedLinkSpecifier'
          description: Used to accept a typed link specifier as input.
      required:
      - DirectoryArn
      - TypedLinkSpecifier
    Directory:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DirectoryName'
          description: The name of the directory.
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/DirectoryArn'
          description: The Amazon Resource Name (ARN) that is associated with the
            directory. For more information, see arns.
        State:
          allOf:
          - $ref: '#/components/schemas/DirectoryState'
          description: The state of the directory. Can be either `Enabled`, `Disabled`,
            or `Deleted`.
        CreationDateTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time when the directory was created.
      description: Directory structure that includes the directory name and directory
        ARN.
    DirectoryAlreadyExistsException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates that a Directory could not be created due to a naming
        conflict. Choose a different name and try again.
    DirectoryArn:
      type: string
    DirectoryDeletedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: 'A directory that has been deleted and to which access has been
        attempted. Note: The requested resource will eventually cease to exist.'
    DirectoryList:
      type: array
      items:
        $ref: '#/components/schemas/Directory'
    DirectoryName:
      type: string
      pattern: ^[a-zA-Z0-9._-]*$
      minLength: 1
      maxLength: 64
    DirectoryNotDisabledException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: An operation can only operate on a disabled directory.
    DirectoryNotEnabledException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Operations are only permitted on enabled directories.
    DirectoryState:
      type: string
      enum:
      - ENABLED
      - DISABLED
      - DELETED
    DisableDirectoryRequest:
      type: object
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the directory to disable.
      required:
      - DirectoryArn
    DisableDirectoryResponse:
      type: object
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the directory that has been disabled.
      required:
      - DirectoryArn
    EnableDirectoryRequest:
      type: object
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the directory to enable.
      required:
      - DirectoryArn
    EnableDirectoryResponse:
      type: object
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the enabled directory.
      required:
      - DirectoryArn
    ExceptionMessage:
      type: string
    Facet:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/FacetName'
          description: The name of the Facet.
        ObjectType:
          allOf:
          - $ref: '#/components/schemas/ObjectType'
          description: The object type that is associated with the facet. See CreateFacetRequest$ObjectType
            for more details.
        FacetStyle:
          allOf:
          - $ref: '#/components/schemas/FacetStyle'
          description: There are two different styles that you can define on any given
            facet, `Static` and `Dynamic`. For static facets, all attributes must
            be defined in the schema. For dynamic facets, attributes can be defined
            during data plane operations.
      description: A structure that contains `Name`, `ARN`, `Attributes`, ` Rules`,
        and `ObjectTypes`. See [Facets](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_whatarefacets.html)
        for more information.
    FacetAlreadyExistsException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: A facet with the same name already exists.
    FacetAttribute:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/AttributeName'
          description: The name of the facet attribute.
        AttributeDefinition:
          allOf:
          - $ref: '#/components/schemas/FacetAttributeDefinition'
          description: A facet attribute consists of either a definition or a reference.
            This structure contains the attribute definition. See [Attribute References](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_attributereferences.html)
            for more information.
        AttributeReference:
          allOf:
          - $ref: '#/components/schemas/FacetAttributeReference'
          description: An attribute reference that is associated with the attribute.
            See [Attribute References](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_attributereferences.html)
            for more information.
        RequiredBehavior:
          allOf:
          - $ref: '#/components/schemas/RequiredAttributeBehavior'
          description: The required behavior of the `FacetAttribute`.
      required:
      - Name
      description: An attribute that is associated with the Facet.
    FacetAttributeDefinition:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/FacetAttributeType'
          description: The type of the attribute.
        DefaultValue:
          allOf:
          - $ref: '#/components/schemas/TypedAttributeValue'
          description: The default value of the attribute (if configured).
        IsImmutable:
          allOf:
          - $ref: '#/components/schemas/Bool'
          description: Whether the attribute is mutable or not.
        Rules:
          allOf:
          - $ref: '#/components/schemas/RuleMap'
          description: Validation rules attached to the attribute definition.
      required:
      - Type
      description: A facet attribute definition. See [Attribute References](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_attributereferences.html)
        for more information.
    FacetAttributeList:
      type: array
      items:
        $ref: '#/components/schemas/FacetAttribute'
    FacetAttributeReference:
      type: object
      properties:
        TargetFacetName:
          allOf:
          - $ref: '#/components/schemas/FacetName'
          description: The target facet name that is associated with the facet reference.
            See [Attribute References](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_attributereferences.html)
            for more information.
        TargetAttributeName:
          allOf:
          - $ref: '#/components/schemas/AttributeName'
          description: The target attribute name that is associated with the facet
            reference. See [Attribute References](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_attributereferences.html)
            for more information.
      required:
      - TargetFacetName
      - TargetAttributeName
      description: The facet attribute reference that specifies the attribute definition
        that contains the attribute facet name and attribute name.
    FacetAttributeType:
      type: string
      enum:
      - STRING
      - BINARY
      - BOOLEAN
      - NUMBER
      - DATETIME
      - VARIANT
    FacetAttributeUpdate:
      type: object
      properties:
        Attribute:
          allOf:
          - $ref: '#/components/schemas/FacetAttribute'
          description: The attribute to update.
        Action:
          allOf:
          - $ref: '#/components/schemas/UpdateActionType'
          description: The action to perform when updating the attribute.
      description: A structure that contains information used to update an attribute.
    FacetAttributeUpdateList:
      type: array
      items:
        $ref: '#/components/schemas/FacetAttributeUpdate'
    FacetInUseException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Occurs when deleting a facet that contains an attribute that is
        a target to an attribute reference in a different facet.
    FacetName:
      type: string
      pattern: ^[a-zA-Z0-9._-]*$
      minLength: 1
      maxLength: 64
    FacetNameList:
      type: array
      items:
        $ref: '#/components/schemas/FacetName'
    FacetNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: The specified Facet could not be found.
    FacetStyle:
      type: string
      enum:
      - STATIC
      - DYNAMIC
    FacetValidationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: The Facet that you provided was not well formed or could not be
        validated with the schema.
    GetAppliedSchemaVersionRequest:
      type: object
      properties:
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the applied schema.
      required:
      - SchemaArn
    GetAppliedSchemaVersionResponse:
      type: object
      properties:
        AppliedSchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: Current applied schema ARN, including the minor version in
            use if one was provided.
    GetDirectoryRequest:
      type: object
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/DirectoryArn'
          description: The ARN of the directory.
      required:
      - DirectoryArn
    GetDirectoryResponse:
      type: object
      properties:
        Directory:
          allOf:
          - $ref: '#/components/schemas/Directory'
          description: Metadata about the directory.
      required:
      - Directory
    GetFacetRequest:
      type: object
      properties:
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) that is associated with the
            Facet. For more information, see arns.
        Name:
          allOf:
          - $ref: '#/components/schemas/FacetName'
          description: The name of the facet to retrieve.
      required:
      - SchemaArn
      - Name
    GetFacetResponse:
      type: object
      properties:
        Facet:
          allOf:
          - $ref: '#/components/schemas/Facet'
          description: The Facet structure that is associated with the facet.
    GetLinkAttributesRequest:
      type: object
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) that is associated with the
            Directory where the typed link resides. For more information, see arns
            or [Typed Links](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink).
        TypedLinkSpecifier:
          allOf:
          - $ref: '#/components/schemas/TypedLinkSpecifier'
          description: Allows a typed link specifier to be accepted as input.
        AttributeNames:
          allOf:
          - $ref: '#/components/schemas/AttributeNameList'
          description: A list of attribute names whose values will be retrieved.
        ConsistencyLevel:
          allOf:
          - $ref: '#/components/schemas/ConsistencyLevel'
          description: The consistency level at which to retrieve the attributes on
            a typed link.
      required:
      - DirectoryArn
      - TypedLinkSpecifier
      - AttributeNames
    GetLinkAttributesResponse:
      type: object
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/AttributeKeyAndValueList'
          description: The attributes that are associated with the typed link.
    GetObjectAttributesRequest:
      type: object
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) that is associated with the
            Directory where the object resides.
        ObjectReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: Reference that identifies the object whose attributes will
            be retrieved.
        ConsistencyLevel:
          allOf:
          - $ref: '#/components/schemas/ConsistencyLevel'
          description: The consistency level at which to retrieve the attributes on
            an object.
        SchemaFacet:
          allOf:
          - $ref: '#/components/schemas/SchemaFacet'
          description: Identifier for the facet whose attributes will be retrieved.
            See SchemaFacet for details.
        AttributeNames:
          allOf:
          - $ref: '#/components/schemas/AttributeNameList'
          description: List of attribute names whose values will be retrieved.
      required:
      - DirectoryArn
      - ObjectReference
      - SchemaFacet
      - AttributeNames
    GetObjectAttributesResponse:
      type: object
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/AttributeKeyAndValueList'
          description: The attributes that are associated with the object.
    GetObjectInformationRequest:
      type: object
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the directory being retrieved.
        ObjectReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: A reference to the object.
        ConsistencyLevel:
          allOf:
          - $ref: '#/components/schemas/ConsistencyLevel'
          description: The consistency level at which to retrieve the object information.
      required:
      - DirectoryArn
      - ObjectReference
    GetObjectInformationResponse:
      type: object
      properties:
        SchemaFacets:
          allOf:
          - $ref: '#/components/schemas/SchemaFacetList'
          description: The facets attached to the specified object. Although the response
            does not include minor version information, the most recently applied
            minor version of each Facet is in effect. See GetAppliedSchemaVersion
            for details.
        ObjectIdentifier:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifier'
          description: The `ObjectIdentifier` of the specified object.
    GetSchemaAsJsonRequest:
      type: object
      properties:
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the schema to retrieve.
      required:
      - SchemaArn
    GetSchemaAsJsonResponse:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/SchemaName'
          description: The name of the retrieved schema.
        Document:
          allOf:
          - $ref: '#/components/schemas/SchemaJsonDocument'
          description: The JSON representation of the schema document.
    GetTypedLinkFacetInformationRequest:
      type: object
      properties:
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) that is associated with the
            schema. For more information, see arns.
        Name:
          allOf:
          - $ref: '#/components/schemas/TypedLinkName'
          description: The unique name of the typed link facet.
      required:
      - SchemaArn
      - Name
    GetTypedLinkFacetInformationResponse:
      type: object
      properties:
        IdentityAttributeOrder:
          allOf:
          - $ref: '#/components/schemas/AttributeNameList'
          description: The order of identity attributes for the facet, from most significant
            to least significant. The ability to filter typed links considers the
            order that the attributes are defined on the typed link facet. When providing
            ranges to typed link selection, any inexact ranges must be specified at
            the end. Any attributes that do not have a range specified are presumed
            to match the entire range. Filters are interpreted in the order of the
            attributes on the typed link facet, not the order in which they are supplied
            to any API calls. For more information about identity attributes, see
            [Typed Links](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink).
    IncompatibleSchemaException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates a failure occurred while performing a check for backward
        compatibility between the specified schema and the schema that is currently
        applied to the directory.
    IndexAttachment:
      type: object
      properties:
        IndexedAttributes:
          allOf:
          - $ref: '#/components/schemas/AttributeKeyAndValueList'
          description: The indexed attribute values.
        ObjectIdentifier:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifier'
          description: In response to ListIndex, the `ObjectIdentifier` of the object
            attached to the index. In response to ListAttachedIndices, the `ObjectIdentifier`
            of the index attached to the object. This field will always contain the
            `ObjectIdentifier` of the object on the opposite side of the attachment
            specified in the query.
      description: Represents an index and an attached object.
    IndexAttachmentList:
      type: array
      items:
        $ref: '#/components/schemas/IndexAttachment'
    IndexedAttributeMissingException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: An object has been attempted to be attached to an object that does
        not have the appropriate attribute value.
    InternalServiceException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates a problem that must be resolved by Amazon Web Services.
        This might be a transient error in which case you can retry your request until
        it succeeds. Otherwise, go to the [AWS Service Health Dashboard](http://status.aws.amazon.com/)
        site to see if there are any operational issues with the service.
    InvalidArnException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates that the provided ARN value is not valid.
    InvalidAttachmentException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates that an attempt to make an attachment was invalid. For
        example, attaching two nodes with a link type that is not applicable to the
        nodes or attempting to apply a schema to a directory a second time.
    InvalidFacetUpdateException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: An attempt to modify a Facet resulted in an invalid schema exception.
    InvalidNextTokenException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates that the `NextToken` value is not valid.
    InvalidRuleException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Occurs when any of the rule parameter keys or values are invalid.
    InvalidSchemaDocException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates that the provided `SchemaDoc` value is not valid.
    InvalidTaggingRequestException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Can occur for multiple reasons such as when you tag a resource
        that doesn’t exist or if you specify a higher number of tags for a resource
        than the allowed limit. Allowed limit is 50 tags per resource.
    LimitExceededException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates that limits are exceeded. See [Limits](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
        for more information.
    LinkAttributeAction:
      type: object
      properties:
        AttributeActionType:
          allOf:
          - $ref: '#/components/schemas/UpdateActionType'
          description: A type that can be either `UPDATE_OR_CREATE` or `DELETE`.
        AttributeUpdateValue:
          allOf:
          - $ref: '#/components/schemas/TypedAttributeValue'
          description: The value that you want to update to.
      description: The action to take on a typed link attribute value. Updates are
        only supported for attributes which don’t contribute to link identity.
    LinkAttributeUpdate:
      type: object
      properties:
        AttributeKey:
          allOf:
          - $ref: '#/components/schemas/AttributeKey'
          description: The key of the attribute being updated.
        AttributeAction:
          allOf:
          - $ref: '#/components/schemas/LinkAttributeAction'
          description: The action to perform as part of the attribute update.
      description: Structure that contains attribute update information.
    LinkAttributeUpdateList:
      type: array
      items:
        $ref: '#/components/schemas/LinkAttributeUpdate'
    LinkName:
      type: string
      pattern: ^[^\/\[\]\(\):\{\}#@!?\s\\;]+$
      minLength: 1
      maxLength: 64
    LinkNameAlreadyInUseException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates that a link could not be created due to a naming conflict.
        Choose a different name and then try again.
    LinkNameToObjectIdentifierMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ObjectIdentifier'
    ListAppliedSchemaArnsRequest:
      type: object
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the directory you are listing.
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The response for `ListAppliedSchemaArns` when this parameter
            is used will list all minor version ARNs for a major version.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          description: The maximum number of results to retrieve.
      required:
      - DirectoryArn
    ListAppliedSchemaArnsResponse:
      type: object
      properties:
        SchemaArns:
          allOf:
          - $ref: '#/components/schemas/Arns'
          description: The ARNs of schemas that are applied to the directory.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
    ListAttachedIndicesRequest:
      type: object
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the directory.
        TargetReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: A reference to the object that has indices attached.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          description: The maximum number of results to retrieve.
        ConsistencyLevel:
          allOf:
          - $ref: '#/components/schemas/ConsistencyLevel'
          description: The consistency level to use for this operation.
      required:
      - DirectoryArn
      - TargetReference
    ListAttachedIndicesResponse:
      type: object
      properties:
        IndexAttachments:
          allOf:
          - $ref: '#/components/schemas/IndexAttachmentList'
          description: The indices attached to the specified object.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
    ListDevelopmentSchemaArnsRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          description: The maximum number of results to retrieve.
    ListDevelopmentSchemaArnsResponse:
      type: object
      properties:
        SchemaArns:
          allOf:
          - $ref: '#/components/schemas/Arns'
          description: The ARNs of retrieved development schemas.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
    ListDirectoriesRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          description: The maximum number of results to retrieve.
        state:
          allOf:
          - $ref: '#/components/schemas/DirectoryState'
          description: The state of the directories in the list. Can be either Enabled,
            Disabled, or Deleted.
    ListDirectoriesResponse:
      type: object
      properties:
        Directories:
          allOf:
          - $ref: '#/components/schemas/DirectoryList'
          description: Lists all directories that are associated with your account
            in pagination fashion.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
      required:
      - Directories
    ListFacetAttributesRequest:
      type: object
      properties:
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the schema where the facet resides.
        Name:
          allOf:
          - $ref: '#/components/schemas/FacetName'
          description: The name of the facet whose attributes will be retrieved.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          description: The maximum number of results to retrieve.
      required:
      - SchemaArn
      - Name
    ListFacetAttributesResponse:
      type: object
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/FacetAttributeList'
          description: The attributes attached to the facet.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
    ListFacetNamesRequest:
      type: object
      properties:
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) to retrieve facet names from.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          description: The maximum number of results to retrieve.
      required:
      - SchemaArn
    ListFacetNamesResponse:
      type: object
      properties:
        FacetNames:
          allOf:
          - $ref: '#/components/schemas/FacetNameList'
          description: The names of facets that exist within the schema.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
    ListIncomingTypedLinksRequest:
      type: object
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the directory where you want
            to list the typed links.
        ObjectReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: Reference that identifies the object whose attributes will
            be listed.
        FilterAttributeRanges:
          allOf:
          - $ref: '#/components/schemas/TypedLinkAttributeRangeList'
          description: Provides range filters for multiple attributes. When providing
            ranges to typed link selection, any inexact ranges must be specified at
            the end. Any attributes that do not have a range specified are presumed
            to match the entire range.
        FilterTypedLink:
          allOf:
          - $ref: '#/components/schemas/TypedLinkSchemaAndFacetName'
          description: Filters are interpreted in the order of the attributes on the
            typed link facet, not the order in which they are supplied to any API
            calls.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          description: The maximum number of results to retrieve.
        ConsistencyLevel:
          allOf:
          - $ref: '#/components/schemas/ConsistencyLevel'
          description: The consistency level to execute the request at.
      required:
      - DirectoryArn
      - ObjectReference
    ListIncomingTypedLinksResponse:
      type: object
      properties:
        LinkSpecifiers:
          allOf:
          - $ref: '#/components/schemas/TypedLinkSpecifierList'
          description: Returns one or more typed link specifiers as output.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
    ListIndexRequest:
      type: object
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the directory that the index exists in.
        RangesOnIndexedValues:
          allOf:
          - $ref: '#/components/schemas/ObjectAttributeRangeList'
          description: Specifies the ranges of indexed values that you want to query.
        IndexReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: The reference to the index to list.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          description: The maximum number of objects in a single page to retrieve
            from the index during a request. For more information, see [Amazon Cloud
            Directory Limits](http://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html).
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        ConsistencyLevel:
          allOf:
          - $ref: '#/components/schemas/ConsistencyLevel'
          description: The consistency level to execute the request at.
      required:
      - DirectoryArn
      - IndexReference
    ListIndexResponse:
      type: object
      properties:
        IndexAttachments:
          allOf:
          - $ref: '#/components/schemas/IndexAttachmentList'
          description: The objects and indexed values attached to the index.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
    ListManagedSchemaArnsRequest:
      type: object
      properties:
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The response for ListManagedSchemaArns. When this parameter
            is used, all minor version ARNs for a major version are listed.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          description: The maximum number of results to retrieve.
    ListManagedSchemaArnsResponse:
      type: object
      properties:
        SchemaArns:
          allOf:
          - $ref: '#/components/schemas/Arns'
          description: The ARNs for all AWS managed schemas.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
    ListObjectAttributesRequest:
      type: object
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) that is associated with the
            Directory where the object resides. For more information, see arns.
        ObjectReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: The reference that identifies the object whose attributes will
            be listed.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          description: The maximum number of items to be retrieved in a single call.
            This is an approximate number.
        ConsistencyLevel:
          allOf:
          - $ref: '#/components/schemas/ConsistencyLevel'
          description: Represents the manner and timing in which the successful write
            or update of an object is reflected in a subsequent read operation of
            that same object.
        FacetFilter:
          allOf:
          - $ref: '#/components/schemas/SchemaFacet'
          description: Used to filter the list of object attributes that are associated
            with a certain facet.
      required:
      - DirectoryArn
      - ObjectReference
    ListObjectAttributesResponse:
      type: object
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/AttributeKeyAndValueList'
          description: Attributes map that is associated with the object. `AttributeArn`
            is the key, and attribute value is the value.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
    ListObjectChildrenRequest:
      type: object
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) that is associated with the
            Directory where the object resides. For more information, see arns.
        ObjectReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: The reference that identifies the object for which child objects
            are being listed.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          description: The maximum number of items to be retrieved in a single call.
            This is an approximate number.
        ConsistencyLevel:
          allOf:
          - $ref: '#/components/schemas/ConsistencyLevel'
          description: Represents the manner and timing in which the successful write
            or update of an object is reflected in a subsequent read operation of
            that same object.
      required:
      - DirectoryArn
      - ObjectReference
    ListObjectChildrenResponse:
      type: object
      properties:
        Children:
          allOf:
          - $ref: '#/components/schemas/LinkNameToObjectIdentifierMap'
          description: Children structure, which is a map with key as the `LinkName`
            and `ObjectIdentifier` as the value.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
    ListObjectParentPathsRequest:
      type: object
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the directory to which the parent path applies.
        ObjectReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: The reference that identifies the object whose parent paths
            are listed.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          description: The maximum number of items to be retrieved in a single call.
            This is an approximate number.
      required:
      - DirectoryArn
      - ObjectReference
    ListObjectParentPathsResponse:
      type: object
      properties:
        PathToObjectIdentifiersList:
          allOf:
          - $ref: '#/components/schemas/PathToObjectIdentifiersList'
          description: Returns the path to the `ObjectIdentifiers` that are associated
            with the directory.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
    ListObjectParentsRequest:
      type: object
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) that is associated with the
            Directory where the object resides. For more information, see arns.
        ObjectReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: The reference that identifies the object for which parent objects
            are being listed.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          description: The maximum number of items to be retrieved in a single call.
            This is an approximate number.
        ConsistencyLevel:
          allOf:
          - $ref: '#/components/schemas/ConsistencyLevel'
          description: Represents the manner and timing in which the successful write
            or update of an object is reflected in a subsequent read operation of
            that same object.
        IncludeAllLinksToEachParent:
          allOf:
          - $ref: '#/components/schemas/Bool'
          description: When set to True, returns all ListObjectParentsResponse$ParentLinks.
            There could be multiple links between a parent-child pair.
      required:
      - DirectoryArn
      - ObjectReference
    ListObjectParentsResponse:
      type: object
      properties:
        Parents:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifierToLinkNameMap'
          description: The parent structure, which is a map with key as the `ObjectIdentifier`
            and LinkName as the value.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        ParentLinks:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifierAndLinkNameList'
          description: Returns a list of parent reference and LinkName Tuples.
    ListObjectPoliciesRequest:
      type: object
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) that is associated with the
            Directory where objects reside. For more information, see arns.
        ObjectReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: Reference that identifies the object for which policies will
            be listed.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          description: The maximum number of items to be retrieved in a single call.
            This is an approximate number.
        ConsistencyLevel:
          allOf:
          - $ref: '#/components/schemas/ConsistencyLevel'
          description: Represents the manner and timing in which the successful write
            or update of an object is reflected in a subsequent read operation of
            that same object.
      required:
      - DirectoryArn
      - ObjectReference
    ListObjectPoliciesResponse:
      type: object
      properties:
        AttachedPolicyIds:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifierList'
          description: A list of policy `ObjectIdentifiers`, that are attached to
            the object.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
    ListOutgoingTypedLinksRequest:
      type: object
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the directory where you want
            to list the typed links.
        ObjectReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: A reference that identifies the object whose attributes will
            be listed.
        FilterAttributeRanges:
          allOf:
          - $ref: '#/components/schemas/TypedLinkAttributeRangeList'
          description: Provides range filters for multiple attributes. When providing
            ranges to typed link selection, any inexact ranges must be specified at
            the end. Any attributes that do not have a range specified are presumed
            to match the entire range.
        FilterTypedLink:
          allOf:
          - $ref: '#/components/schemas/TypedLinkSchemaAndFacetName'
          description: Filters are interpreted in the order of the attributes defined
            on the typed link facet, not the order they are supplied to any API calls.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          description: The maximum number of results to retrieve.
        ConsistencyLevel:
          allOf:
          - $ref: '#/components/schemas/ConsistencyLevel'
          description: The consistency level to execute the request at.
      required:
      - DirectoryArn
      - ObjectReference
    ListOutgoingTypedLinksResponse:
      type: object
      properties:
        TypedLinkSpecifiers:
          allOf:
          - $ref: '#/components/schemas/TypedLinkSpecifierList'
          description: Returns a typed link specifier as output.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
    ListPolicyAttachmentsRequest:
      type: object
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) that is associated with the
            Directory where objects reside. For more information, see arns.
        PolicyReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: The reference that identifies the policy object.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          description: The maximum number of items to be retrieved in a single call.
            This is an approximate number.
        ConsistencyLevel:
          allOf:
          - $ref: '#/components/schemas/ConsistencyLevel'
          description: Represents the manner and timing in which the successful write
            or update of an object is reflected in a subsequent read operation of
            that same object.
      required:
      - DirectoryArn
      - PolicyReference
    ListPolicyAttachmentsResponse:
      type: object
      properties:
        ObjectIdentifiers:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifierList'
          description: A list of `ObjectIdentifiers` to which the policy is attached.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
    ListPublishedSchemaArnsRequest:
      type: object
      properties:
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The response for `ListPublishedSchemaArns` when this parameter
            is used will list all minor version ARNs for a major version.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          description: The maximum number of results to retrieve.
    ListPublishedSchemaArnsResponse:
      type: object
      properties:
        SchemaArns:
          allOf:
          - $ref: '#/components/schemas/Arns'
          description: The ARNs of published schemas.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
    ListTagsForResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource. Tagging is
            only supported for directories.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token. This is for future use. Currently pagination
            is not supported for tagging.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/TagsNumberResults'
          description: The `MaxResults` parameter sets the maximum number of results
            returned in a single page. This is for future use and is not supported
            currently.
      required:
      - ResourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: A list of tag key value pairs that are associated with the
            response.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to use to retrieve the next page of results. This
            value is null when there are no more results to return.
    ListTypedLinkFacetAttributesRequest:
      type: object
      properties:
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) that is associated with the
            schema. For more information, see arns.
        Name:
          allOf:
          - $ref: '#/components/schemas/TypedLinkName'
          description: The unique name of the typed link facet.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          description: The maximum number of results to retrieve.
      required:
      - SchemaArn
      - Name
    ListTypedLinkFacetAttributesResponse:
      type: object
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/TypedLinkAttributeDefinitionList'
          description: An ordered set of attributes associate with the typed link.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
    ListTypedLinkFacetNamesRequest:
      type: object
      properties:
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) that is associated with the
            schema. For more information, see arns.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          description: The maximum number of results to retrieve.
      required:
      - SchemaArn
    ListTypedLinkFacetNamesResponse:
      type: object
      properties:
        FacetNames:
          allOf:
          - $ref: '#/components/schemas/TypedLinkNameList'
          description: The names of typed link facets that exist within the schema.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
    LookupPolicyRequest:
      type: object
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) that is associated with the
            Directory. For more information, see arns.
        ObjectReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: Reference that identifies the object whose policies will be
            looked up.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to request the next page of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/NumberResults'
          description: The maximum number of items to be retrieved in a single call.
            This is an approximate number.
      required:
      - DirectoryArn
      - ObjectReference
    LookupPolicyResponse:
      type: object
      properties:
        PolicyToPathList:
          allOf:
          - $ref: '#/components/schemas/PolicyToPathList'
          description: Provides list of path to policies. Policies contain `PolicyId`,
            `ObjectIdentifier`, and `PolicyType`. For more information, see [Policies](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/key_concepts_directory.html#key_concepts_policies).
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
    NextToken:
      type: string
    NotIndexException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates that the requested operation can only operate on index
        objects.
    NotNodeException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Occurs when any invalid operations are performed on an object that
        is not a node, such as calling `ListObjectChildren` for a leaf node object.
    NotPolicyException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates that the requested operation can only operate on policy
        objects.
    NumberAttributeValue:
      type: string
    NumberResults:
      type: integer
      minimum: 1
    ObjectAlreadyDetachedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates that the object is not attached to the index.
    ObjectAttributeAction:
      type: object
      properties:
        ObjectAttributeActionType:
          allOf:
          - $ref: '#/components/schemas/UpdateActionType'
          description: A type that can be either `Update` or `Delete`.
        ObjectAttributeUpdateValue:
          allOf:
          - $ref: '#/components/schemas/TypedAttributeValue'
          description: The value that you want to update to.
      description: The action to take on the object attribute.
    ObjectAttributeRange:
      type: object
      properties:
        AttributeKey:
          allOf:
          - $ref: '#/components/schemas/AttributeKey'
          description: The key of the attribute that the attribute range covers.
        Range:
          allOf:
          - $ref: '#/components/schemas/TypedAttributeValueRange'
          description: The range of attribute values being selected.
      description: A range of attributes.
    ObjectAttributeRangeList:
      type: array
      items:
        $ref: '#/components/schemas/ObjectAttributeRange'
    ObjectAttributeUpdate:
      type: object
      properties:
        ObjectAttributeKey:
          allOf:
          - $ref: '#/components/schemas/AttributeKey'
          description: The key of the attribute being updated.
        ObjectAttributeAction:
          allOf:
          - $ref: '#/components/schemas/ObjectAttributeAction'
          description: The action to perform as part of the attribute update.
      description: Structure that contains attribute update information.
    ObjectAttributeUpdateList:
      type: array
      items:
        $ref: '#/components/schemas/ObjectAttributeUpdate'
    ObjectIdentifier:
      type: string
    ObjectIdentifierAndLinkNameList:
      type: array
      items:
        $ref: '#/components/schemas/ObjectIdentifierAndLinkNameTuple'
    ObjectIdentifierAndLinkNameTuple:
      type: object
      properties:
        ObjectIdentifier:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifier'
          description: The ID that is associated with the object.
        LinkName:
          allOf:
          - $ref: '#/components/schemas/LinkName'
          description: The name of the link between the parent and the child object.
      description: A pair of ObjectIdentifier and LinkName.
    ObjectIdentifierList:
      type: array
      items:
        $ref: '#/components/schemas/ObjectIdentifier'
    ObjectIdentifierToLinkNameMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/LinkName'
    ObjectNotDetachedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates that the requested operation cannot be completed because
        the object has not been detached from the tree.
    ObjectReference:
      type: object
      properties:
        Selector:
          allOf:
          - $ref: '#/components/schemas/SelectorObjectReference'
          description: "A path selector supports easy selection of an object by the\
            \ parent/child links leading to it from the directory root. Use the link\
            \ names from each parent/child link to construct the path. Path selectors\
            \ start with a slash (/) and link names are separated by slashes. For\
            \ more information about paths, see [Access Objects](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_access_objects.html).\
            \ You can identify an object in one of the following ways:\n\n  * _$ObjectIdentifier_\
            \ \\- An object identifier is an opaque string provided by Amazon Cloud\
            \ Directory. When creating objects, the system will provide you with the\
            \ identifier of the created object. An object’s identifier is immutable\
            \ and no two objects will ever share the same object identifier. To identify\
            \ an object with ObjectIdentifier, the ObjectIdentifier must be wrapped\
            \ in double quotes. \n\n  * _/some/path_ \\- Identifies the object based\
            \ on path\n\n  * _#SomeBatchReference_ \\- Identifies the object in a\
            \ batch call"
      description: The reference that identifies an object.
    ObjectType:
      type: string
      enum:
      - NODE
      - LEAF_NODE
      - POLICY
      - INDEX
    PathString:
      type: string
    PathToObjectIdentifiers:
      type: object
      properties:
        Path:
          allOf:
          - $ref: '#/components/schemas/PathString'
          description: The path that is used to identify the object starting from
            directory root.
        ObjectIdentifiers:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifierList'
          description: Lists `ObjectIdentifiers` starting from directory root to the
            object in the request.
      description: Returns the path to the `ObjectIdentifiers` that is associated
        with the directory.
    PathToObjectIdentifiersList:
      type: array
      items:
        $ref: '#/components/schemas/PathToObjectIdentifiers'
    PolicyAttachment:
      type: object
      properties:
        PolicyId:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifier'
          description: The ID of `PolicyAttachment`.
        ObjectIdentifier:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifier'
          description: The `ObjectIdentifier` that is associated with `PolicyAttachment`.
        PolicyType:
          allOf:
          - $ref: '#/components/schemas/PolicyType'
          description: The type of policy that can be associated with `PolicyAttachment`.
      description: Contains the `PolicyType`, `PolicyId`, and the `ObjectIdentifier`
        to which it is attached. For more information, see [Policies](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/key_concepts_directory.html#key_concepts_policies).
    PolicyAttachmentList:
      type: array
      items:
        $ref: '#/components/schemas/PolicyAttachment'
    PolicyToPath:
      type: object
      properties:
        Path:
          allOf:
          - $ref: '#/components/schemas/PathString'
          description: The path that is referenced from the root.
        Policies:
          allOf:
          - $ref: '#/components/schemas/PolicyAttachmentList'
          description: List of policy objects.
      description: Used when a regular object exists in a Directory and you want to
        find all of the policies that are associated with that object and the parent
        to that object.
    PolicyToPathList:
      type: array
      items:
        $ref: '#/components/schemas/PolicyToPath'
    PolicyType:
      type: string
    PublishSchemaRequest:
      type: object
      properties:
        DevelopmentSchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) that is associated with the
            development schema. For more information, see arns.
        Version:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The major version under which the schema will be published.
            Schemas have both a major and minor version associated with them.
        MinorVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The minor version under which the schema will be published.
            This parameter is recommended. Schemas have both a major and minor version
            associated with them.
        Name:
          allOf:
          - $ref: '#/components/schemas/SchemaName'
          description: The new name under which the schema will be published. If this
            is not provided, the development schema is considered.
      required:
      - DevelopmentSchemaArn
      - Version
    PublishSchemaResponse:
      type: object
      properties:
        PublishedSchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN that is associated with the published schema. For more
            information, see arns.
    PutSchemaFromJsonRequest:
      type: object
      properties:
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the schema to update.
        Document:
          allOf:
          - $ref: '#/components/schemas/SchemaJsonDocument'
          description: The replacement JSON schema.
      required:
      - SchemaArn
      - Document
    PutSchemaFromJsonResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the schema to update.
    RangeMode:
      type: string
      enum:
      - FIRST
      - LAST
      - LAST_BEFORE_MISSING_VALUES
      - INCLUSIVE
      - EXCLUSIVE
    RemoveFacetFromObjectRequest:
      type: object
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the directory in which the object resides.
        SchemaFacet:
          allOf:
          - $ref: '#/components/schemas/SchemaFacet'
          description: The facet to remove. See SchemaFacet for details.
        ObjectReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: A reference to the object to remove the facet from.
      required:
      - DirectoryArn
      - SchemaFacet
      - ObjectReference
    RemoveFacetFromObjectResponse:
      type: object
      properties: {}
    RequiredAttributeBehavior:
      type: string
      enum:
      - REQUIRED_ALWAYS
      - NOT_REQUIRED
    ResourceNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: The specified resource could not be found.
    RetryableConflictException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Occurs when a conflict with a previous successful write is detected.
        For example, if a write operation occurs on an object and then an attempt
        is made to read the object using “SERIALIZABLE” consistency, this exception
        may result. This generally occurs when the previous write did not have time
        to propagate to the host serving the current request. A retry (with appropriate
        backoff logic) is the recommended response to this exception.
    Rule:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/RuleType'
          description: The type of attribute validation rule.
        Parameters:
          allOf:
          - $ref: '#/components/schemas/RuleParameterMap'
          description: The minimum and maximum parameters that are associated with
            the rule.
      description: Contains an Amazon Resource Name (ARN) and parameters that are
        associated with the rule.
    RuleKey:
      type: string
      pattern: ^[a-zA-Z0-9._-]*$
      minLength: 1
      maxLength: 64
    RuleMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Rule'
    RuleParameterKey:
      type: string
    RuleParameterMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/RuleParameterValue'
    RuleParameterValue:
      type: string
    RuleType:
      type: string
      enum:
      - BINARY_LENGTH
      - NUMBER_COMPARISON
      - STRING_FROM_SET
      - STRING_LENGTH
    SchemaAlreadyExistsException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates that a schema could not be created due to a naming conflict.
        Please select a different name and then try again.
    SchemaAlreadyPublishedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates that a schema is already published.
    SchemaFacet:
      type: object
      properties:
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the schema that contains the facet with no minor
            component. See arns and [In-Place Schema Upgrade](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_inplaceschemaupgrade.html)
            for a description of when to provide minor versions. If this value is
            set, FacetName must also be set.
        FacetName:
          allOf:
          - $ref: '#/components/schemas/FacetName'
          description: The name of the facet. If this value is set, SchemaArn must
            also be set.
      description: A facet.
    SchemaFacetList:
      type: array
      items:
        $ref: '#/components/schemas/SchemaFacet'
    SchemaJsonDocument:
      type: string
    SchemaName:
      type: string
      pattern: ^[a-zA-Z0-9._-]*$
      minLength: 1
      maxLength: 32
    SelectorObjectReference:
      type: string
    StillContainsLinksException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: The object could not be deleted because links still exist. Remove
        the links and then try the operation again.
    StringAttributeValue:
      type: string
    Tag:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          description: The key that is associated with the tag.
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          description: The value that is associated with the tag.
      description: The tag structure that contains a tag key and value.
    TagKey:
      type: string
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    TagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource. Tagging is
            only supported for directories.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: A list of tag key-value pairs.
      required:
      - ResourceArn
      - Tags
    TagResourceResponse:
      type: object
      properties: {}
    TagValue:
      type: string
    TagsNumberResults:
      type: integer
      minimum: 50
    TypedAttributeValue:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/StringAttributeValue'
        description: |-
          A string data value.
      - allOf:
        - $ref: '#/components/schemas/BinaryAttributeValue'
        description: |-
          A binary data value.
      - allOf:
        - $ref: '#/components/schemas/BooleanAttributeValue'
        description: |-
          A Boolean data value.
      - allOf:
        - $ref: '#/components/schemas/NumberAttributeValue'
        description: |-
          A number data value.
      - allOf:
        - $ref: '#/components/schemas/DatetimeAttributeValue'
        description: |-
          A date and time value.
      description: |-
        Represents the data for a typed attribute. You can set one, and only one, of the elements. Each attribute in an item is a name-value pair. Attributes have a single value.
    TypedAttributeValueRange:
      type: object
      properties:
        StartMode:
          allOf:
          - $ref: '#/components/schemas/RangeMode'
          description: The inclusive or exclusive range start.
        StartValue:
          allOf:
          - $ref: '#/components/schemas/TypedAttributeValue'
          description: The value to start the range at.
        EndMode:
          allOf:
          - $ref: '#/components/schemas/RangeMode'
          description: The inclusive or exclusive range end.
        EndValue:
          allOf:
          - $ref: '#/components/schemas/TypedAttributeValue'
          description: The attribute value to terminate the range at.
      required:
      - StartMode
      - EndMode
      description: A range of attribute values. For more information, see [Range Filters](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_range_filters.html).
    TypedLinkAttributeDefinition:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/AttributeName'
          description: The unique name of the typed link attribute.
        Type:
          allOf:
          - $ref: '#/components/schemas/FacetAttributeType'
          description: The type of the attribute.
        DefaultValue:
          allOf:
          - $ref: '#/components/schemas/TypedAttributeValue'
          description: The default value of the attribute (if configured).
        IsImmutable:
          allOf:
          - $ref: '#/components/schemas/Bool'
          description: Whether the attribute is mutable or not.
        Rules:
          allOf:
          - $ref: '#/components/schemas/RuleMap'
          description: Validation rules that are attached to the attribute definition.
        RequiredBehavior:
          allOf:
          - $ref: '#/components/schemas/RequiredAttributeBehavior'
          description: The required behavior of the `TypedLinkAttributeDefinition`.
      required:
      - Name
      - Type
      - RequiredBehavior
      description: A typed link attribute definition.
    TypedLinkAttributeDefinitionList:
      type: array
      items:
        $ref: '#/components/schemas/TypedLinkAttributeDefinition'
    TypedLinkAttributeRange:
      type: object
      properties:
        AttributeName:
          allOf:
          - $ref: '#/components/schemas/AttributeName'
          description: The unique name of the typed link attribute.
        Range:
          allOf:
          - $ref: '#/components/schemas/TypedAttributeValueRange'
          description: The range of attribute values that are being selected.
      required:
      - Range
      description: Identifies the range of attributes that are used by a specified
        filter.
    TypedLinkAttributeRangeList:
      type: array
      items:
        $ref: '#/components/schemas/TypedLinkAttributeRange'
    TypedLinkFacet:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/TypedLinkName'
          description: The unique name of the typed link facet.
        Attributes:
          allOf:
          - $ref: '#/components/schemas/TypedLinkAttributeDefinitionList'
          description: A set of key-value pairs associated with the typed link. Typed
            link attributes are used when you have data values that are related to
            the link itself, and not to one of the two objects being linked. Identity
            attributes also serve to distinguish the link from others of the same
            type between the same objects.
        IdentityAttributeOrder:
          allOf:
          - $ref: '#/components/schemas/AttributeNameList'
          description: The set of attributes that distinguish links made from this
            facet from each other, in the order of significance. Listing typed links
            can filter on the values of these attributes. See ListOutgoingTypedLinks
            and ListIncomingTypedLinks for details.
      required:
      - Name
      - Attributes
      - IdentityAttributeOrder
      description: Defines the typed links structure and its attributes. To create
        a typed link facet, use the CreateTypedLinkFacet API.
    TypedLinkFacetAttributeUpdate:
      type: object
      properties:
        Attribute:
          allOf:
          - $ref: '#/components/schemas/TypedLinkAttributeDefinition'
          description: The attribute to update.
        Action:
          allOf:
          - $ref: '#/components/schemas/UpdateActionType'
          description: The action to perform when updating the attribute.
      required:
      - Attribute
      - Action
      description: A typed link facet attribute update.
    TypedLinkFacetAttributeUpdateList:
      type: array
      items:
        $ref: '#/components/schemas/TypedLinkFacetAttributeUpdate'
    TypedLinkName:
      type: string
      pattern: ^[a-zA-Z0-9._-]*$
    TypedLinkNameList:
      type: array
      items:
        $ref: '#/components/schemas/TypedLinkName'
    TypedLinkSchemaAndFacetName:
      type: object
      properties:
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) that is associated with the
            schema. For more information, see arns.
        TypedLinkName:
          allOf:
          - $ref: '#/components/schemas/TypedLinkName'
          description: The unique name of the typed link facet.
      required:
      - SchemaArn
      - TypedLinkName
      description: Identifies the schema Amazon Resource Name (ARN) and facet name
        for the typed link.
    TypedLinkSpecifier:
      type: object
      properties:
        TypedLinkFacet:
          allOf:
          - $ref: '#/components/schemas/TypedLinkSchemaAndFacetName'
          description: Identifies the typed link facet that is associated with the
            typed link.
        SourceObjectReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: Identifies the source object that the typed link will attach
            to.
        TargetObjectReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: Identifies the target object that the typed link will attach
            to.
        IdentityAttributeValues:
          allOf:
          - $ref: '#/components/schemas/AttributeNameAndValueList'
          description: Identifies the attribute value to update.
      required:
      - TypedLinkFacet
      - SourceObjectReference
      - TargetObjectReference
      - IdentityAttributeValues
      description: Contains all the information that is used to uniquely identify
        a typed link. The parameters discussed in this topic are used to uniquely
        specify the typed link being operated on. The AttachTypedLink API returns
        a typed link specifier while the DetachTypedLink API accepts one as input.
        Similarly, the ListIncomingTypedLinks and ListOutgoingTypedLinks API operations
        provide typed link specifiers as output. You can also construct a typed link
        specifier from scratch.
    TypedLinkSpecifierList:
      type: array
      items:
        $ref: '#/components/schemas/TypedLinkSpecifier'
    UnsupportedIndexTypeException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates that the requested index type is not supported.
    UntagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource. Tagging is
            only supported for directories.
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: Keys of the tag that need to be removed from the resource.
      required:
      - ResourceArn
      - TagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateActionType:
      type: string
      enum:
      - CREATE_OR_UPDATE
      - DELETE
    UpdateFacetRequest:
      type: object
      properties:
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) that is associated with the
            Facet. For more information, see arns.
        Name:
          allOf:
          - $ref: '#/components/schemas/FacetName'
          description: The name of the facet.
        AttributeUpdates:
          allOf:
          - $ref: '#/components/schemas/FacetAttributeUpdateList'
          description: List of attributes that need to be updated in a given schema
            Facet. Each attribute is followed by `AttributeAction`, which specifies
            the type of update operation to perform.
        ObjectType:
          allOf:
          - $ref: '#/components/schemas/ObjectType'
          description: The object type that is associated with the facet. See CreateFacetRequest$ObjectType
            for more details.
      required:
      - SchemaArn
      - Name
    UpdateFacetResponse:
      type: object
      properties: {}
    UpdateLinkAttributesRequest:
      type: object
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) that is associated with the
            Directory where the updated typed link resides. For more information,
            see arns or [Typed Links](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink).
        TypedLinkSpecifier:
          allOf:
          - $ref: '#/components/schemas/TypedLinkSpecifier'
          description: Allows a typed link specifier to be accepted as input.
        AttributeUpdates:
          allOf:
          - $ref: '#/components/schemas/LinkAttributeUpdateList'
          description: The attributes update structure.
      required:
      - DirectoryArn
      - TypedLinkSpecifier
      - AttributeUpdates
    UpdateLinkAttributesResponse:
      type: object
      properties: {}
    UpdateObjectAttributesRequest:
      type: object
      properties:
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) that is associated with the
            Directory where the object resides. For more information, see arns.
        ObjectReference:
          allOf:
          - $ref: '#/components/schemas/ObjectReference'
          description: The reference that identifies the object.
        AttributeUpdates:
          allOf:
          - $ref: '#/components/schemas/ObjectAttributeUpdateList'
          description: The attributes update structure.
      required:
      - DirectoryArn
      - ObjectReference
      - AttributeUpdates
    UpdateObjectAttributesResponse:
      type: object
      properties:
        ObjectIdentifier:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifier'
          description: The `ObjectIdentifier` of the updated object.
    UpdateSchemaRequest:
      type: object
      properties:
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the development schema. For
            more information, see arns.
        Name:
          allOf:
          - $ref: '#/components/schemas/SchemaName'
          description: The name of the schema.
      required:
      - SchemaArn
      - Name
    UpdateSchemaResponse:
      type: object
      properties:
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN that is associated with the updated schema. For more
            information, see arns.
    UpdateTypedLinkFacetRequest:
      type: object
      properties:
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) that is associated with the
            schema. For more information, see arns.
        Name:
          allOf:
          - $ref: '#/components/schemas/TypedLinkName'
          description: The unique name of the typed link facet.
        AttributeUpdates:
          allOf:
          - $ref: '#/components/schemas/TypedLinkFacetAttributeUpdateList'
          description: Attributes update structure.
        IdentityAttributeOrder:
          allOf:
          - $ref: '#/components/schemas/AttributeNameList'
          description: The order of identity attributes for the facet, from most significant
            to least significant. The ability to filter typed links considers the
            order that the attributes are defined on the typed link facet. When providing
            ranges to a typed link selection, any inexact ranges must be specified
            at the end. Any attributes that do not have a range specified are presumed
            to match the entire range. Filters are interpreted in the order of the
            attributes on the typed link facet, not the order in which they are supplied
            to any API calls. For more information about identity attributes, see
            [Typed Links](https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink).
      required:
      - SchemaArn
      - Name
      - AttributeUpdates
      - IdentityAttributeOrder
    UpdateTypedLinkFacetResponse:
      type: object
      properties: {}
    UpgradeAppliedSchemaRequest:
      type: object
      properties:
        PublishedSchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The revision of the published schema to upgrade the directory
            to.
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN for the directory to which the upgraded schema will
            be applied.
        DryRun:
          allOf:
          - $ref: '#/components/schemas/Bool'
          description: Used for testing whether the major version schemas are backward
            compatible or not. If schema compatibility fails, an exception would be
            thrown else the call would succeed but no changes will be saved. This
            parameter is optional.
      required:
      - PublishedSchemaArn
      - DirectoryArn
    UpgradeAppliedSchemaResponse:
      type: object
      properties:
        UpgradedSchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the upgraded schema that is returned as part of
            the response.
        DirectoryArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the directory that is returned as part of the response.
    UpgradePublishedSchemaRequest:
      type: object
      properties:
        DevelopmentSchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the development schema with the changes used for
            the upgrade.
        PublishedSchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the published schema to be upgraded.
        MinorVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: Identifies the minor version of the published schema that will
            be created. This parameter is NOT optional.
        DryRun:
          allOf:
          - $ref: '#/components/schemas/Bool'
          description: Used for testing whether the Development schema provided is
            backwards compatible, or not, with the publish schema provided by the
            user to be upgraded. If schema compatibility fails, an exception would
            be thrown else the call would succeed. This parameter is optional and
            defaults to false.
      required:
      - DevelopmentSchemaArn
      - PublishedSchemaArn
      - MinorVersion
    UpgradePublishedSchemaResponse:
      type: object
      properties:
        UpgradedSchemaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the upgraded schema that is returned as part of
            the response.
    ValidationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Indicates that your request is malformed in some manner. See the
        exception message.
    Version:
      type: string
      pattern: ^[a-zA-Z0-9._-]*$
      minLength: 1
      maxLength: 10
