openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: wellarchitected
  x-aws-serviceName: wellarchitected
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2020-03-31'
  title: AWS Well-Architected Tool
  description: |-
    Well-Architected Tool

    This is the _Well-Architected Tool API Reference_. The WA Tool API provides programmatic access to the [Well-Architected Tool](http://aws.amazon.com/well-architected-tool) in the [Amazon Web Services Management Console](https://console.aws.amazon.com/wellarchitected). For information about the Well-Architected Tool, see the [Well-Architected Tool User Guide](https://docs.aws.amazon.com/wellarchitected/latest/userguide/intro.html).
servers:
- description: The AWS Well-Architected Tool regional endpoint
  url: https://wellarchitected.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /workloads/{WorkloadId}/associateLenses:
    patch:
      operationId: AssociateLenses
      description: |-
        Associate a lens to a workload.

        Up to 10 lenses can be associated with a workload in a single API operation. A maximum of 20 lenses can be associated with a workload.

        **Disclaimer**

        By accessing and/or applying custom lenses created by another Amazon Web Services user or account, you acknowledge that custom lenses created by other users and shared with you are Third Party Content as defined in the Amazon Web Services Customer Agreement.
      parameters:
      - name: WorkloadId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WorkloadId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                LensAliases:
                  $ref: '#/components/schemas/LensAliases'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The resource has already been processed, was deleted, or is too large.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /workloads/{WorkloadId}/associateProfiles:
    patch:
      operationId: AssociateProfiles
      description: |-
        Associate a profile with a workload.
      parameters:
      - name: WorkloadId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WorkloadId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ProfileArns:
                  $ref: '#/components/schemas/ProfileArns'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The resource has already been processed, was deleted, or is too large.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /lenses/{LensAlias}/shares:
    post:
      operationId: CreateLensShare
      description: |-
        Create a lens share.

        The owner of a lens can share it with other Amazon Web Services accounts, users, an organization, and organizational units (OUs) in the same Amazon Web Services Region. Lenses provided by Amazon Web Services (Amazon Web Services Official Content) cannot be shared.

        Shared access to a lens is not removed until the lens invitation is deleted.

        If you share a lens with an organization or OU, all accounts in the organization or OU are granted access to the lens.

        For more information, see [Sharing a custom lens](https://docs.aws.amazon.com/wellarchitected/latest/userguide/lenses-sharing.html) in the _Well-Architected Tool User Guide_.

        **Disclaimer**

        By sharing your custom lenses with other Amazon Web Services accounts, you acknowledge that Amazon Web Services will make your custom lenses available to those other accounts. Those other accounts may continue to access and use your shared custom lenses even if you delete the custom lenses from your own Amazon Web Services account or terminate your Amazon Web Services account.
      parameters:
      - name: LensAlias
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/LensAlias'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SharedWith:
                  $ref: '#/components/schemas/SharedWith'
                ClientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The resource has already been processed, was deleted, or is too large.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The user has reached their resource quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListLensShares
      description: |-
        List the lens shares associated with the lens.
      parameters:
      - name: LensAlias
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/LensAlias'
      - name: SharedWithPrefix
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SharedWithPrefix'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ListWorkloadSharesMaxResults'
      - name: Status
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ShareStatus'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /lenses/{LensAlias}/versions:
    post:
      operationId: CreateLensVersion
      description: |-
        Create a new lens version.

        A lens can have up to 100 versions.

        Use this operation to publish a new lens version after you have imported a lens. The `LensAlias` is used to identify the lens to be published. The owner of a lens can share the lens with other Amazon Web Services accounts and users in the same Amazon Web Services Region. Only the owner of a lens can delete it.
      parameters:
      - name: LensAlias
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/LensAlias'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                LensVersion:
                  $ref: '#/components/schemas/LensVersion'
                IsMajorVersion:
                  $ref: '#/components/schemas/IsMajorVersion'
                ClientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The resource has already been processed, was deleted, or is too large.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The user has reached their resource quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /workloads/{WorkloadId}/milestones:
    post:
      operationId: CreateMilestone
      description: |-
        Create a milestone for an existing workload.
      parameters:
      - name: WorkloadId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WorkloadId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MilestoneName:
                  $ref: '#/components/schemas/MilestoneName'
                ClientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The resource has already been processed, was deleted, or is too large.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The user has reached their resource quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /profiles:
    post:
      operationId: CreateProfile
      description: |-
        Create a profile.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ProfileName:
                  $ref: '#/components/schemas/ProfileName'
                ProfileDescription:
                  $ref: '#/components/schemas/ProfileDescription'
                ProfileQuestions:
                  $ref: '#/components/schemas/ProfileQuestionUpdates'
                ClientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The resource has already been processed, was deleted, or is too large.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            The user has reached their resource quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /profiles/{ProfileArn}/shares:
    post:
      operationId: CreateProfileShare
      description: |-
        Create a profile share.
      parameters:
      - name: ProfileArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ProfileArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SharedWith:
                  $ref: '#/components/schemas/SharedWith'
                ClientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The resource has already been processed, was deleted, or is too large.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The user has reached their resource quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListProfileShares
      description: |-
        List profile shares.
      parameters:
      - name: ProfileArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ProfileArn'
      - name: SharedWithPrefix
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SharedWithPrefix'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ListProfileSharesMaxResults'
      - name: Status
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ShareStatus'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /reviewTemplates:
    post:
      operationId: CreateReviewTemplate
      description: |-
        Create a review template.

        **Disclaimer**

        Do not include or gather personal identifiable information (PII) of end users or other identifiable individuals in or via your review templates. If your review template or those shared with you and used in your account do include or collect PII you are responsible for: ensuring that the included PII is processed in accordance with applicable law, providing adequate privacy notices, and obtaining necessary consents for processing such data.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TemplateName:
                  $ref: '#/components/schemas/TemplateName'
                Description:
                  $ref: '#/components/schemas/TemplateDescription'
                Lenses:
                  $ref: '#/components/schemas/ReviewTemplateLenses'
                Notes:
                  $ref: '#/components/schemas/Notes'
                Tags:
                  $ref: '#/components/schemas/TagMap'
                ClientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The resource has already been processed, was deleted, or is too large.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The user has reached their resource quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListReviewTemplates
      description: |-
        List review templates.
      parameters:
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /templates/shares/{TemplateArn}:
    post:
      operationId: CreateTemplateShare
      description: |-
        Create a review template share.

        The owner of a review template can share it with other Amazon Web Services accounts, users, an organization, and organizational units (OUs) in the same Amazon Web Services Region.

        Shared access to a review template is not removed until the review template share invitation is deleted.

        If you share a review template with an organization or OU, all accounts in the organization or OU are granted access to the review template.

        **Disclaimer**

        By sharing your review template with other Amazon Web Services accounts, you acknowledge that Amazon Web Services will make your review template available to those other accounts.
      parameters:
      - name: TemplateArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TemplateArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SharedWith:
                  $ref: '#/components/schemas/SharedWith'
                ClientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The resource has already been processed, was deleted, or is too large.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The user has reached their resource quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListTemplateShares
      description: |-
        List review template shares.
      parameters:
      - name: TemplateArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TemplateArn'
      - name: SharedWithPrefix
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SharedWithPrefix'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ListTemplateSharesMaxResults'
      - name: Status
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ShareStatus'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /workloads:
    post:
      operationId: CreateWorkload
      description: |-
        Create a new workload.

        The owner of a workload can share the workload with other Amazon Web Services accounts, users, an organization, and organizational units (OUs) in the same Amazon Web Services Region. Only the owner of a workload can delete it.

        For more information, see [Defining a Workload](https://docs.aws.amazon.com/wellarchitected/latest/userguide/define-workload.html) in the _Well-Architected Tool User Guide_.

        Either `AwsRegions`, `NonAwsRegions`, or both must be specified when creating a workload.

        You also must specify `ReviewOwner`, even though the parameter is listed as not being required in the following section.

        When creating a workload using a review template, you must have the following IAM permissions:

          * `wellarchitected:GetReviewTemplate`

          * `wellarchitected:GetReviewTemplateAnswer`

          * `wellarchitected:ListReviewTemplateAnswers`

          * `wellarchitected:GetReviewTemplateLensReview`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                WorkloadName:
                  $ref: '#/components/schemas/WorkloadName'
                Description:
                  $ref: '#/components/schemas/WorkloadDescription'
                Environment:
                  $ref: '#/components/schemas/WorkloadEnvironment'
                AccountIds:
                  $ref: '#/components/schemas/WorkloadAccountIds'
                AwsRegions:
                  $ref: '#/components/schemas/WorkloadAwsRegions'
                NonAwsRegions:
                  $ref: '#/components/schemas/WorkloadNonAwsRegions'
                PillarPriorities:
                  $ref: '#/components/schemas/WorkloadPillarPriorities'
                ArchitecturalDesign:
                  $ref: '#/components/schemas/WorkloadArchitecturalDesign'
                ReviewOwner:
                  $ref: '#/components/schemas/WorkloadReviewOwner'
                IndustryType:
                  $ref: '#/components/schemas/WorkloadIndustryType'
                Industry:
                  $ref: '#/components/schemas/WorkloadIndustry'
                Lenses:
                  $ref: '#/components/schemas/WorkloadLenses'
                Notes:
                  $ref: '#/components/schemas/Notes'
                ClientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
                Tags:
                  $ref: '#/components/schemas/TagMap'
                DiscoveryConfig:
                  $ref: '#/components/schemas/WorkloadDiscoveryConfig'
                Applications:
                  $ref: '#/components/schemas/WorkloadApplications'
                ProfileArns:
                  $ref: '#/components/schemas/WorkloadProfileArns'
                ReviewTemplateArns:
                  $ref: '#/components/schemas/ReviewTemplateArns'
                JiraConfiguration:
                  $ref: '#/components/schemas/WorkloadJiraConfigurationInput'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The resource has already been processed, was deleted, or is too large.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The user has reached their resource quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /workloads/{WorkloadId}/shares:
    post:
      operationId: CreateWorkloadShare
      description: |-
        Create a workload share.

        The owner of a workload can share it with other Amazon Web Services accounts and users in the same Amazon Web Services Region. Shared access to a workload is not removed until the workload invitation is deleted.

        If you share a workload with an organization or OU, all accounts in the organization or OU are granted access to the workload.

        For more information, see [Sharing a workload](https://docs.aws.amazon.com/wellarchitected/latest/userguide/workloads-sharing.html) in the _Well-Architected Tool User Guide_.
      parameters:
      - name: WorkloadId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WorkloadId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SharedWith:
                  $ref: '#/components/schemas/SharedWith'
                PermissionType:
                  $ref: '#/components/schemas/PermissionType'
                ClientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The resource has already been processed, was deleted, or is too large.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The user has reached their resource quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListWorkloadShares
      description: |-
        List the workload shares associated with the workload.
      parameters:
      - name: WorkloadId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WorkloadId'
      - name: SharedWithPrefix
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SharedWithPrefix'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ListWorkloadSharesMaxResults'
      - name: Status
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ShareStatus'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /lenses/{LensAlias}:
    delete:
      operationId: DeleteLens
      description: |-
        Delete an existing lens.

        Only the owner of a lens can delete it. After the lens is deleted, Amazon Web Services accounts and users that you shared the lens with can continue to use it, but they will no longer be able to apply it to new workloads.

        **Disclaimer**

        By sharing your custom lenses with other Amazon Web Services accounts, you acknowledge that Amazon Web Services will make your custom lenses available to those other accounts. Those other accounts may continue to access and use your shared custom lenses even if you delete the custom lenses from your own Amazon Web Services account or terminate your Amazon Web Services account.
      parameters:
      - name: LensAlias
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/LensAlias'
      - name: ClientRequestToken
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ClientRequestToken'
      - name: LensStatus
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/LensStatusType'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The resource has already been processed, was deleted, or is too large.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetLens
      description: |-
        Get an existing lens.
      parameters:
      - name: LensAlias
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/LensAlias'
      - name: LensVersion
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/LensVersion'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /lenses/{LensAlias}/shares/{ShareId}:
    delete:
      operationId: DeleteLensShare
      description: |-
        Delete a lens share.

        After the lens share is deleted, Amazon Web Services accounts, users, organizations, and organizational units (OUs) that you shared the lens with can continue to use it, but they will no longer be able to apply it to new workloads.

        **Disclaimer**

        By sharing your custom lenses with other Amazon Web Services accounts, you acknowledge that Amazon Web Services will make your custom lenses available to those other accounts. Those other accounts may continue to access and use your shared custom lenses even if you delete the custom lenses from your own Amazon Web Services account or terminate your Amazon Web Services account.
      parameters:
      - name: ShareId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ShareId'
      - name: LensAlias
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/LensAlias'
      - name: ClientRequestToken
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ClientRequestToken'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The resource has already been processed, was deleted, or is too large.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /profiles/{ProfileArn}:
    delete:
      operationId: DeleteProfile
      description: |-
        Delete a profile.

        **Disclaimer**

        By sharing your profile with other Amazon Web Services accounts, you acknowledge that Amazon Web Services will make your profile available to those other accounts. Those other accounts may continue to access and use your shared profile even if you delete the profile from your own Amazon Web Services account or terminate your Amazon Web Services account.
      parameters:
      - name: ProfileArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ProfileArn'
      - name: ClientRequestToken
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ClientRequestToken'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The resource has already been processed, was deleted, or is too large.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetProfile
      description: |-
        Get profile information.
      parameters:
      - name: ProfileArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ProfileArn'
      - name: ProfileVersion
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ProfileVersion'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateProfile
      description: |-
        Update a profile.
      parameters:
      - name: ProfileArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ProfileArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ProfileDescription:
                  $ref: '#/components/schemas/ProfileDescription'
                ProfileQuestions:
                  $ref: '#/components/schemas/ProfileQuestionUpdates'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The resource has already been processed, was deleted, or is too large.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /profiles/{ProfileArn}/shares/{ShareId}:
    delete:
      operationId: DeleteProfileShare
      description: |-
        Delete a profile share.
      parameters:
      - name: ShareId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ShareId'
      - name: ProfileArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ProfileArn'
      - name: ClientRequestToken
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ClientRequestToken'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The resource has already been processed, was deleted, or is too large.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /reviewTemplates/{TemplateArn}:
    delete:
      operationId: DeleteReviewTemplate
      description: |-
        Delete a review template.

        Only the owner of a review template can delete it.

        After the review template is deleted, Amazon Web Services accounts, users, organizations, and organizational units (OUs) that you shared the review template with will no longer be able to apply it to new workloads.
      parameters:
      - name: TemplateArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TemplateArn'
      - name: ClientRequestToken
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ClientRequestToken'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The resource has already been processed, was deleted, or is too large.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetReviewTemplate
      description: |-
        Get review template.
      parameters:
      - name: TemplateArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TemplateArn'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateReviewTemplate
      description: |-
        Update a review template.
      parameters:
      - name: TemplateArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TemplateArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TemplateName:
                  $ref: '#/components/schemas/TemplateName'
                Description:
                  $ref: '#/components/schemas/TemplateDescription'
                Notes:
                  $ref: '#/components/schemas/Notes'
                LensesToAssociate:
                  $ref: '#/components/schemas/ReviewTemplateLensAliases'
                LensesToDisassociate:
                  $ref: '#/components/schemas/ReviewTemplateLensAliases'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The resource has already been processed, was deleted, or is too large.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /templates/shares/{TemplateArn}/{ShareId}:
    delete:
      operationId: DeleteTemplateShare
      description: |-
        Delete a review template share.

        After the review template share is deleted, Amazon Web Services accounts, users, organizations, and organizational units (OUs) that you shared the review template with will no longer be able to apply it to new workloads.
      parameters:
      - name: ShareId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ShareId'
      - name: TemplateArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TemplateArn'
      - name: ClientRequestToken
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ClientRequestToken'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The resource has already been processed, was deleted, or is too large.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /workloads/{WorkloadId}:
    delete:
      operationId: DeleteWorkload
      description: |-
        Delete an existing workload.
      parameters:
      - name: WorkloadId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WorkloadId'
      - name: ClientRequestToken
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ClientRequestToken'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The resource has already been processed, was deleted, or is too large.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetWorkload
      description: |-
        Get an existing workload.
      parameters:
      - name: WorkloadId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WorkloadId'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateWorkload
      description: |-
        Update an existing workload.
      parameters:
      - name: WorkloadId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WorkloadId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                WorkloadName:
                  $ref: '#/components/schemas/WorkloadName'
                Description:
                  $ref: '#/components/schemas/WorkloadDescription'
                Environment:
                  $ref: '#/components/schemas/WorkloadEnvironment'
                AccountIds:
                  $ref: '#/components/schemas/WorkloadAccountIds'
                AwsRegions:
                  $ref: '#/components/schemas/WorkloadAwsRegions'
                NonAwsRegions:
                  $ref: '#/components/schemas/WorkloadNonAwsRegions'
                PillarPriorities:
                  $ref: '#/components/schemas/WorkloadPillarPriorities'
                ArchitecturalDesign:
                  $ref: '#/components/schemas/WorkloadArchitecturalDesign'
                ReviewOwner:
                  $ref: '#/components/schemas/WorkloadReviewOwner'
                IsReviewOwnerUpdateAcknowledged:
                  $ref: '#/components/schemas/IsReviewOwnerUpdateAcknowledged'
                IndustryType:
                  $ref: '#/components/schemas/WorkloadIndustryType'
                Industry:
                  $ref: '#/components/schemas/WorkloadIndustry'
                Notes:
                  $ref: '#/components/schemas/Notes'
                ImprovementStatus:
                  $ref: '#/components/schemas/WorkloadImprovementStatus'
                DiscoveryConfig:
                  $ref: '#/components/schemas/WorkloadDiscoveryConfig'
                Applications:
                  $ref: '#/components/schemas/WorkloadApplications'
                JiraConfiguration:
                  $ref: '#/components/schemas/WorkloadJiraConfigurationInput'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The resource has already been processed, was deleted, or is too large.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /workloads/{WorkloadId}/shares/{ShareId}:
    delete:
      operationId: DeleteWorkloadShare
      description: |-
        Delete a workload share.
      parameters:
      - name: ShareId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ShareId'
      - name: WorkloadId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WorkloadId'
      - name: ClientRequestToken
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ClientRequestToken'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The resource has already been processed, was deleted, or is too large.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateWorkloadShare
      description: |-
        Update a workload share.
      parameters:
      - name: ShareId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ShareId'
      - name: WorkloadId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WorkloadId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                PermissionType:
                  $ref: '#/components/schemas/PermissionType'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The resource has already been processed, was deleted, or is too large.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /workloads/{WorkloadId}/disassociateLenses:
    patch:
      operationId: DisassociateLenses
      description: |-
        Disassociate a lens from a workload.

        Up to 10 lenses can be disassociated from a workload in a single API operation.

        The Amazon Web Services Well-Architected Framework lens (`wellarchitected`) cannot be removed from a workload.
      parameters:
      - name: WorkloadId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WorkloadId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                LensAliases:
                  $ref: '#/components/schemas/LensAliases'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The resource has already been processed, was deleted, or is too large.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /workloads/{WorkloadId}/disassociateProfiles:
    patch:
      operationId: DisassociateProfiles
      description: |-
        Disassociate a profile from a workload.
      parameters:
      - name: WorkloadId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WorkloadId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ProfileArns:
                  $ref: '#/components/schemas/ProfileArns'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The resource has already been processed, was deleted, or is too large.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /lenses/{LensAlias}/export:
    get:
      operationId: ExportLens
      description: |-
        Export an existing lens.

        Only the owner of a lens can export it. Lenses provided by Amazon Web Services (Amazon Web Services Official Content) cannot be exported.

        Lenses are defined in JSON. For more information, see [JSON format specification](https://docs.aws.amazon.com/wellarchitected/latest/userguide/lenses-format-specification.html) in the _Well-Architected Tool User Guide_.

        **Disclaimer**

        Do not include or gather personal identifiable information (PII) of end users or other identifiable individuals in or via your custom lenses. If your custom lens or those shared with you and used in your account do include or collect PII you are responsible for: ensuring that the included PII is processed in accordance with applicable law, providing adequate privacy notices, and obtaining necessary consents for processing such data.
      parameters:
      - name: LensAlias
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/LensAlias'
      - name: LensVersion
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/LensVersion'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /workloads/{WorkloadId}/lensReviews/{LensAlias}/answers/{QuestionId}:
    get:
      operationId: GetAnswer
      description: |-
        Get the answer to a specific question in a workload review.
      parameters:
      - name: WorkloadId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WorkloadId'
      - name: LensAlias
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/LensAlias'
      - name: QuestionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QuestionId'
      - name: MilestoneNumber
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MilestoneNumber'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateAnswer
      description: |-
        Update the answer to a specific question in a workload review.
      parameters:
      - name: WorkloadId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WorkloadId'
      - name: LensAlias
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/LensAlias'
      - name: QuestionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QuestionId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SelectedChoices:
                  $ref: '#/components/schemas/SelectedChoices'
                ChoiceUpdates:
                  $ref: '#/components/schemas/ChoiceUpdates'
                Notes:
                  $ref: '#/components/schemas/Notes'
                IsApplicable:
                  $ref: '#/components/schemas/IsApplicable'
                Reason:
                  $ref: '#/components/schemas/AnswerReason'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The resource has already been processed, was deleted, or is too large.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /consolidatedReport:
    get:
      operationId: GetConsolidatedReport
      description: |-
        Get a consolidated report of your workloads.

        You can optionally choose to include workloads that have been shared with you.
      parameters:
      - name: Format
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ReportFormat'
      - name: IncludeSharedResources
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/IncludeSharedResources'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/GetConsolidatedReportMaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The resource has already been processed, was deleted, or is too large.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /global-settings:
    get:
      operationId: GetGlobalSettings
      description: |-
        Global settings for all workloads.
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateGlobalSettings
      description: |-
        Update whether the Amazon Web Services account is opted into organization sharing and discovery integration features.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                OrganizationSharingStatus:
                  $ref: '#/components/schemas/OrganizationSharingStatus'
                DiscoveryIntegrationStatus:
                  $ref: '#/components/schemas/DiscoveryIntegrationStatus'
                JiraConfiguration:
                  $ref: '#/components/schemas/AccountJiraConfigurationInput'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The resource has already been processed, was deleted, or is too large.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /workloads/{WorkloadId}/lensReviews/{LensAlias}:
    get:
      operationId: GetLensReview
      description: |-
        Get lens review.
      parameters:
      - name: WorkloadId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WorkloadId'
      - name: LensAlias
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/LensAlias'
      - name: MilestoneNumber
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MilestoneNumber'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateLensReview
      description: |-
        Update lens review for a particular workload.
      parameters:
      - name: WorkloadId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WorkloadId'
      - name: LensAlias
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/LensAlias'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                LensNotes:
                  $ref: '#/components/schemas/Notes'
                PillarNotes:
                  $ref: '#/components/schemas/PillarNotes'
                JiraConfiguration:
                  $ref: '#/components/schemas/JiraSelectedQuestionConfiguration'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The resource has already been processed, was deleted, or is too large.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /workloads/{WorkloadId}/lensReviews/{LensAlias}/report:
    get:
      operationId: GetLensReviewReport
      description: |-
        Get lens review report.
      parameters:
      - name: WorkloadId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WorkloadId'
      - name: LensAlias
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/LensAlias'
      - name: MilestoneNumber
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MilestoneNumber'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /lenses/{LensAlias}/versionDifference:
    get:
      operationId: GetLensVersionDifference
      description: |-
        Get lens version differences.
      parameters:
      - name: LensAlias
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/LensAlias'
      - name: BaseLensVersion
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/LensVersion'
      - name: TargetLensVersion
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/LensVersion'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /workloads/{WorkloadId}/milestones/{MilestoneNumber}:
    get:
      operationId: GetMilestone
      description: |-
        Get a milestone for an existing workload.
      parameters:
      - name: WorkloadId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WorkloadId'
      - name: MilestoneNumber
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MilestoneNumber'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /profileTemplate:
    get:
      operationId: GetProfileTemplate
      description: |-
        Get profile template.
      parameters: []
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /reviewTemplates/{TemplateArn}/lensReviews/{LensAlias}/answers/{QuestionId}:
    get:
      operationId: GetReviewTemplateAnswer
      description: |-
        Get review template answer.
      parameters:
      - name: TemplateArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TemplateArn'
      - name: LensAlias
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/LensAlias'
      - name: QuestionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QuestionId'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateReviewTemplateAnswer
      description: |-
        Update a review template answer.
      parameters:
      - name: TemplateArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TemplateArn'
      - name: LensAlias
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/LensAlias'
      - name: QuestionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QuestionId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SelectedChoices:
                  $ref: '#/components/schemas/SelectedChoices'
                ChoiceUpdates:
                  $ref: '#/components/schemas/ChoiceUpdates'
                Notes:
                  $ref: '#/components/schemas/Notes'
                IsApplicable:
                  $ref: '#/components/schemas/IsApplicable'
                Reason:
                  $ref: '#/components/schemas/AnswerReason'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The resource has already been processed, was deleted, or is too large.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /reviewTemplates/{TemplateArn}/lensReviews/{LensAlias}:
    get:
      operationId: GetReviewTemplateLensReview
      description: |-
        Get a lens review associated with a review template.
      parameters:
      - name: TemplateArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TemplateArn'
      - name: LensAlias
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/LensAlias'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateReviewTemplateLensReview
      description: |-
        Update a lens review associated with a review template.
      parameters:
      - name: TemplateArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TemplateArn'
      - name: LensAlias
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/LensAlias'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                LensNotes:
                  $ref: '#/components/schemas/Notes'
                PillarNotes:
                  $ref: '#/components/schemas/PillarNotes'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The resource has already been processed, was deleted, or is too large.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /importLens:
    put:
      operationId: ImportLens
      description: |-
        Import a new custom lens or update an existing custom lens.

        To update an existing custom lens, specify its ARN as the `LensAlias`. If no ARN is specified, a new custom lens is created.

        The new or updated lens will have a status of `DRAFT`. The lens cannot be applied to workloads or shared with other Amazon Web Services accounts until it's published with CreateLensVersion.

        Lenses are defined in JSON. For more information, see [JSON format specification](https://docs.aws.amazon.com/wellarchitected/latest/userguide/lenses-format-specification.html) in the _Well-Architected Tool User Guide_.

        A custom lens cannot exceed 500 KB in size.

        **Disclaimer**

        Do not include or gather personal identifiable information (PII) of end users or other identifiable individuals in or via your custom lenses. If your custom lens or those shared with you and used in your account do include or collect PII you are responsible for: ensuring that the included PII is processed in accordance with applicable law, providing adequate privacy notices, and obtaining necessary consents for processing such data.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                LensAlias:
                  $ref: '#/components/schemas/LensAlias'
                JSONString:
                  $ref: '#/components/schemas/LensJSON'
                ClientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The resource has already been processed, was deleted, or is too large.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The user has reached their resource quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /workloads/{WorkloadId}/lensReviews/{LensAlias}/answers:
    get:
      operationId: ListAnswers
      description: |-
        List of answers for a particular workload and lens.
      parameters:
      - name: WorkloadId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WorkloadId'
      - name: LensAlias
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/LensAlias'
      - name: PillarId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PillarId'
      - name: MilestoneNumber
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MilestoneNumber'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ListAnswersMaxResults'
      - name: QuestionPriority
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/QuestionPriority'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /workloads/{WorkloadId}/checks:
    post:
      operationId: ListCheckDetails
      description: |-
        List of Trusted Advisor check details by account related to the workload.
      parameters:
      - name: WorkloadId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WorkloadId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
                LensArn:
                  $ref: '#/components/schemas/LensArn'
                PillarId:
                  $ref: '#/components/schemas/PillarId'
                QuestionId:
                  $ref: '#/components/schemas/QuestionId'
                ChoiceId:
                  $ref: '#/components/schemas/ChoiceId'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /workloads/{WorkloadId}/checkSummaries:
    post:
      operationId: ListCheckSummaries
      description: |-
        List of Trusted Advisor checks summarized for all accounts related to the workload.
      parameters:
      - name: WorkloadId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WorkloadId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
                LensArn:
                  $ref: '#/components/schemas/LensArn'
                PillarId:
                  $ref: '#/components/schemas/PillarId'
                QuestionId:
                  $ref: '#/components/schemas/QuestionId'
                ChoiceId:
                  $ref: '#/components/schemas/ChoiceId'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /workloads/{WorkloadId}/lensReviews/{LensAlias}/improvements:
    get:
      operationId: ListLensReviewImprovements
      description: |-
        List the improvements of a particular lens review.
      parameters:
      - name: WorkloadId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WorkloadId'
      - name: LensAlias
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/LensAlias'
      - name: PillarId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PillarId'
      - name: MilestoneNumber
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MilestoneNumber'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ListLensReviewImprovementsMaxResults'
      - name: QuestionPriority
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/QuestionPriority'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /workloads/{WorkloadId}/lensReviews:
    get:
      operationId: ListLensReviews
      description: |-
        List lens reviews for a particular workload.
      parameters:
      - name: WorkloadId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WorkloadId'
      - name: MilestoneNumber
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MilestoneNumber'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /lenses:
    get:
      operationId: ListLenses
      description: |-
        List the available lenses.
      parameters:
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: LensType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/LensType'
      - name: LensStatus
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/LensStatusType'
      - name: LensName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/LensName'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /workloads/{WorkloadId}/milestonesSummaries:
    post:
      operationId: ListMilestones
      description: |-
        List all milestones for an existing workload.
      parameters:
      - name: WorkloadId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WorkloadId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /notifications:
    post:
      operationId: ListNotifications
      description: |-
        List lens notifications.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                WorkloadId:
                  $ref: '#/components/schemas/WorkloadId'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                MaxResults:
                  $ref: '#/components/schemas/ListNotificationsMaxResults'
                ResourceArn:
                  $ref: '#/components/schemas/ResourceArn'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /profileNotifications:
    get:
      operationId: ListProfileNotifications
      description: |-
        List profile notifications.
      parameters:
      - name: WorkloadId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/WorkloadId'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /profileSummaries:
    get:
      operationId: ListProfiles
      description: |-
        List profiles.
      parameters:
      - name: ProfileNamePrefix
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ProfileNamePrefix'
      - name: ProfileOwnerType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ProfileOwnerType'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /reviewTemplates/{TemplateArn}/lensReviews/{LensAlias}/answers:
    get:
      operationId: ListReviewTemplateAnswers
      description: |-
        List the answers of a review template.
      parameters:
      - name: TemplateArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TemplateArn'
      - name: LensAlias
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/LensAlias'
      - name: PillarId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PillarId'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ListReviewTemplateAnswersMaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /shareInvitations:
    get:
      operationId: ListShareInvitations
      description: |-
        List the share invitations.

        `WorkloadNamePrefix`, `LensNamePrefix`, `ProfileNamePrefix`, and `TemplateNamePrefix` are mutually exclusive. Use the parameter that matches your `ShareResourceType`.
      parameters:
      - name: WorkloadNamePrefix
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/WorkloadNamePrefix'
      - name: LensNamePrefix
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/LensNamePrefix'
      - name: ShareResourceType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ShareResourceType'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ListShareInvitationsMaxResults'
      - name: ProfileNamePrefix
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ProfileNamePrefix'
      - name: TemplateNamePrefix
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/TemplateNamePrefix'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tags/{WorkloadArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        List the tags for a resource.

        The WorkloadArn parameter can be a workload ARN, a custom lens ARN, a profile ARN, or review template ARN.
      parameters:
      - name: WorkloadArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WorkloadArn'
      responses:
        '200': {}
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    post:
      operationId: TagResource
      description: |-
        Adds one or more tags to the specified resource.

        The WorkloadArn parameter can be a workload ARN, a custom lens ARN, a profile ARN, or review template ARN.
      parameters:
      - name: WorkloadArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WorkloadArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    delete:
      operationId: UntagResource
      description: |-
        Deletes specified tags from a resource.

        The WorkloadArn parameter can be a workload ARN, a custom lens ARN, a profile ARN, or review template ARN.

        To specify multiple tags, use separate **tagKeys** parameters, for example:

        `DELETE /tags/WorkloadArn?tagKeys=key1&tagKeys;=key2`
      parameters:
      - name: WorkloadArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WorkloadArn'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeyList'
      responses:
        '200': {}
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /workloadsSummaries:
    post:
      operationId: ListWorkloads
      description: |-
        Paginated list of workloads.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                WorkloadNamePrefix:
                  $ref: '#/components/schemas/WorkloadNamePrefix'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                MaxResults:
                  $ref: '#/components/schemas/ListWorkloadsMaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /workloads/{WorkloadId}/updateIntegration:
    post:
      operationId: UpdateIntegration
      description: |-
        Update integration features.
      parameters:
      - name: WorkloadId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WorkloadId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ClientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
                IntegratingService:
                  $ref: '#/components/schemas/IntegratingService'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The resource has already been processed, was deleted, or is too large.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /shareInvitations/{ShareInvitationId}:
    patch:
      operationId: UpdateShareInvitation
      description: |-
        Update a workload or custom lens share invitation.

        This API operation can be called independently of any resource. Previous documentation implied that a workload ARN must be specified.
      parameters:
      - name: ShareInvitationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ShareInvitationId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ShareInvitationAction:
                  $ref: '#/components/schemas/ShareInvitationAction'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The resource has already been processed, was deleted, or is too large.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /workloads/{WorkloadId}/lensReviews/{LensAlias}/upgrade:
    put:
      operationId: UpgradeLensReview
      description: |-
        Upgrade lens review for a particular workload.
      parameters:
      - name: WorkloadId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WorkloadId'
      - name: LensAlias
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/LensAlias'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MilestoneName:
                  $ref: '#/components/schemas/MilestoneName'
                ClientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The resource has already been processed, was deleted, or is too large.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The user has reached their resource quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /workloads/{WorkloadId}/profiles/{ProfileArn}/upgrade:
    put:
      operationId: UpgradeProfileVersion
      description: |-
        Upgrade a profile.
      parameters:
      - name: WorkloadId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WorkloadId'
      - name: ProfileArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ProfileArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MilestoneName:
                  $ref: '#/components/schemas/MilestoneName'
                ClientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The resource has already been processed, was deleted, or is too large.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The user has reached their resource quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /reviewTemplates/{TemplateArn}/lensReviews/{LensAlias}/upgrade:
    put:
      operationId: UpgradeReviewTemplateLensReview
      description: |-
        Upgrade the lens review of a review template.
      parameters:
      - name: TemplateArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TemplateArn'
      - name: LensAlias
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/LensAlias'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ClientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The resource has already been processed, was deleted, or is too large.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is a problem with the Well-Architected Tool API service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The user input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    AccessDeniedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      required:
      - Message
      description: User does not have sufficient access to perform this action.
    AccountJiraConfigurationInput:
      type: object
      properties:
        IssueManagementStatus:
          allOf:
          - $ref: '#/components/schemas/AccountJiraIssueManagementStatus'
          description: 'Account-level: Jira issue management status.'
        IssueManagementType:
          allOf:
          - $ref: '#/components/schemas/IssueManagementType'
          description: 'Account-level: Jira issue management type.'
        JiraProjectKey:
          allOf:
          - $ref: '#/components/schemas/JiraProjectKey'
          description: 'Account-level: Jira project key to sync workloads to.'
        IntegrationStatus:
          allOf:
          - $ref: '#/components/schemas/IntegrationStatusInput'
          description: 'Account-level: Configuration status of the Jira integration.'
      description: 'Account-level: Input for the Jira configuration.'
    AccountJiraConfigurationOutput:
      type: object
      properties:
        IntegrationStatus:
          allOf:
          - $ref: '#/components/schemas/IntegrationStatus'
          description: 'Account-level: Configuration status of the Jira integration.'
        IssueManagementStatus:
          allOf:
          - $ref: '#/components/schemas/AccountJiraIssueManagementStatus'
          description: 'Account-level: Jira issue management status.'
        IssueManagementType:
          allOf:
          - $ref: '#/components/schemas/IssueManagementType'
          description: 'Account-level: Jira issue management type.'
        Subdomain:
          allOf:
          - $ref: '#/components/schemas/Subdomain'
          description: 'Account-level: Jira subdomain URL.'
        JiraProjectKey:
          allOf:
          - $ref: '#/components/schemas/JiraProjectKey'
          description: 'Account-level: Jira project key to sync workloads to.'
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          description: 'Account-level: Status message on configuration of the Jira
            integration.'
      description: 'Account-level: Output configuration of the Jira integration.'
    AccountJiraIssueManagementStatus:
      type: string
      enum:
      - ENABLED
      - DISABLED
    AccountSummary:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/CheckStatusCount'
      description: <p>Account summary for a Well-Architected best practice in relation
        to Trusted Advisor checks.</p>
    AdditionalResourceType:
      type: string
      enum:
      - HELPFUL_RESOURCE
      - IMPROVEMENT_PLAN
    AdditionalResources:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/AdditionalResourceType'
          description: Type of additional resource for a custom lens.
        Content:
          allOf:
          - $ref: '#/components/schemas/Urls'
          description: The URLs for additional resources, either helpful resources
            or improvement plans, for a custom lens. Up to five additional URLs can
            be specified.
      description: 'The choice level additional resources for a custom lens.


        This field does not apply to Amazon Web Services official lenses.'
    AdditionalResourcesList:
      type: array
      items:
        $ref: '#/components/schemas/AdditionalResources'
    Answer:
      type: object
      properties:
        QuestionId:
          $ref: '#/components/schemas/QuestionId'
        PillarId:
          $ref: '#/components/schemas/PillarId'
        QuestionTitle:
          $ref: '#/components/schemas/QuestionTitle'
        QuestionDescription:
          $ref: '#/components/schemas/QuestionDescription'
        ImprovementPlanUrl:
          $ref: '#/components/schemas/ImprovementPlanUrl'
        HelpfulResourceUrl:
          $ref: '#/components/schemas/HelpfulResourceUrl'
        HelpfulResourceDisplayText:
          allOf:
          - $ref: '#/components/schemas/DisplayText'
          description: 'The helpful resource text to be displayed for a custom lens.


            This field does not apply to Amazon Web Services official lenses.'
        Choices:
          $ref: '#/components/schemas/Choices'
        SelectedChoices:
          $ref: '#/components/schemas/SelectedChoices'
        ChoiceAnswers:
          allOf:
          - $ref: '#/components/schemas/ChoiceAnswers'
          description: A list of selected choices to a question in your workload.
        IsApplicable:
          $ref: '#/components/schemas/IsApplicable'
        Risk:
          $ref: '#/components/schemas/Risk'
        Notes:
          $ref: '#/components/schemas/Notes'
        Reason:
          allOf:
          - $ref: '#/components/schemas/AnswerReason'
          description: The reason why the question is not applicable to your workload.
        JiraConfiguration:
          allOf:
          - $ref: '#/components/schemas/JiraConfiguration'
          description: Configuration of the Jira integration.
      description: An answer of the question.
    AnswerReason:
      type: string
      enum:
      - OUT_OF_SCOPE
      - BUSINESS_PRIORITIES
      - ARCHITECTURE_CONSTRAINTS
      - OTHER
      - NONE
    AnswerSummaries:
      type: array
      items:
        $ref: '#/components/schemas/AnswerSummary'
      description: <p>List of answer summaries of lens review in a workload.</p>
    AnswerSummary:
      type: object
      properties:
        QuestionId:
          $ref: '#/components/schemas/QuestionId'
        PillarId:
          $ref: '#/components/schemas/PillarId'
        QuestionTitle:
          $ref: '#/components/schemas/QuestionTitle'
        Choices:
          $ref: '#/components/schemas/Choices'
        SelectedChoices:
          $ref: '#/components/schemas/SelectedChoices'
        ChoiceAnswerSummaries:
          allOf:
          - $ref: '#/components/schemas/ChoiceAnswerSummaries'
          description: A list of selected choices to a question in your workload.
        IsApplicable:
          $ref: '#/components/schemas/IsApplicable'
        Risk:
          $ref: '#/components/schemas/Risk'
        Reason:
          allOf:
          - $ref: '#/components/schemas/AnswerReason'
          description: The reason why a choice is non-applicable to a question in
            your workload.
        QuestionType:
          allOf:
          - $ref: '#/components/schemas/QuestionType'
          description: The type of the question.
        JiraConfiguration:
          allOf:
          - $ref: '#/components/schemas/JiraConfiguration'
          description: Configuration of the Jira integration.
      description: An answer summary of a lens review in a workload.
    ApplicationArn:
      type: string
      pattern: ^arn:aws[-a-z]*:servicecatalog:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:/applications/[a-z0-9]+$
      minLength: 0
      maxLength: 2084
    AssociateLensesInput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        LensAliases:
          $ref: '#/components/schemas/LensAliases'
      required:
      - WorkloadId
      - LensAliases
      description: Input to associate lens reviews.
    AssociateProfilesInput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        ProfileArns:
          allOf:
          - $ref: '#/components/schemas/ProfileArns'
          description: The list of profile ARNs to associate with the workload.
      required:
      - WorkloadId
      - ProfileArns
    AwsAccountId:
      type: string
      pattern: ^[0-9]{12}$
      minLength: 12
      maxLength: 12
    AwsRegion:
      type: string
      minLength: 0
      maxLength: 100
    Base64String:
      type: string
    BestPractice:
      type: object
      properties:
        ChoiceId:
          $ref: '#/components/schemas/ChoiceId'
        ChoiceTitle:
          $ref: '#/components/schemas/ChoiceTitle'
      description: A best practice, or question choice, that has been identified as
        a risk in this question.
    BestPractices:
      type: array
      items:
        $ref: '#/components/schemas/BestPractice'
    CheckDescription:
      type: string
    CheckDetail:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/CheckId'
          description: Trusted Advisor check ID.
        Name:
          allOf:
          - $ref: '#/components/schemas/CheckName'
          description: Trusted Advisor check name.
        Description:
          allOf:
          - $ref: '#/components/schemas/CheckDescription'
          description: Trusted Advisor check description.
        Provider:
          allOf:
          - $ref: '#/components/schemas/CheckProvider'
          description: Provider of the check related to the best practice.
        LensArn:
          allOf:
          - $ref: '#/components/schemas/LensArn'
          description: Well-Architected Lens ARN associated to the check.
        PillarId:
          $ref: '#/components/schemas/PillarId'
        QuestionId:
          $ref: '#/components/schemas/QuestionId'
        ChoiceId:
          $ref: '#/components/schemas/ChoiceId'
        Status:
          allOf:
          - $ref: '#/components/schemas/CheckStatus'
          description: Status associated to the check.
        AccountId:
          $ref: '#/components/schemas/AwsAccountId'
        FlaggedResources:
          allOf:
          - $ref: '#/components/schemas/FlaggedResources'
          description: Count of flagged resources associated to the check.
        Reason:
          allOf:
          - $ref: '#/components/schemas/CheckFailureReason'
          description: Reason associated to the check.
        UpdatedAt:
          $ref: '#/components/schemas/Timestamp'
      description: Account details for a Well-Architected best practice in relation
        to Trusted Advisor checks.
    CheckDetails:
      type: array
      items:
        $ref: '#/components/schemas/CheckDetail'
    CheckFailureReason:
      type: string
      enum:
      - ASSUME_ROLE_ERROR
      - ACCESS_DENIED
      - UNKNOWN_ERROR
      - PREMIUM_SUPPORT_REQUIRED
    CheckId:
      type: string
    CheckName:
      type: string
    CheckProvider:
      type: string
      enum:
      - TRUSTED_ADVISOR
    CheckStatus:
      type: string
      enum:
      - OKAY
      - WARNING
      - ERROR
      - NOT_AVAILABLE
      - FETCH_FAILED
    CheckStatusCount:
      type: integer
      minimum: 1
      maximum: 101
    CheckSummaries:
      type: array
      items:
        $ref: '#/components/schemas/CheckSummary'
    CheckSummary:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/CheckId'
          description: Trusted Advisor check ID.
        Name:
          allOf:
          - $ref: '#/components/schemas/CheckName'
          description: Trusted Advisor check name.
        Provider:
          allOf:
          - $ref: '#/components/schemas/CheckProvider'
          description: Provider of the check related to the best practice.
        Description:
          allOf:
          - $ref: '#/components/schemas/CheckDescription'
          description: Trusted Advisor check description.
        UpdatedAt:
          $ref: '#/components/schemas/Timestamp'
        LensArn:
          allOf:
          - $ref: '#/components/schemas/LensArn'
          description: Well-Architected Lens ARN associated to the check.
        PillarId:
          $ref: '#/components/schemas/PillarId'
        QuestionId:
          $ref: '#/components/schemas/QuestionId'
        ChoiceId:
          $ref: '#/components/schemas/ChoiceId'
        Status:
          allOf:
          - $ref: '#/components/schemas/CheckStatus'
          description: Status associated to the check.
        AccountSummary:
          allOf:
          - $ref: '#/components/schemas/AccountSummary'
          description: Account summary associated to the check.
      description: Trusted Advisor check summary.
    Choice:
      type: object
      properties:
        ChoiceId:
          $ref: '#/components/schemas/ChoiceId'
        Title:
          $ref: '#/components/schemas/ChoiceTitle'
        Description:
          $ref: '#/components/schemas/ChoiceDescription'
        HelpfulResource:
          allOf:
          - $ref: '#/components/schemas/ChoiceContent'
          description: 'The helpful resource (both text and URL) for a particular
            choice.


            This field only applies to custom lenses. Each choice can have only one
            helpful resource.'
        ImprovementPlan:
          allOf:
          - $ref: '#/components/schemas/ChoiceContent'
          description: 'The improvement plan (both text and URL) for a particular
            choice.


            This field only applies to custom lenses. Each choice can have only one
            improvement plan.'
        AdditionalResources:
          allOf:
          - $ref: '#/components/schemas/AdditionalResourcesList'
          description: 'The additional resources for a choice in a custom lens.


            A choice can have up to two additional resources: one of type `HELPFUL_RESOURCE`,
            one of type `IMPROVEMENT_PLAN`, or both.'
      description: A choice available to answer question.
    ChoiceAnswer:
      type: object
      properties:
        ChoiceId:
          $ref: '#/components/schemas/ChoiceId'
        Status:
          allOf:
          - $ref: '#/components/schemas/ChoiceStatus'
          description: The status of a choice.
        Reason:
          allOf:
          - $ref: '#/components/schemas/ChoiceReason'
          description: The reason why a choice is non-applicable to a question in
            your workload.
        Notes:
          allOf:
          - $ref: '#/components/schemas/ChoiceNotes'
          description: The notes associated with a choice.
      description: A choice that has been answered on a question in your workload.
    ChoiceAnswerSummaries:
      type: array
      items:
        $ref: '#/components/schemas/ChoiceAnswerSummary'
    ChoiceAnswerSummary:
      type: object
      properties:
        ChoiceId:
          $ref: '#/components/schemas/ChoiceId'
        Status:
          allOf:
          - $ref: '#/components/schemas/ChoiceStatus'
          description: The status of a choice.
        Reason:
          allOf:
          - $ref: '#/components/schemas/ChoiceReason'
          description: The reason why a choice is non-applicable to a question in
            your workload.
      description: A choice summary that has been answered on a question in your workload.
    ChoiceAnswers:
      type: array
      items:
        $ref: '#/components/schemas/ChoiceAnswer'
    ChoiceContent:
      type: object
      properties:
        DisplayText:
          allOf:
          - $ref: '#/components/schemas/ChoiceContentDisplayText'
          description: The display text for the choice content.
        Url:
          allOf:
          - $ref: '#/components/schemas/ChoiceContentUrl'
          description: The URL for the choice content.
      description: The choice content.
    ChoiceContentDisplayText:
      type: string
      minLength: 1
      maxLength: 1024
    ChoiceContentUrl:
      type: string
      minLength: 1
      maxLength: 1024
    ChoiceDescription:
      type: string
      minLength: 1
      maxLength: 1024
    ChoiceId:
      type: string
      minLength: 1
      maxLength: 64
    ChoiceImprovementPlan:
      type: object
      properties:
        ChoiceId:
          $ref: '#/components/schemas/ChoiceId'
        DisplayText:
          allOf:
          - $ref: '#/components/schemas/DisplayText'
          description: The display text for the improvement plan.
        ImprovementPlanUrl:
          $ref: '#/components/schemas/ImprovementPlanUrl'
      description: The choice level improvement plan.
    ChoiceImprovementPlans:
      type: array
      items:
        $ref: '#/components/schemas/ChoiceImprovementPlan'
    ChoiceNotes:
      type: string
      minLength: 0
      maxLength: 250
    ChoiceReason:
      type: string
      enum:
      - OUT_OF_SCOPE
      - BUSINESS_PRIORITIES
      - ARCHITECTURE_CONSTRAINTS
      - OTHER
      - NONE
    ChoiceStatus:
      type: string
      enum:
      - SELECTED
      - NOT_APPLICABLE
      - UNSELECTED
    ChoiceTitle:
      type: string
      minLength: 1
      maxLength: 512
    ChoiceUpdate:
      type: object
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/ChoiceStatus'
          description: The status of a choice.
        Reason:
          allOf:
          - $ref: '#/components/schemas/ChoiceReason'
          description: The reason why a choice is non-applicable to a question in
            your workload.
        Notes:
          allOf:
          - $ref: '#/components/schemas/ChoiceNotes'
          description: The notes associated with a choice.
      required:
      - Status
      description: A list of choices to be updated.
    ChoiceUpdates:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ChoiceUpdate'
    Choices:
      type: array
      items:
        $ref: '#/components/schemas/Choice'
      description: <p>List of choices available for a question.</p>
    ClientRequestToken:
      type: string
      minLength: 1
      maxLength: 2048
    ConflictException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
        ResourceId:
          $ref: '#/components/schemas/ExceptionResourceId'
        ResourceType:
          $ref: '#/components/schemas/ExceptionResourceType'
      required:
      - Message
      - ResourceId
      - ResourceType
      description: The resource has already been processed, was deleted, or is too
        large.
    ConsolidatedReportMetric:
      type: object
      properties:
        MetricType:
          allOf:
          - $ref: '#/components/schemas/MetricType'
          description: The metric type of a metric in the consolidated report. Currently
            only WORKLOAD metric types are supported.
        RiskCounts:
          $ref: '#/components/schemas/RiskCounts'
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        WorkloadName:
          $ref: '#/components/schemas/WorkloadName'
        WorkloadArn:
          $ref: '#/components/schemas/WorkloadArn'
        UpdatedAt:
          $ref: '#/components/schemas/Timestamp'
        Lenses:
          allOf:
          - $ref: '#/components/schemas/LensMetrics'
          description: The metrics for the lenses in the workload.
        LensesAppliedCount:
          allOf:
          - $ref: '#/components/schemas/LensesAppliedCount'
          description: The total number of lenses applied to the workload.
      description: A metric that contributes to the consolidated report.
    ConsolidatedReportMetrics:
      type: array
      items:
        $ref: '#/components/schemas/ConsolidatedReportMetric'
    Count:
      type: integer
      minimum: 0
      description: <p>A non-negative integer that denotes how many.</p>
    CreateLensShareInput:
      type: object
      properties:
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        SharedWith:
          $ref: '#/components/schemas/SharedWith'
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
      required:
      - LensAlias
      - SharedWith
      - ClientRequestToken
    CreateLensShareOutput:
      type: object
      properties:
        ShareId:
          $ref: '#/components/schemas/ShareId'
    CreateLensVersionInput:
      type: object
      properties:
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        LensVersion:
          allOf:
          - $ref: '#/components/schemas/LensVersion'
          description: The version of the lens being created.
        IsMajorVersion:
          allOf:
          - $ref: '#/components/schemas/IsMajorVersion'
          description: Set to true if this new major lens version.
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
      required:
      - LensAlias
      - LensVersion
      - ClientRequestToken
    CreateLensVersionOutput:
      type: object
      properties:
        LensArn:
          allOf:
          - $ref: '#/components/schemas/LensArn'
          description: The ARN for the lens.
        LensVersion:
          allOf:
          - $ref: '#/components/schemas/LensVersion'
          description: The version of the lens.
    CreateMilestoneInput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        MilestoneName:
          $ref: '#/components/schemas/MilestoneName'
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
      required:
      - WorkloadId
      - MilestoneName
      - ClientRequestToken
      description: Input for milestone creation.
    CreateMilestoneOutput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        MilestoneNumber:
          $ref: '#/components/schemas/MilestoneNumber'
      description: Output of a create milestone call.
    CreateProfileInput:
      type: object
      properties:
        ProfileName:
          allOf:
          - $ref: '#/components/schemas/ProfileName'
          description: Name of the profile.
        ProfileDescription:
          allOf:
          - $ref: '#/components/schemas/ProfileDescription'
          description: The profile description.
        ProfileQuestions:
          allOf:
          - $ref: '#/components/schemas/ProfileQuestionUpdates'
          description: The profile questions.
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags assigned to the profile.
      required:
      - ProfileName
      - ProfileDescription
      - ProfileQuestions
      - ClientRequestToken
    CreateProfileOutput:
      type: object
      properties:
        ProfileArn:
          allOf:
          - $ref: '#/components/schemas/ProfileArn'
          description: The profile ARN.
        ProfileVersion:
          allOf:
          - $ref: '#/components/schemas/ProfileVersion'
          description: Version of the profile.
    CreateProfileShareInput:
      type: object
      properties:
        ProfileArn:
          allOf:
          - $ref: '#/components/schemas/ProfileArn'
          description: The profile ARN.
        SharedWith:
          $ref: '#/components/schemas/SharedWith'
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
      required:
      - ProfileArn
      - SharedWith
      - ClientRequestToken
    CreateProfileShareOutput:
      type: object
      properties:
        ShareId:
          $ref: '#/components/schemas/ShareId'
        ProfileArn:
          allOf:
          - $ref: '#/components/schemas/ProfileArn'
          description: The profile ARN.
    CreateReviewTemplateInput:
      type: object
      properties:
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/TemplateName'
          description: Name of the review template.
        Description:
          allOf:
          - $ref: '#/components/schemas/TemplateDescription'
          description: The review template description.
        Lenses:
          allOf:
          - $ref: '#/components/schemas/ReviewTemplateLenses'
          description: Lenses applied to the review template.
        Notes:
          $ref: '#/components/schemas/Notes'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags assigned to the review template.
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
      required:
      - TemplateName
      - Description
      - Lenses
      - ClientRequestToken
    CreateReviewTemplateOutput:
      type: object
      properties:
        TemplateArn:
          allOf:
          - $ref: '#/components/schemas/TemplateArn'
          description: The review template ARN.
    CreateTemplateShareInput:
      type: object
      properties:
        TemplateArn:
          allOf:
          - $ref: '#/components/schemas/TemplateArn'
          description: The review template ARN.
        SharedWith:
          $ref: '#/components/schemas/SharedWith'
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
      required:
      - TemplateArn
      - SharedWith
      - ClientRequestToken
    CreateTemplateShareOutput:
      type: object
      properties:
        TemplateArn:
          allOf:
          - $ref: '#/components/schemas/TemplateArn'
          description: The review template ARN.
        ShareId:
          $ref: '#/components/schemas/ShareId'
    CreateWorkloadInput:
      type: object
      properties:
        WorkloadName:
          $ref: '#/components/schemas/WorkloadName'
        Description:
          $ref: '#/components/schemas/WorkloadDescription'
        Environment:
          $ref: '#/components/schemas/WorkloadEnvironment'
        AccountIds:
          $ref: '#/components/schemas/WorkloadAccountIds'
        AwsRegions:
          $ref: '#/components/schemas/WorkloadAwsRegions'
        NonAwsRegions:
          $ref: '#/components/schemas/WorkloadNonAwsRegions'
        PillarPriorities:
          $ref: '#/components/schemas/WorkloadPillarPriorities'
        ArchitecturalDesign:
          $ref: '#/components/schemas/WorkloadArchitecturalDesign'
        ReviewOwner:
          $ref: '#/components/schemas/WorkloadReviewOwner'
        IndustryType:
          $ref: '#/components/schemas/WorkloadIndustryType'
        Industry:
          $ref: '#/components/schemas/WorkloadIndustry'
        Lenses:
          $ref: '#/components/schemas/WorkloadLenses'
        Notes:
          $ref: '#/components/schemas/Notes'
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags to be associated with the workload.
        DiscoveryConfig:
          allOf:
          - $ref: '#/components/schemas/WorkloadDiscoveryConfig'
          description: Well-Architected discovery configuration settings associated
            to the workload.
        Applications:
          allOf:
          - $ref: '#/components/schemas/WorkloadApplications'
          description: List of AppRegistry application ARNs associated to the workload.
        ProfileArns:
          allOf:
          - $ref: '#/components/schemas/WorkloadProfileArns'
          description: The list of profile ARNs associated with the workload.
        ReviewTemplateArns:
          allOf:
          - $ref: '#/components/schemas/ReviewTemplateArns'
          description: The list of review template ARNs to associate with the workload.
        JiraConfiguration:
          allOf:
          - $ref: '#/components/schemas/WorkloadJiraConfigurationInput'
          description: Jira configuration settings when creating a workload.
      required:
      - WorkloadName
      - Description
      - Environment
      - Lenses
      - ClientRequestToken
      description: Input for workload creation.
    CreateWorkloadOutput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        WorkloadArn:
          $ref: '#/components/schemas/WorkloadArn'
      description: Output of a create workload call.
    CreateWorkloadShareInput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        SharedWith:
          $ref: '#/components/schemas/SharedWith'
        PermissionType:
          $ref: '#/components/schemas/PermissionType'
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
      required:
      - WorkloadId
      - SharedWith
      - PermissionType
      - ClientRequestToken
      description: Input for Create Workload Share
    CreateWorkloadShareOutput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        ShareId:
          $ref: '#/components/schemas/ShareId'
      description: Input for Create Workload Share
    DefinitionType:
      type: string
      enum:
      - WORKLOAD_METADATA
      - APP_REGISTRY
    DeleteLensInput:
      type: object
      properties:
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
        LensStatus:
          allOf:
          - $ref: '#/components/schemas/LensStatusType'
          description: The status of the lens to be deleted.
      required:
      - LensAlias
      - ClientRequestToken
      - LensStatus
    DeleteLensShareInput:
      type: object
      properties:
        ShareId:
          $ref: '#/components/schemas/ShareId'
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
      required:
      - ShareId
      - LensAlias
      - ClientRequestToken
    DeleteProfileInput:
      type: object
      properties:
        ProfileArn:
          allOf:
          - $ref: '#/components/schemas/ProfileArn'
          description: The profile ARN.
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
      required:
      - ProfileArn
      - ClientRequestToken
    DeleteProfileShareInput:
      type: object
      properties:
        ShareId:
          $ref: '#/components/schemas/ShareId'
        ProfileArn:
          allOf:
          - $ref: '#/components/schemas/ProfileArn'
          description: The profile ARN.
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
      required:
      - ShareId
      - ProfileArn
      - ClientRequestToken
    DeleteReviewTemplateInput:
      type: object
      properties:
        TemplateArn:
          allOf:
          - $ref: '#/components/schemas/TemplateArn'
          description: The review template ARN.
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
      required:
      - TemplateArn
      - ClientRequestToken
    DeleteTemplateShareInput:
      type: object
      properties:
        ShareId:
          $ref: '#/components/schemas/ShareId'
        TemplateArn:
          allOf:
          - $ref: '#/components/schemas/TemplateArn'
          description: The review template ARN.
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
      required:
      - ShareId
      - TemplateArn
      - ClientRequestToken
    DeleteWorkloadInput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
      required:
      - WorkloadId
      - ClientRequestToken
      description: Input for workload deletion.
    DeleteWorkloadShareInput:
      type: object
      properties:
        ShareId:
          $ref: '#/components/schemas/ShareId'
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
      required:
      - ShareId
      - WorkloadId
      - ClientRequestToken
      description: Input for Delete Workload Share
    DifferenceStatus:
      type: string
      enum:
      - UPDATED
      - NEW
      - DELETED
    DisassociateLensesInput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        LensAliases:
          $ref: '#/components/schemas/LensAliases'
      required:
      - WorkloadId
      - LensAliases
      description: Input to disassociate lens reviews.
    DisassociateProfilesInput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        ProfileArns:
          allOf:
          - $ref: '#/components/schemas/ProfileArns'
          description: The list of profile ARNs to disassociate from the workload.
      required:
      - WorkloadId
      - ProfileArns
    DiscoveryIntegrationStatus:
      type: string
      enum:
      - ENABLED
      - DISABLED
    DisplayText:
      type: string
      minLength: 1
      maxLength: 64
    ExceptionMessage:
      type: string
    ExceptionResourceId:
      type: string
    ExceptionResourceType:
      type: string
    ExportLensInput:
      type: object
      properties:
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        LensVersion:
          allOf:
          - $ref: '#/components/schemas/LensVersion'
          description: The lens version to be exported.
      required:
      - LensAlias
    ExportLensOutput:
      type: object
      properties:
        LensJSON:
          allOf:
          - $ref: '#/components/schemas/LensJSON'
          description: The JSON representation of a lens.
    FlaggedResources:
      type: integer
      minimum: 1
      maximum: 9999
    GetAnswerInput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        QuestionId:
          $ref: '#/components/schemas/QuestionId'
        MilestoneNumber:
          $ref: '#/components/schemas/MilestoneNumber'
      required:
      - WorkloadId
      - LensAlias
      - QuestionId
      description: Input to get answer.
    GetAnswerOutput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        MilestoneNumber:
          $ref: '#/components/schemas/MilestoneNumber'
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        LensArn:
          allOf:
          - $ref: '#/components/schemas/LensArn'
          description: The ARN for the lens.
        Answer:
          $ref: '#/components/schemas/Answer'
      description: Output of a get answer call.
    GetConsolidatedReportInput:
      type: object
      properties:
        Format:
          allOf:
          - $ref: '#/components/schemas/ReportFormat'
          description: 'The format of the consolidated report.


            For `PDF`, `Base64String` is returned. For `JSON`, `Metrics` is returned.'
        IncludeSharedResources:
          allOf:
          - $ref: '#/components/schemas/IncludeSharedResources'
          description: Set to `true` to have shared resources included in the report.
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/GetConsolidatedReportMaxResults'
          description: The maximum number of results to return for this request.
      required:
      - Format
    GetConsolidatedReportMaxResults:
      type: integer
      minimum: 1
      maximum: 15
    GetConsolidatedReportOutput:
      type: object
      properties:
        Metrics:
          allOf:
          - $ref: '#/components/schemas/ConsolidatedReportMetrics'
          description: 'The metrics that make up the consolidated report.


            Only returned when `JSON` format is requested.'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        Base64String:
          $ref: '#/components/schemas/Base64String'
    GetGlobalSettingsOutput:
      type: object
      properties:
        OrganizationSharingStatus:
          allOf:
          - $ref: '#/components/schemas/OrganizationSharingStatus'
          description: Amazon Web Services Organizations sharing status.
        DiscoveryIntegrationStatus:
          allOf:
          - $ref: '#/components/schemas/DiscoveryIntegrationStatus'
          description: Discovery integration status.
        JiraConfiguration:
          allOf:
          - $ref: '#/components/schemas/AccountJiraConfigurationOutput'
          description: Jira configuration status.
    GetLensInput:
      type: object
      properties:
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        LensVersion:
          allOf:
          - $ref: '#/components/schemas/LensVersion'
          description: The lens version to be retrieved.
      required:
      - LensAlias
    GetLensOutput:
      type: object
      properties:
        Lens:
          allOf:
          - $ref: '#/components/schemas/Lens'
          description: A lens return object.
    GetLensReviewInput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        MilestoneNumber:
          $ref: '#/components/schemas/MilestoneNumber'
      required:
      - WorkloadId
      - LensAlias
      description: Input to get lens review.
    GetLensReviewOutput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        MilestoneNumber:
          $ref: '#/components/schemas/MilestoneNumber'
        LensReview:
          $ref: '#/components/schemas/LensReview'
      description: Output of a get lens review call.
    GetLensReviewReportInput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        MilestoneNumber:
          $ref: '#/components/schemas/MilestoneNumber'
      required:
      - WorkloadId
      - LensAlias
      description: Input to get lens review report.
    GetLensReviewReportOutput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        MilestoneNumber:
          $ref: '#/components/schemas/MilestoneNumber'
        LensReviewReport:
          $ref: '#/components/schemas/LensReviewReport'
      description: Output of a get lens review report call.
    GetLensVersionDifferenceInput:
      type: object
      properties:
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        BaseLensVersion:
          allOf:
          - $ref: '#/components/schemas/LensVersion'
          description: The base version of the lens.
        TargetLensVersion:
          allOf:
          - $ref: '#/components/schemas/LensVersion'
          description: The lens version to target a difference for.
      required:
      - LensAlias
    GetLensVersionDifferenceOutput:
      type: object
      properties:
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        LensArn:
          allOf:
          - $ref: '#/components/schemas/LensArn'
          description: The ARN for the lens.
        BaseLensVersion:
          allOf:
          - $ref: '#/components/schemas/LensVersion'
          description: The base version of the lens.
        TargetLensVersion:
          allOf:
          - $ref: '#/components/schemas/LensVersion'
          description: The target lens version for the lens.
        LatestLensVersion:
          allOf:
          - $ref: '#/components/schemas/LensVersion'
          description: The latest version of the lens.
        VersionDifferences:
          $ref: '#/components/schemas/VersionDifferences'
    GetMilestoneInput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        MilestoneNumber:
          $ref: '#/components/schemas/MilestoneNumber'
      required:
      - WorkloadId
      - MilestoneNumber
      description: Input to get a milestone.
    GetMilestoneOutput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        Milestone:
          $ref: '#/components/schemas/Milestone'
      description: Output of a get milestone call.
    GetProfileInput:
      type: object
      properties:
        ProfileArn:
          allOf:
          - $ref: '#/components/schemas/ProfileArn'
          description: The profile ARN.
        ProfileVersion:
          allOf:
          - $ref: '#/components/schemas/ProfileVersion'
          description: The profile version.
      required:
      - ProfileArn
    GetProfileOutput:
      type: object
      properties:
        Profile:
          allOf:
          - $ref: '#/components/schemas/Profile'
          description: The profile.
    GetProfileTemplateInput:
      type: object
      properties: {}
    GetProfileTemplateOutput:
      type: object
      properties:
        ProfileTemplate:
          allOf:
          - $ref: '#/components/schemas/ProfileTemplate'
          description: The profile template.
    GetReviewTemplateAnswerInput:
      type: object
      properties:
        TemplateArn:
          allOf:
          - $ref: '#/components/schemas/TemplateArn'
          description: The review template ARN.
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        QuestionId:
          $ref: '#/components/schemas/QuestionId'
      required:
      - TemplateArn
      - LensAlias
      - QuestionId
    GetReviewTemplateAnswerOutput:
      type: object
      properties:
        TemplateArn:
          allOf:
          - $ref: '#/components/schemas/TemplateArn'
          description: The review template ARN.
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        Answer:
          allOf:
          - $ref: '#/components/schemas/ReviewTemplateAnswer'
          description: An answer of the question.
    GetReviewTemplateInput:
      type: object
      properties:
        TemplateArn:
          allOf:
          - $ref: '#/components/schemas/TemplateArn'
          description: The review template ARN.
      required:
      - TemplateArn
    GetReviewTemplateLensReviewInput:
      type: object
      properties:
        TemplateArn:
          allOf:
          - $ref: '#/components/schemas/TemplateArn'
          description: The review template ARN.
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
      required:
      - TemplateArn
      - LensAlias
    GetReviewTemplateLensReviewOutput:
      type: object
      properties:
        TemplateArn:
          allOf:
          - $ref: '#/components/schemas/TemplateArn'
          description: The review template ARN.
        LensReview:
          allOf:
          - $ref: '#/components/schemas/ReviewTemplateLensReview'
          description: A lens review of a question.
    GetReviewTemplateOutput:
      type: object
      properties:
        ReviewTemplate:
          allOf:
          - $ref: '#/components/schemas/ReviewTemplate'
          description: The review template.
    GetWorkloadInput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
      required:
      - WorkloadId
      description: Input to get a workload.
    GetWorkloadOutput:
      type: object
      properties:
        Workload:
          $ref: '#/components/schemas/Workload'
      description: Output of a get workload call.
    HelpfulResourceUrl:
      type: string
      minLength: 1
      maxLength: 2048
    ImportLensInput:
      type: object
      properties:
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        JSONString:
          allOf:
          - $ref: '#/components/schemas/LensJSON'
          description: The JSON representation of a lens.
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Tags to associate to a lens.
      required:
      - JSONString
      - ClientRequestToken
    ImportLensOutput:
      type: object
      properties:
        LensArn:
          allOf:
          - $ref: '#/components/schemas/LensArn'
          description: The ARN for the lens that was created or updated.
        Status:
          allOf:
          - $ref: '#/components/schemas/ImportLensStatus'
          description: The status of the imported lens.
    ImportLensStatus:
      type: string
      enum:
      - IN_PROGRESS
      - COMPLETE
      - ERROR
    ImprovementPlanUrl:
      type: string
      minLength: 1
      maxLength: 2048
    ImprovementSummaries:
      type: array
      items:
        $ref: '#/components/schemas/ImprovementSummary'
      description: <p>List of improvement summaries of lens review in a workload.</p>
    ImprovementSummary:
      type: object
      properties:
        QuestionId:
          $ref: '#/components/schemas/QuestionId'
        PillarId:
          $ref: '#/components/schemas/PillarId'
        QuestionTitle:
          $ref: '#/components/schemas/QuestionTitle'
        Risk:
          $ref: '#/components/schemas/Risk'
        ImprovementPlanUrl:
          $ref: '#/components/schemas/ImprovementPlanUrl'
        ImprovementPlans:
          allOf:
          - $ref: '#/components/schemas/ChoiceImprovementPlans'
          description: The improvement plan details.
        JiraConfiguration:
          allOf:
          - $ref: '#/components/schemas/JiraConfiguration'
          description: Configuration of the Jira integration.
      description: An improvement summary of a lens review in a workload.
    IncludeSharedResources:
      type: boolean
    IntegratingService:
      type: string
      enum:
      - JIRA
    IntegrationStatus:
      type: string
      enum:
      - CONFIGURED
      - NOT_CONFIGURED
    IntegrationStatusInput:
      type: string
      enum:
      - NOT_CONFIGURED
    InternalServerException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      required:
      - Message
      description: There is a problem with the Well-Architected Tool API service.
    IsApplicable:
      type: boolean
      description: <p>Defines whether this question is applicable to a lens review.</p>
    IsMajorVersion:
      type: boolean
    IsReviewOwnerUpdateAcknowledged:
      type: boolean
    IssueManagementType:
      type: string
      enum:
      - AUTO
      - MANUAL
    JiraConfiguration:
      type: object
      properties:
        JiraIssueUrl:
          allOf:
          - $ref: '#/components/schemas/JiraIssueUrl'
          description: The URL of the associated Jira issue.
        LastSyncedTime:
          $ref: '#/components/schemas/Timestamp'
      description: Configuration of the Jira integration.
    JiraIssueUrl:
      type: string
      minLength: 1
      maxLength: 2048
    JiraProjectKey:
      type: string
      pattern: ^[A-Z][A-Z0-9_]*$
      minLength: 1
      maxLength: 100
    JiraSelectedQuestionConfiguration:
      type: object
      properties:
        SelectedPillars:
          allOf:
          - $ref: '#/components/schemas/SelectedPillars'
          description: Selected pillars in the workload.
      description: Selected questions in the workload.
    Lens:
      type: object
      properties:
        LensArn:
          allOf:
          - $ref: '#/components/schemas/LensArn'
          description: The ARN of a lens.
        LensVersion:
          allOf:
          - $ref: '#/components/schemas/LensVersion'
          description: The version of a lens.
        Name:
          $ref: '#/components/schemas/LensName'
        Description:
          $ref: '#/components/schemas/LensDescription'
        Owner:
          allOf:
          - $ref: '#/components/schemas/LensOwner'
          description: The Amazon Web Services account ID that owns the lens.
        ShareInvitationId:
          allOf:
          - $ref: '#/components/schemas/ShareInvitationId'
          description: The ID assigned to the share invitation.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags assigned to the lens.
      description: A lens return object.
    LensAlias:
      type: string
      minLength: 1
      maxLength: 128
    LensAliases:
      type: array
      items:
        $ref: '#/components/schemas/LensAlias'
      description: "<p>List of lens aliases to associate or disassociate with a workload.\
        \ Up to 10 lenses can be specified.</p>\n         <p>Identify a lens using\
        \ its <a>LensSummary$LensAlias</a>.</p>"
    LensArn:
      type: string
    LensDescription:
      type: string
      minLength: 1
      maxLength: 1024
    LensJSON:
      type: string
      minLength: 2
      maxLength: 500000
    LensMetric:
      type: object
      properties:
        LensArn:
          allOf:
          - $ref: '#/components/schemas/LensArn'
          description: The lens ARN.
        Pillars:
          allOf:
          - $ref: '#/components/schemas/PillarMetrics'
          description: The metrics for the pillars in a lens.
        RiskCounts:
          $ref: '#/components/schemas/RiskCounts'
      description: A metric for a particular lens in a workload.
    LensMetrics:
      type: array
      items:
        $ref: '#/components/schemas/LensMetric'
    LensName:
      type: string
      minLength: 1
      maxLength: 128
    LensNamePrefix:
      type: string
      minLength: 0
      maxLength: 100
    LensOwner:
      type: string
    LensReview:
      type: object
      properties:
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        LensArn:
          allOf:
          - $ref: '#/components/schemas/LensArn'
          description: The ARN for the lens.
        LensVersion:
          allOf:
          - $ref: '#/components/schemas/LensVersion'
          description: The version of the lens.
        LensName:
          $ref: '#/components/schemas/LensName'
        LensStatus:
          allOf:
          - $ref: '#/components/schemas/LensStatus'
          description: The status of the lens.
        PillarReviewSummaries:
          $ref: '#/components/schemas/PillarReviewSummaries'
        JiraConfiguration:
          allOf:
          - $ref: '#/components/schemas/JiraSelectedQuestionConfiguration'
          description: Jira configuration status of the Lens review.
        UpdatedAt:
          $ref: '#/components/schemas/Timestamp'
        Notes:
          $ref: '#/components/schemas/Notes'
        RiskCounts:
          $ref: '#/components/schemas/RiskCounts'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        Profiles:
          allOf:
          - $ref: '#/components/schemas/WorkloadProfiles'
          description: The profiles associated with the workload.
        PrioritizedRiskCounts:
          $ref: '#/components/schemas/RiskCounts'
      description: A lens review of a question.
    LensReviewReport:
      type: object
      properties:
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        LensArn:
          allOf:
          - $ref: '#/components/schemas/LensArn'
          description: The ARN for the lens.
        Base64String:
          $ref: '#/components/schemas/Base64String'
      description: A report of a lens review.
    LensReviewSummaries:
      type: array
      items:
        $ref: '#/components/schemas/LensReviewSummary'
      description: <p>List of lens summaries of lens reviews of a workload.</p>
    LensReviewSummary:
      type: object
      properties:
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        LensArn:
          allOf:
          - $ref: '#/components/schemas/LensArn'
          description: The ARN for the lens.
        LensVersion:
          allOf:
          - $ref: '#/components/schemas/LensVersion'
          description: The version of the lens.
        LensName:
          $ref: '#/components/schemas/LensName'
        LensStatus:
          allOf:
          - $ref: '#/components/schemas/LensStatus'
          description: The status of the lens.
        UpdatedAt:
          $ref: '#/components/schemas/Timestamp'
        RiskCounts:
          $ref: '#/components/schemas/RiskCounts'
        Profiles:
          allOf:
          - $ref: '#/components/schemas/WorkloadProfiles'
          description: The profiles associated with the workload.
        PrioritizedRiskCounts:
          $ref: '#/components/schemas/RiskCounts'
      description: A lens review summary of a workload.
    LensShareSummaries:
      type: array
      items:
        $ref: '#/components/schemas/LensShareSummary'
    LensShareSummary:
      type: object
      properties:
        ShareId:
          $ref: '#/components/schemas/ShareId'
        SharedWith:
          $ref: '#/components/schemas/SharedWith'
        Status:
          $ref: '#/components/schemas/ShareStatus'
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          description: Optional message to compliment the Status field.
      description: A lens share summary return object.
    LensStatus:
      type: string
      enum:
      - CURRENT
      - NOT_CURRENT
      - DEPRECATED
      - DELETED
      - UNSHARED
    LensStatusType:
      type: string
      enum:
      - ALL
      - DRAFT
      - PUBLISHED
    LensSummaries:
      type: array
      items:
        $ref: '#/components/schemas/LensSummary'
      description: <p>List of lens summaries of available lenses.</p>
    LensSummary:
      type: object
      properties:
        LensArn:
          allOf:
          - $ref: '#/components/schemas/LensArn'
          description: The ARN of the lens.
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        LensName:
          $ref: '#/components/schemas/LensName'
        LensType:
          allOf:
          - $ref: '#/components/schemas/LensType'
          description: The type of the lens.
        Description:
          $ref: '#/components/schemas/LensDescription'
        CreatedAt:
          $ref: '#/components/schemas/Timestamp'
        UpdatedAt:
          $ref: '#/components/schemas/Timestamp'
        LensVersion:
          allOf:
          - $ref: '#/components/schemas/LensVersion'
          description: The version of the lens.
        Owner:
          $ref: '#/components/schemas/AwsAccountId'
        LensStatus:
          allOf:
          - $ref: '#/components/schemas/LensStatus'
          description: The status of the lens.
      description: A lens summary of a lens.
    LensType:
      type: string
      enum:
      - AWS_OFFICIAL
      - CUSTOM_SHARED
      - CUSTOM_SELF
    LensUpgradeSummary:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        WorkloadName:
          $ref: '#/components/schemas/WorkloadName'
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        LensArn:
          allOf:
          - $ref: '#/components/schemas/LensArn'
          description: The ARN for the lens.
        CurrentLensVersion:
          allOf:
          - $ref: '#/components/schemas/LensVersion'
          description: The current version of the lens.
        LatestLensVersion:
          allOf:
          - $ref: '#/components/schemas/LensVersion'
          description: The latest version of the lens.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: '`ResourceArn` of the lens being upgraded'
        ResourceName:
          $ref: '#/components/schemas/WorkloadName'
      description: Lens upgrade summary return object.
    LensVersion:
      type: string
      minLength: 1
      maxLength: 32
    LensesAppliedCount:
      type: integer
      minimum: 0
    ListAnswersInput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        PillarId:
          $ref: '#/components/schemas/PillarId'
        MilestoneNumber:
          $ref: '#/components/schemas/MilestoneNumber'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ListAnswersMaxResults'
          description: The maximum number of results to return for this request.
        QuestionPriority:
          allOf:
          - $ref: '#/components/schemas/QuestionPriority'
          description: The priority of the question.
      required:
      - WorkloadId
      - LensAlias
      description: Input to list answers.
    ListAnswersMaxResults:
      type: integer
      minimum: 1
      maximum: 50
    ListAnswersOutput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        MilestoneNumber:
          $ref: '#/components/schemas/MilestoneNumber'
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        LensArn:
          allOf:
          - $ref: '#/components/schemas/LensArn'
          description: The ARN for the lens.
        AnswerSummaries:
          $ref: '#/components/schemas/AnswerSummaries'
        NextToken:
          $ref: '#/components/schemas/NextToken'
      description: Output of a list answers call.
    ListCheckDetailsInput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
        LensArn:
          allOf:
          - $ref: '#/components/schemas/LensArn'
          description: Well-Architected Lens ARN.
        PillarId:
          $ref: '#/components/schemas/PillarId'
        QuestionId:
          $ref: '#/components/schemas/QuestionId'
        ChoiceId:
          $ref: '#/components/schemas/ChoiceId'
      required:
      - WorkloadId
      - LensArn
      - PillarId
      - QuestionId
      - ChoiceId
    ListCheckDetailsOutput:
      type: object
      properties:
        CheckDetails:
          allOf:
          - $ref: '#/components/schemas/CheckDetails'
          description: The details about the Trusted Advisor checks related to the
            Well-Architected best practice.
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListCheckSummariesInput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
        LensArn:
          allOf:
          - $ref: '#/components/schemas/LensArn'
          description: Well-Architected Lens ARN.
        PillarId:
          $ref: '#/components/schemas/PillarId'
        QuestionId:
          $ref: '#/components/schemas/QuestionId'
        ChoiceId:
          $ref: '#/components/schemas/ChoiceId'
      required:
      - WorkloadId
      - LensArn
      - PillarId
      - QuestionId
      - ChoiceId
    ListCheckSummariesOutput:
      type: object
      properties:
        CheckSummaries:
          allOf:
          - $ref: '#/components/schemas/CheckSummaries'
          description: List of Trusted Advisor summaries related to the Well-Architected
            best practice.
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListLensReviewImprovementsInput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        PillarId:
          $ref: '#/components/schemas/PillarId'
        MilestoneNumber:
          $ref: '#/components/schemas/MilestoneNumber'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ListLensReviewImprovementsMaxResults'
          description: The maximum number of results to return for this request.
        QuestionPriority:
          allOf:
          - $ref: '#/components/schemas/QuestionPriority'
          description: The priority of the question.
      required:
      - WorkloadId
      - LensAlias
      description: Input to list lens review improvements.
    ListLensReviewImprovementsMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    ListLensReviewImprovementsOutput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        MilestoneNumber:
          $ref: '#/components/schemas/MilestoneNumber'
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        LensArn:
          allOf:
          - $ref: '#/components/schemas/LensArn'
          description: The ARN for the lens.
        ImprovementSummaries:
          $ref: '#/components/schemas/ImprovementSummaries'
        NextToken:
          $ref: '#/components/schemas/NextToken'
      description: Output of a list lens review improvements call.
    ListLensReviewsInput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        MilestoneNumber:
          $ref: '#/components/schemas/MilestoneNumber'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
      required:
      - WorkloadId
      description: Input to list lens reviews.
    ListLensReviewsOutput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        MilestoneNumber:
          $ref: '#/components/schemas/MilestoneNumber'
        LensReviewSummaries:
          $ref: '#/components/schemas/LensReviewSummaries'
        NextToken:
          $ref: '#/components/schemas/NextToken'
      description: Output of a list lens reviews call.
    ListLensSharesInput:
      type: object
      properties:
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        SharedWithPrefix:
          allOf:
          - $ref: '#/components/schemas/SharedWithPrefix'
          description: The Amazon Web Services account ID, organization ID, or organizational
            unit (OU) ID with which the lens is shared.
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ListWorkloadSharesMaxResults'
          description: The maximum number of results to return for this request.
        Status:
          $ref: '#/components/schemas/ShareStatus'
      required:
      - LensAlias
    ListLensSharesOutput:
      type: object
      properties:
        LensShareSummaries:
          allOf:
          - $ref: '#/components/schemas/LensShareSummaries'
          description: A list of lens share summaries.
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListLensesInput:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
        LensType:
          allOf:
          - $ref: '#/components/schemas/LensType'
          description: The type of lenses to be returned.
        LensStatus:
          allOf:
          - $ref: '#/components/schemas/LensStatusType'
          description: The status of lenses to be returned.
        LensName:
          $ref: '#/components/schemas/LensName'
      description: Input to list lenses.
    ListLensesOutput:
      type: object
      properties:
        LensSummaries:
          $ref: '#/components/schemas/LensSummaries'
        NextToken:
          $ref: '#/components/schemas/NextToken'
      description: Output of a list lenses call.
    ListMilestonesInput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
      required:
      - WorkloadId
      description: Input to list all milestones for a workload.
    ListMilestonesOutput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        MilestoneSummaries:
          $ref: '#/components/schemas/MilestoneSummaries'
        NextToken:
          $ref: '#/components/schemas/NextToken'
      description: Output of a list milestones call.
    ListNotificationsInput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ListNotificationsMaxResults'
          description: The maximum number of results to return for this request.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: 'The ARN for the related resource for the notification.


            Only one of `WorkloadID` or `ResourceARN` should be specified.'
    ListNotificationsMaxResults:
      type: integer
      minimum: 1
      maximum: 50
    ListNotificationsOutput:
      type: object
      properties:
        NotificationSummaries:
          allOf:
          - $ref: '#/components/schemas/NotificationSummaries'
          description: List of lens notification summaries in a workload.
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListProfileNotificationsInput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
    ListProfileNotificationsOutput:
      type: object
      properties:
        NotificationSummaries:
          allOf:
          - $ref: '#/components/schemas/ProfileNotificationSummaries'
          description: Notification summaries.
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListProfileSharesInput:
      type: object
      properties:
        ProfileArn:
          allOf:
          - $ref: '#/components/schemas/ProfileArn'
          description: The profile ARN.
        SharedWithPrefix:
          allOf:
          - $ref: '#/components/schemas/SharedWithPrefix'
          description: The Amazon Web Services account ID, organization ID, or organizational
            unit (OU) ID with which the profile is shared.
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ListProfileSharesMaxResults'
          description: The maximum number of results to return for this request.
        Status:
          $ref: '#/components/schemas/ShareStatus'
      required:
      - ProfileArn
    ListProfileSharesMaxResults:
      type: integer
      minimum: 1
      maximum: 50
    ListProfileSharesOutput:
      type: object
      properties:
        ProfileShareSummaries:
          allOf:
          - $ref: '#/components/schemas/ProfileShareSummaries'
          description: Profile share summaries.
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListProfilesInput:
      type: object
      properties:
        ProfileNamePrefix:
          allOf:
          - $ref: '#/components/schemas/ProfileNamePrefix'
          description: An optional string added to the beginning of each profile name
            returned in the results.
        ProfileOwnerType:
          allOf:
          - $ref: '#/components/schemas/ProfileOwnerType'
          description: Profile owner type.
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
    ListProfilesOutput:
      type: object
      properties:
        ProfileSummaries:
          allOf:
          - $ref: '#/components/schemas/ProfileSummaries'
          description: Profile summaries.
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListReviewTemplateAnswersInput:
      type: object
      properties:
        TemplateArn:
          allOf:
          - $ref: '#/components/schemas/TemplateArn'
          description: The ARN of the review template.
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        PillarId:
          $ref: '#/components/schemas/PillarId'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ListReviewTemplateAnswersMaxResults'
          description: The maximum number of results to return for this request.
      required:
      - TemplateArn
      - LensAlias
    ListReviewTemplateAnswersMaxResults:
      type: integer
      minimum: 1
      maximum: 50
    ListReviewTemplateAnswersOutput:
      type: object
      properties:
        TemplateArn:
          allOf:
          - $ref: '#/components/schemas/TemplateArn'
          description: The ARN of the review template.
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        AnswerSummaries:
          allOf:
          - $ref: '#/components/schemas/ReviewTemplateAnswerSummaries'
          description: List of answer summaries of a lens review in a review template.
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListReviewTemplatesInput:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
    ListReviewTemplatesOutput:
      type: object
      properties:
        ReviewTemplates:
          allOf:
          - $ref: '#/components/schemas/ReviewTemplates'
          description: List of review templates.
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListShareInvitationsInput:
      type: object
      properties:
        WorkloadNamePrefix:
          $ref: '#/components/schemas/WorkloadNamePrefix'
        LensNamePrefix:
          allOf:
          - $ref: '#/components/schemas/LensNamePrefix'
          description: An optional string added to the beginning of each lens name
            returned in the results.
        ShareResourceType:
          allOf:
          - $ref: '#/components/schemas/ShareResourceType'
          description: The type of share invitations to be returned.
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ListShareInvitationsMaxResults'
          description: The maximum number of results to return for this request.
        ProfileNamePrefix:
          allOf:
          - $ref: '#/components/schemas/ProfileNamePrefix'
          description: An optional string added to the beginning of each profile name
            returned in the results.
        TemplateNamePrefix:
          allOf:
          - $ref: '#/components/schemas/TemplateNamePrefix'
          description: An optional string added to the beginning of each review template
            name returned in the results.
      description: Input for List Share Invitations
    ListShareInvitationsMaxResults:
      type: integer
      minimum: 1
      maximum: 50
    ListShareInvitationsOutput:
      type: object
      properties:
        ShareInvitationSummaries:
          allOf:
          - $ref: '#/components/schemas/ShareInvitationSummaries'
          description: List of share invitation summaries in a workload.
        NextToken:
          $ref: '#/components/schemas/NextToken'
      description: Input for List Share Invitations
    ListTagsForResourceInput:
      type: object
      properties:
        WorkloadArn:
          $ref: '#/components/schemas/WorkloadArn'
      required:
      - WorkloadArn
    ListTagsForResourceOutput:
      type: object
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags for the resource.
    ListTemplateSharesInput:
      type: object
      properties:
        TemplateArn:
          allOf:
          - $ref: '#/components/schemas/TemplateArn'
          description: The review template ARN.
        SharedWithPrefix:
          allOf:
          - $ref: '#/components/schemas/SharedWithPrefix'
          description: The Amazon Web Services account ID, organization ID, or organizational
            unit (OU) ID with which the profile is shared.
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ListTemplateSharesMaxResults'
          description: The maximum number of results to return for this request.
        Status:
          $ref: '#/components/schemas/ShareStatus'
      required:
      - TemplateArn
    ListTemplateSharesMaxResults:
      type: integer
      minimum: 1
      maximum: 50
    ListTemplateSharesOutput:
      type: object
      properties:
        TemplateArn:
          allOf:
          - $ref: '#/components/schemas/TemplateArn'
          description: The review template ARN.
        TemplateShareSummaries:
          allOf:
          - $ref: '#/components/schemas/TemplateShareSummaries'
          description: A review template share summary return object.
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListWorkloadSharesInput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        SharedWithPrefix:
          allOf:
          - $ref: '#/components/schemas/SharedWithPrefix'
          description: The Amazon Web Services account ID, organization ID, or organizational
            unit (OU) ID with which the workload is shared.
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ListWorkloadSharesMaxResults'
          description: The maximum number of results to return for this request.
        Status:
          $ref: '#/components/schemas/ShareStatus'
      required:
      - WorkloadId
      description: Input for List Workload Share
    ListWorkloadSharesMaxResults:
      type: integer
      minimum: 1
      maximum: 50
    ListWorkloadSharesOutput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        WorkloadShareSummaries:
          $ref: '#/components/schemas/WorkloadShareSummaries'
        NextToken:
          $ref: '#/components/schemas/NextToken'
      description: Input for List Workload Share
    ListWorkloadsInput:
      type: object
      properties:
        WorkloadNamePrefix:
          $ref: '#/components/schemas/WorkloadNamePrefix'
        NextToken:
          $ref: '#/components/schemas/NextToken'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ListWorkloadsMaxResults'
          description: The maximum number of results to return for this request.
      description: Input to list all workloads.
    ListWorkloadsMaxResults:
      type: integer
      minimum: 1
      maximum: 50
    ListWorkloadsOutput:
      type: object
      properties:
        WorkloadSummaries:
          $ref: '#/components/schemas/WorkloadSummaries'
        NextToken:
          $ref: '#/components/schemas/NextToken'
      description: Output of a list workloads call.
    MaxResults:
      type: integer
      minimum: 1
      maximum: 50
      description: <p>The maximum number of results to return for this request.</p>
    MaxSelectedProfileChoices:
      type: integer
      minimum: 0
    MetricType:
      type: string
      enum:
      - WORKLOAD
    Milestone:
      type: object
      properties:
        MilestoneNumber:
          $ref: '#/components/schemas/MilestoneNumber'
        MilestoneName:
          $ref: '#/components/schemas/MilestoneName'
        RecordedAt:
          $ref: '#/components/schemas/Timestamp'
        Workload:
          $ref: '#/components/schemas/Workload'
      description: A milestone return object.
    MilestoneName:
      type: string
      minLength: 3
      maxLength: 100
    MilestoneNumber:
      type: integer
      minimum: 1
      maximum: 100
      description: "<p>The milestone number.</p>\n         <p>A workload can have\
        \ a maximum of 100 milestones.</p>"
    MilestoneSummaries:
      type: array
      items:
        $ref: '#/components/schemas/MilestoneSummary'
      description: <p>A list of milestone summaries.</p>
    MilestoneSummary:
      type: object
      properties:
        MilestoneNumber:
          $ref: '#/components/schemas/MilestoneNumber'
        MilestoneName:
          $ref: '#/components/schemas/MilestoneName'
        RecordedAt:
          $ref: '#/components/schemas/Timestamp'
        WorkloadSummary:
          $ref: '#/components/schemas/WorkloadSummary'
      description: A milestone summary return object.
    MinSelectedProfileChoices:
      type: integer
      minimum: 0
    NextToken:
      type: string
    Notes:
      type: string
      minLength: 0
      maxLength: 2084
    NotificationSummaries:
      type: array
      items:
        $ref: '#/components/schemas/NotificationSummary'
    NotificationSummary:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/NotificationType'
          description: The type of notification.
        LensUpgradeSummary:
          allOf:
          - $ref: '#/components/schemas/LensUpgradeSummary'
          description: Summary of lens upgrade.
      description: A notification summary return object.
    NotificationType:
      type: string
      enum:
      - LENS_VERSION_UPGRADED
      - LENS_VERSION_DEPRECATED
    OrganizationSharingStatus:
      type: string
      enum:
      - ENABLED
      - DISABLED
    PermissionType:
      type: string
      enum:
      - READONLY
      - CONTRIBUTOR
      description: <p>Permission granted on a share request.</p>
    PillarDifference:
      type: object
      properties:
        PillarId:
          $ref: '#/components/schemas/PillarId'
        PillarName:
          $ref: '#/components/schemas/PillarName'
        DifferenceStatus:
          allOf:
          - $ref: '#/components/schemas/DifferenceStatus'
          description: Indicates the type of change to the pillar.
        QuestionDifferences:
          allOf:
          - $ref: '#/components/schemas/QuestionDifferences'
          description: List of question differences.
      description: A pillar difference return object.
    PillarDifferences:
      type: array
      items:
        $ref: '#/components/schemas/PillarDifference'
    PillarId:
      type: string
      minLength: 1
      maxLength: 64
    PillarMetric:
      type: object
      properties:
        PillarId:
          $ref: '#/components/schemas/PillarId'
        RiskCounts:
          $ref: '#/components/schemas/RiskCounts'
        Questions:
          allOf:
          - $ref: '#/components/schemas/QuestionMetrics'
          description: The questions that have been identified as risks in the pillar.
      description: A metric for a particular pillar in a lens.
    PillarMetrics:
      type: array
      items:
        $ref: '#/components/schemas/PillarMetric'
    PillarName:
      type: string
      minLength: 1
      maxLength: 128
    PillarNotes:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Notes'
      description: "<p>List of pillar notes of a lens review in a workload.</p>\n\
        \         <p>For a review template, these are the notes that will be associated\
        \ with the workload when the template is applied.</p>"
    PillarReviewSummaries:
      type: array
      items:
        $ref: '#/components/schemas/PillarReviewSummary'
      description: <p>List of pillar review summaries of lens review in a workload.</p>
    PillarReviewSummary:
      type: object
      properties:
        PillarId:
          $ref: '#/components/schemas/PillarId'
        PillarName:
          $ref: '#/components/schemas/PillarName'
        Notes:
          $ref: '#/components/schemas/Notes'
        RiskCounts:
          $ref: '#/components/schemas/RiskCounts'
        PrioritizedRiskCounts:
          $ref: '#/components/schemas/RiskCounts'
      description: A pillar review summary of a lens review.
    Profile:
      type: object
      properties:
        ProfileArn:
          allOf:
          - $ref: '#/components/schemas/ProfileArn'
          description: The profile ARN.
        ProfileVersion:
          allOf:
          - $ref: '#/components/schemas/ProfileVersion'
          description: The profile version.
        ProfileName:
          allOf:
          - $ref: '#/components/schemas/ProfileName'
          description: The profile name.
        ProfileDescription:
          allOf:
          - $ref: '#/components/schemas/ProfileDescription'
          description: The profile description.
        ProfileQuestions:
          allOf:
          - $ref: '#/components/schemas/ProfileQuestions'
          description: Profile questions.
        Owner:
          $ref: '#/components/schemas/AwsAccountId'
        CreatedAt:
          $ref: '#/components/schemas/Timestamp'
        UpdatedAt:
          $ref: '#/components/schemas/Timestamp'
        ShareInvitationId:
          allOf:
          - $ref: '#/components/schemas/ShareInvitationId'
          description: The ID assigned to the share invitation.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags assigned to the profile.
      description: A profile.
    ProfileArn:
      type: string
      pattern: ^arn:aws[-a-z]*:wellarchitected:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:profile/[a-z0-9]+$
      minLength: 0
      maxLength: 2084
    ProfileArns:
      type: array
      items:
        $ref: '#/components/schemas/ProfileArn'
    ProfileChoice:
      type: object
      properties:
        ChoiceId:
          $ref: '#/components/schemas/ChoiceId'
        ChoiceTitle:
          $ref: '#/components/schemas/ChoiceTitle'
        ChoiceDescription:
          $ref: '#/components/schemas/ChoiceDescription'
      description: The profile choice.
    ProfileDescription:
      type: string
      minLength: 3
      maxLength: 100
    ProfileName:
      type: string
      minLength: 3
      maxLength: 100
    ProfileNamePrefix:
      type: string
      minLength: 0
      maxLength: 100
    ProfileNotificationSummaries:
      type: array
      items:
        $ref: '#/components/schemas/ProfileNotificationSummary'
    ProfileNotificationSummary:
      type: object
      properties:
        CurrentProfileVersion:
          allOf:
          - $ref: '#/components/schemas/ProfileVersion'
          description: The current profile version.
        LatestProfileVersion:
          allOf:
          - $ref: '#/components/schemas/ProfileVersion'
          description: The latest profile version.
        Type:
          allOf:
          - $ref: '#/components/schemas/ProfileNotificationType'
          description: Type of notification.
        ProfileArn:
          allOf:
          - $ref: '#/components/schemas/ProfileArn'
          description: The profile ARN.
        ProfileName:
          allOf:
          - $ref: '#/components/schemas/ProfileName'
          description: The profile name.
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        WorkloadName:
          $ref: '#/components/schemas/WorkloadName'
      description: The profile notification summary.
    ProfileNotificationType:
      type: string
      enum:
      - PROFILE_ANSWERS_UPDATED
      - PROFILE_DELETED
    ProfileOwnerType:
      type: string
      enum:
      - SELF
      - SHARED
    ProfileQuestion:
      type: object
      properties:
        QuestionId:
          $ref: '#/components/schemas/QuestionId'
        QuestionTitle:
          $ref: '#/components/schemas/QuestionTitle'
        QuestionDescription:
          $ref: '#/components/schemas/QuestionDescription'
        QuestionChoices:
          allOf:
          - $ref: '#/components/schemas/ProfileQuestionChoices'
          description: The question choices.
        SelectedChoiceIds:
          allOf:
          - $ref: '#/components/schemas/SelectedChoiceIds'
          description: The selected choices.
        MinSelectedChoices:
          allOf:
          - $ref: '#/components/schemas/MinSelectedProfileChoices'
          description: The minimum number of selected choices.
        MaxSelectedChoices:
          allOf:
          - $ref: '#/components/schemas/MaxSelectedProfileChoices'
          description: The maximum number of selected choices.
      description: A profile question.
    ProfileQuestionChoices:
      type: array
      items:
        $ref: '#/components/schemas/ProfileChoice'
    ProfileQuestionUpdate:
      type: object
      properties:
        QuestionId:
          $ref: '#/components/schemas/QuestionId'
        SelectedChoiceIds:
          allOf:
          - $ref: '#/components/schemas/SelectedProfileChoiceIds'
          description: The selected choices.
      description: An update to a profile question.
    ProfileQuestionUpdates:
      type: array
      items:
        $ref: '#/components/schemas/ProfileQuestionUpdate'
    ProfileQuestions:
      type: array
      items:
        $ref: '#/components/schemas/ProfileQuestion'
    ProfileShareSummaries:
      type: array
      items:
        $ref: '#/components/schemas/ProfileShareSummary'
    ProfileShareSummary:
      type: object
      properties:
        ShareId:
          $ref: '#/components/schemas/ShareId'
        SharedWith:
          $ref: '#/components/schemas/SharedWith'
        Status:
          $ref: '#/components/schemas/ShareStatus'
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          description: Profile share invitation status message.
      description: Summary of a profile share.
    ProfileSummaries:
      type: array
      items:
        $ref: '#/components/schemas/ProfileSummary'
    ProfileSummary:
      type: object
      properties:
        ProfileArn:
          allOf:
          - $ref: '#/components/schemas/ProfileArn'
          description: The profile ARN.
        ProfileVersion:
          allOf:
          - $ref: '#/components/schemas/ProfileVersion'
          description: The profile version.
        ProfileName:
          allOf:
          - $ref: '#/components/schemas/ProfileName'
          description: The profile name.
        ProfileDescription:
          allOf:
          - $ref: '#/components/schemas/ProfileDescription'
          description: The profile description.
        Owner:
          $ref: '#/components/schemas/AwsAccountId'
        CreatedAt:
          $ref: '#/components/schemas/Timestamp'
        UpdatedAt:
          $ref: '#/components/schemas/Timestamp'
      description: Summary of a profile.
    ProfileTemplate:
      type: object
      properties:
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/ProfileName'
          description: The name of the profile template.
        TemplateQuestions:
          allOf:
          - $ref: '#/components/schemas/TemplateQuestions'
          description: Profile template questions.
        CreatedAt:
          $ref: '#/components/schemas/Timestamp'
        UpdatedAt:
          $ref: '#/components/schemas/Timestamp'
      description: The profile template.
    ProfileTemplateChoice:
      type: object
      properties:
        ChoiceId:
          $ref: '#/components/schemas/ChoiceId'
        ChoiceTitle:
          $ref: '#/components/schemas/ChoiceTitle'
        ChoiceDescription:
          $ref: '#/components/schemas/ChoiceDescription'
      description: A profile template choice.
    ProfileTemplateQuestion:
      type: object
      properties:
        QuestionId:
          $ref: '#/components/schemas/QuestionId'
        QuestionTitle:
          $ref: '#/components/schemas/QuestionTitle'
        QuestionDescription:
          $ref: '#/components/schemas/QuestionDescription'
        QuestionChoices:
          allOf:
          - $ref: '#/components/schemas/ProfileTemplateQuestionChoices'
          description: The question choices.
        MinSelectedChoices:
          allOf:
          - $ref: '#/components/schemas/MinSelectedProfileChoices'
          description: The minimum number of choices selected.
        MaxSelectedChoices:
          allOf:
          - $ref: '#/components/schemas/MaxSelectedProfileChoices'
          description: The maximum number of choices selected.
      description: A profile template question.
    ProfileTemplateQuestionChoices:
      type: array
      items:
        $ref: '#/components/schemas/ProfileTemplateChoice'
    ProfileVersion:
      type: string
      pattern: ^[A-Za-z0-9-]+$
      minLength: 1
      maxLength: 32
    Question:
      type: string
      enum:
      - UNANSWERED
      - ANSWERED
    QuestionCounts:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Count'
    QuestionDescription:
      type: string
      minLength: 1
      maxLength: 1024
    QuestionDifference:
      type: object
      properties:
        QuestionId:
          $ref: '#/components/schemas/QuestionId'
        QuestionTitle:
          $ref: '#/components/schemas/QuestionTitle'
        DifferenceStatus:
          allOf:
          - $ref: '#/components/schemas/DifferenceStatus'
          description: Indicates the type of change to the question.
      description: A question difference return object.
    QuestionDifferences:
      type: array
      items:
        $ref: '#/components/schemas/QuestionDifference'
    QuestionId:
      type: string
      minLength: 1
      maxLength: 128
    QuestionMetric:
      type: object
      properties:
        QuestionId:
          $ref: '#/components/schemas/QuestionId'
        Risk:
          $ref: '#/components/schemas/Risk'
        BestPractices:
          allOf:
          - $ref: '#/components/schemas/BestPractices'
          description: The best practices, or choices, that have been identified as
            contributing to risk in a question.
      description: A metric for a particular question in the pillar.
    QuestionMetrics:
      type: array
      items:
        $ref: '#/components/schemas/QuestionMetric'
    QuestionPriority:
      type: string
      enum:
      - PRIORITIZED
      - NONE
    QuestionTitle:
      type: string
      minLength: 1
      maxLength: 512
    QuestionType:
      type: string
      enum:
      - PRIORITIZED
      - NON_PRIORITIZED
    QuotaCode:
      type: string
    ReportFormat:
      type: string
      enum:
      - PDF
      - JSON
    ResourceArn:
      type: string
      pattern: ^arn:aws(-us-gov|-iso(-[a-z])?|-cn)?:wellarchitected:[a-z]{2}(-gov|-iso([a-z])?)?-[a-z]+-\d:\d{12}:(review-template)/[a-f0-9]{32}$
      minLength: 50
      maxLength: 250
    ResourceNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
        ResourceId:
          $ref: '#/components/schemas/ExceptionResourceId'
        ResourceType:
          $ref: '#/components/schemas/ExceptionResourceType'
      required:
      - Message
      - ResourceId
      - ResourceType
      description: The requested resource was not found.
    ReviewTemplate:
      type: object
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/TemplateDescription'
          description: The review template description.
        Lenses:
          allOf:
          - $ref: '#/components/schemas/ReviewTemplateLenses'
          description: The lenses applied to the review template.
        Notes:
          $ref: '#/components/schemas/Notes'
        QuestionCounts:
          allOf:
          - $ref: '#/components/schemas/QuestionCounts'
          description: A count of how many total questions are answered and unanswered
            in the review template.
        Owner:
          $ref: '#/components/schemas/AwsAccountId'
        UpdatedAt:
          $ref: '#/components/schemas/Timestamp'
        TemplateArn:
          allOf:
          - $ref: '#/components/schemas/TemplateArn'
          description: The review template ARN.
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/TemplateName'
          description: The name of the review template.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags assigned to the review template.
        UpdateStatus:
          allOf:
          - $ref: '#/components/schemas/ReviewTemplateUpdateStatus'
          description: The latest status of a review template.
        ShareInvitationId:
          allOf:
          - $ref: '#/components/schemas/ShareInvitationId'
          description: The ID assigned to the template share invitation.
      description: A review template.
    ReviewTemplateAnswer:
      type: object
      properties:
        QuestionId:
          $ref: '#/components/schemas/QuestionId'
        PillarId:
          $ref: '#/components/schemas/PillarId'
        QuestionTitle:
          $ref: '#/components/schemas/QuestionTitle'
        QuestionDescription:
          $ref: '#/components/schemas/QuestionDescription'
        ImprovementPlanUrl:
          $ref: '#/components/schemas/ImprovementPlanUrl'
        HelpfulResourceUrl:
          $ref: '#/components/schemas/HelpfulResourceUrl'
        HelpfulResourceDisplayText:
          allOf:
          - $ref: '#/components/schemas/DisplayText'
          description: 'The helpful resource text to be displayed for a custom lens.


            This field does not apply to Amazon Web Services official lenses.'
        Choices:
          $ref: '#/components/schemas/Choices'
        SelectedChoices:
          $ref: '#/components/schemas/SelectedChoices'
        ChoiceAnswers:
          allOf:
          - $ref: '#/components/schemas/ChoiceAnswers'
          description: A list of selected choices to a question in your review template.
        IsApplicable:
          $ref: '#/components/schemas/IsApplicable'
        AnswerStatus:
          allOf:
          - $ref: '#/components/schemas/ReviewTemplateAnswerStatus'
          description: The status of whether or not this question has been answered.
        Notes:
          $ref: '#/components/schemas/Notes'
        Reason:
          allOf:
          - $ref: '#/components/schemas/AnswerReason'
          description: The reason why the question is not applicable to your review
            template.
      description: An answer of the question.
    ReviewTemplateAnswerStatus:
      type: string
      enum:
      - UNANSWERED
      - ANSWERED
    ReviewTemplateAnswerSummaries:
      type: array
      items:
        $ref: '#/components/schemas/ReviewTemplateAnswerSummary'
    ReviewTemplateAnswerSummary:
      type: object
      properties:
        QuestionId:
          $ref: '#/components/schemas/QuestionId'
        PillarId:
          $ref: '#/components/schemas/PillarId'
        QuestionTitle:
          $ref: '#/components/schemas/QuestionTitle'
        Choices:
          $ref: '#/components/schemas/Choices'
        SelectedChoices:
          $ref: '#/components/schemas/SelectedChoices'
        ChoiceAnswerSummaries:
          allOf:
          - $ref: '#/components/schemas/ChoiceAnswerSummaries'
          description: A list of selected choices to a question in the review template.
        IsApplicable:
          $ref: '#/components/schemas/IsApplicable'
        AnswerStatus:
          allOf:
          - $ref: '#/components/schemas/ReviewTemplateAnswerStatus'
          description: The status of whether or not this question has been answered.
        Reason:
          allOf:
          - $ref: '#/components/schemas/AnswerReason'
          description: The reason why a choice is not-applicable to a question in
            the review template.
        QuestionType:
          allOf:
          - $ref: '#/components/schemas/QuestionType'
          description: The type of question.
      description: The summary of review template answers.
    ReviewTemplateArns:
      type: array
      items:
        $ref: '#/components/schemas/TemplateArn'
    ReviewTemplateLensAliases:
      type: array
      items:
        $ref: '#/components/schemas/LensAlias'
    ReviewTemplateLensReview:
      type: object
      properties:
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        LensArn:
          allOf:
          - $ref: '#/components/schemas/LensArn'
          description: The lens ARN.
        LensVersion:
          allOf:
          - $ref: '#/components/schemas/LensVersion'
          description: The version of the lens.
        LensName:
          $ref: '#/components/schemas/LensName'
        LensStatus:
          allOf:
          - $ref: '#/components/schemas/LensStatus'
          description: The status of the lens.
        PillarReviewSummaries:
          allOf:
          - $ref: '#/components/schemas/ReviewTemplatePillarReviewSummaries'
          description: Pillar review summaries of a lens review.
        UpdatedAt:
          $ref: '#/components/schemas/Timestamp'
        Notes:
          $ref: '#/components/schemas/Notes'
        QuestionCounts:
          allOf:
          - $ref: '#/components/schemas/QuestionCounts'
          description: A count of how many questions are answered and unanswered in
            the lens review.
        NextToken:
          $ref: '#/components/schemas/NextToken'
      description: The lens review of a review template.
    ReviewTemplateLenses:
      type: array
      items:
        $ref: '#/components/schemas/LensAlias'
    ReviewTemplatePillarReviewSummaries:
      type: array
      items:
        $ref: '#/components/schemas/ReviewTemplatePillarReviewSummary'
    ReviewTemplatePillarReviewSummary:
      type: object
      properties:
        PillarId:
          $ref: '#/components/schemas/PillarId'
        PillarName:
          $ref: '#/components/schemas/PillarName'
        Notes:
          $ref: '#/components/schemas/Notes'
        QuestionCounts:
          allOf:
          - $ref: '#/components/schemas/QuestionCounts'
          description: A count of how many questions are answered and unanswered in
            the requested pillar of the lens review.
      description: Summary of a review template.
    ReviewTemplateSummary:
      type: object
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/TemplateDescription'
          description: Description of the review template.
        Lenses:
          allOf:
          - $ref: '#/components/schemas/ReviewTemplateLenses'
          description: Lenses associated with the review template.
        Owner:
          $ref: '#/components/schemas/AwsAccountId'
        UpdatedAt:
          $ref: '#/components/schemas/Timestamp'
        TemplateArn:
          allOf:
          - $ref: '#/components/schemas/TemplateArn'
          description: The review template ARN.
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/TemplateName'
          description: The name of the review template.
        UpdateStatus:
          allOf:
          - $ref: '#/components/schemas/ReviewTemplateUpdateStatus'
          description: The latest status of a review template.
      description: Summary of a review template.
    ReviewTemplateUpdateStatus:
      type: string
      enum:
      - CURRENT
      - LENS_NOT_CURRENT
    ReviewTemplates:
      type: array
      items:
        $ref: '#/components/schemas/ReviewTemplateSummary'
    Risk:
      type: string
      enum:
      - UNANSWERED
      - HIGH
      - MEDIUM
      - NONE
      - NOT_APPLICABLE
      description: <p>The risk for a given workload, lens review, pillar, or question.</p>
    RiskCounts:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Count'
      description: <p>A map from risk names to the count of how many questions have
        that rating.</p>
    SelectedChoiceIds:
      type: array
      items:
        $ref: '#/components/schemas/ChoiceId'
    SelectedChoices:
      type: array
      items:
        $ref: '#/components/schemas/ChoiceId'
      description: "<p>List of selected choice IDs in a question answer.</p>\n   \
        \      <p>The values entered replace the previously selected choices.</p>"
    SelectedPillar:
      type: object
      properties:
        PillarId:
          $ref: '#/components/schemas/PillarId'
        SelectedQuestionIds:
          allOf:
          - $ref: '#/components/schemas/SelectedQuestionIds'
          description: Selected question IDs in the selected pillar.
      description: The selected pillar.
    SelectedPillars:
      type: array
      items:
        $ref: '#/components/schemas/SelectedPillar'
    SelectedProfileChoiceIds:
      type: array
      items:
        $ref: '#/components/schemas/ChoiceId'
    SelectedQuestionId:
      type: string
    SelectedQuestionIds:
      type: array
      items:
        $ref: '#/components/schemas/SelectedQuestionId'
    ServiceCode:
      type: string
    ServiceQuotaExceededException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
        ResourceId:
          $ref: '#/components/schemas/ExceptionResourceId'
        ResourceType:
          $ref: '#/components/schemas/ExceptionResourceType'
        QuotaCode:
          $ref: '#/components/schemas/QuotaCode'
        ServiceCode:
          $ref: '#/components/schemas/ServiceCode'
      required:
      - Message
      - QuotaCode
      - ServiceCode
      description: The user has reached their resource quota.
    ShareId:
      type: string
      pattern: ^[0-9a-f]{32}$
    ShareInvitation:
      type: object
      properties:
        ShareInvitationId:
          allOf:
          - $ref: '#/components/schemas/ShareInvitationId'
          description: The ID assigned to the share invitation.
        ShareResourceType:
          allOf:
          - $ref: '#/components/schemas/ShareResourceType'
          description: The resource type of the share invitation.
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        LensArn:
          allOf:
          - $ref: '#/components/schemas/LensArn'
          description: The ARN for the lens.
        ProfileArn:
          allOf:
          - $ref: '#/components/schemas/ProfileArn'
          description: The profile ARN.
        TemplateArn:
          allOf:
          - $ref: '#/components/schemas/TemplateArn'
          description: The review template ARN.
      description: The share invitation.
    ShareInvitationAction:
      type: string
      enum:
      - ACCEPT
      - REJECT
      description: <p>Share invitation action taken by contributor.</p>
    ShareInvitationId:
      type: string
      pattern: ^[0-9a-f]{32}$
    ShareInvitationSummaries:
      type: array
      items:
        $ref: '#/components/schemas/ShareInvitationSummary'
    ShareInvitationSummary:
      type: object
      properties:
        ShareInvitationId:
          allOf:
          - $ref: '#/components/schemas/ShareInvitationId'
          description: The ID assigned to the share invitation.
        SharedBy:
          $ref: '#/components/schemas/AwsAccountId'
        SharedWith:
          $ref: '#/components/schemas/SharedWith'
        PermissionType:
          $ref: '#/components/schemas/PermissionType'
        ShareResourceType:
          allOf:
          - $ref: '#/components/schemas/ShareResourceType'
          description: The resource type of the share invitation.
        WorkloadName:
          $ref: '#/components/schemas/WorkloadName'
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        LensName:
          $ref: '#/components/schemas/LensName'
        LensArn:
          allOf:
          - $ref: '#/components/schemas/LensArn'
          description: The ARN for the lens.
        ProfileName:
          allOf:
          - $ref: '#/components/schemas/ProfileName'
          description: The profile name.
        ProfileArn:
          allOf:
          - $ref: '#/components/schemas/ProfileArn'
          description: The profile ARN.
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/TemplateName'
          description: The name of the review template.
        TemplateArn:
          allOf:
          - $ref: '#/components/schemas/TemplateArn'
          description: The review template ARN.
      description: A share invitation summary return object.
    ShareResourceType:
      type: string
      enum:
      - WORKLOAD
      - LENS
      - PROFILE
      - TEMPLATE
    ShareStatus:
      type: string
      enum:
      - ACCEPTED
      - REJECTED
      - PENDING
      - REVOKED
      - EXPIRED
      - ASSOCIATING
      - ASSOCIATED
      - FAILED
      description: <p>The status of the share request.</p>
    SharedWith:
      type: string
      minLength: 12
      maxLength: 2048
    SharedWithPrefix:
      type: string
      minLength: 0
      maxLength: 100
    StatusMessage:
      type: string
      minLength: 1
      maxLength: 512
    Subdomain:
      type: string
      minLength: 1
      maxLength: 100
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TagResourceInput:
      type: object
      properties:
        WorkloadArn:
          $ref: '#/components/schemas/WorkloadArn'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags for the resource.
      required:
      - WorkloadArn
      - Tags
    TagResourceOutput:
      type: object
      properties: {}
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    TemplateArn:
      type: string
      pattern: ^arn:aws(-us-gov|-iso(-[a-z])?|-cn)?:wellarchitected:[a-z]{2}(-gov|-iso([a-z])?)?-[a-z]+-\d:\d{12}:(review-template)/[a-f0-9]{32}$
      minLength: 50
      maxLength: 250
    TemplateDescription:
      type: string
      pattern: ^[A-Za-z0-9-_.,:/()@!&?#+'’\s]+$
      minLength: 3
      maxLength: 250
    TemplateName:
      type: string
      pattern: ^[A-Za-z0-9-_.,:/()@!&?#+'’\s]+$
      minLength: 3
      maxLength: 100
    TemplateNamePrefix:
      type: string
      pattern: ^[A-Za-z0-9-_.,:/()@!&?#+'’\s]+$
      minLength: 0
      maxLength: 100
    TemplateQuestions:
      type: array
      items:
        $ref: '#/components/schemas/ProfileTemplateQuestion'
    TemplateShareSummaries:
      type: array
      items:
        $ref: '#/components/schemas/TemplateShareSummary'
    TemplateShareSummary:
      type: object
      properties:
        ShareId:
          $ref: '#/components/schemas/ShareId'
        SharedWith:
          $ref: '#/components/schemas/SharedWith'
        Status:
          $ref: '#/components/schemas/ShareStatus'
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          description: Review template share invitation status message.
      description: Summary of a review template share.
    ThrottlingException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
        QuotaCode:
          $ref: '#/components/schemas/QuotaCode'
        ServiceCode:
          $ref: '#/components/schemas/ServiceCode'
      required:
      - Message
      description: Request was denied due to request throttling.
    Timestamp:
      type: string
      format: date-time
      description: <p>The date and time recorded.</p>
    TrustedAdvisorIntegrationStatus:
      type: string
      enum:
      - ENABLED
      - DISABLED
    UntagResourceInput:
      type: object
      properties:
        WorkloadArn:
          $ref: '#/components/schemas/WorkloadArn'
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: A list of tag keys. Existing tags of the resource whose keys
            are members of this list are removed from the resource.
      required:
      - WorkloadArn
      - TagKeys
    UntagResourceOutput:
      type: object
      properties: {}
    UpdateAnswerInput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        QuestionId:
          $ref: '#/components/schemas/QuestionId'
        SelectedChoices:
          $ref: '#/components/schemas/SelectedChoices'
        ChoiceUpdates:
          allOf:
          - $ref: '#/components/schemas/ChoiceUpdates'
          description: A list of choices to update on a question in your workload.
            The String key corresponds to the choice ID to be updated.
        Notes:
          $ref: '#/components/schemas/Notes'
        IsApplicable:
          $ref: '#/components/schemas/IsApplicable'
        Reason:
          allOf:
          - $ref: '#/components/schemas/AnswerReason'
          description: The reason why a question is not applicable to your workload.
      required:
      - WorkloadId
      - LensAlias
      - QuestionId
      description: Input to update answer.
    UpdateAnswerOutput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        LensArn:
          allOf:
          - $ref: '#/components/schemas/LensArn'
          description: The ARN for the lens.
        Answer:
          $ref: '#/components/schemas/Answer'
      description: Output of a update answer call.
    UpdateGlobalSettingsInput:
      type: object
      properties:
        OrganizationSharingStatus:
          allOf:
          - $ref: '#/components/schemas/OrganizationSharingStatus'
          description: The status of organization sharing settings.
        DiscoveryIntegrationStatus:
          allOf:
          - $ref: '#/components/schemas/DiscoveryIntegrationStatus'
          description: The status of discovery support settings.
        JiraConfiguration:
          allOf:
          - $ref: '#/components/schemas/AccountJiraConfigurationInput'
          description: The status of Jira integration settings.
    UpdateIntegrationInput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
        IntegratingService:
          allOf:
          - $ref: '#/components/schemas/IntegratingService'
          description: Which integrated service to update.
      required:
      - WorkloadId
      - ClientRequestToken
      - IntegratingService
    UpdateLensReviewInput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        LensNotes:
          $ref: '#/components/schemas/Notes'
        PillarNotes:
          $ref: '#/components/schemas/PillarNotes'
        JiraConfiguration:
          allOf:
          - $ref: '#/components/schemas/JiraSelectedQuestionConfiguration'
          description: Configuration of the Jira integration.
      required:
      - WorkloadId
      - LensAlias
      description: Input for update lens review.
    UpdateLensReviewOutput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        LensReview:
          $ref: '#/components/schemas/LensReview'
      description: Output of a update lens review call.
    UpdateProfileInput:
      type: object
      properties:
        ProfileArn:
          allOf:
          - $ref: '#/components/schemas/ProfileArn'
          description: The profile ARN.
        ProfileDescription:
          allOf:
          - $ref: '#/components/schemas/ProfileDescription'
          description: The profile description.
        ProfileQuestions:
          allOf:
          - $ref: '#/components/schemas/ProfileQuestionUpdates'
          description: Profile questions.
      required:
      - ProfileArn
    UpdateProfileOutput:
      type: object
      properties:
        Profile:
          allOf:
          - $ref: '#/components/schemas/Profile'
          description: The profile.
    UpdateReviewTemplateAnswerInput:
      type: object
      properties:
        TemplateArn:
          allOf:
          - $ref: '#/components/schemas/TemplateArn'
          description: The review template ARN.
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        QuestionId:
          $ref: '#/components/schemas/QuestionId'
        SelectedChoices:
          $ref: '#/components/schemas/SelectedChoices'
        ChoiceUpdates:
          allOf:
          - $ref: '#/components/schemas/ChoiceUpdates'
          description: A list of choices to be updated.
        Notes:
          $ref: '#/components/schemas/Notes'
        IsApplicable:
          $ref: '#/components/schemas/IsApplicable'
        Reason:
          allOf:
          - $ref: '#/components/schemas/AnswerReason'
          description: The update reason.
      required:
      - TemplateArn
      - LensAlias
      - QuestionId
    UpdateReviewTemplateAnswerOutput:
      type: object
      properties:
        TemplateArn:
          allOf:
          - $ref: '#/components/schemas/TemplateArn'
          description: The review template ARN.
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        Answer:
          allOf:
          - $ref: '#/components/schemas/ReviewTemplateAnswer'
          description: An answer of the question.
    UpdateReviewTemplateInput:
      type: object
      properties:
        TemplateArn:
          allOf:
          - $ref: '#/components/schemas/TemplateArn'
          description: The review template ARN.
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/TemplateName'
          description: The review template name.
        Description:
          allOf:
          - $ref: '#/components/schemas/TemplateDescription'
          description: The review template description.
        Notes:
          $ref: '#/components/schemas/Notes'
        LensesToAssociate:
          allOf:
          - $ref: '#/components/schemas/ReviewTemplateLensAliases'
          description: A list of lens aliases or ARNs to apply to the review template.
        LensesToDisassociate:
          allOf:
          - $ref: '#/components/schemas/ReviewTemplateLensAliases'
          description: A list of lens aliases or ARNs to unapply to the review template.
            The `wellarchitected` lens cannot be unapplied.
      required:
      - TemplateArn
    UpdateReviewTemplateLensReviewInput:
      type: object
      properties:
        TemplateArn:
          allOf:
          - $ref: '#/components/schemas/TemplateArn'
          description: The review template ARN.
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        LensNotes:
          $ref: '#/components/schemas/Notes'
        PillarNotes:
          $ref: '#/components/schemas/PillarNotes'
      required:
      - TemplateArn
      - LensAlias
    UpdateReviewTemplateLensReviewOutput:
      type: object
      properties:
        TemplateArn:
          allOf:
          - $ref: '#/components/schemas/TemplateArn'
          description: The review template ARN.
        LensReview:
          allOf:
          - $ref: '#/components/schemas/ReviewTemplateLensReview'
          description: A lens review of a question.
    UpdateReviewTemplateOutput:
      type: object
      properties:
        ReviewTemplate:
          allOf:
          - $ref: '#/components/schemas/ReviewTemplate'
          description: A review template.
    UpdateShareInvitationInput:
      type: object
      properties:
        ShareInvitationId:
          allOf:
          - $ref: '#/components/schemas/ShareInvitationId'
          description: The ID assigned to the share invitation.
        ShareInvitationAction:
          $ref: '#/components/schemas/ShareInvitationAction'
      required:
      - ShareInvitationId
      - ShareInvitationAction
      description: Input for Update Share Invitation
    UpdateShareInvitationOutput:
      type: object
      properties:
        ShareInvitation:
          allOf:
          - $ref: '#/components/schemas/ShareInvitation'
          description: The updated workload or custom lens share invitation.
    UpdateWorkloadInput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        WorkloadName:
          $ref: '#/components/schemas/WorkloadName'
        Description:
          $ref: '#/components/schemas/WorkloadDescription'
        Environment:
          $ref: '#/components/schemas/WorkloadEnvironment'
        AccountIds:
          $ref: '#/components/schemas/WorkloadAccountIds'
        AwsRegions:
          $ref: '#/components/schemas/WorkloadAwsRegions'
        NonAwsRegions:
          $ref: '#/components/schemas/WorkloadNonAwsRegions'
        PillarPriorities:
          $ref: '#/components/schemas/WorkloadPillarPriorities'
        ArchitecturalDesign:
          $ref: '#/components/schemas/WorkloadArchitecturalDesign'
        ReviewOwner:
          $ref: '#/components/schemas/WorkloadReviewOwner'
        IsReviewOwnerUpdateAcknowledged:
          allOf:
          - $ref: '#/components/schemas/IsReviewOwnerUpdateAcknowledged'
          description: 'Flag indicating whether the workload owner has acknowledged
            that the _Review owner_ field is required.


            If a **Review owner** is not added to the workload within 60 days of acknowledgement,
            access to the workload is restricted until an owner is added.'
        IndustryType:
          $ref: '#/components/schemas/WorkloadIndustryType'
        Industry:
          $ref: '#/components/schemas/WorkloadIndustry'
        Notes:
          $ref: '#/components/schemas/Notes'
        ImprovementStatus:
          $ref: '#/components/schemas/WorkloadImprovementStatus'
        DiscoveryConfig:
          allOf:
          - $ref: '#/components/schemas/WorkloadDiscoveryConfig'
          description: Well-Architected discovery configuration settings to associate
            to the workload.
        Applications:
          allOf:
          - $ref: '#/components/schemas/WorkloadApplications'
          description: List of AppRegistry application ARNs to associate to the workload.
        JiraConfiguration:
          allOf:
          - $ref: '#/components/schemas/WorkloadJiraConfigurationInput'
          description: Configuration of the Jira integration.
      required:
      - WorkloadId
      description: Input to update a workload.
    UpdateWorkloadOutput:
      type: object
      properties:
        Workload:
          $ref: '#/components/schemas/Workload'
      description: Output of an update workload call.
    UpdateWorkloadShareInput:
      type: object
      properties:
        ShareId:
          $ref: '#/components/schemas/ShareId'
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        PermissionType:
          $ref: '#/components/schemas/PermissionType'
      required:
      - ShareId
      - WorkloadId
      - PermissionType
      description: Input for Update Workload Share
    UpdateWorkloadShareOutput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        WorkloadShare:
          $ref: '#/components/schemas/WorkloadShare'
      description: Input for Update Workload Share
    UpgradeLensReviewInput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        MilestoneName:
          $ref: '#/components/schemas/MilestoneName'
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
      required:
      - WorkloadId
      - LensAlias
      - MilestoneName
    UpgradeProfileVersionInput:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        ProfileArn:
          allOf:
          - $ref: '#/components/schemas/ProfileArn'
          description: The profile ARN.
        MilestoneName:
          $ref: '#/components/schemas/MilestoneName'
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
      required:
      - WorkloadId
      - ProfileArn
    UpgradeReviewTemplateLensReviewInput:
      type: object
      properties:
        TemplateArn:
          allOf:
          - $ref: '#/components/schemas/TemplateArn'
          description: The ARN of the review template.
        LensAlias:
          $ref: '#/components/schemas/LensAlias'
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
      required:
      - TemplateArn
      - LensAlias
    Urls:
      type: array
      items:
        $ref: '#/components/schemas/ChoiceContent'
    ValidationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
        Reason:
          $ref: '#/components/schemas/ValidationExceptionReason'
        Fields:
          $ref: '#/components/schemas/ValidationExceptionFieldList'
      required:
      - Message
      description: The user input is not valid.
    ValidationExceptionField:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/ValidationExceptionFieldName'
        Message:
          $ref: '#/components/schemas/ExceptionMessage'
      required:
      - Name
      - Message
      description: Stores information about a field passed inside a request that resulted
        in an exception.
    ValidationExceptionFieldList:
      type: array
      items:
        $ref: '#/components/schemas/ValidationExceptionField'
      description: <p>The fields that caused the error, if applicable.</p>
    ValidationExceptionFieldName:
      type: string
    ValidationExceptionReason:
      type: string
      enum:
      - UNKNOWN_OPERATION
      - CANNOT_PARSE
      - FIELD_VALIDATION_FAILED
      - OTHER
      description: <p>The reason why the request failed validation.</p>
    VersionDifferences:
      type: object
      properties:
        PillarDifferences:
          allOf:
          - $ref: '#/components/schemas/PillarDifferences'
          description: The differences between the base and latest versions of the
            lens.
      description: The differences between the base and latest versions of the lens.
    Workload:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        WorkloadArn:
          $ref: '#/components/schemas/WorkloadArn'
        WorkloadName:
          $ref: '#/components/schemas/WorkloadName'
        Description:
          $ref: '#/components/schemas/WorkloadDescription'
        Environment:
          $ref: '#/components/schemas/WorkloadEnvironment'
        UpdatedAt:
          $ref: '#/components/schemas/Timestamp'
        AccountIds:
          $ref: '#/components/schemas/WorkloadAccountIds'
        AwsRegions:
          $ref: '#/components/schemas/WorkloadAwsRegions'
        NonAwsRegions:
          $ref: '#/components/schemas/WorkloadNonAwsRegions'
        ArchitecturalDesign:
          $ref: '#/components/schemas/WorkloadArchitecturalDesign'
        ReviewOwner:
          $ref: '#/components/schemas/WorkloadReviewOwner'
        ReviewRestrictionDate:
          $ref: '#/components/schemas/Timestamp'
        IsReviewOwnerUpdateAcknowledged:
          allOf:
          - $ref: '#/components/schemas/IsReviewOwnerUpdateAcknowledged'
          description: 'Flag indicating whether the workload owner has acknowledged
            that the _Review owner_ field is required.


            If a **Review owner** is not added to the workload within 60 days of acknowledgement,
            access to the workload is restricted until an owner is added.'
        IndustryType:
          $ref: '#/components/schemas/WorkloadIndustryType'
        Industry:
          $ref: '#/components/schemas/WorkloadIndustry'
        Notes:
          $ref: '#/components/schemas/Notes'
        ImprovementStatus:
          $ref: '#/components/schemas/WorkloadImprovementStatus'
        RiskCounts:
          $ref: '#/components/schemas/RiskCounts'
        PillarPriorities:
          $ref: '#/components/schemas/WorkloadPillarPriorities'
        Lenses:
          $ref: '#/components/schemas/WorkloadLenses'
        Owner:
          $ref: '#/components/schemas/AwsAccountId'
        ShareInvitationId:
          allOf:
          - $ref: '#/components/schemas/ShareInvitationId'
          description: The ID assigned to the share invitation.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags associated with the workload.
        DiscoveryConfig:
          allOf:
          - $ref: '#/components/schemas/WorkloadDiscoveryConfig'
          description: Discovery configuration associated to the workload.
        Applications:
          allOf:
          - $ref: '#/components/schemas/WorkloadApplications'
          description: List of AppRegistry application ARNs associated to the workload.
        Profiles:
          allOf:
          - $ref: '#/components/schemas/WorkloadProfiles'
          description: Profile associated with a workload.
        PrioritizedRiskCounts:
          $ref: '#/components/schemas/RiskCounts'
        JiraConfiguration:
          allOf:
          - $ref: '#/components/schemas/WorkloadJiraConfigurationOutput'
          description: Jira configuration for a specific workload.
      description: A workload return object.
    WorkloadAccountIds:
      type: array
      items:
        $ref: '#/components/schemas/AwsAccountId'
      description: <p>The list of Amazon Web Services account IDs associated with
        the workload.</p>
    WorkloadApplications:
      type: array
      items:
        $ref: '#/components/schemas/ApplicationArn'
    WorkloadArchitecturalDesign:
      type: string
      pattern: ^(|(https?|ftp):\/\/[^\s/$.?#].[^\s]*)$
      minLength: 0
      maxLength: 2048
    WorkloadArn:
      type: string
    WorkloadAwsRegions:
      type: array
      items:
        $ref: '#/components/schemas/AwsRegion'
      description: "<p>The list of Amazon Web Services Regions associated with the\
        \ workload, for example,\n                <code>us-east-2</code>, or <code>ca-central-1</code>.</p>"
    WorkloadDescription:
      type: string
      minLength: 3
      maxLength: 250
    WorkloadDiscoveryConfig:
      type: object
      properties:
        TrustedAdvisorIntegrationStatus:
          allOf:
          - $ref: '#/components/schemas/TrustedAdvisorIntegrationStatus'
          description: Discovery integration status in respect to Trusted Advisor
            for the workload.
        WorkloadResourceDefinition:
          allOf:
          - $ref: '#/components/schemas/WorkloadResourceDefinition'
          description: 'The mode to use for identifying resources associated with
            the workload.


            You can specify `WORKLOAD_METADATA`, `APP_REGISTRY`, or both.'
      description: Discovery configuration associated to the workload.
    WorkloadEnvironment:
      type: string
      enum:
      - PRODUCTION
      - PREPRODUCTION
      description: <p>The environment for the workload.</p>
    WorkloadId:
      type: string
      pattern: ^[0-9a-f]{32}$
      minLength: 32
      maxLength: 32
    WorkloadImprovementStatus:
      type: string
      enum:
      - NOT_APPLICABLE
      - NOT_STARTED
      - IN_PROGRESS
      - COMPLETE
      - RISK_ACKNOWLEDGED
      description: <p>The improvement status for a workload.</p>
    WorkloadIndustry:
      type: string
      minLength: 0
      maxLength: 100
    WorkloadIndustryType:
      type: string
      minLength: 0
      maxLength: 100
    WorkloadIssueManagementStatus:
      type: string
      enum:
      - ENABLED
      - DISABLED
      - INHERIT
    WorkloadJiraConfigurationInput:
      type: object
      properties:
        IssueManagementStatus:
          allOf:
          - $ref: '#/components/schemas/WorkloadIssueManagementStatus'
          description: 'Workload-level: Jira issue management status.'
        IssueManagementType:
          allOf:
          - $ref: '#/components/schemas/IssueManagementType'
          description: 'Workload-level: Jira issue management type.'
        JiraProjectKey:
          allOf:
          - $ref: '#/components/schemas/JiraProjectKey'
          description: 'Workload-level: Jira project key to sync workloads to.'
      description: 'Workload-level: Input for the Jira configuration.'
    WorkloadJiraConfigurationOutput:
      type: object
      properties:
        IssueManagementStatus:
          allOf:
          - $ref: '#/components/schemas/WorkloadIssueManagementStatus'
          description: 'Workload-level: Jira issue management status.'
        IssueManagementType:
          allOf:
          - $ref: '#/components/schemas/IssueManagementType'
          description: 'Workload-level: Jira issue management type.'
        JiraProjectKey:
          allOf:
          - $ref: '#/components/schemas/JiraProjectKey'
          description: 'Workload-level: Jira project key to sync workloads to.'
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          description: 'Workload-level: Status message on configuration of the Jira
            integration.'
      description: 'Workload-level: Output configuration of the Jira integration.'
    WorkloadLenses:
      type: array
      items:
        $ref: '#/components/schemas/LensAlias'
      description: "<p>The list of lenses associated with the workload. Each lens\
        \ is identified by its <a>LensSummary$LensAlias</a>.</p>\n         <p>If a\
        \ review template that specifies lenses is applied to the workload, those\
        \ lenses are applied\n        to the workload in addition to these lenses.</p>"
    WorkloadName:
      type: string
      minLength: 3
      maxLength: 100
    WorkloadNamePrefix:
      type: string
      minLength: 0
      maxLength: 100
    WorkloadNonAwsRegion:
      type: string
      minLength: 3
      maxLength: 25
    WorkloadNonAwsRegions:
      type: array
      items:
        $ref: '#/components/schemas/WorkloadNonAwsRegion'
      description: <p> The list of non-Amazon Web Services Regions associated with
        the workload.</p>
    WorkloadPillarPriorities:
      type: array
      items:
        $ref: '#/components/schemas/PillarId'
      description: "<p>The priorities of the pillars, which are used to order items\
        \ in the improvement plan.\n            Each pillar is represented by its\
        \ <a>PillarReviewSummary$PillarId</a>.</p>"
    WorkloadProfile:
      type: object
      properties:
        ProfileArn:
          allOf:
          - $ref: '#/components/schemas/ProfileArn'
          description: The profile ARN.
        ProfileVersion:
          allOf:
          - $ref: '#/components/schemas/ProfileVersion'
          description: The profile version.
      description: The profile associated with a workload.
    WorkloadProfileArns:
      type: array
      items:
        $ref: '#/components/schemas/ProfileArn'
    WorkloadProfiles:
      type: array
      items:
        $ref: '#/components/schemas/WorkloadProfile'
    WorkloadResourceDefinition:
      type: array
      items:
        $ref: '#/components/schemas/DefinitionType'
    WorkloadReviewOwner:
      type: string
      minLength: 3
      maxLength: 255
    WorkloadShare:
      type: object
      properties:
        ShareId:
          $ref: '#/components/schemas/ShareId'
        SharedBy:
          $ref: '#/components/schemas/AwsAccountId'
        SharedWith:
          $ref: '#/components/schemas/SharedWith'
        PermissionType:
          $ref: '#/components/schemas/PermissionType'
        Status:
          $ref: '#/components/schemas/ShareStatus'
        WorkloadName:
          $ref: '#/components/schemas/WorkloadName'
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
      description: A workload share return object.
    WorkloadShareSummaries:
      type: array
      items:
        $ref: '#/components/schemas/WorkloadShareSummary'
      description: <p>A list of workload share summaries.</p>
    WorkloadShareSummary:
      type: object
      properties:
        ShareId:
          $ref: '#/components/schemas/ShareId'
        SharedWith:
          $ref: '#/components/schemas/SharedWith'
        PermissionType:
          $ref: '#/components/schemas/PermissionType'
        Status:
          $ref: '#/components/schemas/ShareStatus'
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          description: Optional message to compliment the Status field.
      description: A workload share summary return object.
    WorkloadSummaries:
      type: array
      items:
        $ref: '#/components/schemas/WorkloadSummary'
      description: <p>A list of workload summaries.</p>
    WorkloadSummary:
      type: object
      properties:
        WorkloadId:
          $ref: '#/components/schemas/WorkloadId'
        WorkloadArn:
          $ref: '#/components/schemas/WorkloadArn'
        WorkloadName:
          $ref: '#/components/schemas/WorkloadName'
        Owner:
          $ref: '#/components/schemas/AwsAccountId'
        UpdatedAt:
          $ref: '#/components/schemas/Timestamp'
        Lenses:
          $ref: '#/components/schemas/WorkloadLenses'
        RiskCounts:
          $ref: '#/components/schemas/RiskCounts'
        ImprovementStatus:
          $ref: '#/components/schemas/WorkloadImprovementStatus'
        Profiles:
          allOf:
          - $ref: '#/components/schemas/WorkloadProfiles'
          description: Profile associated with a workload.
        PrioritizedRiskCounts:
          $ref: '#/components/schemas/RiskCounts'
      description: A workload summary return object.
