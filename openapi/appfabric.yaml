openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: appfabric
  x-aws-serviceName: appfabric
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-05'
  version: '2023-05-19'
  title: AppFabric
  description: |-
    Amazon Web Services AppFabric quickly connects software as a service (SaaS) applications across your organization. This allows IT and security teams to easily manage and secure applications using a standard schema, and employees can complete everyday tasks faster using generative artificial intelligence (AI). You can use these APIs to complete AppFabric tasks, such as setting up audit log ingestions or viewing user access. For more information about AppFabric, including the required permissions to use the service, see the [Amazon Web Services AppFabric Administration Guide](https://docs.aws.amazon.com/appfabric/latest/adminguide/). For more information about using the Command Line Interface (CLI) to manage your AppFabric resources, see the [AppFabric section of the CLI Reference](https://docs.aws.amazon.com/cli/latest/reference/appfabric/index.html).
servers:
- description: The AppFabric regional endpoint
  url: https://appfabric.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths: {}
components:
  schemas:
    AppAuthorizationStatus:
      type: string
      enum:
      - PendingConnect
      - Connected
      - ConnectionValidationFailed
      - TokenAutoRotationFailed
    AppAuthorizationSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/AppAuthorizationSummary'
    AppBundleSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/AppBundleSummary'
    Arn:
      type: string
      pattern: ^arn:.+$
      minLength: 1
      maxLength: 1011
    AuthType:
      type: string
      enum:
      - oauth2
      - apiKey
    Credential:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/Oauth2Credential'
        description: |-
          Contains OAuth2 client credential information.
      - allOf:
        - $ref: '#/components/schemas/ApiKeyCredential'
        description: |-
          Contains API key credential information.
      description: |-
        Contains credential information for an application.
    DateTime:
      type: string
      format: date-time
    Destination:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/S3Bucket'
        description: |-
          Contains information about an Amazon S3 bucket.
      - allOf:
        - $ref: '#/components/schemas/FirehoseStream'
        description: |-
          Contains information about an Amazon Kinesis Data Firehose delivery stream.
      description: |-
        Contains information about an audit log destination.
    DestinationConfiguration:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/AuditLogDestinationConfiguration'
        description: |-
          Contains information about an audit log destination configuration.
      description: |-
        Contains information about the destination of ingested data.
    Email:
      type: string
      pattern: ^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$
      maxLength: 320
    Format:
      type: string
      enum:
      - json
      - parquet
    Identifier:
      type: string
      pattern: ^arn:.+$|^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
      minLength: 1
      maxLength: 1011
    IngestionDestinationList:
      type: array
      items:
        $ref: '#/components/schemas/IngestionDestinationSummary'
    IngestionDestinationStatus:
      type: string
      enum:
      - Active
      - Failed
    IngestionList:
      type: array
      items:
        $ref: '#/components/schemas/IngestionSummary'
    IngestionState:
      type: string
      enum:
      - enabled
      - disabled
    IngestionType:
      type: string
      enum:
      - auditLog
    Integer:
      type: integer
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    Persona:
      type: string
      enum:
      - admin
      - endUser
    ProcessingConfiguration:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/AuditLogProcessingConfiguration'
        description: |-
          Contains information about an audit log processing configuration.
      description: |-
        Contains information about how ingested data is processed.
    RedirectUri:
      type: string
      pattern: ^https://[-a-zA-Z0-9-._~:/?#@!$&'()*+,;=]+$
      maxLength: 1024
    ResultStatus:
      type: string
      enum:
      - IN_PROGRESS
      - COMPLETED
      - FAILED
      - EXPIRED
    Schema:
      type: string
      enum:
      - ocsf
      - raw
    SensitiveString2048:
      type: string
      minLength: 1
      maxLength: 2048
    String120:
      type: string
      minLength: 1
      maxLength: 120
    String2048:
      type: string
      minLength: 1
      maxLength: 2048
    String255:
      type: string
      minLength: 1
      maxLength: 255
    String63:
      type: string
      minLength: 3
      maxLength: 63
    String64:
      type: string
      minLength: 3
      maxLength: 64
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    TaskIdList:
      type: array
      items:
        $ref: '#/components/schemas/UUID'
    TenantIdentifier:
      type: string
      minLength: 1
      maxLength: 1024
    UUID:
      type: string
      pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
    UserAccessResultsList:
      type: array
      items:
        $ref: '#/components/schemas/UserAccessResultItem'
    UserAccessTasksList:
      type: array
      items:
        $ref: '#/components/schemas/UserAccessTaskItem'
    ValidationExceptionFieldList:
      type: array
      items:
        $ref: '#/components/schemas/ValidationExceptionField'
    ValidationExceptionReason:
      type: string
      enum:
      - unknownOperation
      - cannotParse
      - fieldValidationFailed
      - other
