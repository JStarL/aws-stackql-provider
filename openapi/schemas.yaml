openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: schemas
  x-aws-serviceName: schemas
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2019-12-02'
  title: Schemas
  description: |-
    Amazon EventBridge Schema Registry
servers:
- description: The Schemas regional endpoint
  url: https://schemas.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /v1/discoverers:
    post:
      operationId: CreateDiscoverer
      description: |-
        Creates a discoverer.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  $ref: '#/components/schemas/__stringMin0Max256'
                SourceArn:
                  $ref: '#/components/schemas/__stringMin20Max1600'
                CrossAccount:
                  $ref: '#/components/schemas/__boolean'
                Tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '201': {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: ListDiscoverers
      description: |-
        List the discoverers.
      parameters:
      - name: discovererIdPrefix
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: limit
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__integer'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: sourceArnPrefix
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/registries/name/{RegistryName}:
    post:
      operationId: CreateRegistry
      description: |-
        Creates a registry.
      parameters:
      - name: RegistryName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  $ref: '#/components/schemas/__stringMin0Max256'
                Tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '201': {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    delete:
      operationId: DeleteRegistry
      description: |-
        Deletes a Registry.
      parameters:
      - name: RegistryName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '204': {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: DescribeRegistry
      description: |-
        Describes the registry.
      parameters:
      - name: RegistryName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    put:
      operationId: UpdateRegistry
      description: |-
        Updates a registry.
      parameters:
      - name: RegistryName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  $ref: '#/components/schemas/__stringMin0Max256'
      responses:
        '200': {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/registries/name/{RegistryName}/schemas/name/{SchemaName}:
    post:
      operationId: CreateSchema
      description: |-
        Creates a schema definition.

        Inactive schemas will be deleted after two years.
      parameters:
      - name: RegistryName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: SchemaName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Content:
                  $ref: '#/components/schemas/__stringMin1Max100000'
                Description:
                  $ref: '#/components/schemas/__stringMin0Max256'
                Tags:
                  $ref: '#/components/schemas/Tags'
                Type:
                  $ref: '#/components/schemas/Type'
      responses:
        '201': {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    delete:
      operationId: DeleteSchema
      description: |-
        Delete a schema definition.
      parameters:
      - name: RegistryName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: SchemaName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '204': {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: DescribeSchema
      description: |-
        Retrieve the schema definition.
      parameters:
      - name: RegistryName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: SchemaName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: schemaVersion
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    put:
      operationId: UpdateSchema
      description: |-
        Updates the schema definition

        Inactive schemas will be deleted after two years.
      parameters:
      - name: RegistryName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: SchemaName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ClientTokenId:
                  $ref: '#/components/schemas/__stringMin0Max36'
                Content:
                  $ref: '#/components/schemas/__stringMin1Max100000'
                Description:
                  $ref: '#/components/schemas/__stringMin0Max256'
                Type:
                  $ref: '#/components/schemas/Type'
      responses:
        '200': {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /v1/discoverers/id/{DiscovererId}:
    delete:
      operationId: DeleteDiscoverer
      description: |-
        Deletes a discoverer.
      parameters:
      - name: DiscovererId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '204': {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: DescribeDiscoverer
      description: |-
        Describes the discoverer.
      parameters:
      - name: DiscovererId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    put:
      operationId: UpdateDiscoverer
      description: |-
        Updates the discoverer
      parameters:
      - name: DiscovererId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  $ref: '#/components/schemas/__stringMin0Max256'
                CrossAccount:
                  $ref: '#/components/schemas/__boolean'
      responses:
        '200': {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/policy:
    delete:
      operationId: DeleteResourcePolicy
      description: |-
        Delete the resource-based policy attached to the specified registry.
      parameters:
      - name: registryName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '204': {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: GetResourcePolicy
      description: |-
        Retrieves the resource-based policy attached to a given registry.
      parameters:
      - name: registryName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    put:
      operationId: PutResourcePolicy
      description: |-
        The name of the policy.
      parameters:
      - name: registryName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Policy:
                  $ref: '#/components/schemas/SynthesizedJson__string'
                RevisionId:
                  $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '412':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailedException'
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/registries/name/{RegistryName}/schemas/name/{SchemaName}/version/{SchemaVersion}:
    delete:
      operationId: DeleteSchemaVersion
      description: |-
        Delete the schema version definition
      parameters:
      - name: RegistryName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: SchemaName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: SchemaVersion
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '204': {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/registries/name/{RegistryName}/schemas/name/{SchemaName}/language/{Language}:
    get:
      operationId: DescribeCodeBinding
      description: |-
        Describe the code binding URI.
      parameters:
      - name: Language
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: RegistryName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: SchemaName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: schemaVersion
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    post:
      operationId: PutCodeBinding
      description: |-
        Put code binding URI
      parameters:
      - name: Language
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: RegistryName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: SchemaName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: schemaVersion
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '202': {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '410':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoneException'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/registries/name/{RegistryName}/schemas/name/{SchemaName}/export:
    get:
      operationId: ExportSchema
      parameters:
      - name: RegistryName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: SchemaName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: schemaVersion
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: type
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/registries/name/{RegistryName}/schemas/name/{SchemaName}/language/{Language}/source:
    get:
      operationId: GetCodeBindingSource
      description: |-
        Get the code binding source URI.
      parameters:
      - name: Language
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: RegistryName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: SchemaName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: schemaVersion
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/discover:
    post:
      operationId: GetDiscoveredSchema
      description: |-
        Get the discovered schema that was generated based on sampled events.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Events:
                  $ref: '#/components/schemas/__listOfGetDiscoveredSchemaVersionItemInput'
                Type:
                  $ref: '#/components/schemas/Type'
      responses:
        '200': {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/registries:
    get:
      operationId: ListRegistries
      description: |-
        List the registries.
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__integer'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: registryNamePrefix
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: scope
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/registries/name/{RegistryName}/schemas/name/{SchemaName}/versions:
    get:
      operationId: ListSchemaVersions
      description: |-
        Provides a list of the schema versions and related information.
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__integer'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: RegistryName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: SchemaName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/registries/name/{RegistryName}/schemas:
    get:
      operationId: ListSchemas
      description: |-
        List the schemas.
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__integer'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: RegistryName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: schemaNamePrefix
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /tags/{ResourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Get tags for resource.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
    post:
      operationId: TagResource
      description: |-
        Add tags to a resource.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '204': {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
    delete:
      operationId: UntagResource
      description: |-
        Removes tags from a resource.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/__listOf__string'
      responses:
        '204': {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
  /v1/registries/name/{RegistryName}/schemas/search:
    get:
      operationId: SearchSchemas
      description: |-
        Search the schemas
      parameters:
      - name: keywords
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: limit
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__integer'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: RegistryName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/discoverers/id/{DiscovererId}/start:
    post:
      operationId: StartDiscoverer
      description: |-
        Starts the discoverer
      parameters:
      - name: DiscovererId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/discoverers/id/{DiscovererId}/stop:
    post:
      operationId: StopDiscoverer
      description: |-
        Stops the discoverer
      parameters:
      - name: DiscovererId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
components:
  schemas:
    BadRequestException:
      type: object
      properties:
        Code:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The error code.
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The message string of the error output.
      required:
      - Code
      - Message
    Body:
      type: string
      format: byte
    CodeGenerationStatus:
      type: string
      enum:
      - CREATE_IN_PROGRESS
      - CREATE_COMPLETE
      - CREATE_FAILED
    ConflictException:
      type: object
      properties:
        Code:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The error code.
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The message string of the error output.
      required:
      - Code
      - Message
    CreateDiscovererRequest:
      type: object
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max256'
          description: A description for the discoverer.
        SourceArn:
          allOf:
          - $ref: '#/components/schemas/__stringMin20Max1600'
          description: The ARN of the event bus.
        CrossAccount:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: 'Support discovery of schemas in events sent to the bus from
            another account. (default: true).'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: Tags associated with the resource.
      required:
      - SourceArn
    CreateDiscovererResponse:
      type: object
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The description of the discoverer.
        DiscovererArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the discoverer.
        DiscovererId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the discoverer.
        SourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the event bus.
        State:
          allOf:
          - $ref: '#/components/schemas/DiscovererState'
          description: The state of the discoverer.
        CrossAccount:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: The Status if the discoverer will discover schemas from events
            sent from another account.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: Tags associated with the resource.
    CreateRegistryRequest:
      type: object
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max256'
          description: A description of the registry to be created.
        RegistryName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the registry.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: Tags to associate with the registry.
      required:
      - RegistryName
    CreateRegistryResponse:
      type: object
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The description of the registry.
        RegistryArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the registry.
        RegistryName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the registry.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: Tags associated with the registry.
    CreateSchemaRequest:
      type: object
      properties:
        Content:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max100000'
          description: The source of the schema definition.
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max256'
          description: A description of the schema.
        RegistryName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the registry.
        SchemaName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the schema.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: Tags associated with the schema.
        Type:
          allOf:
          - $ref: '#/components/schemas/Type'
          description: The type of schema.
      required:
      - Content
      - RegistryName
      - SchemaName
      - Type
    CreateSchemaResponse:
      type: object
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The description of the schema.
        LastModified:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The date and time that schema was modified.
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the schema.
        SchemaName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the schema.
        SchemaVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The version number of the schema
        Tags:
          $ref: '#/components/schemas/Tags'
        Type:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The type of the schema.
        VersionCreatedDate:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The date the schema version was created.
    DeleteDiscovererRequest:
      type: object
      properties:
        DiscovererId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the discoverer.
      required:
      - DiscovererId
    DeleteRegistryRequest:
      type: object
      properties:
        RegistryName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the registry.
      required:
      - RegistryName
    DeleteResourcePolicyRequest:
      type: object
      properties:
        RegistryName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the registry.
    DeleteSchemaRequest:
      type: object
      properties:
        RegistryName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the registry.
        SchemaName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the schema.
      required:
      - RegistryName
      - SchemaName
    DeleteSchemaVersionRequest:
      type: object
      properties:
        RegistryName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the registry.
        SchemaName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the schema.
        SchemaVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The version number of the schema
      required:
      - RegistryName
      - SchemaName
      - SchemaVersion
    DescribeCodeBindingRequest:
      type: object
      properties:
        Language:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The language of the code binding.
        RegistryName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the registry.
        SchemaName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the schema.
        SchemaVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Specifying this limits the results to only this schema version.
      required:
      - Language
      - RegistryName
      - SchemaName
    DescribeCodeBindingResponse:
      type: object
      properties:
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The time and date that the code binding was created.
        LastModified:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The date and time that code bindings were modified.
        SchemaVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The version number of the schema.
        Status:
          allOf:
          - $ref: '#/components/schemas/CodeGenerationStatus'
          description: The current status of code binding generation.
    DescribeDiscovererRequest:
      type: object
      properties:
        DiscovererId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the discoverer.
      required:
      - DiscovererId
    DescribeDiscovererResponse:
      type: object
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The description of the discoverer.
        DiscovererArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the discoverer.
        DiscovererId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the discoverer.
        SourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the event bus.
        State:
          allOf:
          - $ref: '#/components/schemas/DiscovererState'
          description: The state of the discoverer.
        CrossAccount:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: The Status if the discoverer will discover schemas from events
            sent from another account.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: Tags associated with the resource.
    DescribeRegistryRequest:
      type: object
      properties:
        RegistryName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the registry.
      required:
      - RegistryName
    DescribeRegistryResponse:
      type: object
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The description of the registry.
        RegistryArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the registry.
        RegistryName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the registry.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: Tags associated with the registry.
    DescribeSchemaRequest:
      type: object
      properties:
        RegistryName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the registry.
        SchemaName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the schema.
        SchemaVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Specifying this limits the results to only this schema version.
      required:
      - RegistryName
      - SchemaName
    DescribeSchemaResponse:
      type: object
      properties:
        Content:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The source of the schema definition.
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The description of the schema.
        LastModified:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The date and time that schema was modified.
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the schema.
        SchemaName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the schema.
        SchemaVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The version number of the schema
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: Tags associated with the resource.
        Type:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The type of the schema.
        VersionCreatedDate:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The date the schema version was created.
    DiscovererState:
      type: string
      enum:
      - STARTED
      - STOPPED
    DiscovererSummary:
      type: object
      properties:
        DiscovererArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the discoverer.
        DiscovererId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the discoverer.
        SourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the event bus.
        State:
          allOf:
          - $ref: '#/components/schemas/DiscovererState'
          description: The state of the discoverer.
        CrossAccount:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: The Status if the discoverer will discover schemas from events
            sent from another account.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: Tags associated with the resource.
    ExportSchemaRequest:
      type: object
      properties:
        RegistryName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the registry.
        SchemaName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the schema.
        SchemaVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Specifying this limits the results to only this schema version.
        Type:
          $ref: '#/components/schemas/__string'
      required:
      - RegistryName
      - SchemaName
      - Type
    ExportSchemaResponse:
      type: object
      properties:
        Content:
          $ref: '#/components/schemas/__string'
        SchemaArn:
          $ref: '#/components/schemas/__string'
        SchemaName:
          $ref: '#/components/schemas/__string'
        SchemaVersion:
          $ref: '#/components/schemas/__string'
        Type:
          $ref: '#/components/schemas/__string'
    ForbiddenException:
      type: object
      properties:
        Code:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The error code.
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The message string of the error output.
      required:
      - Code
      - Message
    GetCodeBindingSourceRequest:
      type: object
      properties:
        Language:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The language of the code binding.
        RegistryName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the registry.
        SchemaName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the schema.
        SchemaVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Specifying this limits the results to only this schema version.
      required:
      - Language
      - RegistryName
      - SchemaName
    GetCodeBindingSourceResponse:
      type: object
      properties:
        Body:
          $ref: '#/components/schemas/Body'
    GetDiscoveredSchemaRequest:
      type: object
      properties:
        Events:
          allOf:
          - $ref: '#/components/schemas/__listOfGetDiscoveredSchemaVersionItemInput'
          description: An array of strings where each string is a JSON event. These
            are the events that were used to generate the schema. The array includes
            a single type of event and has a maximum size of 10 events.
        Type:
          allOf:
          - $ref: '#/components/schemas/Type'
          description: The type of event.
      required:
      - Events
      - Type
    GetDiscoveredSchemaResponse:
      type: object
      properties:
        Content:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The source of the schema definition.
    GetDiscoveredSchemaVersionItemInput:
      type: string
      minLength: 1
      maxLength: 100000
    GetResourcePolicyRequest:
      type: object
      properties:
        RegistryName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the registry.
    GetResourcePolicyResponse:
      type: object
      properties:
        Policy:
          allOf:
          - $ref: '#/components/schemas/SynthesizedJson__string'
          description: The resource-based policy.
        RevisionId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The revision ID.
    GoneException:
      type: object
      properties:
        Code:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The error code.
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The message string of the error output.
      required:
      - Code
      - Message
    InternalServerErrorException:
      type: object
      properties:
        Code:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The error code.
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The message string of the error output.
      required:
      - Code
      - Message
    ListDiscoverersRequest:
      type: object
      properties:
        DiscovererIdPrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Specifying this limits the results to only those discoverer
            IDs that start with the specified prefix.
        Limit:
          $ref: '#/components/schemas/__integer'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The token that specifies the next page of results to return.
            To request the first page, leave NextToken empty. The token will expire
            in 24 hours, and cannot be shared with other accounts.
        SourceArnPrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Specifying this limits the results to only those ARNs that
            start with the specified prefix.
    ListDiscoverersResponse:
      type: object
      properties:
        Discoverers:
          allOf:
          - $ref: '#/components/schemas/__listOfDiscovererSummary'
          description: An array of DiscovererSummary information.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The token that specifies the next page of results to return.
            To request the first page, leave NextToken empty. The token will expire
            in 24 hours, and cannot be shared with other accounts.
    ListRegistriesRequest:
      type: object
      properties:
        Limit:
          $ref: '#/components/schemas/__integer'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The token that specifies the next page of results to return.
            To request the first page, leave NextToken empty. The token will expire
            in 24 hours, and cannot be shared with other accounts.
        RegistryNamePrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Specifying this limits the results to only those registry names
            that start with the specified prefix.
        Scope:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Can be set to Local or AWS to limit responses to your custom
            registries, or the ones provided by AWS.
    ListRegistriesResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The token that specifies the next page of results to return.
            To request the first page, leave NextToken empty. The token will expire
            in 24 hours, and cannot be shared with other accounts.
        Registries:
          allOf:
          - $ref: '#/components/schemas/__listOfRegistrySummary'
          description: An array of registry summaries.
    ListSchemaVersionsRequest:
      type: object
      properties:
        Limit:
          $ref: '#/components/schemas/__integer'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The token that specifies the next page of results to return.
            To request the first page, leave NextToken empty. The token will expire
            in 24 hours, and cannot be shared with other accounts.
        RegistryName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the registry.
        SchemaName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the schema.
      required:
      - RegistryName
      - SchemaName
    ListSchemaVersionsResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The token that specifies the next page of results to return.
            To request the first page, leave NextToken empty. The token will expire
            in 24 hours, and cannot be shared with other accounts.
        SchemaVersions:
          allOf:
          - $ref: '#/components/schemas/__listOfSchemaVersionSummary'
          description: An array of schema version summaries.
    ListSchemasRequest:
      type: object
      properties:
        Limit:
          $ref: '#/components/schemas/__integer'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The token that specifies the next page of results to return.
            To request the first page, leave NextToken empty. The token will expire
            in 24 hours, and cannot be shared with other accounts.
        RegistryName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the registry.
        SchemaNamePrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Specifying this limits the results to only those schema names
            that start with the specified prefix.
      required:
      - RegistryName
    ListSchemasResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The token that specifies the next page of results to return.
            To request the first page, leave NextToken empty. The token will expire
            in 24 hours, and cannot be shared with other accounts.
        Schemas:
          allOf:
          - $ref: '#/components/schemas/__listOfSchemaSummary'
          description: An array of schema summaries.
    ListTagsForResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the resource.
      required:
      - ResourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          $ref: '#/components/schemas/Tags'
    NotFoundException:
      type: object
      properties:
        Code:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The error code.
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The message string of the error output.
      required:
      - Code
      - Message
    PreconditionFailedException:
      type: object
      properties:
        Code:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The error code.
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The message string of the error output.
      required:
      - Code
      - Message
    PutCodeBindingRequest:
      type: object
      properties:
        Language:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The language of the code binding.
        RegistryName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the registry.
        SchemaName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the schema.
        SchemaVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Specifying this limits the results to only this schema version.
      required:
      - Language
      - RegistryName
      - SchemaName
    PutCodeBindingResponse:
      type: object
      properties:
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The time and date that the code binding was created.
        LastModified:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The date and time that code bindings were modified.
        SchemaVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The version number of the schema.
        Status:
          allOf:
          - $ref: '#/components/schemas/CodeGenerationStatus'
          description: The current status of code binding generation.
    PutResourcePolicyRequest:
      type: object
      properties:
        Policy:
          allOf:
          - $ref: '#/components/schemas/SynthesizedJson__string'
          description: The resource-based policy.
        RegistryName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the registry.
        RevisionId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The revision ID of the policy.
      required:
      - Policy
      description: The name of the policy.
    PutResourcePolicyResponse:
      type: object
      properties:
        Policy:
          allOf:
          - $ref: '#/components/schemas/SynthesizedJson__string'
          description: The resource-based policy.
        RevisionId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The revision ID of the policy.
    RegistrySummary:
      type: object
      properties:
        RegistryArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the registry.
        RegistryName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the registry.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: Tags associated with the registry.
    SchemaSummary:
      type: object
      properties:
        LastModified:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The date and time that schema was modified.
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the schema.
        SchemaName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the schema.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: Tags associated with the schema.
        VersionCount:
          allOf:
          - $ref: '#/components/schemas/__long'
          description: The number of versions available for the schema.
      description: A summary of schema details.
    SchemaVersionSummary:
      type: object
      properties:
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the schema version.
        SchemaName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the schema.
        SchemaVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The version number of the schema.
        Type:
          allOf:
          - $ref: '#/components/schemas/Type'
          description: The type of schema.
    SearchSchemaSummary:
      type: object
      properties:
        RegistryName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the registry.
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the schema.
        SchemaName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the schema.
        SchemaVersions:
          allOf:
          - $ref: '#/components/schemas/__listOfSearchSchemaVersionSummary'
          description: An array of schema version summaries.
    SearchSchemaVersionSummary:
      type: object
      properties:
        CreatedDate:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The date the schema version was created.
        SchemaVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The version number of the schema
        Type:
          allOf:
          - $ref: '#/components/schemas/Type'
          description: The type of schema.
    SearchSchemasRequest:
      type: object
      properties:
        Keywords:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Specifying this limits the results to only schemas that include
            the provided keywords.
        Limit:
          $ref: '#/components/schemas/__integer'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The token that specifies the next page of results to return.
            To request the first page, leave NextToken empty. The token will expire
            in 24 hours, and cannot be shared with other accounts.
        RegistryName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the registry.
      required:
      - Keywords
      - RegistryName
    SearchSchemasResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The token that specifies the next page of results to return.
            To request the first page, leave NextToken empty. The token will expire
            in 24 hours, and cannot be shared with other accounts.
        Schemas:
          allOf:
          - $ref: '#/components/schemas/__listOfSearchSchemaSummary'
          description: An array of SearchSchemaSummary information.
    ServiceUnavailableException:
      type: object
      properties:
        Code:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The error code.
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The message string of the error output.
      required:
      - Code
      - Message
    StartDiscovererRequest:
      type: object
      properties:
        DiscovererId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the discoverer.
      required:
      - DiscovererId
    StartDiscovererResponse:
      type: object
      properties:
        DiscovererId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the discoverer.
        State:
          allOf:
          - $ref: '#/components/schemas/DiscovererState'
          description: The state of the discoverer.
    StopDiscovererRequest:
      type: object
      properties:
        DiscovererId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the discoverer.
      required:
      - DiscovererId
    StopDiscovererResponse:
      type: object
      properties:
        DiscovererId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the discoverer.
        State:
          allOf:
          - $ref: '#/components/schemas/DiscovererState'
          description: The state of the discoverer.
    SynthesizedJson__string:
      type: string
    TagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the resource.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: Tags associated with the resource.
      required:
      - ResourceArn
      - Tags
      description: ''
    Tags:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/__string'
      description: <p>Key-value pairs associated with a resource.</p>
    TooManyRequestsException:
      type: object
      properties:
        Code:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The error code.
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The message string of the error output.
      required:
      - Code
      - Message
    Type:
      type: string
      enum:
      - OpenApi3
      - JSONSchemaDraft4
    UnauthorizedException:
      type: object
      properties:
        Code:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The error code.
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The message string of the error output.
      required:
      - Code
      - Message
    UntagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the resource.
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: Keys of key-value pairs.
      required:
      - ResourceArn
      - TagKeys
    UpdateDiscovererRequest:
      type: object
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max256'
          description: The description of the discoverer to update.
        DiscovererId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the discoverer.
        CrossAccount:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: 'Support discovery of schemas in events sent to the bus from
            another account. (default: true)'
      required:
      - DiscovererId
    UpdateDiscovererResponse:
      type: object
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The description of the discoverer.
        DiscovererArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the discoverer.
        DiscovererId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the discoverer.
        SourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the event bus.
        State:
          allOf:
          - $ref: '#/components/schemas/DiscovererState'
          description: The state of the discoverer.
        CrossAccount:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: The Status if the discoverer will discover schemas from events
            sent from another account.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: Tags associated with the resource.
    UpdateRegistryRequest:
      type: object
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max256'
          description: The description of the registry to update.
        RegistryName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the registry.
      required:
      - RegistryName
      description: Updates the registry.
    UpdateRegistryResponse:
      type: object
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The description of the registry.
        RegistryArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the registry.
        RegistryName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the registry.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: Tags associated with the registry.
    UpdateSchemaRequest:
      type: object
      properties:
        ClientTokenId:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max36'
          description: The ID of the client token.
        Content:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max100000'
          description: The source of the schema definition.
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max256'
          description: The description of the schema.
        RegistryName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the registry.
        SchemaName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the schema.
        Type:
          allOf:
          - $ref: '#/components/schemas/Type'
          description: The schema type for the events schema.
      required:
      - RegistryName
      - SchemaName
    UpdateSchemaResponse:
      type: object
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The description of the schema.
        LastModified:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The date and time that schema was modified.
        SchemaArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the schema.
        SchemaName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the schema.
        SchemaVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The version number of the schema
        Tags:
          $ref: '#/components/schemas/Tags'
        Type:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The type of the schema.
        VersionCreatedDate:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The date the schema version was created.
    __boolean:
      type: boolean
    __integer:
      type: integer
    __listOfDiscovererSummary:
      type: array
      items:
        $ref: '#/components/schemas/DiscovererSummary'
    __listOfGetDiscoveredSchemaVersionItemInput:
      type: array
      items:
        $ref: '#/components/schemas/GetDiscoveredSchemaVersionItemInput'
    __listOfRegistrySummary:
      type: array
      items:
        $ref: '#/components/schemas/RegistrySummary'
    __listOfSchemaSummary:
      type: array
      items:
        $ref: '#/components/schemas/SchemaSummary'
    __listOfSchemaVersionSummary:
      type: array
      items:
        $ref: '#/components/schemas/SchemaVersionSummary'
    __listOfSearchSchemaSummary:
      type: array
      items:
        $ref: '#/components/schemas/SearchSchemaSummary'
    __listOfSearchSchemaVersionSummary:
      type: array
      items:
        $ref: '#/components/schemas/SearchSchemaVersionSummary'
    __listOf__string:
      type: array
      items:
        $ref: '#/components/schemas/__string'
    __long:
      type: integer
      format: int64
    __string:
      type: string
    __stringMin0Max256:
      type: string
      minLength: 0
      maxLength: 256
    __stringMin0Max36:
      type: string
      minLength: 0
      maxLength: 36
    __stringMin1Max100000:
      type: string
      minLength: 1
      maxLength: 100000
    __stringMin20Max1600:
      type: string
      minLength: 20
      maxLength: 1600
    __timestampIso8601:
      type: string
      format: date-time
