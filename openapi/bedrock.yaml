openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: bedrock
  x-aws-serviceName: bedrock
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2023-04-20'
  title: Amazon Bedrock
  description: |-
    Describes the API operations for creating, managing, fine-turning, and evaluating Amazon Bedrock models.
servers:
- description: The Amazon Bedrock regional endpoint
  url: https://bedrock.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /evaluation-jobs/batch-delete:
    post:
      operationId: BatchDeleteEvaluationJob
      description: |-
        Deletes a batch of evaluation jobs. An evaluation job can only be deleted if it has following status `FAILED`, `COMPLETED`, and `STOPPED`. You can request up to 25 model evaluation jobs be deleted in a single request.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                jobIdentifiers:
                  $ref: '#/components/schemas/EvaluationJobIdentifiers'
      responses:
        '202': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /evaluation-jobs:
    post:
      operationId: CreateEvaluationJob
      description: |-
        Creates an evaluation job.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                jobName:
                  $ref: '#/components/schemas/EvaluationJobName'
                jobDescription:
                  $ref: '#/components/schemas/EvaluationJobDescription'
                clientRequestToken:
                  $ref: '#/components/schemas/IdempotencyToken'
                roleArn:
                  $ref: '#/components/schemas/RoleArn'
                customerEncryptionKeyId:
                  $ref: '#/components/schemas/KmsKeyId'
                jobTags:
                  $ref: '#/components/schemas/TagList'
                applicationType:
                  $ref: '#/components/schemas/ApplicationType'
                evaluationConfig:
                  $ref: '#/components/schemas/EvaluationConfig'
                inferenceConfig:
                  $ref: '#/components/schemas/EvaluationInferenceConfig'
                outputDataConfig:
                  $ref: '#/components/schemas/EvaluationOutputDataConfig'
      responses:
        '202': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: ListEvaluationJobs
      description: |-
        Lists all existing evaluation jobs.
      parameters:
      - name: creationTimeAfter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: creationTimeBefore
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: statusEquals
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/EvaluationJobStatus'
      - name: applicationTypeEquals
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ApplicationType'
      - name: nameContains
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/EvaluationJobName'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: sortBy
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SortJobsBy'
      - name: sortOrder
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SortOrder'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /guardrails:
    post:
      operationId: CreateGuardrail
      description: |-
        Creates a guardrail to block topics and to implement safeguards for your generative AI applications.

        You can configure the following policies in a guardrail to avoid undesirable and harmful content, filter out denied topics and words, and remove sensitive information for privacy protection.

          * **Content filters** \- Adjust filter strengths to block input prompts or model responses containing harmful content.

          * **Denied topics** \- Define a set of topics that are undesirable in the context of your application. These topics will be blocked if detected in user queries or model responses.

          * **Word filters** \- Configure filters to block undesirable words, phrases, and profanity. Such words can include offensive terms, competitor names etc.

          * **Sensitive information filters** \- Block or mask sensitive information such as personally identifiable information (PII) or custom regex in user inputs and model responses.

        In addition to the above policies, you can also configure the messages to be returned to the user if a user input or model response is in violation of the policies defined in the guardrail.

        For more information, see [Amazon Bedrock Guardrails](https://docs.aws.amazon.com/bedrock/latest/userguide/guardrails.html) in the _Amazon Bedrock User Guide_.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/GuardrailName'
                description:
                  $ref: '#/components/schemas/GuardrailDescription'
                topicPolicyConfig:
                  $ref: '#/components/schemas/GuardrailTopicPolicyConfig'
                contentPolicyConfig:
                  $ref: '#/components/schemas/GuardrailContentPolicyConfig'
                wordPolicyConfig:
                  $ref: '#/components/schemas/GuardrailWordPolicyConfig'
                sensitiveInformationPolicyConfig:
                  $ref: '#/components/schemas/GuardrailSensitiveInformationPolicyConfig'
                contextualGroundingPolicyConfig:
                  $ref: '#/components/schemas/GuardrailContextualGroundingPolicyConfig'
                blockedInputMessaging:
                  $ref: '#/components/schemas/GuardrailBlockedMessaging'
                blockedOutputsMessaging:
                  $ref: '#/components/schemas/GuardrailBlockedMessaging'
                kmsKeyId:
                  $ref: '#/components/schemas/KmsKeyId'
                tags:
                  $ref: '#/components/schemas/TagList'
                clientRequestToken:
                  $ref: '#/components/schemas/IdempotencyToken'
      responses:
        '202': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: ListGuardrails
      description: |-
        Lists details about all the guardrails in an account. To list the `DRAFT` version of all your guardrails, don't specify the `guardrailIdentifier` field. To list all versions of a guardrail, specify the ARN of the guardrail in the `guardrailIdentifier` field.

        You can set the maximum number of results to return in a response in the `maxResults` field. If there are more results than the number you set, the response returns a `nextToken` that you can send in another `ListGuardrails` request to see the next batch of results.
      parameters:
      - name: guardrailIdentifier
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/GuardrailIdentifier'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /guardrails/{guardrailIdentifier}:
    post:
      operationId: CreateGuardrailVersion
      description: |-
        Creates a version of the guardrail. Use this API to create a snapshot of the guardrail when you are satisfied with a configuration, or to compare the configuration with another version.
      parameters:
      - name: guardrailIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GuardrailIdentifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  $ref: '#/components/schemas/GuardrailDescription'
                clientRequestToken:
                  $ref: '#/components/schemas/IdempotencyToken'
      responses:
        '202': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    delete:
      operationId: DeleteGuardrail
      description: |-
        Deletes a guardrail.

          * To delete a guardrail, only specify the ARN of the guardrail in the `guardrailIdentifier` field. If you delete a guardrail, all of its versions will be deleted.

          * To delete a version of a guardrail, specify the ARN of the guardrail in the `guardrailIdentifier` field and the version in the `guardrailVersion` field.
      parameters:
      - name: guardrailIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GuardrailIdentifier'
      - name: guardrailVersion
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/GuardrailNumericalVersion'
      responses:
        '202': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: GetGuardrail
      description: |-
        Gets details about a guardrail. If you don't specify a version, the response returns details for the `DRAFT` version.
      parameters:
      - name: guardrailIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GuardrailIdentifier'
      - name: guardrailVersion
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/GuardrailVersion'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: UpdateGuardrail
      description: |-
        Updates a guardrail with the values you specify.

          * Specify a `name` and optional `description`.

          * Specify messages for when the guardrail successfully blocks a prompt or a model response in the `blockedInputMessaging` and `blockedOutputsMessaging` fields.

          * Specify topics for the guardrail to deny in the `topicPolicyConfig` object. Each [GuardrailTopicConfig](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_GuardrailTopicConfig.html) object in the `topicsConfig` list pertains to one topic.

            * Give a `name` and `description` so that the guardrail can properly identify the topic.

            * Specify `DENY` in the `type` field.

            * (Optional) Provide up to five prompts that you would categorize as belonging to the topic in the `examples` list.

          * Specify filter strengths for the harmful categories defined in Amazon Bedrock in the `contentPolicyConfig` object. Each [GuardrailContentFilterConfig](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_GuardrailContentFilterConfig.html) object in the `filtersConfig` list pertains to a harmful category. For more information, see [Content filters](https://docs.aws.amazon.com/bedrock/latest/userguide/guardrails-content-filters). For more information about the fields in a content filter, see [GuardrailContentFilterConfig](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_GuardrailContentFilterConfig.html).

            * Specify the category in the `type` field.

            * Specify the strength of the filter for prompts in the `inputStrength` field and for model responses in the `strength` field of the [GuardrailContentFilterConfig](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_GuardrailContentFilterConfig.html).

          * (Optional) For security, include the ARN of a KMS key in the `kmsKeyId` field.
      parameters:
      - name: guardrailIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GuardrailIdentifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/GuardrailName'
                description:
                  $ref: '#/components/schemas/GuardrailDescription'
                topicPolicyConfig:
                  $ref: '#/components/schemas/GuardrailTopicPolicyConfig'
                contentPolicyConfig:
                  $ref: '#/components/schemas/GuardrailContentPolicyConfig'
                wordPolicyConfig:
                  $ref: '#/components/schemas/GuardrailWordPolicyConfig'
                sensitiveInformationPolicyConfig:
                  $ref: '#/components/schemas/GuardrailSensitiveInformationPolicyConfig'
                contextualGroundingPolicyConfig:
                  $ref: '#/components/schemas/GuardrailContextualGroundingPolicyConfig'
                blockedInputMessaging:
                  $ref: '#/components/schemas/GuardrailBlockedMessaging'
                blockedOutputsMessaging:
                  $ref: '#/components/schemas/GuardrailBlockedMessaging'
                kmsKeyId:
                  $ref: '#/components/schemas/KmsKeyId'
      responses:
        '202': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /inference-profiles:
    post:
      operationId: CreateInferenceProfile
      description: |-
        Creates an application inference profile to track metrics and costs when invoking a model. To create an application inference profile for a foundation model in one region, specify the ARN of the model in that region. To create an application inference profile for a foundation model across multiple regions, specify the ARN of the system-defined inference profile that contains the regions that you want to route requests to. For more information, see [Increase throughput and resilience with cross-region inference in Amazon Bedrock](https://docs.aws.amazon.com/bedrock/latest/userguide/cross-region-inference.html). in the Amazon Bedrock User Guide.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                inferenceProfileName:
                  $ref: '#/components/schemas/InferenceProfileName'
                description:
                  $ref: '#/components/schemas/InferenceProfileDescription'
                clientRequestToken:
                  $ref: '#/components/schemas/IdempotencyToken'
                modelSource:
                  $ref: '#/components/schemas/InferenceProfileModelSource'
                tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '201': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: ListInferenceProfiles
      description: |-
        Returns a list of inference profiles that you can use. For more information, see [Increase throughput and resilience with cross-region inference in Amazon Bedrock](https://docs.aws.amazon.com/bedrock/latest/userguide/cross-region-inference.html). in the Amazon Bedrock User Guide.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: type
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/InferenceProfileType'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /marketplace-model/endpoints:
    post:
      operationId: CreateMarketplaceModelEndpoint
      description: |-
        Creates an endpoint for a model from Amazon Bedrock Marketplace. The endpoint is hosted by Amazon SageMaker.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                modelSourceIdentifier:
                  $ref: '#/components/schemas/ModelSourceIdentifier'
                endpointConfig:
                  $ref: '#/components/schemas/EndpointConfig'
                acceptEula:
                  $ref: '#/components/schemas/AcceptEula'
                endpointName:
                  $ref: '#/components/schemas/EndpointName'
                clientRequestToken:
                  $ref: '#/components/schemas/IdempotencyToken'
                tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: ListMarketplaceModelEndpoints
      description: |-
        Lists the endpoints for models from Amazon Bedrock Marketplace in your Amazon Web Services account.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: modelSourceIdentifier
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ModelSourceIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /model-copy-jobs:
    post:
      operationId: CreateModelCopyJob
      description: |-
        Copies a model to another region so that it can be used there. For more information, see [Copy models to be used in other regions](https://docs.aws.amazon.com/bedrock/latest/userguide/copy-model.html) in the [Amazon Bedrock User Guide](https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sourceModelArn:
                  $ref: '#/components/schemas/ModelArn'
                targetModelName:
                  $ref: '#/components/schemas/CustomModelName'
                modelKmsKeyId:
                  $ref: '#/components/schemas/KmsKeyId'
                targetModelTags:
                  $ref: '#/components/schemas/TagList'
                clientRequestToken:
                  $ref: '#/components/schemas/IdempotencyToken'
      responses:
        '201': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request contains more tags than can be associated with a resource (50 tags per resource). The maximum number of tags includes both existing tags and those included in your current request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
    get:
      operationId: ListModelCopyJobs
      description: |-
        Returns a list of model copy jobs that you have submitted. You can filter the jobs to return based on one or more criteria. For more information, see [Copy models to be used in other regions](https://docs.aws.amazon.com/bedrock/latest/userguide/copy-model.html) in the [Amazon Bedrock User Guide](https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html).
      parameters:
      - name: creationTimeAfter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: creationTimeBefore
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: statusEquals
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ModelCopyJobStatus'
      - name: sourceAccountEquals
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AccountId'
      - name: sourceModelArnEquals
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ModelArn'
      - name: outputModelNameContains
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/CustomModelName'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: sortBy
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SortJobsBy'
      - name: sortOrder
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SortOrder'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /model-customization-jobs:
    post:
      operationId: CreateModelCustomizationJob
      description: |-
        Creates a fine-tuning job to customize a base model.

        You specify the base foundation model and the location of the training data. After the model-customization job completes successfully, your custom model resource will be ready to use. Amazon Bedrock returns validation loss metrics and output generations after the job completes.

        For information on the format of training and validation data, see [Prepare the datasets](https://docs.aws.amazon.com/bedrock/latest/userguide/model-customization-prepare.html).

        Model-customization jobs are asynchronous and the completion time depends on the base model and the training/validation data size. To monitor a job, use the `GetModelCustomizationJob` operation to retrieve the job status.

        For more information, see [Custom models](https://docs.aws.amazon.com/bedrock/latest/userguide/custom-models.html) in the [Amazon Bedrock User Guide](https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                jobName:
                  $ref: '#/components/schemas/JobName'
                customModelName:
                  $ref: '#/components/schemas/CustomModelName'
                roleArn:
                  $ref: '#/components/schemas/RoleArn'
                clientRequestToken:
                  $ref: '#/components/schemas/IdempotencyToken'
                baseModelIdentifier:
                  $ref: '#/components/schemas/BaseModelIdentifier'
                customizationType:
                  $ref: '#/components/schemas/CustomizationType'
                customModelKmsKeyId:
                  $ref: '#/components/schemas/KmsKeyId'
                jobTags:
                  $ref: '#/components/schemas/TagList'
                customModelTags:
                  $ref: '#/components/schemas/TagList'
                trainingDataConfig:
                  $ref: '#/components/schemas/TrainingDataConfig'
                validationDataConfig:
                  $ref: '#/components/schemas/ValidationDataConfig'
                outputDataConfig:
                  $ref: '#/components/schemas/OutputDataConfig'
                hyperParameters:
                  $ref: '#/components/schemas/ModelCustomizationHyperParameters'
                vpcConfig:
                  $ref: '#/components/schemas/VpcConfig'
                customizationConfig:
                  $ref: '#/components/schemas/CustomizationConfig'
      responses:
        '201': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: ListModelCustomizationJobs
      description: |-
        Returns a list of model customization jobs that you have submitted. You can filter the jobs to return based on one or more criteria.

        For more information, see [Custom models](https://docs.aws.amazon.com/bedrock/latest/userguide/custom-models.html) in the [Amazon Bedrock User Guide](https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html).
      parameters:
      - name: creationTimeAfter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: creationTimeBefore
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: statusEquals
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/FineTuningJobStatus'
      - name: nameContains
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/JobName'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: sortBy
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SortJobsBy'
      - name: sortOrder
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SortOrder'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /model-import-jobs:
    post:
      operationId: CreateModelImportJob
      description: |-
        Creates a model import job to import model that you have customized in other environments, such as Amazon SageMaker. For more information, see [Import a customized model](https://docs.aws.amazon.com/bedrock/latest/userguide/model-customization-import-model.html)
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                jobName:
                  $ref: '#/components/schemas/JobName'
                importedModelName:
                  $ref: '#/components/schemas/ImportedModelName'
                roleArn:
                  $ref: '#/components/schemas/RoleArn'
                modelDataSource:
                  $ref: '#/components/schemas/ModelDataSource'
                jobTags:
                  $ref: '#/components/schemas/TagList'
                importedModelTags:
                  $ref: '#/components/schemas/TagList'
                clientRequestToken:
                  $ref: '#/components/schemas/IdempotencyToken'
                vpcConfig:
                  $ref: '#/components/schemas/VpcConfig'
                importedModelKmsKeyId:
                  $ref: '#/components/schemas/KmsKeyId'
      responses:
        '201': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: ListModelImportJobs
      description: |-
        Returns a list of import jobs you've submitted. You can filter the results to return based on one or more criteria. For more information, see [Import a customized model](https://docs.aws.amazon.com/bedrock/latest/userguide/model-customization-import-model.html) in the [Amazon Bedrock User Guide](https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html).
      parameters:
      - name: creationTimeAfter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: creationTimeBefore
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: statusEquals
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ModelImportJobStatus'
      - name: nameContains
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/JobName'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: sortBy
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SortJobsBy'
      - name: sortOrder
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SortOrder'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /model-invocation-job:
    post:
      operationId: CreateModelInvocationJob
      description: |-
        Creates a batch inference job to invoke a model on multiple prompts. Format your data according to [Format your inference data](https://docs.aws.amazon.com/bedrock/latest/userguide/batch-inference-data) and upload it to an Amazon S3 bucket. For more information, see [Process multiple prompts with batch inference](https://docs.aws.amazon.com/bedrock/latest/userguide/batch-inference.html).

        The response returns a `jobArn` that you can use to stop or get details about the job.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                jobName:
                  $ref: '#/components/schemas/ModelInvocationJobName'
                roleArn:
                  $ref: '#/components/schemas/RoleArn'
                clientRequestToken:
                  $ref: '#/components/schemas/ModelInvocationIdempotencyToken'
                modelId:
                  $ref: '#/components/schemas/ModelId'
                inputDataConfig:
                  $ref: '#/components/schemas/ModelInvocationJobInputDataConfig'
                outputDataConfig:
                  $ref: '#/components/schemas/ModelInvocationJobOutputDataConfig'
                vpcConfig:
                  $ref: '#/components/schemas/VpcConfig'
                timeoutDurationInHours:
                  $ref: '#/components/schemas/ModelInvocationJobTimeoutDurationInHours'
                tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /prompt-routers:
    post:
      operationId: CreatePromptRouter
      description: |-
        Creates a prompt router that manages the routing of requests between multiple foundation models based on the routing criteria.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientRequestToken:
                  $ref: '#/components/schemas/IdempotencyToken'
                promptRouterName:
                  $ref: '#/components/schemas/PromptRouterName'
                models:
                  $ref: '#/components/schemas/PromptRouterTargetModels'
                description:
                  $ref: '#/components/schemas/PromptRouterDescription'
                routingCriteria:
                  $ref: '#/components/schemas/RoutingCriteria'
                fallbackModel:
                  $ref: '#/components/schemas/PromptRouterTargetModel'
                tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: ListPromptRouters
      description: |-
        Retrieves a list of prompt routers.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: type
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PromptRouterType'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /provisioned-model-throughput:
    post:
      operationId: CreateProvisionedModelThroughput
      description: |-
        Creates dedicated throughput for a base or custom model with the model units and for the duration that you specify. For pricing details, see [Amazon Bedrock Pricing](http://aws.amazon.com/bedrock/pricing/). For more information, see [Provisioned Throughput](https://docs.aws.amazon.com/bedrock/latest/userguide/prov-throughput.html) in the [Amazon Bedrock User Guide](https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientRequestToken:
                  $ref: '#/components/schemas/IdempotencyToken'
                modelUnits:
                  $ref: '#/components/schemas/PositiveInteger'
                provisionedModelName:
                  $ref: '#/components/schemas/ProvisionedModelName'
                modelId:
                  $ref: '#/components/schemas/ModelIdentifier'
                commitmentDuration:
                  $ref: '#/components/schemas/CommitmentDuration'
                tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '201': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /custom-models/{modelIdentifier}:
    delete:
      operationId: DeleteCustomModel
      description: |-
        Deletes a custom model that you created earlier. For more information, see [Custom models](https://docs.aws.amazon.com/bedrock/latest/userguide/custom-models.html) in the [Amazon Bedrock User Guide](https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html).
      parameters:
      - name: modelIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ModelIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: GetCustomModel
      description: |-
        Get the properties associated with a Amazon Bedrock custom model that you have created.For more information, see [Custom models](https://docs.aws.amazon.com/bedrock/latest/userguide/custom-models.html) in the [Amazon Bedrock User Guide](https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html).
      parameters:
      - name: modelIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ModelIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /imported-models/{modelIdentifier}:
    delete:
      operationId: DeleteImportedModel
      description: |-
        Deletes a custom model that you imported earlier. For more information, see [Import a customized model](https://docs.aws.amazon.com/bedrock/latest/userguide/model-customization-import-model.html) in the [Amazon Bedrock User Guide](https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html).
      parameters:
      - name: modelIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ImportedModelIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: GetImportedModel
      description: |-
        Gets properties associated with a customized model you imported.
      parameters:
      - name: modelIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ImportedModelIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /inference-profiles/{inferenceProfileIdentifier}:
    delete:
      operationId: DeleteInferenceProfile
      description: |-
        Deletes an application inference profile. For more information, see [Increase throughput and resilience with cross-region inference in Amazon Bedrock](https://docs.aws.amazon.com/bedrock/latest/userguide/cross-region-inference.html). in the Amazon Bedrock User Guide.
      parameters:
      - name: inferenceProfileIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InferenceProfileIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: GetInferenceProfile
      description: |-
        Gets information about an inference profile. For more information, see [Increase throughput and resilience with cross-region inference in Amazon Bedrock](https://docs.aws.amazon.com/bedrock/latest/userguide/cross-region-inference.html). in the Amazon Bedrock User Guide.
      parameters:
      - name: inferenceProfileIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InferenceProfileIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /marketplace-model/endpoints/{endpointArn}:
    delete:
      operationId: DeleteMarketplaceModelEndpoint
      description: |-
        Deletes an endpoint for a model from Amazon Bedrock Marketplace.
      parameters:
      - name: endpointArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetMarketplaceModelEndpoint
      description: |-
        Retrieves details about a specific endpoint for a model from Amazon Bedrock Marketplace.
      parameters:
      - name: endpointArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateMarketplaceModelEndpoint
      description: |-
        Updates the configuration of an existing endpoint for a model from Amazon Bedrock Marketplace.
      parameters:
      - name: endpointArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                endpointConfig:
                  $ref: '#/components/schemas/EndpointConfig'
                clientRequestToken:
                  $ref: '#/components/schemas/IdempotencyToken'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /logging/modelinvocations:
    delete:
      operationId: DeleteModelInvocationLoggingConfiguration
      description: |-
        Delete the invocation logging.
      parameters: []
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: GetModelInvocationLoggingConfiguration
      description: |-
        Get the current configuration values for model invocation logging.
      parameters: []
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    put:
      operationId: PutModelInvocationLoggingConfiguration
      description: |-
        Set the configuration values for model invocation logging.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                loggingConfig:
                  $ref: '#/components/schemas/LoggingConfig'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /prompt-routers/{promptRouterArn}:
    delete:
      operationId: DeletePromptRouter
      description: |-
        Deletes a specified prompt router. This action cannot be undone.
      parameters:
      - name: promptRouterArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PromptRouterArn'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetPromptRouter
      description: |-
        Retrieves details about a prompt router.
      parameters:
      - name: promptRouterArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PromptRouterArn'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /provisioned-model-throughput/{provisionedModelId}:
    delete:
      operationId: DeleteProvisionedModelThroughput
      description: |-
        Deletes a Provisioned Throughput. You can't delete a Provisioned Throughput before the commitment term is over. For more information, see [Provisioned Throughput](https://docs.aws.amazon.com/bedrock/latest/userguide/prov-throughput.html) in the [Amazon Bedrock User Guide](https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html).
      parameters:
      - name: provisionedModelId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ProvisionedModelId'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: GetProvisionedModelThroughput
      description: |-
        Returns details for a Provisioned Throughput. For more information, see [Provisioned Throughput](https://docs.aws.amazon.com/bedrock/latest/userguide/prov-throughput.html) in the [Amazon Bedrock User Guide](https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html).
      parameters:
      - name: provisionedModelId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ProvisionedModelId'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateProvisionedModelThroughput
      description: |-
        Updates the name or associated model for a Provisioned Throughput. For more information, see [Provisioned Throughput](https://docs.aws.amazon.com/bedrock/latest/userguide/prov-throughput.html) in the [Amazon Bedrock User Guide](https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html).
      parameters:
      - name: provisionedModelId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ProvisionedModelId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                desiredProvisionedModelName:
                  $ref: '#/components/schemas/ProvisionedModelName'
                desiredModelId:
                  $ref: '#/components/schemas/ModelIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /marketplace-model/endpoints/{endpointArn}/registration:
    delete:
      operationId: DeregisterMarketplaceModelEndpoint
      description: |-
        Deregisters an endpoint for a model from Amazon Bedrock Marketplace. This operation removes the endpoint's association with Amazon Bedrock but does not delete the underlying Amazon SageMaker endpoint.
      parameters:
      - name: endpointArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            Returned if the service cannot complete the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /evaluation-jobs/{jobIdentifier}:
    get:
      operationId: GetEvaluationJob
      description: |-
        Gets information about an evaluation job, such as the status of the job.
      parameters:
      - name: jobIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EvaluationJobIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /foundation-models/{modelIdentifier}:
    get:
      operationId: GetFoundationModel
      description: |-
        Get details about a Amazon Bedrock foundation model.
      parameters:
      - name: modelIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ModelIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /model-copy-jobs/{jobArn}:
    get:
      operationId: GetModelCopyJob
      description: |-
        Retrieves information about a model copy job. For more information, see [Copy models to be used in other regions](https://docs.aws.amazon.com/bedrock/latest/userguide/copy-model.html) in the [Amazon Bedrock User Guide](https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html).
      parameters:
      - name: jobArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ModelCopyJobArn'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /model-customization-jobs/{jobIdentifier}:
    get:
      operationId: GetModelCustomizationJob
      description: |-
        Retrieves the properties associated with a model-customization job, including the status of the job. For more information, see [Custom models](https://docs.aws.amazon.com/bedrock/latest/userguide/custom-models.html) in the [Amazon Bedrock User Guide](https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html).
      parameters:
      - name: jobIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ModelCustomizationJobIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /model-import-jobs/{jobIdentifier}:
    get:
      operationId: GetModelImportJob
      description: |-
        Retrieves the properties associated with import model job, including the status of the job. For more information, see [Import a customized model](https://docs.aws.amazon.com/bedrock/latest/userguide/model-customization-import-model.html) in the [Amazon Bedrock User Guide](https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html).
      parameters:
      - name: jobIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ModelImportJobIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /model-invocation-job/{jobIdentifier}:
    get:
      operationId: GetModelInvocationJob
      description: |-
        Gets details about a batch inference job. For more information, see [Monitor batch inference jobs](https://docs.aws.amazon.com/bedrock/latest/userguide/batch-inference-monitor)
      parameters:
      - name: jobIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ModelInvocationJobIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /custom-models:
    get:
      operationId: ListCustomModels
      description: |-
        Returns a list of the custom models that you have created with the `CreateModelCustomizationJob` operation.

        For more information, see [Custom models](https://docs.aws.amazon.com/bedrock/latest/userguide/custom-models.html) in the [Amazon Bedrock User Guide](https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html).
      parameters:
      - name: creationTimeBefore
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: creationTimeAfter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: nameContains
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/CustomModelName'
      - name: baseModelArnEquals
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ModelArn'
      - name: foundationModelArnEquals
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/FoundationModelArn'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: sortBy
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SortModelsBy'
      - name: sortOrder
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SortOrder'
      - name: isOwned
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Boolean'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /foundation-models:
    get:
      operationId: ListFoundationModels
      description: |-
        Lists Amazon Bedrock foundation models that you can use. You can filter the results with the request parameters. For more information, see [Foundation models](https://docs.aws.amazon.com/bedrock/latest/userguide/foundation-models.html) in the [Amazon Bedrock User Guide](https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html).
      parameters:
      - name: byProvider
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Provider'
      - name: byCustomizationType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ModelCustomization'
      - name: byOutputModality
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ModelModality'
      - name: byInferenceType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/InferenceType'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /imported-models:
    get:
      operationId: ListImportedModels
      description: |-
        Returns a list of models you've imported. You can filter the results to return based on one or more criteria. For more information, see [Import a customized model](https://docs.aws.amazon.com/bedrock/latest/userguide/model-customization-import-model.html) in the [Amazon Bedrock User Guide](https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html).
      parameters:
      - name: creationTimeBefore
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: creationTimeAfter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: nameContains
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ImportedModelName'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: sortBy
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SortModelsBy'
      - name: sortOrder
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SortOrder'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /model-invocation-jobs:
    get:
      operationId: ListModelInvocationJobs
      description: |-
        Lists all batch inference jobs in the account. For more information, see [View details about a batch inference job](https://docs.aws.amazon.com/bedrock/latest/userguide/batch-inference-view.html).
      parameters:
      - name: submitTimeAfter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: submitTimeBefore
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: statusEquals
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ModelInvocationJobStatus'
      - name: nameContains
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ModelInvocationJobName'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: sortBy
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SortJobsBy'
      - name: sortOrder
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SortOrder'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /provisioned-model-throughputs:
    get:
      operationId: ListProvisionedModelThroughputs
      description: |-
        Lists the Provisioned Throughputs in the account. For more information, see [Provisioned Throughput](https://docs.aws.amazon.com/bedrock/latest/userguide/prov-throughput.html) in the [Amazon Bedrock User Guide](https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html).
      parameters:
      - name: creationTimeAfter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: creationTimeBefore
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: statusEquals
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ProvisionedModelStatus'
      - name: modelArnEquals
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ModelArn'
      - name: nameContains
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ProvisionedModelName'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: sortBy
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SortByProvisionedModels'
      - name: sortOrder
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SortOrder'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /listTagsForResource:
    post:
      operationId: ListTagsForResource
      description: |-
        List the tags associated with the specified resource.

        For more information, see [Tagging resources](https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html) in the [Amazon Bedrock User Guide](https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resourceARN:
                  $ref: '#/components/schemas/TaggableResourcesArn'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /marketplace-model/endpoints/{endpointIdentifier}/registration:
    post:
      operationId: RegisterMarketplaceModelEndpoint
      description: |-
        Registers an existing Amazon SageMaker endpoint with Amazon Bedrock Marketplace, allowing it to be used with Amazon Bedrock APIs.
      parameters:
      - name: endpointIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                modelSourceIdentifier:
                  $ref: '#/components/schemas/ModelSourceIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            Returned if the service cannot complete the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /evaluation-job/{jobIdentifier}/stop:
    post:
      operationId: StopEvaluationJob
      description: |-
        Stops an evaluation job that is current being created or running.
      parameters:
      - name: jobIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EvaluationJobIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /model-customization-jobs/{jobIdentifier}/stop:
    post:
      operationId: StopModelCustomizationJob
      description: |-
        Stops an active model customization job. For more information, see [Custom models](https://docs.aws.amazon.com/bedrock/latest/userguide/custom-models.html) in the [Amazon Bedrock User Guide](https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html).
      parameters:
      - name: jobIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ModelCustomizationJobIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /model-invocation-job/{jobIdentifier}/stop:
    post:
      operationId: StopModelInvocationJob
      description: |-
        Stops a batch inference job. You're only charged for tokens that were already processed. For more information, see [Stop a batch inference job](https://docs.aws.amazon.com/bedrock/latest/userguide/batch-inference-stop.html).
      parameters:
      - name: jobIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ModelInvocationJobIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /tagResource:
    post:
      operationId: TagResource
      description: |-
        Associate tags with a resource. For more information, see [Tagging resources](https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html) in the [Amazon Bedrock User Guide](https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resourceARN:
                  $ref: '#/components/schemas/TaggableResourcesArn'
                tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /untagResource:
    post:
      operationId: UntagResource
      description: |-
        Remove one or more tags from a resource. For more information, see [Tagging resources](https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html) in the [Amazon Bedrock User Guide](https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resourceARN:
                  $ref: '#/components/schemas/TaggableResourcesArn'
                tagKeys:
                  $ref: '#/components/schemas/TagKeyList'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    AcceptEula:
      type: boolean
      default: false
    AccessDeniedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/NonBlankString'
      description: The request is denied because of missing access permissions.
    AccountId:
      type: string
      pattern: ^[0-9]{12}$
    AdditionalModelRequestFields:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/AdditionalModelRequestFieldsValue'
    AdditionalModelRequestFieldsKey:
      type: string
      minLength: 1
      maxLength: 100
    AdditionalModelRequestFieldsValue:
      type: object
      additionalProperties: true
    ApplicationType:
      type: string
      enum:
      - ModelEvaluation
      - RagEvaluation
    Arn:
      type: string
      maxLength: 2048
    AutomatedEvaluationConfig:
      type: object
      properties:
        datasetMetricConfigs:
          allOf:
          - $ref: '#/components/schemas/EvaluationDatasetMetricConfigs'
          description: Configuration details of the prompt datasets and metrics you
            want to use for your evaluation job.
        evaluatorModelConfig:
          allOf:
          - $ref: '#/components/schemas/EvaluatorModelConfig'
          description: Contains the evaluator model configuration details. `EvaluatorModelConfig`
            is required for evaluation jobs that use a knowledge base or in model
            evaluation job that use a model as judge. This model computes all evaluation
            related metrics.
        customMetricConfig:
          allOf:
          - $ref: '#/components/schemas/AutomatedEvaluationCustomMetricConfig'
          description: Defines the configuration of custom metrics to be used in an
            evaluation job.
      required:
      - datasetMetricConfigs
      description: The configuration details of an automated evaluation job. The `EvaluationDatasetMetricConfig`
        object is used to specify the prompt datasets, task type, and metric names.
    AutomatedEvaluationCustomMetricConfig:
      type: object
      properties:
        customMetrics:
          allOf:
          - $ref: '#/components/schemas/AutomatedEvaluationCustomMetrics'
          description: Defines a list of custom metrics to be used in an Amazon Bedrock
            evaluation job.
        evaluatorModelConfig:
          allOf:
          - $ref: '#/components/schemas/CustomMetricEvaluatorModelConfig'
          description: Configuration of the evaluator model you want to use to evaluate
            custom metrics in an Amazon Bedrock evaluation job.
      required:
      - customMetrics
      - evaluatorModelConfig
      description: Defines the configuration of custom metrics to be used in an evaluation
        job. To learn more about using custom metrics in Amazon Bedrock evaluation
        jobs, see [Create a prompt for a custom metrics (LLM-as-a-judge model evaluations)](https://docs.aws.amazon.com/bedrock/latest/userguide/model-evaluation-custom-metrics-prompt-formats.html)
        and [Create a prompt for a custom metrics (RAG evaluations)](https://docs.aws.amazon.com/bedrock/latest/userguide/kb-evaluation-custom-metrics-prompt-formats.html).
    AutomatedEvaluationCustomMetricSource:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/CustomMetricDefinition'
        description: |-
          The definition of a custom metric for use in an Amazon Bedrock evaluation job.
      description: |-
        An array item definining a single custom metric for use in an Amazon Bedrock evaluation job.
    AutomatedEvaluationCustomMetrics:
      type: array
      items:
        $ref: '#/components/schemas/AutomatedEvaluationCustomMetricSource'
    BaseModelIdentifier:
      type: string
      pattern: ^(arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:(([0-9]{12}:custom-model/([a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}([.]?[a-z0-9-]{1,63})([:][a-z0-9-]{1,63}){0,2})/[a-z0-9]{12})|(:foundation-model/[a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}([:][a-z0-9-]{1,63}){0,2})))|([a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}([.]?[a-z0-9-]{1,63})([:][a-z0-9-]{1,63}){0,2})|(([0-9a-zA-Z][_-]?)+)$
      minLength: 1
      maxLength: 2048
    BatchDeleteEvaluationJobError:
      type: object
      properties:
        jobIdentifier:
          allOf:
          - $ref: '#/components/schemas/EvaluationJobIdentifier'
          description: The ARN of the evaluation job being deleted.
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A HTTP status code of the evaluation job being deleted.
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A status message about the evaluation job deletion.
      required:
      - jobIdentifier
      - code
      description: A JSON array that provides the status of the evaluation jobs being
        deleted.
    BatchDeleteEvaluationJobErrors:
      type: array
      items:
        $ref: '#/components/schemas/BatchDeleteEvaluationJobError'
    BatchDeleteEvaluationJobItem:
      type: object
      properties:
        jobIdentifier:
          allOf:
          - $ref: '#/components/schemas/EvaluationJobIdentifier'
          description: The Amazon Resource Name (ARN) of the evaluation job for deletion.
        jobStatus:
          allOf:
          - $ref: '#/components/schemas/EvaluationJobStatus'
          description: The status of the evaluation job for deletion.
      required:
      - jobIdentifier
      - jobStatus
      description: An evaluation job for deletion, and it’s current status.
    BatchDeleteEvaluationJobItems:
      type: array
      items:
        $ref: '#/components/schemas/BatchDeleteEvaluationJobItem'
    BatchDeleteEvaluationJobRequest:
      type: object
      properties:
        jobIdentifiers:
          allOf:
          - $ref: '#/components/schemas/EvaluationJobIdentifiers'
          description: A list of one or more evaluation job Amazon Resource Names
            (ARNs) you want to delete.
      required:
      - jobIdentifiers
    BatchDeleteEvaluationJobResponse:
      type: object
      properties:
        errors:
          allOf:
          - $ref: '#/components/schemas/BatchDeleteEvaluationJobErrors'
          description: A JSON object containing the HTTP status codes and the ARNs
            of evaluation jobs that failed to be deleted.
        evaluationJobs:
          allOf:
          - $ref: '#/components/schemas/BatchDeleteEvaluationJobItems'
          description: The list of evaluation jobs for deletion.
      required:
      - errors
      - evaluationJobs
    BedrockEvaluatorModel:
      type: object
      properties:
        modelIdentifier:
          allOf:
          - $ref: '#/components/schemas/EvaluatorModelIdentifier'
          description: The Amazon Resource Name (ARN) of the evaluator model used
            used in knowledge base evaluation job or in model evaluation job that
            use a model as judge.
      required:
      - modelIdentifier
      description: The evaluator model used in knowledge base evaluation job or in
        model evaluation job that use a model as judge. This model computes all evaluation
        related metrics.
    BedrockEvaluatorModels:
      type: array
      items:
        $ref: '#/components/schemas/BedrockEvaluatorModel'
    BedrockModelArn:
      type: string
      pattern: ^(arn:aws(-[^:]+)?:(bedrock|sagemaker):[a-z0-9-]{1,20}:([0-9]{12})?:([a-z-]+/)?)?([a-zA-Z0-9.-]{1,63}){0,2}(([:][a-z0-9-]{1,63}){0,2})?(/[a-z0-9]{1,12})?$
      minLength: 1
      maxLength: 2048
    BedrockModelId:
      type: string
      pattern: ^[a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}([a-z0-9-]{1,63}[.]){0,2}[a-z0-9-]{1,63}([:][a-z0-9-]{1,63}){0,2}(/[a-z0-9]{12}|)$
      maxLength: 140
    BrandedName:
      type: string
      pattern: ^.*$
      minLength: 1
      maxLength: 20
    BucketName:
      type: string
      minLength: 3
      maxLength: 63
    ByteContentBlob:
      type: string
      format: byte
      minLength: 1
      maxLength: 10485760
      x-sensitive: true
    ByteContentDoc:
      type: object
      properties:
        identifier:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The file name of the document contained in the wrapper object.
        contentType:
          allOf:
          - $ref: '#/components/schemas/ContentType'
          description: The MIME type of the document contained in the wrapper object.
        data:
          allOf:
          - $ref: '#/components/schemas/ByteContentBlob'
          description: The byte value of the file to upload, encoded as a Base-64
            string.
      required:
      - identifier
      - contentType
      - data
      description: Contains the document contained in the wrapper object, along with
        its attributes/fields.
    CloudWatchConfig:
      type: object
      properties:
        logGroupName:
          allOf:
          - $ref: '#/components/schemas/LogGroupName'
          description: The log group name.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The role Amazon Resource Name (ARN).
        largeDataDeliveryS3Config:
          allOf:
          - $ref: '#/components/schemas/S3Config'
          description: S3 configuration for delivering a large amount of data.
      required:
      - logGroupName
      - roleArn
      description: CloudWatch logging configuration.
    CommitmentDuration:
      type: string
      enum:
      - OneMonth
      - SixMonths
    ConflictException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/NonBlankString'
      description: Error occurred because of a conflict while performing an operation.
    ContentType:
      type: string
      pattern: '[a-z]{1,20}/.{1,20}'
    CreateEvaluationJobRequest:
      type: object
      properties:
        jobName:
          allOf:
          - $ref: '#/components/schemas/EvaluationJobName'
          description: A name for the evaluation job. Names must unique with your
            Amazon Web Services account, and your account's Amazon Web Services region.
        jobDescription:
          allOf:
          - $ref: '#/components/schemas/EvaluationJobDescription'
          description: A description of the evaluation job.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyToken'
          description: A unique, case-sensitive identifier to ensure that the API
            request completes no more than one time. If this token matches a previous
            request, Amazon Bedrock ignores the request, but does not return an error.
            For more information, see [Ensuring idempotency](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html).
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of an IAM service role that
            Amazon Bedrock can assume to perform tasks on your behalf. To learn more
            about the required permissions, see [Required permissions for model evaluations](https://docs.aws.amazon.com/bedrock/latest/userguide/model-evaluation-security.html).
        customerEncryptionKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKeyId'
          description: Specify your customer managed encryption key Amazon Resource
            Name (ARN) that will be used to encrypt your evaluation job.
        jobTags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: Tags to attach to the model evaluation job.
        applicationType:
          allOf:
          - $ref: '#/components/schemas/ApplicationType'
          description: Specifies whether the evaluation job is for evaluating a model
            or evaluating a knowledge base (retrieval and response generation).
        evaluationConfig:
          allOf:
          - $ref: '#/components/schemas/EvaluationConfig'
          description: Contains the configuration details of either an automated or
            human-based evaluation job.
        inferenceConfig:
          allOf:
          - $ref: '#/components/schemas/EvaluationInferenceConfig'
          description: 'Contains the configuration details of the inference model
            for the evaluation job.


            For model evaluation jobs, automated jobs support a single model or [inference
            profile](https://docs.aws.amazon.com/bedrock/latest/userguide/cross-region-inference.html),
            and jobs that use human workers support two models or inference profiles.'
        outputDataConfig:
          allOf:
          - $ref: '#/components/schemas/EvaluationOutputDataConfig'
          description: Contains the configuration details of the Amazon S3 bucket
            for storing the results of the evaluation job.
      required:
      - jobName
      - roleArn
      - evaluationConfig
      - inferenceConfig
      - outputDataConfig
    CreateEvaluationJobResponse:
      type: object
      properties:
        jobArn:
          allOf:
          - $ref: '#/components/schemas/EvaluationJobArn'
          description: The Amazon Resource Name (ARN) of the evaluation job.
      required:
      - jobArn
    CreateGuardrailRequest:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/GuardrailName'
          description: The name to give the guardrail.
        description:
          allOf:
          - $ref: '#/components/schemas/GuardrailDescription'
          description: A description of the guardrail.
        topicPolicyConfig:
          allOf:
          - $ref: '#/components/schemas/GuardrailTopicPolicyConfig'
          description: The topic policies to configure for the guardrail.
        contentPolicyConfig:
          allOf:
          - $ref: '#/components/schemas/GuardrailContentPolicyConfig'
          description: The content filter policies to configure for the guardrail.
        wordPolicyConfig:
          allOf:
          - $ref: '#/components/schemas/GuardrailWordPolicyConfig'
          description: The word policy you configure for the guardrail.
        sensitiveInformationPolicyConfig:
          allOf:
          - $ref: '#/components/schemas/GuardrailSensitiveInformationPolicyConfig'
          description: The sensitive information policy to configure for the guardrail.
        contextualGroundingPolicyConfig:
          allOf:
          - $ref: '#/components/schemas/GuardrailContextualGroundingPolicyConfig'
          description: The contextual grounding policy configuration used to create
            a guardrail.
        blockedInputMessaging:
          allOf:
          - $ref: '#/components/schemas/GuardrailBlockedMessaging'
          description: The message to return when the guardrail blocks a prompt.
        blockedOutputsMessaging:
          allOf:
          - $ref: '#/components/schemas/GuardrailBlockedMessaging'
          description: The message to return when the guardrail blocks a model response.
        kmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKeyId'
          description: The ARN of the KMS key that you use to encrypt the guardrail.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags that you want to attach to the guardrail.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyToken'
          description: A unique, case-sensitive identifier to ensure that the API
            request completes no more than once. If this token matches a previous
            request, Amazon Bedrock ignores the request, but does not return an error.
            For more information, see [Ensuring idempotency](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html)
            in the _Amazon S3 User Guide_.
      required:
      - name
      - blockedInputMessaging
      - blockedOutputsMessaging
    CreateGuardrailResponse:
      type: object
      properties:
        guardrailId:
          allOf:
          - $ref: '#/components/schemas/GuardrailId'
          description: The unique identifier of the guardrail that was created.
        guardrailArn:
          allOf:
          - $ref: '#/components/schemas/GuardrailArn'
          description: The ARN of the guardrail.
        version:
          allOf:
          - $ref: '#/components/schemas/GuardrailDraftVersion'
          description: The version of the guardrail that was created. This value will
            always be `DRAFT`.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the guardrail was created.
      required:
      - guardrailId
      - guardrailArn
      - version
      - createdAt
    CreateGuardrailVersionRequest:
      type: object
      properties:
        guardrailIdentifier:
          allOf:
          - $ref: '#/components/schemas/GuardrailIdentifier'
          description: The unique identifier of the guardrail. This can be an ID or
            the ARN.
        description:
          allOf:
          - $ref: '#/components/schemas/GuardrailDescription'
          description: A description of the guardrail version.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyToken'
          description: A unique, case-sensitive identifier to ensure that the API
            request completes no more than once. If this token matches a previous
            request, Amazon Bedrock ignores the request, but does not return an error.
            For more information, see [Ensuring idempotency](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html)
            in the _Amazon S3 User Guide_.
      required:
      - guardrailIdentifier
    CreateGuardrailVersionResponse:
      type: object
      properties:
        guardrailId:
          allOf:
          - $ref: '#/components/schemas/GuardrailId'
          description: The unique identifier of the guardrail.
        version:
          allOf:
          - $ref: '#/components/schemas/GuardrailNumericalVersion'
          description: The number of the version of the guardrail.
      required:
      - guardrailId
      - version
    CreateInferenceProfileRequest:
      type: object
      properties:
        inferenceProfileName:
          allOf:
          - $ref: '#/components/schemas/InferenceProfileName'
          description: A name for the inference profile.
        description:
          allOf:
          - $ref: '#/components/schemas/InferenceProfileDescription'
          description: A description for the inference profile.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyToken'
          description: A unique, case-sensitive identifier to ensure that the API
            request completes no more than one time. If this token matches a previous
            request, Amazon Bedrock ignores the request, but does not return an error.
            For more information, see [Ensuring idempotency](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html).
        modelSource:
          allOf:
          - $ref: '#/components/schemas/InferenceProfileModelSource'
          description: The foundation model or system-defined inference profile that
            the inference profile will track metrics and costs for.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: An array of objects, each of which contains a tag and its value.
            For more information, see [Tagging resources](https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html)
            in the [Amazon Bedrock User Guide](https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html).
      required:
      - inferenceProfileName
      - modelSource
    CreateInferenceProfileResponse:
      type: object
      properties:
        inferenceProfileArn:
          allOf:
          - $ref: '#/components/schemas/InferenceProfileArn'
          description: The ARN of the inference profile that you created.
        status:
          allOf:
          - $ref: '#/components/schemas/InferenceProfileStatus'
          description: The status of the inference profile. `ACTIVE` means that the
            inference profile is ready to be used.
      required:
      - inferenceProfileArn
    CreateMarketplaceModelEndpointRequest:
      type: object
      properties:
        modelSourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/ModelSourceIdentifier'
          description: The ARN of the model from Amazon Bedrock Marketplace that you
            want to deploy to the endpoint.
        endpointConfig:
          allOf:
          - $ref: '#/components/schemas/EndpointConfig'
          description: The configuration for the endpoint, including the number and
            type of instances to use.
        acceptEula:
          allOf:
          - $ref: '#/components/schemas/AcceptEula'
          description: Indicates whether you accept the end-user license agreement
            (EULA) for the model. Set to `true` to accept the EULA.
        endpointName:
          allOf:
          - $ref: '#/components/schemas/EndpointName'
          description: The name of the endpoint. This name must be unique within your
            Amazon Web Services account and region.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. This token is listed as not required because
            Amazon Web Services SDKs automatically generate it for you and set this
            parameter. If you're not using the Amazon Web Services SDK or the CLI,
            you must provide this token or the action will fail.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: An array of key-value pairs to apply to the underlying Amazon
            SageMaker endpoint. You can use these tags to organize and identify your
            Amazon Web Services resources.
      required:
      - modelSourceIdentifier
      - endpointConfig
      - endpointName
    CreateMarketplaceModelEndpointResponse:
      type: object
      properties:
        marketplaceModelEndpoint:
          allOf:
          - $ref: '#/components/schemas/MarketplaceModelEndpoint'
          description: Details about the created endpoint.
      required:
      - marketplaceModelEndpoint
    CreateModelCopyJobRequest:
      type: object
      properties:
        sourceModelArn:
          allOf:
          - $ref: '#/components/schemas/ModelArn'
          description: The Amazon Resource Name (ARN) of the model to be copied.
        targetModelName:
          allOf:
          - $ref: '#/components/schemas/CustomModelName'
          description: A name for the copied model.
        modelKmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKeyId'
          description: The ARN of the KMS key that you use to encrypt the model copy.
        targetModelTags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: Tags to associate with the target model. For more information,
            see [Tag resources](https://docs.aws.amazon.com/bedrock/latest/userguide/tagging.html)
            in the [Amazon Bedrock User Guide](https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html).
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyToken'
          description: A unique, case-sensitive identifier to ensure that the API
            request completes no more than one time. If this token matches a previous
            request, Amazon Bedrock ignores the request, but does not return an error.
            For more information, see [Ensuring idempotency](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html).
      required:
      - sourceModelArn
      - targetModelName
    CreateModelCopyJobResponse:
      type: object
      properties:
        jobArn:
          allOf:
          - $ref: '#/components/schemas/ModelCopyJobArn'
          description: The Amazon Resource Name (ARN) of the model copy job.
      required:
      - jobArn
    CreateModelCustomizationJobRequest:
      type: object
      properties:
        jobName:
          allOf:
          - $ref: '#/components/schemas/JobName'
          description: A name for the fine-tuning job.
        customModelName:
          allOf:
          - $ref: '#/components/schemas/CustomModelName'
          description: A name for the resulting custom model.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of an IAM service role that
            Amazon Bedrock can assume to perform tasks on your behalf. For example,
            during model training, Amazon Bedrock needs your permission to read input
            data from an S3 bucket, write model artifacts to an S3 bucket. To pass
            this role to Amazon Bedrock, the caller of this API must have the `iam:PassRole`
            permission.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyToken'
          description: A unique, case-sensitive identifier to ensure that the API
            request completes no more than one time. If this token matches a previous
            request, Amazon Bedrock ignores the request, but does not return an error.
            For more information, see [Ensuring idempotency](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html).
        baseModelIdentifier:
          allOf:
          - $ref: '#/components/schemas/BaseModelIdentifier'
          description: Name of the base model.
        customizationType:
          allOf:
          - $ref: '#/components/schemas/CustomizationType'
          description: The customization type.
        customModelKmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKeyId'
          description: The custom model is encrypted at rest using this key.
        jobTags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: Tags to attach to the job.
        customModelTags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: Tags to attach to the resulting custom model.
        trainingDataConfig:
          allOf:
          - $ref: '#/components/schemas/TrainingDataConfig'
          description: Information about the training dataset.
        validationDataConfig:
          allOf:
          - $ref: '#/components/schemas/ValidationDataConfig'
          description: Information about the validation dataset.
        outputDataConfig:
          allOf:
          - $ref: '#/components/schemas/OutputDataConfig'
          description: S3 location for the output data.
        hyperParameters:
          allOf:
          - $ref: '#/components/schemas/ModelCustomizationHyperParameters'
          description: Parameters related to tuning the model. For details on the
            format for different models, see [Custom model hyperparameters](https://docs.aws.amazon.com/bedrock/latest/userguide/custom-models-hp.html).
        vpcConfig:
          allOf:
          - $ref: '#/components/schemas/VpcConfig'
          description: The configuration of the Virtual Private Cloud (VPC) that contains
            the resources that you're using for this job. For more information, see
            [Protect your model customization jobs using a VPC](https://docs.aws.amazon.com/bedrock/latest/userguide/vpc-model-customization.html).
        customizationConfig:
          allOf:
          - $ref: '#/components/schemas/CustomizationConfig'
          description: The customization configuration for the model customization
            job.
      required:
      - jobName
      - customModelName
      - roleArn
      - baseModelIdentifier
      - trainingDataConfig
      - outputDataConfig
    CreateModelCustomizationJobResponse:
      type: object
      properties:
        jobArn:
          allOf:
          - $ref: '#/components/schemas/ModelCustomizationJobArn'
          description: Amazon Resource Name (ARN) of the fine tuning job
      required:
      - jobArn
    CreateModelImportJobRequest:
      type: object
      properties:
        jobName:
          allOf:
          - $ref: '#/components/schemas/JobName'
          description: The name of the import job.
        importedModelName:
          allOf:
          - $ref: '#/components/schemas/ImportedModelName'
          description: The name of the imported model.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of the model import job.
        modelDataSource:
          allOf:
          - $ref: '#/components/schemas/ModelDataSource'
          description: The data source for the imported model.
        jobTags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: Tags to attach to this import job.
        importedModelTags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: Tags to attach to the imported model.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyToken'
          description: A unique, case-sensitive identifier to ensure that the API
            request completes no more than one time. If this token matches a previous
            request, Amazon Bedrock ignores the request, but does not return an error.
            For more information, see [Ensuring idempotency](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html).
        vpcConfig:
          allOf:
          - $ref: '#/components/schemas/VpcConfig'
          description: VPC configuration parameters for the private Virtual Private
            Cloud (VPC) that contains the resources you are using for the import job.
        importedModelKmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKeyId'
          description: The imported model is encrypted at rest using this key.
      required:
      - jobName
      - importedModelName
      - roleArn
      - modelDataSource
    CreateModelImportJobResponse:
      type: object
      properties:
        jobArn:
          allOf:
          - $ref: '#/components/schemas/ModelImportJobArn'
          description: The Amazon Resource Name (ARN) of the model import job.
      required:
      - jobArn
    CreateModelInvocationJobRequest:
      type: object
      properties:
        jobName:
          allOf:
          - $ref: '#/components/schemas/ModelInvocationJobName'
          description: A name to give the batch inference job.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of the service role with permissions
            to carry out and manage batch inference. You can use the console to create
            a default service role or follow the steps at [Create a service role for
            batch inference](https://docs.aws.amazon.com/bedrock/latest/userguide/batch-iam-sr.html).
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ModelInvocationIdempotencyToken'
          description: A unique, case-sensitive identifier to ensure that the API
            request completes no more than one time. If this token matches a previous
            request, Amazon Bedrock ignores the request, but does not return an error.
            For more information, see [Ensuring idempotency](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html).
        modelId:
          allOf:
          - $ref: '#/components/schemas/ModelId'
          description: The unique identifier of the foundation model to use for the
            batch inference job.
        inputDataConfig:
          allOf:
          - $ref: '#/components/schemas/ModelInvocationJobInputDataConfig'
          description: Details about the location of the input to the batch inference
            job.
        outputDataConfig:
          allOf:
          - $ref: '#/components/schemas/ModelInvocationJobOutputDataConfig'
          description: Details about the location of the output of the batch inference
            job.
        vpcConfig:
          allOf:
          - $ref: '#/components/schemas/VpcConfig'
          description: The configuration of the Virtual Private Cloud (VPC) for the
            data in the batch inference job. For more information, see [Protect batch
            inference jobs using a VPC](https://docs.aws.amazon.com/bedrock/latest/userguide/batch-vpc).
        timeoutDurationInHours:
          allOf:
          - $ref: '#/components/schemas/ModelInvocationJobTimeoutDurationInHours'
          description: The number of hours after which to force the batch inference
            job to time out.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: Any tags to associate with the batch inference job. For more
            information, see [Tagging Amazon Bedrock resources](https://docs.aws.amazon.com/bedrock/latest/userguide/tagging.html).
      required:
      - jobName
      - roleArn
      - modelId
      - inputDataConfig
      - outputDataConfig
    CreateModelInvocationJobResponse:
      type: object
      properties:
        jobArn:
          allOf:
          - $ref: '#/components/schemas/ModelInvocationJobArn'
          description: The Amazon Resource Name (ARN) of the batch inference job.
      required:
      - jobArn
    CreatePromptRouterRequest:
      type: object
      properties:
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            idempotency of your requests. If not specified, the Amazon Web Services
            SDK automatically generates one for you.
        promptRouterName:
          allOf:
          - $ref: '#/components/schemas/PromptRouterName'
          description: The name of the prompt router. The name must be unique within
            your Amazon Web Services account in the current region.
        models:
          allOf:
          - $ref: '#/components/schemas/PromptRouterTargetModels'
          description: A list of foundation models that the prompt router can route
            requests to. At least one model must be specified.
        description:
          allOf:
          - $ref: '#/components/schemas/PromptRouterDescription'
          description: An optional description of the prompt router to help identify
            its purpose.
        routingCriteria:
          allOf:
          - $ref: '#/components/schemas/RoutingCriteria'
          description: The criteria, which is the response quality difference, used
            to determine how incoming requests are routed to different models.
        fallbackModel:
          allOf:
          - $ref: '#/components/schemas/PromptRouterTargetModel'
          description: The default model to use when the routing criteria is not met.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: An array of key-value pairs to apply to this resource as tags.
            You can use tags to categorize and manage your Amazon Web Services resources.
      required:
      - promptRouterName
      - models
      - routingCriteria
      - fallbackModel
    CreatePromptRouterResponse:
      type: object
      properties:
        promptRouterArn:
          allOf:
          - $ref: '#/components/schemas/PromptRouterArn'
          description: The Amazon Resource Name (ARN) that uniquely identifies the
            prompt router.
    CreateProvisionedModelThroughputRequest:
      type: object
      properties:
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyToken'
          description: A unique, case-sensitive identifier to ensure that the API
            request completes no more than one time. If this token matches a previous
            request, Amazon Bedrock ignores the request, but does not return an error.
            For more information, see [Ensuring idempotency](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html)
            in the Amazon S3 User Guide.
        modelUnits:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          description: 'Number of model units to allocate. A model unit delivers a
            specific throughput level for the specified model. The throughput level
            of a model unit specifies the total number of input and output tokens
            that it can process and generate within a span of one minute. By default,
            your account has no model units for purchasing Provisioned Throughputs
            with commitment. You must first visit the [Amazon Web Services support
            center](https://console.aws.amazon.com/support/home#/case/create?issueType=service-limit-increase)
            to request MUs.


            For model unit quotas, see [Provisioned Throughput quotas](https://docs.aws.amazon.com/bedrock/latest/userguide/quotas.html#prov-thru-quotas)
            in the [Amazon Bedrock User Guide](https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html).


            For more information about what an MU specifies, contact your Amazon Web
            Services account manager.'
        provisionedModelName:
          allOf:
          - $ref: '#/components/schemas/ProvisionedModelName'
          description: The name for this Provisioned Throughput.
        modelId:
          allOf:
          - $ref: '#/components/schemas/ModelIdentifier'
          description: The Amazon Resource Name (ARN) or name of the model to associate
            with this Provisioned Throughput. For a list of models for which you can
            purchase Provisioned Throughput, see [Amazon Bedrock model IDs for purchasing
            Provisioned Throughput](https://docs.aws.amazon.com/bedrock/latest/userguide/model-ids.html#prov-throughput-models)
            in the [Amazon Bedrock User Guide](https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html).
        commitmentDuration:
          allOf:
          - $ref: '#/components/schemas/CommitmentDuration'
          description: 'The commitment duration requested for the Provisioned Throughput.
            Billing occurs hourly and is discounted for longer commitment terms. To
            request a no-commit Provisioned Throughput, omit this field.


            Custom models support all levels of commitment. To see which base models
            support no commitment, see [Supported regions and models for Provisioned
            Throughput](https://docs.aws.amazon.com/bedrock/latest/userguide/pt-supported.html)
            in the [Amazon Bedrock User Guide](https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html)'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: Tags to associate with this Provisioned Throughput.
      required:
      - modelUnits
      - provisionedModelName
      - modelId
    CreateProvisionedModelThroughputResponse:
      type: object
      properties:
        provisionedModelArn:
          allOf:
          - $ref: '#/components/schemas/ProvisionedModelArn'
          description: The Amazon Resource Name (ARN) for this Provisioned Throughput.
      required:
      - provisionedModelArn
    CustomMetricBedrockEvaluatorModel:
      type: object
      properties:
        modelIdentifier:
          allOf:
          - $ref: '#/components/schemas/EvaluatorModelIdentifier'
          description: The Amazon Resource Name (ARN) of the evaluator model for custom
            metrics. For a list of supported evaluator models, see [Evaluate model
            performance using another LLM as a judge](https://docs.aws.amazon.com/bedrock/latest/userguide/evaluation-judge.html)
            and [Evaluate the performance of RAG sources using Amazon Bedrock evaluations](https://docs.aws.amazon.com/bedrock/latest/userguide/evaluation-kb.html).
      required:
      - modelIdentifier
      description: Defines the model you want to evaluate custom metrics in an Amazon
        Bedrock evaluation job.
    CustomMetricBedrockEvaluatorModels:
      type: array
      items:
        $ref: '#/components/schemas/CustomMetricBedrockEvaluatorModel'
    CustomMetricDefinition:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/MetricName'
          description: The name for a custom metric. Names must be unique in your
            Amazon Web Services region.
        instructions:
          allOf:
          - $ref: '#/components/schemas/CustomMetricInstructions'
          description: The prompt for a custom metric that instructs the evaluator
            model how to rate the model or RAG source under evaluation.
        ratingScale:
          allOf:
          - $ref: '#/components/schemas/RatingScale'
          description: Defines the rating scale to be used for a custom metric. We
            recommend that you always define a ratings scale when creating a custom
            metric. If you don't define a scale, Amazon Bedrock won't be able to visually
            display the results of the evaluation in the console or calculate average
            values of numerical scores. For more information on specifying a rating
            scale, see [Specifying an output schema (rating scale)](https://docs.aws.amazon.com/bedrock/latest/userguide/model-evaluation-custom-metrics-prompt-formats.html#model-evaluation-custom-metrics-prompt-formats-schema).
      required:
      - name
      - instructions
      description: 'The definition of a custom metric for use in an Amazon Bedrock
        evaluation job. A custom metric definition includes a metric name, prompt
        (instructions) and optionally, a rating scale. Your prompt must include a
        task description and input variables. The required input variables are different
        for model-as-a-judge and RAG evaluations.


        For more information about how to define a custom metric in Amazon Bedrock,
        see [Create a prompt for a custom metrics (LLM-as-a-judge model evaluations)](https://docs.aws.amazon.com/bedrock/latest/userguide/model-evaluation-custom-metrics-prompt-formats.html)
        and [Create a prompt for a custom metrics (RAG evaluations)](https://docs.aws.amazon.com/bedrock/latest/userguide/kb-evaluation-custom-metrics-prompt-formats.html).'
    CustomMetricEvaluatorModelConfig:
      type: object
      properties:
        bedrockEvaluatorModels:
          allOf:
          - $ref: '#/components/schemas/CustomMetricBedrockEvaluatorModels'
          description: Defines the model you want to evaluate custom metrics in an
            Amazon Bedrock evaluation job.
      required:
      - bedrockEvaluatorModels
      description: Configuration of the evaluator model you want to use to evaluate
        custom metrics in an Amazon Bedrock evaluation job.
    CustomMetricInstructions:
      type: string
      minLength: 1
      maxLength: 5000
    CustomModelArn:
      type: string
      pattern: ^arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:custom-model/[a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}([a-z0-9-]{1,63}[.]){0,2}[a-z0-9-]{1,63}([:][a-z0-9-]{1,63}){0,2}/[a-z0-9]{12}$
      minLength: 20
      maxLength: 1011
    CustomModelName:
      type: string
      pattern: ^([0-9a-zA-Z][_-]?){1,63}$
      minLength: 1
      maxLength: 63
    CustomModelSummary:
      type: object
      properties:
        modelArn:
          allOf:
          - $ref: '#/components/schemas/CustomModelArn'
          description: The Amazon Resource Name (ARN) of the custom model.
        modelName:
          allOf:
          - $ref: '#/components/schemas/CustomModelName'
          description: The name of the custom model.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Creation time of the model.
        baseModelArn:
          allOf:
          - $ref: '#/components/schemas/ModelArn'
          description: The base model Amazon Resource Name (ARN).
        baseModelName:
          allOf:
          - $ref: '#/components/schemas/ModelName'
          description: The base model name.
        customizationType:
          allOf:
          - $ref: '#/components/schemas/CustomizationType'
          description: Specifies whether to carry out continued pre-training of a
            model or whether to fine-tune it. For more information, see [Custom models](https://docs.aws.amazon.com/bedrock/latest/userguide/custom-models.html).
        ownerAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The unique identifier of the account that owns the model.
      required:
      - modelArn
      - modelName
      - creationTime
      - baseModelArn
      - baseModelName
      description: Summary information for a custom model.
    CustomModelSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/CustomModelSummary'
    CustomModelUnits:
      type: object
      properties:
        customModelUnitsPerModelCopy:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of custom model units used to host a model copy.
        customModelUnitsVersion:
          allOf:
          - $ref: '#/components/schemas/CustomModelUnitsVersion'
          description: The version of the custom model unit. Use to determine the
            billing rate for the custom model unit.
      description: 'A `CustomModelUnit` (CMU) is an abstract view of the hardware
        utilization that Amazon Bedrock needs to host a single copy of your custom
        model. A model copy represents a single instance of your imported model that
        is ready to serve inference requests. Amazon Bedrock determines the number
        of custom model units that a model copy needs when you import the custom model.


        You can use `CustomModelUnits` to estimate the cost of running your custom
        model. For more information, see Calculate the cost of running a custom model
        in the Amazon Bedrock user guide.'
    CustomModelUnitsVersion:
      type: string
      pattern: ^v\d+.\d+$
    CustomizationConfig:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/DistillationConfig'
        description: |-
          The distillation configuration for the custom model.
      description: |-
        A model customization configuration
    CustomizationType:
      type: string
      enum:
      - FINE_TUNING
      - CONTINUED_PRE_TRAINING
      - DISTILLATION
    DeleteCustomModelRequest:
      type: object
      properties:
        modelIdentifier:
          allOf:
          - $ref: '#/components/schemas/ModelIdentifier'
          description: Name of the model to delete.
      required:
      - modelIdentifier
    DeleteCustomModelResponse:
      type: object
      properties: {}
    DeleteGuardrailRequest:
      type: object
      properties:
        guardrailIdentifier:
          allOf:
          - $ref: '#/components/schemas/GuardrailIdentifier'
          description: The unique identifier of the guardrail. This can be an ID or
            the ARN.
        guardrailVersion:
          allOf:
          - $ref: '#/components/schemas/GuardrailNumericalVersion'
          description: The version of the guardrail.
      required:
      - guardrailIdentifier
    DeleteGuardrailResponse:
      type: object
      properties: {}
    DeleteImportedModelRequest:
      type: object
      properties:
        modelIdentifier:
          allOf:
          - $ref: '#/components/schemas/ImportedModelIdentifier'
          description: Name of the imported model to delete.
      required:
      - modelIdentifier
    DeleteImportedModelResponse:
      type: object
      properties: {}
    DeleteInferenceProfileRequest:
      type: object
      properties:
        inferenceProfileIdentifier:
          allOf:
          - $ref: '#/components/schemas/InferenceProfileIdentifier'
          description: The Amazon Resource Name (ARN) or ID of the application inference
            profile to delete.
      required:
      - inferenceProfileIdentifier
    DeleteInferenceProfileResponse:
      type: object
      properties: {}
    DeleteMarketplaceModelEndpointRequest:
      type: object
      properties:
        endpointArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the endpoint you want to
            delete.
      required:
      - endpointArn
    DeleteMarketplaceModelEndpointResponse:
      type: object
      properties: {}
    DeleteModelInvocationLoggingConfigurationRequest:
      type: object
      properties: {}
    DeleteModelInvocationLoggingConfigurationResponse:
      type: object
      properties: {}
    DeletePromptRouterRequest:
      type: object
      properties:
        promptRouterArn:
          allOf:
          - $ref: '#/components/schemas/PromptRouterArn'
          description: The Amazon Resource Name (ARN) of the prompt router to delete.
      required:
      - promptRouterArn
    DeletePromptRouterResponse:
      type: object
      properties: {}
    DeleteProvisionedModelThroughputRequest:
      type: object
      properties:
        provisionedModelId:
          allOf:
          - $ref: '#/components/schemas/ProvisionedModelId'
          description: The Amazon Resource Name (ARN) or name of the Provisioned Throughput.
      required:
      - provisionedModelId
    DeleteProvisionedModelThroughputResponse:
      type: object
      properties: {}
    DeregisterMarketplaceModelEndpointRequest:
      type: object
      properties:
        endpointArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the endpoint you want to
            deregister.
      required:
      - endpointArn
    DeregisterMarketplaceModelEndpointResponse:
      type: object
      properties: {}
    DistillationConfig:
      type: object
      properties:
        teacherModelConfig:
          allOf:
          - $ref: '#/components/schemas/TeacherModelConfig'
          description: The teacher model configuration.
      required:
      - teacherModelConfig
      description: Settings for distilling a foundation model into a smaller and more
        efficient model.
    EndpointConfig:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/SageMakerEndpoint'
        description: |-
          The configuration specific to Amazon SageMaker for the endpoint.
      description: |-
        Specifies the configuration for the endpoint.
    EndpointName:
      type: string
      minLength: 1
      maxLength: 30
    ErrorMessage:
      type: string
      maxLength: 2048
    ErrorMessages:
      type: array
      items:
        $ref: '#/components/schemas/ErrorMessage'
    EvaluationBedrockKnowledgeBaseIdentifiers:
      type: array
      items:
        $ref: '#/components/schemas/KnowledgeBaseId'
    EvaluationBedrockModel:
      type: object
      properties:
        modelIdentifier:
          allOf:
          - $ref: '#/components/schemas/EvaluationBedrockModelIdentifier'
          description: The ARN of the Amazon Bedrock model or inference profile specified.
        inferenceParams:
          allOf:
          - $ref: '#/components/schemas/EvaluationModelInferenceParams'
          description: Each Amazon Bedrock support different inference parameters
            that change how the model behaves during inference.
        performanceConfig:
          allOf:
          - $ref: '#/components/schemas/PerformanceConfiguration'
          description: Specifies performance settings for the model or inference profile.
      required:
      - modelIdentifier
      description: 'Contains the ARN of the Amazon Bedrock model or [inference profile](https://docs.aws.amazon.com/bedrock/latest/userguide/cross-region-inference.html)
        specified in your evaluation job. Each Amazon Bedrock model supports different
        `inferenceParams`. To learn more about supported inference parameters for
        Amazon Bedrock models, see [Inference parameters for foundation models](https://docs.aws.amazon.com/bedrock/latest/userguide/model-parameters.html).


        The `inferenceParams` are specified using JSON. To successfully insert JSON
        as string make sure that all quotations are properly escaped. For example,
        `"temperature":"0.25"` key value pair would need to be formatted as `\"temperature\":\"0.25\"`
        to successfully accepted in the request.'
    EvaluationBedrockModelIdentifier:
      type: string
      pattern: ^(arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:((:foundation-model/[a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}([.:]?[a-z0-9-]{1,63}))|([0-9]{12}:provisioned-model/[a-z0-9]{12})|([0-9]{12}:imported-model/[a-z0-9]{12})|([0-9]{12}:application-inference-profile/[a-z0-9]{12})|([0-9]{12}:inference-profile/(([a-z-]{2,8}.)[a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}([.:]?[a-z0-9-]{1,63})))|([0-9]{12}:(default-prompt-router|prompt-router)/[a-zA-Z0-9-:.]+)))|(([a-z]{2,4}[.]{1})([a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}([.:]?[a-z0-9-]{1,63})))|([a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}([.:]?[a-z0-9-]{1,63}))|arn:aws(-[^:]+)?:sagemaker:[a-z0-9-]{1,20}:[0-9]{12}:endpoint/[a-z0-9-]{1,63}$
      minLength: 1
      maxLength: 2048
    EvaluationBedrockModelIdentifiers:
      type: array
      items:
        $ref: '#/components/schemas/EvaluationBedrockModelIdentifier'
    EvaluationConfig:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/AutomatedEvaluationConfig'
        description: |-
          Contains the configuration details of an automated evaluation job that computes metrics.
      - allOf:
        - $ref: '#/components/schemas/HumanEvaluationConfig'
        description: |-
          Contains the configuration details of an evaluation job that uses human workers.
      description: |-
        The configuration details of either an automated or human-based evaluation job.
    EvaluationDataset:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/EvaluationDatasetName'
          description: Used to specify supported built-in prompt datasets. Valid values
            are `Builtin.Bold`, `Builtin.BoolQ`, `Builtin.NaturalQuestions`, `Builtin.Gigaword`,
            `Builtin.RealToxicityPrompts`, `Builtin.TriviaQA`, `Builtin.T-Rex`, `Builtin.WomensEcommerceClothingReviews`
            and `Builtin.Wikitext2`.
        datasetLocation:
          allOf:
          - $ref: '#/components/schemas/EvaluationDatasetLocation'
          description: For custom prompt datasets, you must specify the location in
            Amazon S3 where the prompt dataset is saved.
      required:
      - name
      description: Used to specify the name of a built-in prompt dataset and optionally,
        the Amazon S3 bucket where a custom prompt dataset is saved.
    EvaluationDatasetLocation:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/S3Uri'
        description: |-
          The S3 URI of the S3 bucket specified in the job.
      description: |-
        The location in Amazon S3 where your prompt dataset is stored.
    EvaluationDatasetMetricConfig:
      type: object
      properties:
        taskType:
          allOf:
          - $ref: '#/components/schemas/EvaluationTaskType'
          description: The the type of task you want to evaluate for your evaluation
            job. This applies only to model evaluation jobs and is ignored for knowledge
            base evaluation jobs.
        dataset:
          allOf:
          - $ref: '#/components/schemas/EvaluationDataset'
          description: Specifies the prompt dataset.
        metricNames:
          allOf:
          - $ref: '#/components/schemas/EvaluationMetricNames'
          description: 'The names of the metrics you want to use for your evaluation
            job.


            For knowledge base evaluation jobs that evaluate retrieval only, valid
            values are "`Builtin.ContextRelevance`", "`Builtin.ContextCoverage`".


            For knowledge base evaluation jobs that evaluate retrieval with response
            generation, valid values are "`Builtin.Correctness`", "`Builtin.Completeness`",
            "`Builtin.Helpfulness`", "`Builtin.LogicalCoherence`", "`Builtin.Faithfulness`",
            "`Builtin.Harmfulness`", "`Builtin.Stereotyping`", "`Builtin.Refusal`".


            For automated model evaluation jobs, valid values are "`Builtin.Accuracy`",
            "`Builtin.Robustness`", and "`Builtin.Toxicity`". In model evaluation
            jobs that use a LLM as judge you can specify "`Builtin.Correctness`",
            "`Builtin.Completeness"`, "`Builtin.Faithfulness"`, "`Builtin.Helpfulness`",
            "`Builtin.Coherence`", "`Builtin.Relevance`", "`Builtin.FollowingInstructions`",
            "`Builtin.ProfessionalStyleAndTone`", You can also specify the following
            responsible AI related metrics only for model evaluation job that use
            a LLM as judge "`Builtin.Harmfulness`", "`Builtin.Stereotyping`", and
            "`Builtin.Refusal`".


            For human-based model evaluation jobs, the list of strings must match
            the `name` parameter specified in `HumanEvaluationCustomMetric`.'
      required:
      - taskType
      - dataset
      - metricNames
      description: Defines the prompt datasets, built-in metric names and custom metric
        names, and the task type.
    EvaluationDatasetMetricConfigs:
      type: array
      items:
        $ref: '#/components/schemas/EvaluationDatasetMetricConfig'
    EvaluationDatasetName:
      type: string
      pattern: ^[0-9a-zA-Z-_.]+$
      minLength: 1
      maxLength: 63
    EvaluationInferenceConfig:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/EvaluationModelConfigs'
        description: |-
          Specifies the inference models.
      - allOf:
        - $ref: '#/components/schemas/RagConfigs'
        description: |-
          Contains the configuration details of the inference for a knowledge base evaluation job, including either the retrieval only configuration or the retrieval with response generation configuration.
      description: |-
        The configuration details of the inference model for an evaluation job.

        For automated model evaluation jobs, only a single model is supported.

        For human-based model evaluation jobs, your annotator can compare the responses for up to two different models.
    EvaluationInferenceConfigSummary:
      type: object
      properties:
        modelConfigSummary:
          allOf:
          - $ref: '#/components/schemas/EvaluationModelConfigSummary'
          description: A summary of the models used in an Amazon Bedrock model evaluation
            job. These resources can be models in Amazon Bedrock or models outside
            of Amazon Bedrock that you use to generate your own inference response
            data.
        ragConfigSummary:
          allOf:
          - $ref: '#/components/schemas/EvaluationRagConfigSummary'
          description: A summary of the RAG resources used in an Amazon Bedrock Knowledge
            Base evaluation job. These resources can be Knowledge Bases in Amazon
            Bedrock or RAG sources outside of Amazon Bedrock that you use to generate
            your own inference response data.
      description: Identifies the models, Knowledge Bases, or other RAG sources evaluated
        in a model or Knowledge Base evaluation job.
    EvaluationJobArn:
      type: string
      pattern: ^arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:evaluation-job/[a-z0-9]{12}$
      maxLength: 1011
    EvaluationJobDescription:
      type: string
      pattern: ^.+$
      minLength: 1
      maxLength: 200
    EvaluationJobIdentifier:
      type: string
      pattern: ^(arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:evaluation-job/[a-z0-9]{12})$
      maxLength: 1011
    EvaluationJobIdentifiers:
      type: array
      items:
        $ref: '#/components/schemas/EvaluationJobIdentifier'
    EvaluationJobName:
      type: string
      pattern: ^[a-z0-9](-*[a-z0-9]){0,62}$
      minLength: 1
      maxLength: 63
    EvaluationJobStatus:
      type: string
      enum:
      - InProgress
      - Completed
      - Failed
      - Stopping
      - Stopped
      - Deleting
    EvaluationJobType:
      type: string
      enum:
      - Human
      - Automated
    EvaluationMetricDescription:
      type: string
      pattern: ^.+$
      minLength: 1
      maxLength: 63
    EvaluationMetricName:
      type: string
      pattern: ^[0-9a-zA-Z-_.]+$
      minLength: 1
      maxLength: 63
    EvaluationMetricNames:
      type: array
      items:
        $ref: '#/components/schemas/EvaluationMetricName'
    EvaluationModelConfig:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/EvaluationBedrockModel'
        description: |-
          Defines the Amazon Bedrock model or inference profile and inference parameters you want used.
      - allOf:
        - $ref: '#/components/schemas/EvaluationPrecomputedInferenceSource'
        description: |-
          Defines the model used to generate inference response data for a model evaluation job where you provide your own inference response data.
      description: |-
        Defines the models used in the model evaluation job.
    EvaluationModelConfigSummary:
      type: object
      properties:
        bedrockModelIdentifiers:
          allOf:
          - $ref: '#/components/schemas/EvaluationBedrockModelIdentifiers'
          description: The Amazon Resource Names (ARNs) of the models used for the
            evaluation job.
        precomputedInferenceSourceIdentifiers:
          allOf:
          - $ref: '#/components/schemas/EvaluationPrecomputedInferenceSourceIdentifiers'
          description: A label that identifies the models used for a model evaluation
            job where you provide your own inference response data.
      description: A summary of the models used in an Amazon Bedrock model evaluation
        job. These resources can be models in Amazon Bedrock or models outside of
        Amazon Bedrock that you use to generate your own inference response data.
    EvaluationModelConfigs:
      type: array
      items:
        $ref: '#/components/schemas/EvaluationModelConfig'
    EvaluationModelInferenceParams:
      type: string
      minLength: 1
      maxLength: 1023
    EvaluationOutputDataConfig:
      type: object
      properties:
        s3Uri:
          allOf:
          - $ref: '#/components/schemas/S3Uri'
          description: The Amazon S3 URI where the results of the evaluation job are
            saved.
      required:
      - s3Uri
      description: The Amazon S3 location where the results of your evaluation job
        are saved.
    EvaluationPrecomputedInferenceSource:
      type: object
      properties:
        inferenceSourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/EvaluationPrecomputedInferenceSourceIdentifier'
          description: A label that identifies a model used in a model evaluation
            job where you provide your own inference response data.
      required:
      - inferenceSourceIdentifier
      description: A summary of a model used for a model evaluation job where you
        provide your own inference response data.
    EvaluationPrecomputedInferenceSourceIdentifier:
      type: string
      pattern: ^[a-zA-Z0-9]([a-zA-Z0-9._-]){0,255}$
      minLength: 1
      maxLength: 256
    EvaluationPrecomputedInferenceSourceIdentifiers:
      type: array
      items:
        $ref: '#/components/schemas/EvaluationPrecomputedInferenceSourceIdentifier'
    EvaluationPrecomputedRagSourceConfig:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/EvaluationPrecomputedRetrieveSourceConfig'
        description: |-
          A summary of a RAG source used for a retrieve-only Knowledge Base evaluation job where you provide your own inference response data.
      - allOf:
        - $ref: '#/components/schemas/EvaluationPrecomputedRetrieveAndGenerateSourceConfig'
        description: |-
          A summary of a RAG source used for a retrieve-and-generate Knowledge Base evaluation job where you provide your own inference response data.
      description: |-
        A summary of a RAG source used for a Knowledge Base evaluation job where you provide your own inference response data.
    EvaluationPrecomputedRagSourceIdentifier:
      type: string
      pattern: ^[a-zA-Z0-9]([a-zA-Z0-9._-]){0,255}$
      minLength: 1
      maxLength: 256
    EvaluationPrecomputedRagSourceIdentifiers:
      type: array
      items:
        $ref: '#/components/schemas/EvaluationPrecomputedRagSourceIdentifier'
    EvaluationPrecomputedRetrieveAndGenerateSourceConfig:
      type: object
      properties:
        ragSourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/EvaluationPrecomputedRagSourceIdentifier'
          description: A label that identifies the RAG source used for a retrieve-and-generate
            Knowledge Base evaluation job where you provide your own inference response
            data.
      required:
      - ragSourceIdentifier
      description: A summary of a RAG source used for a retrieve-and-generate Knowledge
        Base evaluation job where you provide your own inference response data.
    EvaluationPrecomputedRetrieveSourceConfig:
      type: object
      properties:
        ragSourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/EvaluationPrecomputedRagSourceIdentifier'
          description: A label that identifies the RAG source used for a retrieve-only
            Knowledge Base evaluation job where you provide your own inference response
            data.
      required:
      - ragSourceIdentifier
      description: A summary of a RAG source used for a retrieve-only Knowledge Base
        evaluation job where you provide your own inference response data.
    EvaluationRagConfigSummary:
      type: object
      properties:
        bedrockKnowledgeBaseIdentifiers:
          allOf:
          - $ref: '#/components/schemas/EvaluationBedrockKnowledgeBaseIdentifiers'
          description: The Amazon Resource Names (ARNs) of the Knowledge Base resources
            used for a Knowledge Base evaluation job where Amazon Bedrock invokes
            the Knowledge Base for you.
        precomputedRagSourceIdentifiers:
          allOf:
          - $ref: '#/components/schemas/EvaluationPrecomputedRagSourceIdentifiers'
          description: A label that identifies the RAG sources used for a Knowledge
            Base evaluation job where you provide your own inference response data.
      description: A summary of the RAG resources used in an Amazon Bedrock Knowledge
        Base evaluation job. These resources can be Knowledge Bases in Amazon Bedrock
        or RAG sources outside of Amazon Bedrock that you use to generate your own
        inference response data.
    EvaluationRatingMethod:
      type: string
      pattern: ^[0-9a-zA-Z-_]+$
      minLength: 1
      maxLength: 100
    EvaluationSummaries:
      type: array
      items:
        $ref: '#/components/schemas/EvaluationSummary'
    EvaluationSummary:
      type: object
      properties:
        jobArn:
          allOf:
          - $ref: '#/components/schemas/EvaluationJobArn'
          description: The Amazon Resource Name (ARN) of the evaluation job.
        jobName:
          allOf:
          - $ref: '#/components/schemas/EvaluationJobName'
          description: The name for the evaluation job.
        status:
          allOf:
          - $ref: '#/components/schemas/EvaluationJobStatus'
          description: The current status of the evaluation job.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the evaluation job was created.
        jobType:
          allOf:
          - $ref: '#/components/schemas/EvaluationJobType'
          description: Specifies whether the evaluation job is automated or human-based.
        evaluationTaskTypes:
          allOf:
          - $ref: '#/components/schemas/EvaluationTaskTypes'
          description: The type of task for model evaluation.
        modelIdentifiers:
          allOf:
          - $ref: '#/components/schemas/EvaluationBedrockModelIdentifiers'
          description: The Amazon Resource Names (ARNs) of the model(s) used for the
            evaluation job.
        ragIdentifiers:
          allOf:
          - $ref: '#/components/schemas/EvaluationBedrockKnowledgeBaseIdentifiers'
          description: The Amazon Resource Names (ARNs) of the knowledge base resources
            used for a knowledge base evaluation job.
        evaluatorModelIdentifiers:
          allOf:
          - $ref: '#/components/schemas/EvaluatorModelIdentifiers'
          description: The Amazon Resource Names (ARNs) of the models used to compute
            the metrics for a knowledge base evaluation job.
        customMetricsEvaluatorModelIdentifiers:
          allOf:
          - $ref: '#/components/schemas/EvaluatorModelIdentifiers'
          description: The Amazon Resource Names (ARNs) of the models used to compute
            custom metrics in an Amazon Bedrock evaluation job.
        inferenceConfigSummary:
          allOf:
          - $ref: '#/components/schemas/EvaluationInferenceConfigSummary'
          description: Identifies the models, Knowledge Bases, or other RAG sources
            evaluated in a model or Knowledge Base evaluation job.
        applicationType:
          allOf:
          - $ref: '#/components/schemas/ApplicationType'
          description: Specifies whether the evaluation job is for evaluating a model
            or evaluating a knowledge base (retrieval and response generation).
      required:
      - jobArn
      - jobName
      - status
      - creationTime
      - jobType
      - evaluationTaskTypes
      description: Summary information of an evaluation job.
    EvaluationTaskType:
      type: string
      enum:
      - Summarization
      - Classification
      - QuestionAndAnswer
      - Generation
      - Custom
    EvaluationTaskTypes:
      type: array
      items:
        $ref: '#/components/schemas/EvaluationTaskType'
    EvaluatorModelConfig:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/BedrockEvaluatorModels'
        description: |-
          The evaluator model used in knowledge base evaluation job or in model evaluation job that use a model as judge. This model computes all evaluation related metrics.
      description: |-
        Specifies the model configuration for the evaluator model. `EvaluatorModelConfig` is required for evaluation jobs that use a knowledge base or in model evaluation job that use a model as judge. This model computes all evaluation related metrics.
    EvaluatorModelIdentifier:
      type: string
      pattern: ^(arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:((:foundation-model/[a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}([.:]?[a-z0-9-]{1,63}))|([0-9]{12}:inference-profile/(([a-z-]{2,8}.)[a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}([.:]?[a-z0-9-]{1,63})))))$|(^[a-z0-9-]+[.][a-z0-9-]+([.][a-z0-9-]+)*(:[a-z0-9-]+)?$)|^[a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}([a-z0-9-]{1,63}[.]){0,2}[a-z0-9-]{1,63}([:][a-z0-9-]{1,63}){0,2}(/[a-z0-9]{12}|)$
      minLength: 1
      maxLength: 2048
    EvaluatorModelIdentifiers:
      type: array
      items:
        $ref: '#/components/schemas/EvaluatorModelIdentifier'
    ExternalSource:
      type: object
      properties:
        sourceType:
          allOf:
          - $ref: '#/components/schemas/ExternalSourceType'
          description: The source type of the external source wrapper object.
        s3Location:
          allOf:
          - $ref: '#/components/schemas/S3ObjectDoc'
          description: The S3 location of the external source wrapper object.
        byteContent:
          allOf:
          - $ref: '#/components/schemas/ByteContentDoc'
          description: The identifier, content type, and data of the external source
            wrapper object.
      required:
      - sourceType
      description: The unique external source of the content contained in the wrapper
        object.
    ExternalSourceType:
      type: string
      enum:
      - S3
      - BYTE_CONTENT
    ExternalSources:
      type: array
      items:
        $ref: '#/components/schemas/ExternalSource'
    ExternalSourcesGenerationConfiguration:
      type: object
      properties:
        promptTemplate:
          allOf:
          - $ref: '#/components/schemas/PromptTemplate'
          description: Contains the template for the prompt for the external source
            wrapper object.
        guardrailConfiguration:
          allOf:
          - $ref: '#/components/schemas/GuardrailConfiguration'
          description: Configuration details for the guardrail.
        kbInferenceConfig:
          allOf:
          - $ref: '#/components/schemas/KbInferenceConfig'
          description: Configuration details for inference when using `RetrieveAndGenerate`
            to generate responses while using an external source.
        additionalModelRequestFields:
          allOf:
          - $ref: '#/components/schemas/AdditionalModelRequestFields'
          description: Additional model parameters and their corresponding values
            not included in the text inference configuration for an external source.
            Takes in custom model parameters specific to the language model being
            used.
      description: The response generation configuration of the external source wrapper
        object.
    ExternalSourcesRetrieveAndGenerateConfiguration:
      type: object
      properties:
        modelArn:
          allOf:
          - $ref: '#/components/schemas/BedrockModelArn'
          description: The Amazon Resource Name (ARN) of the foundation model or [inference
            profile](https://docs.aws.amazon.com/bedrock/latest/userguide/cross-region-inference.html)
            used to generate responses.
        sources:
          allOf:
          - $ref: '#/components/schemas/ExternalSources'
          description: The document for the external source wrapper object in the
            `retrieveAndGenerate` function.
        generationConfiguration:
          allOf:
          - $ref: '#/components/schemas/ExternalSourcesGenerationConfiguration'
          description: Contains configurations details for response generation based
            on retrieved text chunks.
      required:
      - modelArn
      - sources
      description: The configuration of the external source wrapper object in the
        `retrieveAndGenerate` function.
    FilterAttribute:
      type: object
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/FilterKey'
          description: The name of metadata attribute/field, which must match the
            name in your data source/document metadata.
        value:
          allOf:
          - $ref: '#/components/schemas/FilterValue'
          description: The value of the metadata attribute/field.
      required:
      - key
      - value
      description: Specifies the name of the metadata attribute/field to apply filters.
        You must match the name of the attribute/field in your data source/document
        metadata.
    FilterKey:
      type: string
      minLength: 1
      maxLength: 100
    FilterValue:
      type: object
      additionalProperties: true
    FineTuningJobStatus:
      type: string
      enum:
      - InProgress
      - Completed
      - Failed
      - Stopping
      - Stopped
    FoundationModelArn:
      type: string
      pattern: ^arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}::foundation-model/[a-z0-9-]{1,63}[.]{1}([a-z0-9-]{1,63}[.]){0,2}[a-z0-9-]{1,63}([:][a-z0-9-]{1,63}){0,2}$
    FoundationModelDetails:
      type: object
      properties:
        modelArn:
          allOf:
          - $ref: '#/components/schemas/FoundationModelArn'
          description: The model Amazon Resource Name (ARN).
        modelId:
          allOf:
          - $ref: '#/components/schemas/BedrockModelId'
          description: The model identifier.
        modelName:
          allOf:
          - $ref: '#/components/schemas/BrandedName'
          description: The model name.
        providerName:
          allOf:
          - $ref: '#/components/schemas/BrandedName'
          description: The model's provider name.
        inputModalities:
          allOf:
          - $ref: '#/components/schemas/ModelModalityList'
          description: The input modalities that the model supports.
        outputModalities:
          allOf:
          - $ref: '#/components/schemas/ModelModalityList'
          description: The output modalities that the model supports.
        responseStreamingSupported:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether the model supports streaming.
        customizationsSupported:
          allOf:
          - $ref: '#/components/schemas/ModelCustomizationList'
          description: The customization that the model supports.
        inferenceTypesSupported:
          allOf:
          - $ref: '#/components/schemas/InferenceTypeList'
          description: The inference types that the model supports.
        modelLifecycle:
          allOf:
          - $ref: '#/components/schemas/FoundationModelLifecycle'
          description: Contains details about whether a model version is available
            or deprecated
      required:
      - modelArn
      - modelId
      description: Information about a foundation model.
    FoundationModelLifecycle:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/FoundationModelLifecycleStatus'
          description: Specifies whether a model version is available (`ACTIVE`) or
            deprecated (`LEGACY`.
      required:
      - status
      description: Details about whether a model version is available or deprecated.
    FoundationModelLifecycleStatus:
      type: string
      enum:
      - ACTIVE
      - LEGACY
    FoundationModelSummary:
      type: object
      properties:
        modelArn:
          allOf:
          - $ref: '#/components/schemas/FoundationModelArn'
          description: The Amazon Resource Name (ARN) of the foundation model.
        modelId:
          allOf:
          - $ref: '#/components/schemas/BedrockModelId'
          description: The model ID of the foundation model.
        modelName:
          allOf:
          - $ref: '#/components/schemas/BrandedName'
          description: The name of the model.
        providerName:
          allOf:
          - $ref: '#/components/schemas/BrandedName'
          description: The model's provider name.
        inputModalities:
          allOf:
          - $ref: '#/components/schemas/ModelModalityList'
          description: The input modalities that the model supports.
        outputModalities:
          allOf:
          - $ref: '#/components/schemas/ModelModalityList'
          description: The output modalities that the model supports.
        responseStreamingSupported:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether the model supports streaming.
        customizationsSupported:
          allOf:
          - $ref: '#/components/schemas/ModelCustomizationList'
          description: Whether the model supports fine-tuning or continual pre-training.
        inferenceTypesSupported:
          allOf:
          - $ref: '#/components/schemas/InferenceTypeList'
          description: The inference types that the model supports.
        modelLifecycle:
          allOf:
          - $ref: '#/components/schemas/FoundationModelLifecycle'
          description: Contains details about whether a model version is available
            or deprecated.
      required:
      - modelArn
      - modelId
      description: Summary information for a foundation model.
    FoundationModelSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/FoundationModelSummary'
    GenerationConfiguration:
      type: object
      properties:
        promptTemplate:
          allOf:
          - $ref: '#/components/schemas/PromptTemplate'
          description: Contains the template for the prompt that's sent to the model
            for response generation.
        guardrailConfiguration:
          allOf:
          - $ref: '#/components/schemas/GuardrailConfiguration'
          description: Contains configuration details for the guardrail.
        kbInferenceConfig:
          allOf:
          - $ref: '#/components/schemas/KbInferenceConfig'
          description: Contains configuration details for inference for knowledge
            base retrieval and response generation.
        additionalModelRequestFields:
          allOf:
          - $ref: '#/components/schemas/AdditionalModelRequestFields'
          description: Additional model parameters and corresponding values not included
            in the `textInferenceConfig` structure for a knowledge base. This allows
            you to provide custom model parameters specific to the language model
            being used.
      description: The configuration details for response generation based on retrieved
        text chunks.
    GetCustomModelRequest:
      type: object
      properties:
        modelIdentifier:
          allOf:
          - $ref: '#/components/schemas/ModelIdentifier'
          description: Name or Amazon Resource Name (ARN) of the custom model.
      required:
      - modelIdentifier
    GetCustomModelResponse:
      type: object
      properties:
        modelArn:
          allOf:
          - $ref: '#/components/schemas/ModelArn'
          description: Amazon Resource Name (ARN) associated with this model.
        modelName:
          allOf:
          - $ref: '#/components/schemas/CustomModelName'
          description: Model name associated with this model.
        jobName:
          allOf:
          - $ref: '#/components/schemas/JobName'
          description: Job name associated with this model.
        jobArn:
          allOf:
          - $ref: '#/components/schemas/ModelCustomizationJobArn'
          description: Job Amazon Resource Name (ARN) associated with this model.
        baseModelArn:
          allOf:
          - $ref: '#/components/schemas/ModelArn'
          description: Amazon Resource Name (ARN) of the base model.
        customizationType:
          allOf:
          - $ref: '#/components/schemas/CustomizationType'
          description: The type of model customization.
        modelKmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          description: The custom model is encrypted at rest using this key.
        hyperParameters:
          allOf:
          - $ref: '#/components/schemas/ModelCustomizationHyperParameters'
          description: Hyperparameter values associated with this model. For details
            on the format for different models, see [Custom model hyperparameters](https://docs.aws.amazon.com/bedrock/latest/userguide/custom-models-hp.html).
        trainingDataConfig:
          allOf:
          - $ref: '#/components/schemas/TrainingDataConfig'
          description: Contains information about the training dataset.
        validationDataConfig:
          allOf:
          - $ref: '#/components/schemas/ValidationDataConfig'
          description: Contains information about the validation dataset.
        outputDataConfig:
          allOf:
          - $ref: '#/components/schemas/OutputDataConfig'
          description: Output data configuration associated with this custom model.
        trainingMetrics:
          allOf:
          - $ref: '#/components/schemas/TrainingMetrics'
          description: Contains training metrics from the job creation.
        validationMetrics:
          allOf:
          - $ref: '#/components/schemas/ValidationMetrics'
          description: The validation metrics from the job creation.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Creation time of the model.
        customizationConfig:
          allOf:
          - $ref: '#/components/schemas/CustomizationConfig'
          description: The customization configuration for the custom model.
      required:
      - modelArn
      - modelName
      - jobArn
      - baseModelArn
      - trainingDataConfig
      - outputDataConfig
      - creationTime
    GetEvaluationJobRequest:
      type: object
      properties:
        jobIdentifier:
          allOf:
          - $ref: '#/components/schemas/EvaluationJobIdentifier'
          description: The Amazon Resource Name (ARN) of the evaluation job you want
            get information on.
      required:
      - jobIdentifier
    GetEvaluationJobResponse:
      type: object
      properties:
        jobName:
          allOf:
          - $ref: '#/components/schemas/EvaluationJobName'
          description: The name for the evaluation job.
        status:
          allOf:
          - $ref: '#/components/schemas/EvaluationJobStatus'
          description: The current status of the evaluation job.
        jobArn:
          allOf:
          - $ref: '#/components/schemas/EvaluationJobArn'
          description: The Amazon Resource Name (ARN) of the evaluation job.
        jobDescription:
          allOf:
          - $ref: '#/components/schemas/EvaluationJobDescription'
          description: The description of the evaluation job.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of the IAM service role used
            in the evaluation job.
        customerEncryptionKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKeyId'
          description: The Amazon Resource Name (ARN) of the customer managed encryption
            key specified when the evaluation job was created.
        jobType:
          allOf:
          - $ref: '#/components/schemas/EvaluationJobType'
          description: Specifies whether the evaluation job is automated or human-based.
        applicationType:
          allOf:
          - $ref: '#/components/schemas/ApplicationType'
          description: Specifies whether the evaluation job is for evaluating a model
            or evaluating a knowledge base (retrieval and response generation).
        evaluationConfig:
          allOf:
          - $ref: '#/components/schemas/EvaluationConfig'
          description: Contains the configuration details of either an automated or
            human-based evaluation job.
        inferenceConfig:
          allOf:
          - $ref: '#/components/schemas/EvaluationInferenceConfig'
          description: Contains the configuration details of the inference model used
            for the evaluation job.
        outputDataConfig:
          allOf:
          - $ref: '#/components/schemas/EvaluationOutputDataConfig'
          description: Contains the configuration details of the Amazon S3 bucket
            for storing the results of the evaluation job.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the evaluation job was created.
        lastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the evaluation job was last modified.
        failureMessages:
          allOf:
          - $ref: '#/components/schemas/ErrorMessages'
          description: A list of strings that specify why the evaluation job failed
            to create.
      required:
      - jobName
      - status
      - jobArn
      - roleArn
      - jobType
      - evaluationConfig
      - inferenceConfig
      - outputDataConfig
      - creationTime
    GetFoundationModelRequest:
      type: object
      properties:
        modelIdentifier:
          allOf:
          - $ref: '#/components/schemas/ModelIdentifier'
          description: The model identifier.
      required:
      - modelIdentifier
    GetFoundationModelResponse:
      type: object
      properties:
        modelDetails:
          allOf:
          - $ref: '#/components/schemas/FoundationModelDetails'
          description: Information about the foundation model.
    GetGuardrailRequest:
      type: object
      properties:
        guardrailIdentifier:
          allOf:
          - $ref: '#/components/schemas/GuardrailIdentifier'
          description: The unique identifier of the guardrail for which to get details.
            This can be an ID or the ARN.
        guardrailVersion:
          allOf:
          - $ref: '#/components/schemas/GuardrailVersion'
          description: The version of the guardrail for which to get details. If you
            don't specify a version, the response returns details for the `DRAFT`
            version.
      required:
      - guardrailIdentifier
    GetGuardrailResponse:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/GuardrailName'
          description: The name of the guardrail.
        description:
          allOf:
          - $ref: '#/components/schemas/GuardrailDescription'
          description: The description of the guardrail.
        guardrailId:
          allOf:
          - $ref: '#/components/schemas/GuardrailId'
          description: The unique identifier of the guardrail.
        guardrailArn:
          allOf:
          - $ref: '#/components/schemas/GuardrailArn'
          description: The ARN of the guardrail.
        version:
          allOf:
          - $ref: '#/components/schemas/GuardrailVersion'
          description: The version of the guardrail.
        status:
          allOf:
          - $ref: '#/components/schemas/GuardrailStatus'
          description: The status of the guardrail.
        topicPolicy:
          allOf:
          - $ref: '#/components/schemas/GuardrailTopicPolicy'
          description: The topic policy that was configured for the guardrail.
        contentPolicy:
          allOf:
          - $ref: '#/components/schemas/GuardrailContentPolicy'
          description: The content policy that was configured for the guardrail.
        wordPolicy:
          allOf:
          - $ref: '#/components/schemas/GuardrailWordPolicy'
          description: The word policy that was configured for the guardrail.
        sensitiveInformationPolicy:
          allOf:
          - $ref: '#/components/schemas/GuardrailSensitiveInformationPolicy'
          description: The sensitive information policy that was configured for the
            guardrail.
        contextualGroundingPolicy:
          allOf:
          - $ref: '#/components/schemas/GuardrailContextualGroundingPolicy'
          description: The contextual grounding policy used in the guardrail.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time at which the guardrail was created.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time at which the guardrail was updated.
        statusReasons:
          allOf:
          - $ref: '#/components/schemas/GuardrailStatusReasons'
          description: Appears if the `status` is `FAILED`. A list of reasons for
            why the guardrail failed to be created, updated, versioned, or deleted.
        failureRecommendations:
          allOf:
          - $ref: '#/components/schemas/GuardrailFailureRecommendations'
          description: Appears if the `status` of the guardrail is `FAILED`. A list
            of recommendations to carry out before retrying the request.
        blockedInputMessaging:
          allOf:
          - $ref: '#/components/schemas/GuardrailBlockedMessaging'
          description: The message that the guardrail returns when it blocks a prompt.
        blockedOutputsMessaging:
          allOf:
          - $ref: '#/components/schemas/GuardrailBlockedMessaging'
          description: The message that the guardrail returns when it blocks a model
            response.
        kmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          description: The ARN of the KMS key that encrypts the guardrail.
      required:
      - name
      - guardrailId
      - guardrailArn
      - version
      - status
      - createdAt
      - updatedAt
      - blockedInputMessaging
      - blockedOutputsMessaging
    GetImportedModelRequest:
      type: object
      properties:
        modelIdentifier:
          allOf:
          - $ref: '#/components/schemas/ImportedModelIdentifier'
          description: Name or Amazon Resource Name (ARN) of the imported model.
      required:
      - modelIdentifier
    GetImportedModelResponse:
      type: object
      properties:
        modelArn:
          allOf:
          - $ref: '#/components/schemas/ImportedModelArn'
          description: The Amazon Resource Name (ARN) associated with this imported
            model.
        modelName:
          allOf:
          - $ref: '#/components/schemas/ImportedModelName'
          description: The name of the imported model.
        jobName:
          allOf:
          - $ref: '#/components/schemas/JobName'
          description: Job name associated with the imported model.
        jobArn:
          allOf:
          - $ref: '#/components/schemas/ModelImportJobArn'
          description: Job Amazon Resource Name (ARN) associated with the imported
            model.
        modelDataSource:
          allOf:
          - $ref: '#/components/schemas/ModelDataSource'
          description: The data source for this imported model.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Creation time of the imported model.
        modelArchitecture:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The architecture of the imported model.
        modelKmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          description: The imported model is encrypted at rest using this key.
        instructSupported:
          allOf:
          - $ref: '#/components/schemas/InstructSupported'
          description: Specifies if the imported model supports converse.
        customModelUnits:
          allOf:
          - $ref: '#/components/schemas/CustomModelUnits'
          description: Information about the hardware utilization for a single copy
            of the model.
    GetInferenceProfileRequest:
      type: object
      properties:
        inferenceProfileIdentifier:
          allOf:
          - $ref: '#/components/schemas/InferenceProfileIdentifier'
          description: The ID or Amazon Resource Name (ARN) of the inference profile.
      required:
      - inferenceProfileIdentifier
    GetInferenceProfileResponse:
      type: object
      properties:
        inferenceProfileName:
          allOf:
          - $ref: '#/components/schemas/InferenceProfileName'
          description: The name of the inference profile.
        description:
          allOf:
          - $ref: '#/components/schemas/InferenceProfileDescription'
          description: The description of the inference profile.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the inference profile was created.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the inference profile was last updated.
        inferenceProfileArn:
          allOf:
          - $ref: '#/components/schemas/InferenceProfileArn'
          description: The Amazon Resource Name (ARN) of the inference profile.
        models:
          allOf:
          - $ref: '#/components/schemas/InferenceProfileModels'
          description: A list of information about each model in the inference profile.
        inferenceProfileId:
          allOf:
          - $ref: '#/components/schemas/InferenceProfileId'
          description: The unique identifier of the inference profile.
        status:
          allOf:
          - $ref: '#/components/schemas/InferenceProfileStatus'
          description: The status of the inference profile. `ACTIVE` means that the
            inference profile is ready to be used.
        type:
          allOf:
          - $ref: '#/components/schemas/InferenceProfileType'
          description: "The type of the inference profile. The following types are\
            \ possible:\n\n  * `SYSTEM_DEFINED` – The inference profile is defined\
            \ by Amazon Bedrock. You can route inference requests across regions with\
            \ these inference profiles.\n\n  * `APPLICATION` – The inference profile\
            \ was created by a user. This type of inference profile can track metrics\
            \ and costs when invoking the model in it. The inference profile may route\
            \ requests to one or multiple regions."
      required:
      - inferenceProfileName
      - inferenceProfileArn
      - models
      - inferenceProfileId
      - status
      - type
    GetMarketplaceModelEndpointRequest:
      type: object
      properties:
        endpointArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the endpoint you want to
            get information about.
      required:
      - endpointArn
    GetMarketplaceModelEndpointResponse:
      type: object
      properties:
        marketplaceModelEndpoint:
          allOf:
          - $ref: '#/components/schemas/MarketplaceModelEndpoint'
          description: Details about the requested endpoint.
    GetModelCopyJobRequest:
      type: object
      properties:
        jobArn:
          allOf:
          - $ref: '#/components/schemas/ModelCopyJobArn'
          description: The Amazon Resource Name (ARN) of the model copy job.
      required:
      - jobArn
    GetModelCopyJobResponse:
      type: object
      properties:
        jobArn:
          allOf:
          - $ref: '#/components/schemas/ModelCopyJobArn'
          description: The Amazon Resource Name (ARN) of the model copy job.
        status:
          allOf:
          - $ref: '#/components/schemas/ModelCopyJobStatus'
          description: The status of the model copy job.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the model copy job was created.
        targetModelArn:
          allOf:
          - $ref: '#/components/schemas/CustomModelArn'
          description: The Amazon Resource Name (ARN) of the copied model.
        targetModelName:
          allOf:
          - $ref: '#/components/schemas/CustomModelName'
          description: The name of the copied model.
        sourceAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The unique identifier of the account that the model being copied
            originated from.
        sourceModelArn:
          allOf:
          - $ref: '#/components/schemas/ModelArn'
          description: The Amazon Resource Name (ARN) of the original model being
            copied.
        targetModelKmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          description: The Amazon Resource Name (ARN) of the KMS key encrypting the
            copied model.
        targetModelTags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags associated with the copied model.
        failureMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: An error message for why the model copy job failed.
        sourceModelName:
          allOf:
          - $ref: '#/components/schemas/CustomModelName'
          description: The name of the original model being copied.
      required:
      - jobArn
      - status
      - creationTime
      - targetModelArn
      - sourceAccountId
      - sourceModelArn
    GetModelCustomizationJobRequest:
      type: object
      properties:
        jobIdentifier:
          allOf:
          - $ref: '#/components/schemas/ModelCustomizationJobIdentifier'
          description: Identifier for the customization job.
      required:
      - jobIdentifier
    GetModelCustomizationJobResponse:
      type: object
      properties:
        jobArn:
          allOf:
          - $ref: '#/components/schemas/ModelCustomizationJobArn'
          description: The Amazon Resource Name (ARN) of the customization job.
        jobName:
          allOf:
          - $ref: '#/components/schemas/JobName'
          description: The name of the customization job.
        outputModelName:
          allOf:
          - $ref: '#/components/schemas/CustomModelName'
          description: The name of the output model.
        outputModelArn:
          allOf:
          - $ref: '#/components/schemas/CustomModelArn'
          description: The Amazon Resource Name (ARN) of the output model.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyToken'
          description: The token that you specified in the `CreateCustomizationJob`
            request.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of the IAM role.
        status:
          allOf:
          - $ref: '#/components/schemas/ModelCustomizationJobStatus'
          description: The status of the job. A successful job transitions from in-progress
            to completed when the output model is ready to use. If the job failed,
            the failure message contains information about why the job failed.
        failureMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: Information about why the job failed.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Time that the resource was created.
        lastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Time that the resource was last modified.
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Time that the resource transitioned to terminal state.
        baseModelArn:
          allOf:
          - $ref: '#/components/schemas/FoundationModelArn'
          description: Amazon Resource Name (ARN) of the base model.
        hyperParameters:
          allOf:
          - $ref: '#/components/schemas/ModelCustomizationHyperParameters'
          description: The hyperparameter values for the job. For details on the format
            for different models, see [Custom model hyperparameters](https://docs.aws.amazon.com/bedrock/latest/userguide/custom-models-hp.html).
        trainingDataConfig:
          allOf:
          - $ref: '#/components/schemas/TrainingDataConfig'
          description: Contains information about the training dataset.
        validationDataConfig:
          allOf:
          - $ref: '#/components/schemas/ValidationDataConfig'
          description: Contains information about the validation dataset.
        outputDataConfig:
          allOf:
          - $ref: '#/components/schemas/OutputDataConfig'
          description: Output data configuration
        customizationType:
          allOf:
          - $ref: '#/components/schemas/CustomizationType'
          description: The type of model customization.
        outputModelKmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          description: The custom model is encrypted at rest using this key.
        trainingMetrics:
          allOf:
          - $ref: '#/components/schemas/TrainingMetrics'
          description: Contains training metrics from the job creation.
        validationMetrics:
          allOf:
          - $ref: '#/components/schemas/ValidationMetrics'
          description: The loss metric for each validator that you provided in the
            createjob request.
        vpcConfig:
          allOf:
          - $ref: '#/components/schemas/VpcConfig'
          description: VPC configuration for the custom model job.
        customizationConfig:
          allOf:
          - $ref: '#/components/schemas/CustomizationConfig'
          description: The customization configuration for the model customization
            job.
      required:
      - jobArn
      - jobName
      - outputModelName
      - roleArn
      - creationTime
      - baseModelArn
      - trainingDataConfig
      - validationDataConfig
      - outputDataConfig
    GetModelImportJobRequest:
      type: object
      properties:
        jobIdentifier:
          allOf:
          - $ref: '#/components/schemas/ModelImportJobIdentifier'
          description: The identifier of the import job.
      required:
      - jobIdentifier
    GetModelImportJobResponse:
      type: object
      properties:
        jobArn:
          allOf:
          - $ref: '#/components/schemas/ModelImportJobArn'
          description: The Amazon Resource Name (ARN) of the import job.
        jobName:
          allOf:
          - $ref: '#/components/schemas/JobName'
          description: The name of the import job.
        importedModelName:
          allOf:
          - $ref: '#/components/schemas/ImportedModelName'
          description: The name of the imported model.
        importedModelArn:
          allOf:
          - $ref: '#/components/schemas/ImportedModelArn'
          description: The Amazon Resource Name (ARN) of the imported model.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of the IAM role associated with
            this job.
        modelDataSource:
          allOf:
          - $ref: '#/components/schemas/ModelDataSource'
          description: The data source for the imported model.
        status:
          allOf:
          - $ref: '#/components/schemas/ModelImportJobStatus'
          description: The status of the job. A successful job transitions from in-progress
            to completed when the imported model is ready to use. If the job failed,
            the failure message contains information about why the job failed.
        failureMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: Information about why the import job failed.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the resource was created.
        lastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Time the resource was last modified.
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Time that the resource transitioned to terminal state.
        vpcConfig:
          allOf:
          - $ref: '#/components/schemas/VpcConfig'
          description: The Virtual Private Cloud (VPC) configuration of the import
            model job.
        importedModelKmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          description: The imported model is encrypted at rest using this key.
    GetModelInvocationJobRequest:
      type: object
      properties:
        jobIdentifier:
          allOf:
          - $ref: '#/components/schemas/ModelInvocationJobIdentifier'
          description: The Amazon Resource Name (ARN) of the batch inference job.
      required:
      - jobIdentifier
    GetModelInvocationJobResponse:
      type: object
      properties:
        jobArn:
          allOf:
          - $ref: '#/components/schemas/ModelInvocationJobArn'
          description: The Amazon Resource Name (ARN) of the batch inference job.
        jobName:
          allOf:
          - $ref: '#/components/schemas/ModelInvocationJobName'
          description: The name of the batch inference job.
        modelId:
          allOf:
          - $ref: '#/components/schemas/ModelId'
          description: The unique identifier of the foundation model used for model
            inference.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ModelInvocationIdempotencyToken'
          description: A unique, case-sensitive identifier to ensure that the API
            request completes no more than one time. If this token matches a previous
            request, Amazon Bedrock ignores the request, but does not return an error.
            For more information, see [Ensuring idempotency](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html).
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of the service role with permissions
            to carry out and manage batch inference. You can use the console to create
            a default service role or follow the steps at [Create a service role for
            batch inference](https://docs.aws.amazon.com/bedrock/latest/userguide/batch-iam-sr.html).
        status:
          allOf:
          - $ref: '#/components/schemas/ModelInvocationJobStatus'
          description: "The status of the batch inference job.\n\nThe following statuses\
            \ are possible:\n\n  * Submitted – This job has been submitted to a queue\
            \ for validation.\n\n  * Validating – This job is being validated for\
            \ the requirements described in [Format and upload your batch inference\
            \ data](https://docs.aws.amazon.com/bedrock/latest/userguide/batch-inference-data.html).\
            \ The criteria include the following:\n\n    * Your IAM service role has\
            \ access to the Amazon S3 buckets containing your files.\n\n    * Your\
            \ files are .jsonl files and each individual record is a JSON object in\
            \ the correct format. Note that validation doesn't check if the `modelInput`\
            \ value matches the request body for the model.\n\n    * Your files fulfill\
            \ the requirements for file size and number of records. For more information,\
            \ see [Quotas for Amazon Bedrock](https://docs.aws.amazon.com/bedrock/latest/userguide/quotas.html).\n\
            \n  * Scheduled – This job has been validated and is now in a queue. The\
            \ job will automatically start when it reaches its turn.\n\n  * Expired\
            \ – This job timed out because it was scheduled but didn't begin before\
            \ the set timeout duration. Submit a new job request.\n\n  * InProgress\
            \ – This job has begun. You can start viewing the results in the output\
            \ S3 location.\n\n  * Completed – This job has successfully completed.\
            \ View the output files in the output S3 location.\n\n  * PartiallyCompleted\
            \ – This job has partially completed. Not all of your records could be\
            \ processed in time. View the output files in the output S3 location.\n\
            \n  * Failed – This job has failed. Check the failure message for any\
            \ further details. For further assistance, reach out to the [Amazon Web\
            \ ServicesSupport Center](https://console.aws.amazon.com/support/home/).\n\
            \n  * Stopped – This job was stopped by a user.\n\n  * Stopping – This\
            \ job is being stopped by a user."
        message:
          allOf:
          - $ref: '#/components/schemas/Message'
          description: If the batch inference job failed, this field contains a message
            describing why the job failed.
        submitTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the batch inference job was submitted.
        lastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the batch inference job was last modified.
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the batch inference job ended.
        inputDataConfig:
          allOf:
          - $ref: '#/components/schemas/ModelInvocationJobInputDataConfig'
          description: Details about the location of the input to the batch inference
            job.
        outputDataConfig:
          allOf:
          - $ref: '#/components/schemas/ModelInvocationJobOutputDataConfig'
          description: Details about the location of the output of the batch inference
            job.
        vpcConfig:
          allOf:
          - $ref: '#/components/schemas/VpcConfig'
          description: The configuration of the Virtual Private Cloud (VPC) for the
            data in the batch inference job. For more information, see [Protect batch
            inference jobs using a VPC](https://docs.aws.amazon.com/bedrock/latest/userguide/batch-vpc).
        timeoutDurationInHours:
          allOf:
          - $ref: '#/components/schemas/ModelInvocationJobTimeoutDurationInHours'
          description: The number of hours after which batch inference job was set
            to time out.
        jobExpirationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the batch inference job times or timed out.
      required:
      - jobArn
      - modelId
      - roleArn
      - submitTime
      - inputDataConfig
      - outputDataConfig
    GetModelInvocationLoggingConfigurationRequest:
      type: object
      properties: {}
    GetModelInvocationLoggingConfigurationResponse:
      type: object
      properties:
        loggingConfig:
          allOf:
          - $ref: '#/components/schemas/LoggingConfig'
          description: The current configuration values.
    GetPromptRouterRequest:
      type: object
      properties:
        promptRouterArn:
          allOf:
          - $ref: '#/components/schemas/PromptRouterArn'
          description: The prompt router's ARN
      required:
      - promptRouterArn
    GetPromptRouterResponse:
      type: object
      properties:
        promptRouterName:
          allOf:
          - $ref: '#/components/schemas/PromptRouterName'
          description: The router's name.
        routingCriteria:
          allOf:
          - $ref: '#/components/schemas/RoutingCriteria'
          description: The router's routing criteria.
        description:
          allOf:
          - $ref: '#/components/schemas/PromptRouterDescription'
          description: The router's description.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: When the router was created.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: When the router was updated.
        promptRouterArn:
          allOf:
          - $ref: '#/components/schemas/PromptRouterArn'
          description: The prompt router's ARN
        models:
          allOf:
          - $ref: '#/components/schemas/PromptRouterTargetModels'
          description: The router's models.
        fallbackModel:
          allOf:
          - $ref: '#/components/schemas/PromptRouterTargetModel'
          description: The router's fallback model.
        status:
          allOf:
          - $ref: '#/components/schemas/PromptRouterStatus'
          description: The router's status.
        type:
          allOf:
          - $ref: '#/components/schemas/PromptRouterType'
          description: The router's type.
      required:
      - promptRouterName
      - routingCriteria
      - promptRouterArn
      - models
      - fallbackModel
      - status
      - type
    GetProvisionedModelThroughputRequest:
      type: object
      properties:
        provisionedModelId:
          allOf:
          - $ref: '#/components/schemas/ProvisionedModelId'
          description: The Amazon Resource Name (ARN) or name of the Provisioned Throughput.
      required:
      - provisionedModelId
    GetProvisionedModelThroughputResponse:
      type: object
      properties:
        modelUnits:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          description: The number of model units allocated to this Provisioned Throughput.
        desiredModelUnits:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          description: The number of model units that was requested for this Provisioned
            Throughput.
        provisionedModelName:
          allOf:
          - $ref: '#/components/schemas/ProvisionedModelName'
          description: The name of the Provisioned Throughput.
        provisionedModelArn:
          allOf:
          - $ref: '#/components/schemas/ProvisionedModelArn'
          description: The Amazon Resource Name (ARN) of the Provisioned Throughput.
        modelArn:
          allOf:
          - $ref: '#/components/schemas/ModelArn'
          description: The Amazon Resource Name (ARN) of the model associated with
            this Provisioned Throughput.
        desiredModelArn:
          allOf:
          - $ref: '#/components/schemas/ModelArn'
          description: The Amazon Resource Name (ARN) of the model requested to be
            associated to this Provisioned Throughput. This value differs from the
            `modelArn` if updating hasn't completed.
        foundationModelArn:
          allOf:
          - $ref: '#/components/schemas/FoundationModelArn'
          description: The Amazon Resource Name (ARN) of the base model for which
            the Provisioned Throughput was created, or of the base model that the
            custom model for which the Provisioned Throughput was created was customized.
        status:
          allOf:
          - $ref: '#/components/schemas/ProvisionedModelStatus'
          description: The status of the Provisioned Throughput.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp of the creation time for this Provisioned Throughput.
        lastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp of the last time that this Provisioned Throughput
            was modified.
        failureMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: A failure message for any issues that occurred during creation,
            updating, or deletion of the Provisioned Throughput.
        commitmentDuration:
          allOf:
          - $ref: '#/components/schemas/CommitmentDuration'
          description: Commitment duration of the Provisioned Throughput.
        commitmentExpirationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp for when the commitment term for the Provisioned
            Throughput expires.
      required:
      - modelUnits
      - desiredModelUnits
      - provisionedModelName
      - provisionedModelArn
      - modelArn
      - desiredModelArn
      - foundationModelArn
      - status
      - creationTime
      - lastModifiedTime
    GuardrailArn:
      type: string
      pattern: ^arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:guardrail/[a-z0-9]+$
      maxLength: 2048
    GuardrailBlockedMessaging:
      type: string
      minLength: 1
      maxLength: 500
    GuardrailConfiguration:
      type: object
      properties:
        guardrailId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier for the guardrail.
        guardrailVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The version of the guardrail.
      required:
      - guardrailId
      - guardrailVersion
      description: The configuration details for the guardrail.
    GuardrailContentFilter:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/GuardrailContentFilterType'
          description: The harmful category that the content filter is applied to.
        inputStrength:
          allOf:
          - $ref: '#/components/schemas/GuardrailFilterStrength'
          description: The strength of the content filter to apply to prompts. As
            you increase the filter strength, the likelihood of filtering harmful
            content increases and the probability of seeing harmful content in your
            application reduces.
        outputStrength:
          allOf:
          - $ref: '#/components/schemas/GuardrailFilterStrength'
          description: The strength of the content filter to apply to model responses.
            As you increase the filter strength, the likelihood of filtering harmful
            content increases and the probability of seeing harmful content in your
            application reduces.
        inputModalities:
          allOf:
          - $ref: '#/components/schemas/GuardrailModalities'
          description: The input modalities selected for the guardrail content filter.
        outputModalities:
          allOf:
          - $ref: '#/components/schemas/GuardrailModalities'
          description: The output modalities selected for the guardrail content filter.
        inputAction:
          allOf:
          - $ref: '#/components/schemas/GuardrailContentFilterAction'
          description: "The action to take when harmful content is detected in the\
            \ input. Supported values include:\n\n  * `BLOCK` – Block the content\
            \ and replace it with blocked messaging.\n\n  * `NONE` – Take no action\
            \ but return detection information in the trace response."
        outputAction:
          allOf:
          - $ref: '#/components/schemas/GuardrailContentFilterAction'
          description: "The action to take when harmful content is detected in the\
            \ output. Supported values include:\n\n  * `BLOCK` – Block the content\
            \ and replace it with blocked messaging.\n\n  * `NONE` – Take no action\
            \ but return detection information in the trace response."
        inputEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether guardrail evaluation is enabled on the input.
            When disabled, you aren't charged for the evaluation. The evaluation doesn't
            appear in the response.
        outputEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether guardrail evaluation is enabled on the output.
            When disabled, you aren't charged for the evaluation. The evaluation doesn't
            appear in the response.
      required:
      - type
      - inputStrength
      - outputStrength
      description: "Contains filter strengths for harmful content. Guardrails support\
        \ the following content filters to detect and filter harmful user inputs and\
        \ FM-generated outputs.\n\n  * **Hate** – Describes language or a statement\
        \ that discriminates, criticizes, insults, denounces, or dehumanizes a person\
        \ or group on the basis of an identity (such as race, ethnicity, gender, religion,\
        \ sexual orientation, ability, and national origin).\n\n  * **Insults** –\
        \ Describes language or a statement that includes demeaning, humiliating,\
        \ mocking, insulting, or belittling language. This type of language is also\
        \ labeled as bullying.\n\n  * **Sexual** – Describes language or a statement\
        \ that indicates sexual interest, activity, or arousal using direct or indirect\
        \ references to body parts, physical traits, or sex.\n\n  * **Violence** –\
        \ Describes language or a statement that includes glorification of or threats\
        \ to inflict physical pain, hurt, or injury toward a person, group or thing.\n\
        \nContent filtering depends on the confidence classification of user inputs\
        \ and FM responses across each of the four harmful categories. All input and\
        \ output statements are classified into one of four confidence levels (NONE,\
        \ LOW, MEDIUM, HIGH) for each harmful category. For example, if a statement\
        \ is classified as _Hate_ with HIGH confidence, the likelihood of the statement\
        \ representing hateful content is high. A single statement can be classified\
        \ across multiple categories with varying confidence levels. For example,\
        \ a single statement can be classified as _Hate_ with HIGH confidence, _Insults_\
        \ with LOW confidence, _Sexual_ with NONE confidence, and _Violence_ with\
        \ MEDIUM confidence.\n\nFor more information, see [Guardrails content filters](https://docs.aws.amazon.com/bedrock/latest/userguide/guardrails-filters.html).\n\
        \nThis data type is used in the following API operations:\n\n  * [GetGuardrail\
        \ response body](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_GetGuardrail.html#API_GetGuardrail_ResponseSyntax)"
    GuardrailContentFilterAction:
      type: string
      enum:
      - BLOCK
      - NONE
    GuardrailContentFilterConfig:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/GuardrailContentFilterType'
          description: The harmful category that the content filter is applied to.
        inputStrength:
          allOf:
          - $ref: '#/components/schemas/GuardrailFilterStrength'
          description: The strength of the content filter to apply to prompts. As
            you increase the filter strength, the likelihood of filtering harmful
            content increases and the probability of seeing harmful content in your
            application reduces.
        outputStrength:
          allOf:
          - $ref: '#/components/schemas/GuardrailFilterStrength'
          description: The strength of the content filter to apply to model responses.
            As you increase the filter strength, the likelihood of filtering harmful
            content increases and the probability of seeing harmful content in your
            application reduces.
        inputModalities:
          allOf:
          - $ref: '#/components/schemas/GuardrailModalities'
          description: The input modalities selected for the guardrail content filter
            configuration.
        outputModalities:
          allOf:
          - $ref: '#/components/schemas/GuardrailModalities'
          description: The output modalities selected for the guardrail content filter
            configuration.
        inputAction:
          allOf:
          - $ref: '#/components/schemas/GuardrailContentFilterAction'
          description: "Specifies the action to take when harmful content is detected.\
            \ Supported values include:\n\n  * `BLOCK` – Block the content and replace\
            \ it with blocked messaging.\n\n  * `NONE` – Take no action but return\
            \ detection information in the trace response."
        outputAction:
          allOf:
          - $ref: '#/components/schemas/GuardrailContentFilterAction'
          description: "Specifies the action to take when harmful content is detected\
            \ in the output. Supported values include:\n\n  * `BLOCK` – Block the\
            \ content and replace it with blocked messaging.\n\n  * `NONE` – Take\
            \ no action but return detection information in the trace response."
        inputEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether to enable guardrail evaluation on the input.
            When disabled, you aren't charged for the evaluation. The evaluation doesn't
            appear in the response.
        outputEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether to enable guardrail evaluation on the output.
            When disabled, you aren't charged for the evaluation. The evaluation doesn't
            appear in the response.
      required:
      - type
      - inputStrength
      - outputStrength
      description: "Contains filter strengths for harmful content. Guardrails support\
        \ the following content filters to detect and filter harmful user inputs and\
        \ FM-generated outputs.\n\n  * **Hate** – Describes language or a statement\
        \ that discriminates, criticizes, insults, denounces, or dehumanizes a person\
        \ or group on the basis of an identity (such as race, ethnicity, gender, religion,\
        \ sexual orientation, ability, and national origin).\n\n  * **Insults** –\
        \ Describes language or a statement that includes demeaning, humiliating,\
        \ mocking, insulting, or belittling language. This type of language is also\
        \ labeled as bullying.\n\n  * **Sexual** – Describes language or a statement\
        \ that indicates sexual interest, activity, or arousal using direct or indirect\
        \ references to body parts, physical traits, or sex.\n\n  * **Violence** –\
        \ Describes language or a statement that includes glorification of or threats\
        \ to inflict physical pain, hurt, or injury toward a person, group or thing.\n\
        \nContent filtering depends on the confidence classification of user inputs\
        \ and FM responses across each of the four harmful categories. All input and\
        \ output statements are classified into one of four confidence levels (NONE,\
        \ LOW, MEDIUM, HIGH) for each harmful category. For example, if a statement\
        \ is classified as _Hate_ with HIGH confidence, the likelihood of the statement\
        \ representing hateful content is high. A single statement can be classified\
        \ across multiple categories with varying confidence levels. For example,\
        \ a single statement can be classified as _Hate_ with HIGH confidence, _Insults_\
        \ with LOW confidence, _Sexual_ with NONE confidence, and _Violence_ with\
        \ MEDIUM confidence.\n\nFor more information, see [Guardrails content filters](https://docs.aws.amazon.com/bedrock/latest/userguide/guardrails-filters.html)."
    GuardrailContentFilterType:
      type: string
      enum:
      - SEXUAL
      - VIOLENCE
      - HATE
      - INSULTS
      - MISCONDUCT
      - PROMPT_ATTACK
    GuardrailContentFilters:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailContentFilter'
    GuardrailContentFiltersConfig:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailContentFilterConfig'
    GuardrailContentPolicy:
      type: object
      properties:
        filters:
          allOf:
          - $ref: '#/components/schemas/GuardrailContentFilters'
          description: Contains the type of the content filter and how strongly it
            should apply to prompts and model responses.
      description: "Contains details about how to handle harmful content.\n\nThis\
        \ data type is used in the following API operations:\n\n  * [GetGuardrail\
        \ response body](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_GetGuardrail.html#API_GetGuardrail_ResponseSyntax)"
    GuardrailContentPolicyConfig:
      type: object
      properties:
        filtersConfig:
          allOf:
          - $ref: '#/components/schemas/GuardrailContentFiltersConfig'
          description: Contains the type of the content filter and how strongly it
            should apply to prompts and model responses.
      required:
      - filtersConfig
      description: Contains details about how to handle harmful content.
    GuardrailContextualGroundingAction:
      type: string
      enum:
      - BLOCK
      - NONE
    GuardrailContextualGroundingFilter:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/GuardrailContextualGroundingFilterType'
          description: The filter type details for the guardrails contextual grounding
            filter.
        threshold:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The threshold details for the guardrails contextual grounding
            filter.
        action:
          allOf:
          - $ref: '#/components/schemas/GuardrailContextualGroundingAction'
          description: "The action to take when content fails the contextual grounding\
            \ evaluation. Supported values include:\n\n  * `BLOCK` – Block the content\
            \ and replace it with blocked messaging.\n\n  * `NONE` – Take no action\
            \ but return detection information in the trace response."
        enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether contextual grounding is enabled for evaluation.
            When disabled, you aren't charged for the evaluation. The evaluation doesn't
            appear in the response.
      required:
      - type
      - threshold
      description: The details for the guardrails contextual grounding filter.
    GuardrailContextualGroundingFilterConfig:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/GuardrailContextualGroundingFilterType'
          description: The filter details for the guardrails contextual grounding
            filter.
        threshold:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The threshold details for the guardrails contextual grounding
            filter.
        action:
          allOf:
          - $ref: '#/components/schemas/GuardrailContextualGroundingAction'
          description: "Specifies the action to take when content fails the contextual\
            \ grounding evaluation. Supported values include:\n\n  * `BLOCK` – Block\
            \ the content and replace it with blocked messaging.\n\n  * `NONE` – Take\
            \ no action but return detection information in the trace response."
        enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether to enable contextual grounding evaluation.
            When disabled, you aren't charged for the evaluation. The evaluation doesn't
            appear in the response.
      required:
      - type
      - threshold
      description: The filter configuration details for the guardrails contextual
        grounding filter.
    GuardrailContextualGroundingFilterType:
      type: string
      enum:
      - GROUNDING
      - RELEVANCE
    GuardrailContextualGroundingFilters:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailContextualGroundingFilter'
    GuardrailContextualGroundingFiltersConfig:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailContextualGroundingFilterConfig'
    GuardrailContextualGroundingPolicy:
      type: object
      properties:
        filters:
          allOf:
          - $ref: '#/components/schemas/GuardrailContextualGroundingFilters'
          description: The filter details for the guardrails contextual grounding
            policy.
      required:
      - filters
      description: The details for the guardrails contextual grounding policy.
    GuardrailContextualGroundingPolicyConfig:
      type: object
      properties:
        filtersConfig:
          allOf:
          - $ref: '#/components/schemas/GuardrailContextualGroundingFiltersConfig'
          description: The filter configuration details for the guardrails contextual
            grounding policy.
      required:
      - filtersConfig
      description: The policy configuration details for the guardrails contextual
        grounding policy.
    GuardrailDescription:
      type: string
      minLength: 1
      maxLength: 200
    GuardrailDraftVersion:
      type: string
      pattern: ^DRAFT$
      minLength: 5
      maxLength: 5
    GuardrailFailureRecommendation:
      type: string
      minLength: 1
      maxLength: 200
    GuardrailFailureRecommendations:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailFailureRecommendation'
    GuardrailFilterStrength:
      type: string
      enum:
      - NONE
      - LOW
      - MEDIUM
      - HIGH
    GuardrailId:
      type: string
      pattern: ^[a-z0-9]+$
      maxLength: 64
    GuardrailIdentifier:
      type: string
      pattern: ^(([a-z0-9]+)|(arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:guardrail/[a-z0-9]+))$
      maxLength: 2048
    GuardrailManagedWordLists:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailManagedWords'
    GuardrailManagedWordListsConfig:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailManagedWordsConfig'
    GuardrailManagedWords:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/GuardrailManagedWordsType'
          description: ManagedWords$type The managed word type that was configured
            for the guardrail. (For now, we only offer profanity word list)
        inputAction:
          allOf:
          - $ref: '#/components/schemas/GuardrailWordAction'
          description: "The action to take when harmful content is detected in the\
            \ input. Supported values include:\n\n  * `BLOCK` – Block the content\
            \ and replace it with blocked messaging.\n\n  * `NONE` – Take no action\
            \ but return detection information in the trace response."
        outputAction:
          allOf:
          - $ref: '#/components/schemas/GuardrailWordAction'
          description: "The action to take when harmful content is detected in the\
            \ output. Supported values include:\n\n  * `BLOCK` – Block the content\
            \ and replace it with blocked messaging.\n\n  * `NONE` – Take no action\
            \ but return detection information in the trace response."
        inputEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether guardrail evaluation is enabled on the input.
            When disabled, you aren't charged for the evaluation. The evaluation doesn't
            appear in the response.
        outputEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether guardrail evaluation is enabled on the output.
            When disabled, you aren't charged for the evaluation. The evaluation doesn't
            appear in the response.
      required:
      - type
      description: The managed word list that was configured for the guardrail. (This
        is a list of words that are pre-defined and managed by guardrails only.)
    GuardrailManagedWordsConfig:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/GuardrailManagedWordsType'
          description: The managed word type to configure for the guardrail.
        inputAction:
          allOf:
          - $ref: '#/components/schemas/GuardrailWordAction'
          description: "Specifies the action to take when harmful content is detected\
            \ in the input. Supported values include:\n\n  * `BLOCK` – Block the content\
            \ and replace it with blocked messaging.\n\n  * `NONE` – Take no action\
            \ but return detection information in the trace response."
        outputAction:
          allOf:
          - $ref: '#/components/schemas/GuardrailWordAction'
          description: "Specifies the action to take when harmful content is detected\
            \ in the output. Supported values include:\n\n  * `BLOCK` – Block the\
            \ content and replace it with blocked messaging.\n\n  * `NONE` – Take\
            \ no action but return detection information in the trace response."
        inputEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether to enable guardrail evaluation on the input.
            When disabled, you aren't charged for the evaluation. The evaluation doesn't
            appear in the response.
        outputEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether to enable guardrail evaluation on the output.
            When disabled, you aren't charged for the evaluation. The evaluation doesn't
            appear in the response.
      required:
      - type
      description: The managed word list to configure for the guardrail.
    GuardrailManagedWordsType:
      type: string
      enum:
      - PROFANITY
    GuardrailModalities:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailModality'
    GuardrailModality:
      type: string
      enum:
      - TEXT
      - IMAGE
    GuardrailName:
      type: string
      pattern: ^[0-9a-zA-Z-_]+$
      minLength: 1
      maxLength: 50
    GuardrailNumericalVersion:
      type: string
      pattern: ^[1-9][0-9]{0,7}$
    GuardrailPiiEntities:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailPiiEntity'
    GuardrailPiiEntitiesConfig:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailPiiEntityConfig'
    GuardrailPiiEntity:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/GuardrailPiiEntityType'
          description: The type of PII entity. For example, Social Security Number.
        action:
          allOf:
          - $ref: '#/components/schemas/GuardrailSensitiveInformationAction'
          description: The configured guardrail action when PII entity is detected.
        inputAction:
          allOf:
          - $ref: '#/components/schemas/GuardrailSensitiveInformationAction'
          description: "The action to take when harmful content is detected in the\
            \ input. Supported values include:\n\n  * `BLOCK` – Block the content\
            \ and replace it with blocked messaging.\n\n  * `ANONYMIZE` – Mask the\
            \ content and replace it with identifier tags.\n\n  * `NONE` – Take no\
            \ action but return detection information in the trace response."
        outputAction:
          allOf:
          - $ref: '#/components/schemas/GuardrailSensitiveInformationAction'
          description: "The action to take when harmful content is detected in the\
            \ output. Supported values include:\n\n  * `BLOCK` – Block the content\
            \ and replace it with blocked messaging.\n\n  * `ANONYMIZE` – Mask the\
            \ content and replace it with identifier tags.\n\n  * `NONE` – Take no\
            \ action but return detection information in the trace response."
        inputEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether guardrail evaluation is enabled on the input.
            When disabled, you aren't charged for the evaluation. The evaluation doesn't
            appear in the response.
        outputEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether guardrail evaluation is enabled on the output.
            When disabled, you aren't charged for the evaluation. The evaluation doesn't
            appear in the response.
      required:
      - type
      - action
      description: The PII entity configured for the guardrail.
    GuardrailPiiEntityConfig:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/GuardrailPiiEntityType'
          description: "Configure guardrail type when the PII entity is detected.\n\
            \nThe following PIIs are used to block or mask sensitive information:\n\
            \n  * **General**\n\n    * **ADDRESS**\n\nA physical address, such as\
            \ \"100 Main Street, Anytown, USA\" or \"Suite #12, Building 123\". An\
            \ address can include information such as the street, building, location,\
            \ city, state, country, county, zip code, precinct, and neighborhood.\n\
            \n    * **AGE**\n\nAn individual's age, including the quantity and unit\
            \ of time. For example, in the phrase \"I am 40 years old,\" Guardrails\
            \ recognizes \"40 years\" as an age.\n\n    * **NAME**\n\nAn individual's\
            \ name. This entity type does not include titles, such as Dr., Mr., Mrs.,\
            \ or Miss. guardrails doesn't apply this entity type to names that are\
            \ part of organizations or addresses. For example, guardrails recognizes\
            \ the \"John Doe Organization\" as an organization, and it recognizes\
            \ \"Jane Doe Street\" as an address.\n\n    * **EMAIL**\n\nAn email address,\
            \ such as _marymajor@email.com_.\n\n    * **PHONE**\n\nA phone number.\
            \ This entity type also includes fax and pager numbers.\n\n    * **USERNAME**\n\
            \nA user name that identifies an account, such as a login name, screen\
            \ name, nick name, or handle.\n\n    * **PASSWORD**\n\nAn alphanumeric\
            \ string that is used as a password, such as \"*_very20special#pass*_\
            \ \".\n\n    * **DRIVER_ID**\n\nThe number assigned to a driver's license,\
            \ which is an official document permitting an individual to operate one\
            \ or more motorized vehicles on a public road. A driver's license number\
            \ consists of alphanumeric characters.\n\n    * **LICENSE_PLATE**\n\n\
            A license plate for a vehicle is issued by the state or country where\
            \ the vehicle is registered. The format for passenger vehicles is typically\
            \ five to eight digits, consisting of upper-case letters and numbers.\
            \ The format varies depending on the location of the issuing state or\
            \ country.\n\n    * **VEHICLE_IDENTIFICATION_NUMBER**\n\nA Vehicle Identification\
            \ Number (VIN) uniquely identifies a vehicle. VIN content and format are\
            \ defined in the _ISO 3779_ specification. Each country has specific codes\
            \ and formats for VINs.\n\n  * **Finance**\n\n    * **CREDIT_DEBIT_CARD_CVV**\n\
            \nA three-digit card verification code (CVV) that is present on VISA,\
            \ MasterCard, and Discover credit and debit cards. For American Express\
            \ credit or debit cards, the CVV is a four-digit numeric code.\n\n   \
            \ * **CREDIT_DEBIT_CARD_EXPIRY**\n\nThe expiration date for a credit or\
            \ debit card. This number is usually four digits long and is often formatted\
            \ as _month/year_ or _MM/YY_. Guardrails recognizes expiration dates such\
            \ as _01/21_ , _01/2021_ , and _Jan 2021_.\n\n    * **CREDIT_DEBIT_CARD_NUMBER**\n\
            \nThe number for a credit or debit card. These numbers can vary from 13\
            \ to 16 digits in length. However, Amazon Comprehend also recognizes credit\
            \ or debit card numbers when only the last four digits are present.\n\n\
            \    * **PIN**\n\nA four-digit personal identification number (PIN) with\
            \ which you can access your bank account.\n\n    * **INTERNATIONAL_BANK_ACCOUNT_NUMBER**\n\
            \nAn International Bank Account Number has specific formats in each country.\
            \ For more information, see [www.iban.com/structure](https://www.iban.com/structure).\n\
            \n    * **SWIFT_CODE**\n\nA SWIFT code is a standard format of Bank Identifier\
            \ Code (BIC) used to specify a particular bank or branch. Banks use these\
            \ codes for money transfers such as international wire transfers.\n\n\
            SWIFT codes consist of eight or 11 characters. The 11-digit codes refer\
            \ to specific branches, while eight-digit codes (or 11-digit codes ending\
            \ in 'XXX') refer to the head or primary office.\n\n  * **IT**\n\n   \
            \ * **IP_ADDRESS**\n\nAn IPv4 address, such as _198.51.100.0_.\n\n   \
            \ * **MAC_ADDRESS**\n\nA _media access control_ (MAC) address is a unique\
            \ identifier assigned to a network interface controller (NIC).\n\n   \
            \ * **URL**\n\nA web address, such as _www.example.com_.\n\n    * **AWS_ACCESS_KEY**\n\
            \nA unique identifier that's associated with a secret access key; you\
            \ use the access key ID and secret access key to sign programmatic Amazon\
            \ Web Services requests cryptographically.\n\n    * **AWS_SECRET_KEY**\n\
            \nA unique identifier that's associated with an access key. You use the\
            \ access key ID and secret access key to sign programmatic Amazon Web\
            \ Services requests cryptographically.\n\n  * **USA specific**\n\n   \
            \ * **US_BANK_ACCOUNT_NUMBER**\n\nA US bank account number, which is typically\
            \ 10 to 12 digits long.\n\n    * **US_BANK_ROUTING_NUMBER**\n\nA US bank\
            \ account routing number. These are typically nine digits long,\n\n  \
            \  * **US_INDIVIDUAL_TAX_IDENTIFICATION_NUMBER**\n\nA US Individual Taxpayer\
            \ Identification Number (ITIN) is a nine-digit number that starts with\
            \ a \"9\" and contain a \"7\" or \"8\" as the fourth digit. An ITIN can\
            \ be formatted with a space or a dash after the third and forth digits.\n\
            \n    * **US_PASSPORT_NUMBER**\n\nA US passport number. Passport numbers\
            \ range from six to nine alphanumeric characters.\n\n    * **US_SOCIAL_SECURITY_NUMBER**\n\
            \nA US Social Security Number (SSN) is a nine-digit number that is issued\
            \ to US citizens, permanent residents, and temporary working residents.\n\
            \n  * **Canada specific**\n\n    * **CA_HEALTH_NUMBER**\n\nA Canadian\
            \ Health Service Number is a 10-digit unique identifier, required for\
            \ individuals to access healthcare benefits.\n\n    * **CA_SOCIAL_INSURANCE_NUMBER**\n\
            \nA Canadian Social Insurance Number (SIN) is a nine-digit unique identifier,\
            \ required for individuals to access government programs and benefits.\n\
            \nThe SIN is formatted as three groups of three digits, such as _123-456-789_.\
            \ A SIN can be validated through a simple check-digit process called the\
            \ [Luhn algorithm](https://www.wikipedia.org/wiki/Luhn_algorithm).\n\n\
            \  * **UK Specific**\n\n    * **UK_NATIONAL_HEALTH_SERVICE_NUMBER**\n\n\
            A UK National Health Service Number is a 10-17 digit number, such as _485\
            \ 777 3456_. The current system formats the 10-digit number with spaces\
            \ after the third and sixth digits. The final digit is an error-detecting\
            \ checksum.\n\n    * **UK_NATIONAL_INSURANCE_NUMBER**\n\nA UK National\
            \ Insurance Number (NINO) provides individuals with access to National\
            \ Insurance (social security) benefits. It is also used for some purposes\
            \ in the UK tax system.\n\nThe number is nine digits long and starts with\
            \ two letters, followed by six numbers and one letter. A NINO can be formatted\
            \ with a space or a dash after the two letters and after the second, forth,\
            \ and sixth digits.\n\n    * **UK_UNIQUE_TAXPAYER_REFERENCE_NUMBER**\n\
            \nA UK Unique Taxpayer Reference (UTR) is a 10-digit number that identifies\
            \ a taxpayer or a business.\n\n  * **Custom**\n\n    * **Regex filter**\
            \ \\- You can use a regular expressions to define patterns for a guardrail\
            \ to recognize and act upon such as serial number, booking ID etc.."
        action:
          allOf:
          - $ref: '#/components/schemas/GuardrailSensitiveInformationAction'
          description: Configure guardrail action when the PII entity is detected.
        inputAction:
          allOf:
          - $ref: '#/components/schemas/GuardrailSensitiveInformationAction'
          description: "Specifies the action to take when harmful content is detected\
            \ in the input. Supported values include:\n\n  * `BLOCK` – Block the content\
            \ and replace it with blocked messaging.\n\n  * `ANONYMIZE` – Mask the\
            \ content and replace it with identifier tags.\n\n  * `NONE` – Take no\
            \ action but return detection information in the trace response."
        outputAction:
          allOf:
          - $ref: '#/components/schemas/GuardrailSensitiveInformationAction'
          description: "Specifies the action to take when harmful content is detected\
            \ in the output. Supported values include:\n\n  * `BLOCK` – Block the\
            \ content and replace it with blocked messaging.\n\n  * `ANONYMIZE` –\
            \ Mask the content and replace it with identifier tags.\n\n  * `NONE`\
            \ – Take no action but return detection information in the trace response."
        inputEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether to enable guardrail evaluation on the input.
            When disabled, you aren't charged for the evaluation. The evaluation doesn't
            appear in the response.
        outputEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether to enable guardrail evaluation on the output.
            When disabled, you aren't charged for the evaluation. The evaluation doesn't
            appear in the response.
      required:
      - type
      - action
      description: The PII entity to configure for the guardrail.
    GuardrailPiiEntityType:
      type: string
      enum:
      - ADDRESS
      - AGE
      - AWS_ACCESS_KEY
      - AWS_SECRET_KEY
      - CA_HEALTH_NUMBER
      - CA_SOCIAL_INSURANCE_NUMBER
      - CREDIT_DEBIT_CARD_CVV
      - CREDIT_DEBIT_CARD_EXPIRY
      - CREDIT_DEBIT_CARD_NUMBER
      - DRIVER_ID
      - EMAIL
      - INTERNATIONAL_BANK_ACCOUNT_NUMBER
      - IP_ADDRESS
      - LICENSE_PLATE
      - MAC_ADDRESS
      - NAME
      - PASSWORD
      - PHONE
      - PIN
      - SWIFT_CODE
      - UK_NATIONAL_HEALTH_SERVICE_NUMBER
      - UK_NATIONAL_INSURANCE_NUMBER
      - UK_UNIQUE_TAXPAYER_REFERENCE_NUMBER
      - URL
      - USERNAME
      - US_BANK_ACCOUNT_NUMBER
      - US_BANK_ROUTING_NUMBER
      - US_INDIVIDUAL_TAX_IDENTIFICATION_NUMBER
      - US_PASSPORT_NUMBER
      - US_SOCIAL_SECURITY_NUMBER
      - VEHICLE_IDENTIFICATION_NUMBER
    GuardrailRegex:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the regular expression for the guardrail.
        description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The description of the regular expression for the guardrail.
        pattern:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The pattern of the regular expression configured for the guardrail.
        action:
          allOf:
          - $ref: '#/components/schemas/GuardrailSensitiveInformationAction'
          description: The action taken when a match to the regular expression is
            detected.
        inputAction:
          allOf:
          - $ref: '#/components/schemas/GuardrailSensitiveInformationAction'
          description: "The action to take when harmful content is detected in the\
            \ input. Supported values include:\n\n  * `BLOCK` – Block the content\
            \ and replace it with blocked messaging.\n\n  * `NONE` – Take no action\
            \ but return detection information in the trace response."
        outputAction:
          allOf:
          - $ref: '#/components/schemas/GuardrailSensitiveInformationAction'
          description: "The action to take when harmful content is detected in the\
            \ output. Supported values include:\n\n  * `BLOCK` – Block the content\
            \ and replace it with blocked messaging.\n\n  * `NONE` – Take no action\
            \ but return detection information in the trace response."
        inputEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether guardrail evaluation is enabled on the input.
            When disabled, you aren't charged for the evaluation. The evaluation doesn't
            appear in the response.
        outputEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether guardrail evaluation is enabled on the output.
            When disabled, you aren't charged for the evaluation. The evaluation doesn't
            appear in the response.
      required:
      - name
      - pattern
      - action
      description: The regular expression configured for the guardrail.
    GuardrailRegexConfig:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the regular expression to configure for the guardrail.
        description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The description of the regular expression to configure for
            the guardrail.
        pattern:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The regular expression pattern to configure for the guardrail.
        action:
          allOf:
          - $ref: '#/components/schemas/GuardrailSensitiveInformationAction'
          description: The guardrail action to configure when matching regular expression
            is detected.
        inputAction:
          allOf:
          - $ref: '#/components/schemas/GuardrailSensitiveInformationAction'
          description: "Specifies the action to take when harmful content is detected\
            \ in the input. Supported values include:\n\n  * `BLOCK` – Block the content\
            \ and replace it with blocked messaging.\n\n  * `NONE` – Take no action\
            \ but return detection information in the trace response."
        outputAction:
          allOf:
          - $ref: '#/components/schemas/GuardrailSensitiveInformationAction'
          description: "Specifies the action to take when harmful content is detected\
            \ in the output. Supported values include:\n\n  * `BLOCK` – Block the\
            \ content and replace it with blocked messaging.\n\n  * `NONE` – Take\
            \ no action but return detection information in the trace response."
        inputEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether to enable guardrail evaluation on the input.
            When disabled, you aren't charged for the evaluation. The evaluation doesn't
            appear in the response.
        outputEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether to enable guardrail evaluation on the output.
            When disabled, you aren't charged for the evaluation. The evaluation doesn't
            appear in the response.
      required:
      - name
      - pattern
      - action
      description: The regular expression to configure for the guardrail.
    GuardrailRegexes:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailRegex'
    GuardrailRegexesConfig:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailRegexConfig'
    GuardrailSensitiveInformationAction:
      type: string
      enum:
      - BLOCK
      - ANONYMIZE
      - NONE
    GuardrailSensitiveInformationPolicy:
      type: object
      properties:
        piiEntities:
          allOf:
          - $ref: '#/components/schemas/GuardrailPiiEntities'
          description: The list of PII entities configured for the guardrail.
        regexes:
          allOf:
          - $ref: '#/components/schemas/GuardrailRegexes'
          description: The list of regular expressions configured for the guardrail.
      description: Contains details about PII entities and regular expressions configured
        for the guardrail.
    GuardrailSensitiveInformationPolicyConfig:
      type: object
      properties:
        piiEntitiesConfig:
          allOf:
          - $ref: '#/components/schemas/GuardrailPiiEntitiesConfig'
          description: A list of PII entities to configure to the guardrail.
        regexesConfig:
          allOf:
          - $ref: '#/components/schemas/GuardrailRegexesConfig'
          description: A list of regular expressions to configure to the guardrail.
      description: Contains details about PII entities and regular expressions to
        configure for the guardrail.
    GuardrailStatus:
      type: string
      enum:
      - CREATING
      - UPDATING
      - VERSIONING
      - READY
      - FAILED
      - DELETING
    GuardrailStatusReason:
      type: string
      minLength: 1
      maxLength: 200
    GuardrailStatusReasons:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailStatusReason'
    GuardrailSummaries:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailSummary'
    GuardrailSummary:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/GuardrailId'
          description: The unique identifier of the guardrail.
        arn:
          allOf:
          - $ref: '#/components/schemas/GuardrailArn'
          description: The ARN of the guardrail.
        status:
          allOf:
          - $ref: '#/components/schemas/GuardrailStatus'
          description: The status of the guardrail.
        name:
          allOf:
          - $ref: '#/components/schemas/GuardrailName'
          description: The name of the guardrail.
        description:
          allOf:
          - $ref: '#/components/schemas/GuardrailDescription'
          description: A description of the guardrail.
        version:
          allOf:
          - $ref: '#/components/schemas/GuardrailVersion'
          description: The version of the guardrail.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time at which the guardrail was created.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time at which the guardrail was last updated.
      required:
      - id
      - arn
      - status
      - name
      - version
      - createdAt
      - updatedAt
      description: "Contains details about a guardrail.\n\nThis data type is used\
        \ in the following API operations:\n\n  * [ListGuardrails response body](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_ListGuardrails.html#API_ListGuardrails_ResponseSyntax)"
    GuardrailTopic:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/GuardrailTopicName'
          description: The name of the topic to deny.
        definition:
          allOf:
          - $ref: '#/components/schemas/GuardrailTopicDefinition'
          description: A definition of the topic to deny.
        examples:
          allOf:
          - $ref: '#/components/schemas/GuardrailTopicExamples'
          description: A list of prompts, each of which is an example of a prompt
            that can be categorized as belonging to the topic.
        type:
          allOf:
          - $ref: '#/components/schemas/GuardrailTopicType'
          description: Specifies to deny the topic.
        inputAction:
          allOf:
          - $ref: '#/components/schemas/GuardrailTopicAction'
          description: "The action to take when harmful content is detected in the\
            \ input. Supported values include:\n\n  * `BLOCK` – Block the content\
            \ and replace it with blocked messaging.\n\n  * `NONE` – Take no action\
            \ but return detection information in the trace response."
        outputAction:
          allOf:
          - $ref: '#/components/schemas/GuardrailTopicAction'
          description: "The action to take when harmful content is detected in the\
            \ output. Supported values include:\n\n  * `BLOCK` – Block the content\
            \ and replace it with blocked messaging.\n\n  * `NONE` – Take no action\
            \ but return detection information in the trace response."
        inputEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether guardrail evaluation is enabled on the input.
            When disabled, you aren't charged for the evaluation. The evaluation doesn't
            appear in the response.
        outputEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether guardrail evaluation is enabled on the output.
            When disabled, you aren't charged for the evaluation. The evaluation doesn't
            appear in the response.
      required:
      - name
      - definition
      description: "Details about topics for the guardrail to identify and deny.\n\
        \nThis data type is used in the following API operations:\n\n  * [GetGuardrail\
        \ response body](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_GetGuardrail.html#API_GetGuardrail_ResponseSyntax)"
    GuardrailTopicAction:
      type: string
      enum:
      - BLOCK
      - NONE
    GuardrailTopicConfig:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/GuardrailTopicName'
          description: The name of the topic to deny.
        definition:
          allOf:
          - $ref: '#/components/schemas/GuardrailTopicDefinition'
          description: A definition of the topic to deny.
        examples:
          allOf:
          - $ref: '#/components/schemas/GuardrailTopicExamples'
          description: A list of prompts, each of which is an example of a prompt
            that can be categorized as belonging to the topic.
        type:
          allOf:
          - $ref: '#/components/schemas/GuardrailTopicType'
          description: Specifies to deny the topic.
        inputAction:
          allOf:
          - $ref: '#/components/schemas/GuardrailTopicAction'
          description: "Specifies the action to take when harmful content is detected\
            \ in the input. Supported values include:\n\n  * `BLOCK` – Block the content\
            \ and replace it with blocked messaging.\n\n  * `NONE` – Take no action\
            \ but return detection information in the trace response."
        outputAction:
          allOf:
          - $ref: '#/components/schemas/GuardrailTopicAction'
          description: "Specifies the action to take when harmful content is detected\
            \ in the output. Supported values include:\n\n  * `BLOCK` – Block the\
            \ content and replace it with blocked messaging.\n\n  * `NONE` – Take\
            \ no action but return detection information in the trace response."
        inputEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether to enable guardrail evaluation on the input.
            When disabled, you aren't charged for the evaluation. The evaluation doesn't
            appear in the response.
        outputEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether to enable guardrail evaluation on the output.
            When disabled, you aren't charged for the evaluation. The evaluation doesn't
            appear in the response.
      required:
      - name
      - definition
      - type
      description: Details about topics for the guardrail to identify and deny.
    GuardrailTopicDefinition:
      type: string
      minLength: 1
      maxLength: 200
    GuardrailTopicExample:
      type: string
      minLength: 1
      maxLength: 100
    GuardrailTopicExamples:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailTopicExample'
    GuardrailTopicName:
      type: string
      pattern: ^[0-9a-zA-Z-_ !?.]+$
      minLength: 1
      maxLength: 100
    GuardrailTopicPolicy:
      type: object
      properties:
        topics:
          allOf:
          - $ref: '#/components/schemas/GuardrailTopics'
          description: A list of policies related to topics that the guardrail should
            deny.
      required:
      - topics
      description: "Contains details about topics that the guardrail should identify\
        \ and deny.\n\nThis data type is used in the following API operations:\n\n\
        \  * [GetGuardrail response body](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_GetGuardrail.html#API_GetGuardrail_ResponseSyntax)"
    GuardrailTopicPolicyConfig:
      type: object
      properties:
        topicsConfig:
          allOf:
          - $ref: '#/components/schemas/GuardrailTopicsConfig'
          description: A list of policies related to topics that the guardrail should
            deny.
      required:
      - topicsConfig
      description: Contains details about topics that the guardrail should identify
        and deny.
    GuardrailTopicType:
      type: string
      enum:
      - DENY
    GuardrailTopics:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailTopic'
    GuardrailTopicsConfig:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailTopicConfig'
    GuardrailVersion:
      type: string
      pattern: ^(([1-9][0-9]{0,7})|(DRAFT))$
    GuardrailWord:
      type: object
      properties:
        text:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Text of the word configured for the guardrail to block.
        inputAction:
          allOf:
          - $ref: '#/components/schemas/GuardrailWordAction'
          description: "The action to take when harmful content is detected in the\
            \ input. Supported values include:\n\n  * `BLOCK` – Block the content\
            \ and replace it with blocked messaging.\n\n  * `NONE` – Take no action\
            \ but return detection information in the trace response."
        outputAction:
          allOf:
          - $ref: '#/components/schemas/GuardrailWordAction'
          description: "The action to take when harmful content is detected in the\
            \ output. Supported values include:\n\n  * `BLOCK` – Block the content\
            \ and replace it with blocked messaging.\n\n  * `NONE` – Take no action\
            \ but return detection information in the trace response."
        inputEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether guardrail evaluation is enabled on the input.
            When disabled, you aren't charged for the evaluation. The evaluation doesn't
            appear in the response.
        outputEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether guardrail evaluation is enabled on the output.
            When disabled, you aren't charged for the evaluation. The evaluation doesn't
            appear in the response.
      required:
      - text
      description: A word configured for the guardrail.
    GuardrailWordAction:
      type: string
      enum:
      - BLOCK
      - NONE
    GuardrailWordConfig:
      type: object
      properties:
        text:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Text of the word configured for the guardrail to block.
        inputAction:
          allOf:
          - $ref: '#/components/schemas/GuardrailWordAction'
          description: "Specifies the action to take when harmful content is detected\
            \ in the input. Supported values include:\n\n  * `BLOCK` – Block the content\
            \ and replace it with blocked messaging.\n\n  * `NONE` – Take no action\
            \ but return detection information in the trace response."
        outputAction:
          allOf:
          - $ref: '#/components/schemas/GuardrailWordAction'
          description: "Specifies the action to take when harmful content is detected\
            \ in the output. Supported values include:\n\n  * `BLOCK` – Block the\
            \ content and replace it with blocked messaging.\n\n  * `NONE` – Take\
            \ no action but return detection information in the trace response."
        inputEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether to enable guardrail evaluation on the intput.
            When disabled, you aren't charged for the evaluation. The evaluation doesn't
            appear in the response.
        outputEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether to enable guardrail evaluation on the output.
            When disabled, you aren't charged for the evaluation. The evaluation doesn't
            appear in the response.
      required:
      - text
      description: A word to configure for the guardrail.
    GuardrailWordPolicy:
      type: object
      properties:
        words:
          allOf:
          - $ref: '#/components/schemas/GuardrailWords'
          description: A list of words configured for the guardrail.
        managedWordLists:
          allOf:
          - $ref: '#/components/schemas/GuardrailManagedWordLists'
          description: A list of managed words configured for the guardrail.
      description: Contains details about the word policy configured for the guardrail.
    GuardrailWordPolicyConfig:
      type: object
      properties:
        wordsConfig:
          allOf:
          - $ref: '#/components/schemas/GuardrailWordsConfig'
          description: A list of words to configure for the guardrail.
        managedWordListsConfig:
          allOf:
          - $ref: '#/components/schemas/GuardrailManagedWordListsConfig'
          description: A list of managed words to configure for the guardrail.
      description: Contains details about the word policy to configured for the guardrail.
    GuardrailWords:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailWord'
    GuardrailWordsConfig:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailWordConfig'
    HumanEvaluationConfig:
      type: object
      properties:
        humanWorkflowConfig:
          allOf:
          - $ref: '#/components/schemas/HumanWorkflowConfig'
          description: The parameters of the human workflow.
        customMetrics:
          allOf:
          - $ref: '#/components/schemas/HumanEvaluationCustomMetrics'
          description: A `HumanEvaluationCustomMetric` object. It contains the names
            the metrics, how the metrics are to be evaluated, an optional description.
        datasetMetricConfigs:
          allOf:
          - $ref: '#/components/schemas/EvaluationDatasetMetricConfigs'
          description: Use to specify the metrics, task, and prompt dataset to be
            used in your model evaluation job.
      required:
      - datasetMetricConfigs
      description: 'Specifies the custom metrics, how tasks will be rated, the flow
        definition ARN, and your custom prompt datasets. Model evaluation jobs use
        human workers _only_ support the use of custom prompt datasets. To learn more
        about custom prompt datasets and the required format, see [Custom prompt datasets](https://docs.aws.amazon.com/bedrock/latest/userguide/model-evaluation-prompt-datasets-custom.html).


        When you create custom metrics in `HumanEvaluationCustomMetric` you must specify
        the metric''s `name`. The list of `names` specified in the `HumanEvaluationCustomMetric`
        array, must match the `metricNames` array of strings specified in `EvaluationDatasetMetricConfig`.
        For example, if in the `HumanEvaluationCustomMetric` array your specified
        the names `"accuracy", "toxicity", "readability"` as custom metrics _then_
        the `metricNames` array would need to look like the following `["accuracy",
        "toxicity", "readability"]` in `EvaluationDatasetMetricConfig`.'
    HumanEvaluationCustomMetric:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/EvaluationMetricName'
          description: The name of the metric. Your human evaluators will see this
            name in the evaluation UI.
        description:
          allOf:
          - $ref: '#/components/schemas/EvaluationMetricDescription'
          description: An optional description of the metric. Use this parameter to
            provide more details about the metric.
        ratingMethod:
          allOf:
          - $ref: '#/components/schemas/EvaluationRatingMethod'
          description: Choose how you want your human workers to evaluation your model.
            Valid values for rating methods are `ThumbsUpDown`, `IndividualLikertScale`,`ComparisonLikertScale`,
            `ComparisonChoice`, and `ComparisonRank`
      required:
      - name
      - ratingMethod
      description: In a model evaluation job that uses human workers you must define
        the name of the metric, and how you want that metric rated `ratingMethod`,
        and an optional description of the metric.
    HumanEvaluationCustomMetrics:
      type: array
      items:
        $ref: '#/components/schemas/HumanEvaluationCustomMetric'
    HumanTaskInstructions:
      type: string
      pattern: ^[\S\s]+$
      minLength: 1
      maxLength: 5000
    HumanWorkflowConfig:
      type: object
      properties:
        flowDefinitionArn:
          allOf:
          - $ref: '#/components/schemas/SageMakerFlowDefinitionArn'
          description: The Amazon Resource Number (ARN) for the flow definition
        instructions:
          allOf:
          - $ref: '#/components/schemas/HumanTaskInstructions'
          description: Instructions for the flow definition
      required:
      - flowDefinitionArn
      description: Contains `SageMakerFlowDefinition` object. The object is used to
        specify the prompt dataset, task type, rating method and metric names.
    IdempotencyToken:
      type: string
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
      minLength: 1
      maxLength: 256
    Identifier:
      type: string
      minLength: 1
      maxLength: 1024
    ImportedModelArn:
      type: string
      pattern: ^arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:imported-model/[a-z0-9]{12}$
      minLength: 20
      maxLength: 1011
    ImportedModelIdentifier:
      type: string
      pattern: ^(arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:imported-model/[a-z0-9]{12})|(([0-9a-zA-Z][_-]?)+)$
      minLength: 1
      maxLength: 1011
    ImportedModelName:
      type: string
      pattern: ^([0-9a-zA-Z][_-]?)+$
      minLength: 1
      maxLength: 63
    ImportedModelSummary:
      type: object
      properties:
        modelArn:
          allOf:
          - $ref: '#/components/schemas/ImportedModelArn'
          description: The Amazon Resource Name (ARN) of the imported model.
        modelName:
          allOf:
          - $ref: '#/components/schemas/ImportedModelName'
          description: Name of the imported model.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Creation time of the imported model.
        instructSupported:
          allOf:
          - $ref: '#/components/schemas/InstructSupported'
          description: Specifies if the imported model supports converse.
        modelArchitecture:
          allOf:
          - $ref: '#/components/schemas/ModelArchitecture'
          description: The architecture of the imported model.
      required:
      - modelArn
      - modelName
      - creationTime
      description: Information about the imported model.
    ImportedModelSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ImportedModelSummary'
    InferenceProfileArn:
      type: string
      pattern: ^arn:aws(|-us-gov|-cn|-iso|-iso-b):bedrock:(|[0-9a-z-]{0,20}):(|[0-9]{12}):(inference-profile|application-inference-profile)/[a-zA-Z0-9-:.]+$
      minLength: 1
      maxLength: 2048
    InferenceProfileDescription:
      type: string
      pattern: ^([0-9a-zA-Z:.][ _-]?)+$
      minLength: 1
      maxLength: 200
    InferenceProfileId:
      type: string
      pattern: ^[a-zA-Z0-9-:.]+$
      minLength: 1
      maxLength: 64
    InferenceProfileIdentifier:
      type: string
      pattern: ^(arn:aws(|-us-gov|-cn|-iso|-iso-b):bedrock:(|[0-9a-z-]{0,20}):(|[0-9]{12}):(inference-profile|application-inference-profile)/)?[a-zA-Z0-9-:.]+$
      minLength: 1
      maxLength: 2048
    InferenceProfileModel:
      type: object
      properties:
        modelArn:
          allOf:
          - $ref: '#/components/schemas/FoundationModelArn'
          description: The Amazon Resource Name (ARN) of the model.
      description: Contains information about a model.
    InferenceProfileModelSource:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/InferenceProfileModelSourceArn'
        description: |-
          The ARN of the model or system-defined inference profile that is the source for the inference profile.
      description: |-
        Contains information about the model or system-defined inference profile that is the source for an inference profile..
    InferenceProfileModelSourceArn:
      type: string
      pattern: ^arn:aws(|-us-gov|-cn|-iso|-iso-b):bedrock:(|[0-9a-z-]{0,20}):(|[0-9]{12}):(inference-profile|foundation-model)/[a-zA-Z0-9-:.]+$
      minLength: 1
      maxLength: 2048
    InferenceProfileModels:
      type: array
      items:
        $ref: '#/components/schemas/InferenceProfileModel'
    InferenceProfileName:
      type: string
      pattern: ^([0-9a-zA-Z][ _-]?)+$
      minLength: 1
      maxLength: 64
    InferenceProfileStatus:
      type: string
      enum:
      - ACTIVE
    InferenceProfileSummaries:
      type: array
      items:
        $ref: '#/components/schemas/InferenceProfileSummary'
    InferenceProfileSummary:
      type: object
      properties:
        inferenceProfileName:
          allOf:
          - $ref: '#/components/schemas/InferenceProfileName'
          description: The name of the inference profile.
        description:
          allOf:
          - $ref: '#/components/schemas/InferenceProfileDescription'
          description: The description of the inference profile.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the inference profile was created.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the inference profile was last updated.
        inferenceProfileArn:
          allOf:
          - $ref: '#/components/schemas/InferenceProfileArn'
          description: The Amazon Resource Name (ARN) of the inference profile.
        models:
          allOf:
          - $ref: '#/components/schemas/InferenceProfileModels'
          description: A list of information about each model in the inference profile.
        inferenceProfileId:
          allOf:
          - $ref: '#/components/schemas/InferenceProfileId'
          description: The unique identifier of the inference profile.
        status:
          allOf:
          - $ref: '#/components/schemas/InferenceProfileStatus'
          description: The status of the inference profile. `ACTIVE` means that the
            inference profile is ready to be used.
        type:
          allOf:
          - $ref: '#/components/schemas/InferenceProfileType'
          description: "The type of the inference profile. The following types are\
            \ possible:\n\n  * `SYSTEM_DEFINED` – The inference profile is defined\
            \ by Amazon Bedrock. You can route inference requests across regions with\
            \ these inference profiles.\n\n  * `APPLICATION` – The inference profile\
            \ was created by a user. This type of inference profile can track metrics\
            \ and costs when invoking the model in it. The inference profile may route\
            \ requests to one or multiple regions."
      required:
      - inferenceProfileName
      - inferenceProfileArn
      - models
      - inferenceProfileId
      - status
      - type
      description: Contains information about an inference profile.
    InferenceProfileType:
      type: string
      enum:
      - SYSTEM_DEFINED
      - APPLICATION
    InferenceType:
      type: string
      enum:
      - ON_DEMAND
      - PROVISIONED
    InferenceTypeList:
      type: array
      items:
        $ref: '#/components/schemas/InferenceType'
    InstanceCount:
      type: integer
      minimum: 1
    InstanceType:
      type: string
      minLength: 1
      maxLength: 50
    InstructSupported:
      type: boolean
    InternalServerException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/NonBlankString'
      description: An internal server error occurred. Retry your request.
    InvocationLogSource:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/S3Uri'
        description: |-
          The URI of an invocation log in a bucket.
      description: |-
        A storage location for invocation logs.
    InvocationLogsConfig:
      type: object
      properties:
        usePromptResponse:
          allOf:
          - $ref: '#/components/schemas/UsePromptResponse'
          description: Whether to use the model's response for training, or just the
            prompt. The default value is `False`.
        invocationLogSource:
          allOf:
          - $ref: '#/components/schemas/InvocationLogSource'
          description: The source of the invocation logs.
        requestMetadataFilters:
          allOf:
          - $ref: '#/components/schemas/RequestMetadataFilters'
          description: Rules for filtering invocation logs based on request metadata.
      required:
      - invocationLogSource
      description: Settings for using invocation logs to customize a model.
    JobName:
      type: string
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9\+\-\.])*$
      minLength: 1
      maxLength: 63
    KbInferenceConfig:
      type: object
      properties:
        textInferenceConfig:
          allOf:
          - $ref: '#/components/schemas/TextInferenceConfig'
          description: Contains configuration details for text generation using a
            language model via the `RetrieveAndGenerate` function.
      description: Contains configuration details of the inference for knowledge base
        retrieval and response generation.
    KeyPrefix:
      type: string
      maxLength: 1024
    KmsKeyArn:
      type: string
      pattern: ^arn:aws(-[^:]+)?:kms:[a-zA-Z0-9-]*:[0-9]{12}:key/[a-zA-Z0-9-]{36}$
      minLength: 1
      maxLength: 2048
    KmsKeyId:
      type: string
      pattern: ^(arn:aws(-[^:]+)?:kms:[a-zA-Z0-9-]*:[0-9]{12}:((key/[a-zA-Z0-9-]{36})|(alias/[a-zA-Z0-9-_/]+)))|([a-zA-Z0-9-]{36})|(alias/[a-zA-Z0-9-_/]+)$
      minLength: 1
      maxLength: 2048
    KnowledgeBaseConfig:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/RetrieveConfig'
        description: |-
          Contains configuration details for retrieving information from a knowledge base.
      - allOf:
        - $ref: '#/components/schemas/RetrieveAndGenerateConfiguration'
        description: |-
          Contains configuration details for retrieving information from a knowledge base and generating responses.
      description: |-
        The configuration details for retrieving information from a knowledge base and generating responses.
    KnowledgeBaseId:
      type: string
      pattern: ^[0-9a-zA-Z]+$
      maxLength: 10
    KnowledgeBaseRetrievalConfiguration:
      type: object
      properties:
        vectorSearchConfiguration:
          allOf:
          - $ref: '#/components/schemas/KnowledgeBaseVectorSearchConfiguration'
          description: Contains configuration details for returning the results from
            the vector search.
      required:
      - vectorSearchConfiguration
      description: Contains configuration details for retrieving information from
        a knowledge base.
    KnowledgeBaseRetrieveAndGenerateConfiguration:
      type: object
      properties:
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/KnowledgeBaseId'
          description: The unique identifier of the knowledge base.
        modelArn:
          allOf:
          - $ref: '#/components/schemas/BedrockModelArn'
          description: The Amazon Resource Name (ARN) of the foundation model or [inference
            profile](https://docs.aws.amazon.com/bedrock/latest/userguide/cross-region-inference.html)
            used to generate responses.
        retrievalConfiguration:
          allOf:
          - $ref: '#/components/schemas/KnowledgeBaseRetrievalConfiguration'
          description: Contains configuration details for retrieving text chunks.
        generationConfiguration:
          allOf:
          - $ref: '#/components/schemas/GenerationConfiguration'
          description: Contains configurations details for response generation based
            on retrieved text chunks.
        orchestrationConfiguration:
          allOf:
          - $ref: '#/components/schemas/OrchestrationConfiguration'
          description: Contains configuration details for the model to process the
            prompt prior to retrieval and response generation.
      required:
      - knowledgeBaseId
      - modelArn
      description: Contains configuration details for retrieving information from
        a knowledge base and generating responses.
    KnowledgeBaseVectorSearchConfiguration:
      type: object
      properties:
        numberOfResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of text chunks to retrieve; the number of results
            to return.
        overrideSearchType:
          allOf:
          - $ref: '#/components/schemas/SearchType'
          description: By default, Amazon Bedrock decides a search strategy for you.
            If you're using an Amazon OpenSearch Serverless vector store that contains
            a filterable text field, you can specify whether to query the knowledge
            base with a `HYBRID` search using both vector embeddings and raw text,
            or `SEMANTIC` search using only vector embeddings. For other vector store
            configurations, only `SEMANTIC` search is available.
        filter:
          allOf:
          - $ref: '#/components/schemas/RetrievalFilter'
          description: Specifies the filters to use on the metadata fields in the
            knowledge base data sources before returning results.
      description: The configuration details for returning the results from the knowledge
        base vector search.
    ListCustomModelsRequest:
      type: object
      properties:
        creationTimeBefore:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Return custom models created before the specified time.
        creationTimeAfter:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Return custom models created after the specified time.
        nameContains:
          allOf:
          - $ref: '#/components/schemas/CustomModelName'
          description: Return custom models only if the job name contains these characters.
        baseModelArnEquals:
          allOf:
          - $ref: '#/components/schemas/ModelArn'
          description: Return custom models only if the base model Amazon Resource
            Name (ARN) matches this parameter.
        foundationModelArnEquals:
          allOf:
          - $ref: '#/components/schemas/FoundationModelArn'
          description: Return custom models only if the foundation model Amazon Resource
            Name (ARN) matches this parameter.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in the response. If
            the total number of results is greater than this value, use the token
            returned in the response in the `nextToken` field when making another
            request to return the next batch of results.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: If the total number of results is greater than the `maxResults`
            value provided in the request, enter the token returned in the `nextToken`
            field in the response in this field to return the next batch of results.
        sortBy:
          allOf:
          - $ref: '#/components/schemas/SortModelsBy'
          description: The field to sort by in the returned list of models.
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          description: The sort order of the results.
        isOwned:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Return custom models depending on if the current account owns
            them (`true`) or if they were shared with the current account (`false`).
    ListCustomModelsResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: If the total number of results is greater than the `maxResults`
            value provided in the request, use this token when making another request
            in the `nextToken` field to return the next batch of results.
        modelSummaries:
          allOf:
          - $ref: '#/components/schemas/CustomModelSummaryList'
          description: Model summaries.
    ListEvaluationJobsRequest:
      type: object
      properties:
        creationTimeAfter:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: A filter to only list evaluation jobs created after a specified
            time.
        creationTimeBefore:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: A filter to only list evaluation jobs created before a specified
            time.
        statusEquals:
          allOf:
          - $ref: '#/components/schemas/EvaluationJobStatus'
          description: A filter to only list evaluation jobs that are of a certain
            status.
        applicationTypeEquals:
          allOf:
          - $ref: '#/components/schemas/ApplicationType'
          description: A filter to only list evaluation jobs that are either model
            evaluations or knowledge base evaluations.
        nameContains:
          allOf:
          - $ref: '#/components/schemas/EvaluationJobName'
          description: A filter to only list evaluation jobs that contain a specified
            string in the job name.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: Continuation token from the previous response, for Amazon Bedrock
            to list the next set of results.
        sortBy:
          allOf:
          - $ref: '#/components/schemas/SortJobsBy'
          description: Specifies a creation time to sort the list of evaluation jobs
            by when they were created.
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          description: Specifies whether to sort the list of evaluation jobs by either
            ascending or descending order.
    ListEvaluationJobsResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: Continuation token from the previous response, for Amazon Bedrock
            to list the next set of results.
        jobSummaries:
          allOf:
          - $ref: '#/components/schemas/EvaluationSummaries'
          description: A list of summaries of the evaluation jobs.
    ListFoundationModelsRequest:
      type: object
      properties:
        byProvider:
          allOf:
          - $ref: '#/components/schemas/Provider'
          description: Return models belonging to the model provider that you specify.
        byCustomizationType:
          allOf:
          - $ref: '#/components/schemas/ModelCustomization'
          description: Return models that support the customization type that you
            specify. For more information, see [Custom models](https://docs.aws.amazon.com/bedrock/latest/userguide/custom-models.html)
            in the [Amazon Bedrock User Guide](https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html).
        byOutputModality:
          allOf:
          - $ref: '#/components/schemas/ModelModality'
          description: Return models that support the output modality that you specify.
        byInferenceType:
          allOf:
          - $ref: '#/components/schemas/InferenceType'
          description: Return models that support the inference type that you specify.
            For more information, see [Provisioned Throughput](https://docs.aws.amazon.com/bedrock/latest/userguide/prov-throughput.html)
            in the [Amazon Bedrock User Guide](https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html).
    ListFoundationModelsResponse:
      type: object
      properties:
        modelSummaries:
          allOf:
          - $ref: '#/components/schemas/FoundationModelSummaryList'
          description: A list of Amazon Bedrock foundation models.
    ListGuardrailsRequest:
      type: object
      properties:
        guardrailIdentifier:
          allOf:
          - $ref: '#/components/schemas/GuardrailIdentifier'
          description: The unique identifier of the guardrail. This can be an ID or
            the ARN.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in the response.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: If there are more results than were returned in the response,
            the response returns a `nextToken` that you can send in another `ListGuardrails`
            request to see the next batch of results.
    ListGuardrailsResponse:
      type: object
      properties:
        guardrails:
          allOf:
          - $ref: '#/components/schemas/GuardrailSummaries'
          description: A list of objects, each of which contains details about a guardrail.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: If there are more results than were returned in the response,
            the response returns a `nextToken` that you can send in another `ListGuardrails`
            request to see the next batch of results.
      required:
      - guardrails
    ListImportedModelsRequest:
      type: object
      properties:
        creationTimeBefore:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Return imported models that created before the specified time.
        creationTimeAfter:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Return imported models that were created after the specified
            time.
        nameContains:
          allOf:
          - $ref: '#/components/schemas/ImportedModelName'
          description: Return imported models only if the model name contains these
            characters.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in the response. If
            the total number of results is greater than this value, use the token
            returned in the response in the `nextToken` field when making another
            request to return the next batch of results.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: If the total number of results is greater than the `maxResults`
            value provided in the request, enter the token returned in the `nextToken`
            field in the response in this field to return the next batch of results.
        sortBy:
          allOf:
          - $ref: '#/components/schemas/SortModelsBy'
          description: The field to sort by in the returned list of imported models.
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          description: Specifies whetehr to sort the results in ascending or descending
            order.
    ListImportedModelsResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: If the total number of results is greater than the `maxResults`
            value provided in the request, use this token when making another request
            in the `nextToken` field to return the next batch of results.
        modelSummaries:
          allOf:
          - $ref: '#/components/schemas/ImportedModelSummaryList'
          description: Model summaries.
    ListInferenceProfilesRequest:
      type: object
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in the response. If
            the total number of results is greater than this value, use the token
            returned in the response in the `nextToken` field when making another
            request to return the next batch of results.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: If the total number of results is greater than the `maxResults`
            value provided in the request, enter the token returned in the `nextToken`
            field in the response in this field to return the next batch of results.
        typeEquals:
          allOf:
          - $ref: '#/components/schemas/InferenceProfileType'
          description: "Filters for inference profiles that match the type you specify.\n\
            \n  * `SYSTEM_DEFINED` – The inference profile is defined by Amazon Bedrock.\
            \ You can route inference requests across regions with these inference\
            \ profiles.\n\n  * `APPLICATION` – The inference profile was created by\
            \ a user. This type of inference profile can track metrics and costs when\
            \ invoking the model in it. The inference profile may route requests to\
            \ one or multiple regions."
    ListInferenceProfilesResponse:
      type: object
      properties:
        inferenceProfileSummaries:
          allOf:
          - $ref: '#/components/schemas/InferenceProfileSummaries'
          description: A list of information about each inference profile that you
            can use.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: If the total number of results is greater than the `maxResults`
            value provided in the request, use this token when making another request
            in the `nextToken` field to return the next batch of results.
    ListMarketplaceModelEndpointsRequest:
      type: object
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in a single call. If
            more results are available, the operation returns a `NextToken` value.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The token for the next set of results. You receive this token
            from a previous `ListMarketplaceModelEndpoints` call.
        modelSourceEquals:
          allOf:
          - $ref: '#/components/schemas/ModelSourceIdentifier'
          description: If specified, only endpoints for the given model source identifier
            are returned.
    ListMarketplaceModelEndpointsResponse:
      type: object
      properties:
        marketplaceModelEndpoints:
          allOf:
          - $ref: '#/components/schemas/MarketplaceModelEndpointSummaries'
          description: An array of endpoint summaries.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The token for the next set of results. Use this token to get
            the next set of results.
    ListModelCopyJobsRequest:
      type: object
      properties:
        creationTimeAfter:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Filters for model copy jobs created after the specified time.
        creationTimeBefore:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Filters for model copy jobs created before the specified time.
        statusEquals:
          allOf:
          - $ref: '#/components/schemas/ModelCopyJobStatus'
          description: Filters for model copy jobs whose status matches the value
            that you specify.
        sourceAccountEquals:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: Filters for model copy jobs in which the account that the source
            model belongs to is equal to the value that you specify.
        sourceModelArnEquals:
          allOf:
          - $ref: '#/components/schemas/ModelArn'
          description: Filters for model copy jobs in which the Amazon Resource Name
            (ARN) of the source model to is equal to the value that you specify.
        targetModelNameContains:
          allOf:
          - $ref: '#/components/schemas/CustomModelName'
          description: Filters for model copy jobs in which the name of the copied
            model contains the string that you specify.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in the response. If
            the total number of results is greater than this value, use the token
            returned in the response in the `nextToken` field when making another
            request to return the next batch of results.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: If the total number of results is greater than the `maxResults`
            value provided in the request, enter the token returned in the `nextToken`
            field in the response in this field to return the next batch of results.
        sortBy:
          allOf:
          - $ref: '#/components/schemas/SortJobsBy'
          description: The field to sort by in the returned list of model copy jobs.
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          description: Specifies whether to sort the results in ascending or descending
            order.
    ListModelCopyJobsResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: If the total number of results is greater than the `maxResults`
            value provided in the request, use this token when making another request
            in the `nextToken` field to return the next batch of results.
        modelCopyJobSummaries:
          allOf:
          - $ref: '#/components/schemas/ModelCopyJobSummaries'
          description: A list of information about each model copy job.
    ListModelCustomizationJobsRequest:
      type: object
      properties:
        creationTimeAfter:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Return customization jobs created after the specified time.
        creationTimeBefore:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Return customization jobs created before the specified time.
        statusEquals:
          allOf:
          - $ref: '#/components/schemas/FineTuningJobStatus'
          description: Return customization jobs with the specified status.
        nameContains:
          allOf:
          - $ref: '#/components/schemas/JobName'
          description: Return customization jobs only if the job name contains these
            characters.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in the response. If
            the total number of results is greater than this value, use the token
            returned in the response in the `nextToken` field when making another
            request to return the next batch of results.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: If the total number of results is greater than the `maxResults`
            value provided in the request, enter the token returned in the `nextToken`
            field in the response in this field to return the next batch of results.
        sortBy:
          allOf:
          - $ref: '#/components/schemas/SortJobsBy'
          description: The field to sort by in the returned list of jobs.
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          description: The sort order of the results.
    ListModelCustomizationJobsResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: If the total number of results is greater than the `maxResults`
            value provided in the request, use this token when making another request
            in the `nextToken` field to return the next batch of results.
        modelCustomizationJobSummaries:
          allOf:
          - $ref: '#/components/schemas/ModelCustomizationJobSummaries'
          description: Job summaries.
    ListModelImportJobsRequest:
      type: object
      properties:
        creationTimeAfter:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Return import jobs that were created after the specified time.
        creationTimeBefore:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Return import jobs that were created before the specified time.
        statusEquals:
          allOf:
          - $ref: '#/components/schemas/ModelImportJobStatus'
          description: Return imported jobs with the specified status.
        nameContains:
          allOf:
          - $ref: '#/components/schemas/JobName'
          description: Return imported jobs only if the job name contains these characters.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in the response. If
            the total number of results is greater than this value, use the token
            returned in the response in the `nextToken` field when making another
            request to return the next batch of results.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: If the total number of results is greater than the `maxResults`
            value provided in the request, enter the token returned in the `nextToken`
            field in the response in this field to return the next batch of results.
        sortBy:
          allOf:
          - $ref: '#/components/schemas/SortJobsBy'
          description: The field to sort by in the returned list of imported jobs.
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          description: Specifies whether to sort the results in ascending or descending
            order.
    ListModelImportJobsResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: If the total number of results is greater than the `maxResults`
            value provided in the request, enter the token returned in the `nextToken`
            field in the response in this field to return the next batch of results.
        modelImportJobSummaries:
          allOf:
          - $ref: '#/components/schemas/ModelImportJobSummaries'
          description: Import job summaries.
    ListModelInvocationJobsRequest:
      type: object
      properties:
        submitTimeAfter:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Specify a time to filter for batch inference jobs that were
            submitted after the time you specify.
        submitTimeBefore:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Specify a time to filter for batch inference jobs that were
            submitted before the time you specify.
        statusEquals:
          allOf:
          - $ref: '#/components/schemas/ModelInvocationJobStatus'
          description: "Specify a status to filter for batch inference jobs whose\
            \ statuses match the string you specify.\n\nThe following statuses are\
            \ possible:\n\n  * Submitted – This job has been submitted to a queue\
            \ for validation.\n\n  * Validating – This job is being validated for\
            \ the requirements described in [Format and upload your batch inference\
            \ data](https://docs.aws.amazon.com/bedrock/latest/userguide/batch-inference-data.html).\
            \ The criteria include the following:\n\n    * Your IAM service role has\
            \ access to the Amazon S3 buckets containing your files.\n\n    * Your\
            \ files are .jsonl files and each individual record is a JSON object in\
            \ the correct format. Note that validation doesn't check if the `modelInput`\
            \ value matches the request body for the model.\n\n    * Your files fulfill\
            \ the requirements for file size and number of records. For more information,\
            \ see [Quotas for Amazon Bedrock](https://docs.aws.amazon.com/bedrock/latest/userguide/quotas.html).\n\
            \n  * Scheduled – This job has been validated and is now in a queue. The\
            \ job will automatically start when it reaches its turn.\n\n  * Expired\
            \ – This job timed out because it was scheduled but didn't begin before\
            \ the set timeout duration. Submit a new job request.\n\n  * InProgress\
            \ – This job has begun. You can start viewing the results in the output\
            \ S3 location.\n\n  * Completed – This job has successfully completed.\
            \ View the output files in the output S3 location.\n\n  * PartiallyCompleted\
            \ – This job has partially completed. Not all of your records could be\
            \ processed in time. View the output files in the output S3 location.\n\
            \n  * Failed – This job has failed. Check the failure message for any\
            \ further details. For further assistance, reach out to the [Amazon Web\
            \ ServicesSupport Center](https://console.aws.amazon.com/support/home/).\n\
            \n  * Stopped – This job was stopped by a user.\n\n  * Stopping – This\
            \ job is being stopped by a user."
        nameContains:
          allOf:
          - $ref: '#/components/schemas/ModelInvocationJobName'
          description: Specify a string to filter for batch inference jobs whose names
            contain the string.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return. If there are more
            results than the number that you specify, a `nextToken` value is returned.
            Use the `nextToken` in a request to return the next batch of results.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: If there were more results than the value you specified in
            the `maxResults` field in a previous `ListModelInvocationJobs` request,
            the response would have returned a `nextToken` value. To see the next
            batch of results, send the `nextToken` value in another request.
        sortBy:
          allOf:
          - $ref: '#/components/schemas/SortJobsBy'
          description: An attribute by which to sort the results.
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          description: Specifies whether to sort the results by ascending or descending
            order.
    ListModelInvocationJobsResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: If there are more results than can fit in the response, a `nextToken`
            is returned. Use the `nextToken` in a request to return the next batch
            of results.
        invocationJobSummaries:
          allOf:
          - $ref: '#/components/schemas/ModelInvocationJobSummaries'
          description: A list of items, each of which contains a summary about a batch
            inference job.
    ListPromptRoutersRequest:
      type: object
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of prompt routers to return in one page
            of results.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: Specify the pagination token from a previous request to retrieve
            the next page of results.
        type:
          allOf:
          - $ref: '#/components/schemas/PromptRouterType'
          description: The type of the prompt routers, such as whether it's default
            or custom.
    ListPromptRoutersResponse:
      type: object
      properties:
        promptRouterSummaries:
          allOf:
          - $ref: '#/components/schemas/PromptRouterSummaries'
          description: A list of prompt router summaries.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: Specify the pagination token from a previous request to retrieve
            the next page of results.
    ListProvisionedModelThroughputsRequest:
      type: object
      properties:
        creationTimeAfter:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: A filter that returns Provisioned Throughputs created after
            the specified time.
        creationTimeBefore:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: A filter that returns Provisioned Throughputs created before
            the specified time.
        statusEquals:
          allOf:
          - $ref: '#/components/schemas/ProvisionedModelStatus'
          description: A filter that returns Provisioned Throughputs if their statuses
            matches the value that you specify.
        modelArnEquals:
          allOf:
          - $ref: '#/components/schemas/ModelArn'
          description: A filter that returns Provisioned Throughputs whose model Amazon
            Resource Name (ARN) is equal to the value that you specify.
        nameContains:
          allOf:
          - $ref: '#/components/schemas/ProvisionedModelName'
          description: A filter that returns Provisioned Throughputs if their name
            contains the expression that you specify.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: THe maximum number of results to return in the response. If
            there are more results than the number you specified, the response returns
            a `nextToken` value. To see the next batch of results, send the `nextToken`
            value in another list request.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: If there are more results than the number you specified in
            the `maxResults` field, the response returns a `nextToken` value. To see
            the next batch of results, specify the `nextToken` value in this field.
        sortBy:
          allOf:
          - $ref: '#/components/schemas/SortByProvisionedModels'
          description: The field by which to sort the returned list of Provisioned
            Throughputs.
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          description: The sort order of the results.
    ListProvisionedModelThroughputsResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: If there are more results than the number you specified in
            the `maxResults` field, this value is returned. To see the next batch
            of results, include this value in the `nextToken` field in another list
            request.
        provisionedModelSummaries:
          allOf:
          - $ref: '#/components/schemas/ProvisionedModelSummaries'
          description: A list of summaries, one for each Provisioned Throughput in
            the response.
    ListTagsForResourceRequest:
      type: object
      properties:
        resourceARN:
          allOf:
          - $ref: '#/components/schemas/TaggableResourcesArn'
          description: The Amazon Resource Name (ARN) of the resource.
      required:
      - resourceARN
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: An array of the tags associated with this resource.
    LogGroupName:
      type: string
      minLength: 1
      maxLength: 512
    LoggingConfig:
      type: object
      properties:
        cloudWatchConfig:
          allOf:
          - $ref: '#/components/schemas/CloudWatchConfig'
          description: CloudWatch logging configuration.
        s3Config:
          allOf:
          - $ref: '#/components/schemas/S3Config'
          description: S3 configuration for storing log data.
        textDataDeliveryEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Set to include text data in the log delivery.
        imageDataDeliveryEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Set to include image data in the log delivery.
        embeddingDataDeliveryEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Set to include embeddings data in the log delivery.
        videoDataDeliveryEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Set to include video data in the log delivery.
      description: Configuration fields for invocation logging.
    MarketplaceModelEndpoint:
      type: object
      properties:
        endpointArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the endpoint.
        modelSourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/ModelSourceIdentifier'
          description: The ARN of the model from Amazon Bedrock Marketplace that is
            deployed on this endpoint.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: The overall status of the endpoint in Amazon Bedrock Marketplace
            (e.g., ACTIVE, INACTIVE).
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Additional information about the overall status, if available.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the endpoint was registered.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the endpoint was last updated.
        endpointConfig:
          allOf:
          - $ref: '#/components/schemas/EndpointConfig'
          description: The configuration of the endpoint, including the number and
            type of instances used.
        endpointStatus:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The current status of the endpoint (e.g., Creating, InService,
            Updating, Failed).
        endpointStatusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Additional information about the endpoint status, if available.
      required:
      - endpointArn
      - modelSourceIdentifier
      - createdAt
      - updatedAt
      - endpointConfig
      - endpointStatus
      description: Contains details about an endpoint for a model from Amazon Bedrock
        Marketplace.
    MarketplaceModelEndpointSummaries:
      type: array
      items:
        $ref: '#/components/schemas/MarketplaceModelEndpointSummary'
    MarketplaceModelEndpointSummary:
      type: object
      properties:
        endpointArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the endpoint.
        modelSourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/ModelSourceIdentifier'
          description: The ARN of the model from Amazon Bedrock Marketplace that is
            deployed on this endpoint.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: The overall status of the endpoint in Amazon Bedrock Marketplace.
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Additional information about the overall status, if available.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the endpoint was created.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the endpoint was last updated.
      required:
      - endpointArn
      - modelSourceIdentifier
      - createdAt
      - updatedAt
      description: Provides a summary of an endpoint for a model from Amazon Bedrock
        Marketplace.
    MaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    MaxTokens:
      type: integer
      minimum: 0
      maximum: 65536
    Message:
      type: string
      maxLength: 2048
    MetricFloat:
      type: number
      format: float
    MetricName:
      type: string
      pattern: ^[0-9a-zA-Z-_.]+$
      minLength: 1
      maxLength: 63
    ModelArchitecture:
      type: string
    ModelArn:
      type: string
      pattern: ^arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:(([0-9]{12}:custom-model/[a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}(([:][a-z0-9-]{1,63}){0,2})?/[a-z0-9]{12})|(:foundation-model/[a-z0-9-]{1,63}[.]{1}([a-z0-9-]{1,63}[.]){0,2}[a-z0-9-]{1,63}([:][a-z0-9-]{1,63}){0,2}))$
      minLength: 20
      maxLength: 1011
    ModelCopyJobArn:
      type: string
      pattern: ^arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:model-copy-job/[a-z0-9]{12}$
      maxLength: 1011
    ModelCopyJobStatus:
      type: string
      enum:
      - InProgress
      - Completed
      - Failed
    ModelCopyJobSummaries:
      type: array
      items:
        $ref: '#/components/schemas/ModelCopyJobSummary'
    ModelCopyJobSummary:
      type: object
      properties:
        jobArn:
          allOf:
          - $ref: '#/components/schemas/ModelCopyJobArn'
          description: The Amazon Resoource Name (ARN) of the model copy job.
        status:
          allOf:
          - $ref: '#/components/schemas/ModelCopyJobStatus'
          description: The status of the model copy job.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time that the model copy job was created.
        targetModelArn:
          allOf:
          - $ref: '#/components/schemas/CustomModelArn'
          description: The Amazon Resource Name (ARN) of the copied model.
        targetModelName:
          allOf:
          - $ref: '#/components/schemas/CustomModelName'
          description: The name of the copied model.
        sourceAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The unique identifier of the account that the model being copied
            originated from.
        sourceModelArn:
          allOf:
          - $ref: '#/components/schemas/ModelArn'
          description: The Amazon Resource Name (ARN) of the original model being
            copied.
        targetModelKmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          description: The Amazon Resource Name (ARN) of the KMS key used to encrypt
            the copied model.
        targetModelTags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: Tags associated with the copied model.
        failureMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: If a model fails to be copied, a message describing why the
            job failed is included here.
        sourceModelName:
          allOf:
          - $ref: '#/components/schemas/CustomModelName'
          description: The name of the original model being copied.
      required:
      - jobArn
      - status
      - creationTime
      - targetModelArn
      - sourceAccountId
      - sourceModelArn
      description: "Contains details about each model copy job.\n\nThis data type\
        \ is used in the following API operations:\n\n  * [ListModelCopyJobs response](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_ListModelCopyJobs.html#API_ListModelCopyJobs_ResponseSyntax)"
    ModelCustomization:
      type: string
      enum:
      - FINE_TUNING
      - CONTINUED_PRE_TRAINING
      - DISTILLATION
    ModelCustomizationHyperParameters:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    ModelCustomizationJobArn:
      type: string
      pattern: ^arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:model-customization-job/[a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}([a-z0-9-]{1,63}[.]){0,2}[a-z0-9-]{1,63}([:][a-z0-9-]{1,63}){0,2}/[a-z0-9]{12}$
      maxLength: 1011
    ModelCustomizationJobIdentifier:
      type: string
      pattern: ^(arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:model-customization-job/[a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}([a-z0-9-]{1,63}[.]){0,2}[a-z0-9-]{1,63}([:][a-z0-9-]{1,63}){0,2}/[a-z0-9]{12})|([a-zA-Z0-9](-*[a-zA-Z0-9\+\-\.])*)$
      maxLength: 1011
    ModelCustomizationJobStatus:
      type: string
      enum:
      - InProgress
      - Completed
      - Failed
      - Stopping
      - Stopped
    ModelCustomizationJobSummaries:
      type: array
      items:
        $ref: '#/components/schemas/ModelCustomizationJobSummary'
    ModelCustomizationJobSummary:
      type: object
      properties:
        jobArn:
          allOf:
          - $ref: '#/components/schemas/ModelCustomizationJobArn'
          description: Amazon Resource Name (ARN) of the customization job.
        baseModelArn:
          allOf:
          - $ref: '#/components/schemas/ModelArn'
          description: Amazon Resource Name (ARN) of the base model.
        jobName:
          allOf:
          - $ref: '#/components/schemas/JobName'
          description: Name of the customization job.
        status:
          allOf:
          - $ref: '#/components/schemas/ModelCustomizationJobStatus'
          description: Status of the customization job.
        lastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Time that the customization job was last modified.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Creation time of the custom model.
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Time that the customization job ended.
        customModelArn:
          allOf:
          - $ref: '#/components/schemas/CustomModelArn'
          description: Amazon Resource Name (ARN) of the custom model.
        customModelName:
          allOf:
          - $ref: '#/components/schemas/CustomModelName'
          description: Name of the custom model.
        customizationType:
          allOf:
          - $ref: '#/components/schemas/CustomizationType'
          description: Specifies whether to carry out continued pre-training of a
            model or whether to fine-tune it. For more information, see [Custom models](https://docs.aws.amazon.com/bedrock/latest/userguide/custom-models.html).
      required:
      - jobArn
      - baseModelArn
      - jobName
      - status
      - creationTime
      description: Information about one customization job
    ModelCustomizationList:
      type: array
      items:
        $ref: '#/components/schemas/ModelCustomization'
    ModelDataSource:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/S3DataSource'
        description: |-
          The Amazon S3 data source of the imported model.
      description: |-
        Data source for the imported model.
    ModelId:
      type: string
      pattern: ^(arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:(([0-9]{12}:custom-model/[a-z0-9-]{1,63}[.]{1}[a-z0-9-:]{1,63}/[a-z0-9]{12}$)|(:foundation-model/([a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}([.]?[a-z0-9-]{1,63})([:][a-z0-9-]{1,63}){0,2})|(([0-9a-zA-Z][_-]?)+)$)|([0-9]{12}:(inference-profile|application-inference-profile)/[a-zA-Z0-9-:.]+$)))|([a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}([.]?[a-z0-9-]{1,63})([:][a-z0-9-]{1,63}){0,2})|(([0-9a-zA-Z][_-]?)+)$
      minLength: 1
      maxLength: 2048
    ModelIdentifier:
      type: string
      pattern: ^arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:(([0-9]{12}:custom-model/[a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}(([:][a-z0-9-]{1,63}){0,2})?/[a-z0-9]{12})|(:foundation-model/([a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}([.]?[a-z0-9-]{1,63})([:][a-z0-9-]{1,63}){0,2})))|(([a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}([.]?[a-z0-9-]{1,63})([:][a-z0-9-]{1,63}){0,2}))|(([0-9a-zA-Z][_-]?)+)$
      minLength: 1
      maxLength: 2048
    ModelImportJobArn:
      type: string
      pattern: ^arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:model-import-job/[a-z0-9]{12}$
      maxLength: 1011
    ModelImportJobIdentifier:
      type: string
      pattern: ^(arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:model-import-job/[a-z0-9]{12})|([a-zA-Z0-9](-*[a-zA-Z0-9\+\-\.])*)$
      maxLength: 1011
    ModelImportJobStatus:
      type: string
      enum:
      - InProgress
      - Completed
      - Failed
    ModelImportJobSummaries:
      type: array
      items:
        $ref: '#/components/schemas/ModelImportJobSummary'
    ModelImportJobSummary:
      type: object
      properties:
        jobArn:
          allOf:
          - $ref: '#/components/schemas/ModelImportJobArn'
          description: The Amazon Resource Name (ARN) of the import job.
        jobName:
          allOf:
          - $ref: '#/components/schemas/JobName'
          description: The name of the import job.
        status:
          allOf:
          - $ref: '#/components/schemas/ModelImportJobStatus'
          description: The status of the imported job.
        lastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the import job was last modified.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time import job was created.
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when import job ended.
        importedModelArn:
          allOf:
          - $ref: '#/components/schemas/ImportedModelArn'
          description: The Amazon resource Name (ARN) of the imported model.
        importedModelName:
          allOf:
          - $ref: '#/components/schemas/ImportedModelName'
          description: The name of the imported model.
      required:
      - jobArn
      - jobName
      - status
      - creationTime
      description: Information about the import job.
    ModelInvocationIdempotencyToken:
      type: string
      pattern: ^[a-zA-Z0-9]{1,256}(-*[a-zA-Z0-9]){0,256}$
      minLength: 1
      maxLength: 256
    ModelInvocationJobArn:
      type: string
      pattern: ^(arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:model-invocation-job/[a-z0-9]{12})$
      maxLength: 1011
    ModelInvocationJobIdentifier:
      type: string
      pattern: ^((arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:model-invocation-job/)?[a-z0-9]{12})$
      maxLength: 1011
    ModelInvocationJobInputDataConfig:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/ModelInvocationJobS3InputDataConfig'
        description: |-
          Contains the configuration of the S3 location of the input data.
      description: |-
        Details about the location of the input to the batch inference job.
    ModelInvocationJobName:
      type: string
      pattern: ^[a-zA-Z0-9]{1,63}(-*[a-zA-Z0-9\+\-\.]){0,63}$
      minLength: 1
      maxLength: 63
    ModelInvocationJobOutputDataConfig:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/ModelInvocationJobS3OutputDataConfig'
        description: |-
          Contains the configuration of the S3 location of the output data.
      description: |-
        Contains the configuration of the S3 location of the output data.
    ModelInvocationJobS3InputDataConfig:
      type: object
      properties:
        s3InputFormat:
          allOf:
          - $ref: '#/components/schemas/S3InputFormat'
          description: The format of the input data.
        s3Uri:
          allOf:
          - $ref: '#/components/schemas/S3Uri'
          description: The S3 location of the input data.
        s3BucketOwner:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The ID of the Amazon Web Services account that owns the S3
            bucket containing the input data.
      required:
      - s3Uri
      description: Contains the configuration of the S3 location of the input data.
    ModelInvocationJobS3OutputDataConfig:
      type: object
      properties:
        s3Uri:
          allOf:
          - $ref: '#/components/schemas/S3Uri'
          description: The S3 location of the output data.
        s3EncryptionKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKeyId'
          description: The unique identifier of the key that encrypts the S3 location
            of the output data.
        s3BucketOwner:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The ID of the Amazon Web Services account that owns the S3
            bucket containing the output data.
      required:
      - s3Uri
      description: Contains the configuration of the S3 location of the output data.
    ModelInvocationJobStatus:
      type: string
      enum:
      - Submitted
      - InProgress
      - Completed
      - Failed
      - Stopping
      - Stopped
      - PartiallyCompleted
      - Expired
      - Validating
      - Scheduled
    ModelInvocationJobSummaries:
      type: array
      items:
        $ref: '#/components/schemas/ModelInvocationJobSummary'
    ModelInvocationJobSummary:
      type: object
      properties:
        jobArn:
          allOf:
          - $ref: '#/components/schemas/ModelInvocationJobArn'
          description: The Amazon Resource Name (ARN) of the batch inference job.
        jobName:
          allOf:
          - $ref: '#/components/schemas/ModelInvocationJobName'
          description: The name of the batch inference job.
        modelId:
          allOf:
          - $ref: '#/components/schemas/ModelId'
          description: The unique identifier of the foundation model used for model
            inference.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ModelInvocationIdempotencyToken'
          description: A unique, case-sensitive identifier to ensure that the API
            request completes no more than one time. If this token matches a previous
            request, Amazon Bedrock ignores the request, but does not return an error.
            For more information, see [Ensuring idempotency](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html).
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of the service role with permissions
            to carry out and manage batch inference. You can use the console to create
            a default service role or follow the steps at [Create a service role for
            batch inference](https://docs.aws.amazon.com/bedrock/latest/userguide/batch-iam-sr.html).
        status:
          allOf:
          - $ref: '#/components/schemas/ModelInvocationJobStatus'
          description: "The status of the batch inference job.\n\nThe following statuses\
            \ are possible:\n\n  * Submitted – This job has been submitted to a queue\
            \ for validation.\n\n  * Validating – This job is being validated for\
            \ the requirements described in [Format and upload your batch inference\
            \ data](https://docs.aws.amazon.com/bedrock/latest/userguide/batch-inference-data.html).\
            \ The criteria include the following:\n\n    * Your IAM service role has\
            \ access to the Amazon S3 buckets containing your files.\n\n    * Your\
            \ files are .jsonl files and each individual record is a JSON object in\
            \ the correct format. Note that validation doesn't check if the `modelInput`\
            \ value matches the request body for the model.\n\n    * Your files fulfill\
            \ the requirements for file size and number of records. For more information,\
            \ see [Quotas for Amazon Bedrock](https://docs.aws.amazon.com/bedrock/latest/userguide/quotas.html).\n\
            \n  * Scheduled – This job has been validated and is now in a queue. The\
            \ job will automatically start when it reaches its turn.\n\n  * Expired\
            \ – This job timed out because it was scheduled but didn't begin before\
            \ the set timeout duration. Submit a new job request.\n\n  * InProgress\
            \ – This job has begun. You can start viewing the results in the output\
            \ S3 location.\n\n  * Completed – This job has successfully completed.\
            \ View the output files in the output S3 location.\n\n  * PartiallyCompleted\
            \ – This job has partially completed. Not all of your records could be\
            \ processed in time. View the output files in the output S3 location.\n\
            \n  * Failed – This job has failed. Check the failure message for any\
            \ further details. For further assistance, reach out to the [Amazon Web\
            \ ServicesSupport Center](https://console.aws.amazon.com/support/home/).\n\
            \n  * Stopped – This job was stopped by a user.\n\n  * Stopping – This\
            \ job is being stopped by a user."
        message:
          allOf:
          - $ref: '#/components/schemas/Message'
          description: If the batch inference job failed, this field contains a message
            describing why the job failed.
        submitTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the batch inference job was submitted.
        lastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the batch inference job was last modified.
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the batch inference job ended.
        inputDataConfig:
          allOf:
          - $ref: '#/components/schemas/ModelInvocationJobInputDataConfig'
          description: Details about the location of the input to the batch inference
            job.
        outputDataConfig:
          allOf:
          - $ref: '#/components/schemas/ModelInvocationJobOutputDataConfig'
          description: Details about the location of the output of the batch inference
            job.
        vpcConfig:
          allOf:
          - $ref: '#/components/schemas/VpcConfig'
          description: The configuration of the Virtual Private Cloud (VPC) for the
            data in the batch inference job. For more information, see [Protect batch
            inference jobs using a VPC](https://docs.aws.amazon.com/bedrock/latest/userguide/batch-vpc).
        timeoutDurationInHours:
          allOf:
          - $ref: '#/components/schemas/ModelInvocationJobTimeoutDurationInHours'
          description: The number of hours after which the batch inference job was
            set to time out.
        jobExpirationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the batch inference job times or timed out.
      required:
      - jobArn
      - jobName
      - modelId
      - roleArn
      - submitTime
      - inputDataConfig
      - outputDataConfig
      description: A summary of a batch inference job.
    ModelInvocationJobTimeoutDurationInHours:
      type: integer
      minimum: 24
      maximum: 168
    ModelModality:
      type: string
      enum:
      - TEXT
      - IMAGE
      - EMBEDDING
    ModelModalityList:
      type: array
      items:
        $ref: '#/components/schemas/ModelModality'
    ModelName:
      type: string
      pattern: ^([a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63})$
      minLength: 1
      maxLength: 63
    ModelSourceIdentifier:
      type: string
      pattern: arn:aws:sagemaker:.*:hub-content/SageMakerPublicHub/Model/.*
      maxLength: 2048
    NonBlankString:
      type: string
      pattern: ^[\s\S]*$
    OrchestrationConfiguration:
      type: object
      properties:
        queryTransformationConfiguration:
          allOf:
          - $ref: '#/components/schemas/QueryTransformationConfiguration'
          description: Contains configuration details for transforming the prompt.
      required:
      - queryTransformationConfiguration
      description: The configuration details for the model to process the prompt prior
        to retrieval and response generation.
    OutputDataConfig:
      type: object
      properties:
        s3Uri:
          allOf:
          - $ref: '#/components/schemas/S3Uri'
          description: The S3 URI where the output data is stored.
      required:
      - s3Uri
      description: S3 Location of the output data.
    PaginationToken:
      type: string
      pattern: ^\S*$
      minLength: 1
      maxLength: 2048
    PerformanceConfigLatency:
      type: string
      enum:
      - standard
      - optimized
    PerformanceConfiguration:
      type: object
      properties:
        latency:
          allOf:
          - $ref: '#/components/schemas/PerformanceConfigLatency'
          description: Specifies whether to use the latency-optimized or standard
            version of a model or inference profile.
      description: Contains performance settings for a model.
    PositiveInteger:
      type: integer
      minimum: 1
    PromptRouterArn:
      type: string
      pattern: ^arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:default-prompt-router/[a-zA-Z0-9-:.]+$
      minLength: 1
      maxLength: 2048
    PromptRouterDescription:
      type: string
      pattern: ^([0-9a-zA-Z:.][ _-]?)+$
      minLength: 1
      maxLength: 200
    PromptRouterName:
      type: string
      pattern: ^([0-9a-zA-Z][ _-]?)+$
      minLength: 1
      maxLength: 64
    PromptRouterStatus:
      type: string
      enum:
      - AVAILABLE
    PromptRouterSummaries:
      type: array
      items:
        $ref: '#/components/schemas/PromptRouterSummary'
    PromptRouterSummary:
      type: object
      properties:
        promptRouterName:
          allOf:
          - $ref: '#/components/schemas/PromptRouterName'
          description: The router's name.
        routingCriteria:
          allOf:
          - $ref: '#/components/schemas/RoutingCriteria'
          description: The router's routing criteria.
        description:
          allOf:
          - $ref: '#/components/schemas/PromptRouterDescription'
          description: The router's description.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: When the router was created.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: When the router was updated.
        promptRouterArn:
          allOf:
          - $ref: '#/components/schemas/PromptRouterArn'
          description: The router's ARN.
        models:
          allOf:
          - $ref: '#/components/schemas/PromptRouterTargetModels'
          description: The router's models.
        fallbackModel:
          allOf:
          - $ref: '#/components/schemas/PromptRouterTargetModel'
          description: The router's fallback model.
        status:
          allOf:
          - $ref: '#/components/schemas/PromptRouterStatus'
          description: The router's status.
        type:
          allOf:
          - $ref: '#/components/schemas/PromptRouterType'
          description: The summary's type.
      required:
      - promptRouterName
      - routingCriteria
      - promptRouterArn
      - models
      - fallbackModel
      - status
      - type
      description: Details about a prompt router.
    PromptRouterTargetModel:
      type: object
      properties:
        modelArn:
          allOf:
          - $ref: '#/components/schemas/PromptRouterTargetModelArn'
          description: The target model's ARN.
      required:
      - modelArn
      description: The target model for a prompt router.
    PromptRouterTargetModelArn:
      type: string
      pattern: (^arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}::foundation-model/[a-z0-9-]{1,63}[.]{1}([a-z0-9-]{1,63}[.]){0,2}[a-z0-9-]{1,63}([:][a-z0-9-]{1,63}){0,2})|(^arn:aws(|-us-gov|-cn|-iso|-iso-b):bedrock:(|[0-9a-z-]{0,20}):(|[0-9]{12}):(inference-profile|application-inference-profile)/[a-zA-Z0-9-:.]+)$
      minLength: 1
      maxLength: 2048
    PromptRouterTargetModels:
      type: array
      items:
        $ref: '#/components/schemas/PromptRouterTargetModel'
    PromptRouterType:
      type: string
      enum:
      - custom
      - default
    PromptTemplate:
      type: object
      properties:
        textPromptTemplate:
          allOf:
          - $ref: '#/components/schemas/TextPromptTemplate'
          description: 'The template for the prompt that''s sent to the model for
            response generation. You can include prompt placeholders, which become
            replaced before the prompt is sent to the model to provide instructions
            and context to the model. In addition, you can include XML tags to delineate
            meaningful sections of the prompt template.


            For more information, see [Knowledge base prompt template](https://docs.aws.amazon.com/bedrock/latest/userguide/kb-test-config.html)
            and [Use XML tags with Anthropic Claude models](https://docs.anthropic.com/en/docs/build-with-claude/prompt-engineering/use-xml-tags).'
      description: The template for the prompt that's sent to the model for response
        generation.
    Provider:
      type: string
      pattern: ^[A-Za-z0-9- ]{1,63}$
    ProvisionedModelArn:
      type: string
      pattern: ^arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:provisioned-model/[a-z0-9]{12}$
    ProvisionedModelId:
      type: string
      pattern: ^((([0-9a-zA-Z][_-]?)+)|(arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:provisioned-model/[a-z0-9]{12}))$
    ProvisionedModelName:
      type: string
      pattern: ^([0-9a-zA-Z][_-]?)+$
      minLength: 1
      maxLength: 63
    ProvisionedModelStatus:
      type: string
      enum:
      - Creating
      - InService
      - Updating
      - Failed
    ProvisionedModelSummaries:
      type: array
      items:
        $ref: '#/components/schemas/ProvisionedModelSummary'
    ProvisionedModelSummary:
      type: object
      properties:
        provisionedModelName:
          allOf:
          - $ref: '#/components/schemas/ProvisionedModelName'
          description: The name of the Provisioned Throughput.
        provisionedModelArn:
          allOf:
          - $ref: '#/components/schemas/ProvisionedModelArn'
          description: The Amazon Resource Name (ARN) of the Provisioned Throughput.
        modelArn:
          allOf:
          - $ref: '#/components/schemas/ModelArn'
          description: The Amazon Resource Name (ARN) of the model associated with
            the Provisioned Throughput.
        desiredModelArn:
          allOf:
          - $ref: '#/components/schemas/ModelArn'
          description: The Amazon Resource Name (ARN) of the model requested to be
            associated to this Provisioned Throughput. This value differs from the
            `modelArn` if updating hasn't completed.
        foundationModelArn:
          allOf:
          - $ref: '#/components/schemas/FoundationModelArn'
          description: The Amazon Resource Name (ARN) of the base model for which
            the Provisioned Throughput was created, or of the base model that the
            custom model for which the Provisioned Throughput was created was customized.
        modelUnits:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          description: The number of model units allocated to the Provisioned Throughput.
        desiredModelUnits:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          description: The number of model units that was requested to be allocated
            to the Provisioned Throughput.
        status:
          allOf:
          - $ref: '#/components/schemas/ProvisionedModelStatus'
          description: The status of the Provisioned Throughput.
        commitmentDuration:
          allOf:
          - $ref: '#/components/schemas/CommitmentDuration'
          description: The duration for which the Provisioned Throughput was committed.
        commitmentExpirationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp for when the commitment term of the Provisioned
            Throughput expires.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time that the Provisioned Throughput was created.
        lastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time that the Provisioned Throughput was last modified.
      required:
      - provisionedModelName
      - provisionedModelArn
      - modelArn
      - desiredModelArn
      - foundationModelArn
      - modelUnits
      - desiredModelUnits
      - status
      - creationTime
      - lastModifiedTime
      description: "A summary of information about a Provisioned Throughput.\n\nThis\
        \ data type is used in the following API operations:\n\n  * [ListProvisionedThroughputs\
        \ response](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_ListProvisionedModelThroughputs.html#API_ListProvisionedModelThroughputs_ResponseSyntax)"
    PutModelInvocationLoggingConfigurationRequest:
      type: object
      properties:
        loggingConfig:
          allOf:
          - $ref: '#/components/schemas/LoggingConfig'
          description: The logging configuration values to set.
      required:
      - loggingConfig
    PutModelInvocationLoggingConfigurationResponse:
      type: object
      properties: {}
    QueryTransformationConfiguration:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/QueryTransformationType'
          description: The type of transformation to apply to the prompt.
      required:
      - type
      description: The configuration details for transforming the prompt.
    QueryTransformationType:
      type: string
      enum:
      - QUERY_DECOMPOSITION
    RAGConfig:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/KnowledgeBaseConfig'
        description: |-
          Contains configuration details for knowledge base retrieval and response generation.
      - allOf:
        - $ref: '#/components/schemas/EvaluationPrecomputedRagSourceConfig'
        description: |-
          Contains configuration details about the RAG source used to generate inference response data for a Knowledge Base evaluation job.
      description: |-
        Contains configuration details for retrieval of information and response generation.
    RAGStopSequences:
      type: array
      items:
        type: string
    RagConfigs:
      type: array
      items:
        $ref: '#/components/schemas/RAGConfig'
    RatingScale:
      type: array
      items:
        $ref: '#/components/schemas/RatingScaleItem'
    RatingScaleItem:
      type: object
      properties:
        definition:
          allOf:
          - $ref: '#/components/schemas/RatingScaleItemDefinition'
          description: Defines the definition for one rating in a custom metric rating
            scale.
        value:
          allOf:
          - $ref: '#/components/schemas/RatingScaleItemValue'
          description: Defines the value for one rating in a custom metric rating
            scale.
      required:
      - definition
      - value
      description: Defines the value and corresponding definition for one rating in
        a custom metric rating scale.
    RatingScaleItemDefinition:
      type: string
      minLength: 1
      maxLength: 100
    RatingScaleItemValue:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/String'
        description: |-
          A string representing the value for a rating in a custom metric rating scale.
      - allOf:
        - $ref: '#/components/schemas/Float'
        description: |-
          A floating point number representing the value for a rating in a custom metric rating scale.
      description: |-
        Defines the value for one rating in a custom metric rating scale.
    RegisterMarketplaceModelEndpointRequest:
      type: object
      properties:
        endpointIdentifier:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the Amazon SageMaker endpoint you want to register
            with Amazon Bedrock Marketplace.
        modelSourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/ModelSourceIdentifier'
          description: The ARN of the model from Amazon Bedrock Marketplace that is
            deployed on the endpoint.
      required:
      - endpointIdentifier
      - modelSourceIdentifier
    RegisterMarketplaceModelEndpointResponse:
      type: object
      properties:
        marketplaceModelEndpoint:
          allOf:
          - $ref: '#/components/schemas/MarketplaceModelEndpoint'
          description: Details about the registered endpoint.
      required:
      - marketplaceModelEndpoint
    RequestMetadataBaseFilters:
      type: object
      properties:
        equals:
          allOf:
          - $ref: '#/components/schemas/RequestMetadataMap'
          description: Include results where the key equals the value.
        notEquals:
          allOf:
          - $ref: '#/components/schemas/RequestMetadataMap'
          description: Include results where the key does not equal the value.
      description: A mapping of a metadata key to a value that it should or should
        not equal.
    RequestMetadataFilters:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/RequestMetadataMap'
        description: |-
          Include results where the key equals the value.
      - allOf:
        - $ref: '#/components/schemas/RequestMetadataMap'
        description: |-
          Include results where the key does not equal the value.
      - allOf:
        - $ref: '#/components/schemas/RequestMetadataFiltersList'
        description: |-
          Include results where all of the based filters match.
      - allOf:
        - $ref: '#/components/schemas/RequestMetadataFiltersList'
        description: |-
          Include results where any of the base filters match.
      description: |-
        Rules for filtering invocation logs. A filter can be a mapping of a metadata key to a value that it should or should not equal (a base filter), or a list of base filters that are all applied with `AND` or `OR` logical operators
    RequestMetadataFiltersList:
      type: array
      items:
        $ref: '#/components/schemas/RequestMetadataBaseFilters'
    RequestMetadataMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    ResourceNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/NonBlankString'
      description: The specified resource Amazon Resource Name (ARN) was not found.
        Check the Amazon Resource Name (ARN) and try your request again.
    RetrievalFilter:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/FilterAttribute'
        description: |-
          Knowledge base data sources are returned if they contain a metadata attribute whose name matches the key and whose value matches the value in this object.

          The following example would return data sources with an animal attribute whose value is 'cat': `"equals": { "key": "animal", "value": "cat" }`
      - allOf:
        - $ref: '#/components/schemas/FilterAttribute'
        description: |-
          Knowledge base data sources that contain a metadata attribute whose name matches the key and whose value doesn't match the value in this object are returned.

          The following example would return data sources that don't contain an animal attribute whose value is 'cat': `"notEquals": { "key": "animal", "value": "cat" }`
      - allOf:
        - $ref: '#/components/schemas/FilterAttribute'
        description: |-
          Knowledge base data sources are returned if they contain a metadata attribute whose name matches the key and whose value is greater than the value in this object.

          The following example would return data sources with an year attribute whose value is greater than '1989': `"greaterThan": { "key": "year", "value": 1989 }`
      - allOf:
        - $ref: '#/components/schemas/FilterAttribute'
        description: |-
          Knowledge base data sources are returned if they contain a metadata attribute whose name matches the key and whose value is greater than or equal to the value in this object.

          The following example would return data sources with an year attribute whose value is greater than or equal to '1989': `"greaterThanOrEquals": { "key": "year", "value": 1989 }`
      - allOf:
        - $ref: '#/components/schemas/FilterAttribute'
        description: |-
          Knowledge base data sources are returned if they contain a metadata attribute whose name matches the key and whose value is less than the value in this object.

          The following example would return data sources with an year attribute whose value is less than to '1989': `"lessThan": { "key": "year", "value": 1989 }`
      - allOf:
        - $ref: '#/components/schemas/FilterAttribute'
        description: |-
          Knowledge base data sources are returned if they contain a metadata attribute whose name matches the key and whose value is less than or equal to the value in this object.

          The following example would return data sources with an year attribute whose value is less than or equal to '1989': `"lessThanOrEquals": { "key": "year", "value": 1989 }`
      - allOf:
        - $ref: '#/components/schemas/FilterAttribute'
        description: |-
          Knowledge base data sources are returned if they contain a metadata attribute whose name matches the key and whose value is in the list specified in the value in this object.

          The following example would return data sources with an animal attribute that is either 'cat' or 'dog': `"in": { "key": "animal", "value": ["cat", "dog"] }`
      - allOf:
        - $ref: '#/components/schemas/FilterAttribute'
        description: |-
          Knowledge base data sources are returned if they contain a metadata attribute whose name matches the key and whose value isn't in the list specified in the value in this object.

          The following example would return data sources whose animal attribute is neither 'cat' nor 'dog': `"notIn": { "key": "animal", "value": ["cat", "dog"] }`
      - allOf:
        - $ref: '#/components/schemas/FilterAttribute'
        description: |-
          Knowledge base data sources are returned if they contain a metadata attribute whose name matches the key and whose value starts with the value in this object. This filter is currently only supported for Amazon OpenSearch Serverless vector stores.

          The following example would return data sources with an animal attribute starts with 'ca' (for example, 'cat' or 'camel'). `"startsWith": { "key": "animal", "value": "ca" }`
      - allOf:
        - $ref: '#/components/schemas/FilterAttribute'
        description: |-
          Knowledge base data sources are returned if they contain a metadata attribute whose name matches the key and whose value is a list that contains the value as one of its members.

          The following example would return data sources with an animals attribute that is a list containing a cat member (for example, `["dog", "cat"]`): `"listContains": { "key": "animals", "value": "cat" }`
      - allOf:
        - $ref: '#/components/schemas/FilterAttribute'
        description: |-
          Knowledge base data sources are returned if they contain a metadata attribute whose name matches the key and whose value is one of the following:

          A string that contains the value as a substring. The following example would return data sources with an animal attribute that contains the substring at (for example, 'cat'): `"stringContains": { "key": "animal", "value": "at" }`

          A list with a member that contains the value as a substring. The following example would return data sources with an animals attribute that is a list containing a member that contains the substring at (for example, `["dog", "cat"]`): `"stringContains": { "key": "animals", "value": "at" }`
      - allOf:
        - $ref: '#/components/schemas/RetrievalFilterList'
        description: |-
          Knowledge base data sources are returned if their metadata attributes fulfill all the filter conditions inside this list.
      - allOf:
        - $ref: '#/components/schemas/RetrievalFilterList'
        description: |-
          Knowledge base data sources are returned if their metadata attributes fulfill at least one of the filter conditions inside this list.
      description: |-
        Specifies the filters to use on the metadata attributes/fields in the knowledge base data sources before returning results.
      x-sensitive: true
    RetrievalFilterList:
      type: array
      items:
        $ref: '#/components/schemas/RetrievalFilter'
    RetrieveAndGenerateConfiguration:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/RetrieveAndGenerateType'
          description: 'The type of resource that contains your data for retrieving
            information and generating responses.


            If you choose to use `EXTERNAL_SOURCES`, then currently only Claude 3
            Sonnet models for knowledge bases are supported.'
        knowledgeBaseConfiguration:
          allOf:
          - $ref: '#/components/schemas/KnowledgeBaseRetrieveAndGenerateConfiguration'
          description: Contains configuration details for the knowledge base retrieval
            and response generation.
        externalSourcesConfiguration:
          allOf:
          - $ref: '#/components/schemas/ExternalSourcesRetrieveAndGenerateConfiguration'
          description: The configuration for the external source wrapper object in
            the `retrieveAndGenerate` function.
      required:
      - type
      description: Contains configuration details for a knowledge base retrieval and
        response generation.
    RetrieveAndGenerateType:
      type: string
      enum:
      - KNOWLEDGE_BASE
      - EXTERNAL_SOURCES
    RetrieveConfig:
      type: object
      properties:
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/KnowledgeBaseId'
          description: The unique identifier of the knowledge base.
        knowledgeBaseRetrievalConfiguration:
          allOf:
          - $ref: '#/components/schemas/KnowledgeBaseRetrievalConfiguration'
          description: Contains configuration details for knowledge base retrieval.
      required:
      - knowledgeBaseId
      - knowledgeBaseRetrievalConfiguration
      description: The configuration details for retrieving information from a knowledge
        base.
    RoleArn:
      type: string
      pattern: ^arn:aws(-[^:]+)?:iam::([0-9]{12})?:role/.+$
      maxLength: 2048
    RoutingCriteria:
      type: object
      properties:
        responseQualityDifference:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The criteria's response quality difference.
      required:
      - responseQualityDifference
      description: Routing criteria for a prompt router.
    S3Config:
      type: object
      properties:
        bucketName:
          allOf:
          - $ref: '#/components/schemas/BucketName'
          description: S3 bucket name.
        keyPrefix:
          allOf:
          - $ref: '#/components/schemas/KeyPrefix'
          description: S3 prefix.
      required:
      - bucketName
      description: S3 configuration for storing log data.
    S3DataSource:
      type: object
      properties:
        s3Uri:
          allOf:
          - $ref: '#/components/schemas/S3Uri'
          description: The URI of the Amazon S3 data source.
      required:
      - s3Uri
      description: The Amazon S3 data source of the imported job.
    S3InputFormat:
      type: string
      enum:
      - JSONL
    S3ObjectDoc:
      type: object
      properties:
        uri:
          allOf:
          - $ref: '#/components/schemas/kBS3Uri'
          description: The S3 URI location for the wrapper object of the document.
      required:
      - uri
      description: The unique wrapper object of the document from the S3 location.
    S3Uri:
      type: string
      pattern: ^s3://[a-z0-9][-.a-z0-9]{1,61}[a-z0-9](?:/[-!_*'().a-z0-9A-Z]+(?:/[-!_*'().a-z0-9A-Z]+)*)?/?$
      minLength: 1
      maxLength: 1024
    SageMakerEndpoint:
      type: object
      properties:
        initialInstanceCount:
          allOf:
          - $ref: '#/components/schemas/InstanceCount'
          description: The number of Amazon EC2 compute instances to deploy for initial
            endpoint creation.
        instanceType:
          allOf:
          - $ref: '#/components/schemas/InstanceType'
          description: The Amazon EC2 compute instance type to deploy for hosting
            the model.
        executionRole:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The ARN of the IAM role that Amazon SageMaker can assume to
            access model artifacts and docker image for deployment on Amazon EC2 compute
            instances or for batch transform jobs.
        kmsEncryptionKey:
          allOf:
          - $ref: '#/components/schemas/KmsKeyId'
          description: The Amazon Web Services KMS key that Amazon SageMaker uses
            to encrypt data on the storage volume attached to the Amazon EC2 compute
            instance that hosts the endpoint.
        vpc:
          allOf:
          - $ref: '#/components/schemas/VpcConfig'
          description: The VPC configuration for the endpoint.
      required:
      - initialInstanceCount
      - instanceType
      - executionRole
      description: Specifies the configuration for a Amazon SageMaker endpoint.
    SageMakerFlowDefinitionArn:
      type: string
      pattern: ^arn:aws(-[^:]+)?:sagemaker:[a-z0-9-]{1,20}:[0-9]{12}:flow-definition/.*$
      maxLength: 1024
    SearchType:
      type: string
      enum:
      - HYBRID
      - SEMANTIC
    SecurityGroupId:
      type: string
      pattern: ^[-0-9a-zA-Z]+$
      maxLength: 32
    SecurityGroupIds:
      type: array
      items:
        $ref: '#/components/schemas/SecurityGroupId'
    ServiceQuotaExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/NonBlankString'
      description: The number of requests exceeds the service quota. Resubmit your
        request later.
    ServiceUnavailableException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/NonBlankString'
      description: Returned if the service cannot complete the request.
    SortByProvisionedModels:
      type: string
      enum:
      - CreationTime
    SortJobsBy:
      type: string
      enum:
      - CreationTime
    SortModelsBy:
      type: string
      enum:
      - CreationTime
    SortOrder:
      type: string
      enum:
      - Ascending
      - Descending
    Status:
      type: string
      enum:
      - REGISTERED
      - INCOMPATIBLE_ENDPOINT
    StopEvaluationJobRequest:
      type: object
      properties:
        jobIdentifier:
          allOf:
          - $ref: '#/components/schemas/EvaluationJobIdentifier'
          description: The Amazon Resource Name (ARN) of the evaluation job you want
            to stop.
      required:
      - jobIdentifier
    StopEvaluationJobResponse:
      type: object
      properties: {}
    StopModelCustomizationJobRequest:
      type: object
      properties:
        jobIdentifier:
          allOf:
          - $ref: '#/components/schemas/ModelCustomizationJobIdentifier'
          description: Job identifier of the job to stop.
      required:
      - jobIdentifier
    StopModelCustomizationJobResponse:
      type: object
      properties: {}
    StopModelInvocationJobRequest:
      type: object
      properties:
        jobIdentifier:
          allOf:
          - $ref: '#/components/schemas/ModelInvocationJobIdentifier'
          description: The Amazon Resource Name (ARN) of the batch inference job to
            stop.
      required:
      - jobIdentifier
    StopModelInvocationJobResponse:
      type: object
      properties: {}
    SubnetId:
      type: string
      pattern: ^[-0-9a-zA-Z]+$
      maxLength: 32
    SubnetIds:
      type: array
      items:
        $ref: '#/components/schemas/SubnetId'
    Tag:
      type: object
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          description: Key for the tag.
        value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          description: Value for the tag.
      required:
      - key
      - value
      description: Definition of the key/value pair for a tag.
    TagKey:
      type: string
      pattern: ^[a-zA-Z0-9\s._:/=+@-]*$
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    TagResourceRequest:
      type: object
      properties:
        resourceARN:
          allOf:
          - $ref: '#/components/schemas/TaggableResourcesArn'
          description: The Amazon Resource Name (ARN) of the resource to tag.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: Tags to associate with the resource.
      required:
      - resourceARN
      - tags
    TagResourceResponse:
      type: object
      properties: {}
    TagValue:
      type: string
      pattern: ^[a-zA-Z0-9\s._:/=+@-]*$
      minLength: 0
      maxLength: 256
    TaggableResourcesArn:
      type: string
      pattern: (^[a-zA-Z0-9][a-zA-Z0-9\-]*$)|(^arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:([0-9]{12}|)((:(fine-tuning-job|model-customization-job|custom-model)/[a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}([a-z0-9-]{1,63}[.]){0,2}[a-z0-9-]{1,63}([:][a-z0-9-]{1,63}){0,2}(/[a-z0-9]{12})$)|(:guardrail/[a-z0-9]+$)|(:automated-reasoning-policy/[a-zA-Z0-9]+(:[a-zA-Z0-9]+)?$)|(:(inference-profile|application-inference-profile)/[a-zA-Z0-9-:.]+$)|(:(provisioned-model|model-invocation-job|model-evaluation-job|evaluation-job|model-import-job|imported-model|async-invoke|provisioned-model-v2|provisioned-model-reservation|prompt-router)/[a-z0-9]{12}$)))
      minLength: 20
      maxLength: 1011
    TeacherModelConfig:
      type: object
      properties:
        teacherModelIdentifier:
          allOf:
          - $ref: '#/components/schemas/TeacherModelIdentifier'
          description: The identifier of the teacher model.
        maxResponseLengthForInference:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of tokens requested when the customization
            job invokes the teacher model.
      required:
      - teacherModelIdentifier
      description: Details about a teacher model used for model customization.
    TeacherModelIdentifier:
      type: string
      pattern: ^arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}::foundation-model/[a-z0-9-]{1,63}[.]{1}([a-z0-9-]{1,63}[.]){0,2}[a-z0-9-]{1,63}([:][a-z0-9-]{1,63}){0,2}|([a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}([.]?[a-z0-9-]{1,63})([:][a-z0-9-]{1,63}){0,2})|(([0-9a-zA-Z][_-]?)+)$
    Temperature:
      type: number
      format: float
      minimum: 0
      maximum: 1
    TextInferenceConfig:
      type: object
      properties:
        temperature:
          allOf:
          - $ref: '#/components/schemas/Temperature'
          description: Controls the random-ness of text generated by the language
            model, influencing how much the model sticks to the most predictable next
            words versus exploring more surprising options. A lower temperature value
            (e.g. 0.2 or 0.3) makes model outputs more deterministic or predictable,
            while a higher temperature (e.g. 0.8 or 0.9) makes the outputs more creative
            or unpredictable.
        topP:
          allOf:
          - $ref: '#/components/schemas/TopP'
          description: A probability distribution threshold which controls what the
            model considers for the set of possible next tokens. The model will only
            consider the top p% of the probability distribution when generating the
            next token.
        maxTokens:
          allOf:
          - $ref: '#/components/schemas/MaxTokens'
          description: The maximum number of tokens to generate in the output text.
            Do not use the minimum of 0 or the maximum of 65536. The limit values
            described here are arbitrary values, for actual values consult the limits
            defined by your specific model.
        stopSequences:
          allOf:
          - $ref: '#/components/schemas/RAGStopSequences'
          description: A list of sequences of characters that, if generated, will
            cause the model to stop generating further tokens. Do not use a minimum
            length of 1 or a maximum length of 1000. The limit values described here
            are arbitrary values, for actual values consult the limits defined by
            your specific model.
      description: The configuration details for text generation using a language
        model via the `RetrieveAndGenerate` function.
    TextPromptTemplate:
      type: string
      minLength: 1
      maxLength: 100000
    ThrottlingException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/NonBlankString'
      description: The number of requests exceeds the limit. Resubmit your request
        later.
    Timestamp:
      type: string
      format: date-time
    TooManyTagsException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/NonBlankString'
        resourceName:
          allOf:
          - $ref: '#/components/schemas/TaggableResourcesArn'
          description: The name of the resource with too many tags.
      description: The request contains more tags than can be associated with a resource
        (50 tags per resource). The maximum number of tags includes both existing
        tags and those included in your current request.
    TopP:
      type: number
      format: float
      minimum: 0
      maximum: 1
    TrainingDataConfig:
      type: object
      properties:
        s3Uri:
          allOf:
          - $ref: '#/components/schemas/S3Uri'
          description: The S3 URI where the training data is stored.
        invocationLogsConfig:
          allOf:
          - $ref: '#/components/schemas/InvocationLogsConfig'
          description: Settings for using invocation logs to customize a model.
      description: S3 Location of the training data.
    TrainingMetrics:
      type: object
      properties:
        trainingLoss:
          allOf:
          - $ref: '#/components/schemas/MetricFloat'
          description: Loss metric associated with the custom job.
      description: Metrics associated with the custom job.
    UntagResourceRequest:
      type: object
      properties:
        resourceARN:
          allOf:
          - $ref: '#/components/schemas/TaggableResourcesArn'
          description: The Amazon Resource Name (ARN) of the resource to untag.
        tagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: Tag keys of the tags to remove from the resource.
      required:
      - resourceARN
      - tagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateGuardrailRequest:
      type: object
      properties:
        guardrailIdentifier:
          allOf:
          - $ref: '#/components/schemas/GuardrailIdentifier'
          description: The unique identifier of the guardrail. This can be an ID or
            the ARN.
        name:
          allOf:
          - $ref: '#/components/schemas/GuardrailName'
          description: A name for the guardrail.
        description:
          allOf:
          - $ref: '#/components/schemas/GuardrailDescription'
          description: A description of the guardrail.
        topicPolicyConfig:
          allOf:
          - $ref: '#/components/schemas/GuardrailTopicPolicyConfig'
          description: The topic policy to configure for the guardrail.
        contentPolicyConfig:
          allOf:
          - $ref: '#/components/schemas/GuardrailContentPolicyConfig'
          description: The content policy to configure for the guardrail.
        wordPolicyConfig:
          allOf:
          - $ref: '#/components/schemas/GuardrailWordPolicyConfig'
          description: The word policy to configure for the guardrail.
        sensitiveInformationPolicyConfig:
          allOf:
          - $ref: '#/components/schemas/GuardrailSensitiveInformationPolicyConfig'
          description: The sensitive information policy to configure for the guardrail.
        contextualGroundingPolicyConfig:
          allOf:
          - $ref: '#/components/schemas/GuardrailContextualGroundingPolicyConfig'
          description: The contextual grounding policy configuration used to update
            a guardrail.
        blockedInputMessaging:
          allOf:
          - $ref: '#/components/schemas/GuardrailBlockedMessaging'
          description: The message to return when the guardrail blocks a prompt.
        blockedOutputsMessaging:
          allOf:
          - $ref: '#/components/schemas/GuardrailBlockedMessaging'
          description: The message to return when the guardrail blocks a model response.
        kmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKeyId'
          description: The ARN of the KMS key with which to encrypt the guardrail.
      required:
      - guardrailIdentifier
      - name
      - blockedInputMessaging
      - blockedOutputsMessaging
    UpdateGuardrailResponse:
      type: object
      properties:
        guardrailId:
          allOf:
          - $ref: '#/components/schemas/GuardrailId'
          description: The unique identifier of the guardrail
        guardrailArn:
          allOf:
          - $ref: '#/components/schemas/GuardrailArn'
          description: The ARN of the guardrail.
        version:
          allOf:
          - $ref: '#/components/schemas/GuardrailDraftVersion'
          description: The version of the guardrail.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time at which the guardrail was updated.
      required:
      - guardrailId
      - guardrailArn
      - version
      - updatedAt
    UpdateMarketplaceModelEndpointRequest:
      type: object
      properties:
        endpointArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the endpoint you want to
            update.
        endpointConfig:
          allOf:
          - $ref: '#/components/schemas/EndpointConfig'
          description: The new configuration for the endpoint, including the number
            and type of instances to use.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. This token is listed as not required because
            Amazon Web Services SDKs automatically generate it for you and set this
            parameter. If you're not using the Amazon Web Services SDK or the CLI,
            you must provide this token or the action will fail.
      required:
      - endpointArn
      - endpointConfig
    UpdateMarketplaceModelEndpointResponse:
      type: object
      properties:
        marketplaceModelEndpoint:
          allOf:
          - $ref: '#/components/schemas/MarketplaceModelEndpoint'
          description: Details about the updated endpoint.
      required:
      - marketplaceModelEndpoint
    UpdateProvisionedModelThroughputRequest:
      type: object
      properties:
        provisionedModelId:
          allOf:
          - $ref: '#/components/schemas/ProvisionedModelId'
          description: The Amazon Resource Name (ARN) or name of the Provisioned Throughput
            to update.
        desiredProvisionedModelName:
          allOf:
          - $ref: '#/components/schemas/ProvisionedModelName'
          description: The new name for this Provisioned Throughput.
        desiredModelId:
          allOf:
          - $ref: '#/components/schemas/ModelIdentifier'
          description: "The Amazon Resource Name (ARN) of the new model to associate\
            \ with this Provisioned Throughput. You can't specify this field if this\
            \ Provisioned Throughput is associated with a base model.\n\nIf this Provisioned\
            \ Throughput is associated with a custom model, you can specify one of\
            \ the following options:\n\n  * The base model from which the custom model\
            \ was customized.\n\n  * Another custom model that was customized from\
            \ the same base model as the custom model."
      required:
      - provisionedModelId
    UpdateProvisionedModelThroughputResponse:
      type: object
      properties: {}
    UsePromptResponse:
      type: boolean
      default: false
    ValidationDataConfig:
      type: object
      properties:
        validators:
          allOf:
          - $ref: '#/components/schemas/Validators'
          description: Information about the validators.
      required:
      - validators
      description: Array of up to 10 validators.
    ValidationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/NonBlankString'
      description: Input validation failed. Check your request parameters and retry
        the request.
    ValidationMetrics:
      type: array
      items:
        $ref: '#/components/schemas/ValidatorMetric'
    Validator:
      type: object
      properties:
        s3Uri:
          allOf:
          - $ref: '#/components/schemas/S3Uri'
          description: The S3 URI where the validation data is stored.
      required:
      - s3Uri
      description: Information about a validator.
    ValidatorMetric:
      type: object
      properties:
        validationLoss:
          allOf:
          - $ref: '#/components/schemas/MetricFloat'
          description: The validation loss associated with this validator.
      description: The metric for the validator.
    Validators:
      type: array
      items:
        $ref: '#/components/schemas/Validator'
    VpcConfig:
      type: object
      properties:
        subnetIds:
          allOf:
          - $ref: '#/components/schemas/SubnetIds'
          description: An array of IDs for each subnet in the VPC to use.
        securityGroupIds:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupIds'
          description: An array of IDs for each security group in the VPC to use.
      required:
      - subnetIds
      - securityGroupIds
      description: The configuration of a virtual private cloud (VPC). For more information,
        see [Protect your data using Amazon Virtual Private Cloud and Amazon Web Services
        PrivateLink](https://docs.aws.amazon.com/bedrock/latest/userguide/usingVPC.html).
    kBS3Uri:
      type: string
      pattern: ^s3://[a-z0-9][a-z0-9.-]{1,61}[a-z0-9]/.{1,1024}$
      minLength: 1
      maxLength: 1024
