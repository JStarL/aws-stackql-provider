openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: qapps
  x-aws-serviceName: qapps
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-05'
  version: '2023-11-27'
  title: QApps
  description: |-
    The Amazon Q Apps feature capability within Amazon Q Business allows web experience users to create lightweight, purpose-built AI apps to fulfill specific tasks from within their web experience. For example, users can create a Q App that exclusively generates marketing-related content to improve your marketing team's productivity or a Q App for writing customer emails and creating promotional content using a certain style of voice, tone, and branding. For more information on the capabilities, see [Amazon Q Apps capabilities](https://docs.aws.amazon.com/amazonq/latest/qbusiness-ug/deploy-experience-iam-role.html#q-apps-actions) in the _Amazon Q Business User Guide_.

    For an overview of the Amazon Q App APIs, see [Overview of Amazon Q Apps API operations](https://docs.aws.amazon.com/amazonq/latest/api-reference/API_Operations_QApps.html).

    For information about the IAM access control permissions you need to use the Amazon Q Apps API, see [ IAM role for the Amazon Q Business web experience including Amazon Q Apps](https://docs.aws.amazon.com/amazonq/latest/qbusiness-ug/deploy-experience-iam-role.html) in the _Amazon Q Business User Guide_.
servers:
- description: The QApps regional endpoint
  url: https://data.qapps.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths: {}
components:
  schemas:
    Action:
      type: string
      enum:
      - read
      - write
    ActionIdentifier:
      type: string
      minLength: 1
      maxLength: 256
    AmazonResourceName:
      type: string
      minLength: 1
      maxLength: 1011
    AppArn:
      type: string
    AppRequiredCapabilities:
      type: array
      items:
        $ref: '#/components/schemas/AppRequiredCapability'
    AppRequiredCapability:
      type: string
      enum:
      - FileUpload
      - CreatorMode
      - RetrievalMode
      - PluginMode
    AppStatus:
      type: string
      enum:
      - PUBLISHED
      - DRAFT
      - DELETED
    AppVersion:
      type: integer
      minimum: 0
      maximum: 2147483647
    AttributeFilters:
      type: array
      items:
        $ref: '#/components/schemas/AttributeFilter'
    BatchCreateCategoryInputCategoryList:
      type: array
      items:
        $ref: '#/components/schemas/BatchCreateCategoryInputCategory'
    Card:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/TextInputCard'
        description: |-
          A container for the properties of the text input card.
      - allOf:
        - $ref: '#/components/schemas/QQueryCard'
        description: |-
          A container for the properties of the query card.
      - allOf:
        - $ref: '#/components/schemas/QPluginCard'
        description: |-
          A container for the properties of the plugin card.
      - allOf:
        - $ref: '#/components/schemas/FileUploadCard'
        description: |-
          A container for the properties of the file upload card.
      - allOf:
        - $ref: '#/components/schemas/FormInputCard'
        description: |-
          A container for the properties of the form input card.
      description: |-
        A card representing a component or step in an Amazon Q App's flow.
    CardInput:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/TextInputCardInput'
        description: |-
          A container for the properties of the text input card.
      - allOf:
        - $ref: '#/components/schemas/QQueryCardInput'
        description: |-
          A container for the properties of the query input card.
      - allOf:
        - $ref: '#/components/schemas/QPluginCardInput'
        description: |-
          A container for the properties of the plugin input card.
      - allOf:
        - $ref: '#/components/schemas/FileUploadCardInput'
        description: |-
          A container for the properties of the file upload input card.
      - allOf:
        - $ref: '#/components/schemas/FormInputCardInput'
        description: |-
          A container for the properties of the form input card.
      description: |-
        The properties defining an input card in an Amazon Q App.
    CardList:
      type: array
      items:
        $ref: '#/components/schemas/CardInput'
    CardModelList:
      type: array
      items:
        $ref: '#/components/schemas/Card'
    CardOutputSource:
      type: string
      enum:
      - approved-sources
      - llm
    CardStatusMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/CardStatus'
    CardType:
      type: string
      enum:
      - text-input
      - q-query
      - file-upload
      - q-plugin
      - form-input
    CardValueList:
      type: array
      items:
        $ref: '#/components/schemas/CardValue'
    CategoriesList:
      type: array
      items:
        $ref: '#/components/schemas/Category'
    CategoryIdList:
      type: array
      items:
        $ref: '#/components/schemas/UUID'
    CategoryList:
      type: array
      items:
        $ref: '#/components/schemas/Category'
    CategoryListInput:
      type: array
      items:
        $ref: '#/components/schemas/CategoryInput'
    Default:
      type: string
      maxLength: 500
    DeleteCategoryInputList:
      type: array
      items:
        $ref: '#/components/schemas/UUID'
    DependencyList:
      type: array
      items:
        type: string
    Description:
      type: string
      maxLength: 500
    DocumentAttributeKey:
      type: string
      pattern: ^[a-zA-Z0-9_][a-zA-Z0-9_-]*$
      minLength: 1
      maxLength: 200
    DocumentAttributeStringListValue:
      type: array
      items:
        $ref: '#/components/schemas/PlatoString'
    DocumentAttributeStringValue:
      type: string
      maxLength: 2048
    DocumentAttributeValue:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/DocumentAttributeStringValue'
        description: |-
          A string.
      - allOf:
        - $ref: '#/components/schemas/DocumentAttributeStringListValue'
        description: |-
          A list of strings.
      - allOf:
        - $ref: '#/components/schemas/Long'
        description: |-
          A long integer value.
      - allOf:
        - $ref: '#/components/schemas/Timestamp'
        description: |-
          A date expressed as an ISO 8601 string.

          It's important for the time zone to be included in the _ISO 8601 date-time_ format. For example, 2012-03-25T12:30:10+01:00 is the ISO 8601 date-time format for March 25th 2012 at 12:30PM (plus 10 seconds) in Central European Time.
      description: |-
        The value of a document attribute. You can only provide one value for a document attribute.
    DocumentScope:
      type: string
      enum:
      - APPLICATION
      - SESSION
    ExecutionStatus:
      type: string
      enum:
      - IN_PROGRESS
      - WAITING
      - COMPLETED
      - ERROR
    Filename:
      type: string
      maxLength: 100
    FormInputCardMetadataSchema:
      type: object
      additionalProperties: true
    InitialPrompt:
      type: string
      maxLength: 10000
    InputCardComputeMode:
      type: string
      enum:
      - append
      - replace
    InstanceId:
      type: string
    LibraryItemList:
      type: array
      items:
        $ref: '#/components/schemas/LibraryItemMember'
    LibraryItemStatus:
      type: string
      enum:
      - PUBLISHED
      - DISABLED
    Long:
      type: integer
      format: int64
    MemoryReferenceList:
      type: array
      items:
        type: string
    MessageList:
      type: array
      items:
        $ref: '#/components/schemas/ConversationMessage'
    PageLimit:
      type: integer
      minimum: 1
      maximum: 100
    PaginationToken:
      type: string
      maxLength: 300
    PermissionsInputList:
      type: array
      items:
        $ref: '#/components/schemas/PermissionInput'
      description: <p>A list of permissions to grant or revoke for a Amazon Q App.</p>
    PermissionsOutputList:
      type: array
      items:
        $ref: '#/components/schemas/PermissionOutput'
      description: <p>A list of permissions granted for a Amazon Q App.</p>
    Placeholder:
      type: string
      maxLength: 500
    PlatoString:
      type: string
      minLength: 1
      maxLength: 2048
    PluginId:
      type: string
      minLength: 36
      maxLength: 36
    PluginType:
      type: string
      enum:
      - SERVICE_NOW
      - SALESFORCE
      - JIRA
      - ZENDESK
      - CUSTOM
      - ASANA
      - ATLASSIAN_CONFLUENCE
      - GOOGLE_CALENDAR
      - JIRA_CLOUD
      - MICROSOFT_EXCHANGE
      - MICROSOFT_TEAMS
      - PAGERDUTY_ADVANCE
      - SALESFORCE_CRM
      - SERVICENOW_NOW_PLATFORM
      - SMARTSHEET
      - ZENDESK_SUITE
    PredictQAppInputOptions:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/MessageList'
        description: |-
          A conversation to use as input for generating the Q App definition.
      - allOf:
        - $ref: '#/components/schemas/String'
        description: |-
          A problem statement to use as input for generating the Q App definition.
      description: |-
        The input options for generating an Q App definition.
    PresignedUrlFields:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    Prompt:
      type: string
      maxLength: 50000
    QAppSessionDataList:
      type: array
      items:
        $ref: '#/components/schemas/QAppSessionData'
    QAppsTimestamp:
      type: string
      format: date-time
    Sender:
      type: string
      enum:
      - USER
      - SYSTEM
    SessionName:
      type: string
      maxLength: 100
    SessionSharingAcceptResponses:
      type: boolean
    SessionSharingEnabled:
      type: boolean
    SessionSharingRevealCards:
      type: boolean
    SubmissionList:
      type: array
      items:
        $ref: '#/components/schemas/Submission'
    SubmissionMutationKind:
      type: string
      enum:
      - edit
      - delete
      - add
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagKeys:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    Tags:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    Timestamp:
      type: string
      format: date-time
    Title:
      type: string
      pattern: ^[^{}\\"<>]+$
      maxLength: 100
    UUID:
      type: string
      pattern: ^[\da-f]{8}-[\da-f]{4}-[45][\da-f]{3}-[89ABab][\da-f]{3}-[\da-f]{12}$
    UserAppsList:
      type: array
      items:
        $ref: '#/components/schemas/UserAppItem'
    UserId:
      type: string
    UserType:
      type: string
      enum:
      - owner
      - user
