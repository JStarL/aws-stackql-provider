openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: qapps
  x-aws-serviceName: qapps
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2023-11-27'
  title: QApps
  description: |-
    The Amazon Q Apps feature capability within Amazon Q Business allows web experience users to create lightweight, purpose-built AI apps to fulfill specific tasks from within their web experience. For example, users can create a Q App that exclusively generates marketing-related content to improve your marketing team's productivity or a Q App for writing customer emails and creating promotional content using a certain style of voice, tone, and branding. For more information on the capabilities, see [Amazon Q Apps capabilities](https://docs.aws.amazon.com/amazonq/latest/qbusiness-ug/deploy-experience-iam-role.html#q-apps-actions) in the _Amazon Q Business User Guide_.

    For an overview of the Amazon Q App APIs, see [Overview of Amazon Q Apps API operations](https://docs.aws.amazon.com/amazonq/latest/api-reference/API_Operations_QApps.html).

    For information about the IAM access control permissions you need to use the Amazon Q Apps API, see [ IAM role for the Amazon Q Business web experience including Amazon Q Apps](https://docs.aws.amazon.com/amazonq/latest/qbusiness-ug/deploy-experience-iam-role.html) in the _Amazon Q Business User Guide_.
servers:
- description: The QApps regional endpoint
  url: https://data.qapps.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /catalog.associateItemRating:
    post:
      operationId: AssociateLibraryItemReview
      description: |-
        Associates a rating or review for a library item with the user submitting the request. This increments the rating count for the specified library item.
      parameters:
      - name: instance-id
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                libraryItemId:
                  $ref: '#/components/schemas/UUID'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The requested operation could not be completed due to a conflict with the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal service error occurred while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The requested operation could not be completed because it would exceed the service's quota or limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The requested operation could not be completed because too many requests were sent at once. Wait a bit and try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            The client is not authenticated or authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '400':
          description: |-
            The input failed to satisfy the constraints specified by the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /apps.install:
    post:
      operationId: AssociateQAppWithUser
      description: |-
        This operation creates a link between the user's identity calling the operation and a specific Q App. This is useful to mark the Q App as a _favorite_ for the user if the user doesn't own the Amazon Q App so they can still run it and see it in their inventory of Q Apps.
      parameters:
      - name: instance-id
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appId:
                  $ref: '#/components/schemas/UUID'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The requested operation could not be completed because it would exceed the service's quota or limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The requested operation could not be completed because too many requests were sent at once. Wait a bit and try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            The client is not authenticated or authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '400':
          description: |-
            The input failed to satisfy the constraints specified by the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /catalog.createCategories:
    post:
      operationId: BatchCreateCategory
      description: |-
        Creates Categories for the Amazon Q Business application environment instance. Web experience users use Categories to tag and filter library items. For more information, see [Custom labels for Amazon Q Apps](https://docs.aws.amazon.com/amazonq/latest/qbusiness-ug/qapps-custom-labels.html).
      parameters:
      - name: instance-id
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                categories:
                  $ref: '#/components/schemas/BatchCreateCategoryInputCategoryList'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The requested operation could not be completed due to a conflict with the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal service error occurred while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The requested operation could not be completed because too many requests were sent at once. Wait a bit and try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            The client is not authenticated or authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '400':
          description: |-
            The input failed to satisfy the constraints specified by the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /catalog.deleteCategories:
    post:
      operationId: BatchDeleteCategory
      description: |-
        Deletes Categories for the Amazon Q Business application environment instance. Web experience users use Categories to tag and filter library items. For more information, see [Custom labels for Amazon Q Apps](https://docs.aws.amazon.com/amazonq/latest/qbusiness-ug/qapps-custom-labels.html).
      parameters:
      - name: instance-id
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                categories:
                  $ref: '#/components/schemas/DeleteCategoryInputList'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The requested operation could not be completed due to a conflict with the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal service error occurred while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The requested operation could not be completed because too many requests were sent at once. Wait a bit and try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            The client is not authenticated or authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '400':
          description: |-
            The input failed to satisfy the constraints specified by the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /catalog.updateCategories:
    post:
      operationId: BatchUpdateCategory
      description: |-
        Updates Categories for the Amazon Q Business application environment instance. Web experience users use Categories to tag and filter library items. For more information, see [Custom labels for Amazon Q Apps](https://docs.aws.amazon.com/amazonq/latest/qbusiness-ug/qapps-custom-labels.html).
      parameters:
      - name: instance-id
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                categories:
                  $ref: '#/components/schemas/CategoryListInput'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The requested operation could not be completed due to a conflict with the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal service error occurred while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The requested operation could not be completed because too many requests were sent at once. Wait a bit and try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            The client is not authenticated or authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '400':
          description: |-
            The input failed to satisfy the constraints specified by the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /catalog.createItem:
    post:
      operationId: CreateLibraryItem
      description: |-
        Creates a new library item for an Amazon Q App, allowing it to be discovered and used by other allowed users.
      parameters:
      - name: instance-id
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appId:
                  $ref: '#/components/schemas/UUID'
                appVersion:
                  $ref: '#/components/schemas/AppVersion'
                categories:
                  $ref: '#/components/schemas/CategoryIdList'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The requested operation could not be completed because it would exceed the service's quota or limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The requested operation could not be completed because too many requests were sent at once. Wait a bit and try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            The client is not authenticated or authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '400':
          description: |-
            The input failed to satisfy the constraints specified by the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /apps.createPresignedUrl:
    post:
      operationId: CreatePresignedUrl
      description: |-
        Creates a presigned URL for an S3 POST operation to upload a file. You can use this URL to set a default file for a `FileUploadCard` in a Q App definition or to provide a file for a single Q App run. The `scope` parameter determines how the file will be used, either at the app definition level or the app session level.
      parameters:
      - name: instance-id
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cardId:
                  $ref: '#/components/schemas/UUID'
                appId:
                  $ref: '#/components/schemas/UUID'
                fileContentsSha256:
                  $ref: '#/components/schemas/String'
                fileName:
                  $ref: '#/components/schemas/Filename'
                scope:
                  $ref: '#/components/schemas/DocumentScope'
                sessionId:
                  $ref: '#/components/schemas/UUID'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The requested operation could not be completed because too many requests were sent at once. Wait a bit and try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            The client is not authenticated or authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '400':
          description: |-
            The input failed to satisfy the constraints specified by the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /apps.create:
    post:
      operationId: CreateQApp
      description: |-
        Creates a new Amazon Q App based on the provided definition. The Q App definition specifies the cards and flow of the Q App. This operation also calculates the dependencies between the cards by inspecting the references in the prompts.
      parameters:
      - name: instance-id
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  $ref: '#/components/schemas/Title'
                description:
                  $ref: '#/components/schemas/Description'
                appDefinition:
                  $ref: '#/components/schemas/AppDefinitionInput'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The requested operation could not be completed due to a conflict with the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '413':
          description: |-
            The requested operation could not be completed because the content exceeds the maximum allowed size.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentTooLargeException'
        '500':
          description: |-
            An internal service error occurred while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            The requested operation could not be completed because it would exceed the service's quota or limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The requested operation could not be completed because too many requests were sent at once. Wait a bit and try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            The client is not authenticated or authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '400':
          description: |-
            The input failed to satisfy the constraints specified by the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /catalog.deleteItem:
    post:
      operationId: DeleteLibraryItem
      description: |-
        Deletes a library item for an Amazon Q App, removing it from the library so it can no longer be discovered or used by other users.
      parameters:
      - name: instance-id
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                libraryItemId:
                  $ref: '#/components/schemas/UUID'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The requested operation could not be completed because it would exceed the service's quota or limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The requested operation could not be completed because too many requests were sent at once. Wait a bit and try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            The client is not authenticated or authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '400':
          description: |-
            The input failed to satisfy the constraints specified by the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /apps.delete:
    post:
      operationId: DeleteQApp
      description: |-
        Deletes an Amazon Q App owned by the user. If the Q App was previously published to the library, it is also removed from the library.
      parameters:
      - name: instance-id
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appId:
                  $ref: '#/components/schemas/UUID'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The requested operation could not be completed because too many requests were sent at once. Wait a bit and try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            The client is not authenticated or authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '400':
          description: |-
            The input failed to satisfy the constraints specified by the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /apps.describeQAppPermissions:
    get:
      operationId: DescribeQAppPermissions
      description: |-
        Describes read permissions for a Amazon Q App in Amazon Q Business application environment instance.
      parameters:
      - name: instance-id
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: appId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The requested operation could not be completed because too many requests were sent at once. Wait a bit and try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            The client is not authenticated or authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '400':
          description: |-
            The input failed to satisfy the constraints specified by the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /catalog.disassociateItemRating:
    post:
      operationId: DisassociateLibraryItemReview
      description: |-
        Removes a rating or review previously submitted by the user for a library item.
      parameters:
      - name: instance-id
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                libraryItemId:
                  $ref: '#/components/schemas/UUID'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The requested operation could not be completed due to a conflict with the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal service error occurred while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The requested operation could not be completed because it would exceed the service's quota or limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The requested operation could not be completed because too many requests were sent at once. Wait a bit and try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            The client is not authenticated or authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '400':
          description: |-
            The input failed to satisfy the constraints specified by the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /apps.uninstall:
    post:
      operationId: DisassociateQAppFromUser
      description: |-
        Disassociates a Q App from a user removing the user's access to run the Q App.
      parameters:
      - name: instance-id
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appId:
                  $ref: '#/components/schemas/UUID'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The requested operation could not be completed because too many requests were sent at once. Wait a bit and try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            The client is not authenticated or authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '400':
          description: |-
            The input failed to satisfy the constraints specified by the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /runtime.exportQAppSessionData:
    post:
      operationId: ExportQAppSessionData
      description: |-
        Exports the collected data of a Q App data collection session.
      parameters:
      - name: instance-id
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sessionId:
                  $ref: '#/components/schemas/UUID'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The requested operation could not be completed due to a conflict with the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal service error occurred while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The requested operation could not be completed because it would exceed the service's quota or limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The requested operation could not be completed because too many requests were sent at once. Wait a bit and try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            The client is not authenticated or authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '400':
          description: |-
            The input failed to satisfy the constraints specified by the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /catalog.getItem:
    get:
      operationId: GetLibraryItem
      description: |-
        Retrieves details about a library item for an Amazon Q App, including its metadata, categories, ratings, and usage statistics.
      parameters:
      - name: instance-id
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: libraryItemId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: appId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The requested operation could not be completed because too many requests were sent at once. Wait a bit and try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            The client is not authenticated or authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '400':
          description: |-
            The input failed to satisfy the constraints specified by the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /apps.get:
    get:
      operationId: GetQApp
      description: |-
        Retrieves the full details of an Q App, including its definition specifying the cards and flow.
      parameters:
      - name: instance-id
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: appId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: appVersion
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AppVersion'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The requested operation could not be completed because too many requests were sent at once. Wait a bit and try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            The client is not authenticated or authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '400':
          description: |-
            The input failed to satisfy the constraints specified by the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /runtime.getQAppSession:
    get:
      operationId: GetQAppSession
      description: |-
        Retrieves the current state and results for an active session of an Amazon Q App.
      parameters:
      - name: instance-id
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: sessionId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The requested operation could not be completed because it would exceed the service's quota or limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The requested operation could not be completed because too many requests were sent at once. Wait a bit and try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            The client is not authenticated or authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '400':
          description: |-
            The input failed to satisfy the constraints specified by the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /runtime.getQAppSessionMetadata:
    get:
      operationId: GetQAppSessionMetadata
      description: |-
        Retrieves the current configuration of a Q App session.
      parameters:
      - name: instance-id
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: sessionId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The requested operation could not be completed because it would exceed the service's quota or limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The requested operation could not be completed because too many requests were sent at once. Wait a bit and try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            The client is not authenticated or authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '400':
          description: |-
            The input failed to satisfy the constraints specified by the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /apps.importDocument:
    post:
      operationId: ImportDocument
      description: |-
        Uploads a file that can then be used either as a default in a `FileUploadCard` from Q App definition or as a file that is used inside a single Q App run. The purpose of the document is determined by a scope parameter that indicates whether it is at the app definition level or at the app session level.
      parameters:
      - name: instance-id
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cardId:
                  $ref: '#/components/schemas/UUID'
                appId:
                  $ref: '#/components/schemas/UUID'
                fileContentsBase64:
                  $ref: '#/components/schemas/String'
                fileName:
                  $ref: '#/components/schemas/Filename'
                scope:
                  $ref: '#/components/schemas/DocumentScope'
                sessionId:
                  $ref: '#/components/schemas/UUID'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '413':
          description: |-
            The requested operation could not be completed because the content exceeds the maximum allowed size.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentTooLargeException'
        '500':
          description: |-
            An internal service error occurred while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The requested operation could not be completed because it would exceed the service's quota or limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The requested operation could not be completed because too many requests were sent at once. Wait a bit and try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            The client is not authenticated or authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '400':
          description: |-
            The input failed to satisfy the constraints specified by the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /catalog.listCategories:
    get:
      operationId: ListCategories
      description: |-
        Lists the categories of a Amazon Q Business application environment instance. For more information, see [Custom labels for Amazon Q Apps](https://docs.aws.amazon.com/amazonq/latest/qbusiness-ug/qapps-custom-labels.html).
      parameters:
      - name: instance-id
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The requested operation could not be completed because too many requests were sent at once. Wait a bit and try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            The client is not authenticated or authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '400':
          description: |-
            The input failed to satisfy the constraints specified by the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /catalog.list:
    get:
      operationId: ListLibraryItems
      description: |-
        Lists the library items for Amazon Q Apps that are published and available for users in your Amazon Web Services account.
      parameters:
      - name: instance-id
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: limit
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PageLimit'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: categoryId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The requested operation could not be completed because too many requests were sent at once. Wait a bit and try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            The client is not authenticated or authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '400':
          description: |-
            The input failed to satisfy the constraints specified by the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /runtime.listQAppSessionData:
    get:
      operationId: ListQAppSessionData
      description: |-
        Lists the collected data of a Q App data collection session.
      parameters:
      - name: instance-id
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: sessionId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The requested operation could not be completed because it would exceed the service's quota or limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The requested operation could not be completed because too many requests were sent at once. Wait a bit and try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            The client is not authenticated or authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '400':
          description: |-
            The input failed to satisfy the constraints specified by the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /apps.list:
    get:
      operationId: ListQApps
      description: |-
        Lists the Amazon Q Apps owned by or associated with the user either because they created it or because they used it from the library in the past. The user identity is extracted from the credentials used to invoke this operation..
      parameters:
      - name: instance-id
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: limit
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PageLimit'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The requested operation could not be completed because too many requests were sent at once. Wait a bit and try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            The client is not authenticated or authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '400':
          description: |-
            The input failed to satisfy the constraints specified by the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tags/{resourceARN}:
    get:
      operationId: ListTagsForResource
      description: |-
        Lists the tags associated with an Amazon Q Apps resource.
      parameters:
      - name: resourceARN
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AmazonResourceName'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The requested operation could not be completed because too many requests were sent at once. Wait a bit and try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to satisfy the constraints specified by the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: TagResource
      description: |-
        Associates tags with an Amazon Q Apps resource.
      parameters:
      - name: resourceARN
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AmazonResourceName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The requested operation could not be completed due to a conflict with the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal service error occurred while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The requested operation could not be completed because too many requests were sent at once. Wait a bit and try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to satisfy the constraints specified by the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: UntagResource
      description: |-
        Disassociates tags from an Amazon Q Apps resource.
      parameters:
      - name: resourceARN
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AmazonResourceName'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeys'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The requested operation could not be completed because too many requests were sent at once. Wait a bit and try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to satisfy the constraints specified by the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /apps.predictQApp:
    post:
      operationId: PredictQApp
      description: |-
        Generates an Amazon Q App definition based on either a conversation or a problem statement provided as input.The resulting app definition can be used to call `CreateQApp`. This API doesn't create Amazon Q Apps directly.
      parameters:
      - name: instance-id
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                options:
                  $ref: '#/components/schemas/PredictQAppInputOptions'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The requested operation could not be completed because too many requests were sent at once. Wait a bit and try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            The client is not authenticated or authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '400':
          description: |-
            The input failed to satisfy the constraints specified by the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /runtime.startQAppSession:
    post:
      operationId: StartQAppSession
      description: |-
        Starts a new session for an Amazon Q App, allowing inputs to be provided and the app to be run.

        Each Q App session will be condensed into a single conversation in the web experience.
      parameters:
      - name: instance-id
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appId:
                  $ref: '#/components/schemas/UUID'
                appVersion:
                  $ref: '#/components/schemas/AppVersion'
                initialValues:
                  $ref: '#/components/schemas/CardValueList'
                sessionId:
                  $ref: '#/components/schemas/String'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The requested operation could not be completed because it would exceed the service's quota or limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The requested operation could not be completed because too many requests were sent at once. Wait a bit and try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            The client is not authenticated or authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '400':
          description: |-
            The input failed to satisfy the constraints specified by the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /runtime.deleteMiniAppRun:
    post:
      operationId: StopQAppSession
      description: |-
        Stops an active session for an Amazon Q App.This deletes all data related to the session and makes it invalid for future uses. The results of the session will be persisted as part of the conversation.
      parameters:
      - name: instance-id
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sessionId:
                  $ref: '#/components/schemas/UUID'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The requested operation could not be completed because it would exceed the service's quota or limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The requested operation could not be completed because too many requests were sent at once. Wait a bit and try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            The client is not authenticated or authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '400':
          description: |-
            The input failed to satisfy the constraints specified by the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /catalog.updateItem:
    post:
      operationId: UpdateLibraryItem
      description: |-
        Updates the library item for an Amazon Q App.
      parameters:
      - name: instance-id
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                libraryItemId:
                  $ref: '#/components/schemas/UUID'
                status:
                  $ref: '#/components/schemas/LibraryItemStatus'
                categories:
                  $ref: '#/components/schemas/CategoryIdList'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The requested operation could not be completed due to a conflict with the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal service error occurred while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The requested operation could not be completed because too many requests were sent at once. Wait a bit and try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            The client is not authenticated or authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '400':
          description: |-
            The input failed to satisfy the constraints specified by the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /catalog.updateItemMetadata:
    post:
      operationId: UpdateLibraryItemMetadata
      description: |-
        Updates the verification status of a library item for an Amazon Q App.
      parameters:
      - name: instance-id
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                libraryItemId:
                  $ref: '#/components/schemas/UUID'
                isVerified:
                  $ref: '#/components/schemas/Boolean'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The requested operation could not be completed due to a conflict with the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal service error occurred while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The requested operation could not be completed because too many requests were sent at once. Wait a bit and try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            The client is not authenticated or authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '400':
          description: |-
            The input failed to satisfy the constraints specified by the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /apps.update:
    post:
      operationId: UpdateQApp
      description: |-
        Updates an existing Amazon Q App, allowing modifications to its title, description, and definition.
      parameters:
      - name: instance-id
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appId:
                  $ref: '#/components/schemas/UUID'
                title:
                  $ref: '#/components/schemas/Title'
                description:
                  $ref: '#/components/schemas/Description'
                appDefinition:
                  $ref: '#/components/schemas/AppDefinitionInput'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '413':
          description: |-
            The requested operation could not be completed because the content exceeds the maximum allowed size.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentTooLargeException'
        '500':
          description: |-
            An internal service error occurred while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The requested operation could not be completed because too many requests were sent at once. Wait a bit and try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            The client is not authenticated or authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '400':
          description: |-
            The input failed to satisfy the constraints specified by the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /apps.updateQAppPermissions:
    post:
      operationId: UpdateQAppPermissions
      description: |-
        Updates read permissions for a Amazon Q App in Amazon Q Business application environment instance.
      parameters:
      - name: instance-id
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appId:
                  $ref: '#/components/schemas/UUID'
                grantPermissions:
                  $ref: '#/components/schemas/PermissionsInputList'
                revokePermissions:
                  $ref: '#/components/schemas/PermissionsInputList'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The requested operation could not be completed because too many requests were sent at once. Wait a bit and try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            The client is not authenticated or authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '400':
          description: |-
            The input failed to satisfy the constraints specified by the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /runtime.updateQAppSession:
    post:
      operationId: UpdateQAppSession
      description: |-
        Updates the session for a given Q App `sessionId`. This is only valid when at least one card of the session is in the `WAITING` state. Data for each `WAITING` card can be provided as input. If inputs are not provided, the call will be accepted but session will not move forward. Inputs for cards that are not in the `WAITING` status will be ignored.
      parameters:
      - name: instance-id
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sessionId:
                  $ref: '#/components/schemas/UUID'
                values:
                  $ref: '#/components/schemas/CardValueList'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The requested operation could not be completed because it would exceed the service's quota or limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The requested operation could not be completed because too many requests were sent at once. Wait a bit and try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            The client is not authenticated or authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '400':
          description: |-
            The input failed to satisfy the constraints specified by the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /runtime.updateQAppSessionMetadata:
    post:
      operationId: UpdateQAppSessionMetadata
      description: |-
        Updates the configuration metadata of a session for a given Q App `sessionId`.
      parameters:
      - name: instance-id
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sessionId:
                  $ref: '#/components/schemas/UUID'
                sessionName:
                  $ref: '#/components/schemas/SessionName'
                sharingConfiguration:
                  $ref: '#/components/schemas/SessionSharingConfiguration'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The requested operation could not be completed because it would exceed the service's quota or limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The requested operation could not be completed because too many requests were sent at once. Wait a bit and try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            The client is not authenticated or authorized to perform the requested operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '400':
          description: |-
            The input failed to satisfy the constraints specified by the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    AccessDeniedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The client is not authorized to perform the requested operation.
    Action:
      type: string
      enum:
      - read
      - write
    ActionIdentifier:
      type: string
      minLength: 1
      maxLength: 256
    AmazonResourceName:
      type: string
      minLength: 1
      maxLength: 1011
    AppArn:
      type: string
    AppDefinition:
      type: object
      properties:
        appDefinitionVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The version of the app definition schema or specification.
        cards:
          allOf:
          - $ref: '#/components/schemas/CardModelList'
          description: The cards that make up the Q App, such as text input, file
            upload, or query cards.
        canEdit:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A flag indicating whether the Q App's definition can be edited
            by the user.
      required:
      - appDefinitionVersion
      - cards
      description: The definition of the Q App, specifying the cards and flow.
    AppDefinitionInput:
      type: object
      properties:
        cards:
          allOf:
          - $ref: '#/components/schemas/CardList'
          description: The cards that make up the Q App definition.
        initialPrompt:
          allOf:
          - $ref: '#/components/schemas/InitialPrompt'
          description: The initial prompt displayed when the Q App is started.
      required:
      - cards
      description: The input for defining an Q App.
    AppRequiredCapabilities:
      type: array
      items:
        $ref: '#/components/schemas/AppRequiredCapability'
    AppRequiredCapability:
      type: string
      enum:
      - FileUpload
      - CreatorMode
      - RetrievalMode
      - PluginMode
    AppStatus:
      type: string
      enum:
      - PUBLISHED
      - DRAFT
      - DELETED
    AppVersion:
      type: integer
      minimum: 0
      maximum: 2147483647
    AssociateLibraryItemReviewInput:
      type: object
      properties:
        instanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The unique identifier for the Amazon Q Business application
            environment instance.
        libraryItemId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the library item to associate the
            review with.
      required:
      - instanceId
      - libraryItemId
    AssociateQAppWithUserInput:
      type: object
      properties:
        instanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The unique identifier of the Amazon Q Business application
            environment instance.
        appId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The ID of the Amazon Q App to associate with the user.
      required:
      - instanceId
      - appId
    AttributeFilter:
      type: object
      properties:
        andAllFilters:
          allOf:
          - $ref: '#/components/schemas/AttributeFilters'
          description: Performs a logical `AND` operation on all supplied filters.
        orAllFilters:
          allOf:
          - $ref: '#/components/schemas/AttributeFilters'
          description: Performs a logical `OR` operation on all supplied filters.
        notFilter:
          allOf:
          - $ref: '#/components/schemas/AttributeFilter'
          description: Performs a logical `NOT` operation on all supplied filters.
        equalsTo:
          allOf:
          - $ref: '#/components/schemas/DocumentAttribute'
          description: 'Performs an _equals_ operation on two document attributes
            or metadata fields. Supported for the following [document attribute value
            types](https://docs.aws.amazon.com/amazonq/latest/api-reference/API_DocumentAttributeValue.html):
            `dateValue`, `longValue`, `stringListValue` and `stringValue`.'
        containsAll:
          allOf:
          - $ref: '#/components/schemas/DocumentAttribute'
          description: 'Returns `true` when a document contains all the specified
            document attributes or metadata fields. Supported for the following [document
            attribute value types](https://docs.aws.amazon.com/amazonq/latest/api-reference/API_DocumentAttributeValue.html):
            `stringListValue`.'
        containsAny:
          allOf:
          - $ref: '#/components/schemas/DocumentAttribute'
          description: 'Returns `true` when a document contains any of the specified
            document attributes or metadata fields. Supported for the following [document
            attribute value types](https://docs.aws.amazon.com/amazonq/latest/api-reference/API_DocumentAttributeValue.html):
            `stringListValue`.'
        greaterThan:
          allOf:
          - $ref: '#/components/schemas/DocumentAttribute'
          description: 'Performs a _greater than_ operation on two document attributes
            or metadata fields. Supported for the following [document attribute value
            types](https://docs.aws.amazon.com/amazonq/latest/api-reference/API_DocumentAttributeValue.html):
            `dateValue` and `longValue`.'
        greaterThanOrEquals:
          allOf:
          - $ref: '#/components/schemas/DocumentAttribute'
          description: 'Performs a _greater than or equals_ operation on two document
            attributes or metadata fields. Supported for the following [document attribute
            value types](https://docs.aws.amazon.com/amazonq/latest/api-reference/API_DocumentAttributeValue.html):
            `dateValue` and `longValue`.'
        lessThan:
          allOf:
          - $ref: '#/components/schemas/DocumentAttribute'
          description: 'Performs a _less than_ operation on two document attributes
            or metadata fields. Supported for the following [document attribute value
            types](https://docs.aws.amazon.com/amazonq/latest/api-reference/API_DocumentAttributeValue.html):
            `dateValue` and `longValue`.'
        lessThanOrEquals:
          allOf:
          - $ref: '#/components/schemas/DocumentAttribute'
          description: 'Performs a _less than or equals_ operation on two document
            attributes or metadata fields.Supported for the following [document attribute
            value type](https://docs.aws.amazon.com/amazonq/latest/api-reference/API_DocumentAttributeValue.html):
            `dateValue` and `longValue`.'
      description: The filter criteria used on responses based on document attributes
        or metadata fields.
    AttributeFilters:
      type: array
      items:
        $ref: '#/components/schemas/AttributeFilter'
    BatchCreateCategoryInput:
      type: object
      properties:
        instanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The unique identifier of the Amazon Q Business application
            environment instance.
        categories:
          allOf:
          - $ref: '#/components/schemas/BatchCreateCategoryInputCategoryList'
          description: The list of category objects to be created
      required:
      - instanceId
      - categories
    BatchCreateCategoryInputCategory:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier to be associated with a category. If
            you don't include a value, the category is automatically assigned a unique
            identifier.
        title:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the category.
        color:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The color to be associated with a category. The color must
            be a hexadecimal value of either 3 or 6 digits.
      required:
      - title
      description: The category object to be created.
    BatchCreateCategoryInputCategoryList:
      type: array
      items:
        $ref: '#/components/schemas/BatchCreateCategoryInputCategory'
    BatchDeleteCategoryInput:
      type: object
      properties:
        instanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The unique identifier of the Amazon Q Business application
            environment instance.
        categories:
          allOf:
          - $ref: '#/components/schemas/DeleteCategoryInputList'
          description: The list of IDs of the categories to be deleted.
      required:
      - instanceId
      - categories
    BatchUpdateCategoryInput:
      type: object
      properties:
        instanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The unique identifier of the Amazon Q Business application
            environment instance.
        categories:
          allOf:
          - $ref: '#/components/schemas/CategoryListInput'
          description: The list of categories to be updated with their new values.
      required:
      - instanceId
      - categories
    Card:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/TextInputCard'
        description: |-
          A container for the properties of the text input card.
      - allOf:
        - $ref: '#/components/schemas/QQueryCard'
        description: |-
          A container for the properties of the query card.
      - allOf:
        - $ref: '#/components/schemas/QPluginCard'
        description: |-
          A container for the properties of the plugin card.
      - allOf:
        - $ref: '#/components/schemas/FileUploadCard'
        description: |-
          A container for the properties of the file upload card.
      - allOf:
        - $ref: '#/components/schemas/FormInputCard'
        description: |-
          A container for the properties of the form input card.
      description: |-
        A card representing a component or step in an Amazon Q App's flow.
    CardInput:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/TextInputCardInput'
        description: |-
          A container for the properties of the text input card.
      - allOf:
        - $ref: '#/components/schemas/QQueryCardInput'
        description: |-
          A container for the properties of the query input card.
      - allOf:
        - $ref: '#/components/schemas/QPluginCardInput'
        description: |-
          A container for the properties of the plugin input card.
      - allOf:
        - $ref: '#/components/schemas/FileUploadCardInput'
        description: |-
          A container for the properties of the file upload input card.
      - allOf:
        - $ref: '#/components/schemas/FormInputCardInput'
        description: |-
          A container for the properties of the form input card.
      description: |-
        The properties defining an input card in an Amazon Q App.
    CardList:
      type: array
      items:
        $ref: '#/components/schemas/CardInput'
    CardModelList:
      type: array
      items:
        $ref: '#/components/schemas/Card'
    CardOutputSource:
      type: string
      enum:
      - approved-sources
      - llm
    CardStatus:
      type: object
      properties:
        currentState:
          allOf:
          - $ref: '#/components/schemas/ExecutionStatus'
          description: The current state of the card.
        currentValue:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The current value or result associated with the card.
        submissions:
          allOf:
          - $ref: '#/components/schemas/SubmissionList'
          description: A list of previous submissions, if the card is a form card.
      required:
      - currentState
      - currentValue
      description: The current status and value of a card in an active Amazon Q App
        session.
    CardStatusMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/CardStatus'
    CardType:
      type: string
      enum:
      - text-input
      - q-query
      - file-upload
      - q-plugin
      - form-input
    CardValue:
      type: object
      properties:
        cardId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the card.
        value:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The value or result associated with the card.
        submissionMutation:
          allOf:
          - $ref: '#/components/schemas/SubmissionMutation'
          description: The structure that describes how the current form card value
            is mutated. Only applies for form cards when multiple responses are allowed.
      required:
      - cardId
      - value
      description: The value or result associated with a card in a Amazon Q App session.
    CardValueList:
      type: array
      items:
        $ref: '#/components/schemas/CardValue'
    CategoriesList:
      type: array
      items:
        $ref: '#/components/schemas/Category'
    Category:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the category.
        title:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The title or name of the category.
        color:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The color of the category
        appCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of published Amazon Q Apps associated with a category
      required:
      - id
      - title
      description: A category used to classify and filter library items for Amazon
        Q Apps.
    CategoryIdList:
      type: array
      items:
        $ref: '#/components/schemas/UUID'
    CategoryInput:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the category.
        title:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the category.
        color:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The color of the category, represented as a hexadecimal value
            of either 3 or 6 digits.
      required:
      - id
      - title
      description: A label that web experience users associate with a library item.
        Web experience users use Categories to tag and filter library items.
    CategoryList:
      type: array
      items:
        $ref: '#/components/schemas/Category'
    CategoryListInput:
      type: array
      items:
        $ref: '#/components/schemas/CategoryInput'
    ConflictException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        resourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier of the resource
        resourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of the resource
      required:
      - message
      - resourceId
      - resourceType
      description: The requested operation could not be completed due to a conflict
        with the current state of the resource.
    ContentTooLargeException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        resourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier of the resource
        resourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of the resource
      required:
      - message
      - resourceId
      - resourceType
      description: The requested operation could not be completed because the content
        exceeds the maximum allowed size.
    ConversationMessage:
      type: object
      properties:
        body:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The text content of the conversation message.
        type:
          allOf:
          - $ref: '#/components/schemas/Sender'
          description: The type of the conversation message.
      required:
      - body
      - type
      description: A message in a conversation, used as input for generating an Amazon
        Q App definition.
    CreateLibraryItemInput:
      type: object
      properties:
        instanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The unique identifier of the Amazon Q Business application
            environment instance.
        appId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the Amazon Q App to publish to the
            library.
        appVersion:
          allOf:
          - $ref: '#/components/schemas/AppVersion'
          description: The version of the Amazon Q App to publish to the library.
        categories:
          allOf:
          - $ref: '#/components/schemas/CategoryIdList'
          description: The categories to associate with the library item for easier
            discovery.
      required:
      - instanceId
      - appId
      - appVersion
      - categories
    CreateLibraryItemOutput:
      type: object
      properties:
        libraryItemId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the new library item.
        status:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status of the new library item, such as "Published".
        createdAt:
          allOf:
          - $ref: '#/components/schemas/QAppsTimestamp'
          description: The date and time the library item was created.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The user who created the library item.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/QAppsTimestamp'
          description: The date and time the library item was last updated.
        updatedBy:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The user who last updated the library item.
        ratingCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of ratings the library item has received from users.
        isVerified:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether the library item has been verified.
      required:
      - libraryItemId
      - status
      - createdAt
      - createdBy
      - ratingCount
    CreatePresignedUrlInput:
      type: object
      properties:
        instanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The unique identifier of the Amazon Q Business application
            environment instance.
        cardId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the card the file is associated with.
        appId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the Q App the file is associated with.
        fileContentsSha256:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Base64-encoded SHA-256 digest of the contents of the file
            to be uploaded.
        fileName:
          allOf:
          - $ref: '#/components/schemas/Filename'
          description: The name of the file to be uploaded.
        scope:
          allOf:
          - $ref: '#/components/schemas/DocumentScope'
          description: Whether the file is associated with a Q App definition or a
            specific Q App session.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the Q App session the file is associated
            with, if applicable.
      required:
      - instanceId
      - cardId
      - appId
      - fileContentsSha256
      - fileName
      - scope
    CreatePresignedUrlOutput:
      type: object
      properties:
        fileId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier assigned to the file to be uploaded.
        presignedUrl:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The URL for a presigned S3 POST operation used to upload a
            file.
        presignedUrlFields:
          allOf:
          - $ref: '#/components/schemas/PresignedUrlFields'
          description: The form fields to include in the presigned S3 POST operation
            used to upload a file.
        presignedUrlExpiration:
          allOf:
          - $ref: '#/components/schemas/QAppsTimestamp'
          description: The date and time that the presigned URL will expire in ISO
            8601 format.
      required:
      - fileId
      - presignedUrl
      - presignedUrlFields
      - presignedUrlExpiration
    CreateQAppInput:
      type: object
      properties:
        instanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The unique identifier of the Amazon Q Business application
            environment instance.
        title:
          allOf:
          - $ref: '#/components/schemas/Title'
          description: The title of the new Q App.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the new Q App.
        appDefinition:
          allOf:
          - $ref: '#/components/schemas/AppDefinitionInput'
          description: The definition of the new Q App, specifying the cards and flow.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Optional tags to associate with the new Q App.
      required:
      - instanceId
      - title
      - appDefinition
    CreateQAppOutput:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the new Q App.
        appArn:
          allOf:
          - $ref: '#/components/schemas/AppArn'
          description: The Amazon Resource Name (ARN) of the new Q App.
        title:
          allOf:
          - $ref: '#/components/schemas/Title'
          description: The title of the new Q App.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the new Q App.
        initialPrompt:
          allOf:
          - $ref: '#/components/schemas/InitialPrompt'
          description: The initial prompt displayed when the Q App is started.
        appVersion:
          allOf:
          - $ref: '#/components/schemas/AppVersion'
          description: The version of the new Q App.
        status:
          allOf:
          - $ref: '#/components/schemas/AppStatus'
          description: The status of the new Q App, such as "Created".
        createdAt:
          allOf:
          - $ref: '#/components/schemas/QAppsTimestamp'
          description: The date and time the Q App was created.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The user who created the Q App.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/QAppsTimestamp'
          description: The date and time the Q App was last updated.
        updatedBy:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The user who last updated the Q App.
        requiredCapabilities:
          allOf:
          - $ref: '#/components/schemas/AppRequiredCapabilities'
          description: The capabilities required to run the Q App, such as file upload
            or third-party integrations.
      required:
      - appId
      - appArn
      - title
      - appVersion
      - status
      - createdAt
      - createdBy
      - updatedAt
      - updatedBy
    Default:
      type: string
      maxLength: 500
    DeleteCategoryInputList:
      type: array
      items:
        $ref: '#/components/schemas/UUID'
    DeleteLibraryItemInput:
      type: object
      properties:
        instanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The unique identifier of the Amazon Q Business application
            environment instance.
        libraryItemId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the library item to delete.
      required:
      - instanceId
      - libraryItemId
    DeleteQAppInput:
      type: object
      properties:
        instanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The unique identifier of the Amazon Q Business application
            environment instance.
        appId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the Q App to delete.
      required:
      - instanceId
      - appId
    DependencyList:
      type: array
      items:
        type: string
    DescribeQAppPermissionsInput:
      type: object
      properties:
        instanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The unique identifier of the Amazon Q Business application
            environment instance.
        appId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the Amazon Q App for which to retrieve
            permissions.
      required:
      - instanceId
      - appId
    DescribeQAppPermissionsOutput:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the Amazon Q App for which
            permissions are returned.
        appId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier of the Amazon Q App for which permissions
            are returned.
        permissions:
          allOf:
          - $ref: '#/components/schemas/PermissionsOutputList'
          description: The list of permissions granted for the Amazon Q App.
    Description:
      type: string
      maxLength: 500
    DisassociateLibraryItemReviewInput:
      type: object
      properties:
        instanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The unique identifier of the Amazon Q Business application
            environment instance.
        libraryItemId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the library item to remove the review
            from.
      required:
      - instanceId
      - libraryItemId
    DisassociateQAppFromUserInput:
      type: object
      properties:
        instanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The unique identifier of the Amazon Q Business application
            environment instance.
        appId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the Q App to disassociate from the
            user.
      required:
      - instanceId
      - appId
    DocumentAttribute:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/DocumentAttributeKey'
          description: The identifier for the attribute.
        value:
          allOf:
          - $ref: '#/components/schemas/DocumentAttributeValue'
          description: The value of the attribute.
      required:
      - name
      - value
      description: A document attribute or metadata field.
    DocumentAttributeKey:
      type: string
      pattern: ^[a-zA-Z0-9_][a-zA-Z0-9_-]*$
      minLength: 1
      maxLength: 200
    DocumentAttributeStringListValue:
      type: array
      items:
        $ref: '#/components/schemas/PlatoString'
    DocumentAttributeStringValue:
      type: string
      maxLength: 2048
    DocumentAttributeValue:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/DocumentAttributeStringValue'
        description: |-
          A string.
      - allOf:
        - $ref: '#/components/schemas/DocumentAttributeStringListValue'
        description: |-
          A list of strings.
      - allOf:
        - $ref: '#/components/schemas/Long'
        description: |-
          A long integer value.
      - allOf:
        - $ref: '#/components/schemas/Timestamp'
        description: |-
          A date expressed as an ISO 8601 string.

          It's important for the time zone to be included in the _ISO 8601 date-time_ format. For example, 2012-03-25T12:30:10+01:00 is the ISO 8601 date-time format for March 25th 2012 at 12:30PM (plus 10 seconds) in Central European Time.
      description: |-
        The value of a document attribute. You can only provide one value for a document attribute.
    DocumentScope:
      type: string
      enum:
      - APPLICATION
      - SESSION
    ExecutionStatus:
      type: string
      enum:
      - IN_PROGRESS
      - WAITING
      - COMPLETED
      - ERROR
    ExportQAppSessionDataInput:
      type: object
      properties:
        instanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The unique identifier of the Amazon Q Business application
            environment instance.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the Q App data collection session.
      required:
      - instanceId
      - sessionId
    ExportQAppSessionDataOutput:
      type: object
      properties:
        csvFileLink:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The link where the exported Q App session data can be downloaded
            from.
        expiresAt:
          allOf:
          - $ref: '#/components/schemas/QAppsTimestamp'
          description: The date and time when the link for the exported Q App session
            data expires.
        sessionArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the Q App data collection
            session.
      required:
      - csvFileLink
      - expiresAt
      - sessionArn
    FileUploadCard:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the file upload card.
        title:
          allOf:
          - $ref: '#/components/schemas/Title'
          description: The title of the file upload card.
        dependencies:
          allOf:
          - $ref: '#/components/schemas/DependencyList'
          description: Any dependencies or requirements for the file upload card.
        type:
          allOf:
          - $ref: '#/components/schemas/CardType'
          description: The type of the card.
        filename:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the file being uploaded.
        fileId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier of the file associated with the card.
        allowOverride:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A flag indicating if the user can override the default file
            for the upload card.
      required:
      - id
      - title
      - dependencies
      - type
      description: A card in an Amazon Q App that allows the user to upload a file.
    FileUploadCardInput:
      type: object
      properties:
        title:
          allOf:
          - $ref: '#/components/schemas/Title'
          description: The title or label of the file upload card.
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the file upload card.
        type:
          allOf:
          - $ref: '#/components/schemas/CardType'
          description: The type of the card.
        filename:
          allOf:
          - $ref: '#/components/schemas/Filename'
          description: The default filename to use for the file upload card.
        fileId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The identifier of a pre-uploaded file associated with the card.
        allowOverride:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A flag indicating if the user can override the default file
            for the upload card.
      required:
      - title
      - id
      - type
      description: Represents a file upload card. It can optionally receive a `filename`
        and `fileId` to set a default file. If not received, the user must provide
        the file when the Q App runs.
    Filename:
      type: string
      maxLength: 100
    FormInputCard:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the form input card.
        title:
          allOf:
          - $ref: '#/components/schemas/Title'
          description: The title of the form input card.
        dependencies:
          allOf:
          - $ref: '#/components/schemas/DependencyList'
          description: Any dependencies or requirements for the form input card.
        type:
          allOf:
          - $ref: '#/components/schemas/CardType'
          description: The type of the card.
        metadata:
          allOf:
          - $ref: '#/components/schemas/FormInputCardMetadata'
          description: The metadata that defines the form input card data.
        computeMode:
          allOf:
          - $ref: '#/components/schemas/InputCardComputeMode'
          description: The compute mode of the form input card. This property determines
            whether individual participants of a data collection session can submit
            multiple response or one response. A compute mode of `append` shall allow
            participants to submit the same form multiple times with different values.
            A compute mode of `replace`code> shall overwrite the current value for
            each participant.
      required:
      - id
      - title
      - dependencies
      - type
      - metadata
      description: A card in an Amazon Q App that allows the user to submit a response.
    FormInputCardInput:
      type: object
      properties:
        title:
          allOf:
          - $ref: '#/components/schemas/Title'
          description: The title or label of the form input card.
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the form input card.
        type:
          allOf:
          - $ref: '#/components/schemas/CardType'
          description: The type of the card.
        metadata:
          allOf:
          - $ref: '#/components/schemas/FormInputCardMetadata'
          description: The metadata that defines the form input card data.
        computeMode:
          allOf:
          - $ref: '#/components/schemas/InputCardComputeMode'
          description: The compute mode of the form input card. This property determines
            whether individual participants of a data collection session can submit
            multiple response or one response. A compute mode of `append` shall allow
            participants to submit the same form multiple times with different values.
            A compute mode of `replace`code> shall overwrite the current value for
            each participant.
      required:
      - title
      - id
      - type
      - metadata
      description: Represents a form input card for an Amazon Q App.
    FormInputCardMetadata:
      type: object
      properties:
        schema:
          allOf:
          - $ref: '#/components/schemas/FormInputCardMetadataSchema'
          description: The JSON schema that defines the shape of the response data.
      required:
      - schema
      description: The metadata of the form input card.
    FormInputCardMetadataSchema:
      type: object
      additionalProperties: true
    GetLibraryItemInput:
      type: object
      properties:
        instanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The unique identifier of the Amazon Q Business application
            environment instance.
        libraryItemId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the library item to retrieve.
        appId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the Amazon Q App associated with the
            library item.
      required:
      - instanceId
      - libraryItemId
    GetLibraryItemOutput:
      type: object
      properties:
        libraryItemId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the library item.
        appId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the Q App associated with the library
            item.
        appVersion:
          allOf:
          - $ref: '#/components/schemas/AppVersion'
          description: The version of the Q App associated with the library item.
        categories:
          allOf:
          - $ref: '#/components/schemas/CategoryList'
          description: The categories associated with the library item for discovery.
        status:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status of the library item, such as "Published".
        createdAt:
          allOf:
          - $ref: '#/components/schemas/QAppsTimestamp'
          description: The date and time the library item was created.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The user who created the library item.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/QAppsTimestamp'
          description: The date and time the library item was last updated.
        updatedBy:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The user who last updated the library item.
        ratingCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of ratings the library item has received from users.
        isRatedByUser:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the current user has rated the library item.
        userCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of users who have associated the Q App with their
            account.
        isVerified:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether the library item has been verified.
      required:
      - libraryItemId
      - appId
      - appVersion
      - categories
      - status
      - createdAt
      - createdBy
      - ratingCount
    GetQAppInput:
      type: object
      properties:
        instanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The unique identifier of the Amazon Q Business application
            environment instance.
        appId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the Q App to retrieve.
        appVersion:
          allOf:
          - $ref: '#/components/schemas/AppVersion'
          description: The version of the Q App.
      required:
      - instanceId
      - appId
    GetQAppOutput:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the Q App.
        appArn:
          allOf:
          - $ref: '#/components/schemas/AppArn'
          description: The Amazon Resource Name (ARN) of the Q App.
        title:
          allOf:
          - $ref: '#/components/schemas/Title'
          description: The title of the Q App.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the Q App.
        initialPrompt:
          allOf:
          - $ref: '#/components/schemas/InitialPrompt'
          description: The initial prompt displayed when the Q App is started.
        appVersion:
          allOf:
          - $ref: '#/components/schemas/AppVersion'
          description: The version of the Q App.
        status:
          allOf:
          - $ref: '#/components/schemas/AppStatus'
          description: The status of the Q App.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/QAppsTimestamp'
          description: The date and time the Q App was created.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The user who created the Q App.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/QAppsTimestamp'
          description: The date and time the Q App was last updated.
        updatedBy:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The user who last updated the Q App.
        requiredCapabilities:
          allOf:
          - $ref: '#/components/schemas/AppRequiredCapabilities'
          description: The capabilities required to run the Q App, such as file upload
            or third-party integrations.
        appDefinition:
          allOf:
          - $ref: '#/components/schemas/AppDefinition'
          description: The full definition of the Q App, specifying the cards and
            flow.
      required:
      - appId
      - appArn
      - title
      - appVersion
      - status
      - createdAt
      - createdBy
      - updatedAt
      - updatedBy
      - appDefinition
    GetQAppSessionInput:
      type: object
      properties:
        instanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The unique identifier of the Amazon Q Business application
            environment instance.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the Q App session to retrieve.
      required:
      - instanceId
      - sessionId
    GetQAppSessionMetadataInput:
      type: object
      properties:
        instanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The unique identifier of the Amazon Q Business application
            environment instance.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the Q App session.
      required:
      - instanceId
      - sessionId
    GetQAppSessionMetadataOutput:
      type: object
      properties:
        sessionId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the Q App session.
        sessionArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the Q App session.
        sessionName:
          allOf:
          - $ref: '#/components/schemas/SessionName'
          description: The name of the Q App session.
        sharingConfiguration:
          allOf:
          - $ref: '#/components/schemas/SessionSharingConfiguration'
          description: The sharing configuration of the Q App data collection session.
        sessionOwner:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether the current user is the owner of the Q App
            session.
      required:
      - sessionId
      - sessionArn
      - sharingConfiguration
    GetQAppSessionOutput:
      type: object
      properties:
        sessionId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier of the Q App session.
        sessionArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the Q App session.
        sessionName:
          allOf:
          - $ref: '#/components/schemas/SessionName'
          description: The name of the Q App session.
        appVersion:
          allOf:
          - $ref: '#/components/schemas/AppVersion'
          description: The version of the Q App used for the session.
        latestPublishedAppVersion:
          allOf:
          - $ref: '#/components/schemas/AppVersion'
          description: The latest published version of the Q App used for the session.
        status:
          allOf:
          - $ref: '#/components/schemas/ExecutionStatus'
          description: The current status of the Q App session.
        cardStatus:
          allOf:
          - $ref: '#/components/schemas/CardStatusMap'
          description: The current status for each card in the Q App session.
        userIsHost:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether the current user is the owner of the Q App
            data collection session.
      required:
      - sessionId
      - sessionArn
      - status
      - cardStatus
    ImportDocumentInput:
      type: object
      properties:
        instanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The unique identifier of the Amazon Q Business application
            environment instance.
        cardId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the card the file is associated with.
        appId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the Q App the file is associated with.
        fileContentsBase64:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The base64-encoded contents of the file to upload.
        fileName:
          allOf:
          - $ref: '#/components/schemas/Filename'
          description: The name of the file being uploaded.
        scope:
          allOf:
          - $ref: '#/components/schemas/DocumentScope'
          description: Whether the file is associated with a Q App definition or a
            specific Q App session.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the Q App session the file is associated
            with, if applicable.
      required:
      - instanceId
      - cardId
      - appId
      - fileContentsBase64
      - fileName
      - scope
    ImportDocumentOutput:
      type: object
      properties:
        fileId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier assigned to the uploaded file.
    InitialPrompt:
      type: string
      maxLength: 10000
    InputCardComputeMode:
      type: string
      enum:
      - append
      - replace
    InstanceId:
      type: string
    InternalServerException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        retryAfterSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of seconds to wait before retrying the operation
      required:
      - message
      description: An internal service error occurred while processing the request.
    LibraryItemList:
      type: array
      items:
        $ref: '#/components/schemas/LibraryItemMember'
    LibraryItemMember:
      type: object
      properties:
        libraryItemId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the library item.
        appId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the Q App associated with the library
            item.
        appVersion:
          allOf:
          - $ref: '#/components/schemas/AppVersion'
          description: The version of the Q App associated with the library item.
        categories:
          allOf:
          - $ref: '#/components/schemas/CategoryList'
          description: The categories associated with the library item.
        status:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status of the library item.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/QAppsTimestamp'
          description: The date and time the library item was created.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The user who created the library item.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/QAppsTimestamp'
          description: The date and time the library item was last updated.
        updatedBy:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The user who last updated the library item.
        ratingCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of ratings the library item has received.
        isRatedByUser:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the current user has rated the library item.
        userCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of users who have the associated Q App.
        isVerified:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether the library item has been verified.
      required:
      - libraryItemId
      - appId
      - appVersion
      - categories
      - status
      - createdAt
      - createdBy
      - ratingCount
      description: A library item is a snapshot of an Amazon Q App that can be published
        so the users in their Amazon Q Apps library can discover it, clone it, and
        run it.
    LibraryItemStatus:
      type: string
      enum:
      - PUBLISHED
      - DISABLED
    ListCategoriesInput:
      type: object
      properties:
        instanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The unique identifier of the Amazon Q Business application
            environment instance.
      required:
      - instanceId
    ListCategoriesOutput:
      type: object
      properties:
        categories:
          allOf:
          - $ref: '#/components/schemas/CategoriesList'
          description: The categories of a Amazon Q Business application environment
            instance.
    ListLibraryItemsInput:
      type: object
      properties:
        instanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The unique identifier of the Amazon Q Business application
            environment instance.
        limit:
          allOf:
          - $ref: '#/components/schemas/PageLimit'
          description: The maximum number of library items to return in the response.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The token to request the next page of results.
        categoryId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: Optional category to filter the library items by.
      required:
      - instanceId
    ListLibraryItemsOutput:
      type: object
      properties:
        libraryItems:
          allOf:
          - $ref: '#/components/schemas/LibraryItemList'
          description: The list of library items meeting the request criteria.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token to use to request the next page of results.
    ListQAppSessionDataInput:
      type: object
      properties:
        instanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The unique identifier of the Amazon Q Business application
            environment instance.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the Q App data collection session.
      required:
      - instanceId
      - sessionId
    ListQAppSessionDataOutput:
      type: object
      properties:
        sessionId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the Q App data collection session.
        sessionArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the Q App data collection
            session.
        sessionData:
          allOf:
          - $ref: '#/components/schemas/QAppSessionDataList'
          description: The collected responses of a Q App session.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The pagination token that indicates the next set of results
            to retrieve.
      required:
      - sessionId
      - sessionArn
    ListQAppsInput:
      type: object
      properties:
        instanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The unique identifier of the Amazon Q Business application
            environment instance.
        limit:
          allOf:
          - $ref: '#/components/schemas/PageLimit'
          description: The maximum number of Q Apps to return in the response.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The token to request the next page of results.
      required:
      - instanceId
    ListQAppsOutput:
      type: object
      properties:
        apps:
          allOf:
          - $ref: '#/components/schemas/UserAppsList'
          description: The list of Amazon Q Apps meeting the request criteria.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token to use to request the next page of results.
      required:
      - apps
    ListTagsForResourceRequest:
      type: object
      properties:
        resourceARN:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the resource whose tags should
            be listed.
      required:
      - resourceARN
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The list of tags that are assigned to the resource.
    Long:
      type: integer
      format: int64
    MemoryReferenceList:
      type: array
      items:
        type: string
    MessageList:
      type: array
      items:
        $ref: '#/components/schemas/ConversationMessage'
    PageLimit:
      type: integer
      minimum: 1
      maximum: 100
    PaginationToken:
      type: string
      maxLength: 300
    PermissionInput:
      type: object
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/Action'
          description: The action associated with the permission.
        principal:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The principal user to which the permission applies.
      required:
      - action
      - principal
      description: The permission to grant or revoke for a Amazon Q App.
    PermissionOutput:
      type: object
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/Action'
          description: The action associated with the permission.
        principal:
          allOf:
          - $ref: '#/components/schemas/PrincipalOutput'
          description: The principal user to which the permission applies.
      required:
      - action
      - principal
      description: The permission granted to the Amazon Q App.
    PermissionsInputList:
      type: array
      items:
        $ref: '#/components/schemas/PermissionInput'
      description: <p>A list of permissions to grant or revoke for a Amazon Q App.</p>
    PermissionsOutputList:
      type: array
      items:
        $ref: '#/components/schemas/PermissionOutput'
      description: <p>A list of permissions granted for a Amazon Q App.</p>
    Placeholder:
      type: string
      maxLength: 500
    PlatoString:
      type: string
      minLength: 1
      maxLength: 2048
    PluginId:
      type: string
      minLength: 36
      maxLength: 36
    PluginType:
      type: string
      enum:
      - SERVICE_NOW
      - SALESFORCE
      - JIRA
      - ZENDESK
      - CUSTOM
      - ASANA
      - ATLASSIAN_CONFLUENCE
      - GOOGLE_CALENDAR
      - JIRA_CLOUD
      - MICROSOFT_EXCHANGE
      - MICROSOFT_TEAMS
      - PAGERDUTY_ADVANCE
      - SALESFORCE_CRM
      - SERVICENOW_NOW_PLATFORM
      - SMARTSHEET
      - ZENDESK_SUITE
    PredictAppDefinition:
      type: object
      properties:
        title:
          allOf:
          - $ref: '#/components/schemas/Title'
          description: The title of the generated Q App definition.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the generated Q App definition.
        appDefinition:
          allOf:
          - $ref: '#/components/schemas/AppDefinitionInput'
          description: The definition specifying the cards and flow of the generated
            Q App.
      required:
      - title
      - appDefinition
      description: The definition of an Amazon Q App generated based on input such
        as a conversation or problem statement.
    PredictQAppInput:
      type: object
      properties:
        instanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The unique identifier of the Amazon Q Business application
            environment instance.
        options:
          allOf:
          - $ref: '#/components/schemas/PredictQAppInputOptions'
          description: The input to generate the Q App definition from, either a conversation
            or problem statement.
      required:
      - instanceId
    PredictQAppInputOptions:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/MessageList'
        description: |-
          A conversation to use as input for generating the Q App definition.
      - allOf:
        - $ref: '#/components/schemas/String'
        description: |-
          A problem statement to use as input for generating the Q App definition.
      description: |-
        The input options for generating an Q App definition.
    PredictQAppOutput:
      type: object
      properties:
        app:
          allOf:
          - $ref: '#/components/schemas/PredictAppDefinition'
          description: The generated Q App definition.
        problemStatement:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The problem statement extracted from the input conversation,
            if provided.
      required:
      - app
      - problemStatement
    PresignedUrlFields:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    PrincipalOutput:
      type: object
      properties:
        userId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier of the user.
        userType:
          allOf:
          - $ref: '#/components/schemas/UserType'
          description: The type of the user.
        email:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The email address associated with the user.
      description: The principal for which the permission applies.
    Prompt:
      type: string
      maxLength: 50000
    QAppSessionData:
      type: object
      properties:
        cardId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The card Id associated with the response submitted for a Q
            App session.
        value:
          allOf:
          - $ref: '#/components/schemas/Document'
          description: The response submitted for a Q App session.
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          description: The user who submitted the response for a Q App session.
        submissionId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the submission.
        timestamp:
          allOf:
          - $ref: '#/components/schemas/QAppsTimestamp'
          description: The date and time when the session data is submitted.
      required:
      - cardId
      - user
      description: The response collected for a Amazon Q App session. This container
        represents a single response to a Q App session.
    QAppSessionDataList:
      type: array
      items:
        $ref: '#/components/schemas/QAppSessionData'
    QAppsTimestamp:
      type: string
      format: date-time
    QPluginCard:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the plugin card.
        title:
          allOf:
          - $ref: '#/components/schemas/Title'
          description: The title or label of the plugin card.
        dependencies:
          allOf:
          - $ref: '#/components/schemas/DependencyList'
          description: Any dependencies or requirements for the plugin card.
        type:
          allOf:
          - $ref: '#/components/schemas/CardType'
          description: The type of the card.
        prompt:
          allOf:
          - $ref: '#/components/schemas/Prompt'
          description: The prompt or instructions displayed for the plugin card.
        pluginType:
          allOf:
          - $ref: '#/components/schemas/PluginType'
          description: The type or category of the plugin used by the card.
        pluginId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier of the plugin used by the card.
        actionIdentifier:
          allOf:
          - $ref: '#/components/schemas/ActionIdentifier'
          description: The action identifier of the action to be performed by the
            plugin card.
      required:
      - id
      - title
      - dependencies
      - type
      - prompt
      - pluginType
      - pluginId
      description: A card in an Q App that integrates with a third-party plugin or
        service.
    QPluginCardInput:
      type: object
      properties:
        title:
          allOf:
          - $ref: '#/components/schemas/Title'
          description: The title or label of the plugin card.
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the plugin card.
        type:
          allOf:
          - $ref: '#/components/schemas/CardType'
          description: The type of the card.
        prompt:
          allOf:
          - $ref: '#/components/schemas/Prompt'
          description: The prompt or instructions displayed for the plugin card.
        pluginId:
          allOf:
          - $ref: '#/components/schemas/PluginId'
          description: The unique identifier of the plugin used by the card.
        actionIdentifier:
          allOf:
          - $ref: '#/components/schemas/ActionIdentifier'
          description: The action identifier of the action to be performed by the
            plugin card.
      required:
      - title
      - id
      - type
      - prompt
      - pluginId
      description: The input shape for defining a plugin card in an Amazon Q App.
    QQueryCard:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the query card.
        title:
          allOf:
          - $ref: '#/components/schemas/Title'
          description: The title or label of the query card.
        dependencies:
          allOf:
          - $ref: '#/components/schemas/DependencyList'
          description: Any dependencies or requirements for the query card.
        type:
          allOf:
          - $ref: '#/components/schemas/CardType'
          description: The type of the card.
        prompt:
          allOf:
          - $ref: '#/components/schemas/Prompt'
          description: The prompt or instructions displayed for the query card.
        outputSource:
          allOf:
          - $ref: '#/components/schemas/CardOutputSource'
          description: The source or type of output generated by the query card.
        attributeFilter:
          allOf:
          - $ref: '#/components/schemas/AttributeFilter'
          description: The Amazon Q Business filters applied in this query card when
            resolving data sources
        memoryReferences:
          allOf:
          - $ref: '#/components/schemas/MemoryReferenceList'
          description: Any dependencies for the query card, where the dependencies
            are references to the collected responses.
      required:
      - id
      - title
      - dependencies
      - type
      - prompt
      - outputSource
      description: A card in a Amazon Q App that generates a response based on the
        Amazon Q Business service.
    QQueryCardInput:
      type: object
      properties:
        title:
          allOf:
          - $ref: '#/components/schemas/Title'
          description: The title or label of the query card.
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the query card.
        type:
          allOf:
          - $ref: '#/components/schemas/CardType'
          description: The type of the card.
        prompt:
          allOf:
          - $ref: '#/components/schemas/Prompt'
          description: The prompt or instructions displayed for the query card.
        outputSource:
          allOf:
          - $ref: '#/components/schemas/CardOutputSource'
          description: The source or type of output to generate for the query card.
        attributeFilter:
          allOf:
          - $ref: '#/components/schemas/AttributeFilter'
          description: Turns on filtering of responses based on document attributes
            or metadata fields.
      required:
      - title
      - id
      - type
      - prompt
      description: The input shape for defining a query card in an Amazon Q App.
    ResourceNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        resourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier of the resource
        resourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of the resource
      required:
      - message
      - resourceId
      - resourceType
      description: The requested resource could not be found.
    Sender:
      type: string
      enum:
      - USER
      - SYSTEM
    ServiceQuotaExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        resourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier of the resource
        resourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of the resource
        serviceCode:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The code for the service where the quota was exceeded
        quotaCode:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The code of the quota that was exceeded
      required:
      - message
      - resourceId
      - resourceType
      - serviceCode
      - quotaCode
      description: The requested operation could not be completed because it would
        exceed the service's quota or limit.
    SessionName:
      type: string
      maxLength: 100
    SessionSharingAcceptResponses:
      type: boolean
    SessionSharingConfiguration:
      type: object
      properties:
        enabled:
          allOf:
          - $ref: '#/components/schemas/SessionSharingEnabled'
          description: Indicates whether an Q App session is shareable with other
            users.
        acceptResponses:
          allOf:
          - $ref: '#/components/schemas/SessionSharingAcceptResponses'
          description: Indicates whether an Q App session can accept responses from
            users.
        revealCards:
          allOf:
          - $ref: '#/components/schemas/SessionSharingRevealCards'
          description: Indicates whether collected responses for an Q App session
            are revealed for all users.
      required:
      - enabled
      description: The sharing configuration of an Amazon Q App data collection session.
    SessionSharingEnabled:
      type: boolean
    SessionSharingRevealCards:
      type: boolean
    StartQAppSessionInput:
      type: object
      properties:
        instanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The unique identifier of the Amazon Q Business application
            environment instance.
        appId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the Q App to start a session for.
        appVersion:
          allOf:
          - $ref: '#/components/schemas/AppVersion'
          description: The version of the Q App to use for the session.
        initialValues:
          allOf:
          - $ref: '#/components/schemas/CardValueList'
          description: Optional initial input values to provide for the Q App session.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier of the a Q App session.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Optional tags to associate with the new Q App session.
      required:
      - instanceId
      - appId
      - appVersion
    StartQAppSessionOutput:
      type: object
      properties:
        sessionId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier of the new or retrieved Q App session.
        sessionArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the new Q App session.
      required:
      - sessionId
      - sessionArn
    StopQAppSessionInput:
      type: object
      properties:
        instanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The unique identifier of the Amazon Q Business application
            environment instance.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the Q App session to stop.
      required:
      - instanceId
      - sessionId
    Submission:
      type: object
      properties:
        value:
          allOf:
          - $ref: '#/components/schemas/Document'
          description: The data submitted by the user.
        submissionId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the submission.
        timestamp:
          allOf:
          - $ref: '#/components/schemas/QAppsTimestamp'
          description: The date and time when the card is submitted.
      description: A record created when a user submits a form card.
    SubmissionList:
      type: array
      items:
        $ref: '#/components/schemas/Submission'
    SubmissionMutation:
      type: object
      properties:
        submissionId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the submission.
        mutationType:
          allOf:
          - $ref: '#/components/schemas/SubmissionMutationKind'
          description: The operation that is performed on a submission.
      required:
      - submissionId
      - mutationType
      description: Represents an action performed on a submission.
    SubmissionMutationKind:
      type: string
      enum:
      - edit
      - delete
      - add
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagKeys:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    TagResourceRequest:
      type: object
      properties:
        resourceARN:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the resource to tag.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags to associate with the resource.
      required:
      - resourceARN
      - tags
    TagResourceResponse:
      type: object
      properties: {}
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    Tags:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TextInputCard:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the text input card.
        title:
          allOf:
          - $ref: '#/components/schemas/Title'
          description: The title or label of the text input card.
        dependencies:
          allOf:
          - $ref: '#/components/schemas/DependencyList'
          description: Any dependencies or requirements for the text input card.
        type:
          allOf:
          - $ref: '#/components/schemas/CardType'
          description: The type of the card.
        placeholder:
          allOf:
          - $ref: '#/components/schemas/Placeholder'
          description: The placeholder text to display in the text input field.
        defaultValue:
          allOf:
          - $ref: '#/components/schemas/Default'
          description: The default value to pre-populate in the text input field.
      required:
      - id
      - title
      - dependencies
      - type
      description: A card in an Amazon Q App that allows the user to input text.
    TextInputCardInput:
      type: object
      properties:
        title:
          allOf:
          - $ref: '#/components/schemas/Title'
          description: The title or label of the text input card.
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the text input card.
        type:
          allOf:
          - $ref: '#/components/schemas/CardType'
          description: The type of the card.
        placeholder:
          allOf:
          - $ref: '#/components/schemas/Placeholder'
          description: The placeholder text to display in the text input field.
        defaultValue:
          allOf:
          - $ref: '#/components/schemas/Default'
          description: The default value to pre-populate in the text input field.
      required:
      - title
      - id
      - type
      description: The input shape for defining a text input card in an Amazon Q App.
    ThrottlingException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        serviceCode:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The code for the service where the quota was exceeded
        quotaCode:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The code of the quota that was exceeded
        retryAfterSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of seconds to wait before retrying the operation
      required:
      - message
      - serviceCode
      - quotaCode
      description: The requested operation could not be completed because too many
        requests were sent at once. Wait a bit and try again later.
    Timestamp:
      type: string
      format: date-time
    Title:
      type: string
      pattern: ^[^{}\\"<>]+$
      maxLength: 100
    UUID:
      type: string
      pattern: ^[\da-f]{8}-[\da-f]{4}-[45][\da-f]{3}-[89ABab][\da-f]{3}-[\da-f]{12}$
    UnauthorizedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The client is not authenticated or authorized to perform the requested
        operation.
    UntagResourceRequest:
      type: object
      properties:
        resourceARN:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the resource to disassociate
            the tag from.
        tagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeys'
          description: The keys of the tags to disassociate from the resource.
      required:
      - resourceARN
      - tagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateLibraryItemInput:
      type: object
      properties:
        instanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The unique identifier of the Amazon Q Business application
            environment instance.
        libraryItemId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the library item to update.
        status:
          allOf:
          - $ref: '#/components/schemas/LibraryItemStatus'
          description: The new status to set for the library item, such as "Published"
            or "Hidden".
        categories:
          allOf:
          - $ref: '#/components/schemas/CategoryIdList'
          description: The new categories to associate with the library item.
      required:
      - instanceId
      - libraryItemId
    UpdateLibraryItemMetadataInput:
      type: object
      properties:
        instanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The unique identifier of the Amazon Q Business application
            environment instance.
        libraryItemId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the updated library item.
        isVerified:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: The verification status of the library item
      required:
      - instanceId
      - libraryItemId
    UpdateLibraryItemOutput:
      type: object
      properties:
        libraryItemId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the updated library item.
        appId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the Q App associated with the library
            item.
        appVersion:
          allOf:
          - $ref: '#/components/schemas/AppVersion'
          description: The version of the Q App associated with the library item.
        categories:
          allOf:
          - $ref: '#/components/schemas/CategoryList'
          description: The categories associated with the updated library item.
        status:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The new status of the updated library item.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/QAppsTimestamp'
          description: The date and time the library item was originally created.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The user who originally created the library item.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/QAppsTimestamp'
          description: The date and time the library item was last updated.
        updatedBy:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The user who last updated the library item.
        ratingCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of ratings the library item has received.
        isRatedByUser:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the current user has rated the library item.
        userCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of users who have the associated Q App.
        isVerified:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether the library item has been verified.
      required:
      - libraryItemId
      - appId
      - appVersion
      - categories
      - status
      - createdAt
      - createdBy
      - ratingCount
    UpdateQAppInput:
      type: object
      properties:
        instanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The unique identifier of the Amazon Q Business application
            environment instance.
        appId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the Q App to update.
        title:
          allOf:
          - $ref: '#/components/schemas/Title'
          description: The new title for the Q App.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The new description for the Q App.
        appDefinition:
          allOf:
          - $ref: '#/components/schemas/AppDefinitionInput'
          description: The new definition specifying the cards and flow for the Q
            App.
      required:
      - instanceId
      - appId
    UpdateQAppOutput:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the updated Q App.
        appArn:
          allOf:
          - $ref: '#/components/schemas/AppArn'
          description: The Amazon Resource Name (ARN) of the updated Q App.
        title:
          allOf:
          - $ref: '#/components/schemas/Title'
          description: The new title of the updated Q App.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The new description of the updated Q App.
        initialPrompt:
          allOf:
          - $ref: '#/components/schemas/InitialPrompt'
          description: The initial prompt for the updated Q App.
        appVersion:
          allOf:
          - $ref: '#/components/schemas/AppVersion'
          description: The new version of the updated Q App.
        status:
          allOf:
          - $ref: '#/components/schemas/AppStatus'
          description: The status of the updated Q App.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/QAppsTimestamp'
          description: The date and time the Q App was originally created.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The user who originally created the Q App.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/QAppsTimestamp'
          description: The date and time the Q App was last updated.
        updatedBy:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The user who last updated the Q App.
        requiredCapabilities:
          allOf:
          - $ref: '#/components/schemas/AppRequiredCapabilities'
          description: The capabilities required for the updated Q App.
      required:
      - appId
      - appArn
      - title
      - appVersion
      - status
      - createdAt
      - createdBy
      - updatedAt
      - updatedBy
    UpdateQAppPermissionsInput:
      type: object
      properties:
        instanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The unique identifier of the Amazon Q Business application
            environment instance.
        appId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the Amazon Q App for which permissions
            are being updated.
        grantPermissions:
          allOf:
          - $ref: '#/components/schemas/PermissionsInputList'
          description: The list of permissions to grant for the Amazon Q App.
        revokePermissions:
          allOf:
          - $ref: '#/components/schemas/PermissionsInputList'
          description: The list of permissions to revoke for the Amazon Q App.
      required:
      - instanceId
      - appId
    UpdateQAppPermissionsOutput:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the Amazon Q App for which
            permissions were updated.
        appId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier of the Amazon Q App for which permissions
            were updated.
        permissions:
          allOf:
          - $ref: '#/components/schemas/PermissionsOutputList'
          description: The updated list of permissions for the Amazon Q App.
    UpdateQAppSessionInput:
      type: object
      properties:
        instanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The unique identifier of the Amazon Q Business application
            environment instance.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the Q App session to provide input
            for.
        values:
          allOf:
          - $ref: '#/components/schemas/CardValueList'
          description: The input values to provide for the current state of the Q
            App session.
      required:
      - instanceId
      - sessionId
    UpdateQAppSessionMetadataInput:
      type: object
      properties:
        instanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The unique identifier of the Amazon Q Business application
            environment instance.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the Q App session to update configuration
            for.
        sessionName:
          allOf:
          - $ref: '#/components/schemas/SessionName'
          description: The new name for the Q App session.
        sharingConfiguration:
          allOf:
          - $ref: '#/components/schemas/SessionSharingConfiguration'
          description: The new sharing configuration for the Q App data collection
            session.
      required:
      - instanceId
      - sessionId
      - sharingConfiguration
    UpdateQAppSessionMetadataOutput:
      type: object
      properties:
        sessionId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the updated Q App session.
        sessionArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the updated Q App session.
        sessionName:
          allOf:
          - $ref: '#/components/schemas/SessionName'
          description: The new name of the updated Q App session.
        sharingConfiguration:
          allOf:
          - $ref: '#/components/schemas/SessionSharingConfiguration'
          description: The new sharing configuration of the updated Q App data collection
            session.
      required:
      - sessionId
      - sessionArn
      - sharingConfiguration
    UpdateQAppSessionOutput:
      type: object
      properties:
        sessionId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier of the updated Q App session.
        sessionArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the updated Q App session.
      required:
      - sessionId
      - sessionArn
    User:
      type: object
      properties:
        userId:
          allOf:
          - $ref: '#/components/schemas/UserId'
          description: The unique identifier of a user.
      description: A user of an Amazon Q App.
    UserAppItem:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the Q App.
        appArn:
          allOf:
          - $ref: '#/components/schemas/AppArn'
          description: The Amazon Resource Name (ARN) of the Q App.
        title:
          allOf:
          - $ref: '#/components/schemas/Title'
          description: The title of the Q App.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the Q App.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/QAppsTimestamp'
          description: The date and time the user's association with the Q App was
            created.
        canEdit:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A flag indicating whether the user can edit the Q App.
        status:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status of the user's association with the Q App.
        isVerified:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether the Q App has been verified.
      required:
      - appId
      - appArn
      - title
      - createdAt
      description: An Amazon Q App associated with a user, either owned by the user
        or favorited.
    UserAppsList:
      type: array
      items:
        $ref: '#/components/schemas/UserAppItem'
    UserId:
      type: string
    UserType:
      type: string
      enum:
      - owner
      - user
    ValidationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The input failed to satisfy the constraints specified by the service.
