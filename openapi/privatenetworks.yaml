openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: privatenetworks
  x-aws-serviceName: privatenetworks
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2021-12-03'
  title: AWS Private 5G
  description: |-
    Amazon Web Services Private 5G is a managed service that makes it easy to deploy, operate, and scale your own private mobile network at your on-premises location. Private 5G provides the pre-configured hardware and software for mobile networks, helps automate setup, and scales capacity on demand to support additional devices as needed.
servers:
- description: The AWS Private 5G regional endpoint
  url: https://private-networks.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /v1/orders/acknowledge:
    post:
      operationId: AcknowledgeOrderReceipt
      description: |-
        Acknowledges that the specified network order was received.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                orderArn:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '500':
          description: |-
            Information about an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v1/device-identifiers/activate:
    post:
      operationId: ActivateDeviceIdentifier
      description: |-
        Activates the specified device identifier.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                deviceIdentifierArn:
                  $ref: '#/components/schemas/Arn'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '500':
          description: |-
            Information about an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v1/network-sites/activate:
    post:
      operationId: ActivateNetworkSite
      description: |-
        Activates the specified network site.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                networkSiteArn:
                  $ref: '#/components/schemas/Arn'
                shippingAddress:
                  $ref: '#/components/schemas/Address'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                commitmentConfiguration:
                  $ref: '#/components/schemas/CommitmentConfiguration'
      responses:
        '200': {}
        '500':
          description: |-
            Information about an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v1/network-resources/configure:
    post:
      operationId: ConfigureAccessPoint
      description: |-
        Configures the specified network resource.

        Use this action to specify the geographic position of the hardware. You must provide Certified Professional Installer (CPI) credentials in the request so that we can obtain spectrum grants. For more information, see [Radio units](https://docs.aws.amazon.com/private-networks/latest/userguide/radio-units.html) in the _Amazon Web Services Private 5G User Guide_.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accessPointArn:
                  $ref: '#/components/schemas/Arn'
                position:
                  $ref: '#/components/schemas/Position'
                cpiUsername:
                  $ref: '#/components/schemas/SensitiveString'
                cpiUserId:
                  $ref: '#/components/schemas/SensitiveString'
                cpiUserPassword:
                  $ref: '#/components/schemas/SensitiveString'
                cpiSecretKey:
                  $ref: '#/components/schemas/SensitiveString'
      responses:
        '200': {}
        '500':
          description: |-
            Information about an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v1/networks:
    post:
      operationId: CreateNetwork
      description: |-
        Creates a network.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                networkName:
                  $ref: '#/components/schemas/Name'
                description:
                  $ref: '#/components/schemas/Description'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '500':
          description: |-
            Information about an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v1/network-sites:
    post:
      operationId: CreateNetworkSite
      description: |-
        Creates a network site.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                networkSiteName:
                  $ref: '#/components/schemas/Name'
                description:
                  $ref: '#/components/schemas/Description'
                networkArn:
                  $ref: '#/components/schemas/Arn'
                pendingPlan:
                  $ref: '#/components/schemas/SitePlan'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                availabilityZone:
                  $ref: '#/components/schemas/String'
                availabilityZoneId:
                  $ref: '#/components/schemas/String'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '500':
          description: |-
            Information about an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v1/device-identifiers/deactivate:
    post:
      operationId: DeactivateDeviceIdentifier
      description: |-
        Deactivates the specified device identifier.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                deviceIdentifierArn:
                  $ref: '#/components/schemas/Arn'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '500':
          description: |-
            Information about an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v1/networks/{networkArn}:
    delete:
      operationId: DeleteNetwork
      description: |-
        Deletes the specified network. You must delete network sites before you delete the network. For more information, see [DeleteNetworkSite](https://docs.aws.amazon.com/private-networks/latest/APIReference/API_DeleteNetworkSite.html) in the _API Reference for Amazon Web Services Private 5G_.
      parameters:
      - name: networkArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      - name: clientToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have permission to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Information about an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetNetwork
      description: |-
        Gets the specified network.
      parameters:
      - name: networkArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '500':
          description: |-
            Information about an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v1/network-sites/{networkSiteArn}:
    delete:
      operationId: DeleteNetworkSite
      description: |-
        Deletes the specified network site. Return the hardware after you delete the network site. You are responsible for minimum charges. For more information, see [Hardware returns](https://docs.aws.amazon.com/private-networks/latest/userguide/hardware-maintenance.html) in the _Amazon Web Services Private 5G User Guide_.
      parameters:
      - name: networkSiteArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      - name: clientToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have permission to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Information about an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetNetworkSite
      description: |-
        Gets the specified network site.
      parameters:
      - name: networkSiteArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '500':
          description: |-
            Information about an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v1/device-identifiers/{deviceIdentifierArn}:
    get:
      operationId: GetDeviceIdentifier
      description: |-
        Gets the specified device identifier.
      parameters:
      - name: deviceIdentifierArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '500':
          description: |-
            Information about an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v1/network-resources/{networkResourceArn}:
    get:
      operationId: GetNetworkResource
      description: |-
        Gets the specified network resource.
      parameters:
      - name: networkResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '500':
          description: |-
            Information about an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v1/orders/{orderArn}:
    get:
      operationId: GetOrder
      description: |-
        Gets the specified order.
      parameters:
      - name: orderArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '500':
          description: |-
            Information about an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v1/device-identifiers/list:
    post:
      operationId: ListDeviceIdentifiers
      description: |-
        Lists device identifiers. Add filters to your request to return a more specific list of results. Use filters to match the Amazon Resource Name (ARN) of an order, the status of device identifiers, or the ARN of the traffic group.

        If you specify multiple filters, filters are joined with an OR, and the request returns results that match all of the specified filters.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filters:
                  $ref: '#/components/schemas/DeviceIdentifierFilters'
                networkArn:
                  $ref: '#/components/schemas/Arn'
                startToken:
                  $ref: '#/components/schemas/PaginationToken'
                maxResults:
                  $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
        '500':
          description: |-
            Information about an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v1/network-resources:
    post:
      operationId: ListNetworkResources
      description: |-
        Lists network resources. Add filters to your request to return a more specific list of results. Use filters to match the Amazon Resource Name (ARN) of an order or the status of network resources.

        If you specify multiple filters, filters are joined with an OR, and the request returns results that match all of the specified filters.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filters:
                  $ref: '#/components/schemas/NetworkResourceFilters'
                networkArn:
                  $ref: '#/components/schemas/Arn'
                startToken:
                  $ref: '#/components/schemas/PaginationToken'
                maxResults:
                  $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
        '500':
          description: |-
            Information about an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v1/network-sites/list:
    post:
      operationId: ListNetworkSites
      description: |-
        Lists network sites. Add filters to your request to return a more specific list of results. Use filters to match the status of the network site.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filters:
                  $ref: '#/components/schemas/NetworkSiteFilters'
                networkArn:
                  $ref: '#/components/schemas/Arn'
                startToken:
                  $ref: '#/components/schemas/PaginationToken'
                maxResults:
                  $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
        '500':
          description: |-
            Information about an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v1/networks/list:
    post:
      operationId: ListNetworks
      description: |-
        Lists networks. Add filters to your request to return a more specific list of results. Use filters to match the status of the network.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filters:
                  $ref: '#/components/schemas/NetworkFilters'
                startToken:
                  $ref: '#/components/schemas/PaginationToken'
                maxResults:
                  $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
        '500':
          description: |-
            Information about an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v1/orders/list:
    post:
      operationId: ListOrders
      description: |-
        Lists orders. Add filters to your request to return a more specific list of results. Use filters to match the Amazon Resource Name (ARN) of the network site or the status of the order.

        If you specify multiple filters, filters are joined with an OR, and the request returns results that match all of the specified filters.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                networkArn:
                  $ref: '#/components/schemas/Arn'
                startToken:
                  $ref: '#/components/schemas/PaginationToken'
                maxResults:
                  $ref: '#/components/schemas/Integer'
                filters:
                  $ref: '#/components/schemas/OrderFilters'
      responses:
        '200': {}
        '500':
          description: |-
            Information about an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tags/{resourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Lists the tags for the specified resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have permission to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Information about an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: TagResource
      description: |-
        Adds tags to the specified resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have permission to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Information about an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: UntagResource
      description: |-
        Removes tags from the specified resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeyList'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have permission to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Information about an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /ping:
    get:
      operationId: Ping
      description: |-
        Checks the health of the service.
      responses:
        '200': {}
        '500':
          description: |-
            Information about an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
  /v1/network-resources/update:
    post:
      operationId: StartNetworkResourceUpdate
      description: |-
        Use this action to do the following tasks:

          * Update the duration and renewal status of the commitment period for a radio unit. The update goes into effect immediately.

          * Request a replacement for a network resource.

          * Request that you return a network resource.

        After you submit a request to replace or return a network resource, the status of the network resource changes to `CREATING_SHIPPING_LABEL`. The shipping label is available when the status of the network resource is `PENDING_RETURN`. After the network resource is successfully returned, its status changes to `DELETED`. For more information, see [Return a radio unit](https://docs.aws.amazon.com/private-networks/latest/userguide/radio-units.html#return-radio-unit).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                networkResourceArn:
                  $ref: '#/components/schemas/Arn'
                updateType:
                  $ref: '#/components/schemas/UpdateType'
                shippingAddress:
                  $ref: '#/components/schemas/Address'
                returnReason:
                  $ref: '#/components/schemas/String'
                commitmentConfiguration:
                  $ref: '#/components/schemas/CommitmentConfiguration'
      responses:
        '200': {}
        '500':
          description: |-
            Information about an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v1/network-sites/site:
    put:
      operationId: UpdateNetworkSite
      description: |-
        Updates the specified network site.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                networkSiteArn:
                  $ref: '#/components/schemas/Arn'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                description:
                  $ref: '#/components/schemas/Description'
      responses:
        '200': {}
        '500':
          description: |-
            Information about an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v1/network-sites/plan:
    put:
      operationId: UpdateNetworkSitePlan
      description: |-
        Updates the specified network site plan.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                networkSiteArn:
                  $ref: '#/components/schemas/Arn'
                pendingPlan:
                  $ref: '#/components/schemas/SitePlan'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '500':
          description: |-
            Information about an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    AccessDeniedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: You do not have permission to perform this operation.
    AcknowledgeOrderReceiptRequest:
      type: object
      properties:
        orderArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the order.
      required:
      - orderArn
    AcknowledgeOrderReceiptResponse:
      type: object
      properties:
        order:
          allOf:
          - $ref: '#/components/schemas/Order'
          description: Information about the order.
      required:
      - order
    AcknowledgmentStatus:
      type: string
      enum:
      - ACKNOWLEDGING
      - ACKNOWLEDGED
      - UNACKNOWLEDGED
    ActivateDeviceIdentifierRequest:
      type: object
      properties:
        deviceIdentifierArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the device identifier.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: Unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. For more information, see [How to ensure
            idempotency](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html).
      required:
      - deviceIdentifierArn
    ActivateDeviceIdentifierResponse:
      type: object
      properties:
        deviceIdentifier:
          allOf:
          - $ref: '#/components/schemas/DeviceIdentifier'
          description: Information about the device identifier.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags on the device identifier.
      required:
      - deviceIdentifier
    ActivateNetworkSiteRequest:
      type: object
      properties:
        networkSiteArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the network site.
        shippingAddress:
          allOf:
          - $ref: '#/components/schemas/Address'
          description: The shipping address of the network site.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: Unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. For more information, see [How to ensure
            idempotency](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html).
        commitmentConfiguration:
          allOf:
          - $ref: '#/components/schemas/CommitmentConfiguration'
          description: "Determines the duration and renewal status of the commitment\
            \ period for all pending radio units.\n\nIf you include `commitmentConfiguration`\
            \ in the `ActivateNetworkSiteRequest` action, you must specify the following:\n\
            \n  * The commitment period for the radio unit. You can choose a 60-day,\
            \ 1-year, or 3-year period.\n\n  * Whether you want your commitment period\
            \ to automatically renew for one more year after your current commitment\
            \ period expires.\n\nFor pricing, see [Amazon Web Services Private 5G\
            \ Pricing](http://aws.amazon.com/private5g/pricing).\n\nIf you do not\
            \ include `commitmentConfiguration` in the `ActivateNetworkSiteRequest`\
            \ action, the commitment period is set to 60-days."
      required:
      - networkSiteArn
      - shippingAddress
    ActivateNetworkSiteResponse:
      type: object
      properties:
        networkSite:
          allOf:
          - $ref: '#/components/schemas/NetworkSite'
          description: Information about the network site.
    Address:
      type: object
      properties:
        city:
          allOf:
          - $ref: '#/components/schemas/AddressContent'
          description: The city for this address.
        company:
          allOf:
          - $ref: '#/components/schemas/AddressContent'
          description: The company name for this address.
        country:
          allOf:
          - $ref: '#/components/schemas/AddressContent'
          description: The country for this address.
        name:
          allOf:
          - $ref: '#/components/schemas/AddressContent'
          description: The recipient's name for this address.
        phoneNumber:
          allOf:
          - $ref: '#/components/schemas/AddressContent'
          description: The recipient's phone number.
        postalCode:
          allOf:
          - $ref: '#/components/schemas/AddressContent'
          description: The postal code for this address.
        stateOrProvince:
          allOf:
          - $ref: '#/components/schemas/AddressContent'
          description: The state or province for this address.
        street1:
          allOf:
          - $ref: '#/components/schemas/AddressContent'
          description: The first line of the street address.
        street2:
          allOf:
          - $ref: '#/components/schemas/AddressContent'
          description: The second line of the street address.
        street3:
          allOf:
          - $ref: '#/components/schemas/AddressContent'
          description: The third line of the street address.
        emailAddress:
          allOf:
          - $ref: '#/components/schemas/AddressContent'
          description: The recipient's email address.
      required:
      - city
      - country
      - name
      - postalCode
      - stateOrProvince
      - street1
      description: Information about an address.
    AddressContent:
      type: string
      minLength: 1
      maxLength: 1024
    Arn:
      type: string
      pattern: ^arn:aws:private-networks:[a-z0-9-]+:[^:]*:.*$
    ClientToken:
      type: string
      minLength: 1
      maxLength: 100
    CommitmentConfiguration:
      type: object
      properties:
        commitmentLength:
          allOf:
          - $ref: '#/components/schemas/CommitmentLength'
          description: The duration of the commitment period for the radio unit. You
            can choose a 60-day, 1-year, or 3-year period.
        automaticRenewal:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: "Determines whether the commitment period for a radio unit\
            \ is set to automatically renew for an additional 1 year after your current\
            \ commitment period expires.\n\nSet to `True`, if you want your commitment\
            \ period to automatically renew. Set to `False` if you do not want your\
            \ commitment to automatically renew.\n\nYou can do the following:\n\n\
            \  * Set a 1-year commitment to automatically renew for an additional\
            \ 1 year. The hourly rate for the additional year will continue to be\
            \ the same as your existing 1-year rate.\n\n  * Set a 3-year commitment\
            \ to automatically renew for an additional 1 year. The hourly rate for\
            \ the additional year will continue to be the same as your existing 3-year\
            \ rate.\n\n  * Turn off a previously-enabled automatic renewal on a 1-year\
            \ or 3-year commitment.\n\nYou cannot use the automatic-renewal option\
            \ for a 60-day commitment."
      required:
      - commitmentLength
      - automaticRenewal
      description: 'Determines the duration and renewal status of the commitment period
        for a radio unit.


        For pricing, see [Amazon Web Services Private 5G Pricing](http://aws.amazon.com/private5g/pricing).'
    CommitmentInformation:
      type: object
      properties:
        commitmentConfiguration:
          allOf:
          - $ref: '#/components/schemas/CommitmentConfiguration'
          description: The duration and renewal status of the commitment period for
            the radio unit.
        startAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time that the commitment period started.
        expiresOn:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time that the commitment period ends. If you do
            not cancel or renew the commitment before the expiration date, you will
            be billed at the 60-day-commitment rate.
      required:
      - commitmentConfiguration
      description: Shows the duration, the date and time that the contract started
        and ends, and the renewal status of the commitment period for the radio unit.
    CommitmentLength:
      type: string
      enum:
      - SIXTY_DAYS
      - ONE_YEAR
      - THREE_YEARS
    ConfigureAccessPointRequest:
      type: object
      properties:
        accessPointArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the network resource.
        position:
          allOf:
          - $ref: '#/components/schemas/Position'
          description: The position of the network resource.
        cpiUsername:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          description: The CPI user name of the CPI user who is certifying the coordinates
            of the radio unit.
        cpiUserId:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          description: The CPI user ID of the CPI user who is certifying the coordinates
            of the network resource.
        cpiUserPassword:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          description: The CPI password associated with the CPI certificate in `cpiSecretKey`.
        cpiSecretKey:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          description: A Base64 encoded string of the CPI certificate associated with
            the CPI user who is certifying the coordinates of the network resource.
      required:
      - accessPointArn
    ConfigureAccessPointResponse:
      type: object
      properties:
        accessPoint:
          allOf:
          - $ref: '#/components/schemas/NetworkResource'
          description: Information about the network resource.
      required:
      - accessPoint
    CreateNetworkRequest:
      type: object
      properties:
        networkName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the network. You can't change the name after you
            create the network.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the network.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: Unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. For more information, see [How to ensure
            idempotency](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html).
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags to apply to the network.
      required:
      - networkName
    CreateNetworkResponse:
      type: object
      properties:
        network:
          allOf:
          - $ref: '#/components/schemas/Network'
          description: Information about the network.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The network tags.
      required:
      - network
    CreateNetworkSiteRequest:
      type: object
      properties:
        networkSiteName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the site. You can't change the name after you create
            the site.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the site.
        networkArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the network.
        pendingPlan:
          allOf:
          - $ref: '#/components/schemas/SitePlan'
          description: Information about the pending plan for this site.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: Unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. For more information, see [How to ensure
            idempotency](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html).
        availabilityZone:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Availability Zone that is the parent of this site. You
            can't change the Availability Zone after you create the site.
        availabilityZoneId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the Availability Zone that is the parent of this
            site. You can't change the Availability Zone after you create the site.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags to apply to the network site.
      required:
      - networkSiteName
      - networkArn
    CreateNetworkSiteResponse:
      type: object
      properties:
        networkSite:
          allOf:
          - $ref: '#/components/schemas/NetworkSite'
          description: Information about the network site.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The network site tags.
    DeactivateDeviceIdentifierRequest:
      type: object
      properties:
        deviceIdentifierArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the device identifier.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: Unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. For more information, see [How to ensure
            idempotency](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html).
      required:
      - deviceIdentifierArn
    DeactivateDeviceIdentifierResponse:
      type: object
      properties:
        deviceIdentifier:
          allOf:
          - $ref: '#/components/schemas/DeviceIdentifier'
          description: Information about the device identifier.
      required:
      - deviceIdentifier
    DeleteNetworkRequest:
      type: object
      properties:
        networkArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the network.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: Unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. For more information, see [How to ensure
            idempotency](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html).
      required:
      - networkArn
    DeleteNetworkResponse:
      type: object
      properties:
        network:
          allOf:
          - $ref: '#/components/schemas/Network'
          description: Information about the network.
      required:
      - network
    DeleteNetworkSiteRequest:
      type: object
      properties:
        networkSiteArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the network site.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: Unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. For more information, see [How to ensure
            idempotency](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html).
      required:
      - networkSiteArn
    DeleteNetworkSiteResponse:
      type: object
      properties:
        networkSite:
          allOf:
          - $ref: '#/components/schemas/NetworkSite'
          description: Information about the network site.
    Description:
      type: string
      minLength: 0
      maxLength: 100
    DeviceIdentifier:
      type: object
      properties:
        deviceIdentifierArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the device identifier.
        trafficGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the traffic group to which
            the device identifier belongs.
        networkArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the network on which the
            device identifier appears.
        imsi:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          description: The International Mobile Subscriber Identity of the device
            identifier.
        iccid:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Integrated Circuit Card Identifier of the device identifier.
        vendor:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The vendor of the device identifier.
        status:
          allOf:
          - $ref: '#/components/schemas/DeviceIdentifierStatus'
          description: The status of the device identifier.
        orderArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the order used to purchase
            the device identifier.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The creation time of this device identifier.
      description: Information about a subscriber of a device that can use a network.
    DeviceIdentifierFilterKeys:
      type: string
      enum:
      - STATUS
      - ORDER
      - TRAFFIC_GROUP
    DeviceIdentifierFilterValues:
      type: array
      items:
        type: string
    DeviceIdentifierFilters:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/DeviceIdentifierFilterValues'
    DeviceIdentifierList:
      type: array
      items:
        $ref: '#/components/schemas/DeviceIdentifier'
    DeviceIdentifierStatus:
      type: string
      enum:
      - ACTIVE
      - INACTIVE
    ElevationReference:
      type: string
      enum:
      - AGL
      - AMSL
    ElevationUnit:
      type: string
      enum:
      - FEET
    GetDeviceIdentifierRequest:
      type: object
      properties:
        deviceIdentifierArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the device identifier.
      required:
      - deviceIdentifierArn
    GetDeviceIdentifierResponse:
      type: object
      properties:
        deviceIdentifier:
          allOf:
          - $ref: '#/components/schemas/DeviceIdentifier'
          description: Information about the device identifier.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The device identifier tags.
    GetNetworkRequest:
      type: object
      properties:
        networkArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the network.
      required:
      - networkArn
    GetNetworkResourceRequest:
      type: object
      properties:
        networkResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the network resource.
      required:
      - networkResourceArn
    GetNetworkResourceResponse:
      type: object
      properties:
        networkResource:
          allOf:
          - $ref: '#/components/schemas/NetworkResource'
          description: Information about the network resource.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The network resource tags.
      required:
      - networkResource
    GetNetworkResponse:
      type: object
      properties:
        network:
          allOf:
          - $ref: '#/components/schemas/Network'
          description: Information about the network.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The network tags.
      required:
      - network
    GetNetworkSiteRequest:
      type: object
      properties:
        networkSiteArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the network site.
      required:
      - networkSiteArn
    GetNetworkSiteResponse:
      type: object
      properties:
        networkSite:
          allOf:
          - $ref: '#/components/schemas/NetworkSite'
          description: Information about the network site.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The network site tags.
    GetOrderRequest:
      type: object
      properties:
        orderArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the order.
      required:
      - orderArn
    GetOrderResponse:
      type: object
      properties:
        order:
          allOf:
          - $ref: '#/components/schemas/Order'
          description: Information about the order.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The order tags.
      required:
      - order
    HealthStatus:
      type: string
      enum:
      - INITIAL
      - HEALTHY
      - UNHEALTHY
    InternalServerException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Description of the error.
        retryAfterSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Advice to clients on when the call can be safely retried.
      required:
      - message
      description: Information about an internal error.
    LimitExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The limit was exceeded.
    ListDeviceIdentifiersRequest:
      type: object
      properties:
        filters:
          allOf:
          - $ref: '#/components/schemas/DeviceIdentifierFilters'
          description: "The filters.\n\n  * `ORDER` \\- The Amazon Resource Name (ARN)\
            \ of the order.\n\n  * `STATUS` \\- The status (`ACTIVE` | `INACTIVE`).\n\
            \n  * `TRAFFIC_GROUP` \\- The Amazon Resource Name (ARN) of the traffic\
            \ group.\n\nFilter values are case sensitive. If you specify multiple\
            \ values for a filter, the values are joined with an `OR`, and the request\
            \ returns all results that match any of the specified values."
        networkArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the network.
        startToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The token for the next page of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of results to return.
      required:
      - networkArn
    ListDeviceIdentifiersResponse:
      type: object
      properties:
        deviceIdentifiers:
          allOf:
          - $ref: '#/components/schemas/DeviceIdentifierList'
          description: Information about the device identifiers.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The token for the next page of results.
    ListNetworkResourcesRequest:
      type: object
      properties:
        filters:
          allOf:
          - $ref: '#/components/schemas/NetworkResourceFilters'
          description: "The filters.\n\n  * `ORDER` \\- The Amazon Resource Name (ARN)\
            \ of the order.\n\n  * `STATUS` \\- The status (`AVAILABLE` | `DELETED`\
            \ | `DELETING` | `PENDING` | `PENDING_RETURN` | `PROVISIONING` | `SHIPPED`).\n\
            \nFilter values are case sensitive. If you specify multiple values for\
            \ a filter, the values are joined with an `OR`, and the request returns\
            \ all results that match any of the specified values."
        networkArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the network.
        startToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The token for the next page of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of results to return.
      required:
      - networkArn
    ListNetworkResourcesResponse:
      type: object
      properties:
        networkResources:
          allOf:
          - $ref: '#/components/schemas/NetworkResourceList'
          description: Information about network resources.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The token for the next page of results.
    ListNetworkSitesRequest:
      type: object
      properties:
        filters:
          allOf:
          - $ref: '#/components/schemas/NetworkSiteFilters'
          description: "The filters. Add filters to your request to return a more\
            \ specific list of results. Use filters to match the status of the network\
            \ sites.\n\n  * `STATUS` \\- The status (`AVAILABLE` | `CREATED` | `DELETED`\
            \ | `DEPROVISIONING` | `PROVISIONING`).\n\nFilter values are case sensitive.\
            \ If you specify multiple values for a filter, the values are joined with\
            \ an `OR`, and the request returns all results that match any of the specified\
            \ values."
        networkArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the network.
        startToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The token for the next page of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of results to return.
      required:
      - networkArn
    ListNetworkSitesResponse:
      type: object
      properties:
        networkSites:
          allOf:
          - $ref: '#/components/schemas/NetworkSiteList'
          description: Information about the network sites.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The token for the next page of results.
    ListNetworksRequest:
      type: object
      properties:
        filters:
          allOf:
          - $ref: '#/components/schemas/NetworkFilters'
          description: "The filters.\n\n  * `STATUS` \\- The status (`AVAILABLE` |\
            \ `CREATED` | `DELETED` | `DEPROVISIONING` | `PROVISIONING`).\n\nFilter\
            \ values are case sensitive. If you specify multiple values for a filter,\
            \ the values are joined with an `OR`, and the request returns all results\
            \ that match any of the specified values."
        startToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The token for the next page of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of results to return.
    ListNetworksResponse:
      type: object
      properties:
        networks:
          allOf:
          - $ref: '#/components/schemas/NetworkList'
          description: The networks.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The token for the next page of results.
    ListOrdersRequest:
      type: object
      properties:
        networkArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the network.
        startToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The token for the next page of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of results to return.
        filters:
          allOf:
          - $ref: '#/components/schemas/OrderFilters'
          description: "The filters.\n\n  * `NETWORK_SITE` \\- The Amazon Resource\
            \ Name (ARN) of the network site.\n\n  * `STATUS` \\- The status (`ACKNOWLEDGING`\
            \ | `ACKNOWLEDGED` | `UNACKNOWLEDGED`).\n\nFilter values are case sensitive.\
            \ If you specify multiple values for a filter, the values are joined with\
            \ an `OR`, and the request returns all results that match any of the specified\
            \ values."
      required:
      - networkArn
    ListOrdersResponse:
      type: object
      properties:
        orders:
          allOf:
          - $ref: '#/components/schemas/OrderList'
          description: Information about the orders.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The token for the next page of results.
    ListTagsForResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource.
      required:
      - resourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The resource tags.
    Name:
      type: string
      pattern: ^[0-9a-zA-Z-]*$
      minLength: 1
      maxLength: 64
    NameValuePair:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the pair.
        value:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The value of the pair.
      required:
      - name
      description: Information about a name/value pair.
    NameValuePairs:
      type: array
      items:
        $ref: '#/components/schemas/NameValuePair'
    Network:
      type: object
      properties:
        networkArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the network.
        networkName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the network.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the network.
        status:
          allOf:
          - $ref: '#/components/schemas/NetworkStatus'
          description: The status of the network.
        statusReason:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status reason of the network.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The creation time of the network.
      required:
      - networkArn
      - networkName
      - status
      description: Information about a network.
    NetworkFilterKeys:
      type: string
      enum:
      - STATUS
    NetworkFilterValues:
      type: array
      items:
        type: string
    NetworkFilters:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/NetworkFilterValues'
    NetworkList:
      type: array
      items:
        $ref: '#/components/schemas/Network'
    NetworkResource:
      type: object
      properties:
        networkResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the network resource.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the network resource.
        type:
          allOf:
          - $ref: '#/components/schemas/NetworkResourceType'
          description: The type of the network resource.
        status:
          allOf:
          - $ref: '#/components/schemas/NetworkResourceStatus'
          description: The status of the network resource.
        statusReason:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status reason of the network resource.
        vendor:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The vendor of the network resource.
        model:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The model of the network resource.
        serialNumber:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The serial number of the network resource.
        health:
          allOf:
          - $ref: '#/components/schemas/HealthStatus'
          description: The health of the network resource.
        networkArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the network on which this
            network resource appears.
        networkSiteArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the network site on which
            this network resource appears.
        orderArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the order used to purchase
            this network resource.
        attributes:
          allOf:
          - $ref: '#/components/schemas/NameValuePairs'
          description: The attributes of the network resource.
        position:
          allOf:
          - $ref: '#/components/schemas/Position'
          description: The position of the network resource.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The creation time of the network resource.
        returnInformation:
          allOf:
          - $ref: '#/components/schemas/ReturnInformation'
          description: Information about a request to return the network resource.
        commitmentInformation:
          allOf:
          - $ref: '#/components/schemas/CommitmentInformation'
          description: Information about the commitment period for the radio unit.
            Shows the duration, the date and time that the contract started and ends,
            and the renewal status of the commitment period.
      description: Information about a network resource.
    NetworkResourceDefinition:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/NetworkResourceDefinitionType'
          description: The type in the network resource definition.
        options:
          allOf:
          - $ref: '#/components/schemas/Options'
          description: The options in the network resource definition.
        count:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The count in the network resource definition.
      required:
      - type
      - count
      description: Information about a network resource definition.
    NetworkResourceDefinitionType:
      type: string
      enum:
      - RADIO_UNIT
      - DEVICE_IDENTIFIER
    NetworkResourceDefinitions:
      type: array
      items:
        $ref: '#/components/schemas/NetworkResourceDefinition'
    NetworkResourceFilterKeys:
      type: string
      enum:
      - ORDER
      - STATUS
    NetworkResourceFilterValues:
      type: array
      items:
        type: string
    NetworkResourceFilters:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/NetworkResourceFilterValues'
    NetworkResourceList:
      type: array
      items:
        $ref: '#/components/schemas/NetworkResource'
    NetworkResourceStatus:
      type: string
      enum:
      - PENDING
      - SHIPPED
      - PROVISIONING
      - PROVISIONED
      - AVAILABLE
      - DELETING
      - PENDING_RETURN
      - DELETED
      - CREATING_SHIPPING_LABEL
    NetworkResourceType:
      type: string
      enum:
      - RADIO_UNIT
    NetworkSite:
      type: object
      properties:
        networkSiteArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the network site.
        networkSiteName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the network site.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the network site.
        status:
          allOf:
          - $ref: '#/components/schemas/NetworkSiteStatus'
          description: The status of the network site.
        statusReason:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status reason of the network site.
        networkArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the network to which the
            network site belongs.
        pendingPlan:
          allOf:
          - $ref: '#/components/schemas/SitePlan'
          description: The pending plan of the network site.
        currentPlan:
          allOf:
          - $ref: '#/components/schemas/SitePlan'
          description: The current plan of the network site.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The creation time of the network site.
        availabilityZone:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The parent Availability Zone for the network site.
        availabilityZoneId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The parent Availability Zone ID for the network site.
      required:
      - networkSiteArn
      - networkSiteName
      - status
      - networkArn
      description: Information about a network site.
    NetworkSiteFilterKeys:
      type: string
      enum:
      - STATUS
    NetworkSiteFilterValues:
      type: array
      items:
        type: string
    NetworkSiteFilters:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/NetworkSiteFilterValues'
    NetworkSiteList:
      type: array
      items:
        $ref: '#/components/schemas/NetworkSite'
    NetworkSiteStatus:
      type: string
      enum:
      - CREATED
      - PROVISIONING
      - AVAILABLE
      - DEPROVISIONING
      - DELETED
    NetworkStatus:
      type: string
      enum:
      - CREATED
      - PROVISIONING
      - AVAILABLE
      - DEPROVISIONING
      - DELETED
    Options:
      type: array
      items:
        $ref: '#/components/schemas/NameValuePair'
    Order:
      type: object
      properties:
        orderArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the order.
        shippingAddress:
          allOf:
          - $ref: '#/components/schemas/Address'
          description: The shipping address of the order.
        networkArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the network associated with
            this order.
        networkSiteArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the network site associated
            with this order.
        trackingInformation:
          allOf:
          - $ref: '#/components/schemas/TrackingInformationList'
          description: The tracking information of the order.
        acknowledgmentStatus:
          allOf:
          - $ref: '#/components/schemas/AcknowledgmentStatus'
          description: The acknowledgement status of the order.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The creation time of the order.
        orderedResources:
          allOf:
          - $ref: '#/components/schemas/OrderedResourceDefinitions'
          description: A list of the network resources placed in the order.
      description: Information about an order.
    OrderFilterKeys:
      type: string
      enum:
      - STATUS
      - NETWORK_SITE
    OrderFilterValues:
      type: array
      items:
        type: string
    OrderFilters:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/OrderFilterValues'
    OrderList:
      type: array
      items:
        $ref: '#/components/schemas/Order'
    OrderedResourceDefinition:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/NetworkResourceDefinitionType'
          description: The type of network resource in the order.
        count:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of network resources in the order.
        commitmentConfiguration:
          allOf:
          - $ref: '#/components/schemas/CommitmentConfiguration'
          description: The duration and renewal status of the commitment period for
            each radio unit in the order. Does not show details if the resource type
            is DEVICE_IDENTIFIER.
      required:
      - type
      - count
      description: Details of the network resources in the order.
    OrderedResourceDefinitions:
      type: array
      items:
        $ref: '#/components/schemas/OrderedResourceDefinition'
    PaginationToken:
      type: string
    PingResponse:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Information about the health of the service.
    Position:
      type: object
      properties:
        latitude:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The latitude of the position.
        longitude:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The longitude of the position.
        elevation:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The elevation of the equipment at this position.
        elevationUnit:
          allOf:
          - $ref: '#/components/schemas/ElevationUnit'
          description: The units used to measure the elevation of the position.
        elevationReference:
          allOf:
          - $ref: '#/components/schemas/ElevationReference'
          description: The reference point from which elevation is reported.
      description: Information about a position.
    ResourceNotFoundException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Description of the error.
        resourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Identifier of the affected resource.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Type of the affected resource.
      required:
      - message
      - resourceId
      - resourceType
      description: The resource was not found.
    ReturnInformation:
      type: object
      properties:
        shippingAddress:
          allOf:
          - $ref: '#/components/schemas/Address'
          description: The shipping address.
        returnReason:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The reason for the return. If the return request did not include
            a reason for the return, this value is null.
        replacementOrderArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the replacement order.
        shippingLabel:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The URL of the shipping label. The shipping label is available
            for download only if the status of the network resource is `PENDING_RETURN`.
            For more information, see [Return a radio unit](https://docs.aws.amazon.com/private-networks/latest/userguide/radio-units.html#return-radio-unit).
      description: Information about a request to return a network resource.
    SensitiveString:
      type: string
    SitePlan:
      type: object
      properties:
        resourceDefinitions:
          allOf:
          - $ref: '#/components/schemas/NetworkResourceDefinitions'
          description: The resource definitions of the plan.
        options:
          allOf:
          - $ref: '#/components/schemas/Options'
          description: The options of the plan.
      description: Information about a site plan.
    StartNetworkResourceUpdateRequest:
      type: object
      properties:
        networkResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the network resource.
        updateType:
          allOf:
          - $ref: '#/components/schemas/UpdateType'
          description: "The update type.\n\n  * `REPLACE` \\- Submits a request to\
            \ replace a defective radio unit. We provide a shipping label that you\
            \ can use for the return process and we ship a replacement radio unit\
            \ to you.\n\n  * `RETURN` \\- Submits a request to return a radio unit\
            \ that you no longer need. We provide a shipping label that you can use\
            \ for the return process.\n\n  * `COMMITMENT` \\- Submits a request to\
            \ change or renew the commitment period. If you choose this value, then\
            \ you must set [ `commitmentConfiguration` ](https://docs.aws.amazon.com/private-networks/latest/APIReference/API_StartNetworkResourceUpdate.html#privatenetworks-StartNetworkResourceUpdate-request-commitmentConfiguration)."
        shippingAddress:
          allOf:
          - $ref: '#/components/schemas/Address'
          description: The shipping address. If you don't provide a shipping address
            when replacing or returning a network resource, we use the address from
            the original order for the network resource.
        returnReason:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The reason for the return. Providing a reason for a return
            is optional.
        commitmentConfiguration:
          allOf:
          - $ref: '#/components/schemas/CommitmentConfiguration'
          description: "Use this action to extend and automatically renew the commitment\
            \ period for the radio unit. You can do the following:\n\n  * Change a\
            \ 60-day commitment to a 1-year or 3-year commitment. The change is immediate\
            \ and the hourly rate decreases to the rate for the new commitment period.\n\
            \n  * Change a 1-year commitment to a 3-year commitment. The change is\
            \ immediate and the hourly rate decreases to the rate for the 3-year commitment\
            \ period.\n\n  * Set a 1-year commitment to automatically renew for an\
            \ additional 1 year. The hourly rate for the additional year will continue\
            \ to be the same as your existing 1-year rate.\n\n  * Set a 3-year commitment\
            \ to automatically renew for an additional 1 year. The hourly rate for\
            \ the additional year will continue to be the same as your existing 3-year\
            \ rate.\n\n  * Turn off a previously-enabled automatic renewal on a 1-year\
            \ or 3-year commitment. You cannot use the automatic-renewal option for\
            \ a 60-day commitment.\n\nFor pricing, see [Amazon Web Services Private\
            \ 5G Pricing](http://aws.amazon.com/private5g/pricing)."
      required:
      - networkResourceArn
      - updateType
    StartNetworkResourceUpdateResponse:
      type: object
      properties:
        networkResource:
          allOf:
          - $ref: '#/components/schemas/NetworkResource'
          description: The network resource.
    TagKey:
      type: string
      pattern: ^(?!aws:)[^\x00-\x1f\x22]+$
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      x-sensitive: true
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags to add to the resource.
      required:
      - resourceArn
      - tags
    TagResourceResponse:
      type: object
      properties: {}
    TagValue:
      type: string
      pattern: ^[^\x00-\x1f\x22]*$
      minLength: 0
      maxLength: 256
    ThrottlingException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: The request was denied due to request throttling.
    Timestamp:
      type: string
      format: date-time
    TrackingInformation:
      type: object
      properties:
        trackingNumber:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The tracking number of the shipment.
      description: Information about tracking a shipment.
    TrackingInformationList:
      type: array
      items:
        $ref: '#/components/schemas/TrackingInformation'
    UntagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource.
        tagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: The tag keys.
      required:
      - resourceArn
      - tagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateNetworkSitePlanRequest:
      type: object
      properties:
        networkSiteArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the network site.
        pendingPlan:
          allOf:
          - $ref: '#/components/schemas/SitePlan'
          description: The pending plan.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: Unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. For more information, see [How to ensure
            idempotency](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html).
      required:
      - networkSiteArn
      - pendingPlan
    UpdateNetworkSiteRequest:
      type: object
      properties:
        networkSiteArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the network site.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: Unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. For more information, see [How to ensure
            idempotency](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html).
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description.
      required:
      - networkSiteArn
    UpdateNetworkSiteResponse:
      type: object
      properties:
        networkSite:
          allOf:
          - $ref: '#/components/schemas/NetworkSite'
          description: Information about the network site.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The network site tags.
    UpdateType:
      type: string
      enum:
      - REPLACE
      - RETURN
      - COMMITMENT
    ValidationException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Description of the error.
        reason:
          allOf:
          - $ref: '#/components/schemas/ValidationExceptionReason'
          description: Reason the request failed validation.
        fieldList:
          allOf:
          - $ref: '#/components/schemas/ValidationExceptionFieldList'
          description: The list of fields that caused the error, if applicable.
      required:
      - message
      - reason
      description: The request failed validation.
    ValidationExceptionField:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The field name that failed validation.
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The message about the validation failure.
      required:
      - name
      - message
      description: Information about a field that failed validation.
    ValidationExceptionFieldList:
      type: array
      items:
        $ref: '#/components/schemas/ValidationExceptionField'
    ValidationExceptionReason:
      type: string
      enum:
      - UNKNOWN_OPERATION
      - CANNOT_PARSE
      - CANNOT_ASSUME_ROLE
      - FIELD_VALIDATION_FAILED
      - OTHER
