openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: kinesis_video_webrtc_storage
  x-aws-serviceName: kinesisvideowebrtcstorage
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2018-05-10'
  title: Amazon Kinesis Video WebRTC Storage
  description: |-
    webrtc
servers:
- description: The Amazon Kinesis Video WebRTC Storage regional endpoint
  url: https://kinesisvideo.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /joinStorageSession:
    post:
      operationId: JoinStorageSession
      description: |-
        Before using this API, you must call the `GetSignalingChannelEndpoint` API to request the WEBRTC endpoint. You then specify the endpoint and region in your `JoinStorageSession` API request.

        Join the ongoing one way-video and/or multi-way audio WebRTC session as a video producing device for an input channel. If there’s no existing session for the channel, a new streaming session needs to be created, and the Amazon Resource Name (ARN) of the signaling channel must be provided.

        Currently for the `SINGLE_MASTER` type, a video producing device is able to ingest both audio and video media into a stream. Only video producing devices can join the session and record media.

        Both audio and video tracks are currently required for WebRTC ingestion.

        Current requirements:

          * Video track: H.264

          * Audio track: Opus

        The resulting ingested video in the Kinesis video stream will have the following parameters: H.264 video and AAC audio.

        Once a master participant has negotiated a connection through WebRTC, the ingested media session will be stored in the Kinesis video stream. Multiple viewers are then able to play back real-time media through our Playback APIs.

        You can also use existing Kinesis Video Streams features like `HLS` or `DASH` playback, image generation via [GetImages](https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/gs-getImages.html), and more with ingested WebRTC media.

        S3 image delivery and notifications are not currently supported.

        Assume that only one video producing device client can be associated with a session for the channel. If more than one client joins the session of a specific channel as a video producing device, the most recent client request takes precedence.

        **Additional information**

          * **Idempotent** \- This API is not idempotent.

          * **Retry behavior** \- This is counted as a new API call.

          * **Concurrent calls** \- Concurrent calls are allowed. An offer is sent once per each call.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                channelArn:
                  $ref: '#/components/schemas/ChannelArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have required permissions to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            The value for this input parameter is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
        '404':
          description: |-
            The specified resource is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /joinStorageSessionAsViewer:
    post:
      operationId: JoinStorageSessionAsViewer
      description: |-
        Join the ongoing one way-video and/or multi-way audio WebRTC session as a viewer for an input channel. If there’s no existing session for the channel, create a new streaming session and provide the Amazon Resource Name (ARN) of the signaling channel (`channelArn`) and client id (`clientId`).

        Currently for `SINGLE_MASTER` type, a video producing device is able to ingest both audio and video media into a stream, while viewers can only ingest audio. Both a video producing device and viewers can join a session first and wait for other participants. While participants are having peer to peer conversations through WebRTC, the ingested media session will be stored into the Kinesis Video Stream. Multiple viewers are able to playback real-time media.

        Customers can also use existing Kinesis Video Streams features like `HLS` or `DASH` playback, Image generation, and more with ingested WebRTC media. If there’s an existing session with the same `clientId` that's found in the join session request, the new request takes precedence.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                channelArn:
                  $ref: '#/components/schemas/ChannelArn'
                clientId:
                  $ref: '#/components/schemas/ClientId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have required permissions to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            The value for this input parameter is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
        '404':
          description: |-
            The specified resource is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
components:
  schemas:
    AccessDeniedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: You do not have required permissions to perform this operation.
    ChannelArn:
      type: string
      pattern: ^arn:(aws[a-zA-Z-]*):kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+$
    ClientId:
      type: string
      pattern: ^[a-zA-Z0-9_.-]+$
      minLength: 1
      maxLength: 256
    ClientLimitExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: Kinesis Video Streams has throttled the request because you have
        exceeded the limit of allowed client calls. Try making the call later.
    InvalidArgumentException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: The value for this input parameter is invalid.
    JoinStorageSessionAsViewerInput:
      type: object
      properties:
        channelArn:
          allOf:
          - $ref: '#/components/schemas/ChannelArn'
          description: The Amazon Resource Name (ARN) of the signaling channel.
        clientId:
          allOf:
          - $ref: '#/components/schemas/ClientId'
          description: The unique identifier for the sender client.
      required:
      - channelArn
      - clientId
    JoinStorageSessionInput:
      type: object
      properties:
        channelArn:
          allOf:
          - $ref: '#/components/schemas/ChannelArn'
          description: The Amazon Resource Name (ARN) of the signaling channel.
      required:
      - channelArn
    ResourceNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: The specified resource is not found.
