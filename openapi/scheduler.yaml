openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: scheduler
  x-aws-serviceName: scheduler
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2021-06-30'
  title: Amazon EventBridge Scheduler
  description: |-
    Amazon EventBridge Scheduler is a serverless scheduler that allows you to create, run, and manage tasks from one central, managed service. EventBridge Scheduler delivers your tasks reliably, with built-in mechanisms that adjust your schedules based on the availability of downstream targets. The following reference lists the available API actions, and data types for EventBridge Scheduler.
servers:
- description: The Amazon EventBridge Scheduler regional endpoint
  url: https://scheduler.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /schedules/{Name}:
    post:
      operationId: CreateSchedule
      description: |-
        Creates the specified schedule.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Name'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                GroupName:
                  $ref: '#/components/schemas/ScheduleGroupName'
                ScheduleExpression:
                  $ref: '#/components/schemas/ScheduleExpression'
                StartDate:
                  $ref: '#/components/schemas/StartDate'
                EndDate:
                  $ref: '#/components/schemas/EndDate'
                Description:
                  $ref: '#/components/schemas/Description'
                ScheduleExpressionTimezone:
                  $ref: '#/components/schemas/ScheduleExpressionTimezone'
                State:
                  $ref: '#/components/schemas/ScheduleState'
                KmsKeyArn:
                  $ref: '#/components/schemas/KmsKeyArn'
                Target:
                  $ref: '#/components/schemas/Target'
                FlexibleTimeWindow:
                  $ref: '#/components/schemas/FlexibleTimeWindow'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
                ActionAfterCompletion:
                  $ref: '#/components/schemas/ActionAfterCompletion'
      responses:
        '200': {}
        '409':
          description: |-
            Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Unexpected error encountered while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The request exceeds a service quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: DeleteSchedule
      description: |-
        Deletes the specified schedule.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Name'
      - name: groupName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ScheduleGroupName'
      - name: clientToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '409':
          description: |-
            Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Unexpected error encountered while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetSchedule
      description: |-
        Retrieves the specified schedule.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Name'
      - name: groupName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ScheduleGroupName'
      responses:
        '200': {}
        '500':
          description: |-
            Unexpected error encountered while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: UpdateSchedule
      description: |-
        Updates the specified schedule. When you call `UpdateSchedule`, EventBridge Scheduler uses all values, including empty values, specified in the request and overrides the existing schedule. This is by design. This means that if you do not set an optional field in your request, that field will be set to its system-default value after the update.

        Before calling this operation, we recommend that you call the `GetSchedule` API operation and make a note of all optional parameters for your `UpdateSchedule` call.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Name'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                GroupName:
                  $ref: '#/components/schemas/ScheduleGroupName'
                ScheduleExpression:
                  $ref: '#/components/schemas/ScheduleExpression'
                StartDate:
                  $ref: '#/components/schemas/StartDate'
                EndDate:
                  $ref: '#/components/schemas/EndDate'
                Description:
                  $ref: '#/components/schemas/Description'
                ScheduleExpressionTimezone:
                  $ref: '#/components/schemas/ScheduleExpressionTimezone'
                State:
                  $ref: '#/components/schemas/ScheduleState'
                KmsKeyArn:
                  $ref: '#/components/schemas/KmsKeyArn'
                Target:
                  $ref: '#/components/schemas/Target'
                FlexibleTimeWindow:
                  $ref: '#/components/schemas/FlexibleTimeWindow'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
                ActionAfterCompletion:
                  $ref: '#/components/schemas/ActionAfterCompletion'
      responses:
        '200': {}
        '409':
          description: |-
            Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Unexpected error encountered while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /schedule-groups/{Name}:
    post:
      operationId: CreateScheduleGroup
      description: |-
        Creates the specified schedule group.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ScheduleGroupName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Tags:
                  $ref: '#/components/schemas/TagList'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '409':
          description: |-
            Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Unexpected error encountered while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            The request exceeds a service quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: DeleteScheduleGroup
      description: |-
        Deletes the specified schedule group. Deleting a schedule group results in EventBridge Scheduler deleting all schedules associated with the group. When you delete a group, it remains in a `DELETING` state until all of its associated schedules are deleted. Schedules associated with the group that are set to run while the schedule group is in the process of being deleted might continue to invoke their targets until the schedule group and its associated schedules are deleted.

        This operation is eventually consistent.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ScheduleGroupName'
      - name: clientToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '409':
          description: |-
            Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Unexpected error encountered while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetScheduleGroup
      description: |-
        Retrieves the specified schedule group.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ScheduleGroupName'
      responses:
        '200': {}
        '500':
          description: |-
            Unexpected error encountered while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /schedule-groups:
    get:
      operationId: ListScheduleGroups
      description: |-
        Returns a paginated list of your schedule groups.
      parameters:
      - name: NamePrefix
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ScheduleGroupNamePrefix'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            Unexpected error encountered while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /schedules:
    get:
      operationId: ListSchedules
      description: |-
        Returns a paginated list of your EventBridge Scheduler schedules.
      parameters:
      - name: ScheduleGroup
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ScheduleGroupName'
      - name: NamePrefix
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NamePrefix'
      - name: State
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ScheduleState'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            Unexpected error encountered while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tags/{ResourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Lists the tags associated with the Scheduler resource.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TagResourceArn'
      responses:
        '200': {}
        '500':
          description: |-
            Unexpected error encountered while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: TagResource
      description: |-
        Assigns one or more tags (key-value pairs) to the specified EventBridge Scheduler resource. You can only assign tags to schedule groups.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TagResourceArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '409':
          description: |-
            Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Unexpected error encountered while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: UntagResource
      description: |-
        Removes one or more tags from the specified EventBridge Scheduler schedule group.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TagResourceArn'
      - name: TagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeyList'
      responses:
        '200': {}
        '409':
          description: |-
            Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Unexpected error encountered while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    ActionAfterCompletion:
      type: string
      enum:
      - NONE
      - DELETE
    AssignPublicIp:
      type: string
      enum:
      - ENABLED
      - DISABLED
    AwsVpcConfiguration:
      type: object
      properties:
        Subnets:
          allOf:
          - $ref: '#/components/schemas/Subnets'
          description: Specifies the subnets associated with the task. These subnets
            must all be in the same VPC. You can specify as many as 16 subnets.
        SecurityGroups:
          allOf:
          - $ref: '#/components/schemas/SecurityGroups'
          description: Specifies the security groups associated with the task. These
            security groups must all be in the same VPC. You can specify as many as
            five security groups. If you do not specify a security group, the default
            security group for the VPC is used.
        AssignPublicIp:
          allOf:
          - $ref: '#/components/schemas/AssignPublicIp'
          description: Specifies whether the task's elastic network interface receives
            a public IP address. You can specify `ENABLED` only when `LaunchType`
            in `EcsParameters` is set to `FARGATE`.
      required:
      - Subnets
      description: This structure specifies the VPC subnets and security groups for
        the task, and whether a public IP address is to be used. This structure is
        relevant only for ECS tasks that use the awsvpc network mode.
    CapacityProvider:
      type: string
      minLength: 1
      maxLength: 255
    CapacityProviderStrategy:
      type: array
      items:
        $ref: '#/components/schemas/CapacityProviderStrategyItem'
    CapacityProviderStrategyItem:
      type: object
      properties:
        capacityProvider:
          allOf:
          - $ref: '#/components/schemas/CapacityProvider'
          description: The short name of the capacity provider.
        weight:
          allOf:
          - $ref: '#/components/schemas/CapacityProviderStrategyItemWeight'
          description: The weight value designates the relative percentage of the
            total number of tasks launched that should use the specified capacity
            provider. The weight value is taken into consideration after the base
            value, if defined, is satisfied.
        base:
          allOf:
          - $ref: '#/components/schemas/CapacityProviderStrategyItemBase'
          description: The base value designates how many tasks, at a minimum, to
            run on the specified capacity provider. Only one capacity provider in
            a capacity provider strategy can have a base defined. If no value is specified,
            the default value of `0` is used.
      required:
      - capacityProvider
      description: The details of a capacity provider strategy.
    CapacityProviderStrategyItemBase:
      type: integer
      default: 0
      minimum: 0
      maximum: 100000
    CapacityProviderStrategyItemWeight:
      type: integer
      default: 0
      minimum: 0
      maximum: 1000
    ClientToken:
      type: string
      pattern: ^[a-zA-Z0-9-_]+$
      minLength: 1
      maxLength: 64
    ConflictException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      required:
      - Message
      description: Updating or deleting the resource can cause an inconsistent state.
    CreateScheduleGroupInput:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ScheduleGroupName'
          description: The name of the schedule group that you are creating.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The list of tags to associate with the schedule group.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: Unique, case-sensitive identifier you provide to ensure the
            idempotency of the request. If you do not specify a client token, EventBridge
            Scheduler uses a randomly generated token for the request to ensure idempotency.
      required:
      - Name
    CreateScheduleGroupOutput:
      type: object
      properties:
        ScheduleGroupArn:
          allOf:
          - $ref: '#/components/schemas/ScheduleGroupArn'
          description: The Amazon Resource Name (ARN) of the schedule group.
      required:
      - ScheduleGroupArn
    CreateScheduleInput:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the schedule that you are creating.
        GroupName:
          allOf:
          - $ref: '#/components/schemas/ScheduleGroupName'
          description: The name of the schedule group to associate with this schedule.
            If you omit this, the default schedule group is used.
        ScheduleExpression:
          allOf:
          - $ref: '#/components/schemas/ScheduleExpression'
          description: "The expression that defines when the schedule runs. The following\
            \ formats are supported.\n\n  * `at` expression - `at(yyyy-mm-ddThh:mm:ss)`\n\
            \n  * `rate` expression - `rate(value unit)`\n\n  * `cron` expression\
            \ - `cron(fields)`\n\nYou can use `at` expressions to create one-time\
            \ schedules that invoke a target once, at the time and in the time zone,\
            \ that you specify. You can use `rate` and `cron` expressions to create\
            \ recurring schedules. Rate-based schedules are useful when you want to\
            \ invoke a target at regular intervals, such as every 15 minutes or every\
            \ five days. Cron-based schedules are useful when you want to invoke a\
            \ target periodically at a specific time, such as at 8:00 am (UTC+0) every\
            \ 1st day of the month.\n\nA `cron` expression consists of six fields\
            \ separated by white spaces: `(minutes hours day_of_month month day_of_week\
            \ year)`.\n\nA `rate` expression consists of a _value_ as a positive integer,\
            \ and a _unit_ with the following options: `minute` | `minutes` | `hour`\
            \ | `hours` | `day` | `days`\n\nFor more information and examples, see\
            \ [Schedule types on EventBridge Scheduler](https://docs.aws.amazon.com/scheduler/latest/UserGuide/schedule-types.html)\
            \ in the _EventBridge Scheduler User Guide_."
        StartDate:
          allOf:
          - $ref: '#/components/schemas/StartDate'
          description: The date, in UTC, after which the schedule can begin invoking
            its target. Depending on the schedule's recurrence expression, invocations
            might occur on, or after, the `StartDate` you specify. EventBridge Scheduler
            ignores `StartDate` for one-time schedules.
        EndDate:
          allOf:
          - $ref: '#/components/schemas/EndDate'
          description: The date, in UTC, before which the schedule can invoke its
            target. Depending on the schedule's recurrence expression, invocations
            might stop on, or before, the `EndDate` you specify. EventBridge Scheduler
            ignores `EndDate` for one-time schedules.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description you specify for the schedule.
        ScheduleExpressionTimezone:
          allOf:
          - $ref: '#/components/schemas/ScheduleExpressionTimezone'
          description: The timezone in which the scheduling expression is evaluated.
        State:
          allOf:
          - $ref: '#/components/schemas/ScheduleState'
          description: Specifies whether the schedule is enabled or disabled.
        KmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          description: The Amazon Resource Name (ARN) for the customer managed KMS
            key that EventBridge Scheduler will use to encrypt and decrypt your data.
        Target:
          allOf:
          - $ref: '#/components/schemas/Target'
          description: The schedule's target.
        FlexibleTimeWindow:
          allOf:
          - $ref: '#/components/schemas/FlexibleTimeWindow'
          description: Allows you to configure a time window during which EventBridge
            Scheduler invokes the schedule.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: Unique, case-sensitive identifier you provide to ensure the
            idempotency of the request. If you do not specify a client token, EventBridge
            Scheduler uses a randomly generated token for the request to ensure idempotency.
        ActionAfterCompletion:
          allOf:
          - $ref: '#/components/schemas/ActionAfterCompletion'
          description: Specifies the action that EventBridge Scheduler applies to
            the schedule after the schedule completes invoking the target.
      required:
      - Name
      - ScheduleExpression
      - Target
      - FlexibleTimeWindow
    CreateScheduleOutput:
      type: object
      properties:
        ScheduleArn:
          allOf:
          - $ref: '#/components/schemas/ScheduleArn'
          description: The Amazon Resource Name (ARN) of the schedule.
      required:
      - ScheduleArn
    CreationDate:
      type: string
      format: date-time
    DeadLetterConfig:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The Amazon Resource Name (ARN) of the SQS queue specified as
            the destination for the dead-letter queue.
      description: An object that contains information about an Amazon SQS queue that
        EventBridge Scheduler uses as a dead-letter queue for your schedule. If specified,
        EventBridge Scheduler delivers failed events that could not be successfully
        delivered to a target to the queue.
    DeleteScheduleGroupInput:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ScheduleGroupName'
          description: The name of the schedule group to delete.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: Unique, case-sensitive identifier you provide to ensure the
            idempotency of the request. If you do not specify a client token, EventBridge
            Scheduler uses a randomly generated token for the request to ensure idempotency.
      required:
      - Name
    DeleteScheduleGroupOutput:
      type: object
      properties: {}
    DeleteScheduleInput:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the schedule to delete.
        GroupName:
          allOf:
          - $ref: '#/components/schemas/ScheduleGroupName'
          description: The name of the schedule group associated with this schedule.
            If you omit this, the default schedule group is used.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: Unique, case-sensitive identifier you provide to ensure the
            idempotency of the request. If you do not specify a client token, EventBridge
            Scheduler uses a randomly generated token for the request to ensure idempotency.
      required:
      - Name
    DeleteScheduleOutput:
      type: object
      properties: {}
    Description:
      type: string
      minLength: 0
      maxLength: 512
    DetailType:
      type: string
      minLength: 1
      maxLength: 128
    EcsParameters:
      type: object
      properties:
        TaskDefinitionArn:
          allOf:
          - $ref: '#/components/schemas/TaskDefinitionArn'
          description: The Amazon Resource Name (ARN) of the task definition to use
            if the event target is an Amazon ECS task.
        TaskCount:
          allOf:
          - $ref: '#/components/schemas/TaskCount'
          description: The number of tasks to create based on `TaskDefinition`. The
            default is `1`.
        LaunchType:
          allOf:
          - $ref: '#/components/schemas/LaunchType'
          description: Specifies the launch type on which your task is running. The
            launch type that you specify here must match one of the launch type (compatibilities)
            of the target task. The `FARGATE` value is supported only in the Regions
            where Fargate with Amazon ECS is supported. For more information, see
            [AWS Fargate on Amazon ECS](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/AWS_Fargate.html)
            in the _Amazon ECS Developer Guide_.
        NetworkConfiguration:
          allOf:
          - $ref: '#/components/schemas/NetworkConfiguration'
          description: This structure specifies the network configuration for an ECS
            task.
        PlatformVersion:
          allOf:
          - $ref: '#/components/schemas/PlatformVersion'
          description: Specifies the platform version for the task. Specify only the
            numeric portion of the platform version, such as `1.1.0`.
        Group:
          allOf:
          - $ref: '#/components/schemas/Group'
          description: Specifies an ECS task group for the task. The maximum length
            is 255 characters.
        CapacityProviderStrategy:
          allOf:
          - $ref: '#/components/schemas/CapacityProviderStrategy'
          description: The capacity provider strategy to use for the task.
        EnableECSManagedTags:
          allOf:
          - $ref: '#/components/schemas/EnableECSManagedTags'
          description: Specifies whether to enable Amazon ECS managed tags for the
            task. For more information, see [Tagging Your Amazon ECS Resources](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-using-tags.html)
            in the _Amazon ECS Developer Guide_.
        EnableExecuteCommand:
          allOf:
          - $ref: '#/components/schemas/EnableExecuteCommand'
          description: Whether or not to enable the execute command functionality
            for the containers in this task. If true, this enables execute command
            functionality on all containers in the task.
        PlacementConstraints:
          allOf:
          - $ref: '#/components/schemas/PlacementConstraints'
          description: An array of placement constraint objects to use for the task.
            You can specify up to 10 constraints per task (including constraints in
            the task definition and those specified at runtime).
        PlacementStrategy:
          allOf:
          - $ref: '#/components/schemas/PlacementStrategies'
          description: The task placement strategy for a task or service.
        PropagateTags:
          allOf:
          - $ref: '#/components/schemas/PropagateTags'
          description: Specifies whether to propagate the tags from the task definition
            to the task. If no value is specified, the tags are not propagated. Tags
            can only be propagated to the task during task creation. To add tags to
            a task after task creation, use Amazon ECS's [ `TagResource` ](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_TagResource.html)
            API action.
        ReferenceId:
          allOf:
          - $ref: '#/components/schemas/ReferenceId'
          description: The reference ID to use for the task.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The metadata that you apply to the task to help you categorize
            and organize them. Each tag consists of a key and an optional value, both
            of which you define. For more information, see [ `RunTask` ](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_RunTask.html)
            in the _Amazon ECS API Reference_.
      required:
      - TaskDefinitionArn
      description: The templated target type for the Amazon ECS [ `RunTask` ](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_RunTask.html)
        API operation.
    EnableECSManagedTags:
      type: boolean
    EnableExecuteCommand:
      type: boolean
    EndDate:
      type: string
      format: date-time
    EventBridgeParameters:
      type: object
      properties:
        DetailType:
          allOf:
          - $ref: '#/components/schemas/DetailType'
          description: A free-form string, with a maximum of 128 characters, used
            to decide what fields to expect in the event detail.
        Source:
          allOf:
          - $ref: '#/components/schemas/Source'
          description: The source of the event.
      required:
      - DetailType
      - Source
      description: The templated target type for the EventBridge [ `PutEvents` ](https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_PutEvents.html)
        API operation.
    FlexibleTimeWindow:
      type: object
      properties:
        Mode:
          allOf:
          - $ref: '#/components/schemas/FlexibleTimeWindowMode'
          description: Determines whether the schedule is invoked within a flexible
            time window.
        MaximumWindowInMinutes:
          allOf:
          - $ref: '#/components/schemas/MaximumWindowInMinutes'
          description: The maximum time window during which a schedule can be invoked.
      required:
      - Mode
      description: Allows you to configure a time window during which EventBridge
        Scheduler invokes the schedule.
    FlexibleTimeWindowMode:
      type: string
      enum:
      - 'OFF'
      - FLEXIBLE
    GetScheduleGroupInput:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ScheduleGroupName'
          description: The name of the schedule group to retrieve.
      required:
      - Name
    GetScheduleGroupOutput:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/ScheduleGroupArn'
          description: The Amazon Resource Name (ARN) of the schedule group.
        Name:
          allOf:
          - $ref: '#/components/schemas/ScheduleGroupName'
          description: The name of the schedule group.
        State:
          allOf:
          - $ref: '#/components/schemas/ScheduleGroupState'
          description: Specifies the state of the schedule group.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/CreationDate'
          description: The time at which the schedule group was created.
        LastModificationDate:
          allOf:
          - $ref: '#/components/schemas/LastModificationDate'
          description: The time at which the schedule group was last modified.
    GetScheduleInput:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the schedule to retrieve.
        GroupName:
          allOf:
          - $ref: '#/components/schemas/ScheduleGroupName'
          description: The name of the schedule group associated with this schedule.
            If you omit this, EventBridge Scheduler assumes that the schedule is associated
            with the default group.
      required:
      - Name
    GetScheduleOutput:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/ScheduleArn'
          description: The Amazon Resource Name (ARN) of the schedule.
        GroupName:
          allOf:
          - $ref: '#/components/schemas/ScheduleGroupName'
          description: The name of the schedule group associated with this schedule.
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the schedule.
        ScheduleExpression:
          allOf:
          - $ref: '#/components/schemas/ScheduleExpression'
          description: "The expression that defines when the schedule runs. The following\
            \ formats are supported.\n\n  * `at` expression - `at(yyyy-mm-ddThh:mm:ss)`\n\
            \n  * `rate` expression - `rate(value unit)`\n\n  * `cron` expression\
            \ - `cron(fields)`\n\nYou can use `at` expressions to create one-time\
            \ schedules that invoke a target once, at the time and in the time zone,\
            \ that you specify. You can use `rate` and `cron` expressions to create\
            \ recurring schedules. Rate-based schedules are useful when you want to\
            \ invoke a target at regular intervals, such as every 15 minutes or every\
            \ five days. Cron-based schedules are useful when you want to invoke a\
            \ target periodically at a specific time, such as at 8:00 am (UTC+0) every\
            \ 1st day of the month.\n\nA `cron` expression consists of six fields\
            \ separated by white spaces: `(minutes hours day_of_month month day_of_week\
            \ year)`.\n\nA `rate` expression consists of a _value_ as a positive integer,\
            \ and a _unit_ with the following options: `minute` | `minutes` | `hour`\
            \ | `hours` | `day` | `days`\n\nFor more information and examples, see\
            \ [Schedule types on EventBridge Scheduler](https://docs.aws.amazon.com/scheduler/latest/UserGuide/schedule-types.html)\
            \ in the _EventBridge Scheduler User Guide_."
        StartDate:
          allOf:
          - $ref: '#/components/schemas/StartDate'
          description: The date, in UTC, after which the schedule can begin invoking
            its target. Depending on the schedule's recurrence expression, invocations
            might occur on, or after, the `StartDate` you specify. EventBridge Scheduler
            ignores `StartDate` for one-time schedules.
        EndDate:
          allOf:
          - $ref: '#/components/schemas/EndDate'
          description: The date, in UTC, before which the schedule can invoke its
            target. Depending on the schedule's recurrence expression, invocations
            might stop on, or before, the `EndDate` you specify. EventBridge Scheduler
            ignores `EndDate` for one-time schedules.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the schedule.
        ScheduleExpressionTimezone:
          allOf:
          - $ref: '#/components/schemas/ScheduleExpressionTimezone'
          description: The timezone in which the scheduling expression is evaluated.
        State:
          allOf:
          - $ref: '#/components/schemas/ScheduleState'
          description: Specifies whether the schedule is enabled or disabled.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/CreationDate'
          description: The time at which the schedule was created.
        LastModificationDate:
          allOf:
          - $ref: '#/components/schemas/LastModificationDate'
          description: The time at which the schedule was last modified.
        KmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          description: The ARN for a customer managed KMS Key that is be used to encrypt
            and decrypt your data.
        Target:
          allOf:
          - $ref: '#/components/schemas/Target'
          description: The schedule target.
        FlexibleTimeWindow:
          allOf:
          - $ref: '#/components/schemas/FlexibleTimeWindow'
          description: Allows you to configure a time window during which EventBridge
            Scheduler invokes the schedule.
        ActionAfterCompletion:
          allOf:
          - $ref: '#/components/schemas/ActionAfterCompletion'
          description: Indicates the action that EventBridge Scheduler applies to
            the schedule after the schedule completes invoking the target.
    Group:
      type: string
      minLength: 1
      maxLength: 255
    InternalServerException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      required:
      - Message
      description: Unexpected error encountered while processing the request.
    KinesisParameters:
      type: object
      properties:
        PartitionKey:
          allOf:
          - $ref: '#/components/schemas/TargetPartitionKey'
          description: Specifies the shard to which EventBridge Scheduler sends the
            event. For more information, see [Amazon Kinesis Data Streams terminology
            and concepts](https://docs.aws.amazon.com/streams/latest/dev/key-concepts.html)
            in the _Amazon Kinesis Streams Developer Guide_.
      required:
      - PartitionKey
      description: The templated target type for the Amazon Kinesis [ `PutRecord`
        ](kinesis/latest/APIReference/API_PutRecord.html) API operation.
    KmsKeyArn:
      type: string
      pattern: ^arn:aws(-[a-z]+)?:kms:[a-z0-9\-]+:\d{12}:(key|alias)\/[0-9a-zA-Z-_]*$
      minLength: 1
      maxLength: 2048
    LastModificationDate:
      type: string
      format: date-time
    LaunchType:
      type: string
      enum:
      - EC2
      - FARGATE
      - EXTERNAL
    ListScheduleGroupsInput:
      type: object
      properties:
        NamePrefix:
          allOf:
          - $ref: '#/components/schemas/ScheduleGroupNamePrefix'
          description: The name prefix that you can use to return a filtered list
            of your schedule groups.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token returned by a previous call to retrieve the next
            set of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: If specified, limits the number of results returned by this
            operation. The operation also returns a `NextToken` which you can use
            in a subsequent operation to retrieve the next set of results.
    ListScheduleGroupsOutput:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Indicates whether there are additional results to retrieve.
            If the value is null, there are no more results.
        ScheduleGroups:
          allOf:
          - $ref: '#/components/schemas/ScheduleGroupList'
          description: The schedule groups that match the specified criteria.
      required:
      - ScheduleGroups
    ListSchedulesInput:
      type: object
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/ScheduleGroupName'
          description: If specified, only lists the schedules whose associated schedule
            group matches the given filter.
        NamePrefix:
          allOf:
          - $ref: '#/components/schemas/NamePrefix'
          description: Schedule name prefix to return the filtered list of resources.
        State:
          allOf:
          - $ref: '#/components/schemas/ScheduleState'
          description: If specified, only lists the schedules whose current state
            matches the given filter.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token returned by a previous call to retrieve the next
            set of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: If specified, limits the number of results returned by this
            operation. The operation also returns a `NextToken` which you can use
            in a subsequent operation to retrieve the next set of results.
    ListSchedulesOutput:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Indicates whether there are additional results to retrieve.
            If the value is null, there are no more results.
        Schedules:
          allOf:
          - $ref: '#/components/schemas/ScheduleList'
          description: The schedules that match the specified criteria.
      required:
      - Schedules
    ListTagsForResourceInput:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/TagResourceArn'
          description: The ARN of the EventBridge Scheduler resource for which you
            want to view tags.
      required:
      - ResourceArn
    ListTagsForResourceOutput:
      type: object
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The list of tags associated with the specified resource.
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    MaximumEventAgeInSeconds:
      type: integer
      minimum: 60
      maximum: 86400
    MaximumRetryAttempts:
      type: integer
      minimum: 0
      maximum: 185
    MaximumWindowInMinutes:
      type: integer
      minimum: 1
      maximum: 1440
    MessageGroupId:
      type: string
      minLength: 1
      maxLength: 128
    Name:
      type: string
      pattern: ^[0-9a-zA-Z-_.]+$
      minLength: 1
      maxLength: 64
    NamePrefix:
      type: string
      pattern: ^[0-9a-zA-Z-_.]+$
      minLength: 1
      maxLength: 64
    NetworkConfiguration:
      type: object
      properties:
        awsvpcConfiguration:
          allOf:
          - $ref: '#/components/schemas/AwsVpcConfiguration'
          description: Specifies the Amazon VPC subnets and security groups for the
            task, and whether a public IP address is to be used. This structure is
            relevant only for ECS tasks that use the awsvpc network mode.
      description: Specifies the network configuration for an ECS task.
    NextToken:
      type: string
      minLength: 1
      maxLength: 2048
    PlacementConstraint:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/PlacementConstraintType'
          description: The type of constraint. Use `distinctInstance` to ensure that
            each task in a particular group is running on a different container instance.
            Use `memberOf` to restrict the selection to a group of valid candidates.
        expression:
          allOf:
          - $ref: '#/components/schemas/PlacementConstraintExpression'
          description: A cluster query language expression to apply to the constraint.
            You cannot specify an expression if the constraint type is `distinctInstance`.
            For more information, see [Cluster query language](https://docs.aws.amazon.com/latest/developerguide/cluster-query-language.html)
            in the _Amazon ECS Developer Guide_.
      description: An object representing a constraint on task placement.
    PlacementConstraintExpression:
      type: string
      maxLength: 2000
    PlacementConstraintType:
      type: string
      enum:
      - distinctInstance
      - memberOf
    PlacementConstraints:
      type: array
      items:
        $ref: '#/components/schemas/PlacementConstraint'
    PlacementStrategies:
      type: array
      items:
        $ref: '#/components/schemas/PlacementStrategy'
    PlacementStrategy:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/PlacementStrategyType'
          description: The type of placement strategy. The random placement strategy
            randomly places tasks on available candidates. The spread placement strategy
            spreads placement across available candidates evenly based on the field
            parameter. The binpack strategy places tasks on available candidates that
            have the least available amount of the resource that is specified with
            the field parameter. For example, if you binpack on memory, a task is
            placed on the instance with the least amount of remaining memory (but
            still enough to run the task).
        field:
          allOf:
          - $ref: '#/components/schemas/PlacementStrategyField'
          description: The field to apply the placement strategy against. For the
            spread placement strategy, valid values are `instanceId` (or `instanceId`,
            which has the same effect), or any platform or custom attribute that is
            applied to a container instance, such as `attribute:ecs.availability-zone`.
            For the binpack placement strategy, valid values are `cpu` and `memory`.
            For the random placement strategy, this field is not used.
      description: The task placement strategy for a task or service.
    PlacementStrategyField:
      type: string
      maxLength: 255
    PlacementStrategyType:
      type: string
      enum:
      - random
      - spread
      - binpack
    PlatformVersion:
      type: string
      minLength: 1
      maxLength: 64
    PropagateTags:
      type: string
      enum:
      - TASK_DEFINITION
    ReferenceId:
      type: string
      maxLength: 1024
    ResourceArn:
      type: string
      minLength: 1
      maxLength: 1600
    ResourceNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      required:
      - Message
      description: The request references a resource which does not exist.
    RetryPolicy:
      type: object
      properties:
        MaximumEventAgeInSeconds:
          allOf:
          - $ref: '#/components/schemas/MaximumEventAgeInSeconds'
          description: The maximum amount of time, in seconds, to continue to make
            retry attempts.
        MaximumRetryAttempts:
          allOf:
          - $ref: '#/components/schemas/MaximumRetryAttempts'
          description: The maximum number of retry attempts to make before the request
            fails. Retry attempts with exponential backoff continue until either the
            maximum number of attempts is made or until the duration of the `MaximumEventAgeInSeconds`
            is reached.
      description: A `RetryPolicy` object that includes information about the retry
        policy settings, including the maximum age of an event, and the maximum number
        of times EventBridge Scheduler will try to deliver the event to a target.
    RoleArn:
      type: string
      pattern: ^arn:aws(-[a-z]+)?:iam::\d{12}:role\/[\w+=,.@\/-]+$
      minLength: 1
      maxLength: 1600
    SageMakerPipelineParameter:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/SageMakerPipelineParameterName'
          description: Name of parameter to start execution of a SageMaker Model Building
            Pipeline.
        Value:
          allOf:
          - $ref: '#/components/schemas/SageMakerPipelineParameterValue'
          description: Value of parameter to start execution of a SageMaker Model
            Building Pipeline.
      required:
      - Name
      - Value
      description: The name and value pair of a parameter to use to start execution
        of a SageMaker Model Building Pipeline.
    SageMakerPipelineParameterList:
      type: array
      items:
        $ref: '#/components/schemas/SageMakerPipelineParameter'
    SageMakerPipelineParameterName:
      type: string
      pattern: ^[A-Za-z0-9\-_]*$
      minLength: 1
      maxLength: 256
    SageMakerPipelineParameterValue:
      type: string
      minLength: 1
      maxLength: 1024
    SageMakerPipelineParameters:
      type: object
      properties:
        PipelineParameterList:
          allOf:
          - $ref: '#/components/schemas/SageMakerPipelineParameterList'
          description: List of parameter names and values to use when executing the
            SageMaker Model Building Pipeline.
      description: The templated target type for the Amazon SageMaker [ `StartPipelineExecution`
        ](https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_StartPipelineExecution.html)
        API operation.
    ScheduleArn:
      type: string
      pattern: ^arn:aws(-[a-z]+)?:scheduler:[a-z0-9\-]+:\d{12}:schedule\/[0-9a-zA-Z-_.]+\/[0-9a-zA-Z-_.]+$
      minLength: 1
      maxLength: 1224
    ScheduleExpression:
      type: string
      minLength: 1
      maxLength: 256
    ScheduleExpressionTimezone:
      type: string
      minLength: 1
      maxLength: 50
    ScheduleGroupArn:
      type: string
      pattern: ^arn:aws(-[a-z]+)?:scheduler:[a-z0-9\-]+:\d{12}:schedule-group\/[0-9a-zA-Z-_.]+$
      minLength: 1
      maxLength: 1224
    ScheduleGroupList:
      type: array
      items:
        $ref: '#/components/schemas/ScheduleGroupSummary'
    ScheduleGroupName:
      type: string
      pattern: ^[0-9a-zA-Z-_.]+$
      minLength: 1
      maxLength: 64
    ScheduleGroupNamePrefix:
      type: string
      pattern: ^[0-9a-zA-Z-_.]+$
      minLength: 1
      maxLength: 64
    ScheduleGroupState:
      type: string
      enum:
      - ACTIVE
      - DELETING
    ScheduleGroupSummary:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/ScheduleGroupArn'
          description: The Amazon Resource Name (ARN) of the schedule group.
        Name:
          allOf:
          - $ref: '#/components/schemas/ScheduleGroupName'
          description: The name of the schedule group.
        State:
          allOf:
          - $ref: '#/components/schemas/ScheduleGroupState'
          description: Specifies the state of the schedule group.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/CreationDate'
          description: The time at which the schedule group was created.
        LastModificationDate:
          allOf:
          - $ref: '#/components/schemas/LastModificationDate'
          description: The time at which the schedule group was last modified.
      description: The details of a schedule group.
    ScheduleList:
      type: array
      items:
        $ref: '#/components/schemas/ScheduleSummary'
    ScheduleState:
      type: string
      enum:
      - ENABLED
      - DISABLED
    ScheduleSummary:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/ScheduleArn'
          description: The Amazon Resource Name (ARN) of the schedule.
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the schedule.
        GroupName:
          allOf:
          - $ref: '#/components/schemas/ScheduleGroupName'
          description: The name of the schedule group associated with this schedule.
        State:
          allOf:
          - $ref: '#/components/schemas/ScheduleState'
          description: Specifies whether the schedule is enabled or disabled.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/CreationDate'
          description: The time at which the schedule was created.
        LastModificationDate:
          allOf:
          - $ref: '#/components/schemas/LastModificationDate'
          description: The time at which the schedule was last modified.
        Target:
          allOf:
          - $ref: '#/components/schemas/TargetSummary'
          description: The schedule's target details.
      description: The details of a schedule.
    SecurityGroup:
      type: string
      minLength: 1
      maxLength: 1000
    SecurityGroups:
      type: array
      items:
        $ref: '#/components/schemas/SecurityGroup'
    ServiceQuotaExceededException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      required:
      - Message
      description: The request exceeds a service quota.
    Source:
      type: string
      pattern: ^(?=[/\.\-_A-Za-z0-9]+)((?!aws\.).*)|(\$(\.[\w_-]+(\[(\d+|\*)\])*)*)$
      minLength: 1
      maxLength: 256
    SqsParameters:
      type: object
      properties:
        MessageGroupId:
          allOf:
          - $ref: '#/components/schemas/MessageGroupId'
          description: The FIFO message group ID to use as the target.
      description: The templated target type for the Amazon SQS [ `SendMessage` ](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_SendMessage.html)
        API operation. Contains the message group ID to use when the target is a FIFO
        queue. If you specify an Amazon SQS FIFO queue as a target, the queue must
        have content-based deduplication enabled. For more information, see [Using
        the Amazon SQS message deduplication ID](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/using-messagededuplicationid-property.html)
        in the _Amazon SQS Developer Guide_.
    StartDate:
      type: string
      format: date-time
    Subnet:
      type: string
      minLength: 1
      maxLength: 1000
    Subnets:
      type: array
      items:
        $ref: '#/components/schemas/Subnet'
    Tag:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          description: The key for the tag.
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          description: The value for the tag.
      required:
      - Key
      - Value
      description: Tag to associate with a schedule group.
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TagResourceArn:
      type: string
      pattern: ^arn:aws(-[a-z]+)?:scheduler:[a-z0-9\-]+:\d{12}:schedule-group\/[0-9a-zA-Z-_.]+$
      minLength: 1
      maxLength: 1011
    TagResourceInput:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/TagResourceArn'
          description: The Amazon Resource Name (ARN) of the schedule group that you
            are adding tags to.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The list of tags to associate with the schedule group.
      required:
      - ResourceArn
      - Tags
    TagResourceOutput:
      type: object
      properties: {}
    TagValue:
      type: string
      minLength: 1
      maxLength: 256
    Tags:
      type: array
      items:
        $ref: '#/components/schemas/TagMap'
    Target:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/TargetArn'
          description: The Amazon Resource Name (ARN) of the target.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of the IAM role that EventBridge
            Scheduler will use for this target when the schedule is invoked.
        DeadLetterConfig:
          allOf:
          - $ref: '#/components/schemas/DeadLetterConfig'
          description: An object that contains information about an Amazon SQS queue
            that EventBridge Scheduler uses as a dead-letter queue for your schedule.
            If specified, EventBridge Scheduler delivers failed events that could
            not be successfully delivered to a target to the queue.
        RetryPolicy:
          allOf:
          - $ref: '#/components/schemas/RetryPolicy'
          description: A `RetryPolicy` object that includes information about the
            retry policy settings, including the maximum age of an event, and the
            maximum number of times EventBridge Scheduler will try to deliver the
            event to a target.
        Input:
          allOf:
          - $ref: '#/components/schemas/TargetInput'
          description: The text, or well-formed JSON, passed to the target. If you
            are configuring a templated Lambda, AWS Step Functions, or Amazon EventBridge
            target, the input must be a well-formed JSON. For all other target types,
            a JSON is not required. If you do not specify anything for this field,
            EventBridge Scheduler delivers a default notification to the target.
        EcsParameters:
          allOf:
          - $ref: '#/components/schemas/EcsParameters'
          description: The templated target type for the Amazon ECS [ `RunTask` ](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_RunTask.html)
            API operation.
        EventBridgeParameters:
          allOf:
          - $ref: '#/components/schemas/EventBridgeParameters'
          description: The templated target type for the EventBridge [ `PutEvents`
            ](https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_PutEvents.html)
            API operation.
        KinesisParameters:
          allOf:
          - $ref: '#/components/schemas/KinesisParameters'
          description: The templated target type for the Amazon Kinesis [ `PutRecord`
            ](kinesis/latest/APIReference/API_PutRecord.html) API operation.
        SageMakerPipelineParameters:
          allOf:
          - $ref: '#/components/schemas/SageMakerPipelineParameters'
          description: The templated target type for the Amazon SageMaker [ `StartPipelineExecution`
            ](https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_StartPipelineExecution.html)
            API operation.
        SqsParameters:
          allOf:
          - $ref: '#/components/schemas/SqsParameters'
          description: The templated target type for the Amazon SQS [ `SendMessage`
            ](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_SendMessage.html)
            API operation. Contains the message group ID to use when the target is
            a FIFO queue. If you specify an Amazon SQS FIFO queue as a target, the
            queue must have content-based deduplication enabled. For more information,
            see [Using the Amazon SQS message deduplication ID](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/using-messagededuplicationid-property.html)
            in the _Amazon SQS Developer Guide_.
      required:
      - Arn
      - RoleArn
      description: The schedule's target. EventBridge Scheduler supports templated
        target that invoke common API operations, as well as universal targets that
        you can customize to invoke over 6,000 API operations across more than 270
        services. You can only specify one templated or universal target for a schedule.
    TargetArn:
      type: string
      minLength: 1
      maxLength: 1600
    TargetInput:
      type: string
      minLength: 1
    TargetPartitionKey:
      type: string
      minLength: 1
      maxLength: 256
    TargetSummary:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/TargetArn'
          description: The Amazon Resource Name (ARN) of the target.
      required:
      - Arn
      description: The details of a target.
    TaskCount:
      type: integer
      minimum: 1
      maximum: 10
    TaskDefinitionArn:
      type: string
      minLength: 1
      maxLength: 1600
    ThrottlingException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      required:
      - Message
      description: The request was denied due to request throttling.
    UntagResourceInput:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/TagResourceArn'
          description: The Amazon Resource Name (ARN) of the schedule group from which
            you are removing tags.
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: The list of tag keys to remove from the resource.
      required:
      - ResourceArn
      - TagKeys
    UntagResourceOutput:
      type: object
      properties: {}
    UpdateScheduleInput:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the schedule that you are updating.
        GroupName:
          allOf:
          - $ref: '#/components/schemas/ScheduleGroupName'
          description: The name of the schedule group with which the schedule is associated.
            You must provide this value in order for EventBridge Scheduler to find
            the schedule you want to update. If you omit this value, EventBridge Scheduler
            assumes the group is associated to the default group.
        ScheduleExpression:
          allOf:
          - $ref: '#/components/schemas/ScheduleExpression'
          description: "The expression that defines when the schedule runs. The following\
            \ formats are supported.\n\n  * `at` expression - `at(yyyy-mm-ddThh:mm:ss)`\n\
            \n  * `rate` expression - `rate(value unit)`\n\n  * `cron` expression\
            \ - `cron(fields)`\n\nYou can use `at` expressions to create one-time\
            \ schedules that invoke a target once, at the time and in the time zone,\
            \ that you specify. You can use `rate` and `cron` expressions to create\
            \ recurring schedules. Rate-based schedules are useful when you want to\
            \ invoke a target at regular intervals, such as every 15 minutes or every\
            \ five days. Cron-based schedules are useful when you want to invoke a\
            \ target periodically at a specific time, such as at 8:00 am (UTC+0) every\
            \ 1st day of the month.\n\nA `cron` expression consists of six fields\
            \ separated by white spaces: `(minutes hours day_of_month month day_of_week\
            \ year)`.\n\nA `rate` expression consists of a _value_ as a positive integer,\
            \ and a _unit_ with the following options: `minute` | `minutes` | `hour`\
            \ | `hours` | `day` | `days`\n\nFor more information and examples, see\
            \ [Schedule types on EventBridge Scheduler](https://docs.aws.amazon.com/scheduler/latest/UserGuide/schedule-types.html)\
            \ in the _EventBridge Scheduler User Guide_."
        StartDate:
          allOf:
          - $ref: '#/components/schemas/StartDate'
          description: The date, in UTC, after which the schedule can begin invoking
            its target. Depending on the schedule's recurrence expression, invocations
            might occur on, or after, the `StartDate` you specify. EventBridge Scheduler
            ignores `StartDate` for one-time schedules.
        EndDate:
          allOf:
          - $ref: '#/components/schemas/EndDate'
          description: The date, in UTC, before which the schedule can invoke its
            target. Depending on the schedule's recurrence expression, invocations
            might stop on, or before, the `EndDate` you specify. EventBridge Scheduler
            ignores `EndDate` for one-time schedules.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description you specify for the schedule.
        ScheduleExpressionTimezone:
          allOf:
          - $ref: '#/components/schemas/ScheduleExpressionTimezone'
          description: The timezone in which the scheduling expression is evaluated.
        State:
          allOf:
          - $ref: '#/components/schemas/ScheduleState'
          description: Specifies whether the schedule is enabled or disabled.
        KmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          description: The ARN for the customer managed KMS key that that you want
            EventBridge Scheduler to use to encrypt and decrypt your data.
        Target:
          allOf:
          - $ref: '#/components/schemas/Target'
          description: The schedule target. You can use this operation to change the
            target that your schedule invokes.
        FlexibleTimeWindow:
          allOf:
          - $ref: '#/components/schemas/FlexibleTimeWindow'
          description: Allows you to configure a time window during which EventBridge
            Scheduler invokes the schedule.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: Unique, case-sensitive identifier you provide to ensure the
            idempotency of the request. If you do not specify a client token, EventBridge
            Scheduler uses a randomly generated token for the request to ensure idempotency.
        ActionAfterCompletion:
          allOf:
          - $ref: '#/components/schemas/ActionAfterCompletion'
          description: Specifies the action that EventBridge Scheduler applies to
            the schedule after the schedule completes invoking the target.
      required:
      - Name
      - ScheduleExpression
      - Target
      - FlexibleTimeWindow
    UpdateScheduleOutput:
      type: object
      properties:
        ScheduleArn:
          allOf:
          - $ref: '#/components/schemas/ScheduleArn'
          description: The Amazon Resource Name (ARN) of the schedule that you updated.
      required:
      - ScheduleArn
    ValidationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      required:
      - Message
      description: The input fails to satisfy the constraints specified by an AWS
        service.
