openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: migrationhubstrategy
  x-aws-serviceName: migrationhubstrategy
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2020-02-19'
  title: Migration Hub Strategy Recommendations
  description: |-
    Migration Hub Strategy Recommendations

    This API reference provides descriptions, syntax, and other details about each of the actions and data types for Migration Hub Strategy Recommendations (Strategy Recommendations). The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the AWS SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see [AWS SDKs](http://aws.amazon.com/tools/#SDKs).
servers:
- description: The Migration Hub Strategy Recommendations regional endpoint
  url: https://migrationhub-strategy.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /get-applicationcomponent-details/{applicationComponentId}:
    get:
      operationId: GetApplicationComponentDetails
      description: |-
        Retrieves details about an application component.
      parameters:
      - name: applicationComponentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ApplicationComponentId'
      responses:
        '200': {}
        '500':
          description: |-
            The server experienced an internal error. Try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified ID in the request is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /get-applicationcomponent-strategies/{applicationComponentId}:
    get:
      operationId: GetApplicationComponentStrategies
      description: |-
        Retrieves a list of all the recommended strategies and tools for an application component running on a server.
      parameters:
      - name: applicationComponentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ApplicationComponentId'
      responses:
        '200': {}
        '500':
          description: |-
            The server experienced an internal error. Try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified ID in the request is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /get-assessment/{id}:
    get:
      operationId: GetAssessment
      description: |-
        Retrieves the status of an on-going assessment.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AsyncTaskId'
      responses:
        '200': {}
        '403':
          description: |-
            The user does not have permission to perform the action. Check the AWS Identity and Access Management (IAM) policy associated with this user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The server experienced an internal error. Try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified ID in the request is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /get-import-file-task/{id}:
    get:
      operationId: GetImportFileTask
      description: |-
        Retrieves the details about a specific import task.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            The user does not have permission to perform the action. Check the AWS Identity and Access Management (IAM) policy associated with this user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The server experienced an internal error. Try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified ID in the request is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request body isn't valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /get-latest-assessment-id:
    get:
      operationId: GetLatestAssessmentId
      description: |-
        Retrieve the latest ID of a specific assessment task.
      parameters: []
      responses:
        '200': {}
        '403':
          description: |-
            The user does not have permission to perform the action. Check the AWS Identity and Access Management (IAM) policy associated with this user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The server experienced an internal error. Try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The request body isn't valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /get-portfolio-preferences:
    get:
      operationId: GetPortfolioPreferences
      description: |-
        Retrieves your migration and modernization preferences.
      parameters: []
      responses:
        '200': {}
        '403':
          description: |-
            The user does not have permission to perform the action. Check the AWS Identity and Access Management (IAM) policy associated with this user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The server experienced an internal error. Try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified ID in the request is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /get-portfolio-summary:
    get:
      operationId: GetPortfolioSummary
      description: |-
        Retrieves overall summary including the number of servers to rehost and the overall number of anti-patterns.
      parameters: []
      responses:
        '200': {}
        '403':
          description: |-
            The user does not have permission to perform the action. Check the AWS Identity and Access Management (IAM) policy associated with this user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The server experienced an internal error. Try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /get-recommendation-report-details/{id}:
    get:
      operationId: GetRecommendationReportDetails
      description: |-
        Retrieves detailed information about the specified recommendation report.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RecommendationTaskId'
      responses:
        '200': {}
        '403':
          description: |-
            The user does not have permission to perform the action. Check the AWS Identity and Access Management (IAM) policy associated with this user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The server experienced an internal error. Try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified ID in the request is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request body isn't valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /get-server-details/{serverId}:
    get:
      operationId: GetServerDetails
      description: |-
        Retrieves detailed information about a specified server.
      parameters:
      - name: serverId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ServerId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResult'
      responses:
        '200': {}
        '403':
          description: |-
            The user does not have permission to perform the action. Check the AWS Identity and Access Management (IAM) policy associated with this user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The server experienced an internal error. Try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified ID in the request is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request body isn't valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /get-server-strategies/{serverId}:
    get:
      operationId: GetServerStrategies
      description: |-
        Retrieves recommended strategies and tools for the specified server.
      parameters:
      - name: serverId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ServerId'
      responses:
        '200': {}
        '403':
          description: |-
            The user does not have permission to perform the action. Check the AWS Identity and Access Management (IAM) policy associated with this user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The server experienced an internal error. Try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified ID in the request is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request body isn't valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /list-analyzable-servers:
    post:
      operationId: ListAnalyzableServers
      description: |-
        Retrieves a list of all the servers fetched from customer vCenter using Strategy Recommendation Collector.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sort:
                  $ref: '#/components/schemas/SortOrder'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
                maxResults:
                  $ref: '#/components/schemas/MaxResult'
      responses:
        '200': {}
        '403':
          description: |-
            The user does not have permission to perform the action. Check the AWS Identity and Access Management (IAM) policy associated with this user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The server experienced an internal error. Try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request body isn't valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /list-applicationcomponents:
    post:
      operationId: ListApplicationComponents
      description: |-
        Retrieves a list of all the application components (processes).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                applicationComponentCriteria:
                  $ref: '#/components/schemas/ApplicationComponentCriteria'
                filterValue:
                  $ref: '#/components/schemas/String'
                sort:
                  $ref: '#/components/schemas/SortOrder'
                groupIdFilter:
                  $ref: '#/components/schemas/GroupIds'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
                maxResults:
                  $ref: '#/components/schemas/MaxResult'
      responses:
        '200': {}
        '403':
          description: |-
            The user does not have permission to perform the action. Check the AWS Identity and Access Management (IAM) policy associated with this user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The server experienced an internal error. Try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The request body isn't valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /list-collectors:
    get:
      operationId: ListCollectors
      description: |-
        Retrieves a list of all the installed collectors.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResult'
      responses:
        '200': {}
        '403':
          description: |-
            The user does not have permission to perform the action. Check the AWS Identity and Access Management (IAM) policy associated with this user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The server experienced an internal error. Try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request body isn't valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /list-import-file-task:
    get:
      operationId: ListImportFileTask
      description: |-
        Retrieves a list of all the imports performed.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
        '403':
          description: |-
            The user does not have permission to perform the action. Check the AWS Identity and Access Management (IAM) policy associated with this user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The server experienced an internal error. Try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request body isn't valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /list-servers:
    post:
      operationId: ListServers
      description: |-
        Returns a list of all the servers.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                serverCriteria:
                  $ref: '#/components/schemas/ServerCriteria'
                filterValue:
                  $ref: '#/components/schemas/String'
                sort:
                  $ref: '#/components/schemas/SortOrder'
                groupIdFilter:
                  $ref: '#/components/schemas/GroupIds'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
                maxResults:
                  $ref: '#/components/schemas/MaxResult'
      responses:
        '200': {}
        '403':
          description: |-
            The user does not have permission to perform the action. Check the AWS Identity and Access Management (IAM) policy associated with this user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The server experienced an internal error. Try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request body isn't valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /put-portfolio-preferences:
    post:
      operationId: PutPortfolioPreferences
      description: |-
        Saves the specified migration and modernization preferences.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                prioritizeBusinessGoals:
                  $ref: '#/components/schemas/PrioritizeBusinessGoals'
                applicationPreferences:
                  $ref: '#/components/schemas/ApplicationPreferences'
                databasePreferences:
                  $ref: '#/components/schemas/DatabasePreferences'
                applicationMode:
                  $ref: '#/components/schemas/ApplicationMode'
      responses:
        '200': {}
        '403':
          description: |-
            The user does not have permission to perform the action. Check the AWS Identity and Access Management (IAM) policy associated with this user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Exception to indicate that there is an ongoing task when a new task is created. Return when once the existing tasks are complete.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The server experienced an internal error. Try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request body isn't valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /start-assessment:
    post:
      operationId: StartAssessment
      description: |-
        Starts the assessment of an on-premises environment.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                s3bucketForAnalysisData:
                  $ref: '#/components/schemas/String'
                s3bucketForReportData:
                  $ref: '#/components/schemas/String'
                assessmentTargets:
                  $ref: '#/components/schemas/AssessmentTargets'
                assessmentDataSourceType:
                  $ref: '#/components/schemas/AssessmentDataSourceType'
      responses:
        '200': {}
        '403':
          description: |-
            The user does not have permission to perform the action. Check the AWS Identity and Access Management (IAM) policy associated with this user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The server experienced an internal error. Try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            The AWS account has reached its quota of imports. Contact AWS Support to increase the quota for this account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /start-import-file-task:
    post:
      operationId: StartImportFileTask
      description: |-
        Starts a file import.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/String'
                S3Bucket:
                  $ref: '#/components/schemas/importS3Bucket'
                s3key:
                  $ref: '#/components/schemas/String'
                dataSourceType:
                  $ref: '#/components/schemas/DataSourceType'
                groupId:
                  $ref: '#/components/schemas/GroupIds'
                s3bucketForReportData:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            The user does not have permission to perform the action. Check the AWS Identity and Access Management (IAM) policy associated with this user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The server experienced an internal error. Try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            The AWS account has reached its quota of imports. Contact AWS Support to increase the quota for this account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request body isn't valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /start-recommendation-report-generation:
    post:
      operationId: StartRecommendationReportGeneration
      description: |-
        Starts generating a recommendation report.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                outputFormat:
                  $ref: '#/components/schemas/OutputFormat'
                groupIdFilter:
                  $ref: '#/components/schemas/GroupIds'
      responses:
        '200': {}
        '403':
          description: |-
            The user does not have permission to perform the action. Check the AWS Identity and Access Management (IAM) policy associated with this user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Exception to indicate that there is an ongoing task when a new task is created. Return when once the existing tasks are complete.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The server experienced an internal error. Try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request body isn't valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /stop-assessment:
    post:
      operationId: StopAssessment
      description: |-
        Stops the assessment of an on-premises environment.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                assessmentId:
                  $ref: '#/components/schemas/AsyncTaskId'
      responses:
        '200': {}
        '403':
          description: |-
            The user does not have permission to perform the action. Check the AWS Identity and Access Management (IAM) policy associated with this user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The server experienced an internal error. Try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request body isn't valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /update-applicationcomponent-config/:
    post:
      operationId: UpdateApplicationComponentConfig
      description: |-
        Updates the configuration of an application component.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                applicationComponentId:
                  $ref: '#/components/schemas/ApplicationComponentId'
                inclusionStatus:
                  $ref: '#/components/schemas/InclusionStatus'
                strategyOption:
                  $ref: '#/components/schemas/StrategyOption'
                sourceCodeList:
                  $ref: '#/components/schemas/SourceCodeList'
                secretsManagerKey:
                  $ref: '#/components/schemas/SecretsManagerKey'
                configureOnly:
                  $ref: '#/components/schemas/Boolean'
                appType:
                  $ref: '#/components/schemas/AppType'
      responses:
        '200': {}
        '500':
          description: |-
            The server experienced an internal error. Try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified ID in the request is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request body isn't valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /update-server-config/:
    post:
      operationId: UpdateServerConfig
      description: |-
        Updates the configuration of the specified server.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                serverId:
                  $ref: '#/components/schemas/ServerId'
                strategyOption:
                  $ref: '#/components/schemas/StrategyOption'
      responses:
        '200': {}
        '500':
          description: |-
            The server experienced an internal error. Try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified ID in the request is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request body isn't valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    AccessDeniedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The user does not have permission to perform the action. Check
        the AWS Identity and Access Management (IAM) policy associated with this user.
    AnalysisStatusUnion:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/RuntimeAnalysisStatus'
        description: |-
          The status of the analysis.
      - allOf:
        - $ref: '#/components/schemas/SrcCodeOrDbAnalysisStatus'
        description: |-
          The status of the source code or database analysis.
      description: |-
        A combination of existing analysis statuses.
    AnalysisType:
      type: string
      enum:
      - SOURCE_CODE_ANALYSIS
      - DATABASE_ANALYSIS
      - RUNTIME_ANALYSIS
      - BINARY_ANALYSIS
    AnalyzableServerSummary:
      type: object
      properties:
        hostname:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The host name of the analyzable server.
        ipAddress:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ip address of the analyzable server.
        source:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The data source of the analyzable server.
        vmId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The virtual machine id of the analyzable server.
      description: Summary information about an analyzable server.
    AnalyzableServerSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/AnalyzableServerSummary'
    AnalyzerNameUnion:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/BinaryAnalyzerName'
        description: |-
          The binary analyzer names.
      - allOf:
        - $ref: '#/components/schemas/RunTimeAnalyzerName'
        description: |-
          The assessment analyzer names.
      - allOf:
        - $ref: '#/components/schemas/SourceCodeAnalyzerName'
        description: |-
          The source code analyzer names.
      description: |-
        The combination of the existing analyzers.
    AntipatternReportResult:
      type: object
      properties:
        analyzerName:
          allOf:
          - $ref: '#/components/schemas/AnalyzerNameUnion'
          description: The analyzer name.
        antiPatternReportS3Object:
          $ref: '#/components/schemas/S3Object'
        antipatternReportStatus:
          allOf:
          - $ref: '#/components/schemas/AntipatternReportStatus'
          description: The status of the anti-pattern report generation.
        antipatternReportStatusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          description: The status message for the anti-pattern.
      description: The anti-pattern report result.
    AntipatternReportResultList:
      type: array
      items:
        $ref: '#/components/schemas/AntipatternReportResult'
    AntipatternReportStatus:
      type: string
      enum:
      - FAILED
      - IN_PROGRESS
      - SUCCESS
    AntipatternSeveritySummary:
      type: object
      properties:
        severity:
          allOf:
          - $ref: '#/components/schemas/Severity'
          description: Contains the severity of anti-patterns.
        count:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Contains the count of anti-patterns.
      description: Contains the summary of anti-patterns and their severity.
    AppType:
      type: string
      enum:
      - DotNetFramework
      - Java
      - SQLServer
      - IIS
      - Oracle
      - Other
      - Tomcat
      - JBoss
      - Spring
      - Mongo DB
      - DB2
      - Maria DB
      - MySQL
      - Sybase
      - PostgreSQLServer
      - Cassandra
      - IBM WebSphere
      - Oracle WebLogic
      - Visual Basic
      - Unknown
      - DotnetCore
      - Dotnet
    AppUnitError:
      type: object
      properties:
        appUnitErrorCategory:
          allOf:
          - $ref: '#/components/schemas/AppUnitErrorCategory'
          description: The category of the error.
      description: Error in the analysis of the application unit.
    AppUnitErrorCategory:
      type: string
      enum:
      - CREDENTIAL_ERROR
      - CONNECTIVITY_ERROR
      - PERMISSION_ERROR
      - UNSUPPORTED_ERROR
      - OTHER_ERROR
    ApplicationComponentCriteria:
      type: string
      enum:
      - NOT_DEFINED
      - APP_NAME
      - SERVER_ID
      - APP_TYPE
      - STRATEGY
      - DESTINATION
      - ANALYSIS_STATUS
      - ERROR_CATEGORY
    ApplicationComponentDetail:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: The ID of the application component.
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of application component.
        recommendationSet:
          allOf:
          - $ref: '#/components/schemas/RecommendationSet'
          description: The top recommendation set for the application component.
        analysisStatus:
          allOf:
          - $ref: '#/components/schemas/SrcCodeOrDbAnalysisStatus'
          description: The status of analysis, if the application component has source
            code or an associated database.
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          description: A detailed description of the analysis status and any failure
            message.
        listAntipatternSeveritySummary:
          allOf:
          - $ref: '#/components/schemas/ListAntipatternSeveritySummary'
          description: A list of anti-pattern severity summaries.
        databaseConfigDetail:
          allOf:
          - $ref: '#/components/schemas/DatabaseConfigDetail'
          description: Configuration details for the database associated with the
            application component.
        sourceCodeRepositories:
          allOf:
          - $ref: '#/components/schemas/SourceCodeRepositories'
          description: Details about the source code repository associated with the
            application component.
        appType:
          allOf:
          - $ref: '#/components/schemas/AppType'
          description: The type of application component.
        resourceSubType:
          allOf:
          - $ref: '#/components/schemas/ResourceSubType'
          description: The application component subtype.
        inclusionStatus:
          allOf:
          - $ref: '#/components/schemas/InclusionStatus'
          description: Indicates whether the application component has been included
            for server recommendation or not.
        antipatternReportS3Object:
          allOf:
          - $ref: '#/components/schemas/S3Object'
          description: The S3 bucket name and the Amazon S3 key name for the anti-pattern
            report.
        antipatternReportStatus:
          allOf:
          - $ref: '#/components/schemas/AntipatternReportStatus'
          description: The status of the anti-pattern report generation.
        antipatternReportStatusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          description: The status message for the anti-pattern.
        osVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: OS version.
        osDriver:
          allOf:
          - $ref: '#/components/schemas/String'
          description: OS driver.
        lastAnalyzedTimestamp:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          description: The timestamp of when the application component was assessed.
        associatedServerId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          description: The ID of the server that the application component is running
            on.
        moreServerAssociationExists:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Set to true if the application component is running on multiple
            servers.
        runtimeStatus:
          allOf:
          - $ref: '#/components/schemas/RuntimeAnalysisStatus'
          description: The status of the application unit.
        runtimeStatusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          description: The status message for the application unit.
        appUnitError:
          allOf:
          - $ref: '#/components/schemas/AppUnitError'
          description: The error in the analysis of the source code or database.
        resultList:
          allOf:
          - $ref: '#/components/schemas/ResultList'
          description: A list of the analysis results.
      description: Contains detailed information about an application component.
    ApplicationComponentDetails:
      type: array
      items:
        $ref: '#/components/schemas/ApplicationComponentDetail'
    ApplicationComponentId:
      type: string
      pattern: '[0-9a-zA-Z-]+'
      maxLength: 44
    ApplicationComponentStatusSummary:
      type: object
      properties:
        srcCodeOrDbAnalysisStatus:
          allOf:
          - $ref: '#/components/schemas/SrcCodeOrDbAnalysisStatus'
          description: The status of database analysis.
        count:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of application components successfully analyzed,
            partially successful or failed analysis.
      description: Summary of the analysis status of the application component.
    ApplicationComponentStrategies:
      type: array
      items:
        $ref: '#/components/schemas/ApplicationComponentStrategy'
    ApplicationComponentStrategy:
      type: object
      properties:
        recommendation:
          allOf:
          - $ref: '#/components/schemas/RecommendationSet'
          description: Strategy recommendation for the application component.
        status:
          allOf:
          - $ref: '#/components/schemas/StrategyRecommendation'
          description: The recommendation status of a strategy for an application
            component.
        isPreferred:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Set to true if the recommendation is set as preferred.
      description: Contains information about a strategy recommendation for an application
        component.
    ApplicationComponentSummary:
      type: object
      properties:
        appType:
          allOf:
          - $ref: '#/components/schemas/AppType'
          description: Contains the name of application types.
        count:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Contains the count of application type.
      description: Contains the summary of application components.
    ApplicationMode:
      type: string
      enum:
      - ALL
      - KNOWN
      - UNKNOWN
    ApplicationPreferences:
      type: object
      properties:
        managementPreference:
          allOf:
          - $ref: '#/components/schemas/ManagementPreference'
          description: Application preferences that you specify to prefer managed
            environment.
      description: Application preferences that you specify.
    AssessmentDataSourceType:
      type: string
      enum:
      - StrategyRecommendationsApplicationDataCollector
      - ManualImport
      - ApplicationDiscoveryService
    AssessmentStatus:
      type: string
      enum:
      - IN_PROGRESS
      - COMPLETE
      - FAILED
      - STOPPED
    AssessmentStatusMessage:
      type: string
      pattern: .*\S.*
      minLength: 0
      maxLength: 512
    AssessmentSummary:
      type: object
      properties:
        listServerStrategySummary:
          allOf:
          - $ref: '#/components/schemas/ListStrategySummary'
          description: List of ServerStrategySummary.
        listApplicationComponentStrategySummary:
          allOf:
          - $ref: '#/components/schemas/ListStrategySummary'
          description: List of ApplicationComponentStrategySummary.
        listAntipatternSeveritySummary:
          allOf:
          - $ref: '#/components/schemas/ListAntipatternSeveritySummary'
          description: List of AntipatternSeveritySummary.
        listApplicationComponentSummary:
          allOf:
          - $ref: '#/components/schemas/ListApplicationComponentSummary'
          description: List of ApplicationComponentSummary.
        listServerSummary:
          allOf:
          - $ref: '#/components/schemas/ListServerSummary'
          description: List of ServerSummary.
        antipatternReportS3Object:
          allOf:
          - $ref: '#/components/schemas/S3Object'
          description: The Amazon S3 object containing the anti-pattern report.
        antipatternReportStatus:
          allOf:
          - $ref: '#/components/schemas/AntipatternReportStatus'
          description: The status of the anti-pattern report.
        antipatternReportStatusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          description: The status message of the anti-pattern report.
        lastAnalyzedTimestamp:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          description: The time the assessment was performed.
        listApplicationComponentStatusSummary:
          allOf:
          - $ref: '#/components/schemas/ListApplicationComponentStatusSummary'
          description: List of status summaries of the analyzed application components.
        listServerStatusSummary:
          allOf:
          - $ref: '#/components/schemas/ListServerStatusSummary'
          description: List of status summaries of the analyzed servers.
      description: Contains the summary of the assessment results.
    AssessmentTarget:
      type: object
      properties:
        condition:
          allOf:
          - $ref: '#/components/schemas/Condition'
          description: Condition of an assessment.
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Name of an assessment.
        values:
          allOf:
          - $ref: '#/components/schemas/AssessmentTargetValues'
          description: Values of an assessment.
      required:
      - condition
      - name
      - values
      description: Defines the criteria of assessment.
    AssessmentTargetValues:
      type: array
      items:
        $ref: '#/components/schemas/String'
    AssessmentTargets:
      type: array
      items:
        $ref: '#/components/schemas/AssessmentTarget'
    AssociatedApplication:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Name of the application as defined in Application Discovery
            Service.
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: ID of the application as defined in Application Discovery Service.
      description: Object containing details about applications as defined in Application
        Discovery Service.
    AssociatedApplications:
      type: array
      items:
        $ref: '#/components/schemas/AssociatedApplication'
    AssociatedServerIDs:
      type: array
      items:
        $ref: '#/components/schemas/String'
    AsyncTaskId:
      type: string
      pattern: '[0-9a-z-:]+'
      minLength: 0
      maxLength: 52
    AuthType:
      type: string
      enum:
      - NTLM
      - SSH
      - CERT
    AwsManagedResources:
      type: object
      properties:
        targetDestination:
          allOf:
          - $ref: '#/components/schemas/AwsManagedTargetDestinations'
          description: The choice of application destination that you specify.
      required:
      - targetDestination
      description: Object containing the choice of application destination that you
        specify.
    AwsManagedTargetDestination:
      type: string
      enum:
      - None specified
      - AWS Elastic BeanStalk
      - AWS Fargate
    AwsManagedTargetDestinations:
      type: array
      items:
        $ref: '#/components/schemas/AwsManagedTargetDestination'
    BinaryAnalyzerName:
      type: string
      enum:
      - DLL_ANALYZER
      - BYTECODE_ANALYZER
    Boolean:
      type: boolean
    BusinessGoals:
      type: object
      properties:
        speedOfMigration:
          allOf:
          - $ref: '#/components/schemas/BusinessGoalsInteger'
          description: Business goal to achieve migration at a fast pace.
        reduceOperationalOverheadWithManagedServices:
          allOf:
          - $ref: '#/components/schemas/BusinessGoalsInteger'
          description: Business goal to reduce the operational overhead on the team
            by moving into managed services.
        modernizeInfrastructureWithCloudNativeTechnologies:
          allOf:
          - $ref: '#/components/schemas/BusinessGoalsInteger'
          description: Business goal to modernize infrastructure by moving to cloud
            native technologies.
        licenseCostReduction:
          allOf:
          - $ref: '#/components/schemas/BusinessGoalsInteger'
          description: Business goal to reduce license costs.
      description: Business goals that you specify.
    BusinessGoalsInteger:
      type: integer
      minimum: 1
      maximum: 5
    Collector:
      type: object
      properties:
        collectorId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the collector.
        ipAddress:
          allOf:
          - $ref: '#/components/schemas/String'
          description: IP address of the server that is hosting the collector.
        hostName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Hostname of the server that is hosting the collector.
        collectorHealth:
          allOf:
          - $ref: '#/components/schemas/CollectorHealth'
          description: Indicates the health of a collector.
        collectorVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Current version of the collector that is running in the environment
            that you specify.
        registeredTimeStamp:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Time when the collector registered with the service.
        lastActivityTimeStamp:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Time when the collector last pinged the service.
        configurationSummary:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSummary'
          description: Summary of the collector configuration.
      description: Process data collector that runs in the environment that you specify.
    CollectorHealth:
      type: string
      enum:
      - COLLECTOR_HEALTHY
      - COLLECTOR_UNHEALTHY
    Collectors:
      type: array
      items:
        $ref: '#/components/schemas/Collector'
    Condition:
      type: string
      enum:
      - EQUALS
      - NOT_EQUALS
      - CONTAINS
      - NOT_CONTAINS
    ConfigurationSummary:
      type: object
      properties:
        vcenterBasedRemoteInfoList:
          allOf:
          - $ref: '#/components/schemas/VcenterBasedRemoteInfoList'
          description: The list of vCenter configurations.
        ipAddressBasedRemoteInfoList:
          allOf:
          - $ref: '#/components/schemas/IPAddressBasedRemoteInfoList'
          description: IP address based configurations.
        versionControlInfoList:
          allOf:
          - $ref: '#/components/schemas/VersionControlInfoList'
          description: The list of the version control configurations.
        pipelineInfoList:
          allOf:
          - $ref: '#/components/schemas/PipelineInfoList'
          description: The list of pipeline info configurations.
        remoteSourceCodeAnalysisServerInfo:
          allOf:
          - $ref: '#/components/schemas/RemoteSourceCodeAnalysisServerInfo'
          description: Info about the remote server source code configuration.
      description: Summary of the collector configuration.
    ConflictException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: Exception to indicate that there is an ongoing task when a new
        task is created. Return when once the existing tasks are complete.
    DataCollectionDetails:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/AssessmentStatus'
          description: The status of the assessment.
        servers:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The total number of servers in the assessment.
        failed:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of failed servers in the assessment.
        success:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of successful servers in the assessment.
        inProgress:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of servers with the assessment status `IN_PROGESS`.
        startTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          description: The start time of assessment.
        completionTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          description: The time the assessment completes.
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/AssessmentStatusMessage'
          description: The status message of the assessment.
      description: Detailed information about an assessment.
    DataSourceType:
      type: string
      enum:
      - ApplicationDiscoveryService
      - MPA
      - Import
      - StrategyRecommendationsApplicationDataCollector
    DatabaseConfigDetail:
      type: object
      properties:
        secretName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: AWS Secrets Manager key that holds the credentials that you
            use to connect to a database.
      description: Configuration information used for assessing databases.
    DatabaseManagementPreference:
      type: string
      enum:
      - AWS-managed
      - Self-manage
      - No preference
    DatabaseMigrationPreference:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/Heterogeneous'
        description: |-
          Indicates whether you are interested in moving from one type of database to another. For example, from SQL Server to Amazon Aurora MySQL-Compatible Edition.
      - allOf:
        - $ref: '#/components/schemas/Homogeneous'
        description: |-
          Indicates whether you are interested in moving to the same type of database into AWS. For example, from SQL Server in your environment to SQL Server on AWS.
      - allOf:
        - $ref: '#/components/schemas/NoDatabaseMigrationPreference'
        description: |-
          Indicated that you do not prefer heterogeneous or homogeneous.
      description: |-
        Preferences for migrating a database to AWS.
    DatabasePreferences:
      type: object
      properties:
        databaseManagementPreference:
          allOf:
          - $ref: '#/components/schemas/DatabaseManagementPreference'
          description: Specifies whether you're interested in self-managed databases
            or databases managed by AWS.
        databaseMigrationPreference:
          allOf:
          - $ref: '#/components/schemas/DatabaseMigrationPreference'
          description: Specifies your preferred migration path.
      description: Preferences on managing your databases on AWS.
    DependencyException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/errorMessage'
      description: Dependency encountered an error.
    GetApplicationComponentDetailsRequest:
      type: object
      properties:
        applicationComponentId:
          allOf:
          - $ref: '#/components/schemas/ApplicationComponentId'
          description: The ID of the application component. The ID is unique within
            an AWS account.
      required:
      - applicationComponentId
    GetApplicationComponentDetailsResponse:
      type: object
      properties:
        applicationComponentDetail:
          allOf:
          - $ref: '#/components/schemas/ApplicationComponentDetail'
          description: Detailed information about an application component.
        associatedApplications:
          allOf:
          - $ref: '#/components/schemas/AssociatedApplications'
          description: The associated application group as defined in AWS Application
            Discovery Service.
        moreApplicationResource:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Set to true if the application component belongs to more than
            one application group.
        associatedServerIds:
          allOf:
          - $ref: '#/components/schemas/AssociatedServerIDs'
          description: A list of the IDs of the servers on which the application component
            is running.
    GetApplicationComponentStrategiesRequest:
      type: object
      properties:
        applicationComponentId:
          allOf:
          - $ref: '#/components/schemas/ApplicationComponentId'
          description: The ID of the application component. The ID is unique within
            an AWS account.
      required:
      - applicationComponentId
    GetApplicationComponentStrategiesResponse:
      type: object
      properties:
        applicationComponentStrategies:
          allOf:
          - $ref: '#/components/schemas/ApplicationComponentStrategies'
          description: A list of application component strategy recommendations.
    GetAssessmentRequest:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/AsyncTaskId'
          description: The `assessmentid` returned by StartAssessment.
      required:
      - id
    GetAssessmentResponse:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/AsyncTaskId'
          description: The ID for the specific assessment task.
        dataCollectionDetails:
          allOf:
          - $ref: '#/components/schemas/DataCollectionDetails'
          description: Detailed information about the assessment.
        assessmentTargets:
          allOf:
          - $ref: '#/components/schemas/AssessmentTargets'
          description: List of criteria for assessment.
    GetImportFileTaskRequest:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the import file task. This ID is returned in the
            response of StartImportFileTask.
      required:
      - id
    GetImportFileTaskResponse:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The import file task `id` returned in the response of StartImportFileTask.
        status:
          allOf:
          - $ref: '#/components/schemas/ImportFileTaskStatus'
          description: Status of import file task.
        startTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          description: Start time of the import task.
        inputS3Bucket:
          allOf:
          - $ref: '#/components/schemas/importS3Bucket'
          description: The S3 bucket where import file is located.
        inputS3Key:
          allOf:
          - $ref: '#/components/schemas/importS3Key'
          description: The Amazon S3 key name of the import file.
        statusReportS3Bucket:
          allOf:
          - $ref: '#/components/schemas/importS3Bucket'
          description: The S3 bucket name for status report of import task.
        statusReportS3Key:
          allOf:
          - $ref: '#/components/schemas/importS3Key'
          description: The Amazon S3 key name for status report of import task. The
            report contains details about whether each record imported successfully
            or why it did not.
        completionTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          description: The time that the import task completed.
        numberOfRecordsSuccess:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of records successfully imported.
        numberOfRecordsFailed:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of records that failed to be imported.
        importName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the import task given in StartImportFileTask.
    GetLatestAssessmentIdRequest:
      type: object
      properties: {}
    GetLatestAssessmentIdResponse:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/AsyncTaskId'
          description: The latest ID for the specific assessment task.
    GetPortfolioPreferencesRequest:
      type: object
      properties: {}
    GetPortfolioPreferencesResponse:
      type: object
      properties:
        prioritizeBusinessGoals:
          allOf:
          - $ref: '#/components/schemas/PrioritizeBusinessGoals'
          description: The rank of business goals based on priority.
        applicationPreferences:
          allOf:
          - $ref: '#/components/schemas/ApplicationPreferences'
          description: The transformation preferences for non-database applications.
        databasePreferences:
          allOf:
          - $ref: '#/components/schemas/DatabasePreferences'
          description: The transformation preferences for database applications.
        applicationMode:
          allOf:
          - $ref: '#/components/schemas/ApplicationMode'
          description: The classification for application component types.
    GetPortfolioSummaryRequest:
      type: object
      properties: {}
    GetPortfolioSummaryResponse:
      type: object
      properties:
        assessmentSummary:
          allOf:
          - $ref: '#/components/schemas/AssessmentSummary'
          description: An assessment summary for the portfolio including the number
            of servers to rehost and the overall number of anti-patterns.
    GetRecommendationReportDetailsRequest:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/RecommendationTaskId'
          description: The recommendation report generation task `id` returned by
            StartRecommendationReportGeneration.
      required:
      - id
    GetRecommendationReportDetailsResponse:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/RecommendationTaskId'
          description: The ID of the recommendation report generation task. See the
            response of StartRecommendationReportGeneration.
        recommendationReportDetails:
          allOf:
          - $ref: '#/components/schemas/RecommendationReportDetails'
          description: Detailed information about the recommendation report.
    GetServerDetailsRequest:
      type: object
      properties:
        serverId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          description: The ID of the server.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token from a previous call that you use to retrieve the
            next set of results. For example, if a previous call to this action returned
            100 items, but you set `maxResults` to 10. You'll receive a set of 10
            results along with a token. You then use the returned token to retrieve
            the next set of 10.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult'
          description: The maximum number of items to include in the response. The
            maximum value is 100.
      required:
      - serverId
    GetServerDetailsResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token you use to retrieve the next set of results, or null
            if there are no more results.
        serverDetail:
          allOf:
          - $ref: '#/components/schemas/ServerDetail'
          description: Detailed information about the server.
        associatedApplications:
          allOf:
          - $ref: '#/components/schemas/AssociatedApplications'
          description: The associated application group the server belongs to, as
            defined in AWS Application Discovery Service.
    GetServerStrategiesRequest:
      type: object
      properties:
        serverId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          description: The ID of the server.
      required:
      - serverId
    GetServerStrategiesResponse:
      type: object
      properties:
        serverStrategies:
          allOf:
          - $ref: '#/components/schemas/ServerStrategies'
          description: A list of strategy recommendations for the server.
    Group:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/GroupName'
          description: The key of the specific import group.
        value:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The value of the specific import group.
      description: The object containing information about distinct imports or groups
        for Strategy Recommendations.
    GroupIds:
      type: array
      items:
        $ref: '#/components/schemas/Group'
    GroupName:
      type: string
      enum:
      - ExternalId
      - ExternalSourceType
    Heterogeneous:
      type: object
      properties:
        targetDatabaseEngine:
          allOf:
          - $ref: '#/components/schemas/HeterogeneousTargetDatabaseEngines'
          description: The target database engine for heterogeneous database migration
            preference.
      required:
      - targetDatabaseEngine
      description: The object containing details about heterogeneous database preferences.
    HeterogeneousTargetDatabaseEngine:
      type: string
      enum:
      - None specified
      - Amazon Aurora
      - AWS PostgreSQL
      - MySQL
      - Microsoft SQL Server
      - Oracle Database
      - MariaDB
      - SAP
      - Db2 LUW
      - MongoDB
    HeterogeneousTargetDatabaseEngines:
      type: array
      items:
        $ref: '#/components/schemas/HeterogeneousTargetDatabaseEngine'
    Homogeneous:
      type: object
      properties:
        targetDatabaseEngine:
          allOf:
          - $ref: '#/components/schemas/HomogeneousTargetDatabaseEngines'
          description: The target database engine for homogeneous database migration
            preferences.
      description: The object containing details about homogeneous database preferences.
    HomogeneousTargetDatabaseEngine:
      type: string
      enum:
      - None specified
    HomogeneousTargetDatabaseEngines:
      type: array
      items:
        $ref: '#/components/schemas/HomogeneousTargetDatabaseEngine'
    IPAddress:
      type: string
      pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$
      minLength: 0
      maxLength: 15
    IPAddressBasedRemoteInfo:
      type: object
      properties:
        ipAddressConfigurationTimeStamp:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The time stamp of the configuration.
        authType:
          allOf:
          - $ref: '#/components/schemas/AuthType'
          description: The type of authorization.
        osType:
          allOf:
          - $ref: '#/components/schemas/OSType'
          description: The type of the operating system.
      description: IP address based configurations.
    IPAddressBasedRemoteInfoList:
      type: array
      items:
        $ref: '#/components/schemas/IPAddressBasedRemoteInfo'
    ImportFileTaskInformation:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the import file task.
        status:
          allOf:
          - $ref: '#/components/schemas/ImportFileTaskStatus'
          description: Status of import file task.
        startTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          description: Start time of the import task.
        inputS3Bucket:
          allOf:
          - $ref: '#/components/schemas/importS3Bucket'
          description: The S3 bucket where the import file is located.
        inputS3Key:
          allOf:
          - $ref: '#/components/schemas/importS3Key'
          description: The Amazon S3 key name of the import file.
        statusReportS3Bucket:
          allOf:
          - $ref: '#/components/schemas/importS3Bucket'
          description: The S3 bucket name for status report of import task.
        statusReportS3Key:
          allOf:
          - $ref: '#/components/schemas/importS3Key'
          description: The Amazon S3 key name for status report of import task. The
            report contains details about whether each record imported successfully
            or why it did not.
        completionTime:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          description: The time that the import task completes.
        numberOfRecordsSuccess:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of records successfully imported.
        numberOfRecordsFailed:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of records that failed to be imported.
        importName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the import task given in `StartImportFileTask`.
      description: Information about the import file tasks you request.
    ImportFileTaskStatus:
      type: string
      enum:
      - ImportInProgress
      - ImportFailed
      - ImportPartialSuccess
      - ImportSuccess
      - DeleteInProgress
      - DeleteFailed
      - DeletePartialSuccess
      - DeleteSuccess
    InclusionStatus:
      type: string
      enum:
      - excludeFromAssessment
      - includeInAssessment
    Integer:
      type: integer
    InterfaceName:
      type: string
      pattern: .*
      minLength: 0
      maxLength: 1024
    InternalServerException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/errorMessage'
      description: The server experienced an internal error. Try again.
    ListAnalyzableServersRequest:
      type: object
      properties:
        sort:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          description: Specifies whether to sort by ascending (ASC) or descending
            (DESC) order.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token from a previous call that you use to retrieve the
            next set of results. For example, if a previous call to this action returned
            100 items, but you set maxResults to 10. You'll receive a set of 10 results
            along with a token. You then use the returned token to retrieve the next
            set of 10.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult'
          description: The maximum number of items to include in the response. The
            maximum value is 100.
      description: Represents input for ListAnalyzableServers operation.
    ListAnalyzableServersResponse:
      type: object
      properties:
        analyzableServers:
          allOf:
          - $ref: '#/components/schemas/AnalyzableServerSummaryList'
          description: The list of analyzable servers with summary information about
            each server.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token you use to retrieve the next set of results, or null
            if there are no more results.
      description: Represents output for ListAnalyzableServers operation.
    ListAntipatternSeveritySummary:
      type: array
      items:
        $ref: '#/components/schemas/AntipatternSeveritySummary'
    ListApplicationComponentStatusSummary:
      type: array
      items:
        $ref: '#/components/schemas/ApplicationComponentStatusSummary'
    ListApplicationComponentSummary:
      type: array
      items:
        $ref: '#/components/schemas/ApplicationComponentSummary'
    ListApplicationComponentsRequest:
      type: object
      properties:
        applicationComponentCriteria:
          allOf:
          - $ref: '#/components/schemas/ApplicationComponentCriteria'
          description: Criteria for filtering the list of application components.
        filterValue:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specify the value based on the application component criteria
            type. For example, if `applicationComponentCriteria` is set to `SERVER_ID`
            and `filterValue` is set to `server1`, then ListApplicationComponents
            returns all the application components running on server1.
        sort:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          description: Specifies whether to sort by ascending (`ASC`) or descending
            (`DESC`) order.
        groupIdFilter:
          allOf:
          - $ref: '#/components/schemas/GroupIds'
          description: The group ID specified in to filter on.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token from a previous call that you use to retrieve the
            next set of results. For example, if a previous call to this action returned
            100 items, but you set `maxResults` to 10. You'll receive a set of 10
            results along with a token. You then use the returned token to retrieve
            the next set of 10.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult'
          description: The maximum number of items to include in the response. The
            maximum value is 100.
    ListApplicationComponentsResponse:
      type: object
      properties:
        applicationComponentInfos:
          allOf:
          - $ref: '#/components/schemas/ApplicationComponentDetails'
          description: The list of application components with detailed information
            about each component.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token you use to retrieve the next set of results, or null
            if there are no more results.
    ListCollectorsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token from a previous call that you use to retrieve the
            next set of results. For example, if a previous call to this action returned
            100 items, but you set `maxResults` to 10. You'll receive a set of 10
            results along with a token. You then use the returned token to retrieve
            the next set of 10.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult'
          description: The maximum number of items to include in the response. The
            maximum value is 100.
    ListCollectorsResponse:
      type: object
      properties:
        Collectors:
          allOf:
          - $ref: '#/components/schemas/Collectors'
          description: The list of all the installed collectors.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token you use to retrieve the next set of results, or null
            if there are no more results.
    ListImportFileTaskInformation:
      type: array
      items:
        $ref: '#/components/schemas/ImportFileTaskInformation'
    ListImportFileTaskRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token from a previous call that you use to retrieve the
            next set of results. For example, if a previous call to this action returned
            100 items, but you set `maxResults` to 10. You'll receive a set of 10
            results along with a token. You then use the returned token to retrieve
            the next set of 10.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The total number of items to return. The maximum value is 100.
    ListImportFileTaskResponse:
      type: object
      properties:
        taskInfos:
          allOf:
          - $ref: '#/components/schemas/ListImportFileTaskInformation'
          description: Lists information about the files you import.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token you use to retrieve the next set of results, or null
            if there are no more results.
    ListServerStatusSummary:
      type: array
      items:
        $ref: '#/components/schemas/ServerStatusSummary'
    ListServerSummary:
      type: array
      items:
        $ref: '#/components/schemas/ServerSummary'
    ListServersRequest:
      type: object
      properties:
        serverCriteria:
          allOf:
          - $ref: '#/components/schemas/ServerCriteria'
          description: Criteria for filtering servers.
        filterValue:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies the filter value, which is based on the type of server
            criteria. For example, if `serverCriteria` is `OS_NAME`, and the `filterValue`
            is equal to `WindowsServer`, then `ListServers` returns all of the servers
            matching the OS name `WindowsServer`.
        sort:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          description: Specifies whether to sort by ascending (`ASC`) or descending
            (`DESC`) order.
        groupIdFilter:
          allOf:
          - $ref: '#/components/schemas/GroupIds'
          description: Specifies the group ID to filter on.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token from a previous call that you use to retrieve the
            next set of results. For example, if a previous call to this action returned
            100 items, but you set `maxResults` to 10. You'll receive a set of 10
            results along with a token. You then use the returned token to retrieve
            the next set of 10.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult'
          description: The maximum number of items to include in the response. The
            maximum value is 100.
    ListServersResponse:
      type: object
      properties:
        serverInfos:
          allOf:
          - $ref: '#/components/schemas/ServerDetails'
          description: The list of servers with detailed information about each server.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token you use to retrieve the next set of results, or null
            if there are no more results.
    ListStrategySummary:
      type: array
      items:
        $ref: '#/components/schemas/StrategySummary'
    Location:
      type: string
      pattern: .*\S.*
      minLength: 1
      maxLength: 128
    MacAddress:
      type: string
      pattern: ^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})|([0-9a-fA-F]{4}\\.[0-9a-fA-F]{4}\\.[0-9a-fA-F]{4})$”$
      minLength: 0
      maxLength: 17
    ManagementPreference:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/AwsManagedResources'
        description: |-
          Indicates interest in solutions that are managed by AWS.
      - allOf:
        - $ref: '#/components/schemas/SelfManageResources'
        description: |-
          Indicates interest in managing your own resources on AWS.
      - allOf:
        - $ref: '#/components/schemas/NoManagementPreference'
        description: |-
          No specific preference.
      description: |-
        Preferences for migrating an application to AWS.
    MaxResult:
      type: integer
    NetMask:
      type: string
      pattern: .*
      minLength: 0
      maxLength: 1024
    NetworkInfo:
      type: object
      properties:
        interfaceName:
          allOf:
          - $ref: '#/components/schemas/InterfaceName'
          description: Information about the name of the interface of the server for
            which the assessment was run.
        ipAddress:
          allOf:
          - $ref: '#/components/schemas/IPAddress'
          description: Information about the IP address of the server for which the
            assessment was run.
        macAddress:
          allOf:
          - $ref: '#/components/schemas/MacAddress'
          description: Information about the MAC address of the server for which the
            assessment was run.
        netMask:
          allOf:
          - $ref: '#/components/schemas/NetMask'
          description: Information about the subnet mask of the server for which the
            assessment was run.
      required:
      - interfaceName
      - ipAddress
      - macAddress
      - netMask
      description: Information about the server's network for which the assessment
        was run.
    NetworkInfoList:
      type: array
      items:
        $ref: '#/components/schemas/NetworkInfo'
    NextToken:
      type: string
      pattern: .*\S.*
      minLength: 0
      maxLength: 2048
    NoDatabaseMigrationPreference:
      type: object
      properties:
        targetDatabaseEngine:
          allOf:
          - $ref: '#/components/schemas/TargetDatabaseEngines'
          description: The target database engine for database migration preference
            that you specify.
      required:
      - targetDatabaseEngine
      description: The object containing details about database migration preferences,
        when you have no particular preference.
    NoManagementPreference:
      type: object
      properties:
        targetDestination:
          allOf:
          - $ref: '#/components/schemas/NoPreferenceTargetDestinations'
          description: The choice of application destination that you specify.
      required:
      - targetDestination
      description: Object containing the choice of application destination that you
        specify.
    NoPreferenceTargetDestination:
      type: string
      enum:
      - None specified
      - AWS Elastic BeanStalk
      - AWS Fargate
      - Amazon Elastic Cloud Compute (EC2)
      - Amazon Elastic Container Service (ECS)
      - Amazon Elastic Kubernetes Service (EKS)
    NoPreferenceTargetDestinations:
      type: array
      items:
        $ref: '#/components/schemas/NoPreferenceTargetDestination'
    OSInfo:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/OSType'
          description: Information about the type of operating system.
        version:
          allOf:
          - $ref: '#/components/schemas/OSVersion'
          description: Information about the version of operating system.
      description: Information about the operating system.
    OSType:
      type: string
      enum:
      - LINUX
      - WINDOWS
    OSVersion:
      type: string
      pattern: .*\S.*
      minLength: 1
      maxLength: 64
    OutputFormat:
      type: string
      enum:
      - Excel
      - Json
    PipelineInfo:
      type: object
      properties:
        pipelineType:
          allOf:
          - $ref: '#/components/schemas/PipelineType'
          description: The type of pipeline.
        pipelineConfigurationTimeStamp:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The time when the pipeline info was configured.
      description: Detailed information of the pipeline.
    PipelineInfoList:
      type: array
      items:
        $ref: '#/components/schemas/PipelineInfo'
    PipelineType:
      type: string
      enum:
      - AZURE_DEVOPS
    PrioritizeBusinessGoals:
      type: object
      properties:
        businessGoals:
          allOf:
          - $ref: '#/components/schemas/BusinessGoals'
          description: Rank of business goals based on priority.
      description: Rank of business goals based on priority.
    ProjectName:
      type: string
      pattern: .*\S.*
      minLength: 1
      maxLength: 128
    PutPortfolioPreferencesRequest:
      type: object
      properties:
        prioritizeBusinessGoals:
          allOf:
          - $ref: '#/components/schemas/PrioritizeBusinessGoals'
          description: The rank of the business goals based on priority.
        applicationPreferences:
          allOf:
          - $ref: '#/components/schemas/ApplicationPreferences'
          description: The transformation preferences for non-database applications.
        databasePreferences:
          allOf:
          - $ref: '#/components/schemas/DatabasePreferences'
          description: The transformation preferences for database applications.
        applicationMode:
          allOf:
          - $ref: '#/components/schemas/ApplicationMode'
          description: The classification for application component types.
    PutPortfolioPreferencesResponse:
      type: object
      properties: {}
    RecommendationReportDetails:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/RecommendationReportStatus'
          description: The status of the recommendation report generation task.
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/RecommendationReportStatusMessage'
          description: The status message for recommendation report generation.
        startTime:
          allOf:
          - $ref: '#/components/schemas/RecommendationReportTimeStamp'
          description: The time that the recommendation report generation task starts.
        completionTime:
          allOf:
          - $ref: '#/components/schemas/RecommendationReportTimeStamp'
          description: The time that the recommendation report generation task completes.
        s3Bucket:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The S3 bucket where the report file is located.
        s3Keys:
          allOf:
          - $ref: '#/components/schemas/S3Keys'
          description: The Amazon S3 key name of the report file.
      description: Contains detailed information about a recommendation report.
    RecommendationReportStatus:
      type: string
      enum:
      - FAILED
      - IN_PROGRESS
      - SUCCESS
    RecommendationReportStatusMessage:
      type: string
      pattern: .*\S.*
      minLength: 0
      maxLength: 512
    RecommendationReportTimeStamp:
      type: string
      format: date-time
    RecommendationSet:
      type: object
      properties:
        transformationTool:
          allOf:
          - $ref: '#/components/schemas/TransformationTool'
          description: The target destination for the recommendation set.
        targetDestination:
          allOf:
          - $ref: '#/components/schemas/TargetDestination'
          description: The recommended target destination.
        strategy:
          allOf:
          - $ref: '#/components/schemas/Strategy'
          description: The recommended strategy.
      description: Contains a recommendation set.
    RecommendationTaskId:
      type: string
      pattern: '[0-9a-z-:]+'
      minLength: 0
      maxLength: 52
    RemoteSourceCodeAnalysisServerInfo:
      type: object
      properties:
        remoteSourceCodeAnalysisServerConfigurationTimestamp:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The time when the remote source code server was configured.
      description: Information about the server configured for source code analysis.
    ResourceId:
      type: string
      pattern: ^[0-9a-b]+
      minLength: 0
      maxLength: 44
    ResourceName:
      type: string
    ResourceNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/errorMessage'
      description: The specified ID in the request is not found.
    ResourceSubType:
      type: string
      enum:
      - Database
      - Process
      - DatabaseProcess
    Result:
      type: object
      properties:
        analysisType:
          allOf:
          - $ref: '#/components/schemas/AnalysisType'
          description: The error in server analysis.
        analysisStatus:
          allOf:
          - $ref: '#/components/schemas/AnalysisStatusUnion'
          description: The error in server analysis.
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          description: The error in server analysis.
        antipatternReportResultList:
          allOf:
          - $ref: '#/components/schemas/AntipatternReportResultList'
          description: The error in server analysis.
      description: The error in server analysis.
    ResultList:
      type: array
      items:
        $ref: '#/components/schemas/Result'
    RunTimeAnalyzerName:
      type: string
      enum:
      - A2C_ANALYZER
      - REHOST_ANALYZER
      - EMP_PA_ANALYZER
      - DATABASE_ANALYZER
      - SCT_ANALYZER
    RunTimeAssessmentStatus:
      type: string
      enum:
      - dataCollectionTaskToBeScheduled
      - dataCollectionTaskScheduled
      - dataCollectionTaskStarted
      - dataCollectionTaskStopped
      - dataCollectionTaskSuccess
      - dataCollectionTaskFailed
      - dataCollectionTaskPartialSuccess
    RuntimeAnalysisStatus:
      type: string
      enum:
      - ANALYSIS_TO_BE_SCHEDULED
      - ANALYSIS_STARTED
      - ANALYSIS_SUCCESS
      - ANALYSIS_FAILED
    S3Bucket:
      type: string
      pattern: '[0-9a-z]+[0-9a-z\.\-]*[0-9a-z]+'
      minLength: 0
      maxLength: 63
    S3Key:
      type: string
      pattern: .*\S.*
      minLength: 0
      maxLength: 1024
    S3Keys:
      type: array
      items:
        $ref: '#/components/schemas/String'
    S3Object:
      type: object
      properties:
        s3Bucket:
          allOf:
          - $ref: '#/components/schemas/S3Bucket'
          description: The S3 bucket name.
        s3key:
          allOf:
          - $ref: '#/components/schemas/S3Key'
          description: The Amazon S3 key name.
      description: Contains the S3 bucket name and the Amazon S3 key name.
    SecretsManagerKey:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 512
    SelfManageResources:
      type: object
      properties:
        targetDestination:
          allOf:
          - $ref: '#/components/schemas/SelfManageTargetDestinations'
          description: Self-managed resources target destination.
      required:
      - targetDestination
      description: Self-managed resources.
    SelfManageTargetDestination:
      type: string
      enum:
      - None specified
      - Amazon Elastic Cloud Compute (EC2)
      - Amazon Elastic Container Service (ECS)
      - Amazon Elastic Kubernetes Service (EKS)
    SelfManageTargetDestinations:
      type: array
      items:
        $ref: '#/components/schemas/SelfManageTargetDestination'
    ServerCriteria:
      type: string
      enum:
      - NOT_DEFINED
      - OS_NAME
      - STRATEGY
      - DESTINATION
      - SERVER_ID
      - ANALYSIS_STATUS
      - ERROR_CATEGORY
    ServerDetail:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: The server ID.
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the server.
        recommendationSet:
          allOf:
          - $ref: '#/components/schemas/RecommendationSet'
          description: A set of recommendations.
        dataCollectionStatus:
          allOf:
          - $ref: '#/components/schemas/RunTimeAssessmentStatus'
          description: The status of assessment for the server.
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          description: A message about the status of data collection, which contains
            detailed descriptions of any error messages.
        listAntipatternSeveritySummary:
          allOf:
          - $ref: '#/components/schemas/ListAntipatternSeveritySummary'
          description: A list of anti-pattern severity summaries.
        systemInfo:
          allOf:
          - $ref: '#/components/schemas/SystemInfo'
          description: System information about the server.
        applicationComponentStrategySummary:
          allOf:
          - $ref: '#/components/schemas/ListStrategySummary'
          description: A list of strategy summaries.
        antipatternReportS3Object:
          allOf:
          - $ref: '#/components/schemas/S3Object'
          description: The S3 bucket name and Amazon S3 key name for anti-pattern
            report.
        antipatternReportStatus:
          allOf:
          - $ref: '#/components/schemas/AntipatternReportStatus'
          description: The status of the anti-pattern report generation.
        antipatternReportStatusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          description: A message about the status of the anti-pattern report generation.
        serverType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of server.
        lastAnalyzedTimestamp:
          allOf:
          - $ref: '#/components/schemas/TimeStamp'
          description: The timestamp of when the server was assessed.
        serverError:
          allOf:
          - $ref: '#/components/schemas/ServerError'
          description: The error in server analysis.
      description: Detailed information about a server.
    ServerDetails:
      type: array
      items:
        $ref: '#/components/schemas/ServerDetail'
    ServerError:
      type: object
      properties:
        serverErrorCategory:
          allOf:
          - $ref: '#/components/schemas/ServerErrorCategory'
          description: The error category of server analysis.
      description: The error in server analysis.
    ServerErrorCategory:
      type: string
      enum:
      - CONNECTIVITY_ERROR
      - CREDENTIAL_ERROR
      - PERMISSION_ERROR
      - ARCHITECTURE_ERROR
      - OTHER_ERROR
    ServerId:
      type: string
      pattern: .*\S.*
      minLength: 1
      maxLength: 27
    ServerOsType:
      type: string
      enum:
      - WindowsServer
      - AmazonLinux
      - EndOfSupportWindowsServer
      - Redhat
      - Other
    ServerStatusSummary:
      type: object
      properties:
        runTimeAssessmentStatus:
          allOf:
          - $ref: '#/components/schemas/RunTimeAssessmentStatus'
          description: The status of the run time.
        count:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of servers successfully analyzed, partially successful
            or failed analysis.
      description: The status summary of the server analysis.
    ServerStrategies:
      type: array
      items:
        $ref: '#/components/schemas/ServerStrategy'
    ServerStrategy:
      type: object
      properties:
        recommendation:
          allOf:
          - $ref: '#/components/schemas/RecommendationSet'
          description: Strategy recommendation for the server.
        status:
          allOf:
          - $ref: '#/components/schemas/StrategyRecommendation'
          description: The recommendation status of the strategy for the server.
        numberOfApplicationComponents:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of application components with this strategy recommendation
            running on the server.
        isPreferred:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Set to true if the recommendation is set as preferred.
      description: Contains information about a strategy recommendation for a server.
    ServerSummary:
      type: object
      properties:
        ServerOsType:
          allOf:
          - $ref: '#/components/schemas/ServerOsType'
          description: Type of operating system for the servers.
        count:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Number of servers.
      description: Object containing details about the servers imported by Application
        Discovery Service
    ServiceLinkedRoleLockClientException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/errorMessage'
      description: Exception to indicate that the service-linked role (SLR) is locked.
    ServiceQuotaExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The AWS account has reached its quota of imports. Contact AWS Support
        to increase the quota for this account.
    Severity:
      type: string
      enum:
      - HIGH
      - MEDIUM
      - LOW
    SortOrder:
      type: string
      enum:
      - ASC
      - DESC
    SourceCode:
      type: object
      properties:
        versionControl:
          allOf:
          - $ref: '#/components/schemas/VersionControl'
          description: The type of repository to use for the source code.
        sourceVersion:
          allOf:
          - $ref: '#/components/schemas/SourceVersion'
          description: The branch of the source code.
        location:
          allOf:
          - $ref: '#/components/schemas/Location'
          description: The repository name for the source code.
        projectName:
          allOf:
          - $ref: '#/components/schemas/ProjectName'
          description: The name of the project.
      description: Object containing source code information that is linked to an
        application component.
    SourceCodeAnalyzerName:
      type: string
      enum:
      - CSHARP_ANALYZER
      - JAVA_ANALYZER
      - BYTECODE_ANALYZER
      - PORTING_ASSISTANT
    SourceCodeList:
      type: array
      items:
        $ref: '#/components/schemas/SourceCode'
    SourceCodeRepositories:
      type: array
      items:
        $ref: '#/components/schemas/SourceCodeRepository'
    SourceCodeRepository:
      type: object
      properties:
        repository:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The repository name for the source code.
        branch:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The branch of the source code.
        versionControlType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of repository to use for the source code.
        projectName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the project.
      description: Object containing source code information that is linked to an
        application component.
    SourceVersion:
      type: string
      pattern: .*\S.*
      minLength: 1
      maxLength: 40
    SrcCodeOrDbAnalysisStatus:
      type: string
      enum:
      - ANALYSIS_TO_BE_SCHEDULED
      - ANALYSIS_STARTED
      - ANALYSIS_SUCCESS
      - ANALYSIS_FAILED
      - ANALYSIS_PARTIAL_SUCCESS
      - UNCONFIGURED
      - CONFIGURED
    StartAssessmentRequest:
      type: object
      properties:
        s3bucketForAnalysisData:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The S3 bucket used by the collectors to send analysis data
            to the service. The bucket name must begin with `migrationhub-strategy-`.
        s3bucketForReportData:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The S3 bucket where all the reports generated by the service
            are stored. The bucket name must begin with `migrationhub-strategy-`.
        assessmentTargets:
          allOf:
          - $ref: '#/components/schemas/AssessmentTargets'
          description: List of criteria for assessment.
        assessmentDataSourceType:
          allOf:
          - $ref: '#/components/schemas/AssessmentDataSourceType'
          description: The data source type of an assessment to be started.
    StartAssessmentResponse:
      type: object
      properties:
        assessmentId:
          allOf:
          - $ref: '#/components/schemas/AsyncTaskId'
          description: The ID of the assessment.
    StartImportFileTaskRequest:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A descriptive name for the request.
        S3Bucket:
          allOf:
          - $ref: '#/components/schemas/importS3Bucket'
          description: The S3 bucket where the import file is located. The bucket
            name is required to begin with `migrationhub-strategy-`.
        s3key:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon S3 key name of the import file.
        dataSourceType:
          allOf:
          - $ref: '#/components/schemas/DataSourceType'
          description: Specifies the source that the servers are coming from. By default,
            Strategy Recommendations assumes that the servers specified in the import
            file are available in AWS Application Discovery Service.
        groupId:
          allOf:
          - $ref: '#/components/schemas/GroupIds'
          description: Groups the resources in the import file together with a unique
            name. This ID can be as filter in `ListApplicationComponents` and `ListServers`.
        s3bucketForReportData:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The S3 bucket where Strategy Recommendations uploads import
            results. The bucket name is required to begin with migrationhub-strategy-.
      required:
      - name
      - S3Bucket
      - s3key
    StartImportFileTaskResponse:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID for a specific import task. The ID is unique within
            an AWS account.
    StartRecommendationReportGenerationRequest:
      type: object
      properties:
        outputFormat:
          allOf:
          - $ref: '#/components/schemas/OutputFormat'
          description: The output format for the recommendation report file. The default
            format is Microsoft Excel.
        groupIdFilter:
          allOf:
          - $ref: '#/components/schemas/GroupIds'
          description: Groups the resources in the recommendation report with a unique
            name.
    StartRecommendationReportGenerationResponse:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/RecommendationTaskId'
          description: The ID of the recommendation report generation task.
    StatusMessage:
      type: string
      pattern: .*\S.*
      minLength: 0
      maxLength: 1024
    StopAssessmentRequest:
      type: object
      properties:
        assessmentId:
          allOf:
          - $ref: '#/components/schemas/AsyncTaskId'
          description: The `assessmentId` returned by StartAssessment.
      required:
      - assessmentId
    StopAssessmentResponse:
      type: object
      properties: {}
    Strategy:
      type: string
      enum:
      - Rehost
      - Retirement
      - Refactor
      - Replatform
      - Retain
      - Relocate
      - Repurchase
    StrategyOption:
      type: object
      properties:
        strategy:
          allOf:
          - $ref: '#/components/schemas/Strategy'
          description: Type of transformation. For example, Rehost, Replatform, and
            so on.
        toolName:
          allOf:
          - $ref: '#/components/schemas/TransformationToolName'
          description: The name of the tool that can be used to transform an application
            component using this strategy.
        targetDestination:
          allOf:
          - $ref: '#/components/schemas/TargetDestination'
          description: Destination information about where the application component
            can migrate to. For example, `EC2`, `ECS`, and so on.
        isPreferred:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates if a specific strategy is preferred for the application
            component.
      description: Information about all the available strategy options for migrating
        and modernizing an application component.
    StrategyRecommendation:
      type: string
      enum:
      - recommended
      - viableOption
      - notRecommended
      - potential
    StrategySummary:
      type: object
      properties:
        strategy:
          allOf:
          - $ref: '#/components/schemas/Strategy'
          description: The name of recommended strategy.
        count:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The count of recommendations per strategy.
      description: Object containing the summary of the strategy recommendations.
    String:
      type: string
      pattern: .*\S.*
      minLength: 0
      maxLength: 1024
    SystemInfo:
      type: object
      properties:
        osInfo:
          allOf:
          - $ref: '#/components/schemas/OSInfo'
          description: Operating system corresponding to a server.
        fileSystemType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: File system type for the server.
        networkInfoList:
          allOf:
          - $ref: '#/components/schemas/NetworkInfoList'
          description: Networking information related to a server.
        cpuArchitecture:
          allOf:
          - $ref: '#/components/schemas/String'
          description: CPU architecture type for the server.
      description: Information about the server that hosts application components.
    TargetDatabaseEngine:
      type: string
      enum:
      - None specified
      - Amazon Aurora
      - AWS PostgreSQL
      - MySQL
      - Microsoft SQL Server
      - Oracle Database
      - MariaDB
      - SAP
      - Db2 LUW
      - MongoDB
    TargetDatabaseEngines:
      type: array
      items:
        $ref: '#/components/schemas/TargetDatabaseEngine'
    TargetDestination:
      type: string
      enum:
      - None specified
      - AWS Elastic BeanStalk
      - AWS Fargate
      - Amazon Elastic Cloud Compute (EC2)
      - Amazon Elastic Container Service (ECS)
      - Amazon Elastic Kubernetes Service (EKS)
      - Aurora MySQL
      - Aurora PostgreSQL
      - Amazon Relational Database Service on MySQL
      - Amazon Relational Database Service on PostgreSQL
      - Amazon DocumentDB
      - Amazon DynamoDB
      - Amazon Relational Database Service
      - Babelfish for Aurora PostgreSQL
    ThrottlingException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/errorMessage'
      description: The request was denied due to request throttling.
    TimeStamp:
      type: string
      format: date-time
    TranformationToolDescription:
      type: string
      pattern: .*\S.*
      minLength: 1
      maxLength: 1024
    TranformationToolInstallationLink:
      type: string
      pattern: .*\S.*
      minLength: 1
      maxLength: 1024
    TransformationTool:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/TransformationToolName'
          description: Name of the tool.
        description:
          allOf:
          - $ref: '#/components/schemas/TranformationToolDescription'
          description: Description of the tool.
        tranformationToolInstallationLink:
          allOf:
          - $ref: '#/components/schemas/TranformationToolInstallationLink'
          description: URL for installing the tool.
      description: Information of the transformation tool that can be used to migrate
        and modernize the application.
    TransformationToolName:
      type: string
      enum:
      - App2Container
      - Porting Assistant For .NET
      - End of Support Migration
      - Windows Web Application Migration Assistant
      - Application Migration Service
      - Strategy Recommendation Support
      - In Place Operating System Upgrade
      - Schema Conversion Tool
      - Database Migration Service
      - Native SQL Server Backup/Restore
    UpdateApplicationComponentConfigRequest:
      type: object
      properties:
        applicationComponentId:
          allOf:
          - $ref: '#/components/schemas/ApplicationComponentId'
          description: The ID of the application component. The ID is unique within
            an AWS account.
        inclusionStatus:
          allOf:
          - $ref: '#/components/schemas/InclusionStatus'
          description: Indicates whether the application component has been included
            for server recommendation or not.
        strategyOption:
          allOf:
          - $ref: '#/components/schemas/StrategyOption'
          description: The preferred strategy options for the application component.
            Use values from the GetApplicationComponentStrategies response.
        sourceCodeList:
          allOf:
          - $ref: '#/components/schemas/SourceCodeList'
          description: The list of source code configurations to update for the application
            component.
        secretsManagerKey:
          allOf:
          - $ref: '#/components/schemas/SecretsManagerKey'
          description: Database credentials.
        configureOnly:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Update the configuration request of an application component.
            If it is set to true, the source code and/or database credentials are
            updated. If it is set to false, the source code and/or database credentials
            are updated and an analysis is initiated.
        appType:
          allOf:
          - $ref: '#/components/schemas/AppType'
          description: The type of known component.
      required:
      - applicationComponentId
    UpdateApplicationComponentConfigResponse:
      type: object
      properties: {}
    UpdateServerConfigRequest:
      type: object
      properties:
        serverId:
          allOf:
          - $ref: '#/components/schemas/ServerId'
          description: The ID of the server.
        strategyOption:
          allOf:
          - $ref: '#/components/schemas/StrategyOption'
          description: The preferred strategy options for the application component.
            See the response from GetServerStrategies.
      required:
      - serverId
    UpdateServerConfigResponse:
      type: object
      properties: {}
    ValidationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/errorMessage'
      description: The request body isn't valid.
    VcenterBasedRemoteInfo:
      type: object
      properties:
        vcenterConfigurationTimeStamp:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The time when the remote server based on vCenter was last configured.
        osType:
          allOf:
          - $ref: '#/components/schemas/OSType'
          description: The type of the operating system.
      description: Details about the server in vCenter.
    VcenterBasedRemoteInfoList:
      type: array
      items:
        $ref: '#/components/schemas/VcenterBasedRemoteInfo'
    VersionControl:
      type: string
      enum:
      - GITHUB
      - GITHUB_ENTERPRISE
      - AZURE_DEVOPS_GIT
    VersionControlInfo:
      type: object
      properties:
        versionControlType:
          allOf:
          - $ref: '#/components/schemas/VersionControlType'
          description: The type of version control.
        versionControlConfigurationTimeStamp:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The time when the version control system was last configured.
      description: Details about the version control configuration.
    VersionControlInfoList:
      type: array
      items:
        $ref: '#/components/schemas/VersionControlInfo'
    VersionControlType:
      type: string
      enum:
      - GITHUB
      - GITHUB_ENTERPRISE
      - AZURE_DEVOPS_GIT
    errorMessage:
      type: string
    importS3Bucket:
      type: string
      pattern: '[0-9a-z]+[0-9a-z\.\-]*[0-9a-z]+'
      minLength: 0
      maxLength: 63
    importS3Key:
      type: string
      pattern: .*\S.*
      minLength: 0
      maxLength: 1024
