openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: glacier
  x-aws-serviceName: glacier
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-05'
  version: '2012-06-01'
  title: Amazon Glacier
  description: |-
    Amazon S3 Glacier (Glacier) is a storage solution for "cold data."

    Glacier is an extremely low-cost storage service that provides secure, durable, and easy-to-use storage for data backup and archival. With Glacier, customers can store their data cost effectively for months, years, or decades. Glacier also enables customers to offload the administrative burdens of operating and scaling storage to AWS, so they don't have to worry about capacity planning, hardware provisioning, data replication, hardware failure and recovery, or time-consuming hardware migrations.

    Glacier is a great storage choice when low storage cost is paramount and your data is rarely retrieved. If your application requires fast or frequent access to your data, consider using Amazon S3. For more information, see [Amazon Simple Storage Service (Amazon S3)](http://aws.amazon.com/s3/).

    You can store any kind of data in any format. There is no maximum limit on the total amount of data you can store in Glacier.

    If you are a first-time user of Glacier, we recommend that you begin by reading the following sections in the _Amazon S3 Glacier Developer Guide_ :

      * [What is Amazon S3 Glacier](https://docs.aws.amazon.com/amazonglacier/latest/dev/introduction.html) \- This section of the Developer Guide describes the underlying data model, the operations it supports, and the AWS SDKs that you can use to interact with the service.

      * [Getting Started with Amazon S3 Glacier](https://docs.aws.amazon.com/amazonglacier/latest/dev/amazon-glacier-getting-started.html) \- The Getting Started section walks you through the process of creating a vault, uploading archives, creating jobs to download archives, retrieving the job output, and deleting archives.
servers:
- description: The Amazon Glacier regional endpoint
  url: https://glacier.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths: {}
components:
  schemas:
    AccessControlPolicyList:
      type: array
      items:
        $ref: '#/components/schemas/Grant'
    ActionCode:
      type: string
      enum:
      - ArchiveRetrieval
      - InventoryRetrieval
      - Select
    CannedACL:
      type: string
      enum:
      - private
      - public-read
      - public-read-write
      - aws-exec-read
      - authenticated-read
      - bucket-owner-read
      - bucket-owner-full-control
    DataRetrievalRulesList:
      type: array
      items:
        $ref: '#/components/schemas/DataRetrievalRule'
    DateTime:
      type: string
    EncryptionType:
      type: string
      enum:
      - aws:kms
      - AES256
    ExpressionType:
      type: string
      enum:
      - SQL
    FileHeaderInfo:
      type: string
      enum:
      - USE
      - IGNORE
      - NONE
    JobList:
      type: array
      items:
        $ref: '#/components/schemas/GlacierJobDescription'
    NotificationEventList:
      type: array
      items:
        $ref: '#/components/schemas/string'
    NullableLong:
      type: integer
      format: int64
    PartList:
      type: array
      items:
        $ref: '#/components/schemas/PartListElement'
    Permission:
      type: string
      enum:
      - FULL_CONTROL
      - WRITE
      - WRITE_ACP
      - READ
      - READ_ACP
    ProvisionedCapacityList:
      type: array
      items:
        $ref: '#/components/schemas/ProvisionedCapacityDescription'
    QuoteFields:
      type: string
      enum:
      - ALWAYS
      - ASNEEDED
    Size:
      type: integer
      format: int64
    StatusCode:
      type: string
      enum:
      - InProgress
      - Succeeded
      - Failed
    StorageClass:
      type: string
      enum:
      - STANDARD
      - REDUCED_REDUNDANCY
      - STANDARD_IA
    Stream:
      type: string
      format: byte
    TagKey:
      type: string
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/string'
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TagValue:
      type: string
    Type:
      type: string
      enum:
      - AmazonCustomerByEmail
      - CanonicalUser
      - Group
    UploadsList:
      type: array
      items:
        $ref: '#/components/schemas/UploadListElement'
    VaultList:
      type: array
      items:
        $ref: '#/components/schemas/DescribeVaultOutput'
    boolean:
      type: boolean
      default: false
    hashmap:
      type: object
      additionalProperties:
        type: string
    httpstatus:
      type: integer
      default: 0
    long:
      type: integer
      format: int64
      default: 0
    string:
      type: string
