openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: securityhub
  x-aws-serviceName: securityhub
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2018-10-26'
  title: AWS SecurityHub
  description: |-
    Security Hub provides you with a comprehensive view of your security state in Amazon Web Services and helps you assess your Amazon Web Services environment against security industry standards and best practices.

    Security Hub collects security data across Amazon Web Services accounts, Amazon Web Services services, and supported third-party products and helps you analyze your security trends and identify the highest priority security issues.

    To help you manage the security state of your organization, Security Hub supports multiple security standards. These include the Amazon Web Services Foundational Security Best Practices (FSBP) standard developed by Amazon Web Services, and external compliance frameworks such as the Center for Internet Security (CIS), the Payment Card Industry Data Security Standard (PCI DSS), and the National Institute of Standards and Technology (NIST). Each standard includes several security controls, each of which represents a security best practice. Security Hub runs checks against security controls and generates control findings to help you assess your compliance against security best practices.

    In addition to generating control findings, Security Hub also receives findings from other Amazon Web Services services, such as Amazon GuardDuty and Amazon Inspector, and supported third-party products. This gives you a single pane of glass into a variety of security-related issues. You can also send Security Hub findings to other Amazon Web Services services and supported third-party products.

    Security Hub offers automation features that help you triage and remediate security issues. For example, you can use automation rules to automatically update critical findings when a security check fails. You can also leverage the integration with Amazon EventBridge to trigger automatic responses to specific findings.

    This guide, the _Security Hub API Reference_ , provides information about the Security Hub API. This includes supported resources, HTTP methods, parameters, and schemas. If you're new to Security Hub, you might find it helpful to also review the [ _Security Hub User Guide_ ](https://docs.aws.amazon.com/securityhub/latest/userguide/what-is-securityhub.html). The user guide explains key concepts and provides procedures that demonstrate how to use Security Hub features. It also provides information about topics such as integrating Security Hub with other Amazon Web Services services.

    In addition to interacting with Security Hub by making calls to the Security Hub API, you can use a current version of an Amazon Web Services command line tool or SDK. Amazon Web Services provides tools and SDKs that consist of libraries and sample code for various languages and platforms, such as PowerShell, Java, Go, Python, C++, and .NET. These tools and SDKs provide convenient, programmatic access to Security Hub and other Amazon Web Services services . They also handle tasks such as signing requests, managing errors, and retrying requests automatically. For information about installing and using the Amazon Web Services tools and SDKs, see [Tools to Build on Amazon Web Services](http://aws.amazon.com/developer/tools/).

    With the exception of operations that are related to central configuration, Security Hub API requests are executed only in the Amazon Web Services Region that is currently active or in the specific Amazon Web Services Region that you specify in your request. Any configuration or settings change that results from the operation is applied only to that Region. To make the same change in other Regions, call the same API operation in each Region in which you want to apply the change. When you use central configuration, API requests for enabling Security Hub, standards, and controls are executed in the home Region and all linked Regions. For a list of central configuration operations, see the [Central configuration terms and concepts](https://docs.aws.amazon.com/securityhub/latest/userguide/central-configuration-intro.html#central-configuration-concepts) section of the _Security Hub User Guide_.

    The following throttling limits apply to Security Hub API operations.

      * `BatchEnableStandards` \- `RateLimit` of 1 request per second. `BurstLimit` of 1 request per second.

      * `GetFindings` \- `RateLimit` of 3 requests per second. `BurstLimit` of 6 requests per second.

      * `BatchImportFindings` \- `RateLimit` of 10 requests per second. `BurstLimit` of 30 requests per second.

      * `BatchUpdateFindings` \- `RateLimit` of 10 requests per second. `BurstLimit` of 30 requests per second.

      * `UpdateStandardsControl` \- `RateLimit` of 1 request per second. `BurstLimit` of 5 requests per second.

      * All other operations - `RateLimit` of 10 requests per second. `BurstLimit` of 30 requests per second.
servers:
- description: The AWS SecurityHub regional endpoint
  url: https://securityhub.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /administrator:
    post:
      operationId: AcceptAdministratorInvitation
      description: |-
        We recommend using Organizations instead of Security Hub invitations to manage your member accounts. For information, see [Managing Security Hub administrator and member accounts with Organizations](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-accounts-orgs.html) in the _Security Hub User Guide_.

        Accepts the invitation to be a member account and be monitored by the Security Hub administrator account that the invitation was sent from.

        This operation is only used by member accounts that are not added through Organizations.

        When the member account accepts the invitation, permission is granted to the administrator account to view findings generated in the member account.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AdministratorId:
                  $ref: '#/components/schemas/NonEmptyString'
                InvitationId:
                  $ref: '#/components/schemas/NonEmptyString'
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    get:
      operationId: GetAdministratorAccount
      description: |-
        Provides the details for the Security Hub administrator account for the current member account.

        Can be used by both member accounts that are managed using Organizations and accounts that were invited manually.
      parameters: []
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /master:
    post:
      operationId: AcceptInvitation
      description: |-
        This method is deprecated. Instead, use `AcceptAdministratorInvitation`.

        The Security Hub console continues to use `AcceptInvitation`. It will eventually change to use `AcceptAdministratorInvitation`. Any IAM policies that specifically control access to this function must continue to use `AcceptInvitation`. You should also add `AcceptAdministratorInvitation` to your policies to ensure that the correct permissions are in place after the console begins to use `AcceptAdministratorInvitation`.

        Accepts the invitation to be a member account and be monitored by the Security Hub administrator account that the invitation was sent from.

        This operation is only used by member accounts that are not added through Organizations.

        When the member account accepts the invitation, permission is granted to the administrator account to view findings generated in the member account.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MasterId:
                  $ref: '#/components/schemas/NonEmptyString'
                InvitationId:
                  $ref: '#/components/schemas/NonEmptyString'
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    get:
      operationId: GetMasterAccount
      description: |-
        This method is deprecated. Instead, use `GetAdministratorAccount`.

        The Security Hub console continues to use `GetMasterAccount`. It will eventually change to use `GetAdministratorAccount`. Any IAM policies that specifically control access to this function must continue to use `GetMasterAccount`. You should also add `GetAdministratorAccount` to your policies to ensure that the correct permissions are in place after the console begins to use `GetAdministratorAccount`.

        Provides the details for the Security Hub administrator account for the current member account.

        Can be used by both member accounts that are managed using Organizations and accounts that were invited manually.
      parameters: []
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /automationrules/delete:
    post:
      operationId: BatchDeleteAutomationRules
      description: |-
        Deletes one or more automation rules.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AutomationRulesArns:
                  $ref: '#/components/schemas/AutomationRulesArnsList'
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /standards/deregister:
    post:
      operationId: BatchDisableStandards
      description: |-
        Disables the standards specified by the provided `StandardsSubscriptionArns`.

        For more information, see [Security Standards](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards.html) section of the _Security Hub User Guide_.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                StandardsSubscriptionArns:
                  $ref: '#/components/schemas/StandardsSubscriptionArns'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action specified in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
  /standards/register:
    post:
      operationId: BatchEnableStandards
      description: |-
        Enables the standards specified by the provided `StandardsArn`. To obtain the ARN for a standard, use the `DescribeStandards` operation.

        For more information, see the [Security Standards](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards.html) section of the _Security Hub User Guide_.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                StandardsSubscriptionRequests:
                  $ref: '#/components/schemas/StandardsSubscriptionRequests'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action specified in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
  /automationrules/get:
    post:
      operationId: BatchGetAutomationRules
      description: |-
        Retrieves a list of details for automation rules based on rule Amazon Resource Names (ARNs).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AutomationRulesArns:
                  $ref: '#/components/schemas/AutomationRulesArnsList'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action specified in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /configurationPolicyAssociation/batchget:
    post:
      operationId: BatchGetConfigurationPolicyAssociations
      description: |-
        Returns associations between an Security Hub configuration and a batch of target accounts, organizational units, or the root. Only the Security Hub delegated administrator can invoke this operation from the home Region. A configuration can refer to a configuration policy or to a self-managed configuration.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ConfigurationPolicyAssociationIdentifiers:
                  $ref: '#/components/schemas/ConfigurationPolicyAssociationsList'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action specified in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /securityControls/batchGet:
    post:
      operationId: BatchGetSecurityControls
      description: |-
        Provides details about a batch of security controls for the current Amazon Web Services account and Amazon Web Services Region.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SecurityControlIds:
                  $ref: '#/components/schemas/StringList'
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
  /associations/batchGet:
    post:
      operationId: BatchGetStandardsControlAssociations
      description: |-
        For a batch of security controls and standards, identifies whether each control is currently enabled or disabled in a standard.

        Calls to this operation return a `RESOURCE_NOT_FOUND_EXCEPTION` error when the standard subscription for the association has a `NOT_READY_FOR_UPDATES` value for `StandardsControlsUpdatable`.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                StandardsControlAssociationIds:
                  $ref: '#/components/schemas/StandardsControlAssociationIds'
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
  /findings/import:
    post:
      operationId: BatchImportFindings
      description: |-
        Imports security findings generated by a finding provider into Security Hub. This action is requested by the finding provider to import its findings into Security Hub.

        `BatchImportFindings` must be called by one of the following:

          * The Amazon Web Services account that is associated with a finding if you are using the [default product ARN](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-custom-providers.html#securityhub-custom-providers-bfi-reqs) or are a partner sending findings from within a customer's Amazon Web Services account. In these cases, the identifier of the account that you are calling `BatchImportFindings` from needs to be the same as the `AwsAccountId` attribute for the finding.

          * An Amazon Web Services account that Security Hub has allow-listed for an official partner integration. In this case, you can call `BatchImportFindings` from the allow-listed account and send findings from different customer accounts in the same batch.

        The maximum allowed size for a finding is 240 Kb. An error is returned for any finding larger than 240 Kb.

        After a finding is created, `BatchImportFindings` cannot be used to update the following finding fields and objects, which Security Hub customers use to manage their investigation workflow.

          * `Note`

          * `UserDefinedFields`

          * `VerificationState`

          * `Workflow`

        Finding providers also should not use `BatchImportFindings` to update the following attributes.

          * `Confidence`

          * `Criticality`

          * `RelatedFindings`

          * `Severity`

          * `Types`

        Instead, finding providers use `FindingProviderFields` to provide values for these attributes.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Findings:
                  $ref: '#/components/schemas/BatchImportFindingsRequestFindingList'
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
  /automationrules/update:
    patch:
      operationId: BatchUpdateAutomationRules
      description: |-
        Updates one or more automation rules based on rule Amazon Resource Names (ARNs) and input parameters.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                UpdateAutomationRulesRequestItems:
                  $ref: '#/components/schemas/UpdateAutomationRulesRequestItemsList'
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /findings/batchupdate:
    patch:
      operationId: BatchUpdateFindings
      description: |-
        Used by Security Hub customers to update information about their investigation into a finding. Requested by administrator accounts or member accounts. Administrator accounts can update findings for their account and their member accounts. Member accounts can update findings for their account.

        Updates from `BatchUpdateFindings` don't affect the value of `UpdatedAt` for a finding.

        Administrator and member accounts can use `BatchUpdateFindings` to update the following finding fields and objects.

          * `Confidence`

          * `Criticality`

          * `Note`

          * `RelatedFindings`

          * `Severity`

          * `Types`

          * `UserDefinedFields`

          * `VerificationState`

          * `Workflow`

        You can configure IAM policies to restrict access to fields and field values. For example, you might not want member accounts to be able to suppress findings or change the finding severity. See [Configuring access to BatchUpdateFindings](https://docs.aws.amazon.com/securityhub/latest/userguide/finding-update-batchupdatefindings.html#batchupdatefindings-configure-access) in the _Security Hub User Guide_.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                FindingIdentifiers:
                  $ref: '#/components/schemas/AwsSecurityFindingIdentifierList'
                Note:
                  $ref: '#/components/schemas/NoteUpdate'
                Severity:
                  $ref: '#/components/schemas/SeverityUpdate'
                VerificationState:
                  $ref: '#/components/schemas/VerificationState'
                Confidence:
                  $ref: '#/components/schemas/RatioScale'
                Criticality:
                  $ref: '#/components/schemas/RatioScale'
                Types:
                  $ref: '#/components/schemas/TypeList'
                UserDefinedFields:
                  $ref: '#/components/schemas/FieldMap'
                Workflow:
                  $ref: '#/components/schemas/WorkflowUpdate'
                RelatedFindings:
                  $ref: '#/components/schemas/RelatedFindingList'
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
  /associations:
    patch:
      operationId: BatchUpdateStandardsControlAssociations
      description: |-
        For a batch of security controls and standards, this operation updates the enablement status of a control in a standard.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                StandardsControlAssociationUpdates:
                  $ref: '#/components/schemas/StandardsControlAssociationUpdates'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action specified in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
    get:
      operationId: ListStandardsControlAssociations
      description: |-
        Specifies whether a control is currently enabled or disabled in each enabled standard in the calling account.

        This operation omits standards control associations for standard subscriptions where `StandardsControlsUpdatable` has value `NOT_READY_FOR_UPDATES`.
      parameters:
      - name: SecurityControlId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/NonEmptyString'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
  /actionTargets:
    post:
      operationId: CreateActionTarget
      description: |-
        Creates a custom action target in Security Hub.

        You can use custom actions on findings and insights in Security Hub to trigger target actions in Amazon CloudWatch Events.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/NonEmptyString'
                Description:
                  $ref: '#/components/schemas/NonEmptyString'
                Id:
                  $ref: '#/components/schemas/NonEmptyString'
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '409':
          description: |-
            The resource specified in the request conflicts with an existing resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
  /automationrules/create:
    post:
      operationId: CreateAutomationRule
      description: |-
        Creates an automation rule based on input parameters.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Tags:
                  $ref: '#/components/schemas/TagMap'
                RuleStatus:
                  $ref: '#/components/schemas/RuleStatus'
                RuleOrder:
                  $ref: '#/components/schemas/RuleOrderValue'
                RuleName:
                  $ref: '#/components/schemas/NonEmptyString'
                Description:
                  $ref: '#/components/schemas/NonEmptyString'
                IsTerminal:
                  $ref: '#/components/schemas/Boolean'
                Criteria:
                  $ref: '#/components/schemas/AutomationRulesFindingFilters'
                Actions:
                  $ref: '#/components/schemas/ActionList'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action specified in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
  /configurationPolicy/create:
    post:
      operationId: CreateConfigurationPolicy
      description: |-
        Creates a configuration policy with the defined configuration. Only the Security Hub delegated administrator can invoke this operation from the home Region.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/NonEmptyString'
                Description:
                  $ref: '#/components/schemas/NonEmptyString'
                ConfigurationPolicy:
                  $ref: '#/components/schemas/Policy'
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action specified in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '409':
          description: |-
            The resource specified in the request conflicts with an existing resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
  /findingAggregator/create:
    post:
      operationId: CreateFindingAggregator
      description: |-
        The _aggregation Region_ is now called the _home Region_.

        Used to enable cross-Region aggregation. This operation can be invoked from the home Region only.

        For information about how cross-Region aggregation works, see [Understanding cross-Region aggregation in Security Hub](https://docs.aws.amazon.com/securityhub/latest/userguide/finding-aggregation.html) in the _Security Hub User Guide_.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                RegionLinkingMode:
                  $ref: '#/components/schemas/NonEmptyString'
                Regions:
                  $ref: '#/components/schemas/StringList'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action specified in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
  /insights:
    post:
      operationId: CreateInsight
      description: |-
        Creates a custom insight in Security Hub. An insight is a consolidation of findings that relate to a security issue that requires attention or remediation.

        To group the related findings in the insight, use the `GroupByAttribute`.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/NonEmptyString'
                Filters:
                  $ref: '#/components/schemas/AwsSecurityFindingFilters'
                GroupByAttribute:
                  $ref: '#/components/schemas/NonEmptyString'
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '409':
          description: |-
            The resource specified in the request conflicts with an existing resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
  /members:
    post:
      operationId: CreateMembers
      description: |-
        Creates a member association in Security Hub between the specified accounts and the account used to make the request, which is the administrator account. If you are integrated with Organizations, then the administrator account is designated by the organization management account.

        `CreateMembers` is always used to add accounts that are not organization members.

        For accounts that are managed using Organizations, `CreateMembers` is only used in the following cases:

          * Security Hub is not configured to automatically add new organization accounts.

          * The account was disassociated or deleted in Security Hub.

        This action can only be used by an account that has Security Hub enabled. To enable Security Hub, you can use the `EnableSecurityHub` operation.

        For accounts that are not organization members, you create the account association and then send an invitation to the member account. To send the invitation, you use the `InviteMembers` operation. If the account owner accepts the invitation, the account becomes a member account in Security Hub.

        Accounts that are managed using Organizations don't receive an invitation. They automatically become a member account in Security Hub.

          * If the organization account does not have Security Hub enabled, then Security Hub and the default standards are automatically enabled. Note that Security Hub cannot be enabled automatically for the organization management account. The organization management account must enable Security Hub before the administrator account enables it as a member account.

          * For organization accounts that already have Security Hub enabled, Security Hub does not make any other changes to those accounts. It does not change their enabled standards or controls.

        A permissions policy is added that permits the administrator account to view the findings generated in the member account.

        To remove the association between the administrator and member accounts, use the `DisassociateFromMasterAccount` or `DisassociateMembers` operation.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AccountDetails:
                  $ref: '#/components/schemas/AccountDetailsList'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action specified in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '409':
          description: |-
            The resource specified in the request conflicts with an existing resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
    get:
      operationId: ListMembers
      description: |-
        Lists details about all member accounts for the current Security Hub administrator account.

        The results include both member accounts that belong to an organization and member accounts that were invited manually.
      parameters:
      - name: OnlyAssociated
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Boolean'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/CrossAccountMaxResults'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
  /invitations/decline:
    post:
      operationId: DeclineInvitations
      description: |-
        We recommend using Organizations instead of Security Hub invitations to manage your member accounts. For information, see [Managing Security Hub administrator and member accounts with Organizations](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-accounts-orgs.html) in the _Security Hub User Guide_.

        Declines invitations to become a Security Hub member account.

        A prospective member account uses this operation to decline an invitation to become a member.

        Only member accounts that aren't part of an Amazon Web Services organization should use this operation. Organization accounts don't receive invitations.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AccountIds:
                  $ref: '#/components/schemas/AccountIdList'
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /actionTargets/{ActionTargetArn+}:
    delete:
      operationId: DeleteActionTarget
      description: |-
        Deletes a custom action target from Security Hub.

        Deleting a custom action target does not affect any findings or insights that were already sent to Amazon CloudWatch Events using the custom action.
      parameters:
      - name: ActionTargetArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NonEmptyString'
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    patch:
      operationId: UpdateActionTarget
      description: |-
        Updates the name and description of a custom action target in Security Hub.
      parameters:
      - name: ActionTargetArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NonEmptyString'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/NonEmptyString'
                Description:
                  $ref: '#/components/schemas/NonEmptyString'
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /configurationPolicy/{Identifier}:
    delete:
      operationId: DeleteConfigurationPolicy
      description: |-
        Deletes a configuration policy. Only the Security Hub delegated administrator can invoke this operation from the home Region. For the deletion to succeed, you must first disassociate a configuration policy from target accounts, organizational units, or the root by invoking the `StartConfigurationPolicyDisassociation` operation.
      parameters:
      - name: Identifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NonEmptyString'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action specified in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '409':
          description: |-
            The resource specified in the request conflicts with an existing resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    patch:
      operationId: UpdateConfigurationPolicy
      description: |-
        Updates a configuration policy. Only the Security Hub delegated administrator can invoke this operation from the home Region.
      parameters:
      - name: Identifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NonEmptyString'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/NonEmptyString'
                Description:
                  $ref: '#/components/schemas/NonEmptyString'
                UpdatedReason:
                  $ref: '#/components/schemas/NonEmptyString'
                ConfigurationPolicy:
                  $ref: '#/components/schemas/Policy'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action specified in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '409':
          description: |-
            The resource specified in the request conflicts with an existing resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /findingAggregator/delete/{FindingAggregatorArn+}:
    delete:
      operationId: DeleteFindingAggregator
      description: |-
        The _aggregation Region_ is now called the _home Region_.

        Deletes a finding aggregator. When you delete the finding aggregator, you stop cross-Region aggregation. Finding replication stops occurring from the linked Regions to the home Region.

        When you stop cross-Region aggregation, findings that were already replicated and sent to the home Region are still visible from the home Region. However, new findings and finding updates are no longer replicated and sent to the home Region.
      parameters:
      - name: FindingAggregatorArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NonEmptyString'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action specified in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /insights/{InsightArn+}:
    delete:
      operationId: DeleteInsight
      description: |-
        Deletes the insight specified by the `InsightArn`.
      parameters:
      - name: InsightArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NonEmptyString'
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    patch:
      operationId: UpdateInsight
      description: |-
        Updates the Security Hub insight identified by the specified insight ARN.
      parameters:
      - name: InsightArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NonEmptyString'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/NonEmptyString'
                Filters:
                  $ref: '#/components/schemas/AwsSecurityFindingFilters'
                GroupByAttribute:
                  $ref: '#/components/schemas/NonEmptyString'
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /invitations/delete:
    post:
      operationId: DeleteInvitations
      description: |-
        We recommend using Organizations instead of Security Hub invitations to manage your member accounts. For information, see [Managing Security Hub administrator and member accounts with Organizations](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-accounts-orgs.html) in the _Security Hub User Guide_.

        Deletes invitations to become a Security Hub member account.

        A Security Hub administrator account can use this operation to delete invitations sent to one or more prospective member accounts.

        This operation is only used to delete invitations that are sent to prospective member accounts that aren't part of an Amazon Web Services organization. Organization accounts don't receive invitations.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AccountIds:
                  $ref: '#/components/schemas/AccountIdList'
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /members/delete:
    post:
      operationId: DeleteMembers
      description: |-
        Deletes the specified member accounts from Security Hub.

        You can invoke this API only to delete accounts that became members through invitation. You can't invoke this API to delete accounts that belong to an Organizations organization.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AccountIds:
                  $ref: '#/components/schemas/AccountIdList'
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /actionTargets/get:
    post:
      operationId: DescribeActionTargets
      description: |-
        Returns a list of the custom action targets in Security Hub in your account.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ActionTargetArns:
                  $ref: '#/components/schemas/ArnList'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /accounts:
    get:
      operationId: DescribeHub
      description: |-
        Returns details about the Hub resource in your account, including the `HubArn` and the time when you enabled Security Hub.
      parameters:
      - name: HubArn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NonEmptyString'
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    delete:
      operationId: DisableSecurityHub
      description: |-
        Disables Security Hub in your account only in the current Amazon Web Services Region. To disable Security Hub in all Regions, you must submit one request per Region where you have enabled Security Hub.

        You can't disable Security Hub in an account that is currently the Security Hub administrator.

        When you disable Security Hub, your existing findings and insights and any Security Hub configuration settings are deleted after 90 days and cannot be recovered. Any standards that were enabled are disabled, and your administrator and member account associations are removed.

        If you want to save your existing findings, you must export them before you disable Security Hub.
      parameters: []
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action specified in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    post:
      operationId: EnableSecurityHub
      description: |-
        Enables Security Hub for your account in the current Region or the Region you specify in the request.

        When you enable Security Hub, you grant to Security Hub the permissions necessary to gather findings from other services that are integrated with Security Hub.

        When you use the `EnableSecurityHub` operation to enable Security Hub, you also automatically enable the following standards:

          * Center for Internet Security (CIS) Amazon Web Services Foundations Benchmark v1.2.0

          * Amazon Web Services Foundational Security Best Practices

        Other standards are not automatically enabled.

        To opt out of automatically enabled standards, set `EnableDefaultStandards` to `false`.

        After you enable Security Hub, to enable a standard, use the `BatchEnableStandards` operation. To disable a standard, use the `BatchDisableStandards` operation.

        To learn more, see the [setup information](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-settingup.html) in the _Security Hub User Guide_.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Tags:
                  $ref: '#/components/schemas/TagMap'
                EnableDefaultStandards:
                  $ref: '#/components/schemas/Boolean'
                ControlFindingGenerator:
                  $ref: '#/components/schemas/ControlFindingGenerator'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action specified in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '409':
          description: |-
            The resource specified in the request conflicts with an existing resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
    patch:
      operationId: UpdateSecurityHubConfiguration
      description: |-
        Updates configuration options for Security Hub.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AutoEnableControls:
                  $ref: '#/components/schemas/Boolean'
                ControlFindingGenerator:
                  $ref: '#/components/schemas/ControlFindingGenerator'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action specified in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /organization/configuration:
    get:
      operationId: DescribeOrganizationConfiguration
      description: |-
        Returns information about the way your organization is configured in Security Hub. Only the Security Hub administrator account can invoke this operation.
      parameters: []
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
    post:
      operationId: UpdateOrganizationConfiguration
      description: |-
        Updates the configuration of your organization in Security Hub. Only the Security Hub administrator account can invoke this operation.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AutoEnable:
                  $ref: '#/components/schemas/Boolean'
                AutoEnableStandards:
                  $ref: '#/components/schemas/AutoEnableStandards'
                OrganizationConfiguration:
                  $ref: '#/components/schemas/OrganizationConfiguration'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action specified in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '409':
          description: |-
            The resource specified in the request conflicts with an existing resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /products:
    get:
      operationId: DescribeProducts
      description: |-
        Returns information about product integrations in Security Hub.

        You can optionally provide an integration ARN. If you provide an integration ARN, then the results only include that integration.

        If you don't provide an integration ARN, then the results include all of the available product integrations.
      parameters:
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: ProductArn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NonEmptyString'
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
  /standards:
    get:
      operationId: DescribeStandards
      description: |-
        Returns a list of the available standards in Security Hub.

        For each standard, the results include the standard ARN, the name, and a description.
      parameters:
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
  /standards/controls/{StandardsSubscriptionArn+}:
    get:
      operationId: DescribeStandardsControls
      description: |-
        Returns a list of security standards controls.

        For each control, the results include information about whether it is currently enabled, the severity, and a link to remediation information.

        This operation returns an empty list for standard subscriptions where `StandardsControlsUpdatable` has value `NOT_READY_FOR_UPDATES`.
      parameters:
      - name: StandardsSubscriptionArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NonEmptyString'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /productSubscriptions/{ProductSubscriptionArn+}:
    delete:
      operationId: DisableImportFindingsForProduct
      description: |-
        Disables the integration of the specified product with Security Hub. After the integration is disabled, findings from that product are no longer sent to Security Hub.
      parameters:
      - name: ProductSubscriptionArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NonEmptyString'
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /organization/admin/disable:
    post:
      operationId: DisableOrganizationAdminAccount
      description: |-
        Disables a Security Hub administrator account. Can only be called by the organization management account.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AdminAccountId:
                  $ref: '#/components/schemas/NonEmptyString'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action specified in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
  /administrator/disassociate:
    post:
      operationId: DisassociateFromAdministratorAccount
      description: |-
        Disassociates the current Security Hub member account from the associated administrator account.

        This operation is only used by accounts that are not part of an organization. For organization accounts, only the administrator account can disassociate a member account.
      parameters: []
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /master/disassociate:
    post:
      operationId: DisassociateFromMasterAccount
      description: |-
        This method is deprecated. Instead, use `DisassociateFromAdministratorAccount`.

        The Security Hub console continues to use `DisassociateFromMasterAccount`. It will eventually change to use `DisassociateFromAdministratorAccount`. Any IAM policies that specifically control access to this function must continue to use `DisassociateFromMasterAccount`. You should also add `DisassociateFromAdministratorAccount` to your policies to ensure that the correct permissions are in place after the console begins to use `DisassociateFromAdministratorAccount`.

        Disassociates the current Security Hub member account from the associated administrator account.

        This operation is only used by accounts that are not part of an organization. For organization accounts, only the administrator account can disassociate a member account.
      parameters: []
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /members/disassociate:
    post:
      operationId: DisassociateMembers
      description: |-
        Disassociates the specified member accounts from the associated administrator account.

        Can be used to disassociate both accounts that are managed using Organizations and accounts that were invited manually.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AccountIds:
                  $ref: '#/components/schemas/AccountIdList'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action specified in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /productSubscriptions:
    post:
      operationId: EnableImportFindingsForProduct
      description: |-
        Enables the integration of a partner product with Security Hub. Integrated products send findings to Security Hub.

        When you enable a product integration, a permissions policy that grants permission for the product to send findings to Security Hub is applied.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ProductArn:
                  $ref: '#/components/schemas/NonEmptyString'
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '409':
          description: |-
            The resource specified in the request conflicts with an existing resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
    get:
      operationId: ListEnabledProductsForImport
      description: |-
        Lists all findings-generating solutions (products) that you are subscribed to receive findings from in Security Hub.
      parameters:
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
  /organization/admin/enable:
    post:
      operationId: EnableOrganizationAdminAccount
      description: |-
        Designates the Security Hub administrator account for an organization. Can only be called by the organization management account.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AdminAccountId:
                  $ref: '#/components/schemas/NonEmptyString'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action specified in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
  /configurationPolicy/get/{Identifier}:
    get:
      operationId: GetConfigurationPolicy
      description: |-
        Provides information about a configuration policy. Only the Security Hub delegated administrator can invoke this operation from the home Region.
      parameters:
      - name: Identifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NonEmptyString'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action specified in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /configurationPolicyAssociation/get:
    post:
      operationId: GetConfigurationPolicyAssociation
      description: |-
        Returns the association between a configuration and a target account, organizational unit, or the root. The configuration can be a configuration policy or self-managed behavior. Only the Security Hub delegated administrator can invoke this operation from the home Region.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Target:
                  $ref: '#/components/schemas/Target'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action specified in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /standards/get:
    post:
      operationId: GetEnabledStandards
      description: |-
        Returns a list of the standards that are currently enabled.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                StandardsSubscriptionArns:
                  $ref: '#/components/schemas/StandardsSubscriptionArns'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
  /findingAggregator/get/{FindingAggregatorArn+}:
    get:
      operationId: GetFindingAggregator
      description: |-
        The _aggregation Region_ is now called the _home Region_.

        Returns the current configuration in the calling account for cross-Region aggregation. A finding aggregator is a resource that establishes the home Region and any linked Regions.
      parameters:
      - name: FindingAggregatorArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NonEmptyString'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action specified in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /findingHistory/get:
    post:
      operationId: GetFindingHistory
      description: |-
        Returns history for a Security Hub finding in the last 90 days. The history includes changes made to any fields in the Amazon Web Services Security Finding Format (ASFF).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                FindingIdentifier:
                  $ref: '#/components/schemas/AwsSecurityFindingIdentifier'
                StartTime:
                  $ref: '#/components/schemas/Timestamp'
                EndTime:
                  $ref: '#/components/schemas/Timestamp'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
  /findings:
    post:
      operationId: GetFindings
      description: |-
        Returns a list of findings that match the specified criteria.

        If cross-Region aggregation is enabled, then when you call `GetFindings` from the home Region, the results include all of the matching findings from both the home Region and linked Regions.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Filters:
                  $ref: '#/components/schemas/AwsSecurityFindingFilters'
                SortCriteria:
                  $ref: '#/components/schemas/SortCriteria'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
    patch:
      operationId: UpdateFindings
      description: |-
        `UpdateFindings` is a deprecated operation. Instead of `UpdateFindings`, use the `BatchUpdateFindings` operation.

        The `UpdateFindings` operation updates the `Note` and `RecordState` of the Security Hub aggregated findings that the filter attributes specify. Any member account that can view the finding can also see the update to the finding.

        Finding updates made with `UpdateFindings` aren't persisted if the same finding is later updated by the finding provider through the `BatchImportFindings` operation. In addition, Security Hub doesn't record updates made with `UpdateFindings` in the finding history.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Filters:
                  $ref: '#/components/schemas/AwsSecurityFindingFilters'
                Note:
                  $ref: '#/components/schemas/NoteUpdate'
                RecordState:
                  $ref: '#/components/schemas/RecordState'
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /insights/results/{InsightArn+}:
    get:
      operationId: GetInsightResults
      description: |-
        Lists the results of the Security Hub insight specified by the insight ARN.
      parameters:
      - name: InsightArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NonEmptyString'
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /insights/get:
    post:
      operationId: GetInsights
      description: |-
        Lists and describes insights for the specified insight ARNs.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                InsightArns:
                  $ref: '#/components/schemas/ArnList'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /invitations/count:
    get:
      operationId: GetInvitationsCount
      description: |-
        We recommend using Organizations instead of Security Hub invitations to manage your member accounts. For information, see [Managing Security Hub administrator and member accounts with Organizations](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-accounts-orgs.html) in the _Security Hub User Guide_.

        Returns the count of all Security Hub membership invitations that were sent to the calling member account, not including the currently accepted invitation.
      parameters: []
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
  /members/get:
    post:
      operationId: GetMembers
      description: |-
        Returns the details for the Security Hub member accounts for the specified account IDs.

        An administrator account can be either the delegated Security Hub administrator account for an organization or an administrator account that enabled Security Hub manually.

        The results include both member accounts that are managed using Organizations and accounts that were invited manually.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AccountIds:
                  $ref: '#/components/schemas/AccountIdList'
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /securityControl/definition:
    get:
      operationId: GetSecurityControlDefinition
      description: |-
        Retrieves the definition of a security control. The definition includes the control title, description, Region availability, parameter definitions, and other details.
      parameters:
      - name: SecurityControlId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/NonEmptyString'
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /members/invite:
    post:
      operationId: InviteMembers
      description: |-
        We recommend using Organizations instead of Security Hub invitations to manage your member accounts. For information, see [Managing Security Hub administrator and member accounts with Organizations](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-accounts-orgs.html) in the _Security Hub User Guide_.

        Invites other Amazon Web Services accounts to become member accounts for the Security Hub administrator account that the invitation is sent from.

        This operation is only used to invite accounts that don't belong to an Amazon Web Services organization. Organization accounts don't receive invitations.

        Before you can use this action to invite a member, you must first use the `CreateMembers` action to create the member account in Security Hub.

        When the account owner enables Security Hub and accepts the invitation to become a member account, the administrator account can view the findings generated in the member account.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AccountIds:
                  $ref: '#/components/schemas/AccountIdList'
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /automationrules/list:
    get:
      operationId: ListAutomationRules
      description: |-
        A list of automation rules and their metadata for the calling account.
      parameters:
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action specified in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
  /configurationPolicy/list:
    get:
      operationId: ListConfigurationPolicies
      description: |-
        Lists the configuration policies that the Security Hub delegated administrator has created for your organization. Only the delegated administrator can invoke this operation from the home Region.
      parameters:
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action specified in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
  /configurationPolicyAssociation/list:
    post:
      operationId: ListConfigurationPolicyAssociations
      description: |-
        Provides information about the associations for your configuration policies and self-managed behavior. Only the Security Hub delegated administrator can invoke this operation from the home Region.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
                Filters:
                  $ref: '#/components/schemas/AssociationFilters'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action specified in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
  /findingAggregator/list:
    get:
      operationId: ListFindingAggregators
      description: |-
        If cross-Region aggregation is enabled, then `ListFindingAggregators` returns the Amazon Resource Name (ARN) of the finding aggregator. You can run this operation from any Amazon Web Services Region.
      parameters:
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action specified in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
  /invitations:
    get:
      operationId: ListInvitations
      description: |-
        We recommend using Organizations instead of Security Hub invitations to manage your member accounts. For information, see [Managing Security Hub administrator and member accounts with Organizations](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-accounts-orgs.html) in the _Security Hub User Guide_.

        Lists all Security Hub membership invitations that were sent to the calling account.

        Only accounts that are managed by invitation can use this operation. Accounts that are managed using the integration with Organizations don't receive invitations.
      parameters:
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/CrossAccountMaxResults'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
  /organization/admin:
    get:
      operationId: ListOrganizationAdminAccounts
      description: |-
        Lists the Security Hub administrator accounts. Can only be called by the organization management account.
      parameters:
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AdminsMaxResults'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
  /securityControls/definitions:
    get:
      operationId: ListSecurityControlDefinitions
      description: |-
        Lists all of the security controls that apply to a specified standard.
      parameters:
      - name: StandardsArn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NonEmptyString'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
  /tags/{ResourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Returns a list of tags associated with a resource.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceArn'
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    post:
      operationId: TagResource
      description: |-
        Adds one or more tags to a resource.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    delete:
      operationId: UntagResource
      description: |-
        Removes one or more tags from a resource.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceArn'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeyList'
      responses:
        '200': {}
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /configurationPolicyAssociation/associate:
    post:
      operationId: StartConfigurationPolicyAssociation
      description: |-
        Associates a target account, organizational unit, or the root with a specified configuration. The target can be associated with a configuration policy or self-managed behavior. Only the Security Hub delegated administrator can invoke this operation from the home Region.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ConfigurationPolicyIdentifier:
                  $ref: '#/components/schemas/NonEmptyString'
                Target:
                  $ref: '#/components/schemas/Target'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action specified in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /configurationPolicyAssociation/disassociate:
    post:
      operationId: StartConfigurationPolicyDisassociation
      description: |-
        Disassociates a target account, organizational unit, or the root from a specified configuration. When you disassociate a configuration from its target, the target inherits the configuration of the closest parent. If there’s no configuration to inherit, the target retains its settings but becomes a self-managed account. A target can be disassociated from a configuration policy or self-managed behavior. Only the Security Hub delegated administrator can invoke this operation from the home Region.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Target:
                  $ref: '#/components/schemas/Target'
                ConfigurationPolicyIdentifier:
                  $ref: '#/components/schemas/NonEmptyString'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action specified in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /findingAggregator/update:
    patch:
      operationId: UpdateFindingAggregator
      description: |-
        The _aggregation Region_ is now called the _home Region_.

        Updates cross-Region aggregation settings. You can use this operation to update the Region linking mode and the list of included or excluded Amazon Web Services Regions. However, you can't use this operation to change the home Region.

        You can invoke this operation from the current home Region only.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                FindingAggregatorArn:
                  $ref: '#/components/schemas/NonEmptyString'
                RegionLinkingMode:
                  $ref: '#/components/schemas/NonEmptyString'
                Regions:
                  $ref: '#/components/schemas/StringList'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action specified in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /securityControl/update:
    patch:
      operationId: UpdateSecurityControl
      description: |-
        Updates the properties of a security control.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SecurityControlId:
                  $ref: '#/components/schemas/NonEmptyString'
                Parameters:
                  $ref: '#/components/schemas/Parameters'
                LastUpdateReason:
                  $ref: '#/components/schemas/AlphaNumericNonEmptyString'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action specified in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because it conflicts with the resource's availability. For example, you tried to update a security control that's currently in the `UPDATING` state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '429':
          description: |-
            The request was rejected because it attempted to create resources beyond the current Amazon Web Services account or throttling limits. The error code describes the limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /standards/control/{StandardsControlArn+}:
    patch:
      operationId: UpdateStandardsControl
      description: |-
        Used to control whether an individual security standard control is enabled or disabled.

        Calls to this operation return a `RESOURCE_NOT_FOUND_EXCEPTION` error when the standard subscription for the control has `StandardsControlsUpdatable` value `NOT_READY_FOR_UPDATES`.
      parameters:
      - name: StandardsControlArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NonEmptyString'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ControlStatus:
                  $ref: '#/components/schemas/ControlStatus'
                DisabledReason:
                  $ref: '#/components/schemas/NonEmptyString'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action specified in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '401':
          description: |-
            The account doesn't have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidAccessException'
        '400':
          description: |-
            The request was rejected because you supplied an invalid or out-of-range value for an input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '404':
          description: |-
            The request was rejected because we can't find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
components:
  schemas:
    AcceptAdministratorInvitationRequest:
      type: object
      properties:
        AdministratorId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The account ID of the Security Hub administrator account that
            sent the invitation.
        InvitationId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the invitation sent from the Security Hub
            administrator account.
      required:
      - AdministratorId
      - InvitationId
    AcceptAdministratorInvitationResponse:
      type: object
      properties: {}
    AcceptInvitationRequest:
      type: object
      properties:
        MasterId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The account ID of the Security Hub administrator account that
            sent the invitation.
        InvitationId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the invitation sent from the Security Hub
            administrator account.
      required:
      - MasterId
      - InvitationId
    AcceptInvitationResponse:
      type: object
      properties: {}
    AccessDeniedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/NonEmptyString'
        Code:
          $ref: '#/components/schemas/NonEmptyString'
      description: You don't have permission to perform the action specified in the
        request.
    AccountDetails:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The ID of an Amazon Web Services account.
        Email:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The email of an Amazon Web Services account.
      required:
      - AccountId
      description: The details of an Amazon Web Services account.
    AccountDetailsList:
      type: array
      items:
        $ref: '#/components/schemas/AccountDetails'
    AccountId:
      type: string
    AccountIdList:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
    Action:
      type: object
      properties:
        ActionType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "The type of action that was detected. The possible action\
            \ types are:\n\n  * `NETWORK_CONNECTION`\n\n  * `AWS_API_CALL`\n\n  *\
            \ `DNS_REQUEST`\n\n  * `PORT_PROBE`"
        NetworkConnectionAction:
          allOf:
          - $ref: '#/components/schemas/NetworkConnectionAction'
          description: Included if `ActionType` is `NETWORK_CONNECTION`. Provides
            details about the network connection that was detected.
        AwsApiCallAction:
          allOf:
          - $ref: '#/components/schemas/AwsApiCallAction'
          description: Included if `ActionType` is `AWS_API_CALL`. Provides details
            about the API call that was detected.
        DnsRequestAction:
          allOf:
          - $ref: '#/components/schemas/DnsRequestAction'
          description: Included if `ActionType` is `DNS_REQUEST`. Provides details
            about the DNS request that was detected.
        PortProbeAction:
          allOf:
          - $ref: '#/components/schemas/PortProbeAction'
          description: Included if `ActionType` is `PORT_PROBE`. Provides details
            about the port probe that was detected.
      description: "Provides details about one of the following actions that affects\
        \ or that was taken on a resource:\n\n  * A remote IP address issued an Amazon\
        \ Web Services API call\n\n  * A DNS request was received\n\n  * A remote\
        \ IP address attempted to connect to an EC2 instance\n\n  * A remote IP address\
        \ attempted a port probe on an EC2 instance"
    ActionList:
      type: array
      items:
        $ref: '#/components/schemas/AutomationRulesAction'
    ActionLocalIpDetails:
      type: object
      properties:
        IpAddressV4:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The IP address.
      description: Provides information about the IP address where the scanned port
        is located.
    ActionLocalPortDetails:
      type: object
      properties:
        Port:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of the port.
        PortName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The port name of the local connection.


            Length Constraints: 128.'
      description: For `NetworkConnectionAction` and `PortProbeDetails`, `LocalPortDetails`
        provides information about the local port that was involved in the action.
    ActionRemoteIpDetails:
      type: object
      properties:
        IpAddressV4:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The IP address.
        Organization:
          allOf:
          - $ref: '#/components/schemas/IpOrganizationDetails'
          description: The internet service provider (ISP) organization associated
            with the remote IP address.
        Country:
          allOf:
          - $ref: '#/components/schemas/Country'
          description: The country where the remote IP address is located.
        City:
          allOf:
          - $ref: '#/components/schemas/City'
          description: The city where the remote IP address is located.
        GeoLocation:
          allOf:
          - $ref: '#/components/schemas/GeoLocation'
          description: The coordinates of the location of the remote IP address.
      description: For `AwsApiAction`, `NetworkConnectionAction`, and `PortProbeAction`,
        `RemoteIpDetails` provides information about the remote IP address that was
        involved in the action.
    ActionRemotePortDetails:
      type: object
      properties:
        Port:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of the port.
        PortName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The port name of the remote connection.


            Length Constraints: 128.'
      description: Provides information about the remote port that was involved in
        an attempted network connection.
    ActionTarget:
      type: object
      properties:
        ActionTargetArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN for the target action.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the action target.
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The description of the target action.
      required:
      - ActionTargetArn
      - Name
      - Description
      description: An `ActionTarget` object.
    ActionTargetList:
      type: array
      items:
        $ref: '#/components/schemas/ActionTarget'
    Actor:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the threat actor.
        User:
          allOf:
          - $ref: '#/components/schemas/ActorUser'
          description: Contains information about the user credentials used by the
            threat actor.
        Session:
          allOf:
          - $ref: '#/components/schemas/ActorSession'
          description: Contains information about the user session where the activity
            initiated.
      description: Information about the threat actor identified in an Amazon GuardDuty
        Extended Threat Detection attack sequence. GuardDuty generates an attack sequence
        finding when multiple events align to a potentially suspicious activity. To
        receive GuardDuty attack sequence findings in Security Hub, you must have
        GuardDuty enabled. For more information, see [GuardDuty Extended Threat Detection
        ](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty-extended-threat-detection.html)
        in the _Amazon GuardDuty User Guide_.
    ActorSession:
      type: object
      properties:
        Uid:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Unique identifier of the session.
        MfaStatus:
          allOf:
          - $ref: '#/components/schemas/ActorSessionMfaStatus'
          description: 'Indicates whether multi-factor authentication (MFA) was used
            for authentication during the session.


            In CloudTrail, you can find this value as `userIdentity.sessionContext.attributes.mfaAuthenticated`.'
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: 'The timestamp for when the session was created.


            In CloudTrail, you can find this value as `userIdentity.sessionContext.attributes.creationDate`.'
        Issuer:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The issuer of the session.


            In CloudTrail, you can find this value as `userIdentity.sessionContext.sessionIssuer.arn`.'
      description: Contains information about the authenticated session used by the
        threat actor identified in an Amazon GuardDuty Extended Threat Detection attack
        sequence. GuardDuty generates an attack sequence finding when multiple events
        align to a potentially suspicious activity. To receive GuardDuty attack sequence
        findings in Security Hub, you must have GuardDuty enabled. For more information,
        see [GuardDuty Extended Threat Detection ](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty-extended-threat-detection.html)
        in the _Amazon GuardDuty User Guide_.
    ActorSessionMfaStatus:
      type: string
      enum:
      - ENABLED
      - DISABLED
    ActorUser:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the threat actor.
        Uid:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The unique identifier of the threat actor.
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of user.
        CredentialUid:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Unique identifier of the threat actor’s user credentials.
        Account:
          allOf:
          - $ref: '#/components/schemas/UserAccount'
          description: The account of the threat actor.
      description: Contains information about the credentials used by the threat actor
        identified in an Amazon GuardDuty Extended Threat Detection attack sequence.
        GuardDuty generates an attack sequence finding when multiple events align
        to a potentially suspicious activity. To receive GuardDuty attack sequence
        findings in Security Hub, you must have GuardDuty enabled. For more information,
        see [GuardDuty Extended Threat Detection ](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty-extended-threat-detection.html)
        in the _Amazon GuardDuty User Guide_.
    ActorsList:
      type: array
      items:
        $ref: '#/components/schemas/Actor'
    Adjustment:
      type: object
      properties:
        Metric:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The metric to adjust.
        Reason:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The reason for the adjustment.
      description: An adjustment to the CVSS metric.
    AdjustmentList:
      type: array
      items:
        $ref: '#/components/schemas/Adjustment'
    AdminAccount:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Web Services account identifier of the Security
            Hub administrator account.
        Status:
          allOf:
          - $ref: '#/components/schemas/AdminStatus'
          description: The current status of the Security Hub administrator account.
            Indicates whether the account is currently enabled as a Security Hub administrator.
      description: Represents a Security Hub administrator account designated by an
        organization management account.
    AdminAccounts:
      type: array
      items:
        $ref: '#/components/schemas/AdminAccount'
    AdminStatus:
      type: string
      enum:
      - ENABLED
      - DISABLE_IN_PROGRESS
    AdminsMaxResults:
      type: integer
      minimum: 1
      maximum: 10
    AlphaNumericNonEmptyString:
      type: string
      pattern: ^([^\u0000-\u007F]|[-_ a-zA-Z0-9])+$
    ArnList:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
    AssociatedStandard:
      type: object
      properties:
        StandardsId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The unique identifier of a standard in which a control is enabled.
            This field consists of the resource portion of the Amazon Resource Name
            (ARN) returned for a standard in the [DescribeStandards](https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_DescribeStandards.html)
            API response.
      description: Information about an enabled security standard in which a security
        control is enabled.
    AssociatedStandardsList:
      type: array
      items:
        $ref: '#/components/schemas/AssociatedStandard'
    AssociationFilters:
      type: object
      properties:
        ConfigurationPolicyId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN or UUID of the configuration policy.
        AssociationType:
          allOf:
          - $ref: '#/components/schemas/AssociationType'
          description: Indicates whether the association between a target and a configuration
            was directly applied by the Security Hub delegated administrator or inherited
            from a parent.
        AssociationStatus:
          allOf:
          - $ref: '#/components/schemas/ConfigurationPolicyAssociationStatus'
          description: The current status of the association between a target and
            a configuration policy.
      description: Options for filtering the `ListConfigurationPolicyAssociations`
        response. You can filter by the Amazon Resource Name (ARN) or universally
        unique identifier (UUID) of a configuration policy, `AssociationType`, or
        `AssociationStatus`.
    AssociationSetDetails:
      type: object
      properties:
        AssociationState:
          allOf:
          - $ref: '#/components/schemas/AssociationStateDetails'
          description: The state of the association between a route table and a subnet
            or gateway.
        GatewayId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the internet gateway or virtual private gateway.
        Main:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether this is the main route table.
        RouteTableAssociationId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the association.
        RouteTableId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the route table.
        SubnetId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the subnet. A subnet ID is not returned for an implicit
            association.
      description: The associations between a route table and one or more subnets
        or a gateway.
    AssociationSetList:
      type: array
      items:
        $ref: '#/components/schemas/AssociationSetDetails'
    AssociationStateDetails:
      type: object
      properties:
        State:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The state of the association.
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The status message, if applicable.
      description: Describes the state of an association between a route table and
        a subnet or gateway.
    AssociationStatus:
      type: string
      enum:
      - ENABLED
      - DISABLED
    AssociationType:
      type: string
      enum:
      - INHERITED
      - APPLIED
    AutoEnableStandards:
      type: string
      enum:
      - NONE
      - DEFAULT
    AutomationRulesAction:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/AutomationRulesActionType'
          description: Specifies the type of action that Security Hub takes when a
            finding matches the defined criteria of a rule.
        FindingFieldsUpdate:
          allOf:
          - $ref: '#/components/schemas/AutomationRulesFindingFieldsUpdate'
          description: Specifies that the automation rule action is an update to a
            finding field.
      description: One or more actions that Security Hub takes when a finding matches
        the defined criteria of a rule.
    AutomationRulesActionType:
      type: string
      enum:
      - FINDING_FIELDS_UPDATE
    AutomationRulesArnsList:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
    AutomationRulesConfig:
      type: object
      properties:
        RuleArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of a rule.
        RuleStatus:
          allOf:
          - $ref: '#/components/schemas/RuleStatus'
          description: Whether the rule is active after it is created. If this parameter
            is equal to `ENABLED`, Security Hub starts applying the rule to findings
            and finding updates after the rule is created.
        RuleOrder:
          allOf:
          - $ref: '#/components/schemas/RuleOrderValue'
          description: An integer ranging from 1 to 1000 that represents the order
            in which the rule action is applied to findings. Security Hub applies
            rules with lower values for this parameter first.
        RuleName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the rule.
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A description of the rule.
        IsTerminal:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether a rule is the last to be applied with respect
            to a finding that matches the rule criteria. This is useful when a finding
            matches the criteria for multiple rules, and each rule has different actions.
            If a rule is terminal, Security Hub applies the rule action to a finding
            that matches the rule criteria and doesn't evaluate other rules for the
            finding. By default, a rule isn't terminal.
        Criteria:
          allOf:
          - $ref: '#/components/schemas/AutomationRulesFindingFilters'
          description: A set of [Amazon Web Services Security Finding Format](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-findings-format.html)
            finding field attributes and corresponding expected values that Security
            Hub uses to filter findings. If a rule is enabled and a finding matches
            the conditions specified in this parameter, Security Hub applies the rule
            action to the finding.
        Actions:
          allOf:
          - $ref: '#/components/schemas/ActionList'
          description: One or more actions to update finding fields if a finding matches
            the defined criteria of the rule.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'A timestamp that indicates when the rule was created.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'A timestamp that indicates when the rule was most recently
            updated.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        CreatedBy:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The principal that created a rule.
      description: Defines the configuration of an automation rule.
    AutomationRulesConfigList:
      type: array
      items:
        $ref: '#/components/schemas/AutomationRulesConfig'
    AutomationRulesFindingFieldsUpdate:
      type: object
      properties:
        Note:
          $ref: '#/components/schemas/NoteUpdate'
        Severity:
          $ref: '#/components/schemas/SeverityUpdate'
        VerificationState:
          allOf:
          - $ref: '#/components/schemas/VerificationState'
          description: The rule action updates the `VerificationState` field of a
            finding.
        Confidence:
          allOf:
          - $ref: '#/components/schemas/RatioScale'
          description: The rule action updates the `Confidence` field of a finding.
        Criticality:
          allOf:
          - $ref: '#/components/schemas/RatioScale'
          description: The rule action updates the `Criticality` field of a finding.
        Types:
          allOf:
          - $ref: '#/components/schemas/TypeList'
          description: The rule action updates the `Types` field of a finding.
        UserDefinedFields:
          allOf:
          - $ref: '#/components/schemas/FieldMap'
          description: The rule action updates the `UserDefinedFields` field of a
            finding.
        Workflow:
          $ref: '#/components/schemas/WorkflowUpdate'
        RelatedFindings:
          allOf:
          - $ref: '#/components/schemas/RelatedFindingList'
          description: The rule action updates the `RelatedFindings` field of a finding.
      description: Identifies the finding fields that the automation rule action updates
        when a finding matches the defined criteria.
    AutomationRulesFindingFilters:
      type: object
      properties:
        ProductArn:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: 'The Amazon Resource Name (ARN) for a third-party product that
            generated a finding in Security Hub.


            Array Members: Minimum number of 1 item. Maximum number of 20 items.'
        AwsAccountId:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: 'The Amazon Web Services account ID in which a finding was
            generated.


            Array Members: Minimum number of 1 item. Maximum number of 100 items.'
        Id:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: 'The product-specific identifier for a finding.


            Array Members: Minimum number of 1 item. Maximum number of 20 items.'
        GeneratorId:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: 'The identifier for the solution-specific component that generated
            a finding.


            Array Members: Minimum number of 1 item. Maximum number of 100 items.'
        Type:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: 'One or more finding types in the format of namespace/category/classifier
            that classify a finding. For a list of namespaces, classifiers, and categories,
            see [Types taxonomy for ASFF](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-findings-format-type-taxonomy.html)
            in the _Security Hub User Guide_.


            Array Members: Minimum number of 1 item. Maximum number of 20 items.'
        FirstObservedAt:
          allOf:
          - $ref: '#/components/schemas/DateFilterList'
          description: 'A timestamp that indicates when the potential security issue
            captured by a finding was first observed by the security findings product.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).


            Array Members: Minimum number of 1 item. Maximum number of 20 items.'
        LastObservedAt:
          allOf:
          - $ref: '#/components/schemas/DateFilterList'
          description: 'A timestamp that indicates when the security findings provider
            most recently observed a change in the resource that is involved in the
            finding.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).


            Array Members: Minimum number of 1 item. Maximum number of 20 items.'
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/DateFilterList'
          description: 'A timestamp that indicates when this finding record was created.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).


            Array Members: Minimum number of 1 item. Maximum number of 20 items.'
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/DateFilterList'
          description: 'A timestamp that indicates when the finding record was most
            recently updated.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).


            Array Members: Minimum number of 1 item. Maximum number of 20 items.'
        Confidence:
          allOf:
          - $ref: '#/components/schemas/NumberFilterList'
          description: 'The likelihood that a finding accurately identifies the behavior
            or issue that it was intended to identify. `Confidence` is scored on a
            0–100 basis using a ratio scale. A value of `0` means 0 percent confidence,
            and a value of `100` means 100 percent confidence. For example, a data
            exfiltration detection based on a statistical deviation of network traffic
            has low confidence because an actual exfiltration hasn''t been verified.
            For more information, see [Confidence](https://docs.aws.amazon.com/securityhub/latest/userguide/asff-top-level-attributes.html#asff-confidence)
            in the _Security Hub User Guide_.


            Array Members: Minimum number of 1 item. Maximum number of 20 items.'
        Criticality:
          allOf:
          - $ref: '#/components/schemas/NumberFilterList'
          description: 'The level of importance that is assigned to the resources
            that are associated with a finding. `Criticality` is scored on a 0–100
            basis, using a ratio scale that supports only full integers. A score of
            `0` means that the underlying resources have no criticality, and a score
            of `100` is reserved for the most critical resources. For more information,
            see [Criticality](https://docs.aws.amazon.com/securityhub/latest/userguide/asff-top-level-attributes.html#asff-criticality)
            in the _Security Hub User Guide_.


            Array Members: Minimum number of 1 item. Maximum number of 20 items.'
        Title:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: 'A finding''s title.


            Array Members: Minimum number of 1 item. Maximum number of 100 items.'
        Description:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: 'A finding''s description.


            Array Members: Minimum number of 1 item. Maximum number of 20 items.'
        SourceUrl:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: 'Provides a URL that links to a page about the current finding
            in the finding product.


            Array Members: Minimum number of 1 item. Maximum number of 20 items.'
        ProductName:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: 'Provides the name of the product that generated the finding.
            For control-based findings, the product name is Security Hub.


            Array Members: Minimum number of 1 item. Maximum number of 20 items.'
        CompanyName:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: 'The name of the company for the product that generated the
            finding. For control-based findings, the company is Amazon Web Services.


            Array Members: Minimum number of 1 item. Maximum number of 20 items.'
        SeverityLabel:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: 'The severity value of the finding.


            Array Members: Minimum number of 1 item. Maximum number of 20 items.'
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: 'The type of resource that the finding pertains to.


            Array Members: Minimum number of 1 item. Maximum number of 20 items.'
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: 'The identifier for the given resource type. For Amazon Web
            Services resources that are identified by Amazon Resource Names (ARNs),
            this is the ARN. For Amazon Web Services resources that lack ARNs, this
            is the identifier as defined by the Amazon Web Services service that created
            the resource. For non-Amazon Web Services resources, this is a unique
            identifier that is associated with the resource.


            Array Members: Minimum number of 1 item. Maximum number of 100 items.'
        ResourcePartition:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: 'The partition in which the resource that the finding pertains
            to is located. A partition is a group of Amazon Web Services Regions.
            Each Amazon Web Services account is scoped to one partition.


            Array Members: Minimum number of 1 item. Maximum number of 20 items.'
        ResourceRegion:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: 'The Amazon Web Services Region where the resource that a finding
            pertains to is located.


            Array Members: Minimum number of 1 item. Maximum number of 20 items.'
        ResourceTags:
          allOf:
          - $ref: '#/components/schemas/MapFilterList'
          description: 'A list of Amazon Web Services tags associated with a resource
            at the time the finding was processed.


            Array Members: Minimum number of 1 item. Maximum number of 20 items.'
        ResourceDetailsOther:
          allOf:
          - $ref: '#/components/schemas/MapFilterList'
          description: 'Custom fields and values about the resource that a finding
            pertains to.


            Array Members: Minimum number of 1 item. Maximum number of 20 items.'
        ComplianceStatus:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: 'The result of a security check. This field is only used for
            findings generated from controls.


            Array Members: Minimum number of 1 item. Maximum number of 20 items.'
        ComplianceSecurityControlId:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: 'The security control ID for which a finding was generated.
            Security control IDs are the same across standards.


            Array Members: Minimum number of 1 item. Maximum number of 20 items.'
        ComplianceAssociatedStandardsId:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: 'The unique identifier of a standard in which a control is
            enabled. This field consists of the resource portion of the Amazon Resource
            Name (ARN) returned for a standard in the [DescribeStandards](https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_DescribeStandards.html)
            API response.


            Array Members: Minimum number of 1 item. Maximum number of 20 items.'
        VerificationState:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: 'Provides the veracity of a finding.


            Array Members: Minimum number of 1 item. Maximum number of 20 items.'
        WorkflowStatus:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: 'Provides information about the status of the investigation
            into a finding.


            Array Members: Minimum number of 1 item. Maximum number of 20 items.'
        RecordState:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: 'Provides the current state of a finding.


            Array Members: Minimum number of 1 item. Maximum number of 20 items.'
        RelatedFindingsProductArn:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: 'The ARN for the product that generated a related finding.


            Array Members: Minimum number of 1 item. Maximum number of 20 items.'
        RelatedFindingsId:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: 'The product-generated identifier for a related finding.


            Array Members: Minimum number of 1 item. Maximum number of 20 items.'
        NoteText:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: 'The text of a user-defined note that''s added to a finding.


            Array Members: Minimum number of 1 item. Maximum number of 20 items.'
        NoteUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/DateFilterList'
          description: 'The timestamp of when the note was updated.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).


            Array Members: Minimum number of 1 item. Maximum number of 20 items.'
        NoteUpdatedBy:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: 'The principal that created a note.


            Array Members: Minimum number of 1 item. Maximum number of 20 items.'
        UserDefinedFields:
          allOf:
          - $ref: '#/components/schemas/MapFilterList'
          description: 'A list of user-defined name and value string pairs added to
            a finding.


            Array Members: Minimum number of 1 item. Maximum number of 20 items.'
        ResourceApplicationArn:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: 'The Amazon Resource Name (ARN) of the application that is
            related to a finding.


            Array Members: Minimum number of 1 item. Maximum number of 20 items.'
        ResourceApplicationName:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: 'The name of the application that is related to a finding.


            Array Members: Minimum number of 1 item. Maximum number of 20 items.'
        AwsAccountName:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: 'The name of the Amazon Web Services account in which a finding
            was generated.


            Array Members: Minimum number of 1 item. Maximum number of 20 items.'
      description: The criteria that determine which findings a rule applies to.
    AutomationRulesMetadata:
      type: object
      properties:
        RuleArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) for the rule.
        RuleStatus:
          allOf:
          - $ref: '#/components/schemas/RuleStatus'
          description: Whether the rule is active after it is created. If this parameter
            is equal to `ENABLED`, Security Hub starts applying the rule to findings
            and finding updates after the rule is created. To change the value of
            this parameter after creating a rule, use [ `BatchUpdateAutomationRules`
            ](https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_BatchUpdateAutomationRules.html).
        RuleOrder:
          allOf:
          - $ref: '#/components/schemas/RuleOrderValue'
          description: An integer ranging from 1 to 1000 that represents the order
            in which the rule action is applied to findings. Security Hub applies
            rules with lower values for this parameter first.
        RuleName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the rule.
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A description of the rule.
        IsTerminal:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether a rule is the last to be applied with respect
            to a finding that matches the rule criteria. This is useful when a finding
            matches the criteria for multiple rules, and each rule has different actions.
            If a rule is terminal, Security Hub applies the rule action to a finding
            that matches the rule criteria and doesn't evaluate other rules for the
            finding. By default, a rule isn't terminal.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'A timestamp that indicates when the rule was created.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'A timestamp that indicates when the rule was most recently
            updated.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        CreatedBy:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The principal that created a rule.
      description: Metadata for automation rules in the calling account. The response
        includes rules with a `RuleStatus` of `ENABLED` and `DISABLED`.
    AutomationRulesMetadataList:
      type: array
      items:
        $ref: '#/components/schemas/AutomationRulesMetadata'
    AvailabilityZone:
      type: object
      properties:
        ZoneName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the Availability Zone.
        SubnetId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the subnet. You can specify one subnet per Availability
            Zone.
      description: Information about an Availability Zone.
    AvailabilityZones:
      type: array
      items:
        $ref: '#/components/schemas/AvailabilityZone'
    AwsAmazonMqBrokerDetails:
      type: object
      properties:
        AuthenticationStrategy:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The authentication strategy used to secure the broker. The
            default is `SIMPLE`.
        AutoMinorVersionUpgrade:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether automatically upgrade new minor versions for brokers,
            as new versions are released and supported by Amazon MQ. Automatic upgrades
            occur during the scheduled maintenance window of the broker or after a
            manual broker reboot.
        BrokerArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the broker.
        BrokerName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The broker's name.
        DeploymentMode:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The broker's deployment mode.
        EncryptionOptions:
          allOf:
          - $ref: '#/components/schemas/AwsAmazonMqBrokerEncryptionOptionsDetails'
          description: Encryption options for the broker. Doesn’t apply to RabbitMQ
            brokers.
        EngineType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of broker engine.
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The version of the broker engine.
        HostInstanceType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The broker's instance type.
        BrokerId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The unique ID that Amazon MQ generates for the broker.
        LdapServerMetadata:
          allOf:
          - $ref: '#/components/schemas/AwsAmazonMqBrokerLdapServerMetadataDetails'
          description: The metadata of the Lightweight Directory Access Protocol (LDAP)
            server used to authenticate and authorize connections to the broker. This
            is an optional failover server.
        Logs:
          allOf:
          - $ref: '#/components/schemas/AwsAmazonMqBrokerLogsDetails'
          description: Turns on Amazon CloudWatch logging for brokers.
        MaintenanceWindowStartTime:
          allOf:
          - $ref: '#/components/schemas/AwsAmazonMqBrokerMaintenanceWindowStartTimeDetails'
          description: The scheduled time period (UTC) during which Amazon MQ begins
            to apply pending updates or patches to the broker.
        PubliclyAccessible:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Permits connections from applications outside of the VPC that
            hosts the broker's subnets.
        SecurityGroups:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The list of rules (one minimum, 125 maximum) that authorize
            connections to brokers.
        StorageType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The broker's storage type.
        SubnetIds:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The list of groups that define which subnets and IP ranges
            the broker can use from different Availability Zones.
        Users:
          allOf:
          - $ref: '#/components/schemas/AwsAmazonMqBrokerUsersList'
          description: The list of all broker usernames for the specified broker.
            Doesn't apply to RabbitMQ brokers.
      description: Provides details about an Amazon MQ message broker. A message broker
        allows software applications and components to communicate using various programming
        languages, operating systems, and formal messaging protocols.
    AwsAmazonMqBrokerEncryptionOptionsDetails:
      type: object
      properties:
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The KMS key that’s used to encrypt your data at rest. If not
            provided, Amazon MQ will use a default KMS key to encrypt your data.
        UseAwsOwnedKey:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies that an KMS key should be used for at-rest encryption.
            Set to `true` by default if no value is provided (for example, for RabbitMQ
            brokers).
      description: Provides details about broker encryption options.
    AwsAmazonMqBrokerLdapServerMetadataDetails:
      type: object
      properties:
        Hosts:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: Specifies the location of the LDAP server, such as Amazon Web
            Services Directory Service for Microsoft Active Directory.
        RoleBase:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The distinguished name of the node in the directory information
            tree (DIT) to search for roles or groups.
        RoleName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The group name attribute in a role entry whose value is the
            name of that role.
        RoleSearchMatching:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The LDAP search filter used to find roles within the `roleBase`.
        RoleSearchSubtree:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: The directory search scope for the role. If set to `true`,
            the scope is to search the entire subtree.
        ServiceAccountUsername:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A username for the service account, which is an account in
            your LDAP server that has access to initiate a connection.
        UserBase:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Selects a particular subtree of the directory information tree
            (DIT) to search for user entries.
        UserRoleName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the LDAP attribute in the user's directory entry
            for the user's group membership.
        UserSearchMatching:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The LDAP search filter used to find users within the `userBase`.
        UserSearchSubtree:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: The directory search scope for the user. If set to true, the
            scope is to search the entire subtree.
      description: The metadata of the Lightweight Directory Access Protocol (LDAP)
        server used to authenticate and authorize connections to the broker. This
        is an optional failover server.
    AwsAmazonMqBrokerLogsDetails:
      type: object
      properties:
        Audit:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Activates audit logging. Every user management action made
            using JMX or the ActiveMQ Web Console is logged. Doesn't apply to RabbitMQ
            brokers.
        General:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Activates general logging.
        AuditLogGroup:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The location of the CloudWatch Logs log group where audit logs
            are sent.
        GeneralLogGroup:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The location of the CloudWatch Logs log group where general
            logs are sent.
        Pending:
          allOf:
          - $ref: '#/components/schemas/AwsAmazonMqBrokerLogsPendingDetails'
          description: The list of information about logs that are to be turned on
            for the specified broker.
      description: Provides information about logs to be activated for the specified
        broker.
    AwsAmazonMqBrokerLogsPendingDetails:
      type: object
      properties:
        Audit:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Activates audit logging. Every user management action made
            using JMX or the ActiveMQ Web Console is logged. Doesn't apply to RabbitMQ
            brokers.
        General:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Activates general logging.
      description: Provides information about logs to be activated for the specified
        broker.
    AwsAmazonMqBrokerMaintenanceWindowStartTimeDetails:
      type: object
      properties:
        DayOfWeek:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The day of the week on which the maintenance window falls.
        TimeOfDay:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The time, in 24-hour format, on which the maintenance window
            falls.
        TimeZone:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The time zone in either the Country/City format or the UTC
            offset format. UTC is the default format.
      description: The scheduled time period (UTC) during which Amazon MQ begins to
        apply pending updates or patches to the broker.
    AwsAmazonMqBrokerUsersDetails:
      type: object
      properties:
        PendingChange:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of change pending for the broker user.
        Username:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The username of the broker user.
      description: Provides details about the broker usernames for the specified broker.
        Doesn't apply to RabbitMQ brokers.
    AwsAmazonMqBrokerUsersList:
      type: array
      items:
        $ref: '#/components/schemas/AwsAmazonMqBrokerUsersDetails'
    AwsApiCallAction:
      type: object
      properties:
        Api:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The name of the API method that was issued.


            Length Constraints: 128.'
        ServiceName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The name of the Amazon Web Services service that the API method
            belongs to.


            Length Constraints: 128.'
        CallerType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Indicates whether the API call originated from a remote IP
            address (`remoteip`) or from a DNS domain (`domain`).
        RemoteIpDetails:
          allOf:
          - $ref: '#/components/schemas/ActionRemoteIpDetails'
          description: Provided if `CallerType` is `remoteip`. Provides information
            about the remote IP address that the API call originated from.
        DomainDetails:
          allOf:
          - $ref: '#/components/schemas/AwsApiCallActionDomainDetails'
          description: Provided if `CallerType` is `domain`. Provides information
            about the DNS domain that the API call originated from.
        AffectedResources:
          allOf:
          - $ref: '#/components/schemas/FieldMap'
          description: Identifies the resources that were affected by the API call.
        FirstSeen:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'A timestamp that indicates when the API call was first observed.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        LastSeen:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'A timestamp that indicates when the API call was most recently
            observed.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
      description: Provided if `ActionType` is `AWS_API_CALL`. It provides details
        about the API call that was detected.
    AwsApiCallActionDomainDetails:
      type: object
      properties:
        Domain:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The name of the DNS domain that issued the API call.


            Length Constraints: 128.'
      description: Provided if `CallerType` is `domain`. It provides information about
        the DNS domain that issued the API call.
    AwsApiGatewayAccessLogSettings:
      type: object
      properties:
        Format:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A single-line format of the access logs of data, as specified
            by selected `$context` variables. The format must include at least `$context.requestId`.
        DestinationArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the CloudWatch Logs log group that receives the
            access logs.
      description: Contains information about settings for logging access for the
        stage.
    AwsApiGatewayCanarySettings:
      type: object
      properties:
        PercentTraffic:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The percentage of traffic that is diverted to a canary deployment.
        DeploymentId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The deployment identifier for the canary deployment.
        StageVariableOverrides:
          allOf:
          - $ref: '#/components/schemas/FieldMap'
          description: 'Stage variables that are overridden in the canary release
            deployment. The variables include new stage variables that are introduced
            in the canary.


            Each variable is represented as a string-to-string map between the stage
            variable name and the variable value.'
        UseStageCache:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether the canary deployment uses the stage cache.
      description: Contains information about settings for canary deployment in the
        stage.
    AwsApiGatewayEndpointConfiguration:
      type: object
      properties:
        Types:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: 'A list of endpoint types for the REST API.


            For an edge-optimized API, the endpoint type is `EDGE`. For a Regional
            API, the endpoint type is `REGIONAL`. For a private API, the endpoint
            type is `PRIVATE`.'
      description: Contains information about the endpoints for the API.
    AwsApiGatewayMethodSettings:
      type: object
      properties:
        MetricsEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether CloudWatch metrics are enabled for the method.
        LoggingLevel:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The logging level for this method. The logging level affects
            the log entries that are pushed to CloudWatch Logs.


            If the logging level is `ERROR`, then the logs only include error-level
            entries.


            If the logging level is `INFO`, then the logs include both `ERROR` events
            and extra informational events.


            Valid values: `OFF` | `ERROR` | `INFO`'
        DataTraceEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether data trace logging is enabled for the method.
            Data trace logging affects the log entries that are pushed to CloudWatch
            Logs.
        ThrottlingBurstLimit:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The throttling burst limit for the method.
        ThrottlingRateLimit:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The throttling rate limit for the method.
        CachingEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether responses are cached and returned for requests.
            For responses to be cached, a cache cluster must be enabled on the stage.
        CacheTtlInSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Specifies the time to live (TTL), in seconds, for cached responses.
            The higher the TTL, the longer the response is cached.
        CacheDataEncrypted:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether the cached responses are encrypted.
        RequireAuthorizationForCacheControl:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether authorization is required for a cache invalidation
            request.
        UnauthorizedCacheControlHeaderStrategy:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates how to handle unauthorized requests for cache invalidation.


            Valid values: `FAIL_WITH_403` | `SUCCEED_WITH_RESPONSE_HEADER` | `SUCCEED_WITHOUT_RESPONSE_HEADER`'
        HttpMethod:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The HTTP method. You can use an asterisk (*) as a wildcard
            to apply method settings to multiple methods.
        ResourcePath:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The resource path for this method. Forward slashes (/) are
            encoded as ~1 . The initial slash must include a forward slash.


            For example, the path value `/resource/subresource` must be encoded as
            `/~1resource~1subresource`.


            To specify the root path, use only a slash (/). You can use an asterisk
            (*) as a wildcard to apply method settings to multiple methods.'
      description: Defines settings for a method for the stage.
    AwsApiGatewayMethodSettingsList:
      type: array
      items:
        $ref: '#/components/schemas/AwsApiGatewayMethodSettings'
    AwsApiGatewayRestApiDetails:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the REST API.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the REST API.
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A description of the REST API.
        CreatedDate:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the API was created.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        Version:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The version identifier for the REST API.
        BinaryMediaTypes:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The list of binary media types supported by the REST API.
        MinimumCompressionSize:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'The minimum size in bytes of a payload before compression
            is enabled.


            If `null`, then compression is disabled.


            If 0, then all payloads are compressed.'
        ApiKeySource:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The source of the API key for metering requests according
            to a usage plan.


            `HEADER` indicates whether to read the API key from the X-API-Key header
            of a request.


            `AUTHORIZER` indicates whether to read the API key from the `UsageIdentifierKey`
            from a custom authorizer.'
        EndpointConfiguration:
          allOf:
          - $ref: '#/components/schemas/AwsApiGatewayEndpointConfiguration'
          description: The endpoint configuration of the REST API.
      description: Contains information about a REST API in version 1 of Amazon API
        Gateway.
    AwsApiGatewayStageDetails:
      type: object
      properties:
        DeploymentId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the deployment that the stage points to.
        ClientCertificateId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the client certificate for the stage.
        StageName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the stage.
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A description of the stage.
        CacheClusterEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether a cache cluster is enabled for the stage.
        CacheClusterSize:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: If a cache cluster is enabled, the size of the cache cluster.
        CacheClusterStatus:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: If a cache cluster is enabled, the status of the cache cluster.
        MethodSettings:
          allOf:
          - $ref: '#/components/schemas/AwsApiGatewayMethodSettingsList'
          description: Defines the method settings for the stage.
        Variables:
          allOf:
          - $ref: '#/components/schemas/FieldMap'
          description: "A map that defines the stage variables for the stage.\n\n\
            Variable names can have alphanumeric and underscore characters.\n\nVariable\
            \ values can contain the following characters:\n\n  * Uppercase and lowercase\
            \ letters\n\n  * Numbers\n\n  * Special characters -._~:/?#&=,"
        DocumentationVersion:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The version of the API documentation that is associated with
            the stage.
        AccessLogSettings:
          allOf:
          - $ref: '#/components/schemas/AwsApiGatewayAccessLogSettings'
          description: Settings for logging access for the stage.
        CanarySettings:
          allOf:
          - $ref: '#/components/schemas/AwsApiGatewayCanarySettings'
          description: Information about settings for canary deployment in the stage.
        TracingEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether active tracing with X-Ray is enabled for
            the stage.
        CreatedDate:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the stage was created.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        LastUpdatedDate:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the stage was most recently updated.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        WebAclArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the web ACL associated with the stage.
      description: Provides information about a version 1 Amazon API Gateway stage.
    AwsApiGatewayV2ApiDetails:
      type: object
      properties:
        ApiEndpoint:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The URI of the API.


            Uses the format ` __.execute-api.__.amazonaws.com`


            The stage name is typically appended to the URI to form a complete path
            to a deployed API stage.'
        ApiId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the API.
        ApiKeySelectionExpression:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: An API key selection expression. Supported only for WebSocket
            APIs.
        CreatedDate:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the API was created.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A description of the API.
        Version:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The version identifier for the API.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the API.
        ProtocolType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The API protocol for the API.


            Valid values: `WEBSOCKET` | `HTTP`'
        RouteSelectionExpression:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The route selection expression for the API.


            For HTTP APIs, must be `${request.method} ${request.path}`. This is the
            default value for HTTP APIs.


            For WebSocket APIs, there is no default value.'
        CorsConfiguration:
          allOf:
          - $ref: '#/components/schemas/AwsCorsConfiguration'
          description: A cross-origin resource sharing (CORS) configuration. Supported
            only for HTTP APIs.
      description: Contains information about a version 2 API in Amazon API Gateway.
    AwsApiGatewayV2RouteSettings:
      type: object
      properties:
        DetailedMetricsEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether detailed metrics are enabled.
        LoggingLevel:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The logging level. The logging level affects the log entries
            that are pushed to CloudWatch Logs. Supported only for WebSocket APIs.


            If the logging level is `ERROR`, then the logs only include error-level
            entries.


            If the logging level is `INFO`, then the logs include both `ERROR` events
            and extra informational events.


            Valid values: `OFF` | `ERROR` | `INFO`'
        DataTraceEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether data trace logging is enabled. Data trace
            logging affects the log entries that are pushed to CloudWatch Logs. Supported
            only for WebSocket APIs.
        ThrottlingBurstLimit:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The throttling burst limit.
        ThrottlingRateLimit:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The throttling rate limit.
      description: Contains route settings for a stage.
    AwsApiGatewayV2StageDetails:
      type: object
      properties:
        ClientCertificateId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of a client certificate for a stage. Supported
            only for WebSocket API calls.
        CreatedDate:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the stage was created.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The description of the stage.
        DefaultRouteSettings:
          allOf:
          - $ref: '#/components/schemas/AwsApiGatewayV2RouteSettings'
          description: Default route settings for the stage.
        DeploymentId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the deployment that the stage is associated
            with.
        LastUpdatedDate:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the stage was most recently updated.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        RouteSettings:
          allOf:
          - $ref: '#/components/schemas/AwsApiGatewayV2RouteSettings'
          description: The route settings for the stage.
        StageName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the stage.
        StageVariables:
          allOf:
          - $ref: '#/components/schemas/FieldMap'
          description: "A map that defines the stage variables for the stage.\n\n\
            Variable names can have alphanumeric and underscore characters.\n\nVariable\
            \ values can contain the following characters:\n\n  * Uppercase and lowercase\
            \ letters\n\n  * Numbers\n\n  * Special characters -._~:/?#&=,"
        AccessLogSettings:
          allOf:
          - $ref: '#/components/schemas/AwsApiGatewayAccessLogSettings'
          description: Information about settings for logging access for the stage.
        AutoDeploy:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether updates to an API automatically trigger a
            new deployment.
        LastDeploymentStatusMessage:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The status of the last deployment of a stage. Supported only
            if the stage has automatic deployment enabled.
        ApiGatewayManaged:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether the stage is managed by API Gateway.
      description: Contains information about a version 2 stage for Amazon API Gateway.
    AwsAppSyncGraphQlApiAdditionalAuthenticationProvidersDetails:
      type: object
      properties:
        AuthenticationType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The type of security configuration for your GraphQL API: API
            key, Identity and Access Management (IAM), OpenID Connect (OIDC), Amazon
            Cognito user pools, or Lambda.'
        LambdaAuthorizerConfig:
          allOf:
          - $ref: '#/components/schemas/AwsAppSyncGraphQlApiLambdaAuthorizerConfigDetails'
          description: The configuration for Lambda function authorization.
        OpenIdConnectConfig:
          allOf:
          - $ref: '#/components/schemas/AwsAppSyncGraphQlApiOpenIdConnectConfigDetails'
          description: The OpenID Connect configuration.
        UserPoolConfig:
          allOf:
          - $ref: '#/components/schemas/AwsAppSyncGraphQlApiUserPoolConfigDetails'
          description: The Amazon Cognito user pools configuration.
      description: A list of additional authentication providers for the GraphqlApi
        API.
    AwsAppSyncGraphQlApiAdditionalAuthenticationProvidersList:
      type: array
      items:
        $ref: '#/components/schemas/AwsAppSyncGraphQlApiAdditionalAuthenticationProvidersDetails'
    AwsAppSyncGraphQlApiDetails:
      type: object
      properties:
        ApiId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The unique identifier for the API.
        Id:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The unique identifier for the API.
        OpenIdConnectConfig:
          allOf:
          - $ref: '#/components/schemas/AwsAppSyncGraphQlApiOpenIdConnectConfigDetails'
          description: Specifies the authorization configuration for using an OpenID
            Connect compliant service with an AppSync GraphQL API endpoint.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The API name.
        LambdaAuthorizerConfig:
          allOf:
          - $ref: '#/components/schemas/AwsAppSyncGraphQlApiLambdaAuthorizerConfigDetails'
          description: Specifies the configuration for Lambda function authorization.
        XrayEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether to use X-Ray tracing for the GraphQL API.
        Arn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the API.
        UserPoolConfig:
          allOf:
          - $ref: '#/components/schemas/AwsAppSyncGraphQlApiUserPoolConfigDetails'
          description: The Amazon Cognito user pools configuration.
        AuthenticationType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The type of security configuration for your GraphQL API: API
            key, Identity and Access Management (IAM), OpenID Connect (OIDC), Amazon
            Cognito user pools, or Lambda.'
        LogConfig:
          allOf:
          - $ref: '#/components/schemas/AwsAppSyncGraphQlApiLogConfigDetails'
          description: The Amazon CloudWatch Logs configuration.
        AdditionalAuthenticationProviders:
          allOf:
          - $ref: '#/components/schemas/AwsAppSyncGraphQlApiAdditionalAuthenticationProvidersList'
          description: A list of additional authentication providers for the GraphQL
            API.
        WafWebAclArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the WAF web access control
            list (web ACL) associated with this GraphQL API, if one exists.
      description: Provides details about an AppSync Graph QL API, which lets you
        query multiple databases, microservices, and APIs from a single GraphQL endpoint.
    AwsAppSyncGraphQlApiLambdaAuthorizerConfigDetails:
      type: object
      properties:
        AuthorizerResultTtlInSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of seconds a response should be cached for. The
            default is 5 minutes (300 seconds).
        AuthorizerUri:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the Lambda function to be
            called for authorization. This can be a standard Lambda ARN, a version
            ARN (.../v3), or an alias ARN.
        IdentityValidationExpression:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A regular expression for validation of tokens before the Lambda
            function is called.
      description: Specifies the authorization configuration for using an Lambda function
        with your AppSync GraphQL API endpoint.
    AwsAppSyncGraphQlApiLogConfigDetails:
      type: object
      properties:
        CloudWatchLogsRoleArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the service role that AppSync
            assumes to publish to CloudWatch Logs in your account.
        ExcludeVerboseContent:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Set to `TRUE` to exclude sections that contain information
            such as headers, context, and evaluated mapping templates, regardless
            of logging level.
        FieldLogLevel:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The field logging level.
      description: Specifies the logging configuration when writing GraphQL operations
        and tracing to Amazon CloudWatch for an AppSync GraphQL API.
    AwsAppSyncGraphQlApiOpenIdConnectConfigDetails:
      type: object
      properties:
        AuthTtL:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The number of milliseconds that a token is valid after being
            authenticated.
        ClientId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The client identifier of the relying party at the OpenID identity
            provider. This identifier is typically obtained when the relying party
            is registered with the OpenID identity provider. You can specify a regular
            expression so that AppSync can validate against multiple client identifiers
            at a time.
        IatTtL:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The number of milliseconds that a token is valid after it's
            issued to a user.
        Issuer:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The issuer for the OIDC configuration. The issuer returned
            by discovery must exactly match the value of `iss` in the ID token.
      description: Specifies the authorization configuration for using an OpenID Connect
        compliant service with your AppSync GraphQL API endpoint.
    AwsAppSyncGraphQlApiUserPoolConfigDetails:
      type: object
      properties:
        AppIdClientRegex:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A regular expression for validating the incoming Amazon Cognito
            user pools app client ID. If this value isn't set, no filtering is applied.
        AwsRegion:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Web Services Region in which the user pool was created.
        DefaultAction:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The action that you want your GraphQL API to take when a request
            that uses Amazon Cognito user pools authentication doesn't match the Amazon
            Cognito user pools configuration.
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The user pool ID.
      description: Specifies the authorization configuration for using Amazon Cognito
        user pools with your AppSync GraphQL API endpoint.
    AwsAthenaWorkGroupConfigurationDetails:
      type: object
      properties:
        ResultConfiguration:
          allOf:
          - $ref: '#/components/schemas/AwsAthenaWorkGroupConfigurationResultConfigurationDetails'
          description: The location in Amazon S3 where query and calculation results
            are stored and the encryption option, if any, used for query and calculation
            results. These are known as client-side settings. If workgroup settings
            override client-side settings, then the query uses the workgroup settings.
      description: The configuration of the workgroup, which includes the location
        in Amazon Simple Storage Service (Amazon S3) where query results are stored,
        the encryption option, if any, used for query results, whether Amazon CloudWatch
        metrics are enabled for the workgroup, and the limit for the amount of bytes
        scanned (cutoff) per query, if it is specified.
    AwsAthenaWorkGroupConfigurationResultConfigurationDetails:
      type: object
      properties:
        EncryptionConfiguration:
          allOf:
          - $ref: '#/components/schemas/AwsAthenaWorkGroupConfigurationResultConfigurationEncryptionConfigurationDetails'
          description: Specifies the method used to encrypt the user’s data stores
            in the Athena workgroup.
      description: The location in Amazon Simple Storage Service (Amazon S3) where
        query and calculation results are stored and the encryption option, if any,
        used for query and calculation results. These are known as client-side settings.
        If workgroup settings override client-side settings, then the query uses the
        workgroup settings.
    AwsAthenaWorkGroupConfigurationResultConfigurationEncryptionConfigurationDetails:
      type: object
      properties:
        EncryptionOption:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Indicates whether Amazon Simple Storage Service (Amazon S3)
            server-side encryption with Amazon S3 managed keys (SSE_S3), server-side
            encryption with KMS keys (SSE_KMS), or client-side encryption with KMS
            customer managed keys (CSE_KMS) is used.
        KmsKey:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: For `SSE_KMS` and `CSE_KMS`, this is the KMS key Amazon Resource
            Name (ARN) or ID.
      description: Specifies the method used to encrypt the user’s data stores in
        the Athena workgroup.
    AwsAthenaWorkGroupDetails:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The workgroup name.
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The workgroup description.
        State:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Whether the workgroup is enabled or disabled.
        Configuration:
          allOf:
          - $ref: '#/components/schemas/AwsAthenaWorkGroupConfigurationDetails'
          description: The configuration of the workgroup, which includes the location
            in Amazon Simple Storage Service (Amazon S3) where query results are stored,
            the encryption option, if any, used for query results, whether Amazon
            CloudWatch metrics are enabled for the workgroup, and the limit for the
            amount of bytes scanned (cutoff) per query, if it is specified.
      description: Provides information about an Amazon Athena workgroup.
    AwsAutoScalingAutoScalingGroupAvailabilityZonesList:
      type: array
      items:
        $ref: '#/components/schemas/AwsAutoScalingAutoScalingGroupAvailabilityZonesListDetails'
    AwsAutoScalingAutoScalingGroupAvailabilityZonesListDetails:
      type: object
      properties:
        Value:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the Availability Zone.
      description: An Availability Zone for the automatic scaling group.
    AwsAutoScalingAutoScalingGroupDetails:
      type: object
      properties:
        LaunchConfigurationName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the launch configuration.
        LoadBalancerNames:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The list of load balancers associated with the group.
        HealthCheckType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The service to use for the health checks. Valid values are
            `EC2` or `ELB`.
        HealthCheckGracePeriod:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The amount of time, in seconds, that Amazon EC2 Auto Scaling
            waits before it checks the health status of an EC2 instance that has come
            into service.
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the auto scaling group was created.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        MixedInstancesPolicy:
          allOf:
          - $ref: '#/components/schemas/AwsAutoScalingAutoScalingGroupMixedInstancesPolicyDetails'
          description: The mixed instances policy for the automatic scaling group.
        AvailabilityZones:
          allOf:
          - $ref: '#/components/schemas/AwsAutoScalingAutoScalingGroupAvailabilityZonesList'
          description: The list of Availability Zones for the automatic scaling group.
        LaunchTemplate:
          allOf:
          - $ref: '#/components/schemas/AwsAutoScalingAutoScalingGroupLaunchTemplateLaunchTemplateSpecification'
          description: The launch template to use.
        CapacityRebalance:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether capacity rebalancing is enabled.
      description: Provides details about an auto scaling group.
    AwsAutoScalingAutoScalingGroupLaunchTemplateLaunchTemplateSpecification:
      type: object
      properties:
        LaunchTemplateId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the launch template. You must specify either
            `LaunchTemplateId` or `LaunchTemplateName`.
        LaunchTemplateName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the launch template. You must specify either `LaunchTemplateId`
            or `LaunchTemplateName`.
        Version:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Identifies the version of the launch template. You can specify
            a version identifier, or use the values `$Latest` or `$Default`.
      description: Details about the launch template to use.
    AwsAutoScalingAutoScalingGroupMixedInstancesPolicyDetails:
      type: object
      properties:
        InstancesDistribution:
          allOf:
          - $ref: '#/components/schemas/AwsAutoScalingAutoScalingGroupMixedInstancesPolicyInstancesDistributionDetails'
          description: The instances distribution. The instances distribution specifies
            the distribution of On-Demand Instances and Spot Instances, the maximum
            price to pay for Spot Instances, and how the Auto Scaling group allocates
            instance types to fulfill On-Demand and Spot capacity.
        LaunchTemplate:
          allOf:
          - $ref: '#/components/schemas/AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateDetails'
          description: The launch template to use and the instance types (overrides)
            to use to provision EC2 instances to fulfill On-Demand and Spot capacities.
      description: The mixed instances policy for the automatic scaling group.
    AwsAutoScalingAutoScalingGroupMixedInstancesPolicyInstancesDistributionDetails:
      type: object
      properties:
        OnDemandAllocationStrategy:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: How to allocate instance types to fulfill On-Demand capacity.
            The valid value is `prioritized`.
        OnDemandBaseCapacity:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The minimum amount of the Auto Scaling group's capacity that
            must be fulfilled by On-Demand Instances.
        OnDemandPercentageAboveBaseCapacity:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The percentage of On-Demand Instances and Spot Instances for
            additional capacity beyond `OnDemandBaseCapacity`.
        SpotAllocationStrategy:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "How to allocate instances across Spot Instance pools. Valid\
            \ values are as follows:\n\n  * `lowest-price`\n\n  * `capacity-optimized`\n\
            \n  * `capacity-optimized-prioritized`"
        SpotInstancePools:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of Spot Instance pools across which to allocate
            your Spot Instances.
        SpotMaxPrice:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The maximum price per unit hour that you are willing to pay
            for a Spot Instance.
      description: Information about the instances distribution.
    AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateDetails:
      type: object
      properties:
        LaunchTemplateSpecification:
          allOf:
          - $ref: '#/components/schemas/AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification'
          description: The launch template to use for a mixed instances policy.
        Overrides:
          allOf:
          - $ref: '#/components/schemas/AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateOverridesList'
          description: Property values to use to override the values in the launch
            template.
      description: Describes a launch template and overrides for a mixed instances
        policy.
    AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification:
      type: object
      properties:
        LaunchTemplateId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the launch template. You must specify either
            `LaunchTemplateId` or `LaunchTemplateName`.
        LaunchTemplateName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the launch template. You must specify either `LaunchTemplateId`
            or `LaunchTemplateName`.
        Version:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Identifies the version of the launch template. You can specify
            a version identifier, or use the values `$Latest` or `$Default`.
      description: Details about the launch template to use for a mixed instances
        policy.
    AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateOverridesList:
      type: array
      items:
        $ref: '#/components/schemas/AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateOverridesListDetails'
    AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateOverridesListDetails:
      type: object
      properties:
        InstanceType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The instance type. For example, `m3.xlarge`.
        WeightedCapacity:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The number of capacity units provided by the specified instance
            type in terms of virtual CPUs, memory, storage, throughput, or other relative
            performance characteristic.
      description: Property values to use to override the values in the launch template.
    AwsAutoScalingLaunchConfigurationBlockDeviceMappingsDetails:
      type: object
      properties:
        DeviceName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The device name that is exposed to the EC2 instance. For example,
            `/dev/sdh` or `xvdh`.
        Ebs:
          allOf:
          - $ref: '#/components/schemas/AwsAutoScalingLaunchConfigurationBlockDeviceMappingsEbsDetails'
          description: Parameters that are used to automatically set up Amazon EBS
            volumes when an instance is launched.
        NoDevice:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'Whether to suppress the device that is included in the block
            device mapping of the Amazon Machine Image (AMI).


            If `NoDevice` is `true`, then you cannot specify `Ebs`.>'
        VirtualName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The name of the virtual device (for example, `ephemeral0`).


            You can provide either `VirtualName` or `Ebs`, but not both.'
      description: A block device for the instance.
    AwsAutoScalingLaunchConfigurationBlockDeviceMappingsEbsDetails:
      type: object
      properties:
        DeleteOnTermination:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to delete the volume when the instance is terminated.
        Encrypted:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to encrypt the volume.
        Iops:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'The number of input/output (I/O) operations per second (IOPS)
            to provision for the volume.


            Only supported for `gp3` or `io1` volumes. Required for `io1` volumes.
            Not used with `standard`, `gp2`, `st1`, or `sc1` volumes.'
        SnapshotId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The snapshot ID of the volume to use.


            You must specify either `VolumeSize` or `SnapshotId`.'
        VolumeSize:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: "The volume size, in GiBs. The following are the supported\
            \ volumes sizes for each volume type:\n\n  * gp2 and gp3: 1-16,384\n\n\
            \  * io1: 4-16,384\n\n  * st1 and sc1: 125-16,384\n\n  * standard: 1-1,024\n\
            \nYou must specify either `SnapshotId` or `VolumeSize`. If you specify\
            \ both `SnapshotId` and `VolumeSize`, the volume size must be equal or\
            \ greater than the size of the snapshot."
        VolumeType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "The volume type. Valid values are as follows:\n\n  * `gp2`\n\
            \n  * `gp3`\n\n  * `io1`\n\n  * `sc1`\n\n  * `st1`\n\n  * `standard`"
      description: Parameters that are used to automatically set up EBS volumes when
        an instance is launched.
    AwsAutoScalingLaunchConfigurationBlockDeviceMappingsList:
      type: array
      items:
        $ref: '#/components/schemas/AwsAutoScalingLaunchConfigurationBlockDeviceMappingsDetails'
    AwsAutoScalingLaunchConfigurationDetails:
      type: object
      properties:
        AssociatePublicIpAddress:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: For Auto Scaling groups that run in a VPC, specifies whether
            to assign a public IP address to the group's instances.
        BlockDeviceMappings:
          allOf:
          - $ref: '#/components/schemas/AwsAutoScalingLaunchConfigurationBlockDeviceMappingsList'
          description: Specifies the block devices for the instance.
        ClassicLinkVpcId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of a ClassicLink-enabled VPC that EC2-Classic
            instances are linked to.
        ClassicLinkVpcSecurityGroups:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The identifiers of one or more security groups for the VPC
            that is specified in `ClassicLinkVPCId`.
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The creation date and time for the launch configuration.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        EbsOptimized:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the launch configuration is optimized for Amazon EBS
            I/O.
        IamInstanceProfile:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name or the ARN of the instance profile associated with
            the IAM role for the instance. The instance profile contains the IAM role.
        ImageId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the Amazon Machine Image (AMI) that is used
            to launch EC2 instances.
        InstanceMonitoring:
          allOf:
          - $ref: '#/components/schemas/AwsAutoScalingLaunchConfigurationInstanceMonitoringDetails'
          description: Indicates the type of monitoring for instances in the group.
        InstanceType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The instance type for the instances.
        KernelId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the kernel associated with the AMI.
        KeyName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the key pair.
        LaunchConfigurationName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the launch configuration.
        PlacementTenancy:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The tenancy of the instance. An instance with `dedicated` tenancy
            runs on isolated, single-tenant hardware and can only be launched into
            a VPC.
        RamdiskId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the RAM disk associated with the AMI.
        SecurityGroups:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The security groups to assign to the instances in the Auto
            Scaling group.
        SpotPrice:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The maximum hourly price to be paid for any Spot Instance that
            is launched to fulfill the request.
        UserData:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The user data to make available to the launched EC2 instances.
            Must be base64-encoded text.
        MetadataOptions:
          allOf:
          - $ref: '#/components/schemas/AwsAutoScalingLaunchConfigurationMetadataOptions'
          description: The metadata options for the instances.
      description: Details about a launch configuration.
    AwsAutoScalingLaunchConfigurationInstanceMonitoringDetails:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'If set to `true`, then instances in the group launch with
            detailed monitoring.


            If set to `false`, then instances in the group launch with basic monitoring.'
      description: Information about the type of monitoring for instances in the group.
    AwsAutoScalingLaunchConfigurationMetadataOptions:
      type: object
      properties:
        HttpEndpoint:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Enables or disables the HTTP metadata endpoint on your instances.
            By default, the metadata endpoint is enabled.
        HttpPutResponseHopLimit:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The HTTP `PUT` response hop limit for instance metadata requests.
            The larger the number, the further instance metadata requests can travel.
        HttpTokens:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Indicates whether token usage is `required` or `optional` for
            metadata requests. By default, token usage is `optional`.
      description: The metadata options for the instances.
    AwsBackupBackupPlanAdvancedBackupSettingsDetails:
      type: object
      properties:
        BackupOptions:
          allOf:
          - $ref: '#/components/schemas/FieldMap'
          description: "Specifies the backup option for a selected resource. This\
            \ option is only available for Windows Volume Shadow Copy Service (VSS)\
            \ backup jobs. Valid values are as follows:\n\n  * Set to `WindowsVSS:\
            \ enabled` to enable the WindowsVSS backup option and create a Windows\
            \ VSS backup.\n\n  * Set to `WindowsVSS: disabled` to create a regular\
            \ backup. The `WindowsVSS` option is not enabled by default."
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The name of a resource type. The only supported resource type
            is Amazon EC2 instances with Windows VSS.


            The only valid value is `EC2`.'
      description: Provides a list of backup options for each resource type.
    AwsBackupBackupPlanAdvancedBackupSettingsList:
      type: array
      items:
        $ref: '#/components/schemas/AwsBackupBackupPlanAdvancedBackupSettingsDetails'
    AwsBackupBackupPlanBackupPlanDetails:
      type: object
      properties:
        BackupPlanName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The display name of a backup plan.
        AdvancedBackupSettings:
          allOf:
          - $ref: '#/components/schemas/AwsBackupBackupPlanAdvancedBackupSettingsList'
          description: A list of backup options for each resource type.
        BackupPlanRule:
          allOf:
          - $ref: '#/components/schemas/AwsBackupBackupPlanRuleList'
          description: An array of `BackupRule` objects, each of which specifies a
            scheduled task that is used to back up a selection of resources.
      description: Provides details about an Backup backup plan and an array of `BackupRule`
        objects, each of which specifies a backup rule.
    AwsBackupBackupPlanDetails:
      type: object
      properties:
        BackupPlan:
          allOf:
          - $ref: '#/components/schemas/AwsBackupBackupPlanBackupPlanDetails'
          description: Uniquely identifies the backup plan to be associated with the
            selection of resources.
        BackupPlanArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: An Amazon Resource Name (ARN) that uniquely identifies the
            backup plan.
        BackupPlanId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A unique ID for the backup plan.
        VersionId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Unique, randomly generated, Unicode, UTF-8 encoded strings.
            Version IDs cannot be edited.
      description: Provides details about an Backup backup plan and an array of `BackupRule`
        objects, each of which specifies a backup rule.
    AwsBackupBackupPlanLifecycleDetails:
      type: object
      properties:
        DeleteAfterDays:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: Specifies the number of days after creation that a recovery
            point is deleted. Must be greater than 90 days plus `MoveToColdStorageAfterDays`.
        MoveToColdStorageAfterDays:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: Specifies the number of days after creation that a recovery
            point is moved to cold storage.
      description: Provides lifecycle details for the backup plan. A lifecycle defines
        when a backup is transitioned to cold storage and when it expires.
    AwsBackupBackupPlanRuleCopyActionsDetails:
      type: object
      properties:
        DestinationBackupVaultArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: An Amazon Resource Name (ARN) that uniquely identifies the
            destination backup vault for the copied backup.
        Lifecycle:
          allOf:
          - $ref: '#/components/schemas/AwsBackupBackupPlanLifecycleDetails'
          description: 'Defines when a protected resource is transitioned to cold
            storage and when it expires. Backup transitions and expires backups automatically
            according to the lifecycle that you define. If you don''t specify a lifecycle,
            Backup applies the lifecycle policy of the source backup to the destination
            backup.


            Backups transitioned to cold storage must be stored in cold storage for
            a minimum of 90 days.'
      description: An array of `CopyAction` objects, each of which contains details
        of the copy operation.
    AwsBackupBackupPlanRuleCopyActionsList:
      type: array
      items:
        $ref: '#/components/schemas/AwsBackupBackupPlanRuleCopyActionsDetails'
    AwsBackupBackupPlanRuleDetails:
      type: object
      properties:
        TargetBackupVault:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the Amazon Web Services
            account used to create them and the Amazon Web Services Region where they
            are created. They consist of letters, numbers, and hyphens.
        StartWindowMinutes:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: A value in minutes after a backup is scheduled before a job
            will be canceled if it doesn't start successfully.
        ScheduleExpression:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A cron expression in UTC specifying when Backup initiates a
            backup job.
        RuleName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A display name for a backup rule. Must contain 1 to 50 alphanumeric
            or '-_.' characters.
        RuleId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Uniquely identifies a rule that is used to schedule the backup
            of a selection of resources.
        EnableContinuousBackup:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether Backup creates continuous backups capable
            of point-in-time restore (PITR).
        CompletionWindowMinutes:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: A value in minutes after a backup job is successfully started
            before it must be completed, or it is canceled by Backup.
        CopyActions:
          allOf:
          - $ref: '#/components/schemas/AwsBackupBackupPlanRuleCopyActionsList'
          description: An array of `CopyAction` objects, each of which contains details
            of the copy operation.
        Lifecycle:
          allOf:
          - $ref: '#/components/schemas/AwsBackupBackupPlanLifecycleDetails'
          description: 'Defines when a protected resource is transitioned to cold
            storage and when it expires. Backup transitions and expires backups automatically
            according to the lifecycle that you define. If you don''t specify a lifecycle,
            Backup applies the lifecycle policy of the source backup to the destination
            backup.


            Backups transitioned to cold storage must be stored in cold storage for
            a minimum of 90 days.'
      description: Provides details about an array of `BackupRule` objects, each of
        which specifies a scheduled task that is used to back up a selection of resources.
    AwsBackupBackupPlanRuleList:
      type: array
      items:
        $ref: '#/components/schemas/AwsBackupBackupPlanRuleDetails'
    AwsBackupBackupVaultDetails:
      type: object
      properties:
        BackupVaultArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: An Amazon Resource Name (ARN) that uniquely identifies a backup
            vault.
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the Amazon Web Services
            account used to create them and the Amazon Web Services Region where they
            are created. They consist of lowercase letters, numbers, and hyphens.
        EncryptionKeyArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The unique ARN associated with the server-side encryption key.
            You can specify a key to encrypt your backups from services that support
            full Backup management. If you don't specify a key, Backup creates an
            KMS key for you by default.
        Notifications:
          allOf:
          - $ref: '#/components/schemas/AwsBackupBackupVaultNotificationsDetails'
          description: The Amazon SNS event notifications for the specified backup
            vault.
        AccessPolicy:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A resource-based policy that is used to manage access permissions
            on the target backup vault.
      description: Provides details about an Backup backup vault. In Backup, a backup
        vault is a container that stores and organizes your backups.
    AwsBackupBackupVaultNotificationsDetails:
      type: object
      properties:
        BackupVaultEvents:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: "An array of events that indicate the status of jobs to back\
            \ up resources to the backup vault. The following events are supported:\n\
            \n  * `BACKUP_JOB_STARTED | BACKUP_JOB_COMPLETED`\n\n  * `COPY_JOB_STARTED\
            \ | COPY_JOB_SUCCESSFUL | COPY_JOB_FAILED`\n\n  * `RESTORE_JOB_STARTED\
            \ | RESTORE_JOB_COMPLETED | RECOVERY_POINT_MODIFIED`\n\n  * `S3_BACKUP_OBJECT_FAILED\
            \ | S3_RESTORE_OBJECT_FAILED`"
        SnsTopicArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) that uniquely identifies the
            Amazon SNS topic for a backup vault's events.
      description: Provides details about the Amazon SNS event notifications for the
        specified backup vault.
    AwsBackupRecoveryPointCalculatedLifecycleDetails:
      type: object
      properties:
        DeleteAt:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Specifies the number of days after creation that a recovery
            point is deleted. Must be greater than 90 days plus `MoveToColdStorageAfterDays`.
        MoveToColdStorageAt:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Specifies the number of days after creation that a recovery
            point is moved to cold storage.
      description: Specifies how long in days before a recovery point transitions
        to cold storage or is deleted.
    AwsBackupRecoveryPointCreatedByDetails:
      type: object
      properties:
        BackupPlanArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: An Amazon Resource Name (ARN) that uniquely identifies a backup
            plan.
        BackupPlanId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Uniquely identifies a backup plan.
        BackupPlanVersion:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Unique, randomly generated, Unicode, UTF-8 encoded strings
            that are at most 1,024 bytes long. Version IDs cannot be edited.
        BackupRuleId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Uniquely identifies a rule used to schedule the backup of a
            selection of resources.
      description: Contains information about the backup plan and rule that Backup
        used to initiate the recovery point backup.
    AwsBackupRecoveryPointDetails:
      type: object
      properties:
        BackupSizeInBytes:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The size, in bytes, of a backup.
        BackupVaultArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: An Amazon Resource Name (ARN) that uniquely identifies a backup
            vault.
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the Amazon Web Services
            account used to create them and the Amazon Web Services Region where they
            are created. They consist of lowercase letters, numbers, and hyphens.
        CalculatedLifecycle:
          allOf:
          - $ref: '#/components/schemas/AwsBackupRecoveryPointCalculatedLifecycleDetails'
          description: A `CalculatedLifecycle` object containing `DeleteAt` and `MoveToColdStorageAt`
            timestamps.
        CompletionDate:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The date and time that a job to create a recovery point is
            completed, in Unix format and UTC. The value of `CompletionDate` is accurate
            to milliseconds. For example, the value 1516925490.087 represents Friday,
            January 26, 2018 12:11:30.087 AM.
        CreatedBy:
          allOf:
          - $ref: '#/components/schemas/AwsBackupRecoveryPointCreatedByDetails'
          description: Contains identifying information about the creation of a recovery
            point, including the `BackupPlanArn`, `BackupPlanId`, `BackupPlanVersion`,
            and `BackupRuleId` of the backup plan that is used to create it.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The date and time a recovery point is created, in Unix format
            and UTC. The value of `CreationDate` is accurate to milliseconds. For
            example, the value 1516925490.087 represents Friday, January 26, 2018
            12:11:30.087 AM.
        EncryptionKeyArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN for the server-side encryption key that is used to
            protect your backups.
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Specifies the IAM role ARN used to create the target recovery
            point
        IsEncrypted:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A Boolean value that is returned as `TRUE` if the specified
            recovery point is encrypted, or `FALSE` if the recovery point is not encrypted.
        LastRestoreTime:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The date and time that a recovery point was last restored,
            in Unix format and UTC. The value of `LastRestoreTime` is accurate to
            milliseconds. For example, the value 1516925490.087 represents Friday,
            January 26, 2018 12:11:30.087 AM.
        Lifecycle:
          allOf:
          - $ref: '#/components/schemas/AwsBackupRecoveryPointLifecycleDetails'
          description: The lifecycle defines when a protected resource is transitioned
            to cold storage and when it expires. Backup transitions and expires backups
            automatically according to the lifecycle that you define
        RecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: An ARN that uniquely identifies a recovery point.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: An ARN that uniquely identifies a resource. The format of the
            ARN depends on the resource type.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of Amazon Web Services resource saved as a recovery
            point, such as an Amazon EBS volume or an Amazon RDS database.
        SourceBackupVaultArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN for the backup vault where the recovery point was originally
            copied from. If the recovery point is restored to the same account, this
            value will be null.
        Status:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "A status code specifying the state of the recovery point.\
            \ Valid values are as follows:\n\n  * `COMPLETED`\n\n  * `DELETING`\n\n\
            \  * `EXPIRED`\n\n  * `PARTIAL`"
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A message explaining the reason of the recovery point deletion
            failure.
        StorageClass:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "Specifies the storage class of the recovery point. Valid values\
            \ are as follows:\n\n  * `COLD`\n\n  * `DELETED`\n\n  * `WARM`"
      description: Contains detailed information about the recovery points stored
        in an Backup backup vault. A backup, or recovery point, represents the content
        of a resource at a specified time.
    AwsBackupRecoveryPointLifecycleDetails:
      type: object
      properties:
        DeleteAfterDays:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: Specifies the number of days after creation that a recovery
            point is deleted. Must be greater than 90 days plus `MoveToColdStorageAfterDays`.
        MoveToColdStorageAfterDays:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: Specifies the number of days after creation that a recovery
            point is moved to cold storage.
      description: Contains an array of Transition objects specifying how long in
        days before a recovery point transitions to cold storage or is deleted.
    AwsCertificateManagerCertificateDetails:
      type: object
      properties:
        CertificateAuthorityArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the private certificate authority (CA) that will
            be used to issue the certificate.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the certificate was requested.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        DomainName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The fully qualified domain name (FQDN), such as www.example.com,
            that is secured by the certificate.
        DomainValidationOptions:
          allOf:
          - $ref: '#/components/schemas/AwsCertificateManagerCertificateDomainValidationOptions'
          description: 'Contains information about the initial validation of each
            domain name that occurs as a result of the `RequestCertificate` request.


            Only provided if the certificate type is `AMAZON_ISSUED`.'
        ExtendedKeyUsages:
          allOf:
          - $ref: '#/components/schemas/AwsCertificateManagerCertificateExtendedKeyUsages'
          description: Contains a list of Extended Key Usage X.509 v3 extension objects.
            Each object specifies a purpose for which the certificate public key can
            be used and consists of a name and an object identifier (OID).
        FailureReason:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'For a failed certificate request, the reason for the failure.


            Valid values: `NO_AVAILABLE_CONTACTS` | `ADDITIONAL_VERIFICATION_REQUIRED`
            | `DOMAIN_NOT_ALLOWED` | `INVALID_PUBLIC_DOMAIN` | `DOMAIN_VALIDATION_DENIED`
            | `CAA_ERROR` | `PCA_LIMIT_EXCEEDED` | `PCA_INVALID_ARN` | `PCA_INVALID_STATE`
            | `PCA_REQUEST_FAILED` | `PCA_NAME_CONSTRAINTS_VALIDATION` | `PCA_RESOURCE_NOT_FOUND`
            | `PCA_INVALID_ARGS` | `PCA_INVALID_DURATION` | `PCA_ACCESS_DENIED` |
            `SLR_NOT_FOUND` | `OTHER`'
        ImportedAt:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the certificate was imported. Provided if the
            certificate type is `IMPORTED`.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        InUseBy:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The list of ARNs for the Amazon Web Services resources that
            use the certificate.
        IssuedAt:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the certificate was issued. Provided if the
            certificate type is `AMAZON_ISSUED`.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        Issuer:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the certificate authority that issued and signed
            the certificate.
        KeyAlgorithm:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The algorithm that was used to generate the public-private
            key pair.


            Valid values: `RSA_2048` | `RSA_1024` |` RSA_4096` | `EC_prime256v1` |
            `EC_secp384r1` | `EC_secp521r1`'
        KeyUsages:
          allOf:
          - $ref: '#/components/schemas/AwsCertificateManagerCertificateKeyUsages'
          description: A list of key usage X.509 v3 extension objects.
        NotAfter:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The time after which the certificate becomes invalid.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        NotBefore:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The time before which the certificate is not valid.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        Options:
          allOf:
          - $ref: '#/components/schemas/AwsCertificateManagerCertificateOptions'
          description: Provides a value that specifies whether to add the certificate
            to a transparency log.
        RenewalEligibility:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Whether the certificate is eligible for renewal.


            Valid values: `ELIGIBLE` | `INELIGIBLE`'
        RenewalSummary:
          allOf:
          - $ref: '#/components/schemas/AwsCertificateManagerCertificateRenewalSummary'
          description: Information about the status of the Certificate Manager managed
            renewal for the certificate. Provided only when the certificate type is
            `AMAZON_ISSUED`.
        Serial:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The serial number of the certificate.
        SignatureAlgorithm:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The algorithm that was used to sign the certificate.
        Status:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The status of the certificate.


            Valid values: `PENDING_VALIDATION` | `ISSUED` | `INACTIVE` | `EXPIRED`
            | `VALIDATION_TIMED_OUT` | `REVOKED` | `FAILED`'
        Subject:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the entity that is associated with the public key
            contained in the certificate.
        SubjectAlternativeNames:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: 'One or more domain names (subject alternative names) included
            in the certificate. This list contains the domain names that are bound
            to the public key that is contained in the certificate.


            The subject alternative names include the canonical domain name (CN) of
            the certificate and additional domain names that can be used to connect
            to the website.'
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The source of the certificate. For certificates that Certificate
            Manager provides, `Type` is `AMAZON_ISSUED`. For certificates that are
            imported with `ImportCertificate`, `Type` is `IMPORTED`.


            Valid values: `IMPORTED` | `AMAZON_ISSUED` | `PRIVATE`'
      description: Provides details about an Certificate Manager certificate.
    AwsCertificateManagerCertificateDomainValidationOption:
      type: object
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A fully qualified domain name (FQDN) in the certificate.
        ResourceRecord:
          allOf:
          - $ref: '#/components/schemas/AwsCertificateManagerCertificateResourceRecord'
          description: The CNAME record that is added to the DNS database for domain
            validation.
        ValidationDomain:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The domain name that Certificate Manager uses to send domain
            validation emails.
        ValidationEmails:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: A list of email addresses that Certificate Manager uses to
            send domain validation emails.
        ValidationMethod:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The method used to validate the domain name.
        ValidationStatus:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The validation status of the domain name.
      description: "Contains information about one of the following:\n\n  * The initial\
        \ validation of each domain name that occurs as a result of the `RequestCertificate`\
        \ request\n\n  * The validation of each domain name in the certificate, as\
        \ it pertains to Certificate Manager managed renewal"
    AwsCertificateManagerCertificateDomainValidationOptions:
      type: array
      items:
        $ref: '#/components/schemas/AwsCertificateManagerCertificateDomainValidationOption'
    AwsCertificateManagerCertificateExtendedKeyUsage:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of an extension value. Indicates the purpose for which
            the certificate public key can be used.
        OId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'An object identifier (OID) for the extension value.


            The format is numbers separated by periods.'
      description: Contains information about an extended key usage X.509 v3 extension
        object.
    AwsCertificateManagerCertificateExtendedKeyUsages:
      type: array
      items:
        $ref: '#/components/schemas/AwsCertificateManagerCertificateExtendedKeyUsage'
    AwsCertificateManagerCertificateKeyUsage:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The key usage extension name.
      description: Contains information about a key usage X.509 v3 extension object.
    AwsCertificateManagerCertificateKeyUsages:
      type: array
      items:
        $ref: '#/components/schemas/AwsCertificateManagerCertificateKeyUsage'
    AwsCertificateManagerCertificateOptions:
      type: object
      properties:
        CertificateTransparencyLoggingPreference:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Whether to add the certificate to a transparency log.


            Valid values: `DISABLED` | `ENABLED`'
      description: Contains other options for the certificate.
    AwsCertificateManagerCertificateRenewalSummary:
      type: object
      properties:
        DomainValidationOptions:
          allOf:
          - $ref: '#/components/schemas/AwsCertificateManagerCertificateDomainValidationOptions'
          description: Information about the validation of each domain name in the
            certificate, as it pertains to Certificate Manager managed renewal. Provided
            only when the certificate type is `AMAZON_ISSUED`.
        RenewalStatus:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The status of the Certificate Manager managed renewal of the
            certificate.


            Valid values: `PENDING_AUTO_RENEWAL` | `PENDING_VALIDATION` | `SUCCESS`
            | `FAILED`'
        RenewalStatusReason:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The reason that a renewal request was unsuccessful. This attribute
            is used only when `RenewalStatus` is `FAILED`.


            Valid values: `NO_AVAILABLE_CONTACTS` | `ADDITIONAL_VERIFICATION_REQUIRED`
            | `DOMAIN_NOT_ALLOWED` | `INVALID_PUBLIC_DOMAIN` | `DOMAIN_VALIDATION_DENIED`
            | `CAA_ERROR` | `PCA_LIMIT_EXCEEDED` | `PCA_INVALID_ARN` | `PCA_INVALID_STATE`
            | `PCA_REQUEST_FAILED` | `PCA_NAME_CONSTRAINTS_VALIDATION` | `PCA_RESOURCE_NOT_FOUND`
            | `PCA_INVALID_ARGS` | `PCA_INVALID_DURATION` | `PCA_ACCESS_DENIED` |
            `SLR_NOT_FOUND` | `OTHER`'
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the renewal summary was last updated.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
      description: Contains information about the Certificate Manager managed renewal
        for an `AMAZON_ISSUED` certificate.
    AwsCertificateManagerCertificateResourceRecord:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the resource.
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of resource.
        Value:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The value of the resource.
      description: Provides details about the CNAME record that is added to the DNS
        database for domain validation.
    AwsCloudFormationStackDetails:
      type: object
      properties:
        Capabilities:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The capabilities allowed in the stack.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The time at which the stack was created.
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A user-defined description associated with the stack.
        DisableRollback:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Boolean to enable or disable rollback on stack creation failures.
        DriftInformation:
          allOf:
          - $ref: '#/components/schemas/AwsCloudFormationStackDriftInformationDetails'
          description: Information about whether a stack's actual configuration differs,
            or has drifted, from its expected configuration, as defined in the stack
            template and any values specified as template parameters.
        EnableTerminationProtection:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether termination protection is enabled for the stack.
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The time the nested stack was last updated. This field will
            only be returned if the stack has been updated at least once.
        NotificationArns:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The Amazon Resource Names (ARNs) of the Amazon SNS topic to
            which stack-related events are published.
        Outputs:
          allOf:
          - $ref: '#/components/schemas/AwsCloudFormationStackOutputsList'
          description: A list of output structures.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of an IAM role that's associated with the stack.
        StackId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Unique identifier of the stack.
        StackName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name associated with the stack.
        StackStatus:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Current status of the stack.
        StackStatusReason:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Success or failure message associated with the stack status.
        TimeoutInMinutes:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The length of time, in minutes, that CloudFormation waits for
            the nested stack to reach the `CREATE_COMPLETE` state.
      description: Nests a stack as a resource in a top-level template. Nested stacks
        are stacks created as resources for another stack.
    AwsCloudFormationStackDriftInformationDetails:
      type: object
      properties:
        StackDriftStatus:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Status of the stack's actual configuration compared to its
            expected template configuration.
      description: Provides information about the stack's conformity to its expected
        template configuration.
    AwsCloudFormationStackOutputsDetails:
      type: object
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A user-defined description associated with the output.
        OutputKey:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The key associated with the output.
        OutputValue:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The value associated with the output.
      description: Provides information about the CloudFormation stack output.
    AwsCloudFormationStackOutputsList:
      type: array
      items:
        $ref: '#/components/schemas/AwsCloudFormationStackOutputsDetails'
    AwsCloudFrontDistributionCacheBehavior:
      type: object
      properties:
        ViewerProtocolPolicy:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "The protocol that viewers can use to access the files in an\
            \ origin. You can specify the following options:\n\n  * `allow-all` \\\
            - Viewers can use HTTP or HTTPS.\n\n  * `redirect-to-https` \\- CloudFront\
            \ responds to HTTP requests with an HTTP status code of 301 (Moved Permanently)\
            \ and the HTTPS URL. The viewer then uses the new URL to resubmit.\n\n\
            \  * `https-only` \\- CloudFront responds to HTTP request with an HTTP\
            \ status code of 403 (Forbidden)."
      description: Information about a cache behavior for the distribution.
    AwsCloudFrontDistributionCacheBehaviors:
      type: object
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/AwsCloudFrontDistributionCacheBehaviorsItemList'
          description: The cache behaviors for the distribution.
      description: Provides information about caching for the CloudFront distribution.
    AwsCloudFrontDistributionCacheBehaviorsItemList:
      type: array
      items:
        $ref: '#/components/schemas/AwsCloudFrontDistributionCacheBehavior'
    AwsCloudFrontDistributionDefaultCacheBehavior:
      type: object
      properties:
        ViewerProtocolPolicy:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "The protocol that viewers can use to access the files in an\
            \ origin. You can specify the following options:\n\n  * `allow-all` \\\
            - Viewers can use HTTP or HTTPS.\n\n  * `redirect-to-https` \\- CloudFront\
            \ responds to HTTP requests with an HTTP status code of 301 (Moved Permanently)\
            \ and the HTTPS URL. The viewer then uses the new URL to resubmit.\n\n\
            \  * `https-only` \\- CloudFront responds to HTTP request with an HTTP\
            \ status code of 403 (Forbidden)."
      description: Contains information about the default cache configuration for
        the CloudFront distribution.
    AwsCloudFrontDistributionDetails:
      type: object
      properties:
        CacheBehaviors:
          allOf:
          - $ref: '#/components/schemas/AwsCloudFrontDistributionCacheBehaviors'
          description: Provides information about the cache configuration for the
            distribution.
        DefaultCacheBehavior:
          allOf:
          - $ref: '#/components/schemas/AwsCloudFrontDistributionDefaultCacheBehavior'
          description: The default cache behavior for the configuration.
        DefaultRootObject:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The object that CloudFront sends in response to requests from
            the origin (for example, index.html) when a viewer requests the root URL
            for the distribution (http://www.example.com) instead of an object in
            your distribution (http://www.example.com/product-description.html).
        DomainName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The domain name corresponding to the distribution.
        ETag:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The entity tag is a hash of the object.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when that the distribution was last modified.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        Logging:
          allOf:
          - $ref: '#/components/schemas/AwsCloudFrontDistributionLogging'
          description: A complex type that controls whether access logs are written
            for the distribution.
        Origins:
          allOf:
          - $ref: '#/components/schemas/AwsCloudFrontDistributionOrigins'
          description: A complex type that contains information about origins for
            this distribution.
        OriginGroups:
          allOf:
          - $ref: '#/components/schemas/AwsCloudFrontDistributionOriginGroups'
          description: Provides information about the origin groups in the distribution.
        ViewerCertificate:
          allOf:
          - $ref: '#/components/schemas/AwsCloudFrontDistributionViewerCertificate'
          description: Provides information about the TLS/SSL configuration that the
            distribution uses to communicate with viewers.
        Status:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Indicates the current status of the distribution.
        WebAclId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A unique identifier that specifies the WAF web ACL, if any,
            to associate with this distribution.
      description: A CloudFront distribution configuration.
    AwsCloudFrontDistributionLogging:
      type: object
      properties:
        Bucket:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The S3 bucket to store the access logs in.
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: With this field, you can enable or disable the selected distribution.
        IncludeCookies:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether you want CloudFront to include cookies in
            access logs.
        Prefix:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: An optional string that you want CloudFront to use as a prefix
            to the access log filenames for this distribution.
      description: A complex type that controls whether access logs are written for
        the CloudFront distribution.
    AwsCloudFrontDistributionOriginCustomOriginConfig:
      type: object
      properties:
        HttpPort:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The HTTP port that CloudFront uses to connect to the origin.
        HttpsPort:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The HTTPS port that CloudFront uses to connect to the origin.
        OriginKeepaliveTimeout:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Specifies how long, in seconds, CloudFront persists its connection
            to the origin.
        OriginProtocolPolicy:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Specifies the protocol (HTTP or HTTPS) that CloudFront uses
            to connect to the origin.
        OriginReadTimeout:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Specifies how long, in seconds, CloudFront waits for a response
            from the origin.
        OriginSslProtocols:
          allOf:
          - $ref: '#/components/schemas/AwsCloudFrontDistributionOriginSslProtocols'
          description: Specifies the minimum SSL/TLS protocol that CloudFront uses
            when connecting to your origin over HTTPS.
      description: A custom origin. A custom origin is any origin that is not an Amazon
        S3 bucket, with one exception. An Amazon S3 bucket that is [configured with
        static website hosting](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html)
        is a custom origin.
    AwsCloudFrontDistributionOriginGroup:
      type: object
      properties:
        FailoverCriteria:
          allOf:
          - $ref: '#/components/schemas/AwsCloudFrontDistributionOriginGroupFailover'
          description: Provides the criteria for an origin group to fail over.
      description: Information about an origin group for the CloudFront distribution.
    AwsCloudFrontDistributionOriginGroupFailover:
      type: object
      properties:
        StatusCodes:
          allOf:
          - $ref: '#/components/schemas/AwsCloudFrontDistributionOriginGroupFailoverStatusCodes'
          description: Information about the status codes that cause an origin group
            to fail over.
      description: Provides information about when an origin group fails over.
    AwsCloudFrontDistributionOriginGroupFailoverStatusCodes:
      type: object
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/AwsCloudFrontDistributionOriginGroupFailoverStatusCodesItemList'
          description: The list of status code values that can cause a failover to
            the next origin.
        Quantity:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of status codes that can cause a failover.
      description: The status codes that cause an origin group to fail over.
    AwsCloudFrontDistributionOriginGroupFailoverStatusCodesItemList:
      type: array
      items:
        $ref: '#/components/schemas/Integer'
    AwsCloudFrontDistributionOriginGroups:
      type: object
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/AwsCloudFrontDistributionOriginGroupsItemList'
          description: The list of origin groups.
      description: Provides information about origin groups that are associated with
        the CloudFront distribution.
    AwsCloudFrontDistributionOriginGroupsItemList:
      type: array
      items:
        $ref: '#/components/schemas/AwsCloudFrontDistributionOriginGroup'
    AwsCloudFrontDistributionOriginItem:
      type: object
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Amazon S3 origins: The DNS name of the S3 bucket from which
            you want CloudFront to get objects for this origin.'
        Id:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A unique identifier for the origin or origin group.
        OriginPath:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: An optional element that causes CloudFront to request your
            content from a directory in your Amazon S3 bucket or your custom origin.
        S3OriginConfig:
          allOf:
          - $ref: '#/components/schemas/AwsCloudFrontDistributionOriginS3OriginConfig'
          description: An origin that is an S3 bucket that is not configured with
            static website hosting.
        CustomOriginConfig:
          allOf:
          - $ref: '#/components/schemas/AwsCloudFrontDistributionOriginCustomOriginConfig'
          description: An origin that is not an Amazon S3 bucket, with one exception.
            If the Amazon S3 bucket is configured with static website hosting, use
            this attribute. If the Amazon S3 bucket is not configured with static
            website hosting, use the `S3OriginConfig` type instead.
      description: A complex type that describes the Amazon S3 bucket, HTTP server
        (for example, a web server), Elemental MediaStore, or other server from which
        CloudFront gets your files.
    AwsCloudFrontDistributionOriginItemList:
      type: array
      items:
        $ref: '#/components/schemas/AwsCloudFrontDistributionOriginItem'
    AwsCloudFrontDistributionOriginS3OriginConfig:
      type: object
      properties:
        OriginAccessIdentity:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The CloudFront origin access identity to associate with the
            origin.
      description: Information about an origin that is an Amazon S3 bucket that is
        not configured with static website hosting.
    AwsCloudFrontDistributionOriginSslProtocols:
      type: object
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: A list that contains allowed SSL/TLS protocols for this distribution.
        Quantity:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of SSL/TLS protocols that you want to allow CloudFront
            to use when establishing an HTTPS connection with this origin.
      description: A complex type that contains information about the SSL/TLS protocols
        that CloudFront can use when establishing an HTTPS connection with your origin.
    AwsCloudFrontDistributionOrigins:
      type: object
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/AwsCloudFrontDistributionOriginItemList'
          description: A complex type that contains origins or origin groups for this
            distribution.
      description: A complex type that contains information about origins and origin
        groups for this CloudFront distribution.
    AwsCloudFrontDistributionViewerCertificate:
      type: object
      properties:
        AcmCertificateArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the ACM certificate. Used if the certificate is
            stored in ACM. If you provide an ACM certificate ARN, you must also provide
            `MinimumCertificateVersion` and `SslSupportMethod`.
        Certificate:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the certificate. Note that in CloudFront,
            this attribute is deprecated.
        CertificateSource:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The source of the certificate identified by `Certificate`.
            Note that in CloudFront, this attribute is deprecated.
        CloudFrontDefaultCertificate:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the distribution uses the CloudFront domain name. If
            set to `false`, then you provide either `AcmCertificateArn` or `IamCertificateId`.
        IamCertificateId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the IAM certificate. Used if the certificate
            is stored in IAM. If you provide `IamCertificateId`, then you also must
            provide `MinimumProtocolVersion` and `SslSupportMethod`.
        MinimumProtocolVersion:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The security policy that CloudFront uses for HTTPS connections
            with viewers. If `SslSupportMethod` is `sni-only`, then `MinimumProtocolVersion`
            must be `TLSv1` or higher.
        SslSupportMethod:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The viewers that the distribution accepts HTTPS connections
            from.
      description: Provides information about the TLS/SSL configuration that the CloudFront
        distribution uses to communicate with viewers.
    AwsCloudTrailTrailDetails:
      type: object
      properties:
        CloudWatchLogsLogGroupArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the log group that CloudTrail logs are delivered
            to.
        CloudWatchLogsRoleArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the role that the CloudWatch Events endpoint assumes
            when it writes to the log group.
        HasCustomEventSelectors:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether the trail has custom event selectors.
        HomeRegion:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Region where the trail was created.
        IncludeGlobalServiceEvents:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether the trail publishes events from global services
            such as IAM to the log files.
        IsMultiRegionTrail:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether the trail applies only to the current Region
            or to all Regions.
        IsOrganizationTrail:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the trail is created for all accounts in an organization
            in Organizations, or only for the current Amazon Web Services account.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The KMS key ID to use to encrypt the logs.
        LogFileValidationEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether CloudTrail log file validation is enabled.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the trail.
        S3BucketName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the S3 bucket where the log files are published.
        S3KeyPrefix:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The S3 key prefix. The key prefix is added after the name of
            the S3 bucket where the log files are published.
        SnsTopicArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the SNS topic that is used for notifications of
            log file delivery.
        SnsTopicName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the SNS topic that is used for notifications of
            log file delivery.
        TrailArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the trail.
      description: Provides details about a CloudTrail trail.
    AwsCloudWatchAlarmDetails:
      type: object
      properties:
        ActionsEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether actions should be executed during any changes
            to the alarm state.
        AlarmActions:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The list of actions, specified as Amazon Resource Names (ARNs)
            to execute when this alarm transitions into an `ALARM` state from any
            other state.
        AlarmArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the alarm.
        AlarmConfigurationUpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The time stamp of the last update to the alarm configuration.
        AlarmDescription:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The description of the alarm.
        AlarmName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the alarm. If you don't specify a name, CloudFront
            generates a unique physical ID and uses that ID for the alarm name.
        ComparisonOperator:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The arithmetic operation to use when comparing the specified
            statistic and threshold. The specified statistic value is used as the
            first operand.
        DatapointsToAlarm:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of datapoints that must be breaching to trigger
            the alarm.
        Dimensions:
          allOf:
          - $ref: '#/components/schemas/AwsCloudWatchAlarmDimensionsList'
          description: The dimensions for the metric associated with the alarm.
        EvaluateLowSampleCountPercentile:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Used only for alarms based on percentiles. If `ignore`, the
            alarm state does not change during periods with too few data points to
            be statistically significant. If `evaluate` or this parameter is not used,
            the alarm is always evaluated and possibly changes state no matter how
            many data points are available.
        EvaluationPeriods:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of periods over which data is compared to the specified
            threshold.
        ExtendedStatistic:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The percentile statistic for the metric associated with the
            alarm.
        InsufficientDataActions:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The actions to execute when this alarm transitions to the `INSUFFICIENT_DATA`
            state from any other state. Each action is specified as an ARN.
        MetricName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the metric associated with the alarm. This is required
            for an alarm based on a metric. For an alarm based on a math expression,
            you use `Metrics` instead and you can't specify `MetricName`.
        Namespace:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The namespace of the metric associated with the alarm. This
            is required for an alarm based on a metric. For an alarm based on a math
            expression, you can't specify `Namespace` and you use `Metrics` instead.
        OkActions:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The actions to execute when this alarm transitions to the `OK`
            state from any other state. Each action is specified as an ARN.
        Period:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The period, in seconds, over which the statistic is applied.
            This is required for an alarm based on a metric.
        Statistic:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The statistic for the metric associated with the alarm, other
            than percentile. For percentile statistics, use `ExtendedStatistic`.


            For an alarm based on a metric, you must specify either `Statistic` or
            `ExtendedStatistic` but not both.


            For an alarm based on a math expression, you can''t specify `Statistic`.
            Instead, you use `Metrics`.'
        Threshold:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The value to compare with the specified statistic.
        ThresholdMetricId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: n an alarm based on an anomaly detection model, this is the
            ID of the `ANOMALY_DETECTION_BAND` function used as the threshold for
            the alarm.
        TreatMissingData:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Sets how this alarm is to handle missing data points.
        Unit:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The unit of the metric associated with the alarm.
      description: Specifies an alarm and associates it with the specified metric
        or metric math expression.
    AwsCloudWatchAlarmDimensionsDetails:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of a dimension.
        Value:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The value of a dimension.
      description: Details about the dimensions for the metric associated with the
        alarm.
    AwsCloudWatchAlarmDimensionsList:
      type: array
      items:
        $ref: '#/components/schemas/AwsCloudWatchAlarmDimensionsDetails'
    AwsCodeBuildProjectArtifactsDetails:
      type: object
      properties:
        ArtifactIdentifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: An identifier for the artifact definition.
        EncryptionDisabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether to disable encryption on the artifact. Only
            valid when `Type` is `S3`.
        Location:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Only used when `Type` is `S3`. The name of the S3 bucket where
            the artifact is located.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Only used when Type is S3. The name of the artifact. Used with
            `NamepaceType` and `Path` to determine the pattern for storing the artifact.
        NamespaceType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Only used when `Type` is `S3`. The value to use for the namespace.
            Used with `Name` and `Path` to determine the pattern for storing the artifact.
        OverrideArtifactName:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the name specified in the buildspec file overrides
            the artifact name.
        Packaging:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Only used when `Type` is `S3`. The type of output artifact
            to create.
        Path:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Only used when `Type` is `S3`. The path to the artifact. Used
            with `Name` and `NamespaceType` to determine the pattern for storing the
            artifact.
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of build artifact.
      description: Information about the build artifacts for the CodeBuild project.
    AwsCodeBuildProjectArtifactsList:
      type: array
      items:
        $ref: '#/components/schemas/AwsCodeBuildProjectArtifactsDetails'
    AwsCodeBuildProjectDetails:
      type: object
      properties:
        EncryptionKey:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The KMS key used to encrypt the build output artifacts.


            You can specify either the ARN of the KMS key or, if available, the KMS
            key alias (using the format alias/alias-name).'
        Artifacts:
          allOf:
          - $ref: '#/components/schemas/AwsCodeBuildProjectArtifactsList'
          description: Information about the build artifacts for the CodeBuild project.
        Environment:
          allOf:
          - $ref: '#/components/schemas/AwsCodeBuildProjectEnvironment'
          description: Information about the build environment for this build project.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the build project.
        Source:
          allOf:
          - $ref: '#/components/schemas/AwsCodeBuildProjectSource'
          description: Information about the build input source code for this build
            project.
        ServiceRole:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the IAM role that enables CodeBuild to interact
            with dependent Amazon Web Services services on behalf of the Amazon Web
            Services account.
        LogsConfig:
          allOf:
          - $ref: '#/components/schemas/AwsCodeBuildProjectLogsConfigDetails'
          description: Information about logs for the build project.
        VpcConfig:
          allOf:
          - $ref: '#/components/schemas/AwsCodeBuildProjectVpcConfig'
          description: Information about the VPC configuration that CodeBuild accesses.
        SecondaryArtifacts:
          allOf:
          - $ref: '#/components/schemas/AwsCodeBuildProjectArtifactsList'
          description: Information about the secondary artifacts for the CodeBuild
            project.
      description: Information about an CodeBuild project.
    AwsCodeBuildProjectEnvironment:
      type: object
      properties:
        Certificate:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The certificate to use with this build project.
        EnvironmentVariables:
          allOf:
          - $ref: '#/components/schemas/AwsCodeBuildProjectEnvironmentEnvironmentVariablesList'
          description: A set of environment variables to make available to builds
            for the build project.
        PrivilegedMode:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to allow the Docker daemon to run inside a Docker container.
            Set to `true` if the build project is used to build Docker images.
        ImagePullCredentialsType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "The type of credentials CodeBuild uses to pull images in your\
            \ build.\n\nValid values:\n\n  * `CODEBUILD` specifies that CodeBuild\
            \ uses its own credentials. This requires that you modify your ECR repository\
            \ policy to trust the CodeBuild service principal.\n\n  * `SERVICE_ROLE`\
            \ specifies that CodeBuild uses your build project's service role.\n\n\
            When you use a cross-account or private registry image, you must use `SERVICE_ROLE`\
            \ credentials. When you use an CodeBuild curated image, you must use `CODEBUILD`\
            \ credentials."
        RegistryCredential:
          allOf:
          - $ref: '#/components/schemas/AwsCodeBuildProjectEnvironmentRegistryCredential'
          description: The credentials for access to a private registry.
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The type of build environment to use for related builds.


            The environment type `ARM_CONTAINER` is available only in Regions US East
            (N. Virginia), US East (Ohio), US West (Oregon), Europe (Ireland), Asia
            Pacific (Mumbai), Asia Pacific (Tokyo), Asia Pacific (Sydney), and Europe
            (Frankfurt).


            The environment type `LINUX_CONTAINER` with compute type build.general1.2xlarge
            is available only in Regions US East (N. Virginia), US East (N. Virginia),
            US West (Oregon), Canada (Central), Europe (Ireland), Europe (London),
            Europe (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific
            (Singapore), Asia Pacific (Sydney), China (Beijing), and China (Ningxia).


            The environment type `LINUX_GPU_CONTAINER` is available only in Regions
            US East (N. Virginia), US East (N. Virginia), US West (Oregon), Canada
            (Central), Europe (Ireland), Europe (London), Europe (Frankfurt), Asia
            Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia
            Pacific (Sydney), China (Beijing), and China (Ningxia).


            Valid values: `WINDOWS_CONTAINER` | `LINUX_CONTAINER` | `LINUX_GPU_CONTAINER`
            | `ARM_CONTAINER`'
      description: Information about the build environment for this build project.
    AwsCodeBuildProjectEnvironmentEnvironmentVariablesDetails:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the environment variable.
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of environment variable.
        Value:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The value of the environment variable.
      description: Information about an environment variable that is available to
        builds for the build project.
    AwsCodeBuildProjectEnvironmentEnvironmentVariablesList:
      type: array
      items:
        $ref: '#/components/schemas/AwsCodeBuildProjectEnvironmentEnvironmentVariablesDetails'
    AwsCodeBuildProjectEnvironmentRegistryCredential:
      type: object
      properties:
        Credential:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The ARN or name of credentials created using Secrets Manager.


            The credential can use the name of the credentials only if they exist
            in your current Amazon Web Services Region.'
        CredentialProvider:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The service that created the credentials to access a private
            Docker registry.


            The valid value,` SECRETS_MANAGER`, is for Secrets Manager.'
      description: The credentials for access to a private registry.
    AwsCodeBuildProjectLogsConfigCloudWatchLogsDetails:
      type: object
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The group name of the logs in CloudWatch Logs.
        Status:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The current status of the logs in CloudWatch Logs for a build
            project.
        StreamName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The prefix of the stream name of the CloudWatch Logs.
      description: Information about CloudWatch Logs for the build project.
    AwsCodeBuildProjectLogsConfigDetails:
      type: object
      properties:
        CloudWatchLogs:
          allOf:
          - $ref: '#/components/schemas/AwsCodeBuildProjectLogsConfigCloudWatchLogsDetails'
          description: Information about CloudWatch Logs for the build project.
        S3Logs:
          allOf:
          - $ref: '#/components/schemas/AwsCodeBuildProjectLogsConfigS3LogsDetails'
          description: Information about logs built to an S3 bucket for a build project.
      description: Information about logs for the build project.
    AwsCodeBuildProjectLogsConfigS3LogsDetails:
      type: object
      properties:
        EncryptionDisabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to disable encryption of the S3 build log output.
        Location:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the S3 bucket and the path prefix for S3 logs.
        Status:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The current status of the S3 build logs.
      description: Information about logs built to an S3 bucket for a build project.
    AwsCodeBuildProjectSource:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "The type of repository that contains the source code to be\
            \ built. Valid values are:\n\n  * `BITBUCKET` \\- The source code is in\
            \ a Bitbucket repository.\n\n  * `CODECOMMIT` \\- The source code is in\
            \ an CodeCommit repository.\n\n  * `CODEPIPELINE` \\- The source code\
            \ settings are specified in the source action of a pipeline in CodePipeline.\n\
            \n  * `GITHUB` \\- The source code is in a GitHub repository.\n\n  * `GITHUB_ENTERPRISE`\
            \ \\- The source code is in a GitHub Enterprise repository.\n\n  * `NO_SOURCE`\
            \ \\- The project does not have input source code.\n\n  * `S3` \\- The\
            \ source code is in an S3 input bucket."
        Location:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "Information about the location of the source code to be built.\n\
            \nValid values include:\n\n  * For source code settings that are specified\
            \ in the source action of a pipeline in CodePipeline, location should\
            \ not be specified. If it is specified, CodePipeline ignores it. This\
            \ is because CodePipeline uses the settings in a pipeline's source action\
            \ instead of this value.\n\n  * For source code in an CodeCommit repository,\
            \ the HTTPS clone URL to the repository that contains the source code\
            \ and the build spec file (for example, `https://git-codecommit.region-ID.amazonaws.com/v1/repos/repo-name`\
            \ ).\n\n  * For source code in an S3 input bucket, one of the following.\n\
            \n    * The path to the ZIP file that contains the source code (for example,\
            \ `bucket-name/path/to/object-name.zip`).\n\n    * The path to the folder\
            \ that contains the source code (for example, `bucket-name/path/to/source-code/folder/`).\n\
            \n  * For source code in a GitHub repository, the HTTPS clone URL to the\
            \ repository that contains the source and the build spec file.\n\n  *\
            \ For source code in a Bitbucket repository, the HTTPS clone URL to the\
            \ repository that contains the source and the build spec file."
        GitCloneDepth:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Information about the Git clone depth for the build project.
        InsecureSsl:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to ignore SSL warnings while connecting to the project
            source code.
      description: Information about the build input source code for this build project.
    AwsCodeBuildProjectVpcConfig:
      type: object
      properties:
        VpcId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the VPC.
        Subnets:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: A list of one or more subnet IDs in your VPC.
        SecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: A list of one or more security group IDs in your VPC.
      description: Information about the VPC configuration that CodeBuild accesses.
    AwsCorsConfiguration:
      type: object
      properties:
        AllowOrigins:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The allowed origins for CORS requests.
        AllowCredentials:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether the CORS request includes credentials.
        ExposeHeaders:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The exposed headers for CORS requests.
        MaxAge:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of seconds for which the browser caches preflight
            request results.
        AllowMethods:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The allowed methods for CORS requests.
        AllowHeaders:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The allowed headers for CORS requests.
      description: Contains the cross-origin resource sharing (CORS) configuration
        for the API. CORS is only supported for HTTP APIs.
    AwsDmsEndpointDetails:
      type: object
      properties:
        CertificateArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) for the SSL certificate that
            encrypts connections between the DMS endpoint and the replication instance.
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the endpoint database.
        EndpointArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the endpoint.
        EndpointIdentifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The database endpoint identifier.
        EndpointType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of endpoint. Valid values are source and target.
        EngineName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of engine for the endpoint, depending on the `EndpointType`
            value.
        ExternalId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A value that can be used for cross-account validation.
        ExtraConnectionAttributes:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Additional attributes associated with the connection.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: An DMS key identifier that is used to encrypt the connection
            parameters for the endpoint. If you don't specify a value for the `KmsKeyId`
            parameter, then DMS uses your default encryption key. KMS creates the
            default encryption key for your Amazon Web Services account. Your Amazon
            Web Services account has a different default encryption key for each Amazon
            Web Services Region.
        Port:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The port used to access the endpoint.
        ServerName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the server where the endpoint database resides.
        SslMode:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The SSL mode used to connect to the endpoint. The default is
            none.
        Username:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The user name to be used to log in to the endpoint database.
      description: Provides details about an Database Migration Service (DMS) endpoint.
        An endpoint provides connection, data store type, and location information
        about your data store.
    AwsDmsReplicationInstanceDetails:
      type: object
      properties:
        AllocatedStorage:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The amount of storage (in gigabytes) that is allocated for
            the replication instance.
        AutoMinorVersionUpgrade:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether minor engine upgrades are applied automatically
            to the replication instance during the maintenance window.
        AvailabilityZone:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Availability Zone that the replication instance is created
            in. The default value is a random, system-chosen Availability Zone in
            the endpoint's Amazon Web Services Region, such as `us-east-1d`.
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The engine version number of the replication instance. If an
            engine version number is not specified when a replication instance is
            created, the default is the latest engine version available.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: An KMS key identifier that is used to encrypt the data on the
            replication instance. If you don't specify a value for the `KmsKeyId`
            parameter, DMS uses your default encryption key. KMS creates the default
            encryption key for your Amazon Web Services account. Your Amazon Web Services
            account has a different default encryption key for each Amazon Web Services
            Region.
        MultiAZ:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether the replication instance is deployed across
            multiple Availability Zones (AZs). You can't set the `AvailabilityZone`
            parameter if the `MultiAZ` parameter is set to `true`.
        PreferredMaintenanceWindow:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The maintenance window times for the replication instance.
            Upgrades to the replication instance are performed during this time.
        PubliclyAccessible:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies the accessibility options for the replication instance.
            A value of `true` represents an instance with a public IP address. A value
            of `false` represents an instance with a private IP address. The default
            value is `true`.
        ReplicationInstanceClass:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The compute and memory capacity of the replication instance
            as defined for the specified replication instance class.
        ReplicationInstanceIdentifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The replication instance identifier.
        ReplicationSubnetGroup:
          allOf:
          - $ref: '#/components/schemas/AwsDmsReplicationInstanceReplicationSubnetGroupDetails'
          description: The subnet group for the replication instance.
        VpcSecurityGroups:
          allOf:
          - $ref: '#/components/schemas/AwsDmsReplicationInstanceVpcSecurityGroupsList'
          description: The virtual private cloud (VPC) security group for the replication
            instance.
      description: Provides details about an Database Migration Service (DMS) replication
        instance. DMS uses a replication instance to connect to your source data store,
        read the source data, and format the data for consumption by the target data
        store.
    AwsDmsReplicationInstanceReplicationSubnetGroupDetails:
      type: object
      properties:
        ReplicationSubnetGroupIdentifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the replication subnet group.
      description: Provides details about the replication subnet group.
    AwsDmsReplicationInstanceVpcSecurityGroupsDetails:
      type: object
      properties:
        VpcSecurityGroupId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the VPC security group that’s associated
            with the replication instance.
      description: Provides details about the virtual private cloud (VPC) security
        group that’s associated with the replication instance.
    AwsDmsReplicationInstanceVpcSecurityGroupsList:
      type: array
      items:
        $ref: '#/components/schemas/AwsDmsReplicationInstanceVpcSecurityGroupsDetails'
    AwsDmsReplicationTaskDetails:
      type: object
      properties:
        CdcStartPosition:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Indicates when you want a change data capture (CDC) operation
            to start. `CCdcStartPosition` or `CCdcStartTime` specifies when you want
            a CDC operation to start. Only a value for one of these fields is included.
        CdcStartTime:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Indicates the start time for a CDC operation. `CdcStartPosition`
            or `CCdcStartTime` specifies when you want a CDC operation to start. Only
            a value for one of these fields is included.
        CdcStopPosition:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Indicates when you want a CDC operation to stop. The value
            can be either server time or commit time.
        MigrationType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The migration type.
        Id:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the replication task.
        ResourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A display name for the resource identifier at the end of the
            `EndpointArn` response parameter. If you don't specify a `ResourceIdentifier`
            value, DMS generates a default identifier value for the end of `EndpointArn`.
        ReplicationInstanceArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of a replication instance.
        ReplicationTaskIdentifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The user-defined replication task identifier or name.
        ReplicationTaskSettings:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The settings for the replication task.
        SourceEndpointArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the source endpoint.
        TableMappings:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The table mappings for the replication task, in JSON format.
        TargetEndpointArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the target endpoint.
        TaskData:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Supplemental information that the task requires to migrate
            the data for certain source and target endpoints.
      description: Provides details about an Database Migration Service (DMS) replication
        task. A replication task moves a set of data from the source endpoint to the
        target endpoint.
    AwsDynamoDbTableAttributeDefinition:
      type: object
      properties:
        AttributeName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the attribute.
        AttributeType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of the attribute.
      description: Contains a definition of an attribute for the table.
    AwsDynamoDbTableAttributeDefinitionList:
      type: array
      items:
        $ref: '#/components/schemas/AwsDynamoDbTableAttributeDefinition'
    AwsDynamoDbTableBillingModeSummary:
      type: object
      properties:
        BillingMode:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The method used to charge for read and write throughput and
            to manage capacity.
        LastUpdateToPayPerRequestDateTime:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'If the billing mode is `PAY_PER_REQUEST`, indicates when the
            billing mode was set to that value.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
      description: Provides information about the billing for read/write capacity
        on the table.
    AwsDynamoDbTableDetails:
      type: object
      properties:
        AttributeDefinitions:
          allOf:
          - $ref: '#/components/schemas/AwsDynamoDbTableAttributeDefinitionList'
          description: A list of attribute definitions for the table.
        BillingModeSummary:
          allOf:
          - $ref: '#/components/schemas/AwsDynamoDbTableBillingModeSummary'
          description: Information about the billing for read/write capacity on the
            table.
        CreationDateTime:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the table was created.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        GlobalSecondaryIndexes:
          allOf:
          - $ref: '#/components/schemas/AwsDynamoDbTableGlobalSecondaryIndexList'
          description: List of global secondary indexes for the table.
        GlobalTableVersion:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The version of global tables being used.
        ItemCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of items in the table.
        KeySchema:
          allOf:
          - $ref: '#/components/schemas/AwsDynamoDbTableKeySchemaList'
          description: The primary key structure for the table.
        LatestStreamArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the latest stream for the table.
        LatestStreamLabel:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The label of the latest stream. The label is not a unique identifier.
        LocalSecondaryIndexes:
          allOf:
          - $ref: '#/components/schemas/AwsDynamoDbTableLocalSecondaryIndexList'
          description: The list of local secondary indexes for the table.
        ProvisionedThroughput:
          allOf:
          - $ref: '#/components/schemas/AwsDynamoDbTableProvisionedThroughput'
          description: Information about the provisioned throughput for the table.
        Replicas:
          allOf:
          - $ref: '#/components/schemas/AwsDynamoDbTableReplicaList'
          description: The list of replicas of this table.
        RestoreSummary:
          allOf:
          - $ref: '#/components/schemas/AwsDynamoDbTableRestoreSummary'
          description: Information about the restore for the table.
        SseDescription:
          allOf:
          - $ref: '#/components/schemas/AwsDynamoDbTableSseDescription'
          description: Information about the server-side encryption for the table.
        StreamSpecification:
          allOf:
          - $ref: '#/components/schemas/AwsDynamoDbTableStreamSpecification'
          description: The current DynamoDB Streams configuration for the table.
        TableId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the table.
        TableName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the table.
        TableSizeBytes:
          allOf:
          - $ref: '#/components/schemas/SizeBytes'
          description: The total size of the table in bytes.
        TableStatus:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "The current status of the table. Valid values are as follows:\n\
            \n  * `ACTIVE`\n\n  * `ARCHIVED`\n\n  * `ARCHIVING`\n\n  * `CREATING`\n\
            \n  * `DELETING`\n\n  * `INACCESSIBLE_ENCRYPTION_CREDENTIALS`\n\n  * `UPDATING`"
        DeletionProtectionEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether deletion protection is to be enabled (true)
            or disabled (false) on the table.
      description: Provides details about a DynamoDB table.
    AwsDynamoDbTableGlobalSecondaryIndex:
      type: object
      properties:
        Backfilling:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the index is currently backfilling.
        IndexArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the index.
        IndexName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the index.
        IndexSizeBytes:
          allOf:
          - $ref: '#/components/schemas/SizeBytes'
          description: The total size in bytes of the index.
        IndexStatus:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "The current status of the index.\n\n  * `ACTIVE`\n\n  * `CREATING`\n\
            \n  * `DELETING`\n\n  * `UPDATING`"
        ItemCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of items in the index.
        KeySchema:
          allOf:
          - $ref: '#/components/schemas/AwsDynamoDbTableKeySchemaList'
          description: The key schema for the index.
        Projection:
          allOf:
          - $ref: '#/components/schemas/AwsDynamoDbTableProjection'
          description: Attributes that are copied from the table into an index.
        ProvisionedThroughput:
          allOf:
          - $ref: '#/components/schemas/AwsDynamoDbTableProvisionedThroughput'
          description: Information about the provisioned throughput settings for the
            indexes.
      description: Information abut a global secondary index for the table.
    AwsDynamoDbTableGlobalSecondaryIndexList:
      type: array
      items:
        $ref: '#/components/schemas/AwsDynamoDbTableGlobalSecondaryIndex'
    AwsDynamoDbTableKeySchema:
      type: object
      properties:
        AttributeName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the key schema attribute.
        KeyType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of key used for the key schema attribute. Valid values
            are `HASH` or `RANGE`.
      description: A component of the key schema for the DynamoDB table, a global
        secondary index, or a local secondary index.
    AwsDynamoDbTableKeySchemaList:
      type: array
      items:
        $ref: '#/components/schemas/AwsDynamoDbTableKeySchema'
    AwsDynamoDbTableLocalSecondaryIndex:
      type: object
      properties:
        IndexArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the index.
        IndexName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the index.
        KeySchema:
          allOf:
          - $ref: '#/components/schemas/AwsDynamoDbTableKeySchemaList'
          description: The complete key schema for the index.
        Projection:
          allOf:
          - $ref: '#/components/schemas/AwsDynamoDbTableProjection'
          description: Attributes that are copied from the table into the index. These
            are in addition to the primary key attributes and index key attributes,
            which are automatically projected.
      description: Information about a local secondary index for a DynamoDB table.
    AwsDynamoDbTableLocalSecondaryIndexList:
      type: array
      items:
        $ref: '#/components/schemas/AwsDynamoDbTableLocalSecondaryIndex'
    AwsDynamoDbTableProjection:
      type: object
      properties:
        NonKeyAttributes:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The nonkey attributes that are projected into the index. For
            each attribute, provide the attribute name.
        ProjectionType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "The types of attributes that are projected into the index.\
            \ Valid values are as follows:\n\n  * `ALL`\n\n  * `INCLUDE`\n\n  * `KEYS_ONLY`"
      description: For global and local secondary indexes, identifies the attributes
        that are copied from the table into the index.
    AwsDynamoDbTableProvisionedThroughput:
      type: object
      properties:
        LastDecreaseDateTime:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the provisioned throughput was last decreased.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        LastIncreaseDateTime:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the provisioned throughput was last increased.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        NumberOfDecreasesToday:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of times during the current UTC calendar day that
            the provisioned throughput was decreased.
        ReadCapacityUnits:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of strongly consistent reads consumed per
            second before DynamoDB returns a `ThrottlingException`.
        WriteCapacityUnits:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of writes consumed per second before DynamoDB
            returns a `ThrottlingException`.
      description: Information about the provisioned throughput for the table or for
        a global secondary index.
    AwsDynamoDbTableProvisionedThroughputOverride:
      type: object
      properties:
        ReadCapacityUnits:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The read capacity units for the replica.
      description: Replica-specific configuration for the provisioned throughput.
    AwsDynamoDbTableReplica:
      type: object
      properties:
        GlobalSecondaryIndexes:
          allOf:
          - $ref: '#/components/schemas/AwsDynamoDbTableReplicaGlobalSecondaryIndexList'
          description: List of global secondary indexes for the replica.
        KmsMasterKeyId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the KMS key that will be used for KMS encryption
            for the replica.
        ProvisionedThroughputOverride:
          allOf:
          - $ref: '#/components/schemas/AwsDynamoDbTableProvisionedThroughputOverride'
          description: Replica-specific configuration for the provisioned throughput.
        RegionName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the Region where the replica is located.
        ReplicaStatus:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "The current status of the replica. Valid values are as follows:\n\
            \n  * `ACTIVE`\n\n  * `CREATING`\n\n  * `CREATION_FAILED`\n\n  * `DELETING`\n\
            \n  * `UPDATING`"
        ReplicaStatusDescription:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Detailed information about the replica status.
      description: Information about a replica of a DynamoDB table.
    AwsDynamoDbTableReplicaGlobalSecondaryIndex:
      type: object
      properties:
        IndexName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the index.
        ProvisionedThroughputOverride:
          allOf:
          - $ref: '#/components/schemas/AwsDynamoDbTableProvisionedThroughputOverride'
          description: Replica-specific configuration for the provisioned throughput
            for the index.
      description: Information about a global secondary index for a DynamoDB table
        replica.
    AwsDynamoDbTableReplicaGlobalSecondaryIndexList:
      type: array
      items:
        $ref: '#/components/schemas/AwsDynamoDbTableReplicaGlobalSecondaryIndex'
    AwsDynamoDbTableReplicaList:
      type: array
      items:
        $ref: '#/components/schemas/AwsDynamoDbTableReplica'
    AwsDynamoDbTableRestoreSummary:
      type: object
      properties:
        SourceBackupArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the source backup from which the table was restored.
        SourceTableArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the source table for the backup.
        RestoreDateTime:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates the point in time that the table was restored to.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        RestoreInProgress:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether a restore is currently in progress.
      description: Information about the restore for the table.
    AwsDynamoDbTableSseDescription:
      type: object
      properties:
        InaccessibleEncryptionDateTime:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'If the key is inaccessible, the date and time when DynamoDB
            detected that the key was inaccessible.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        Status:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The status of the server-side encryption.
        SseType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of server-side encryption.
        KmsMasterKeyArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the KMS key that is used for the KMS encryption.
      description: Information about the server-side encryption for the table.
    AwsDynamoDbTableStreamSpecification:
      type: object
      properties:
        StreamEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether DynamoDB Streams is enabled on the table.
        StreamViewType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Determines the information that is written to the table.
      description: The current DynamoDB Streams configuration for the table.
    AwsEc2ClientVpnEndpointAuthenticationOptionsActiveDirectoryDetails:
      type: object
      properties:
        DirectoryId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the Active Directory used for authentication.
      description: Provides details about an Active Directory that’s used to authenticate
        an Client VPN endpoint.
    AwsEc2ClientVpnEndpointAuthenticationOptionsDetails:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The authentication type used.
        ActiveDirectory:
          allOf:
          - $ref: '#/components/schemas/AwsEc2ClientVpnEndpointAuthenticationOptionsActiveDirectoryDetails'
          description: Information about the Active Directory, if applicable. With
            Active Directory authentication, clients are authenticated against existing
            Active Directory groups.
        MutualAuthentication:
          allOf:
          - $ref: '#/components/schemas/AwsEc2ClientVpnEndpointAuthenticationOptionsMutualAuthenticationDetails'
          description: Information about the authentication certificates, if applicable.
        FederatedAuthentication:
          allOf:
          - $ref: '#/components/schemas/AwsEc2ClientVpnEndpointAuthenticationOptionsFederatedAuthenticationDetails'
          description: Information about the IAM SAML identity provider, if applicable.
      description: Information about the authentication method used by the Client
        VPN endpoint.
    AwsEc2ClientVpnEndpointAuthenticationOptionsFederatedAuthenticationDetails:
      type: object
      properties:
        SamlProviderArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the IAM SAML identity provider.
        SelfServiceSamlProviderArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the IAM SAML identity provider
            for the self-service portal.
      description: Describes the IAM SAML identity providers used for federated authentication.
    AwsEc2ClientVpnEndpointAuthenticationOptionsList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEc2ClientVpnEndpointAuthenticationOptionsDetails'
    AwsEc2ClientVpnEndpointAuthenticationOptionsMutualAuthenticationDetails:
      type: object
      properties:
        ClientRootCertificateChain:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the client certificate.
      description: Information about the client certificate used for authentication.
    AwsEc2ClientVpnEndpointClientConnectOptionsDetails:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether client connect options are enabled.
        LambdaFunctionArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the Lambda function used
            for connection authorization.
        Status:
          allOf:
          - $ref: '#/components/schemas/AwsEc2ClientVpnEndpointClientConnectOptionsStatusDetails'
          description: The status of any updates to the client connect options.
      description: The options for managing connection authorization for new client
        connections.
    AwsEc2ClientVpnEndpointClientConnectOptionsStatusDetails:
      type: object
      properties:
        Code:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The status code.
        Message:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The status message.
      description: Describes the status of the Client VPN endpoint attribute.
    AwsEc2ClientVpnEndpointClientLoginBannerOptionsDetails:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Current state of text banner feature.
        BannerText:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Customizable text that will be displayed in a banner on Amazon
            Web Services provided clients when a VPN session is established.
      description: Options for enabling a customizable text banner that will be displayed
        on Amazon Web Services provided clients when a VPN session is established.
    AwsEc2ClientVpnEndpointConnectionLogOptionsDetails:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether client connection logging is enabled for
            the Client VPN endpoint.
        CloudwatchLogGroup:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the Amazon CloudWatch Logs log group to which connection
            logging data is published.
        CloudwatchLogStream:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the Amazon CloudWatch Logs log stream to which
            connection logging data is published.
      description: Information about the client connection logging options for the
        Client VPN endpoint.
    AwsEc2ClientVpnEndpointDetails:
      type: object
      properties:
        ClientVpnEndpointId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the Client VPN endpoint.
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A brief description of the endpoint.
        ClientCidrBlock:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The IPv4 address range, in CIDR notation, from which client
            IP addresses are assigned.
        DnsServer:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: Information about the DNS servers to be used for DNS resolution.
        SplitTunnel:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether split-tunnel is enabled in the Client VPN
            endpoint.
        TransportProtocol:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The transport protocol used by the Client VPN endpoint.
        VpnPort:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The port number for the Client VPN endpoint.
        ServerCertificateArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the server certificate.
        AuthenticationOptions:
          allOf:
          - $ref: '#/components/schemas/AwsEc2ClientVpnEndpointAuthenticationOptionsList'
          description: Information about the authentication method used by the Client
            VPN endpoint.
        ConnectionLogOptions:
          allOf:
          - $ref: '#/components/schemas/AwsEc2ClientVpnEndpointConnectionLogOptionsDetails'
          description: Information about the client connection logging options for
            the Client VPN endpoint.
        SecurityGroupIdSet:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The IDs of the security groups for the target network.
        VpcId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the VPC.
        SelfServicePortalUrl:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The URL of the self-service portal.
        ClientConnectOptions:
          allOf:
          - $ref: '#/components/schemas/AwsEc2ClientVpnEndpointClientConnectOptionsDetails'
          description: The options for managing connection authorization for new client
            connections.
        SessionTimeoutHours:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum VPN session duration time in hours.
        ClientLoginBannerOptions:
          allOf:
          - $ref: '#/components/schemas/AwsEc2ClientVpnEndpointClientLoginBannerOptionsDetails'
          description: Options for enabling a customizable text banner that will be
            displayed on Amazon Web Services provided clients when a VPN session is
            established.
      description: Describes an Client VPN endpoint. A Client VPN endpoint is the
        resource that you create and configure to enable and manage client VPN sessions.
        It's the termination point for all client VPN sessions.
    AwsEc2EipDetails:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the EC2 instance.
        PublicIp:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A public IP address that is associated with the EC2 instance.
        AllocationId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier that Amazon Web Services assigns to represent
            the allocation of the Elastic IP address for use with Amazon VPC.
        AssociationId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier that represents the association of the Elastic
            IP address with an EC2 instance.
        Domain:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The domain in which to allocate the address.


            If the address is for use with EC2 instances in a VPC, then `Domain` is
            `vpc`. Otherwise, `Domain` is `standard`.'
        PublicIpv4Pool:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of an IP address pool. This parameter allows
            Amazon EC2 to select an IP address from the address pool.
        NetworkBorderGroup:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the location from which the Elastic IP address
            is advertised.
        NetworkInterfaceId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the network interface.
        NetworkInterfaceOwnerId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Web Services account ID of the owner of the network
            interface.
        PrivateIpAddress:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The private IP address that is associated with the Elastic
            IP address.
      description: Information about an Elastic IP address.
    AwsEc2InstanceDetails:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The instance type of the instance.
        ImageId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Machine Image (AMI) ID of the instance.
        IpV4Addresses:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The IPv4 addresses associated with the instance.
        IpV6Addresses:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The IPv6 addresses associated with the instance.
        KeyName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The key name associated with the instance.
        IamInstanceProfileArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The IAM profile ARN of the instance.
        VpcId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the VPC that the instance was launched in.
        SubnetId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the subnet that the instance was launched
            in.
        LaunchedAt:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the instance was launched.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        NetworkInterfaces:
          allOf:
          - $ref: '#/components/schemas/AwsEc2InstanceNetworkInterfacesList'
          description: The identifiers of the network interfaces for the EC2 instance.
            The details for each network interface are in a corresponding `AwsEc2NetworkInterfacesDetails`
            object.
        VirtualizationType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The virtualization type of the Amazon Machine Image (AMI) required
            to launch the instance.
        MetadataOptions:
          allOf:
          - $ref: '#/components/schemas/AwsEc2InstanceMetadataOptions'
          description: Details about the metadata options for the Amazon EC2 instance.
        Monitoring:
          allOf:
          - $ref: '#/components/schemas/AwsEc2InstanceMonitoringDetails'
          description: Describes the type of monitoring that’s turned on for an instance.
      description: The details of an Amazon EC2 instance.
    AwsEc2InstanceMetadataOptions:
      type: object
      properties:
        HttpEndpoint:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Enables or disables the HTTP metadata endpoint on the instance.
        HttpProtocolIpv6:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Enables or disables the IPv6 endpoint for the instance metadata
            service.
        HttpPutResponseHopLimit:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The desired HTTP PUT response hop limit for instance metadata
            requests. The larger the number, the further instance metadata requests
            can travel.
        HttpTokens:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The state of token usage for your instance metadata requests.
        InstanceMetadataTags:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Specifies whether to allow access to instance tags from the
            instance metadata.
      description: Metadata options that allow you to configure and secure the Amazon
        EC2 instance.
    AwsEc2InstanceMonitoringDetails:
      type: object
      properties:
        State:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Indicates whether detailed monitoring is turned on. Otherwise,
            basic monitoring is turned on.
      description: The type of monitoring that’s turned on for an Amazon EC2 instance.
    AwsEc2InstanceNetworkInterfacesDetails:
      type: object
      properties:
        NetworkInterfaceId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the network interface. The details are in
            a corresponding `AwsEc2NetworkInterfacesDetails` object.
      description: Identifies a network interface for the Amazon EC2 instance.
    AwsEc2InstanceNetworkInterfacesList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEc2InstanceNetworkInterfacesDetails'
    AwsEc2LaunchTemplateDataBlockDeviceMappingSetDetails:
      type: object
      properties:
        DeviceName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The device name.
        Ebs:
          allOf:
          - $ref: '#/components/schemas/AwsEc2LaunchTemplateDataBlockDeviceMappingSetEbsDetails'
          description: Parameters used to automatically set up Amazon EBS volumes
            when the instance is launched.
        NoDevice:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Omits the device from the block device mapping when an empty
            string is specified.
        VirtualName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The virtual device name (ephemeralN). Instance store volumes
            are numbered starting from 0. An instance type with 2 available instance
            store volumes can specify mappings for `ephemeral0` and `ephemeral1`.
            The number of available instance store volumes depends on the instance
            type.
      description: Information about a block device mapping for an Amazon Elastic
        Compute Cloud (Amazon EC2) launch template.
    AwsEc2LaunchTemplateDataBlockDeviceMappingSetEbsDetails:
      type: object
      properties:
        DeleteOnTermination:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether the EBS volume is deleted on instance termination.
        Encrypted:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether the EBS volume is encrypted. Encrypted volumes
            can only be attached to instances that support Amazon EBS encryption.
            If you're creating a volume from a snapshot, you can't specify an encryption
            value.
        Iops:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of I/O operations per second (IOPS).
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the symmetric Key Management
            Service (KMS) customer managed key used for encryption.
        SnapshotId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the EBS snapshot.
        Throughput:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The throughput to provision for a gp3 volume, with a maximum
            of 1,000 MiB/s.
        VolumeSize:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The size of the volume, in GiBs. You must specify either a
            snapshot ID or a volume size.
        VolumeType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The volume type.
      description: Parameters for a block device for an Amazon Elastic Block Store
        (Amazon EBS) volume in an Amazon EC2 launch template.
    AwsEc2LaunchTemplateDataBlockDeviceMappingSetList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEc2LaunchTemplateDataBlockDeviceMappingSetDetails'
    AwsEc2LaunchTemplateDataCapacityReservationSpecificationCapacityReservationTargetDetails:
      type: object
      properties:
        CapacityReservationId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the Capacity Reservation in which to run the instance.
        CapacityReservationResourceGroupArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the Capacity Reservation
            resource group in which to run the instance.
      description: Information about the target Capacity Reservation or Capacity Reservation
        group in which to run an Amazon EC2 instance.
    AwsEc2LaunchTemplateDataCapacityReservationSpecificationDetails:
      type: object
      properties:
        CapacityReservationPreference:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Indicates the instance's Capacity Reservation preferences.
            If equal to `open`, the instance can run in any open Capacity Reservation
            that has matching attributes (instance type, platform, Availability Zone).
            If equal to `none`, the instance avoids running in a Capacity Reservation
            even if one is available. The instance runs in On-Demand capacity.
        CapacityReservationTarget:
          allOf:
          - $ref: '#/components/schemas/AwsEc2LaunchTemplateDataCapacityReservationSpecificationCapacityReservationTargetDetails'
          description: Specifies a target Capacity Reservation.
      description: Specifies the Capacity Reservation targeting option of an Amazon
        EC2 instance.
    AwsEc2LaunchTemplateDataCpuOptionsDetails:
      type: object
      properties:
        CoreCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of CPU cores for the instance.
        ThreadsPerCore:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of threads per CPU core. A value of `1` disables
            multithreading for the instance, The default value is `2`.
      description: Specifies the CPU options for an Amazon EC2 instance. For more
        information, see [Optimize CPU options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html)
        in the _Amazon Elastic Compute Cloud User Guide_.
    AwsEc2LaunchTemplateDataCreditSpecificationDetails:
      type: object
      properties:
        CpuCredits:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The credit option for CPU usage of a T instance.
      description: Specifies the credit option for CPU usage of a T2, T3, or T3a Amazon
        EC2 instance.
    AwsEc2LaunchTemplateDataDetails:
      type: object
      properties:
        BlockDeviceMappingSet:
          allOf:
          - $ref: '#/components/schemas/AwsEc2LaunchTemplateDataBlockDeviceMappingSetList'
          description: Information about a block device mapping for an Amazon EC2
            launch template.
        CapacityReservationSpecification:
          allOf:
          - $ref: '#/components/schemas/AwsEc2LaunchTemplateDataCapacityReservationSpecificationDetails'
          description: Specifies an instance's Capacity Reservation targeting option.
            You can specify only one option at a time.
        CpuOptions:
          allOf:
          - $ref: '#/components/schemas/AwsEc2LaunchTemplateDataCpuOptionsDetails'
          description: Specifies the CPU options for an instance. For more information,
            see [Optimize CPU options](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html)
            in the _Amazon Elastic Compute Cloud User Guide_.
        CreditSpecification:
          allOf:
          - $ref: '#/components/schemas/AwsEc2LaunchTemplateDataCreditSpecificationDetails'
          description: Specifies the credit option for CPU usage of a T2, T3, or T3a
            instance.
        DisableApiStop:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether to enable the instance for stop protection.
            For more information, see [Enable stop protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html#Using_StopProtection)
            in the _Amazon EC2 User Guide_.
        DisableApiTermination:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: If you set this parameter to `true`, you can't terminate the
            instance using the Amazon EC2 console, CLI, or API. If set to `true`,
            you can.
        EbsOptimized:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether the instance is optimized for Amazon EBS
            I/O.
        ElasticGpuSpecificationSet:
          allOf:
          - $ref: '#/components/schemas/AwsEc2LaunchTemplateDataElasticGpuSpecificationSetList'
          description: Provides details about Elastic Graphics accelerators to associate
            with the instance.
        ElasticInferenceAcceleratorSet:
          allOf:
          - $ref: '#/components/schemas/AwsEc2LaunchTemplateDataElasticInferenceAcceleratorSetList'
          description: The Amazon Elastic Inference accelerator for the instance.
        EnclaveOptions:
          allOf:
          - $ref: '#/components/schemas/AwsEc2LaunchTemplateDataEnclaveOptionsDetails'
          description: Indicates whether the Amazon EC2 instance is enabled for Amazon
            Web Services Nitro Enclaves.
        HibernationOptions:
          allOf:
          - $ref: '#/components/schemas/AwsEc2LaunchTemplateDataHibernationOptionsDetails'
          description: Specifies whether your Amazon EC2 instance is configured for
            hibernation.
        IamInstanceProfile:
          allOf:
          - $ref: '#/components/schemas/AwsEc2LaunchTemplateDataIamInstanceProfileDetails'
          description: The name or Amazon Resource Name (ARN) of an IAM instance profile.
        ImageId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the Amazon Machine Image (AMI).
        InstanceInitiatedShutdownBehavior:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Provides the options for specifying the instance initiated
            shutdown behavior.
        InstanceMarketOptions:
          allOf:
          - $ref: '#/components/schemas/AwsEc2LaunchTemplateDataInstanceMarketOptionsDetails'
          description: Specifies the market (purchasing) option for an instance.
        InstanceRequirements:
          allOf:
          - $ref: '#/components/schemas/AwsEc2LaunchTemplateDataInstanceRequirementsDetails'
          description: The attributes for the instance types. When you specify instance
            attributes, Amazon EC2 will identify instance types with these attributes.
            If you specify `InstanceRequirements`, you can't specify `InstanceType`.
        InstanceType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The instance type. For more information, see [Instance types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html)
            in the _Amazon EC2 User Guide_. If you specify `InstanceType`, you can't
            specify `InstanceRequirements`.
        KernelId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the kernel.
        KeyName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the key pair that allows users to connect to the
            instance.
        LicenseSet:
          allOf:
          - $ref: '#/components/schemas/AwsEc2LaunchTemplateDataLicenseSetList'
          description: Specifies a license configuration for an instance.
        MaintenanceOptions:
          allOf:
          - $ref: '#/components/schemas/AwsEc2LaunchTemplateDataMaintenanceOptionsDetails'
          description: The maintenance options of your instance.
        MetadataOptions:
          allOf:
          - $ref: '#/components/schemas/AwsEc2LaunchTemplateDataMetadataOptionsDetails'
          description: The metadata options for the instance. For more information,
            see [Instance metadata and user data](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html)
            in the _Amazon EC2 User Guide_.
        Monitoring:
          allOf:
          - $ref: '#/components/schemas/AwsEc2LaunchTemplateDataMonitoringDetails'
          description: The monitoring for the instance.
        NetworkInterfaceSet:
          allOf:
          - $ref: '#/components/schemas/AwsEc2LaunchTemplateDataNetworkInterfaceSetList'
          description: Specifies the parameters for a network interface that is attached
            to the instance.
        Placement:
          allOf:
          - $ref: '#/components/schemas/AwsEc2LaunchTemplateDataPlacementDetails'
          description: Specifies the placement of an instance.
        PrivateDnsNameOptions:
          allOf:
          - $ref: '#/components/schemas/AwsEc2LaunchTemplateDataPrivateDnsNameOptionsDetails'
          description: The options for the instance hostname.
        RamDiskId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the RAM disk.
        SecurityGroupIdSet:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: One or more security group IDs.
        SecurityGroupSet:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: One or more security group names. For a nondefault VPC, you
            must use security group IDs instead. You cannot specify both a security
            group ID and security name in the same request.
        UserData:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The user data to make available to the instance.
      description: The information to include in an Amazon Elastic Compute Cloud (Amazon
        EC2) launch template.
    AwsEc2LaunchTemplateDataElasticGpuSpecificationSetDetails:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of Elastic Graphics accelerator.
      description: Provides details about an Elastic Graphics specification for an
        Amazon EC2 launch template.
    AwsEc2LaunchTemplateDataElasticGpuSpecificationSetList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEc2LaunchTemplateDataElasticGpuSpecificationSetDetails'
    AwsEc2LaunchTemplateDataElasticInferenceAcceleratorSetDetails:
      type: object
      properties:
        Count:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of Elastic Inference accelerators to attach to the
            instance.
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of Elastic Inference accelerator.
      description: Provides details for an Amazon Elastic Inference accelerator.
    AwsEc2LaunchTemplateDataElasticInferenceAcceleratorSetList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEc2LaunchTemplateDataElasticInferenceAcceleratorSetDetails'
    AwsEc2LaunchTemplateDataEnclaveOptionsDetails:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: If this parameter is set to `true`, the instance is enabled
            for Amazon Web Services Nitro Enclaves.
      description: Indicates whether the instance is enabled for Amazon Web Services
        Nitro Enclaves.
    AwsEc2LaunchTemplateDataHibernationOptionsDetails:
      type: object
      properties:
        Configured:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: If you set this parameter to `true`, the instance is enabled
            for hibernation.
      description: Specifies whether your Amazon EC2 instance is configured for hibernation.
    AwsEc2LaunchTemplateDataIamInstanceProfileDetails:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the instance profile.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the instance profile.
      description: Provides details for an Identity and Access Management (IAM) instance
        profile, which is a container for an IAM role for your instance.
    AwsEc2LaunchTemplateDataInstanceMarketOptionsDetails:
      type: object
      properties:
        MarketType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The market type.
        SpotOptions:
          allOf:
          - $ref: '#/components/schemas/AwsEc2LaunchTemplateDataInstanceMarketOptionsSpotOptionsDetails'
          description: The options for Spot Instances.
      description: Provides details about the market (purchasing) option for an Amazon
        EC2 instance.
    AwsEc2LaunchTemplateDataInstanceMarketOptionsSpotOptionsDetails:
      type: object
      properties:
        BlockDurationMinutes:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Deprecated.
        InstanceInterruptionBehavior:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The behavior when a Spot Instance is interrupted.
        MaxPrice:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The maximum hourly price you're willing to pay for the Spot
            Instances.
        SpotInstanceType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Spot Instance request type.
        ValidUntil:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The end date of the request, in UTC format (YYYY-MM-DDTHH:MM:SSZ),
            for persistent requests.
      description: Provides details about the market (purchasing) options for Spot
        Instances.
    AwsEc2LaunchTemplateDataInstanceRequirementsAcceleratorCountDetails:
      type: object
      properties:
        Max:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of accelerators. If this parameter isn't
            specified, there's no maximum limit. To exclude accelerator-enabled instance
            types, set `Max` to `0`.
        Min:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The minimum number of accelerators. If this parameter isn't
            specified, there's no minimum limit.
      description: The minimum and maximum number of accelerators (GPUs, FPGAs, or
        Amazon Web Services Inferentia chips) on an Amazon EC2 instance.
    AwsEc2LaunchTemplateDataInstanceRequirementsAcceleratorTotalMemoryMiBDetails:
      type: object
      properties:
        Max:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum amount of memory, in MiB. If this parameter isn't
            specified, there's no maximum limit.
        Min:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The minimum amount of memory, in MiB. If `0` is specified,
            there's no maximum limit.
      description: The minimum and maximum amount of memory, in MiB, for the accelerators
        on an Amazon EC2 instance.
    AwsEc2LaunchTemplateDataInstanceRequirementsBaselineEbsBandwidthMbpsDetails:
      type: object
      properties:
        Max:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum baseline bandwidth, in Mbps. If this parameter
            is omitted, there's no maximum limit.
        Min:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The minimum baseline bandwidth, in Mbps. If this parameter
            is omitted, there's no minimum limit.
      description: The minimum and maximum baseline bandwidth to Amazon Elastic Block
        Store (Amazon EBS), in Mbps. For more information, see [Amazon EBS–optimized
        instances ](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimized.html)
        in the _Amazon EC2 User Guide_.
    AwsEc2LaunchTemplateDataInstanceRequirementsDetails:
      type: object
      properties:
        AcceleratorCount:
          allOf:
          - $ref: '#/components/schemas/AwsEc2LaunchTemplateDataInstanceRequirementsAcceleratorCountDetails'
          description: The minimum and maximum number of accelerators (GPUs, FPGAs,
            or Amazon Web Services Inferentia chips) on an instance.
        AcceleratorManufacturers:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: Indicates whether instance types must have accelerators by
            specific manufacturers.
        AcceleratorNames:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The accelerators that must be on the instance type.
        AcceleratorTotalMemoryMiB:
          allOf:
          - $ref: '#/components/schemas/AwsEc2LaunchTemplateDataInstanceRequirementsAcceleratorTotalMemoryMiBDetails'
          description: The minimum and maximum amount of total accelerator memory,
            in MiB.
        AcceleratorTypes:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The accelerator types that must be on the instance type.
        BareMetal:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Indicates whether bare metal instance types must be included,
            excluded, or required.
        BaselineEbsBandwidthMbps:
          allOf:
          - $ref: '#/components/schemas/AwsEc2LaunchTemplateDataInstanceRequirementsBaselineEbsBandwidthMbpsDetails'
          description: The minimum and maximum baseline bandwidth to Amazon EBS, in
            Mbps. For more information, see [Amazon EBS optimized instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimized.html)
            in the _Amazon EC2 User Guide_.
        BurstablePerformance:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Indicates whether burstable performance T instance types are
            included, excluded, or required. For more information, [Burstable performance
            instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html)
            in the _Amazon EC2 User Guide_.
        CpuManufacturers:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The CPU manufacturers to include.
        ExcludedInstanceTypes:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The instance types to exclude.
        InstanceGenerations:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: Indicates whether current or previous generation instance types
            are included.
        LocalStorage:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Indicates whether instance types with instance store volumes
            are included, excluded, or required. For more information, see [Amazon
            EC2 instance store](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html)
            in the _Amazon EC2 User Guide_.
        LocalStorageTypes:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The type of local storage that is required.
        MemoryGiBPerVCpu:
          allOf:
          - $ref: '#/components/schemas/AwsEc2LaunchTemplateDataInstanceRequirementsMemoryGiBPerVCpuDetails'
          description: The minimum and maximum amount of memory per vCPU, in GiB.
        MemoryMiB:
          allOf:
          - $ref: '#/components/schemas/AwsEc2LaunchTemplateDataInstanceRequirementsMemoryMiBDetails'
          description: The minimum and maximum amount of memory, in MiB.
        NetworkInterfaceCount:
          allOf:
          - $ref: '#/components/schemas/AwsEc2LaunchTemplateDataInstanceRequirementsNetworkInterfaceCountDetails'
          description: The minimum and maximum number of network interfaces.
        OnDemandMaxPricePercentageOverLowestPrice:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'The price protection threshold for On-Demand Instances. This
            is the maximum you''ll pay for an On-Demand Instance, expressed as a percentage
            above the least expensive current generation M, C, or R instance type
            with your specified attributes. When Amazon EC2 selects instance types
            with your attributes, it excludes instance types priced above your threshold.


            The parameter accepts an integer, which Amazon EC2 interprets as a percentage.


            A high value, such as `999999`, turns off price protection.'
        RequireHibernateSupport:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether instance types must support hibernation for
            On-Demand Instances.
        SpotMaxPricePercentageOverLowestPrice:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'The price protection threshold for Spot Instances. This is
            the maximum you''ll pay for a Spot Instance, expressed as a percentage
            above the least expensive current generation M, C, or R instance type
            with your specified attributes. When Amazon EC2 selects instance types
            with your attributes, it excludes instance types priced above your threshold.


            The parameter accepts an integer, which Amazon EC2 interprets as a percentage.


            A high value, such as `999999`, turns off price protection.'
        TotalLocalStorageGB:
          allOf:
          - $ref: '#/components/schemas/AwsEc2LaunchTemplateDataInstanceRequirementsTotalLocalStorageGBDetails'
          description: The minimum and maximum amount of total local storage, in GB.
        VCpuCount:
          allOf:
          - $ref: '#/components/schemas/AwsEc2LaunchTemplateDataInstanceRequirementsVCpuCountDetails'
          description: The minimum and maximum number of vCPUs.
      description: The attributes for the Amazon EC2 instance types.
    AwsEc2LaunchTemplateDataInstanceRequirementsMemoryGiBPerVCpuDetails:
      type: object
      properties:
        Max:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The maximum amount of memory per vCPU, in GiB. If this parameter
            is omitted, there's no maximum limit.
        Min:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The minimum amount of memory per vCPU, in GiB. If this parameter
            is omitted, there's no maximum limit.
      description: The minimum and maximum amount of memory per vCPU, in GiB.
    AwsEc2LaunchTemplateDataInstanceRequirementsMemoryMiBDetails:
      type: object
      properties:
        Max:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum amount of memory, in MiB.
        Min:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The minimum amount of memory, in MiB.
      description: The minimum and maximum amount of memory, in MiB, for an Amazon
        EC2 instance.
    AwsEc2LaunchTemplateDataInstanceRequirementsNetworkInterfaceCountDetails:
      type: object
      properties:
        Max:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of network interfaces.
        Min:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The minimum number of network interfaces.
      description: The minimum and maximum number of network interfaces to be attached
        to an Amazon EC2 instance.
    AwsEc2LaunchTemplateDataInstanceRequirementsTotalLocalStorageGBDetails:
      type: object
      properties:
        Max:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The maximum amount of total local storage, in GB.
        Min:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The minimum amount of total local storage, in GB.
      description: The minimum and maximum amount of total local storage, in GB, that
        an Amazon EC2 instance uses.
    AwsEc2LaunchTemplateDataInstanceRequirementsVCpuCountDetails:
      type: object
      properties:
        Max:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of vCPUs.
        Min:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The minimum number of vCPUs.
      description: The minimum and maximum number of vCPUs for an Amazon EC2 instance.
    AwsEc2LaunchTemplateDataLicenseSetDetails:
      type: object
      properties:
        LicenseConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the license configuration.
      description: Provides details about the license configuration for an Amazon
        EC2 instance.
    AwsEc2LaunchTemplateDataLicenseSetList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEc2LaunchTemplateDataLicenseSetDetails'
    AwsEc2LaunchTemplateDataMaintenanceOptionsDetails:
      type: object
      properties:
        AutoRecovery:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Disables the automatic recovery behavior of your instance or
            sets it to default.
      description: The maintenance options of an Amazon EC2 instance.
    AwsEc2LaunchTemplateDataMetadataOptionsDetails:
      type: object
      properties:
        HttpEndpoint:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Enables or disables the HTTP metadata endpoint on your instances.
            If the parameter is not specified, the default state is enabled, and you
            won't be able to access your instance metadata.
        HttpProtocolIpv6:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Enables or disables the IPv6 endpoint for the instance metadata
            service.
        HttpTokens:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The state of token usage for your instance metadata requests.
        HttpPutResponseHopLimit:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The desired HTTP PUT response hop limit for instance metadata
            requests. The larger the number, the further instance metadata requests
            can travel.
        InstanceMetadataTags:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: When set to `enabled`, this parameter allows access to instance
            tags from the instance metadata. When set to `disabled`, it turns off
            access to instance tags from the instance metadata. For more information,
            see [Work with instance tags in instance metadata](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#work-with-tags-in-IMDS)
            in the _Amazon EC2 User Guide_.
      description: Specifies the metadata options for an Amazon EC2 instance.
    AwsEc2LaunchTemplateDataMonitoringDetails:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Enables detailed monitoring when `true` is specified. Otherwise,
            basic monitoring is enabled. For more information about detailed monitoring,
            see [Enable or turn off detailed monitoring for your instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch-new.html)
            in the _Amazon EC2 User Guide_.
      description: The monitoring for an Amazon EC2 instance.
    AwsEc2LaunchTemplateDataNetworkInterfaceSetDetails:
      type: object
      properties:
        AssociateCarrierIpAddress:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether to associate a Carrier IP address with eth0
            for a new network interface. You use this option when you launch an instance
            in a Wavelength Zone and want to associate a Carrier IP address with the
            network interface. For more information, see [Carrier IP address](https://docs.aws.amazon.com/wavelength/latest/developerguide/how-wavelengths-work.html#provider-owned-ip)
            in the _Wavelength Developer Guide_.
        AssociatePublicIpAddress:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Associates a public IPv4 address with eth0 for a new network
            interface.
        DeleteOnTermination:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether the network interface is deleted when the
            instance is terminated.
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A description for the network interface.
        DeviceIndex:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The device index for the network interface attachment.
        Groups:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The IDs of one or more security groups.
        InterfaceType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of network interface.
        Ipv4PrefixCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of IPv4 prefixes to be automatically assigned to
            the network interface. You cannot use this option if you use the `Ipv4Prefixes`
            option.
        Ipv4Prefixes:
          allOf:
          - $ref: '#/components/schemas/AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv4PrefixesList'
          description: One or more IPv4 prefixes to be assigned to the network interface.
            You cannot use this option if you use the `Ipv4PrefixCount` option.
        Ipv6AddressCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of IPv6 addresses to assign to a network interface.
            Amazon EC2 automatically selects the IPv6 addresses from the subnet range.
            You can't use this option if you use `Ipv6Addresses`.
        Ipv6Addresses:
          allOf:
          - $ref: '#/components/schemas/AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6AddressesList'
          description: One or more specific IPv6 addresses from the IPv6 CIDR block
            range of your subnet. You can't use this option if you use `Ipv6AddressCount`.
        Ipv6PrefixCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of IPv6 prefixes to be automatically assigned to
            the network interface. You cannot use this option if you use the `Ipv6Prefix`
            option.
        Ipv6Prefixes:
          allOf:
          - $ref: '#/components/schemas/AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6PrefixesList'
          description: One or more IPv6 prefixes to be assigned to the network interface.
            You cannot use this option if you use the `Ipv6PrefixCount` option.
        NetworkCardIndex:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The index of the network card. Some instance types support
            multiple network cards. The primary network interface must be assigned
            to network card index `0`. The default is network card index `0`.
        NetworkInterfaceId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the network interface.
        PrivateIpAddress:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The primary private IPv4 address of the network interface.
        PrivateIpAddresses:
          allOf:
          - $ref: '#/components/schemas/AwsEc2LaunchTemplateDataNetworkInterfaceSetPrivateIpAddressesList'
          description: One or more private IPv4 addresses.
        SecondaryPrivateIpAddressCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of secondary private IPv4 addresses to assign to
            a network interface.
        SubnetId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the subnet for the network interface.
      description: One or more network interfaces to attach to an Amazon EC2 instance.
        If you specify a network interface, you must specify security groups and subnets
        as part of the network interface.
    AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv4PrefixesDetails:
      type: object
      properties:
        Ipv4Prefix:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The IPv4 prefix. For more information, see [Assigning prefixes
            to Amazon EC2 network interfaces](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-prefix-eni.html)
            in the _Amazon Elastic Compute Cloud User Guide_.
      description: Provides details on one or more IPv4 prefixes for a network interface.
    AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv4PrefixesList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv4PrefixesDetails'
    AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6AddressesDetails:
      type: object
      properties:
        Ipv6Address:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: One or more specific IPv6 addresses from the IPv6 CIDR block
            range of your subnet.
      description: Specifies an IPv6 address in an Amazon EC2 launch template.
    AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6AddressesList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6AddressesDetails'
    AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6PrefixesDetails:
      type: object
      properties:
        Ipv6Prefix:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The IPv6 prefix.
      description: Provides details on one or more IPv6 prefixes to be assigned to
        the network interface.
    AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6PrefixesList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6PrefixesDetails'
    AwsEc2LaunchTemplateDataNetworkInterfaceSetList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEc2LaunchTemplateDataNetworkInterfaceSetDetails'
    AwsEc2LaunchTemplateDataNetworkInterfaceSetPrivateIpAddressesDetails:
      type: object
      properties:
        Primary:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether the private IPv4 address is the primary private
            IPv4 address. Only one IPv4 address can be designated as primary.
        PrivateIpAddress:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The private IPv4 address.
      description: One or more private IPv4 addresses.
    AwsEc2LaunchTemplateDataNetworkInterfaceSetPrivateIpAddressesList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEc2LaunchTemplateDataNetworkInterfaceSetPrivateIpAddressesDetails'
    AwsEc2LaunchTemplateDataPlacementDetails:
      type: object
      properties:
        Affinity:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The affinity setting for an instance on an EC2 Dedicated Host.
        AvailabilityZone:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Availability Zone for the instance.
        GroupName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the placement group for the instance.
        HostId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the Dedicated Host for the instance.
        HostResourceGroupArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the host resource group in
            which to launch the instances.
        PartitionNumber:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of the partition the instance should launch in.
        SpreadDomain:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Reserved for future use.
        Tenancy:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The tenancy of the instance (if the instance is running in
            a VPC). An instance with a tenancy of dedicated runs on single-tenant
            hardware.
      description: Provides details about the placement of an Amazon EC2 instance.
    AwsEc2LaunchTemplateDataPrivateDnsNameOptionsDetails:
      type: object
      properties:
        EnableResourceNameDnsAAAARecord:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether to respond to DNS queries for instance hostnames
            with DNS AAAA records.
        EnableResourceNameDnsARecord:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether to respond to DNS queries for instance hostnames
            with DNS A records.
        HostnameType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of hostname for EC2 instances.
      description: Describes the options for Amazon EC2 instance hostnames.
    AwsEc2LaunchTemplateDetails:
      type: object
      properties:
        LaunchTemplateName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A name for the launch template.
        Id:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: An ID for the launch template.
        LaunchTemplateData:
          allOf:
          - $ref: '#/components/schemas/AwsEc2LaunchTemplateDataDetails'
          description: The information to include in the launch template.
        DefaultVersionNumber:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The default version of the launch template.
        LatestVersionNumber:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The latest version of the launch template.
      description: Specifies the properties for creating an Amazon Elastic Compute
        Cloud (Amazon EC2) launch template.
    AwsEc2NetworkAclAssociation:
      type: object
      properties:
        NetworkAclAssociationId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the association between the network ACL and
            the subnet.
        NetworkAclId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the network ACL.
        SubnetId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the subnet that is associated with the network
            ACL.
      description: An association between the network ACL and a subnet.
    AwsEc2NetworkAclAssociationList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEc2NetworkAclAssociation'
    AwsEc2NetworkAclDetails:
      type: object
      properties:
        IsDefault:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether this is the default network ACL for the VPC.
        NetworkAclId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the network ACL.
        OwnerId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the Amazon Web Services account that owns
            the network ACL.
        VpcId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the VPC for the network ACL.
        Associations:
          allOf:
          - $ref: '#/components/schemas/AwsEc2NetworkAclAssociationList'
          description: Associations between the network ACL and subnets.
        Entries:
          allOf:
          - $ref: '#/components/schemas/AwsEc2NetworkAclEntryList'
          description: The set of rules in the network ACL.
      description: Contains details about an Amazon EC2 network access control list
        (ACL).
    AwsEc2NetworkAclEntry:
      type: object
      properties:
        CidrBlock:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The IPV4 network range for which to deny or allow access.
        Egress:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the rule is an egress rule. An egress rule is a rule
            that applies to traffic that leaves the subnet.
        IcmpTypeCode:
          allOf:
          - $ref: '#/components/schemas/IcmpTypeCode'
          description: The Internet Control Message Protocol (ICMP) type and code
            for which to deny or allow access.
        Ipv6CidrBlock:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The IPV6 network range for which to deny or allow access.
        PortRange:
          allOf:
          - $ref: '#/components/schemas/PortRangeFromTo'
          description: For TCP or UDP protocols, the range of ports that the rule
            applies to.
        Protocol:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The protocol that the rule applies to. To deny or allow access
            to all protocols, use the value `-1`.
        RuleAction:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Whether the rule is used to allow access or deny access.
        RuleNumber:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The rule number. The rules are processed in order by their
            number.
      description: A rule for the network ACL. Each rule allows or denies access based
        on the IP address, traffic direction, port, and protocol.
    AwsEc2NetworkAclEntryList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEc2NetworkAclEntry'
    AwsEc2NetworkInterfaceAttachment:
      type: object
      properties:
        AttachTime:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the attachment initiated.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        AttachmentId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the network interface attachment
        DeleteOnTermination:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether the network interface is deleted when the
            instance is terminated.
        DeviceIndex:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The device index of the network interface attachment on the
            instance.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the instance.
        InstanceOwnerId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Web Services account ID of the owner of the instance.
        Status:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The attachment state.


            Valid values: `attaching` | `attached` | `detaching` | `detached`'
      description: Information about the network interface attachment.
    AwsEc2NetworkInterfaceDetails:
      type: object
      properties:
        Attachment:
          allOf:
          - $ref: '#/components/schemas/AwsEc2NetworkInterfaceAttachment'
          description: The network interface attachment.
        NetworkInterfaceId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the network interface.
        SecurityGroups:
          allOf:
          - $ref: '#/components/schemas/AwsEc2NetworkInterfaceSecurityGroupList'
          description: Security groups for the network interface.
        SourceDestCheck:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether traffic to or from the instance is validated.
        IpV6Addresses:
          allOf:
          - $ref: '#/components/schemas/AwsEc2NetworkInterfaceIpV6AddressList'
          description: The IPv6 addresses associated with the network interface.
        PrivateIpAddresses:
          allOf:
          - $ref: '#/components/schemas/AwsEc2NetworkInterfacePrivateIpAddressList'
          description: The private IPv4 addresses associated with the network interface.
        PublicDnsName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The public DNS name of the network interface.
        PublicIp:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The address of the Elastic IP address bound to the network
            interface.
      description: Details about the network interface
    AwsEc2NetworkInterfaceIpV6AddressDetail:
      type: object
      properties:
        IpV6Address:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The IPV6 address.
      description: Provides information about an IPV6 address that is associated with
        the network interface.
    AwsEc2NetworkInterfaceIpV6AddressList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEc2NetworkInterfaceIpV6AddressDetail'
    AwsEc2NetworkInterfacePrivateIpAddressDetail:
      type: object
      properties:
        PrivateIpAddress:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The IP address.
        PrivateDnsName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The private DNS name for the IP address.
      description: Provides information about a private IPv4 address that is with
        the network interface.
    AwsEc2NetworkInterfacePrivateIpAddressList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEc2NetworkInterfacePrivateIpAddressDetail'
    AwsEc2NetworkInterfaceSecurityGroup:
      type: object
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the security group.
        GroupId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the security group.
      description: A security group associated with the network interface.
    AwsEc2NetworkInterfaceSecurityGroupList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEc2NetworkInterfaceSecurityGroup'
    AwsEc2RouteTableDetails:
      type: object
      properties:
        AssociationSet:
          allOf:
          - $ref: '#/components/schemas/AssociationSetList'
          description: The associations between a route table and one or more subnets
            or a gateway.
        OwnerId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the Amazon Web Services account that owns the route
            table.
        PropagatingVgwSet:
          allOf:
          - $ref: '#/components/schemas/PropagatingVgwSetList'
          description: Describes a virtual private gateway propagating route.
        RouteTableId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the route table.
        RouteSet:
          allOf:
          - $ref: '#/components/schemas/RouteSetList'
          description: The routes in the route table.
        VpcId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the virtual private cloud (VPC).
      description: Provides details about a route table for the specified VPC.
    AwsEc2SecurityGroupDetails:
      type: object
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the security group.
        GroupId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the security group.
        OwnerId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Web Services account ID of the owner of the security
            group.
        VpcId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: '[VPC only] The ID of the VPC for the security group.'
        IpPermissions:
          allOf:
          - $ref: '#/components/schemas/AwsEc2SecurityGroupIpPermissionList'
          description: The inbound rules associated with the security group.
        IpPermissionsEgress:
          allOf:
          - $ref: '#/components/schemas/AwsEc2SecurityGroupIpPermissionList'
          description: '[VPC only] The outbound rules associated with the security
            group.'
      description: Details about an Amazon EC2 security group.
    AwsEc2SecurityGroupIpPermission:
      type: object
      properties:
        IpProtocol:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The IP protocol name (`tcp`, `udp`, `icmp`, `icmpv6`) or number.


            [VPC only] Use `-1` to specify all protocols.


            When authorizing security group rules, specifying `-1` or a protocol number
            other than `tcp`, `udp`, `icmp`, or `icmpv6` allows traffic on all ports,
            regardless of any port range you specify.


            For `tcp`, `udp`, and `icmp`, you must specify a port range.


            For `icmpv6`, the port range is optional. If you omit the port range,
            traffic for all types and codes is allowed.'
        FromPort:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'The start of the port range for the TCP and UDP protocols,
            or an ICMP/ICMPv6 type number.


            A value of -1 indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6
            types, you must specify all codes.'
        ToPort:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'The end of the port range for the TCP and UDP protocols, or
            an ICMP/ICMPv6 code.


            A value of `-1` indicates all ICMP/ICMPv6 codes. If you specify all ICMP/ICMPv6
            types, you must specify all codes.'
        UserIdGroupPairs:
          allOf:
          - $ref: '#/components/schemas/AwsEc2SecurityGroupUserIdGroupPairList'
          description: The security group and Amazon Web Services account ID pairs.
        IpRanges:
          allOf:
          - $ref: '#/components/schemas/AwsEc2SecurityGroupIpRangeList'
          description: The IPv4 ranges.
        Ipv6Ranges:
          allOf:
          - $ref: '#/components/schemas/AwsEc2SecurityGroupIpv6RangeList'
          description: The IPv6 ranges.
        PrefixListIds:
          allOf:
          - $ref: '#/components/schemas/AwsEc2SecurityGroupPrefixListIdList'
          description: '[VPC only] The prefix list IDs for an Amazon Web Services
            service. With outbound rules, this is the Amazon Web Services service
            to access through a VPC endpoint from instances associated with the security
            group.'
      description: An IP permission for an EC2 security group.
    AwsEc2SecurityGroupIpPermissionList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEc2SecurityGroupIpPermission'
    AwsEc2SecurityGroupIpRange:
      type: object
      properties:
        CidrIp:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The IPv4 CIDR range. You can specify either a CIDR range or
            a source security group, but not both. To specify a single IPv4 address,
            use the /32 prefix length.
      description: A range of IPv4 addresses.
    AwsEc2SecurityGroupIpRangeList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEc2SecurityGroupIpRange'
    AwsEc2SecurityGroupIpv6Range:
      type: object
      properties:
        CidrIpv6:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The IPv6 CIDR range. You can specify either a CIDR range or
            a source security group, but not both. To specify a single IPv6 address,
            use the /128 prefix length.
      description: A range of IPv6 addresses.
    AwsEc2SecurityGroupIpv6RangeList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEc2SecurityGroupIpv6Range'
    AwsEc2SecurityGroupPrefixListId:
      type: object
      properties:
        PrefixListId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the prefix.
      description: A prefix list ID.
    AwsEc2SecurityGroupPrefixListIdList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEc2SecurityGroupPrefixListId'
    AwsEc2SecurityGroupUserIdGroupPair:
      type: object
      properties:
        GroupId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the security group.
        GroupName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the security group.
        PeeringStatus:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The status of a VPC peering connection, if applicable.
        UserId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The ID of an Amazon Web Services account.


            For a referenced security group in another VPC, the account ID of the
            referenced security group is returned in the response. If the referenced
            security group is deleted, this value is not returned.


            [EC2-Classic] Required when adding or removing rules that reference a
            security group in another VPC.'
        VpcId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the VPC for the referenced security group, if applicable.
        VpcPeeringConnectionId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the VPC peering connection, if applicable.
      description: A relationship between a security group and a user.
    AwsEc2SecurityGroupUserIdGroupPairList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEc2SecurityGroupUserIdGroupPair'
    AwsEc2SubnetDetails:
      type: object
      properties:
        AssignIpv6AddressOnCreation:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to assign an IPV6 address to a network interface that
            is created in this subnet.
        AvailabilityZone:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Availability Zone for the subnet.
        AvailabilityZoneId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the Availability Zone for the subnet.
        AvailableIpAddressCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of available IPV4 addresses in the subnet. Does
            not include addresses for stopped instances.
        CidrBlock:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The IPV4 CIDR block that is assigned to the subnet.
        DefaultForAz:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether this subnet is the default subnet for the Availability
            Zone.
        MapPublicIpOnLaunch:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether instances in this subnet receive a public IP address.
        OwnerId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the Amazon Web Services account that owns
            the subnet.
        State:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The current state of the subnet. Valid values are `available`
            or `pending`.
        SubnetArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the subnet.
        SubnetId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the subnet.
        VpcId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the VPC that contains the subnet.
        Ipv6CidrBlockAssociationSet:
          allOf:
          - $ref: '#/components/schemas/Ipv6CidrBlockAssociationList'
          description: The IPV6 CIDR blocks that are associated with the subnet.
      description: Contains information about a subnet in Amazon EC2.
    AwsEc2TransitGatewayDetails:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the transit gateway.
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The description of the transit gateway.
        DefaultRouteTablePropagation:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Turn on or turn off automatic propagation of routes to the
            default propagation route table.
        AutoAcceptSharedAttachments:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Turn on or turn off automatic acceptance of attachment requests.
        DefaultRouteTableAssociation:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Turn on or turn off automatic association with the default
            association route table.
        TransitGatewayCidrBlocks:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The transit gateway Classless Inter-Domain Routing (CIDR) blocks.
        AssociationDefaultRouteTableId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the default association route table.
        PropagationDefaultRouteTableId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the default propagation route table.
        VpnEcmpSupport:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Turn on or turn off Equal Cost Multipath Protocol (ECMP) support.
        DnsSupport:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Turn on or turn off DNS support.
        MulticastSupport:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Indicates whether multicast is supported on the transit gateway.
        AmazonSideAsn:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: A private Autonomous System Number (ASN) for the Amazon side
            of a BGP session.
      description: Information about an Amazon Web Services Amazon EC2 Transit Gateway
        that interconnects virtual private clouds (VPCs) and on-premises networks.
    AwsEc2VolumeAttachment:
      type: object
      properties:
        AttachTime:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The datetime when the attachment initiated.
        DeleteOnTermination:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the EBS volume is deleted when the EC2 instance is
            terminated.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the EC2 instance.
        Status:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "The attachment state of the volume. Valid values are as follows:\n\
            \n  * `attaching`\n\n  * `attached`\n\n  * `busy`\n\n  * `detaching`\n\
            \n  * `detached`"
      description: An attachment to an Amazon EC2 volume.
    AwsEc2VolumeAttachmentList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEc2VolumeAttachment'
    AwsEc2VolumeDetails:
      type: object
      properties:
        CreateTime:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the volume was created.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        DeviceName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The device name for the volume that is attached to the instance.
        Encrypted:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether the volume is encrypted.
        Size:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The size of the volume, in GiBs.
        SnapshotId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The snapshot from which the volume was created.
        Status:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "The volume state. Valid values are as follows:\n\n  * `available`\n\
            \n  * `creating`\n\n  * `deleted`\n\n  * `deleting`\n\n  * `error`\n\n\
            \  * `in-use`"
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the KMS key that was used to protect the volume
            encryption key for the volume.
        Attachments:
          allOf:
          - $ref: '#/components/schemas/AwsEc2VolumeAttachmentList'
          description: The volume attachments.
        VolumeId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the volume.
        VolumeType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The volume type.
        VolumeScanStatus:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Indicates whether the volume was scanned or skipped.
      description: Details about an EC2 volume.
    AwsEc2VpcDetails:
      type: object
      properties:
        CidrBlockAssociationSet:
          allOf:
          - $ref: '#/components/schemas/CidrBlockAssociationList'
          description: Information about the IPv4 CIDR blocks associated with the
            VPC.
        Ipv6CidrBlockAssociationSet:
          allOf:
          - $ref: '#/components/schemas/Ipv6CidrBlockAssociationList'
          description: Information about the IPv6 CIDR blocks associated with the
            VPC.
        DhcpOptionsId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the set of Dynamic Host Configuration Protocol
            (DHCP) options that are associated with the VPC. If the default options
            are associated with the VPC, then this is default.
        State:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The current state of the VPC. Valid values are `available`
            or `pending`.
      description: Details about an EC2 VPC.
    AwsEc2VpcEndpointServiceDetails:
      type: object
      properties:
        AcceptanceRequired:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether requests from other Amazon Web Services accounts to
            create an endpoint to the service must first be accepted.
        AvailabilityZones:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The Availability Zones where the service is available.
        BaseEndpointDnsNames:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The DNS names for the service.
        ManagesVpcEndpoints:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the service manages its VPC endpoints.
        GatewayLoadBalancerArns:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The ARNs of the Gateway Load Balancers for the service.
        NetworkLoadBalancerArns:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The ARNs of the Network Load Balancers for the service.
        PrivateDnsName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The private DNS name for the service.
        ServiceId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the service.
        ServiceName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the service.
        ServiceState:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "The current state of the service. Valid values are as follows:\n\
            \n  * `Available`\n\n  * `Deleted`\n\n  * `Deleting`\n\n  * `Failed`\n\
            \n  * `Pending`"
        ServiceType:
          allOf:
          - $ref: '#/components/schemas/AwsEc2VpcEndpointServiceServiceTypeList'
          description: The types for the service.
      description: Contains details about the service configuration for a VPC endpoint
        service.
    AwsEc2VpcEndpointServiceServiceTypeDetails:
      type: object
      properties:
        ServiceType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of service.
      description: The service type information for a VPC endpoint service.
    AwsEc2VpcEndpointServiceServiceTypeList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEc2VpcEndpointServiceServiceTypeDetails'
    AwsEc2VpcPeeringConnectionDetails:
      type: object
      properties:
        AccepterVpcInfo:
          allOf:
          - $ref: '#/components/schemas/AwsEc2VpcPeeringConnectionVpcInfoDetails'
          description: Information about the accepter VPC.
        ExpirationTime:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The time at which an unaccepted VPC peering connection will
            expire.
        RequesterVpcInfo:
          allOf:
          - $ref: '#/components/schemas/AwsEc2VpcPeeringConnectionVpcInfoDetails'
          description: Information about the requester VPC.
        Status:
          allOf:
          - $ref: '#/components/schemas/AwsEc2VpcPeeringConnectionStatusDetails'
          description: The status of the VPC peering connection.
        VpcPeeringConnectionId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the VPC peering connection.
      description: 'Provides information about a VPC peering connection between two
        VPCs: a requester VPC that you own and an accepter VPC with which to create
        the connection.'
    AwsEc2VpcPeeringConnectionStatusDetails:
      type: object
      properties:
        Code:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The status of the VPC peering connection.
        Message:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A message that provides more information about the status,
            if applicable.
      description: Details about the status of the VPC peering connection.
    AwsEc2VpcPeeringConnectionVpcInfoDetails:
      type: object
      properties:
        CidrBlock:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The IPv4 CIDR block for the VPC.
        CidrBlockSet:
          allOf:
          - $ref: '#/components/schemas/VpcInfoCidrBlockSetList'
          description: Information about the IPv4 CIDR blocks for the VPC.
        Ipv6CidrBlockSet:
          allOf:
          - $ref: '#/components/schemas/VpcInfoIpv6CidrBlockSetList'
          description: The IPv6 CIDR block for the VPC.
        OwnerId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the Amazon Web Services account that owns the VPC.
        PeeringOptions:
          allOf:
          - $ref: '#/components/schemas/VpcInfoPeeringOptionsDetails'
          description: Information about the VPC peering connection options for the
            accepter or requester VPC.
        Region:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Web Services Region in which the VPC is located.
        VpcId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the VPC.
      description: Describes a VPC in a VPC peering connection.
    AwsEc2VpnConnectionDetails:
      type: object
      properties:
        VpnConnectionId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the VPN connection.
        State:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "The current state of the VPN connection. Valid values are\
            \ as follows:\n\n  * `available`\n\n  * `deleted`\n\n  * `deleting`\n\n\
            \  * `pending`"
        CustomerGatewayId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the customer gateway that is at your end
            of the VPN connection.
        CustomerGatewayConfiguration:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The configuration information for the VPN connection's customer
            gateway, in the native XML format.
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of VPN connection.
        VpnGatewayId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the virtual private gateway that is at the
            Amazon Web Services side of the VPN connection.
        Category:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The category of the VPN connection. `VPN` indicates an Amazon
            Web Services VPN connection. `VPN-Classic` indicates an Amazon Web Services
            Classic VPN connection.
        VgwTelemetry:
          allOf:
          - $ref: '#/components/schemas/AwsEc2VpnConnectionVgwTelemetryList'
          description: Information about the VPN tunnel.
        Options:
          allOf:
          - $ref: '#/components/schemas/AwsEc2VpnConnectionOptionsDetails'
          description: The VPN connection options.
        Routes:
          allOf:
          - $ref: '#/components/schemas/AwsEc2VpnConnectionRoutesList'
          description: The static routes that are associated with the VPN connection.
        TransitGatewayId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the transit gateway that is associated with
            the VPN connection.
      description: Details about an Amazon EC2 VPN connection.
    AwsEc2VpnConnectionOptionsDetails:
      type: object
      properties:
        StaticRoutesOnly:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the VPN connection uses static routes only.
        TunnelOptions:
          allOf:
          - $ref: '#/components/schemas/AwsEc2VpnConnectionOptionsTunnelOptionsList'
          description: The VPN tunnel options.
      description: VPN connection options.
    AwsEc2VpnConnectionOptionsTunnelOptionsDetails:
      type: object
      properties:
        DpdTimeoutSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of seconds after which a Dead Peer Detection (DPD)
            timeout occurs.
        IkeVersions:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The Internet Key Exchange (IKE) versions that are permitted
            for the VPN tunnel.
        OutsideIpAddress:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The external IP address of the VPN tunnel.
        Phase1DhGroupNumbers:
          allOf:
          - $ref: '#/components/schemas/IntegerList'
          description: The permitted Diffie-Hellman group numbers for the VPN tunnel
            for phase 1 IKE negotiations.
        Phase1EncryptionAlgorithms:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The permitted encryption algorithms for the VPN tunnel for
            phase 1 IKE negotiations.
        Phase1IntegrityAlgorithms:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The permitted integrity algorithms for the VPN tunnel for phase
            1 IKE negotiations.
        Phase1LifetimeSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The lifetime for phase 1 of the IKE negotiation, in seconds.
        Phase2DhGroupNumbers:
          allOf:
          - $ref: '#/components/schemas/IntegerList'
          description: The permitted Diffie-Hellman group numbers for the VPN tunnel
            for phase 2 IKE negotiations.
        Phase2EncryptionAlgorithms:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The permitted encryption algorithms for the VPN tunnel for
            phase 2 IKE negotiations.
        Phase2IntegrityAlgorithms:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The permitted integrity algorithms for the VPN tunnel for phase
            2 IKE negotiations.
        Phase2LifetimeSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The lifetime for phase 2 of the IKE negotiation, in seconds.
        PreSharedKey:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The preshared key to establish initial authentication between
            the virtual private gateway and the customer gateway.
        RekeyFuzzPercentage:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The percentage of the rekey window, which is determined by
            `RekeyMarginTimeSeconds` during which the rekey time is randomly selected.
        RekeyMarginTimeSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The margin time, in seconds, before the phase 2 lifetime expires,
            during which the Amazon Web Services side of the VPN connection performs
            an IKE rekey.
        ReplayWindowSize:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of packets in an IKE replay window.
        TunnelInsideCidr:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The range of inside IPv4 addresses for the tunnel.
      description: The VPN tunnel options.
    AwsEc2VpnConnectionOptionsTunnelOptionsList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEc2VpnConnectionOptionsTunnelOptionsDetails'
    AwsEc2VpnConnectionRoutesDetails:
      type: object
      properties:
        DestinationCidrBlock:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The CIDR block associated with the local subnet of the customer
            data center.
        State:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The current state of the static route.
      description: A static routes associated with the VPN connection.
    AwsEc2VpnConnectionRoutesList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEc2VpnConnectionRoutesDetails'
    AwsEc2VpnConnectionVgwTelemetryDetails:
      type: object
      properties:
        AcceptedRouteCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of accepted routes.
        CertificateArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the VPN tunnel endpoint certificate.
        LastStatusChange:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The date and time of the last change in status.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        OutsideIpAddress:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Internet-routable IP address of the virtual private gateway's
            outside interface.
        Status:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The status of the VPN tunnel. Valid values are `DOWN` or `UP`.
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: If an error occurs, a description of the error.
      description: Information about the VPN tunnel.
    AwsEc2VpnConnectionVgwTelemetryList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEc2VpnConnectionVgwTelemetryDetails'
    AwsEcrContainerImageDetails:
      type: object
      properties:
        RegistryId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Web Services account identifier that is associated
            with the registry that the image belongs to.
        RepositoryName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the repository that the image belongs to.
        Architecture:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "The architecture of the image. Valid values are as follows:\n\
            \n  * `arm64`\n\n  * `i386`\n\n  * `x86_64`"
        ImageDigest:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The sha256 digest of the image manifest.
        ImageTags:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The list of tags that are associated with the image.
        ImagePublishedAt:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The date and time when the image was pushed to the repository.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
      description: Information about an Amazon ECR image.
    AwsEcrRepositoryDetails:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the repository.
        ImageScanningConfiguration:
          allOf:
          - $ref: '#/components/schemas/AwsEcrRepositoryImageScanningConfigurationDetails'
          description: The image scanning configuration for a repository.
        ImageTagMutability:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The tag mutability setting for the repository. Valid values
            are `IMMUTABLE` or `MUTABLE`.
        LifecyclePolicy:
          allOf:
          - $ref: '#/components/schemas/AwsEcrRepositoryLifecyclePolicyDetails'
          description: Information about the lifecycle policy for the repository.
        RepositoryName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the repository.
        RepositoryPolicyText:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The text of the repository policy.
      description: Provides information about an Amazon Elastic Container Registry
        repository.
    AwsEcrRepositoryImageScanningConfigurationDetails:
      type: object
      properties:
        ScanOnPush:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to scan images after they are pushed to a repository.
      description: The image scanning configuration for a repository.
    AwsEcrRepositoryLifecyclePolicyDetails:
      type: object
      properties:
        LifecyclePolicyText:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The text of the lifecycle policy.
        RegistryId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Web Services account identifier that is associated
            with the registry that contains the repository.
      description: Information about the lifecycle policy for the repository.
    AwsEcsClusterClusterSettingsDetails:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the setting. The valid value is `containerInsights`.
        Value:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The value of the setting. Valid values are `disabled` or `enabled`.
      description: Indicates whether to enable CloudWatch Container Insights for the
        ECS cluster.
    AwsEcsClusterClusterSettingsList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEcsClusterClusterSettingsDetails'
    AwsEcsClusterConfigurationDetails:
      type: object
      properties:
        ExecuteCommandConfiguration:
          allOf:
          - $ref: '#/components/schemas/AwsEcsClusterConfigurationExecuteCommandConfigurationDetails'
          description: Contains the run command configuration for the cluster.
      description: The run command configuration for the cluster.
    AwsEcsClusterConfigurationExecuteCommandConfigurationDetails:
      type: object
      properties:
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the KMS key that is used to encrypt the data
            between the local client and the container.
        LogConfiguration:
          allOf:
          - $ref: '#/components/schemas/AwsEcsClusterConfigurationExecuteCommandConfigurationLogConfigurationDetails'
          description: The log configuration for the results of the run command actions.
            Required if `Logging` is `NONE`.
        Logging:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The log setting to use for redirecting logs for run command
            results.
      description: Contains the run command configuration for the cluster.
    AwsEcsClusterConfigurationExecuteCommandConfigurationLogConfigurationDetails:
      type: object
      properties:
        CloudWatchEncryptionEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to enable encryption on the CloudWatch logs.
        CloudWatchLogGroupName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the CloudWatch log group to send the logs to.
        S3BucketName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the S3 bucket to send logs to.
        S3EncryptionEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to encrypt the logs that are sent to the S3 bucket.
        S3KeyPrefix:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Identifies the folder in the S3 bucket to send the logs to.
      description: The log configuration for the results of the run command actions.
    AwsEcsClusterDefaultCapacityProviderStrategyDetails:
      type: object
      properties:
        Base:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The minimum number of tasks to run on the specified capacity
            provider.
        CapacityProvider:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the capacity provider.
        Weight:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The relative percentage of the total number of tasks launched
            that should use the capacity provider.
      description: The default capacity provider strategy for the cluster. The default
        capacity provider strategy is used when services or tasks are run without
        a specified launch type or capacity provider strategy.
    AwsEcsClusterDefaultCapacityProviderStrategyList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEcsClusterDefaultCapacityProviderStrategyDetails'
    AwsEcsClusterDetails:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) that identifies the cluster.
        ActiveServicesCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of services that are running on the cluster in an
            `ACTIVE` state. You can view these services with the Amazon ECS [ `ListServices`
            ](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListServices.html)
            API operation.
        CapacityProviders:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The short name of one or more capacity providers to associate
            with the cluster.
        ClusterSettings:
          allOf:
          - $ref: '#/components/schemas/AwsEcsClusterClusterSettingsList'
          description: The setting to use to create the cluster. Specifically used
            to configure whether to enable CloudWatch Container Insights for the cluster.
        Configuration:
          allOf:
          - $ref: '#/components/schemas/AwsEcsClusterConfigurationDetails'
          description: The run command configuration for the cluster.
        DefaultCapacityProviderStrategy:
          allOf:
          - $ref: '#/components/schemas/AwsEcsClusterDefaultCapacityProviderStrategyList'
          description: The default capacity provider strategy for the cluster. The
            default capacity provider strategy is used when services or tasks are
            run without a specified launch type or capacity provider strategy.
        ClusterName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A name that you use to identify your cluster.
        RegisteredContainerInstancesCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of container instances registered into the cluster.
            This includes container instances in both `ACTIVE` and `DRAINING` status.
        RunningTasksCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of tasks in the cluster that are in the `RUNNING`
            state.
        Status:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The status of the cluster.
      description: Provides details about an Amazon ECS cluster.
    AwsEcsContainerDetails:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the container.
        Image:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The image used for the container.
        MountPoints:
          allOf:
          - $ref: '#/components/schemas/AwsMountPointList'
          description: The mount points for data volumes in your container.
        Privileged:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: When this parameter is true, the container is given elevated
            privileges on the host container instance (similar to the root user).
      description: Provides information about an Amazon ECS container.
    AwsEcsContainerDetailsList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEcsContainerDetails'
    AwsEcsServiceCapacityProviderStrategyDetails:
      type: object
      properties:
        Base:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'The minimum number of tasks to run on the capacity provider.
            Only one strategy item can specify a value for `Base`.


            The value must be between 0 and 100000.'
        CapacityProvider:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The short name of the capacity provider.
        Weight:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'The relative percentage of the total number of tasks that
            should use the capacity provider.


            If no weight is specified, the default value is 0. At least one capacity
            provider must have a weight greater than 0.


            The value can be between 0 and 1000.'
      description: Strategy item for the capacity provider strategy that the service
        uses.
    AwsEcsServiceCapacityProviderStrategyList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEcsServiceCapacityProviderStrategyDetails'
    AwsEcsServiceDeploymentConfigurationDeploymentCircuitBreakerDetails:
      type: object
      properties:
        Enable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to enable the deployment circuit breaker logic for
            the service.
        Rollback:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to roll back the service if a service deployment fails.
            If rollback is enabled, when a service deployment fails, the service is
            rolled back to the last deployment that completed successfully.
      description: Determines whether a service deployment fails if a service cannot
        reach a steady state.
    AwsEcsServiceDeploymentConfigurationDetails:
      type: object
      properties:
        DeploymentCircuitBreaker:
          allOf:
          - $ref: '#/components/schemas/AwsEcsServiceDeploymentConfigurationDeploymentCircuitBreakerDetails'
          description: Determines whether a service deployment fails if a service
            cannot reach a steady state.
        MaximumPercent:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'For a service that uses the rolling update (`ECS`) deployment
            type, the maximum number of tasks in a service that are allowed in the
            `RUNNING` or `PENDING` state during a deployment, and for tasks that use
            the EC2 launch type, when any container instances are in the `DRAINING`
            state. Provided as a percentage of the desired number of tasks. The default
            value is 200%.


            For a service that uses the blue/green (`CODE_DEPLOY`) or `EXTERNAL` deployment
            types, and tasks that use the EC2 launch type, the maximum number of tasks
            in the service that remain in the `RUNNING` state while the container
            instances are in the `DRAINING` state.


            For the Fargate launch type, the maximum percent value is not used.'
        MinimumHealthyPercent:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'For a service that uses the rolling update (`ECS`) deployment
            type, the minimum number of tasks in a service that must remain in the
            `RUNNING` state during a deployment, and while any container instances
            are in the `DRAINING` state if the service contains tasks using the EC2
            launch type. Expressed as a percentage of the desired number of tasks.
            The default value is 100%.


            For a service that uses the blue/green (`CODE_DEPLOY`) or `EXTERNAL` deployment
            types and tasks that use the EC2 launch type, the minimum number of the
            tasks in the service that remain in the `RUNNING` state while the container
            instances are in the `DRAINING` state.


            For the Fargate launch type, the minimum healthy percent value is not
            used.'
      description: Optional deployment parameters for the service.
    AwsEcsServiceDeploymentControllerDetails:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The rolling update (`ECS`) deployment type replaces the current
            running version of the container with the latest version.


            The blue/green (`CODE_DEPLOY`) deployment type uses the blue/green deployment
            model that is powered by CodeDeploy. This deployment model a new deployment
            of a service can be verified before production traffic is sent to it.


            The external (`EXTERNAL`) deployment type allows the use of any third-party
            deployment controller for full control over the deployment process for
            an Amazon ECS service.


            Valid values: `ECS` | `CODE_DEPLOY` | `EXTERNAL`'
      description: Information about the deployment controller type that the service
        uses.
    AwsEcsServiceDetails:
      type: object
      properties:
        CapacityProviderStrategy:
          allOf:
          - $ref: '#/components/schemas/AwsEcsServiceCapacityProviderStrategyList'
          description: The capacity provider strategy that the service uses.
        Cluster:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the cluster that hosts the service.
        DeploymentConfiguration:
          allOf:
          - $ref: '#/components/schemas/AwsEcsServiceDeploymentConfigurationDetails'
          description: Deployment parameters for the service. Includes the number
            of tasks that run and the order in which to start and stop tasks.
        DeploymentController:
          allOf:
          - $ref: '#/components/schemas/AwsEcsServiceDeploymentControllerDetails'
          description: Contains the deployment controller type that the service uses.
        DesiredCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of instantiations of the task definition to run
            on the service.
        EnableEcsManagedTags:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to enable Amazon ECS managed tags for the tasks in
            the service.
        EnableExecuteCommand:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the execute command functionality is enabled for the
            service.
        HealthCheckGracePeriodSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: After a task starts, the amount of time in seconds that the
            Amazon ECS service scheduler ignores unhealthy Elastic Load Balancing
            target health checks.
        LaunchType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The launch type that the service uses.


            Valid values: `EC2` | `FARGATE` | `EXTERNAL`'
        LoadBalancers:
          allOf:
          - $ref: '#/components/schemas/AwsEcsServiceLoadBalancersList'
          description: Information about the load balancers that the service uses.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the service.
        NetworkConfiguration:
          allOf:
          - $ref: '#/components/schemas/AwsEcsServiceNetworkConfigurationDetails'
          description: For tasks that use the `awsvpc` networking mode, the VPC subnet
            and security group configuration.
        PlacementConstraints:
          allOf:
          - $ref: '#/components/schemas/AwsEcsServicePlacementConstraintsList'
          description: The placement constraints for the tasks in the service.
        PlacementStrategies:
          allOf:
          - $ref: '#/components/schemas/AwsEcsServicePlacementStrategiesList'
          description: Information about how tasks for the service are placed.
        PlatformVersion:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The platform version on which to run the service. Only specified
            for tasks that are hosted on Fargate. If a platform version is not specified,
            the `LATEST` platform version is used by default.
        PropagateTags:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates whether to propagate the tags from the task definition
            to the task or from the service to the task. If no value is provided,
            then tags are not propagated.


            Valid values: `TASK_DEFINITION` | `SERVICE`'
        Role:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the IAM role that is associated with the service.
            The role allows the Amazon ECS container agent to register container instances
            with an Elastic Load Balancing load balancer.
        SchedulingStrategy:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The scheduling strategy to use for the service.


            The `REPLICA` scheduling strategy places and maintains the desired number
            of tasks across the cluster. By default, the service scheduler spreads
            tasks across Availability Zones. Task placement strategies and constraints
            are used to customize task placement decisions.


            The `DAEMON` scheduling strategy deploys exactly one task on each active
            container instance that meets all of the task placement constraints that
            are specified in the cluster. The service scheduler also evaluates the
            task placement constraints for running tasks and stops tasks that don''t
            meet the placement constraints.


            Valid values: `REPLICA` | `DAEMON`'
        ServiceArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the service.
        ServiceName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The name of the service.


            The name can contain up to 255 characters. It can use letters, numbers,
            underscores, and hyphens.'
        ServiceRegistries:
          allOf:
          - $ref: '#/components/schemas/AwsEcsServiceServiceRegistriesList'
          description: Information about the service discovery registries to assign
            to the service.
        TaskDefinition:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The task definition to use for tasks in the service.
      description: Provides details about a service within an ECS cluster.
    AwsEcsServiceLoadBalancersDetails:
      type: object
      properties:
        ContainerName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the container to associate with the load balancer.
        ContainerPort:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The port on the container to associate with the load balancer.
            This port must correspond to a `containerPort` in the task definition
            the tasks in the service are using. For tasks that use the EC2 launch
            type, the container instance they are launched on must allow ingress traffic
            on the `hostPort` of the port mapping.
        LoadBalancerName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The name of the load balancer to associate with the Amazon
            ECS service or task set.


            Only specified when using a Classic Load Balancer. For an Application
            Load Balancer or a Network Load Balancer, the load balancer name is omitted.'
        TargetGroupArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The ARN of the Elastic Load Balancing target group or groups
            associated with a service or task set.


            Only specified when using an Application Load Balancer or a Network Load
            Balancer. For a Classic Load Balancer, the target group ARN is omitted.'
      description: Information about a load balancer that the service uses.
    AwsEcsServiceLoadBalancersList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEcsServiceLoadBalancersDetails'
    AwsEcsServiceNetworkConfigurationAwsVpcConfigurationDetails:
      type: object
      properties:
        AssignPublicIp:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Whether the task''s elastic network interface receives a public
            IP address. The default value is `DISABLED`.


            Valid values: `ENABLED` | `DISABLED`'
        SecurityGroups:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: 'The IDs of the security groups associated with the task or
            service.


            You can provide up to five security groups.'
        Subnets:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: 'The IDs of the subnets associated with the task or service.


            You can provide up to 16 subnets.'
      description: For tasks that use the `awsvpc` networking mode, the VPC subnet
        and security group configuration.
    AwsEcsServiceNetworkConfigurationDetails:
      type: object
      properties:
        AwsVpcConfiguration:
          allOf:
          - $ref: '#/components/schemas/AwsEcsServiceNetworkConfigurationAwsVpcConfigurationDetails'
          description: The VPC subnet and security group configuration.
      description: For tasks that use the `awsvpc` networking mode, the VPC subnet
        and security group configuration.
    AwsEcsServicePlacementConstraintsDetails:
      type: object
      properties:
        Expression:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A cluster query language expression to apply to the constraint.
            You cannot specify an expression if the constraint type is `distinctInstance`.
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The type of constraint. Use `distinctInstance` to run each
            task in a particular group on a different container instance. Use `memberOf`
            to restrict the selection to a group of valid candidates.


            Valid values: `distinctInstance` | `memberOf`'
      description: A placement constraint for the tasks in the service.
    AwsEcsServicePlacementConstraintsList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEcsServicePlacementConstraintsDetails'
    AwsEcsServicePlacementStrategiesDetails:
      type: object
      properties:
        Field:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The field to apply the placement strategy against.


            For the `spread` placement strategy, valid values are `instanceId` (or
            `host`, which has the same effect), or any platform or custom attribute
            that is applied to a container instance, such as `attribute:ecs.availability-zone`.


            For the `binpack` placement strategy, valid values are `cpu` and `memory`.


            For the `random` placement strategy, this attribute is not used.'
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The type of placement strategy.


            The `random` placement strategy randomly places tasks on available candidates.


            The `spread` placement strategy spreads placement across available candidates
            evenly based on the value of `Field`.


            The `binpack` strategy places tasks on available candidates that have
            the least available amount of the resource that is specified in `Field`.


            Valid values: `random` | `spread` | `binpack`'
      description: A placement strategy that determines how to place the tasks for
        the service.
    AwsEcsServicePlacementStrategiesList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEcsServicePlacementStrategiesDetails'
    AwsEcsServiceServiceRegistriesDetails:
      type: object
      properties:
        ContainerName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The container name value to use for the service discovery
            service.


            If the task definition uses the `bridge` or `host` network mode, you must
            specify `ContainerName` and `ContainerPort`.


            If the task definition uses the `awsvpc` network mode and a type SRV DNS
            record, you must specify either `ContainerName` and `ContainerPort`, or
            `Port` , but not both.'
        ContainerPort:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'The port value to use for the service discovery service.


            If the task definition uses the `bridge` or `host` network mode, you must
            specify `ContainerName` and `ContainerPort`.


            If the task definition uses the `awsvpc` network mode and a type SRV DNS
            record, you must specify either `ContainerName` and `ContainerPort`, or
            `Port` , but not both.'
        Port:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The port value to use for a service discovery service that
            specifies an SRV record. This field can be used if both the `awsvpc`awsvpc
            network mode and SRV records are used.
        RegistryArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the service registry.
      description: Information about a service discovery registry to assign to the
        service.
    AwsEcsServiceServiceRegistriesList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEcsServiceServiceRegistriesDetails'
    AwsEcsTaskDefinitionContainerDefinitionsDependsOnDetails:
      type: object
      properties:
        Condition:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "The dependency condition of the dependent container. Indicates\
            \ the required status of the dependent container before the current container\
            \ can start. Valid values are as follows:\n\n  * `COMPLETE`\n\n  * `HEALTHY`\n\
            \n  * `SUCCESS`\n\n  * `START`"
        ContainerName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the dependent container.
      description: A dependency that is defined for container startup and shutdown.
    AwsEcsTaskDefinitionContainerDefinitionsDependsOnList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsDependsOnDetails'
    AwsEcsTaskDefinitionContainerDefinitionsDetails:
      type: object
      properties:
        Command:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The command that is passed to the container.
        Cpu:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of CPU units reserved for the container.
        DependsOn:
          allOf:
          - $ref: '#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsDependsOnList'
          description: The dependencies that are defined for container startup and
            shutdown.
        DisableNetworking:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to disable networking within the container.
        DnsSearchDomains:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: A list of DNS search domains that are presented to the container.
        DnsServers:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: A list of DNS servers that are presented to the container.
        DockerLabels:
          allOf:
          - $ref: '#/components/schemas/FieldMap'
          description: A key-value map of labels to add to the container.
        DockerSecurityOptions:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: A list of strings to provide custom labels for SELinux and
            AppArmor multi-level security systems.
        EntryPoint:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The entry point that is passed to the container.
        Environment:
          allOf:
          - $ref: '#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsEnvironmentList'
          description: The environment variables to pass to a container.
        EnvironmentFiles:
          allOf:
          - $ref: '#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsEnvironmentFilesList'
          description: A list of files containing the environment variables to pass
            to a container.
        Essential:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the container is essential. All tasks must have at
            least one essential container.
        ExtraHosts:
          allOf:
          - $ref: '#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsExtraHostsList'
          description: A list of hostnames and IP address mappings to append to the
            **/etc/hosts** file on the container.
        FirelensConfiguration:
          allOf:
          - $ref: '#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsFirelensConfigurationDetails'
          description: The FireLens configuration for the container. Specifies and
            configures a log router for container logs.
        HealthCheck:
          allOf:
          - $ref: '#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails'
          description: The container health check command and associated configuration
            parameters for the container.
        Hostname:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The hostname to use for the container.
        Image:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The image used to start the container.
        Interactive:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: If set to true, then containerized applications can be deployed
            that require `stdin` or a `tty` to be allocated.
        Links:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: A list of links for the container in the form ` _container_name_
            :_alias_ `. Allows containers to communicate with each other without the
            need for port mappings.
        LinuxParameters:
          allOf:
          - $ref: '#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersDetails'
          description: Linux-specific modifications that are applied to the container,
            such as Linux kernel capabilities.
        LogConfiguration:
          allOf:
          - $ref: '#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsLogConfigurationDetails'
          description: The log configuration specification for the container.
        Memory:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The amount (in MiB) of memory to present to the container.
            If the container attempts to exceed the memory specified here, the container
            is shut down. The total amount of memory reserved for all containers within
            a task must be lower than the task memory value, if one is specified.
        MemoryReservation:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The soft limit (in MiB) of memory to reserve for the container.
        MountPoints:
          allOf:
          - $ref: '#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsMountPointsList'
          description: The mount points for the data volumes in the container.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the container.
        PortMappings:
          allOf:
          - $ref: '#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsPortMappingsList'
          description: The list of port mappings for the container.
        Privileged:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the container is given elevated privileges on the host
            container instance. The elevated privileges are similar to the root user.
        PseudoTerminal:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to allocate a TTY to the container.
        ReadonlyRootFilesystem:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the container is given read-only access to its root
            file system.
        RepositoryCredentials:
          allOf:
          - $ref: '#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsRepositoryCredentialsDetails'
          description: The private repository authentication credentials to use.
        ResourceRequirements:
          allOf:
          - $ref: '#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsResourceRequirementsList'
          description: The type and amount of a resource to assign to a container.
            The only supported resource is a GPU.
        Secrets:
          allOf:
          - $ref: '#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsSecretsList'
          description: The secrets to pass to the container.
        StartTimeout:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of seconds to wait before giving up on resolving
            dependencies for a container.
        StopTimeout:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of seconds to wait before the container is stopped
            if it doesn't shut down normally on its own.
        SystemControls:
          allOf:
          - $ref: '#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsSystemControlsList'
          description: A list of namespaced kernel parameters to set in the container.
        Ulimits:
          allOf:
          - $ref: '#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsUlimitsList'
          description: A list of ulimits to set in the container.
        User:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "The user to use inside the container.\n\nThe value can use\
            \ one of the following formats.\n\n  * ` _user_ `\n\n  * ` _user_ `:`\
            \ _group_ `\n\n  * ` _uid_ `\n\n  * ` _uid_ `:` _gid_ `\n\n  * ` _user_\
            \ `:` _gid_ `\n\n  * ` _uid_ `:` _group_ `"
        VolumesFrom:
          allOf:
          - $ref: '#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsVolumesFromList'
          description: Data volumes to mount from another container.
        WorkingDirectory:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The working directory in which to run commands inside the container.
      description: A container definition that describes a container in the task.
    AwsEcsTaskDefinitionContainerDefinitionsEnvironmentDetails:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the environment variable.
        Value:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The value of the environment variable.
      description: An environment variable to pass to the container.
    AwsEcsTaskDefinitionContainerDefinitionsEnvironmentFilesDetails:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of environment file. The valid value is `s3`.
        Value:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the S3 object that contains the environment variable
            file.
      description: A file that contain environment variables to pass to a container.
    AwsEcsTaskDefinitionContainerDefinitionsEnvironmentFilesList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsEnvironmentFilesDetails'
    AwsEcsTaskDefinitionContainerDefinitionsEnvironmentList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsEnvironmentDetails'
    AwsEcsTaskDefinitionContainerDefinitionsExtraHostsDetails:
      type: object
      properties:
        Hostname:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The hostname to use in the **/etc/hosts** entry.
        IpAddress:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The IP address to use in the **/etc/hosts** entry.
      description: A hostname and IP address mapping to append to the **/etc/hosts**
        file on the container.
    AwsEcsTaskDefinitionContainerDefinitionsExtraHostsList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsExtraHostsDetails'
    AwsEcsTaskDefinitionContainerDefinitionsFirelensConfigurationDetails:
      type: object
      properties:
        Options:
          allOf:
          - $ref: '#/components/schemas/FieldMap'
          description: "The options to use to configure the log router.\n\nThe valid\
            \ option keys are as follows:\n\n  * `enable-ecs-log-metadata`. The value\
            \ can be `true` or `false`.\n\n  * `config-file-type`. The value can be\
            \ `s3` or `file`.\n\n  * `config-file-value`. The value is either an S3\
            \ ARN or a file path."
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The log router to use. Valid values are `fluentbit` or `fluentd`.
      description: The FireLens configuration for the container. The configuration
        specifies and configures a log router for container logs.
    AwsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails:
      type: object
      properties:
        Command:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The command that the container runs to determine whether it
            is healthy.
        Interval:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The time period in seconds between each health check execution.
            The default value is 30 seconds.
        Retries:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of times to retry a failed health check before the
            container is considered unhealthy. The default value is 3.
        StartPeriod:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The optional grace period in seconds that allows containers
            time to bootstrap before failed health checks count towards the maximum
            number of retries.
        Timeout:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The time period in seconds to wait for a health check to succeed
            before it is considered a failure. The default value is 5.
      description: The container health check command and associated configuration
        parameters for the container.
    AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersCapabilitiesDetails:
      type: object
      properties:
        Add:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: 'The Linux capabilities for the container that are added to
            the default configuration provided by Docker. Valid values are as follows:


            Valid values: `"ALL"` | `"AUDIT_CONTROL"` |` "AUDIT_WRITE"` | `"BLOCK_SUSPEND"`
            | `"CHOWN"` | `"DAC_OVERRIDE"` | `"DAC_READ_SEARCH"` | `"FOWNER"` | `"FSETID"`
            | `"IPC_LOCK"` | `"IPC_OWNER"` | `"KILL"` | `"LEASE"` | `"LINUX_IMMUTABLE"`
            | `"MAC_ADMIN"` |` "MAC_OVERRIDE"` | `"MKNOD"` | `"NET_ADMIN"` | `"NET_BIND_SERVICE"`
            | `"NET_BROADCAST"` | `"NET_RAW"` | `"SETFCAP"` | `"SETGID"` | `"SETPCAP"`
            | `"SETUID"` | `"SYS_ADMIN"` | `"SYS_BOOT"` | `"SYS_CHROOT"` | `"SYS_MODULE"`
            | `"SYS_NICE"` | `"SYS_PACCT"` | `"SYS_PTRACE"` | `"SYS_RAWIO"` | `"SYS_RESOURCE"`
            | `"SYS_TIME"` | `"SYS_TTY_CONFIG"` | `"SYSLOG"` | `"WAKE_ALARM"`'
        Drop:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: 'The Linux capabilities for the container that are dropped
            from the default configuration provided by Docker.


            Valid values: `"ALL"` | `"AUDIT_CONTROL"` |` "AUDIT_WRITE"` | `"BLOCK_SUSPEND"`
            | `"CHOWN"` | `"DAC_OVERRIDE"` | `"DAC_READ_SEARCH"` | `"FOWNER"` | `"FSETID"`
            | `"IPC_LOCK"` | `"IPC_OWNER"` | `"KILL"` | `"LEASE"` | `"LINUX_IMMUTABLE"`
            | `"MAC_ADMIN"` |` "MAC_OVERRIDE"` | `"MKNOD"` | `"NET_ADMIN"` | `"NET_BIND_SERVICE"`
            | `"NET_BROADCAST"` | `"NET_RAW"` | `"SETFCAP"` | `"SETGID"` | `"SETPCAP"`
            | `"SETUID"` | `"SYS_ADMIN"` | `"SYS_BOOT"` | `"SYS_CHROOT"` | `"SYS_MODULE"`
            | `"SYS_NICE"` | `"SYS_PACCT"` | `"SYS_PTRACE"` | `"SYS_RAWIO"` | `"SYS_RESOURCE"`
            | `"SYS_TIME"` | `"SYS_TTY_CONFIG"` | `"SYSLOG"` | `"WAKE_ALARM"`'
      description: The Linux capabilities for the container that are added to or dropped
        from the default configuration provided by Docker.
    AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersDetails:
      type: object
      properties:
        Capabilities:
          allOf:
          - $ref: '#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersCapabilitiesDetails'
          description: The Linux capabilities for the container that are added to
            or dropped from the default configuration provided by Docker.
        Devices:
          allOf:
          - $ref: '#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersDevicesList'
          description: The host devices to expose to the container.
        InitProcessEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to run an `init` process inside the container that
            forwards signals and reaps processes.
        MaxSwap:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The total amount of swap memory (in MiB) that a container can
            use.
        SharedMemorySize:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The value for the size (in MiB) of the **/dev/shm** volume.
        Swappiness:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Configures the container's memory swappiness behavior. Determines
            how aggressively pages are swapped. The higher the value, the more aggressive
            the swappiness. The default is 60.
        Tmpfs:
          allOf:
          - $ref: '#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersTmpfsList'
          description: The container path, mount options, and size (in MiB) of the
            tmpfs mount.
      description: '>Linux-specific modifications that are applied to the container,
        such as Linux kernel capabilities.'
    AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersDevicesDetails:
      type: object
      properties:
        ContainerPath:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The path inside the container at which to expose the host device.
        HostPath:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The path for the device on the host container instance.
        Permissions:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The explicit permissions to provide to the container for the
            device. By default, the container has permissions for read, write, and
            `mknod` for the device.
      description: A host device to expose to the container.
    AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersDevicesList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersDevicesDetails'
    AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersTmpfsDetails:
      type: object
      properties:
        ContainerPath:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The absolute file path where the tmpfs volume is to be mounted.
        MountOptions:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: 'The list of tmpfs volume mount options.


            Valid values: `"defaults"` | `"ro"` | `"rw"` | `"suid"` | `"nosuid"` |
            `"dev"` | `"nodev"` |` "exec"` | `"noexec"` | `"sync"` | `"async"` | `"dirsync"`
            | `"remount"` | `"mand"` | `"nomand"` | `"atime"` | `"noatime"` | `"diratime"`
            | `"nodiratime"` | `"bind"` | `"rbind"` | `"unbindable"` | `"runbindable"`
            | `"private"` | `"rprivate"` | `"shared"` | `"rshared"` | `"slave"` |
            `"rslave"` | `"relatime"` | `"norelatime"` | `"strictatime"` | `"nostrictatime"`
            |` "mode"` | `"uid"` | `"gid"` | `"nr_inodes"` |` "nr_blocks"` | `"mpol"`'
        Size:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum size (in MiB) of the tmpfs volume.
      description: The container path, mount options, and size (in MiB) of a tmpfs
        mount.
    AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersTmpfsList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersTmpfsDetails'
    AwsEcsTaskDefinitionContainerDefinitionsList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsDetails'
    AwsEcsTaskDefinitionContainerDefinitionsLogConfigurationDetails:
      type: object
      properties:
        LogDriver:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "The log driver to use for the container.\n\nValid values on\
            \ Fargate are as follows:\n\n  * `awsfirelens`\n\n  * `awslogs`\n\n  *\
            \ `splunk`\n\nValid values on Amazon EC2 are as follows:\n\n  * `awsfirelens`\n\
            \n  * `awslogs`\n\n  * `fluentd`\n\n  * `gelf`\n\n  * `journald`\n\n \
            \ * `json-file`\n\n  * `logentries`\n\n  * `splunk`\n\n  * `syslog`"
        Options:
          allOf:
          - $ref: '#/components/schemas/FieldMap'
          description: The configuration options to send to the log driver. Requires
            version 1.19 of the Docker Remote API or greater on your container instance.
        SecretOptions:
          allOf:
          - $ref: '#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsLogConfigurationSecretOptionsList'
          description: The secrets to pass to the log configuration.
      description: The log configuration specification for the container.
    AwsEcsTaskDefinitionContainerDefinitionsLogConfigurationSecretOptionsDetails:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the secret.
        ValueFrom:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The secret to expose to the container.


            The value is either the full ARN of the Secrets Manager secret or the
            full ARN of the parameter in the Systems Manager Parameter Store.'
      description: A secret to pass to the log configuration.
    AwsEcsTaskDefinitionContainerDefinitionsLogConfigurationSecretOptionsList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsLogConfigurationSecretOptionsDetails'
    AwsEcsTaskDefinitionContainerDefinitionsMountPointsDetails:
      type: object
      properties:
        ContainerPath:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The path on the container to mount the host volume at.
        ReadOnly:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the container has read-only access to the volume.
        SourceVolume:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the volume to mount. Must match the name of a volume
            listed in `VolumeDetails` for the task definition.
      description: A mount point for the data volumes in the container.
    AwsEcsTaskDefinitionContainerDefinitionsMountPointsList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsMountPointsDetails'
    AwsEcsTaskDefinitionContainerDefinitionsPortMappingsDetails:
      type: object
      properties:
        ContainerPort:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The port number on the container that is bound to the user-specified
            or automatically assigned host port.
        HostPort:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The port number on the container instance to reserve for the
            container.
        Protocol:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The protocol used for the port mapping. The default is `tcp`.
      description: A port mapping for the container.
    AwsEcsTaskDefinitionContainerDefinitionsPortMappingsList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsPortMappingsDetails'
    AwsEcsTaskDefinitionContainerDefinitionsRepositoryCredentialsDetails:
      type: object
      properties:
        CredentialsParameter:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the secret that contains the private repository
            credentials.
      description: The private repository authentication credentials to use.
    AwsEcsTaskDefinitionContainerDefinitionsResourceRequirementsDetails:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of resource to assign to a container. Valid values
            are `GPU` or `InferenceAccelerator`.
        Value:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The value for the specified resource type.


            For `GPU`, the value is the number of physical GPUs the Amazon ECS container
            agent reserves for the container.


            For `InferenceAccelerator`, the value should match the `DeviceName` attribute
            of an entry in `InferenceAccelerators`.'
      description: A resource to assign to a container.
    AwsEcsTaskDefinitionContainerDefinitionsResourceRequirementsList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsResourceRequirementsDetails'
    AwsEcsTaskDefinitionContainerDefinitionsSecretsDetails:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the secret.
        ValueFrom:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The secret to expose to the container. The value is either
            the full ARN of the Secrets Manager secret or the full ARN of the parameter
            in the Systems Manager Parameter Store.
      description: A secret to pass to the container.
    AwsEcsTaskDefinitionContainerDefinitionsSecretsList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsSecretsDetails'
    AwsEcsTaskDefinitionContainerDefinitionsSystemControlsDetails:
      type: object
      properties:
        Namespace:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The namespaced kernel parameter for which to set a value.
        Value:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The value of the parameter.
      description: A namespaced kernel parameter to set in the container.
    AwsEcsTaskDefinitionContainerDefinitionsSystemControlsList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsSystemControlsDetails'
    AwsEcsTaskDefinitionContainerDefinitionsUlimitsDetails:
      type: object
      properties:
        HardLimit:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The hard limit for the ulimit type.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "The type of the ulimit. Valid values are as follows:\n\n \
            \ * `core`\n\n  * `cpu`\n\n  * `data`\n\n  * `fsize`\n\n  * `locks`\n\n\
            \  * `memlock`\n\n  * `msgqueue`\n\n  * `nice`\n\n  * `nofile`\n\n  *\
            \ `nproc`\n\n  * `rss`\n\n  * `rtprio`\n\n  * `rttime`\n\n  * `sigpending`\n\
            \n  * `stack`"
        SoftLimit:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The soft limit for the ulimit type.
      description: A ulimit to set in the container.
    AwsEcsTaskDefinitionContainerDefinitionsUlimitsList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsUlimitsDetails'
    AwsEcsTaskDefinitionContainerDefinitionsVolumesFromDetails:
      type: object
      properties:
        ReadOnly:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the container has read-only access to the volume.
        SourceContainer:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of another container within the same task definition
            from which to mount volumes.
      description: A data volume to mount from another container.
    AwsEcsTaskDefinitionContainerDefinitionsVolumesFromList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsVolumesFromDetails'
    AwsEcsTaskDefinitionDetails:
      type: object
      properties:
        ContainerDefinitions:
          allOf:
          - $ref: '#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsList'
          description: The container definitions that describe the containers that
            make up the task.
        Cpu:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "The number of CPU units used by the task.Valid values are\
            \ as follows:\n\n  * `256 (.25 vCPU)`\n\n  * `512 (.5 vCPU)`\n\n  * `1024\
            \ (1 vCPU)`\n\n  * `2048 (2 vCPU)`\n\n  * `4096 (4 vCPU)`"
        ExecutionRoleArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the task execution role that grants the container
            agent permission to make API calls on behalf of the container user.
        Family:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of a family that this task definition is registered
            to.
        InferenceAccelerators:
          allOf:
          - $ref: '#/components/schemas/AwsEcsTaskDefinitionInferenceAcceleratorsList'
          description: The Elastic Inference accelerators to use for the containers
            in the task.
        IpcMode:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "The inter-process communication (IPC) resource namespace to\
            \ use for the containers in the task. Valid values are as follows:\n\n\
            \  * `host`\n\n  * `none`\n\n  * `task`"
        Memory:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The amount (in MiB) of memory used by the task.


            For tasks that are hosted on Amazon EC2, you can provide a task-level
            memory value or a container-level memory value. For tasks that are hosted
            on Fargate, you must use one of the [specified values](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html#task_size)
            in the __Amazon Elastic Container Service Developer Guide_ _, which determines
            your range of supported values for the `Cpu` and `Memory` parameters.'
        NetworkMode:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "The Docker networking mode to use for the containers in the\
            \ task. Valid values are as follows:\n\n  * `awsvpc`\n\n  * `bridge`\n\
            \n  * `host`\n\n  * `none`"
        PidMode:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The process namespace to use for the containers in the task.
            Valid values are `host` or `task`.
        PlacementConstraints:
          allOf:
          - $ref: '#/components/schemas/AwsEcsTaskDefinitionPlacementConstraintsList'
          description: The placement constraint objects to use for tasks.
        ProxyConfiguration:
          allOf:
          - $ref: '#/components/schemas/AwsEcsTaskDefinitionProxyConfigurationDetails'
          description: The configuration details for the App Mesh proxy.
        RequiresCompatibilities:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The task launch types that the task definition was validated
            against.
        TaskRoleArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The short name or ARN of the IAM role that grants containers
            in the task permission to call Amazon Web Services API operations on your
            behalf.
        Volumes:
          allOf:
          - $ref: '#/components/schemas/AwsEcsTaskDefinitionVolumesList'
          description: The data volume definitions for the task.
        Status:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The status of the task definition.
      description: Details about a task definition. A task definition describes the
        container and volume definitions of an Amazon Elastic Container Service task.
    AwsEcsTaskDefinitionInferenceAcceleratorsDetails:
      type: object
      properties:
        DeviceName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Elastic Inference accelerator device name.
        DeviceType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Elastic Inference accelerator type to use.
      description: An Elastic Inference accelerator to use for the containers in the
        task.
    AwsEcsTaskDefinitionInferenceAcceleratorsList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEcsTaskDefinitionInferenceAcceleratorsDetails'
    AwsEcsTaskDefinitionPlacementConstraintsDetails:
      type: object
      properties:
        Expression:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A cluster query language expression to apply to the constraint.
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of constraint.
      description: A placement constraint object to use for tasks.
    AwsEcsTaskDefinitionPlacementConstraintsList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEcsTaskDefinitionPlacementConstraintsDetails'
    AwsEcsTaskDefinitionProxyConfigurationDetails:
      type: object
      properties:
        ContainerName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the container that will serve as the App Mesh proxy.
        ProxyConfigurationProperties:
          allOf:
          - $ref: '#/components/schemas/AwsEcsTaskDefinitionProxyConfigurationProxyConfigurationPropertiesList'
          description: The set of network configuration parameters to provide to the
            Container Network Interface (CNI) plugin, specified as key-value pairs.
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The proxy type.
      description: The configuration details for the App Mesh proxy.
    AwsEcsTaskDefinitionProxyConfigurationProxyConfigurationPropertiesDetails:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the property.
        Value:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The value of the property.
      description: A network configuration parameter to provide to the Container Network
        Interface (CNI) plugin.
    AwsEcsTaskDefinitionProxyConfigurationProxyConfigurationPropertiesList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEcsTaskDefinitionProxyConfigurationProxyConfigurationPropertiesDetails'
    AwsEcsTaskDefinitionVolumesDetails:
      type: object
      properties:
        DockerVolumeConfiguration:
          allOf:
          - $ref: '#/components/schemas/AwsEcsTaskDefinitionVolumesDockerVolumeConfigurationDetails'
          description: Information about a Docker volume.
        EfsVolumeConfiguration:
          allOf:
          - $ref: '#/components/schemas/AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationDetails'
          description: Information about the Amazon Elastic File System file system
            that is used for task storage.
        Host:
          allOf:
          - $ref: '#/components/schemas/AwsEcsTaskDefinitionVolumesHostDetails'
          description: Information about a bind mount host volume.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the data volume.
      description: A data volume to mount from another container.
    AwsEcsTaskDefinitionVolumesDockerVolumeConfigurationDetails:
      type: object
      properties:
        Autoprovision:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to create the Docker volume automatically if it does
            not already exist.
        Driver:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Docker volume driver to use.
        DriverOpts:
          allOf:
          - $ref: '#/components/schemas/FieldMap'
          description: A map of Docker driver-specific options that are passed through.
        Labels:
          allOf:
          - $ref: '#/components/schemas/FieldMap'
          description: Custom metadata to add to the Docker volume.
        Scope:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The scope for the Docker volume that determines its lifecycle.
            Docker volumes that are scoped to a task are provisioned automatically
            when the task starts and destroyed when the task stops. Docker volumes
            that are shared persist after the task stops. Valid values are `shared`
            or `task`.
      description: Information about a Docker volume.
    AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationAuthorizationConfigDetails:
      type: object
      properties:
        AccessPointId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon EFS access point identifier to use.
        Iam:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Whether to use the Amazon ECS task IAM role defined in a task
            definition when mounting the Amazon EFS file system.
      description: ''
    AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationDetails:
      type: object
      properties:
        AuthorizationConfig:
          allOf:
          - $ref: '#/components/schemas/AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationAuthorizationConfigDetails'
          description: The authorization configuration details for the Amazon EFS
            file system.
        FilesystemId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon EFS file system identifier to use.
        RootDirectory:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The directory within the Amazon EFS file system to mount as
            the root directory inside the host.
        TransitEncryption:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Whether to enable encryption for Amazon EFS data in transit
            between the Amazon ECS host and the Amazon EFS server.
        TransitEncryptionPort:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The port to use when sending encrypted data between the Amazon
            ECS host and the Amazon EFS server.
      description: Information about the Amazon Elastic File System file system that
        is used for task storage.
    AwsEcsTaskDefinitionVolumesHostDetails:
      type: object
      properties:
        SourcePath:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The path on the host container instance that is presented to
            the container.
      description: Information about a bind mount host volume.
    AwsEcsTaskDefinitionVolumesList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEcsTaskDefinitionVolumesDetails'
    AwsEcsTaskDetails:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the cluster that hosts the
            task.
        TaskDefinitionArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the task definition that creates the task.
        Version:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The version counter for the task.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Unix timestamp for the time when the task was created.
            More specifically, it's for the time when the task entered the `PENDING`
            state.
        StartedAt:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Unix timestamp for the time when the task started. More
            specifically, it's for the time when the task transitioned from the `PENDING`
            state to the `RUNNING` state.
        StartedBy:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The tag specified when a task is started. If an Amazon ECS
            service started the task, the `startedBy` parameter contains the deployment
            ID of that service.
        Group:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the task group that's associated with the task.
        Volumes:
          allOf:
          - $ref: '#/components/schemas/AwsEcsTaskVolumeDetailsList'
          description: Details about the data volume that is used in a task definition.
        Containers:
          allOf:
          - $ref: '#/components/schemas/AwsEcsContainerDetailsList'
          description: The containers that are associated with the task.
      description: Provides details about a task in a cluster.
    AwsEcsTaskVolumeDetails:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the volume. Up to 255 letters (uppercase and lowercase),
            numbers, underscores, and hyphens are allowed. This name is referenced
            in the `sourceVolume` parameter of container definition `mountPoints`.
        Host:
          allOf:
          - $ref: '#/components/schemas/AwsEcsTaskVolumeHostDetails'
          description: This parameter is specified when you use bind mount host volumes.
            The contents of the `host` parameter determine whether your bind mount
            host volume persists on the host container instance and where it's stored.
      description: Provides information about a data volume that's used in a task
        definition.
    AwsEcsTaskVolumeDetailsList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEcsTaskVolumeDetails'
    AwsEcsTaskVolumeHostDetails:
      type: object
      properties:
        SourcePath:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: When the `host` parameter is used, specify a `sourcePath` to
            declare the path on the host container instance that's presented to the
            container.
      description: Provides details on a container instance bind mount host volume.
    AwsEfsAccessPointDetails:
      type: object
      properties:
        AccessPointId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the Amazon EFS access point.
        Arn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the Amazon EFS access point.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The opaque string specified in the request to ensure idempotent
            creation.
        FileSystemId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the Amazon EFS file system that the access point
            applies to.
        PosixUser:
          allOf:
          - $ref: '#/components/schemas/AwsEfsAccessPointPosixUserDetails'
          description: The full POSIX identity, including the user ID, group ID, and
            secondary group IDs on the access point, that is used for all file operations
            by NFS clients using the access point.
        RootDirectory:
          allOf:
          - $ref: '#/components/schemas/AwsEfsAccessPointRootDirectoryDetails'
          description: The directory on the Amazon EFS file system that the access
            point exposes as the root directory to NFS clients using the access point.
      description: Provides information about an Amazon EFS access point.
    AwsEfsAccessPointPosixUserDetails:
      type: object
      properties:
        Gid:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The POSIX group ID used for all file system operations using
            this access point.
        SecondaryGids:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: Secondary POSIX group IDs used for all file system operations
            using this access point.
        Uid:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The POSIX user ID used for all file system operations using
            this access point.
      description: Provides details for all file system operations using this Amazon
        EFS access point.
    AwsEfsAccessPointRootDirectoryCreationInfoDetails:
      type: object
      properties:
        OwnerGid:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Specifies the POSIX group ID to apply to the root directory.
        OwnerUid:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Specifies the POSIX user ID to apply to the root directory.
        Permissions:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Specifies the POSIX permissions to apply to the root directory,
            in the format of an octal number representing the file's mode bits.
      description: Provides information about the settings that Amazon EFS uses to
        create the root directory when a client connects to an access point.
    AwsEfsAccessPointRootDirectoryDetails:
      type: object
      properties:
        CreationInfo:
          allOf:
          - $ref: '#/components/schemas/AwsEfsAccessPointRootDirectoryCreationInfoDetails'
          description: Specifies the POSIX IDs and permissions to apply to the access
            point's root directory.
        Path:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Specifies the path on the Amazon EFS file system to expose
            as the root directory to NFS clients using the access point to access
            the EFS file system. A path can have up to four subdirectories. If the
            specified path does not exist, you are required to provide `CreationInfo`.
      description: Provides information about the directory on the Amazon EFS file
        system that the access point exposes as the root directory to NFS clients
        using the access point.
    AwsEksClusterDetails:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the cluster.
        CertificateAuthorityData:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The certificate authority data for the cluster.
        ClusterStatus:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "The status of the cluster. Valid values are as follows:\n\n\
            \  * `ACTIVE`\n\n  * `CREATING`\n\n  * `DELETING`\n\n  * `FAILED`\n\n\
            \  * `PENDING`\n\n  * `UPDATING`"
        Endpoint:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The endpoint for the Amazon EKS API server.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the cluster.
        ResourcesVpcConfig:
          allOf:
          - $ref: '#/components/schemas/AwsEksClusterResourcesVpcConfigDetails'
          description: The VPC configuration used by the cluster control plane.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the IAM role that provides permissions for the Amazon
            EKS control plane to make calls to Amazon Web Services API operations
            on your behalf.
        Version:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon EKS server version for the cluster.
        Logging:
          allOf:
          - $ref: '#/components/schemas/AwsEksClusterLoggingDetails'
          description: The logging configuration for the cluster.
      description: Provides details about an Amazon EKS cluster.
    AwsEksClusterLoggingClusterLoggingDetails:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the logging types that are listed in `Types` are enabled.
        Types:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: "A list of logging types. Valid values are as follows:\n\n\
            \  * `api`\n\n  * `audit`\n\n  * `authenticator`\n\n  * `controllerManager`\n\
            \n  * `scheduler`"
      description: Details for a cluster logging configuration.
    AwsEksClusterLoggingClusterLoggingList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEksClusterLoggingClusterLoggingDetails'
    AwsEksClusterLoggingDetails:
      type: object
      properties:
        ClusterLogging:
          allOf:
          - $ref: '#/components/schemas/AwsEksClusterLoggingClusterLoggingList'
          description: Cluster logging configurations.
      description: The logging configuration for an Amazon EKS cluster.
    AwsEksClusterResourcesVpcConfigDetails:
      type: object
      properties:
        SecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The security groups that are associated with the cross-account
            elastic network interfaces that are used to allow communication between
            your nodes and the Amazon EKS control plane.
        SubnetIds:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The subnets that are associated with the cluster.
        EndpointPublicAccess:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether the Amazon EKS public API server endpoint
            is turned on. If the Amazon EKS public API server endpoint is turned off,
            your cluster's Kubernetes API server can only receive requests that originate
            from within the cluster VPC.
      description: Information about the VPC configuration used by the cluster control
        plane.
    AwsElasticBeanstalkEnvironmentDetails:
      type: object
      properties:
        ApplicationName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the application that is associated with the environment.
        Cname:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The URL to the CNAME for this environment.
        DateCreated:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The creation date for this environment.
        DateUpdated:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The date when this environment was last modified.
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A description of the environment.
        EndpointUrl:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: For load-balanced, autoscaling environments, the URL to the
            load balancer. For single-instance environments, the IP address of the
            instance.
        EnvironmentArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the environment.
        EnvironmentId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the environment.
        EnvironmentLinks:
          allOf:
          - $ref: '#/components/schemas/AwsElasticBeanstalkEnvironmentEnvironmentLinks'
          description: Links to other environments in the same group.
        EnvironmentName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the environment.
        OptionSettings:
          allOf:
          - $ref: '#/components/schemas/AwsElasticBeanstalkEnvironmentOptionSettings'
          description: The configuration setting for the environment.
        PlatformArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the platform version for the environment.
        SolutionStackName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the solution stack that is deployed with the environment.
        Status:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "The current operational status of the environment. Valid values\
            \ are as follows:\n\n  * `Aborting`\n\n  * `Launching`\n\n  * `LinkingFrom`\n\
            \n  * `LinkingTo`\n\n  * `Ready`\n\n  * `Terminated`\n\n  * `Terminating`\n\
            \n  * `Updating`"
        Tier:
          allOf:
          - $ref: '#/components/schemas/AwsElasticBeanstalkEnvironmentTier'
          description: The tier of the environment.
        VersionLabel:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The application version of the environment.
      description: Contains details about an Elastic Beanstalk environment.
    AwsElasticBeanstalkEnvironmentEnvironmentLink:
      type: object
      properties:
        EnvironmentName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the linked environment.
        LinkName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the environment link.
      description: Contains information about a link to another environment that is
        in the same group.
    AwsElasticBeanstalkEnvironmentEnvironmentLinks:
      type: array
      items:
        $ref: '#/components/schemas/AwsElasticBeanstalkEnvironmentEnvironmentLink'
    AwsElasticBeanstalkEnvironmentOptionSetting:
      type: object
      properties:
        Namespace:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of resource that the configuration option is associated
            with.
        OptionName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the option.
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the resource.
        Value:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The value of the configuration setting.
      description: A configuration option setting for the environment.
    AwsElasticBeanstalkEnvironmentOptionSettings:
      type: array
      items:
        $ref: '#/components/schemas/AwsElasticBeanstalkEnvironmentOptionSetting'
    AwsElasticBeanstalkEnvironmentTier:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the environment tier. Valid values are `WebServer`
            or `Worker`.
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of environment tier. Valid values are `Standard` or
            `SQS/HTTP`.
        Version:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The version of the environment tier.
      description: Contains information about the tier of the environment.
    AwsElasticsearchDomainDetails:
      type: object
      properties:
        AccessPolicies:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: IAM policy document specifying the access policies for the
            new Elasticsearch domain.
        DomainEndpointOptions:
          allOf:
          - $ref: '#/components/schemas/AwsElasticsearchDomainDomainEndpointOptions'
          description: Additional options for the domain endpoint.
        DomainId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Unique identifier for an Elasticsearch domain.
        DomainName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Name of an Elasticsearch domain.


            Domain names are unique across all domains owned by the same account within
            an Amazon Web Services Region.


            Domain names must start with a lowercase letter and must be between 3
            and 28 characters.


            Valid characters are a-z (lowercase only), 0-9, and – (hyphen).'
        Endpoint:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Domain-specific endpoint used to submit index, search, and
            data upload requests to an Elasticsearch domain.


            The endpoint is a service URL.'
        Endpoints:
          allOf:
          - $ref: '#/components/schemas/FieldMap'
          description: The key-value pair that exists if the Elasticsearch domain
            uses VPC endpoints.
        ElasticsearchVersion:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: OpenSearch version.
        ElasticsearchClusterConfig:
          allOf:
          - $ref: '#/components/schemas/AwsElasticsearchDomainElasticsearchClusterConfigDetails'
          description: Information about an OpenSearch cluster configuration.
        EncryptionAtRestOptions:
          allOf:
          - $ref: '#/components/schemas/AwsElasticsearchDomainEncryptionAtRestOptions'
          description: Details about the configuration for encryption at rest.
        LogPublishingOptions:
          allOf:
          - $ref: '#/components/schemas/AwsElasticsearchDomainLogPublishingOptions'
          description: Configures the CloudWatch Logs to publish for the Elasticsearch
            domain.
        NodeToNodeEncryptionOptions:
          allOf:
          - $ref: '#/components/schemas/AwsElasticsearchDomainNodeToNodeEncryptionOptions'
          description: Details about the configuration for node-to-node encryption.
        ServiceSoftwareOptions:
          allOf:
          - $ref: '#/components/schemas/AwsElasticsearchDomainServiceSoftwareOptions'
          description: Information about the status of a domain relative to the latest
            service software.
        VPCOptions:
          allOf:
          - $ref: '#/components/schemas/AwsElasticsearchDomainVPCOptions'
          description: Information that OpenSearch derives based on `VPCOptions` for
            the domain.
      description: Information about an Elasticsearch domain.
    AwsElasticsearchDomainDomainEndpointOptions:
      type: object
      properties:
        EnforceHTTPS:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to require that all traffic to the domain arrive over
            HTTPS.
        TLSSecurityPolicy:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "The TLS security policy to apply to the HTTPS endpoint of\
            \ the OpenSearch domain.\n\nValid values:\n\n  * `Policy-Min-TLS-1-0-2019-07`,\
            \ which supports TLSv1.0 and higher\n\n  * `Policy-Min-TLS-1-2-2019-07`,\
            \ which only supports TLSv1.2"
      description: Additional options for the domain endpoint, such as whether to
        require HTTPS for all traffic.
    AwsElasticsearchDomainElasticsearchClusterConfigDetails:
      type: object
      properties:
        DedicatedMasterCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of instances to use for the master node. If this
            attribute is specified, then `DedicatedMasterEnabled` must be `true`.
        DedicatedMasterEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to use a dedicated master node for the Elasticsearch
            domain. A dedicated master node performs cluster management tasks, but
            doesn't hold data or respond to data upload requests.
        DedicatedMasterType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The hardware configuration of the computer that hosts the
            dedicated master node. A sample value is `m3.medium.elasticsearch`. If
            this attribute is specified, then `DedicatedMasterEnabled` must be `true`.


            For a list of valid values, see [Supported instance types in Amazon OpenSearch
            Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/supported-instance-types.html)
            in the _Amazon OpenSearch Service Developer Guide_.'
        InstanceCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of data nodes to use in the Elasticsearch domain.
        InstanceType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The instance type for your data nodes. For example, `m3.medium.elasticsearch`.


            For a list of valid values, see [Supported instance types in Amazon OpenSearch
            Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/supported-instance-types.html)
            in the _Amazon OpenSearch Service Developer Guide_.'
        ZoneAwarenessConfig:
          allOf:
          - $ref: '#/components/schemas/AwsElasticsearchDomainElasticsearchClusterConfigZoneAwarenessConfigDetails'
          description: Configuration options for zone awareness. Provided if `ZoneAwarenessEnabled`
            is `true`.
        ZoneAwarenessEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to enable zone awareness for the Elasticsearch domain.
            When zone awareness is enabled, OpenSearch allocates the cluster's nodes
            and replica index shards across Availability Zones in the same Region.
            This prevents data loss and minimizes downtime if a node or data center
            fails.
      description: details about the configuration of an OpenSearch cluster.
    AwsElasticsearchDomainElasticsearchClusterConfigZoneAwarenessConfigDetails:
      type: object
      properties:
        AvailabilityZoneCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: he number of Availability Zones that the domain uses. Valid
            values are 2 and 3. The default is 2.
      description: Configuration options for zone awareness.
    AwsElasticsearchDomainEncryptionAtRestOptions:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether encryption at rest is enabled.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The KMS key ID. Takes the form `1a2a3a4-1a2a-3a4a-5a6a-1a2a3a4a5a6a`.
      description: Details about the configuration for encryption at rest.
    AwsElasticsearchDomainLogPublishingOptions:
      type: object
      properties:
        IndexSlowLogs:
          allOf:
          - $ref: '#/components/schemas/AwsElasticsearchDomainLogPublishingOptionsLogConfig'
          description: Configures the OpenSearch index logs publishing.
        SearchSlowLogs:
          allOf:
          - $ref: '#/components/schemas/AwsElasticsearchDomainLogPublishingOptionsLogConfig'
          description: Configures the OpenSearch search slow log publishing.
        AuditLogs:
          $ref: '#/components/schemas/AwsElasticsearchDomainLogPublishingOptionsLogConfig'
      description: configures the CloudWatch Logs to publish for the Elasticsearch
        domain.
    AwsElasticsearchDomainLogPublishingOptionsLogConfig:
      type: object
      properties:
        CloudWatchLogsLogGroupArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the CloudWatch Logs group to publish the logs to.
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the log publishing is enabled.
      description: The log configuration.
    AwsElasticsearchDomainNodeToNodeEncryptionOptions:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether node-to-node encryption is enabled.
      description: Details about the configuration for node-to-node encryption.
    AwsElasticsearchDomainServiceSoftwareOptions:
      type: object
      properties:
        AutomatedUpdateDate:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The epoch time when the deployment window closes for required
            updates. After this time, Amazon OpenSearch Service schedules the software
            upgrade automatically.
        Cancellable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether a request to update the domain can be canceled.
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The version of the service software that is currently installed
            on the domain.
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A more detailed description of the service software status.
        NewVersion:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The most recent version of the service software.
        UpdateAvailable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether a service software update is available for the domain.
        UpdateStatus:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "The status of the service software update. Valid values are\
            \ as follows:\n\n  * `COMPLETED`\n\n  * `ELIGIBLE`\n\n  * `IN_PROGRESS`\n\
            \n  * `NOT_ELIGIBLE`\n\n  * `PENDING_UPDATE`"
      description: Information about the state of the domain relative to the latest
        service software.
    AwsElasticsearchDomainVPCOptions:
      type: object
      properties:
        AvailabilityZones:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The list of Availability Zones associated with the VPC subnets.
        SecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The list of security group IDs associated with the VPC endpoints
            for the domain.
        SubnetIds:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: A list of subnet IDs associated with the VPC endpoints for
            the domain.
        VPCId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: ID for the VPC.
      description: Information that OpenSearch derives based on `VPCOptions` for the
        domain.
    AwsElbAppCookieStickinessPolicies:
      type: array
      items:
        $ref: '#/components/schemas/AwsElbAppCookieStickinessPolicy'
    AwsElbAppCookieStickinessPolicy:
      type: object
      properties:
        CookieName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the application cookie used for stickiness.
        PolicyName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The mnemonic name for the policy being created. The name must
            be unique within the set of policies for the load balancer.
      description: Contains information about a stickiness policy that was created
        using `CreateAppCookieStickinessPolicy`.
    AwsElbLbCookieStickinessPolicies:
      type: array
      items:
        $ref: '#/components/schemas/AwsElbLbCookieStickinessPolicy'
    AwsElbLbCookieStickinessPolicy:
      type: object
      properties:
        CookieExpirationPeriod:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The amount of time, in seconds, after which the cookie is considered
            stale. If an expiration period is not specified, the stickiness session
            lasts for the duration of the browser session.
        PolicyName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the policy. The name must be unique within the
            set of policies for the load balancer.
      description: Contains information about a stickiness policy that was created
        using `CreateLBCookieStickinessPolicy`.
    AwsElbLoadBalancerAccessLog:
      type: object
      properties:
        EmitInterval:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'The interval in minutes for publishing the access logs.


            You can publish access logs either every 5 minutes or every 60 minutes.'
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether access logs are enabled for the load balancer.
        S3BucketName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the S3 bucket where the access logs are stored.
        S3BucketPrefix:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The logical hierarchy that was created for the S3 bucket.


            If a prefix is not provided, the log is placed at the root level of the
            bucket.'
      description: Contains information about the access log configuration for the
        load balancer.
    AwsElbLoadBalancerAdditionalAttribute:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the attribute.
        Value:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The value of the attribute.
      description: Provides information about additional attributes for the load balancer.
    AwsElbLoadBalancerAdditionalAttributeList:
      type: array
      items:
        $ref: '#/components/schemas/AwsElbLoadBalancerAdditionalAttribute'
    AwsElbLoadBalancerAttributes:
      type: object
      properties:
        AccessLog:
          allOf:
          - $ref: '#/components/schemas/AwsElbLoadBalancerAccessLog'
          description: 'Information about the access log configuration for the load
            balancer.


            If the access log is enabled, the load balancer captures detailed information
            about all requests. It delivers the information to a specified S3 bucket.'
        ConnectionDraining:
          allOf:
          - $ref: '#/components/schemas/AwsElbLoadBalancerConnectionDraining'
          description: 'Information about the connection draining configuration for
            the load balancer.


            If connection draining is enabled, the load balancer allows existing requests
            to complete before it shifts traffic away from a deregistered or unhealthy
            instance.'
        ConnectionSettings:
          allOf:
          - $ref: '#/components/schemas/AwsElbLoadBalancerConnectionSettings'
          description: 'Connection settings for the load balancer.


            If an idle timeout is configured, the load balancer allows connections
            to remain idle for the specified duration. When a connection is idle,
            no data is sent over the connection.'
        CrossZoneLoadBalancing:
          allOf:
          - $ref: '#/components/schemas/AwsElbLoadBalancerCrossZoneLoadBalancing'
          description: 'Cross-zone load balancing settings for the load balancer.


            If cross-zone load balancing is enabled, the load balancer routes the
            request traffic evenly across all instances regardless of the Availability
            Zones.'
        AdditionalAttributes:
          allOf:
          - $ref: '#/components/schemas/AwsElbLoadBalancerAdditionalAttributeList'
          description: Any additional attributes for a load balancer.
      description: Contains attributes for the load balancer.
    AwsElbLoadBalancerBackendServerDescription:
      type: object
      properties:
        InstancePort:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The port on which the EC2 instance is listening.
        PolicyNames:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The names of the policies that are enabled for the EC2 instance.
      description: Provides information about the configuration of an EC2 instance
        for the load balancer.
    AwsElbLoadBalancerBackendServerDescriptions:
      type: array
      items:
        $ref: '#/components/schemas/AwsElbLoadBalancerBackendServerDescription'
    AwsElbLoadBalancerConnectionDraining:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether connection draining is enabled for the load
            balancer.
        Timeout:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum time, in seconds, to keep the existing connections
            open before deregistering the instances.
      description: Contains information about the connection draining configuration
        for the load balancer.
    AwsElbLoadBalancerConnectionSettings:
      type: object
      properties:
        IdleTimeout:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The time, in seconds, that the connection can be idle (no data
            is sent over the connection) before it is closed by the load balancer.
      description: Contains connection settings for the load balancer.
    AwsElbLoadBalancerCrossZoneLoadBalancing:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether cross-zone load balancing is enabled for
            the load balancer.
      description: Contains cross-zone load balancing settings for the load balancer.
    AwsElbLoadBalancerDetails:
      type: object
      properties:
        AvailabilityZones:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The list of Availability Zones for the load balancer.
        BackendServerDescriptions:
          allOf:
          - $ref: '#/components/schemas/AwsElbLoadBalancerBackendServerDescriptions'
          description: Information about the configuration of the EC2 instances.
        CanonicalHostedZoneName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the Amazon Route 53 hosted zone for the load balancer.
        CanonicalHostedZoneNameID:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the Amazon Route 53 hosted zone for the load balancer.
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the load balancer was created.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        DnsName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The DNS name of the load balancer.
        HealthCheck:
          allOf:
          - $ref: '#/components/schemas/AwsElbLoadBalancerHealthCheck'
          description: Information about the health checks that are conducted on the
            load balancer.
        Instances:
          allOf:
          - $ref: '#/components/schemas/AwsElbLoadBalancerInstances'
          description: List of EC2 instances for the load balancer.
        ListenerDescriptions:
          allOf:
          - $ref: '#/components/schemas/AwsElbLoadBalancerListenerDescriptions'
          description: The policies that are enabled for the load balancer listeners.
        LoadBalancerAttributes:
          allOf:
          - $ref: '#/components/schemas/AwsElbLoadBalancerAttributes'
          description: The attributes for a load balancer.
        LoadBalancerName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the load balancer.
        Policies:
          allOf:
          - $ref: '#/components/schemas/AwsElbLoadBalancerPolicies'
          description: The policies for a load balancer.
        Scheme:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The type of load balancer. Only provided if the load balancer
            is in a VPC.


            If `Scheme` is `internet-facing`, the load balancer has a public DNS name
            that resolves to a public IP address.


            If `Scheme` is `internal`, the load balancer has a public DNS name that
            resolves to a private IP address.'
        SecurityGroups:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The security groups for the load balancer. Only provided if
            the load balancer is in a VPC.
        SourceSecurityGroup:
          allOf:
          - $ref: '#/components/schemas/AwsElbLoadBalancerSourceSecurityGroup'
          description: Information about the security group for the load balancer.
            This is the security group that is used for inbound rules.
        Subnets:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The list of subnet identifiers for the load balancer.
        VpcId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the VPC for the load balancer.
      description: Contains details about a Classic Load Balancer.
    AwsElbLoadBalancerHealthCheck:
      type: object
      properties:
        HealthyThreshold:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of consecutive health check successes required before
            the instance is moved to the Healthy state.
        Interval:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The approximate interval, in seconds, between health checks
            of an individual instance.
        Target:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The instance that is being checked. The target specifies the
            protocol and port. The available protocols are TCP, SSL, HTTP, and HTTPS.
            The range of valid ports is 1 through 65535.


            For the HTTP and HTTPS protocols, the target also specifies the ping path.


            For the TCP protocol, the target is specified as `TCP: __`.


            For the SSL protocol, the target is specified as `SSL.__`.


            For the HTTP and HTTPS protocols, the target is specified as ` __:__/__`.'
        Timeout:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The amount of time, in seconds, during which no response means
            a failed health check.
        UnhealthyThreshold:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of consecutive health check failures that must occur
            before the instance is moved to the Unhealthy state.
      description: Contains information about the health checks that are conducted
        on the load balancer.
    AwsElbLoadBalancerInstance:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The instance identifier.
      description: Provides information about an EC2 instance for a load balancer.
    AwsElbLoadBalancerInstances:
      type: array
      items:
        $ref: '#/components/schemas/AwsElbLoadBalancerInstance'
    AwsElbLoadBalancerListener:
      type: object
      properties:
        InstancePort:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The port on which the instance is listening.
        InstanceProtocol:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The protocol to use to route traffic to instances.


            Valid values: `HTTP` | `HTTPS` | `TCP` | `SSL`'
        LoadBalancerPort:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'The port on which the load balancer is listening.


            On EC2-VPC, you can specify any port from the range 1-65535.


            On EC2-Classic, you can specify any port from the following list: 25,
            80, 443, 465, 587, 1024-65535.'
        Protocol:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The load balancer transport protocol to use for routing.


            Valid values: `HTTP` | `HTTPS` | `TCP` | `SSL`'
        SslCertificateId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the server certificate.
      description: Information about a load balancer listener.
    AwsElbLoadBalancerListenerDescription:
      type: object
      properties:
        Listener:
          allOf:
          - $ref: '#/components/schemas/AwsElbLoadBalancerListener'
          description: Information about the listener.
        PolicyNames:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The policies enabled for the listener.
      description: Lists the policies that are enabled for a load balancer listener.
    AwsElbLoadBalancerListenerDescriptions:
      type: array
      items:
        $ref: '#/components/schemas/AwsElbLoadBalancerListenerDescription'
    AwsElbLoadBalancerPolicies:
      type: object
      properties:
        AppCookieStickinessPolicies:
          allOf:
          - $ref: '#/components/schemas/AwsElbAppCookieStickinessPolicies'
          description: The stickiness policies that are created using `CreateAppCookieStickinessPolicy`.
        LbCookieStickinessPolicies:
          allOf:
          - $ref: '#/components/schemas/AwsElbLbCookieStickinessPolicies'
          description: The stickiness policies that are created using `CreateLBCookieStickinessPolicy`.
        OtherPolicies:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The policies other than the stickiness policies.
      description: Contains information about the policies for a load balancer.
    AwsElbLoadBalancerSourceSecurityGroup:
      type: object
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the security group.
        OwnerAlias:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The owner of the security group.
      description: Contains information about the security group for the load balancer.
    AwsElbv2LoadBalancerAttribute:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the load balancer attribute.
        Value:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The value of the load balancer attribute.
      description: A load balancer attribute.
    AwsElbv2LoadBalancerAttributes:
      type: array
      items:
        $ref: '#/components/schemas/AwsElbv2LoadBalancerAttribute'
    AwsElbv2LoadBalancerDetails:
      type: object
      properties:
        AvailabilityZones:
          allOf:
          - $ref: '#/components/schemas/AvailabilityZones'
          description: The Availability Zones for the load balancer.
        CanonicalHostedZoneId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the Amazon Route 53 hosted zone associated with the
            load balancer.
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the load balancer was created.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        DNSName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The public DNS name of the load balancer.
        IpAddressType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of IP addresses used by the subnets for your load
            balancer. The possible values are `ipv4` (for IPv4 addresses) and `dualstack`
            (for IPv4 and IPv6 addresses).
        Scheme:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The nodes of an Internet-facing load balancer have public IP
            addresses.
        SecurityGroups:
          allOf:
          - $ref: '#/components/schemas/SecurityGroups'
          description: The IDs of the security groups for the load balancer.
        State:
          allOf:
          - $ref: '#/components/schemas/LoadBalancerState'
          description: The state of the load balancer.
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of load balancer.
        VpcId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the VPC for the load balancer.
        LoadBalancerAttributes:
          allOf:
          - $ref: '#/components/schemas/AwsElbv2LoadBalancerAttributes'
          description: Attributes of the load balancer.
      description: Information about a load balancer.
    AwsEventSchemasRegistryDetails:
      type: object
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A description of the registry to be created.
        RegistryArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the registry.
        RegistryName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the schema registry.
      description: A schema defines the structure of events that are sent to Amazon
        EventBridge. Schema registries are containers for schemas. They collect and
        organize schemas so that your schemas are in logical groups.
    AwsEventsEndpointDetails:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the endpoint.
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A description of the endpoint.
        EndpointId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The URL subdomain of the endpoint. For example, if `EndpointUrl`
            is `https://abcde.veo.endpoints.event.amazonaws.com`, then the `EndpointId`
            is `abcde.veo`.
        EndpointUrl:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The URL of the endpoint.
        EventBuses:
          allOf:
          - $ref: '#/components/schemas/AwsEventsEndpointEventBusesList'
          description: The event buses being used by the endpoint.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the endpoint.
        ReplicationConfig:
          allOf:
          - $ref: '#/components/schemas/AwsEventsEndpointReplicationConfigDetails'
          description: Whether event replication was enabled or disabled for this
            endpoint. The default state is `ENABLED`, which means you must supply
            a `RoleArn`. If you don't have a `RoleArn` or you don't want event replication
            enabled, set the state to `DISABLED`.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the role used by event replication for the endpoint.
        RoutingConfig:
          allOf:
          - $ref: '#/components/schemas/AwsEventsEndpointRoutingConfigDetails'
          description: The routing configuration of the endpoint.
        State:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The current state of the endpoint.
        StateReason:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The reason the endpoint is in its current state.
      description: Provides details about an Amazon EventBridge global endpoint. The
        endpoint can improve your application’s availability by making it Regional-fault
        tolerant.
    AwsEventsEndpointEventBusesDetails:
      type: object
      properties:
        EventBusArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the event bus that the endpoint
            is associated with.
      description: Provides details about the Amazon EventBridge event buses that
        the endpoint is associated with.
    AwsEventsEndpointEventBusesList:
      type: array
      items:
        $ref: '#/components/schemas/AwsEventsEndpointEventBusesDetails'
    AwsEventsEndpointReplicationConfigDetails:
      type: object
      properties:
        State:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The state of event replication.
      description: Indicates whether replication is enabled or disabled for the endpoint.
        If enabled, the endpoint can replicate all events to a secondary Amazon Web
        Services Region.
    AwsEventsEndpointRoutingConfigDetails:
      type: object
      properties:
        FailoverConfig:
          allOf:
          - $ref: '#/components/schemas/AwsEventsEndpointRoutingConfigFailoverConfigDetails'
          description: The failover configuration for an endpoint. This includes what
            triggers failover and what happens when it's triggered.
      description: Provides details about the routing configuration of the endpoint.
    AwsEventsEndpointRoutingConfigFailoverConfigDetails:
      type: object
      properties:
        Primary:
          allOf:
          - $ref: '#/components/schemas/AwsEventsEndpointRoutingConfigFailoverConfigPrimaryDetails'
          description: The main Region of the endpoint.
        Secondary:
          allOf:
          - $ref: '#/components/schemas/AwsEventsEndpointRoutingConfigFailoverConfigSecondaryDetails'
          description: The Region that events are routed to when failover is triggered
            or event replication is enabled.
      description: The failover configuration for an endpoint. This includes what
        triggers failover and what happens when it's triggered.
    AwsEventsEndpointRoutingConfigFailoverConfigPrimaryDetails:
      type: object
      properties:
        HealthCheck:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the health check used by
            the endpoint to determine whether failover is triggered.
      description: Provides details about the primary Amazon Web Services Region of
        the endpoint.
    AwsEventsEndpointRoutingConfigFailoverConfigSecondaryDetails:
      type: object
      properties:
        Route:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Defines the secondary Region.
      description: The Amazon Web Services Region that events are routed to when failover
        is triggered or event replication is enabled.
    AwsEventsEventbusDetails:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the account permitted to
            write events to the current account.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the event bus.
        Policy:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The policy that enables the external account to send events
            to your account.
      description: Provides details about Amazon EventBridge event bus. An event bus
        is a router that receives events and delivers them to zero or more destinations,
        or targets. This can be a custom event bus which you can use to receive events
        from your custom applications and services, or it can be a partner event bus
        which can be matched to a partner event source.
    AwsGuardDutyDetectorDataSourcesCloudTrailDetails:
      type: object
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Specifies whether CloudTrail is activated as a data source
            for the detector.
      description: An object that contains information on the status of CloudTrail
        as a data source for the detector.
    AwsGuardDutyDetectorDataSourcesDetails:
      type: object
      properties:
        CloudTrail:
          allOf:
          - $ref: '#/components/schemas/AwsGuardDutyDetectorDataSourcesCloudTrailDetails'
          description: An object that contains information on the status of CloudTrail
            as a data source for the detector.
        DnsLogs:
          allOf:
          - $ref: '#/components/schemas/AwsGuardDutyDetectorDataSourcesDnsLogsDetails'
          description: An object that contains information on the status of DNS logs
            as a data source for the detector.
        FlowLogs:
          allOf:
          - $ref: '#/components/schemas/AwsGuardDutyDetectorDataSourcesFlowLogsDetails'
          description: An object that contains information on the status of VPC Flow
            Logs as a data source for the detector.
        Kubernetes:
          allOf:
          - $ref: '#/components/schemas/AwsGuardDutyDetectorDataSourcesKubernetesDetails'
          description: An object that contains information on the status of Kubernetes
            data sources for the detector.
        MalwareProtection:
          allOf:
          - $ref: '#/components/schemas/AwsGuardDutyDetectorDataSourcesMalwareProtectionDetails'
          description: An object that contains information on the status of Malware
            Protection as a data source for the detector.
        S3Logs:
          allOf:
          - $ref: '#/components/schemas/AwsGuardDutyDetectorDataSourcesS3LogsDetails'
          description: An object that contains information on the status of S3 Data
            event logs as a data source for the detector.
      description: Describes which data sources are activated for the detector.
    AwsGuardDutyDetectorDataSourcesDnsLogsDetails:
      type: object
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Describes whether DNS logs is enabled as a data source for
            the detector.
      description: An object that contains information on the status of DNS logs as
        a data source for the detector.
    AwsGuardDutyDetectorDataSourcesFlowLogsDetails:
      type: object
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Describes whether VPC Flow Logs are activated as a data source
            for the detector.
      description: An object that contains information on the status of VPC Flow Logs
        as a data source for the detector.
    AwsGuardDutyDetectorDataSourcesKubernetesAuditLogsDetails:
      type: object
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Describes whether Kubernetes audit logs are activated as a
            data source for the detector.
      description: An object that contains information on the status of Kubernetes
        audit logs as a data source for the detector.
    AwsGuardDutyDetectorDataSourcesKubernetesDetails:
      type: object
      properties:
        AuditLogs:
          allOf:
          - $ref: '#/components/schemas/AwsGuardDutyDetectorDataSourcesKubernetesAuditLogsDetails'
          description: Describes whether Kubernetes audit logs are activated as a
            data source for the detector.
      description: An object that contains information on the status of Kubernetes
        data sources for the detector.
    AwsGuardDutyDetectorDataSourcesMalwareProtectionDetails:
      type: object
      properties:
        ScanEc2InstanceWithFindings:
          allOf:
          - $ref: '#/components/schemas/AwsGuardDutyDetectorDataSourcesMalwareProtectionScanEc2InstanceWithFindingsDetails'
          description: Describes the configuration of Malware Protection for EC2 instances
            with findings.
        ServiceRole:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The GuardDuty Malware Protection service role.
      description: An object that contains information on the status of Malware Protection
        as a data source for the detector.
    AwsGuardDutyDetectorDataSourcesMalwareProtectionScanEc2InstanceWithFindingsDetails:
      type: object
      properties:
        EbsVolumes:
          allOf:
          - $ref: '#/components/schemas/AwsGuardDutyDetectorDataSourcesMalwareProtectionScanEc2InstanceWithFindingsEbsVolumesDetails'
          description: Describes the configuration of scanning EBS volumes (Malware
            Protection) as a data source.
      description: Describes the configuration of Malware Protection for EC2 instances
        with findings.
    AwsGuardDutyDetectorDataSourcesMalwareProtectionScanEc2InstanceWithFindingsEbsVolumesDetails:
      type: object
      properties:
        Reason:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Specifies the reason why scanning EBS volumes (Malware Protection)
            isn’t activated as a data source.
        Status:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Describes whether scanning EBS volumes is activated as a data
            source for the detector.
      description: Describes the configuration of scanning EBS volumes (Malware Protection)
        as a data source.
    AwsGuardDutyDetectorDataSourcesS3LogsDetails:
      type: object
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A value that describes whether S3 data event logs are automatically
            enabled for new members of an organization.
      description: An object that contains information on the status of S3 data event
        logs as a data source for the detector.
    AwsGuardDutyDetectorDetails:
      type: object
      properties:
        DataSources:
          allOf:
          - $ref: '#/components/schemas/AwsGuardDutyDetectorDataSourcesDetails'
          description: Describes which data sources are activated for the detector.
        Features:
          allOf:
          - $ref: '#/components/schemas/AwsGuardDutyDetectorFeaturesList'
          description: Describes which features are activated for the detector.
        FindingPublishingFrequency:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The publishing frequency of the finding.
        ServiceRole:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The GuardDuty service role.
        Status:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The activation status of the detector.
      description: Provides details about an Amazon GuardDuty detector. A detector
        is an object that represents the GuardDuty service. A detector is required
        for GuardDuty to become operational.
    AwsGuardDutyDetectorFeaturesDetails:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Indicates the name of the feature that is activated for the
            detector.
        Status:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Indicates the status of the feature that is activated for the
            detector.
      description: Describes which features are activated for the detector.
    AwsGuardDutyDetectorFeaturesList:
      type: array
      items:
        $ref: '#/components/schemas/AwsGuardDutyDetectorFeaturesDetails'
    AwsIamAccessKeyDetails:
      type: object
      properties:
        UserName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The user associated with the IAM access key related to a finding.


            The `UserName` parameter has been replaced with the `PrincipalName` parameter
            because access keys can also be assigned to principals that are not IAM
            users.'
        Status:
          allOf:
          - $ref: '#/components/schemas/AwsIamAccessKeyStatus'
          description: The status of the IAM access key related to a finding.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the IAM access key was created.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        PrincipalId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the principal associated with an access key.
        PrincipalType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of principal associated with an access key.
        PrincipalName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the principal.
        AccountId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Web Services account ID of the account for the key.
        AccessKeyId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the access key.
        SessionContext:
          allOf:
          - $ref: '#/components/schemas/AwsIamAccessKeySessionContext'
          description: Information about the session that the key was used for.
      description: IAM access key details related to a finding.
    AwsIamAccessKeySessionContext:
      type: object
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/AwsIamAccessKeySessionContextAttributes'
          description: Attributes of the session that the key was used for.
        SessionIssuer:
          allOf:
          - $ref: '#/components/schemas/AwsIamAccessKeySessionContextSessionIssuer'
          description: Information about the entity that created the session.
      description: Provides information about the session that the key was used for.
    AwsIamAccessKeySessionContextAttributes:
      type: object
      properties:
        MfaAuthenticated:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether the session used multi-factor authentication
            (MFA).
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the session was created.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
      description: Attributes of the session that the key was used for.
    AwsIamAccessKeySessionContextSessionIssuer:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of principal (user, role, or group) that created the
            session.
        PrincipalId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The principal ID of the principal (user, role, or group) that
            created the session.
        Arn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the session.
        AccountId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the Amazon Web Services account that created
            the session.
        UserName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the principal that created the session.
      description: Information about the entity that created the session.
    AwsIamAccessKeyStatus:
      type: string
      enum:
      - Active
      - Inactive
    AwsIamAttachedManagedPolicy:
      type: object
      properties:
        PolicyName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the policy.
        PolicyArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the policy.
      description: A managed policy that is attached to an IAM principal.
    AwsIamAttachedManagedPolicyList:
      type: array
      items:
        $ref: '#/components/schemas/AwsIamAttachedManagedPolicy'
    AwsIamGroupDetails:
      type: object
      properties:
        AttachedManagedPolicies:
          allOf:
          - $ref: '#/components/schemas/AwsIamAttachedManagedPolicyList'
          description: A list of the managed policies that are attached to the IAM
            group.
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the IAM group was created.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        GroupId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the IAM group.
        GroupName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the IAM group.
        GroupPolicyList:
          allOf:
          - $ref: '#/components/schemas/AwsIamGroupPolicyList'
          description: The list of inline policies that are embedded in the group.
        Path:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The path to the group.
      description: Contains details about an IAM group.
    AwsIamGroupPolicy:
      type: object
      properties:
        PolicyName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the policy.
      description: A managed policy that is attached to the IAM group.
    AwsIamGroupPolicyList:
      type: array
      items:
        $ref: '#/components/schemas/AwsIamGroupPolicy'
    AwsIamInstanceProfile:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the instance profile.
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the instance profile was created.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        InstanceProfileId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the instance profile.
        InstanceProfileName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the instance profile.
        Path:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The path to the instance profile.
        Roles:
          allOf:
          - $ref: '#/components/schemas/AwsIamInstanceProfileRoles'
          description: The roles associated with the instance profile.
      description: Information about an instance profile.
    AwsIamInstanceProfileList:
      type: array
      items:
        $ref: '#/components/schemas/AwsIamInstanceProfile'
    AwsIamInstanceProfileRole:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the role.
        AssumeRolePolicyDocument:
          allOf:
          - $ref: '#/components/schemas/AwsIamRoleAssumeRolePolicyDocument'
          description: The policy that grants an entity permission to assume the role.
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the role was created.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        Path:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The path to the role.
        RoleId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the role.
        RoleName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the role.
      description: Information about a role associated with an instance profile.
    AwsIamInstanceProfileRoles:
      type: array
      items:
        $ref: '#/components/schemas/AwsIamInstanceProfileRole'
    AwsIamPermissionsBoundary:
      type: object
      properties:
        PermissionsBoundaryArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the policy used to set the permissions boundary.
        PermissionsBoundaryType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The usage type for the permissions boundary.
      description: Information about the policy used to set the permissions boundary
        for an IAM principal.
    AwsIamPolicyDetails:
      type: object
      properties:
        AttachmentCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of users, groups, and roles that the policy is attached
            to.
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'When the policy was created.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        DefaultVersionId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the default version of the policy.
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A description of the policy.
        IsAttachable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the policy can be attached to a user, group, or role.
        Path:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The path to the policy.
        PermissionsBoundaryUsageCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of users and roles that use the policy to set the
            permissions boundary.
        PolicyId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The unique identifier of the policy.
        PolicyName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the policy.
        PolicyVersionList:
          allOf:
          - $ref: '#/components/schemas/AwsIamPolicyVersionList'
          description: List of versions of the policy.
        UpdateDate:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'When the policy was most recently updated.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
      description: Represents an IAM permissions policy.
    AwsIamPolicyVersion:
      type: object
      properties:
        VersionId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the policy version.
        IsDefaultVersion:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the version is the default version.
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the version was created.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
      description: A version of an IAM policy.
    AwsIamPolicyVersionList:
      type: array
      items:
        $ref: '#/components/schemas/AwsIamPolicyVersion'
    AwsIamRoleAssumeRolePolicyDocument:
      type: string
      pattern: ^[\u0009\u000A\u000D\u0020-\u007E\u00A1-\u00FF]+$
      minLength: 1
      maxLength: 131072
    AwsIamRoleDetails:
      type: object
      properties:
        AssumeRolePolicyDocument:
          allOf:
          - $ref: '#/components/schemas/AwsIamRoleAssumeRolePolicyDocument'
          description: The trust policy that grants permission to assume the role.
        AttachedManagedPolicies:
          allOf:
          - $ref: '#/components/schemas/AwsIamAttachedManagedPolicyList'
          description: The list of the managed policies that are attached to the role.
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the role was created.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        InstanceProfileList:
          allOf:
          - $ref: '#/components/schemas/AwsIamInstanceProfileList'
          description: The list of instance profiles that contain this role.
        PermissionsBoundary:
          $ref: '#/components/schemas/AwsIamPermissionsBoundary'
        RoleId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The stable and unique string identifying the role.
        RoleName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The friendly name that identifies the role.
        RolePolicyList:
          allOf:
          - $ref: '#/components/schemas/AwsIamRolePolicyList'
          description: The list of inline policies that are embedded in the role.
        MaxSessionDuration:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum session duration (in seconds) that you want to
            set for the specified role.
        Path:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The path to the role.
      description: Contains information about an IAM role, including all of the role's
        policies.
    AwsIamRolePolicy:
      type: object
      properties:
        PolicyName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the policy.
      description: An inline policy that is embedded in the role.
    AwsIamRolePolicyList:
      type: array
      items:
        $ref: '#/components/schemas/AwsIamRolePolicy'
    AwsIamUserDetails:
      type: object
      properties:
        AttachedManagedPolicies:
          allOf:
          - $ref: '#/components/schemas/AwsIamAttachedManagedPolicyList'
          description: A list of the managed policies that are attached to the user.
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the user was created.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        GroupList:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: A list of IAM groups that the user belongs to.
        Path:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The path to the user.
        PermissionsBoundary:
          allOf:
          - $ref: '#/components/schemas/AwsIamPermissionsBoundary'
          description: The permissions boundary for the user.
        UserId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The unique identifier for the user.
        UserName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the user.
        UserPolicyList:
          allOf:
          - $ref: '#/components/schemas/AwsIamUserPolicyList'
          description: The list of inline policies that are embedded in the user.
      description: Information about an IAM user.
    AwsIamUserPolicy:
      type: object
      properties:
        PolicyName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the policy.
      description: Information about an inline policy that is embedded in the user.
    AwsIamUserPolicyList:
      type: array
      items:
        $ref: '#/components/schemas/AwsIamUserPolicy'
    AwsKinesisStreamDetails:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the Kinesis stream. If you don't specify a name,
            CloudFront generates a unique physical ID and uses that ID for the stream
            name.
        Arn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the Kinesis data stream.
        StreamEncryption:
          allOf:
          - $ref: '#/components/schemas/AwsKinesisStreamStreamEncryptionDetails'
          description: When specified, enables or updates server-side encryption using
            an KMS key for a specified stream. Removing this property from your stack
            template and updating your stack disables encryption.
        ShardCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of shards that the stream uses.
        RetentionPeriodHours:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of hours for the data records that are stored in
            shards to remain accessible.
      description: Provides information about an Amazon Kinesis data stream.
    AwsKinesisStreamStreamEncryptionDetails:
      type: object
      properties:
        EncryptionType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The encryption type to use.
        KeyId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The globally unique identifier for the customer-managed KMS
            key to use for encryption.
      description: Provides information about stream encryption.
    AwsKmsKeyDetails:
      type: object
      properties:
        AWSAccountId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The twelve-digit account ID of the Amazon Web Services account
            that owns the KMS key.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: 'Indicates when the KMS key was created.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        KeyId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The globally unique identifier for the KMS key.
        KeyManager:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The manager of the KMS key. KMS keys in your Amazon Web Services
            account are either customer managed or Amazon Web Services managed.
        KeyState:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "The state of the KMS key. Valid values are as follows:\n\n\
            \  * `Disabled`\n\n  * `Enabled`\n\n  * `PendingDeletion`\n\n  * `PendingImport`\n\
            \n  * `Unavailable`"
        Origin:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The source of the KMS key material.


            When this value is `AWS_KMS`, KMS created the key material.


            When this value is `EXTERNAL`, the key material was imported from your
            existing key management infrastructure or the KMS key lacks key material.


            When this value is `AWS_CLOUDHSM`, the key material was created in the
            CloudHSM cluster associated with a custom key store.'
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A description of the KMS key.
        KeyRotationStatus:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the key has key rotation enabled.
      description: Contains metadata about an KMS key.
    AwsLambdaFunctionCode:
      type: object
      properties:
        S3Bucket:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: An Amazon S3 bucket in the same Amazon Web Services Region
            as your function. The bucket can be in a different Amazon Web Services
            account.
        S3Key:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon S3 key of the deployment package.
        S3ObjectVersion:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: For versioned objects, the version of the deployment package
            object to use.
        ZipFile:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The base64-encoded contents of the deployment package. Amazon
            Web Services SDK and Amazon Web Services CLI clients handle the encoding
            for you.
      description: The code for the Lambda function. You can specify either an object
        in Amazon S3, or upload a deployment package directly.
    AwsLambdaFunctionDeadLetterConfig:
      type: object
      properties:
        TargetArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of an SQS queue or SNS topic.
      description: The dead-letter queue for failed asynchronous invocations.
    AwsLambdaFunctionDetails:
      type: object
      properties:
        Code:
          allOf:
          - $ref: '#/components/schemas/AwsLambdaFunctionCode'
          description: An `AwsLambdaFunctionCode` object.
        CodeSha256:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The SHA256 hash of the function's deployment package.
        DeadLetterConfig:
          allOf:
          - $ref: '#/components/schemas/AwsLambdaFunctionDeadLetterConfig'
          description: The function's dead letter queue.
        Environment:
          allOf:
          - $ref: '#/components/schemas/AwsLambdaFunctionEnvironment'
          description: The function's environment variables.
        FunctionName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the function.
        Handler:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The function that Lambda calls to begin executing your function.
        KmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The KMS key that is used to encrypt the function's environment
            variables. This key is only returned if you've configured a customer managed
            customer managed key.
        LastModified:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the function was last updated.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        Layers:
          allOf:
          - $ref: '#/components/schemas/AwsLambdaFunctionLayerList'
          description: The function's layers.
        MasterArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: For Lambda@Edge functions, the ARN of the master function.
        MemorySize:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The memory that is allocated to the function.
        RevisionId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The latest updated revision of the function or alias.
        Role:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The function's execution role.
        Runtime:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The runtime environment for the Lambda function.
        Timeout:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The amount of time that Lambda allows a function to run before
            stopping it.
        TracingConfig:
          allOf:
          - $ref: '#/components/schemas/AwsLambdaFunctionTracingConfig'
          description: The function's X-Ray tracing configuration.
        VpcConfig:
          allOf:
          - $ref: '#/components/schemas/AwsLambdaFunctionVpcConfig'
          description: The function's networking configuration.
        Version:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The version of the Lambda function.
        Architectures:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The instruction set architecture that the function uses. Valid
            values are `x86_64` or `arm64`.
        PackageType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of deployment package that's used to deploy the function
            code to Lambda. Set to `Image` for a container image and `Zip` for a .zip
            file archive.
      description: Details about an Lambda function's configuration.
    AwsLambdaFunctionEnvironment:
      type: object
      properties:
        Variables:
          allOf:
          - $ref: '#/components/schemas/FieldMap'
          description: Environment variable key-value pairs.
        Error:
          allOf:
          - $ref: '#/components/schemas/AwsLambdaFunctionEnvironmentError'
          description: An `AwsLambdaFunctionEnvironmentError` object.
      description: A function's environment variable settings.
    AwsLambdaFunctionEnvironmentError:
      type: object
      properties:
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The error code.
        Message:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The error message.
      description: Error messages for environment variables that could not be applied.
    AwsLambdaFunctionLayer:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the function layer.
        CodeSize:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The size of the layer archive in bytes.
      description: An Lambda layer.
    AwsLambdaFunctionLayerList:
      type: array
      items:
        $ref: '#/components/schemas/AwsLambdaFunctionLayer'
    AwsLambdaFunctionTracingConfig:
      type: object
      properties:
        Mode:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The tracing mode.
      description: The function's X-Ray tracing configuration.
    AwsLambdaFunctionVpcConfig:
      type: object
      properties:
        SecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: A list of VPC security groups IDs.
        SubnetIds:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: A list of VPC subnet IDs.
        VpcId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the VPC.
      description: The VPC security groups and subnets that are attached to a Lambda
        function.
    AwsLambdaLayerVersionDetails:
      type: object
      properties:
        Version:
          allOf:
          - $ref: '#/components/schemas/AwsLambdaLayerVersionNumber'
          description: The version number.
        CompatibleRuntimes:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: 'The layer''s compatible [function runtimes](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html).


            The following list includes deprecated runtimes. For more information,
            see [Runtime deprecation policy](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtime-support-policy)
            in the _Lambda Developer Guide_.


            Array Members: Maximum number of 5 items.


            Valid Values: `nodejs | nodejs4.3 | nodejs6.10 | nodejs8.10 | nodejs10.x
            | nodejs12.x | nodejs14.x | nodejs16.x | java8 | java8.al2 | java11 |
            python2.7 | python3.6 | python3.7 | python3.8 | python3.9 | dotnetcore1.0
            | dotnetcore2.0 | dotnetcore2.1 | dotnetcore3.1 | dotnet6 | nodejs4.3-edge
            | go1.x | ruby2.5 | ruby2.7 | provided | provided.al2 | nodejs18.x | python3.10
            | java17 | ruby3.2 | python3.11 | nodejs20.x | provided.al2023 | python3.12
            | java21`'
        CreatedDate:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the version was created.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
      description: Details about a Lambda layer version.
    AwsLambdaLayerVersionNumber:
      type: integer
      format: int64
    AwsMountPoint:
      type: object
      properties:
        SourceVolume:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the volume to mount. Must be a volume name referenced
            in the `name` parameter of task definition `volume`.
        ContainerPath:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The path on the container to mount the host volume at.
      description: Details for a volume mount point that's used in a container definition.
    AwsMountPointList:
      type: array
      items:
        $ref: '#/components/schemas/AwsMountPoint'
    AwsMskClusterClusterInfoClientAuthenticationDetails:
      type: object
      properties:
        Sasl:
          allOf:
          - $ref: '#/components/schemas/AwsMskClusterClusterInfoClientAuthenticationSaslDetails'
          description: Provides details for client authentication using SASL.
        Unauthenticated:
          allOf:
          - $ref: '#/components/schemas/AwsMskClusterClusterInfoClientAuthenticationUnauthenticatedDetails'
          description: Provides details for allowing no client authentication.
        Tls:
          allOf:
          - $ref: '#/components/schemas/AwsMskClusterClusterInfoClientAuthenticationTlsDetails'
          description: Provides details for client authentication using TLS.
      description: Provides details about different modes of client authentication.
    AwsMskClusterClusterInfoClientAuthenticationSaslDetails:
      type: object
      properties:
        Iam:
          allOf:
          - $ref: '#/components/schemas/AwsMskClusterClusterInfoClientAuthenticationSaslIamDetails'
          description: Provides details for SASL client authentication using IAM.
        Scram:
          allOf:
          - $ref: '#/components/schemas/AwsMskClusterClusterInfoClientAuthenticationSaslScramDetails'
          description: Details for SASL client authentication using SCRAM.
      description: Provides details for client authentication using SASL.
    AwsMskClusterClusterInfoClientAuthenticationSaslIamDetails:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether SASL/IAM authentication is enabled or not.
      description: Details for SASL/IAM client authentication.
    AwsMskClusterClusterInfoClientAuthenticationSaslScramDetails:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether SASL/SCRAM authentication is enabled or not.
      description: Details for SASL/SCRAM client authentication.
    AwsMskClusterClusterInfoClientAuthenticationTlsDetails:
      type: object
      properties:
        CertificateAuthorityArnList:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: List of Amazon Web Services Private CA Amazon Resource Names
            (ARNs). Amazon Web Services Private CA enables creation of private certificate
            authority (CA) hierarchies, including root and subordinate CAs, without
            the investment and maintenance costs of operating an on-premises CA.
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether TLS authentication is enabled or not.
      description: Provides details for client authentication using TLS.
    AwsMskClusterClusterInfoClientAuthenticationUnauthenticatedDetails:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether unauthenticated is allowed or not.
      description: Provides details for allowing no client authentication.
    AwsMskClusterClusterInfoDetails:
      type: object
      properties:
        EncryptionInfo:
          allOf:
          - $ref: '#/components/schemas/AwsMskClusterClusterInfoEncryptionInfoDetails'
          description: Includes encryption-related information, such as the KMS key
            used for encrypting data at rest and whether you want Amazon MSK to encrypt
            your data in transit.
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The current version of the cluster.
        NumberOfBrokerNodes:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of broker nodes in the cluster.
        ClusterName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the cluster.
        ClientAuthentication:
          allOf:
          - $ref: '#/components/schemas/AwsMskClusterClusterInfoClientAuthenticationDetails'
          description: Provides information for different modes of client authentication.
        EnhancedMonitoring:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Specifies the level of monitoring for the cluster.
      description: Provide details about an Amazon Managed Streaming for Apache Kafka
        (Amazon MSK) cluster.
    AwsMskClusterClusterInfoEncryptionInfoDetails:
      type: object
      properties:
        EncryptionInTransit:
          allOf:
          - $ref: '#/components/schemas/AwsMskClusterClusterInfoEncryptionInfoEncryptionInTransitDetails'
          description: The settings for encrypting data in transit.
        EncryptionAtRest:
          allOf:
          - $ref: '#/components/schemas/AwsMskClusterClusterInfoEncryptionInfoEncryptionAtRestDetails'
          description: The data-volume encryption details. You can't update encryption
            at rest settings for existing clusters.
      description: Includes encryption-related information, such as the KMS key used
        for encrypting data at rest and whether you want MSK to encrypt your data
        in transit.
    AwsMskClusterClusterInfoEncryptionInfoEncryptionAtRestDetails:
      type: object
      properties:
        DataVolumeKMSKeyId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the KMS key for encrypting
            data at rest. If you don't specify a KMS key, MSK creates one for you
            and uses it.
      description: The data-volume encryption details. You can't update encryption
        at rest settings for existing clusters.
    AwsMskClusterClusterInfoEncryptionInfoEncryptionInTransitDetails:
      type: object
      properties:
        InCluster:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: When set to `true`, it indicates that data communication among
            the broker nodes of the cluster is encrypted. When set to `false`, the
            communication happens in plain text. The default value is `true`.
        ClientBroker:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Indicates the encryption setting for data in transit between
            clients and brokers.
      description: The settings for encrypting data in transit.
    AwsMskClusterDetails:
      type: object
      properties:
        ClusterInfo:
          allOf:
          - $ref: '#/components/schemas/AwsMskClusterClusterInfoDetails'
          description: Provides information about a cluster.
      description: Provides details about an Amazon Managed Streaming for Apache Kafka
        (Amazon MSK) cluster.
    AwsNetworkFirewallFirewallDetails:
      type: object
      properties:
        DeleteProtection:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the firewall is protected from deletion. If set to
            `true`, then the firewall cannot be deleted.
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A description of the firewall.
        FirewallArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the firewall.
        FirewallId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the firewall.
        FirewallName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A descriptive name of the firewall.
        FirewallPolicyArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the firewall policy.
        FirewallPolicyChangeProtection:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the firewall is protected from a change to the firewall
            policy. If set to `true`, you cannot associate a different policy with
            the firewall.
        SubnetChangeProtection:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the firewall is protected from a change to the subnet
            associations. If set to `true`, you cannot map different subnets to the
            firewall.
        SubnetMappings:
          allOf:
          - $ref: '#/components/schemas/AwsNetworkFirewallFirewallSubnetMappingsList'
          description: The public subnets that Network Firewall uses for the firewall.
            Each subnet must belong to a different Availability Zone.
        VpcId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the VPC where the firewall is used.
      description: Details about an Network Firewall firewall.
    AwsNetworkFirewallFirewallPolicyDetails:
      type: object
      properties:
        FirewallPolicy:
          allOf:
          - $ref: '#/components/schemas/FirewallPolicyDetails'
          description: The firewall policy configuration.
        FirewallPolicyArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the firewall policy.
        FirewallPolicyId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the firewall policy.
        FirewallPolicyName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the firewall policy.
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A description of the firewall policy.
      description: Details about a firewall policy. A firewall policy defines the
        behavior of a network firewall.
    AwsNetworkFirewallFirewallSubnetMappingsDetails:
      type: object
      properties:
        SubnetId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the subnet
      description: A public subnet that Network Firewall uses for the firewall.
    AwsNetworkFirewallFirewallSubnetMappingsList:
      type: array
      items:
        $ref: '#/components/schemas/AwsNetworkFirewallFirewallSubnetMappingsDetails'
    AwsNetworkFirewallRuleGroupDetails:
      type: object
      properties:
        Capacity:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of operating resources that this rule group
            can use.
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A description of the rule group.
        RuleGroup:
          allOf:
          - $ref: '#/components/schemas/RuleGroupDetails'
          description: Details about the rule group.
        RuleGroupArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the rule group.
        RuleGroupId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the rule group.
        RuleGroupName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The descriptive name of the rule group.
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of rule group. A rule group can be stateful or stateless.
      description: 'Details about an Network Firewall rule group. Rule groups are
        used to inspect and control network traffic. Stateless rule groups apply to
        individual packets. Stateful rule groups apply to packets in the context of
        their traffic flow.


        Rule groups are referenced in firewall policies.'
    AwsOpenSearchServiceDomainAdvancedSecurityOptionsDetails:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Enables fine-grained access control.
        InternalUserDatabaseEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Enables the internal user database.
        MasterUserOptions:
          allOf:
          - $ref: '#/components/schemas/AwsOpenSearchServiceDomainMasterUserOptionsDetails'
          description: Specifies information about the master user of the domain.
      description: Provides information about domain access control options.
    AwsOpenSearchServiceDomainClusterConfigDetails:
      type: object
      properties:
        InstanceCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of data nodes to use in the OpenSearch domain.
        WarmEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether UltraWarm is enabled.
        WarmCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of UltraWarm instances.
        DedicatedMasterEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to use a dedicated master node for the OpenSearch domain.
            A dedicated master node performs cluster management tasks, but does not
            hold data or respond to data upload requests.
        ZoneAwarenessConfig:
          allOf:
          - $ref: '#/components/schemas/AwsOpenSearchServiceDomainClusterConfigZoneAwarenessConfigDetails'
          description: Configuration options for zone awareness. Provided if `ZoneAwarenessEnabled`
            is `true`.
        DedicatedMasterCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of instances to use for the master node. If this
            attribute is specified, then `DedicatedMasterEnabled` must be `true`.
        InstanceType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The instance type for your data nodes.


            For a list of valid values, see [Supported instance types in Amazon OpenSearch
            Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/supported-instance-types.html)
            in the _Amazon OpenSearch Service Developer Guide_.'
        WarmType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of UltraWarm instance.
        ZoneAwarenessEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to enable zone awareness for the OpenSearch domain.
            When zone awareness is enabled, OpenSearch Service allocates the cluster's
            nodes and replica index shards across Availability Zones (AZs) in the
            same Region. This prevents data loss and minimizes downtime if a node
            or data center fails.
        DedicatedMasterType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The hardware configuration of the computer that hosts the
            dedicated master node.


            If this attribute is specified, then `DedicatedMasterEnabled` must be
            `true`.'
      description: Details about the configuration of an OpenSearch cluster.
    AwsOpenSearchServiceDomainClusterConfigZoneAwarenessConfigDetails:
      type: object
      properties:
        AvailabilityZoneCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of Availability Zones that the domain uses. Valid
            values are `2` or `3`. The default is `2`.
      description: Configuration options for zone awareness.
    AwsOpenSearchServiceDomainDetails:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the OpenSearch Service domain.
        AccessPolicies:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: IAM policy document that specifies the access policies for
            the OpenSearch Service domain.
        DomainName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the endpoint.
        Id:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the domain.
        DomainEndpoint:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The domain endpoint.
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The version of the domain engine.
        EncryptionAtRestOptions:
          allOf:
          - $ref: '#/components/schemas/AwsOpenSearchServiceDomainEncryptionAtRestOptionsDetails'
          description: Details about the configuration for encryption at rest.
        NodeToNodeEncryptionOptions:
          allOf:
          - $ref: '#/components/schemas/AwsOpenSearchServiceDomainNodeToNodeEncryptionOptionsDetails'
          description: Details about the configuration for node-to-node encryption.
        ServiceSoftwareOptions:
          allOf:
          - $ref: '#/components/schemas/AwsOpenSearchServiceDomainServiceSoftwareOptionsDetails'
          description: Information about the status of a domain relative to the latest
            service software.
        ClusterConfig:
          allOf:
          - $ref: '#/components/schemas/AwsOpenSearchServiceDomainClusterConfigDetails'
          description: Details about the configuration of an OpenSearch cluster.
        DomainEndpointOptions:
          allOf:
          - $ref: '#/components/schemas/AwsOpenSearchServiceDomainDomainEndpointOptionsDetails'
          description: Additional options for the domain endpoint.
        VpcOptions:
          allOf:
          - $ref: '#/components/schemas/AwsOpenSearchServiceDomainVpcOptionsDetails'
          description: Information that OpenSearch Service derives based on `VPCOptions`
            for the domain.
        LogPublishingOptions:
          allOf:
          - $ref: '#/components/schemas/AwsOpenSearchServiceDomainLogPublishingOptionsDetails'
          description: Configures the CloudWatch Logs to publish for the OpenSearch
            domain.
        DomainEndpoints:
          allOf:
          - $ref: '#/components/schemas/FieldMap'
          description: 'The domain endpoints. Used if the OpenSearch domain resides
            in a VPC.


            This is a map of key-value pairs. The key is always `vpc`. The value is
            the endpoint.'
        AdvancedSecurityOptions:
          allOf:
          - $ref: '#/components/schemas/AwsOpenSearchServiceDomainAdvancedSecurityOptionsDetails'
          description: Specifies options for fine-grained access control.
      description: Information about an Amazon OpenSearch Service domain.
    AwsOpenSearchServiceDomainDomainEndpointOptionsDetails:
      type: object
      properties:
        CustomEndpointCertificateArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN for the security certificate. The certificate is managed
            in ACM.
        CustomEndpointEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to enable a custom endpoint for the domain.
        EnforceHTTPS:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to require that all traffic to the domain arrive over
            HTTPS.
        CustomEndpoint:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The fully qualified URL for the custom endpoint.
        TLSSecurityPolicy:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The TLS security policy to apply to the HTTPS endpoint of the
            OpenSearch domain.
      description: Information about additional options for the domain endpoint.
    AwsOpenSearchServiceDomainEncryptionAtRestOptionsDetails:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether encryption at rest is enabled.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The KMS key ID.
      description: Details about the configuration for encryption at rest for the
        OpenSearch domain.
    AwsOpenSearchServiceDomainLogPublishingOption:
      type: object
      properties:
        CloudWatchLogsLogGroupArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the CloudWatch Logs group to publish the logs to.
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the log publishing is enabled.
      description: Configuration details for a log publishing option.
    AwsOpenSearchServiceDomainLogPublishingOptionsDetails:
      type: object
      properties:
        IndexSlowLogs:
          allOf:
          - $ref: '#/components/schemas/AwsOpenSearchServiceDomainLogPublishingOption'
          description: Configures the OpenSearch index logs publishing.
        SearchSlowLogs:
          allOf:
          - $ref: '#/components/schemas/AwsOpenSearchServiceDomainLogPublishingOption'
          description: Configures the OpenSearch search slow log publishing.
        AuditLogs:
          allOf:
          - $ref: '#/components/schemas/AwsOpenSearchServiceDomainLogPublishingOption'
          description: Configures the OpenSearch audit logs publishing.
      description: Configures the CloudWatch Logs to publish for the OpenSearch domain.
    AwsOpenSearchServiceDomainMasterUserOptionsDetails:
      type: object
      properties:
        MasterUserArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) for the master user.
        MasterUserName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The username for the master user.
        MasterUserPassword:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The password for the master user.
      description: Specifies information about the master user of the domain.
    AwsOpenSearchServiceDomainNodeToNodeEncryptionOptionsDetails:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether node-to-node encryption is enabled.
      description: Provides details about the configuration for node-to-node encryption.
    AwsOpenSearchServiceDomainServiceSoftwareOptionsDetails:
      type: object
      properties:
        AutomatedUpdateDate:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The epoch time when the deployment window closes for required
            updates. After this time, OpenSearch Service schedules the software upgrade
            automatically.
        Cancellable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether a request to update the domain can be canceled.
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The version of the service software that is currently installed
            on the domain.
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A more detailed description of the service software status.
        NewVersion:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The most recent version of the service software.
        UpdateAvailable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether a service software update is available for the domain.
        UpdateStatus:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "The status of the service software update. Valid values are\
            \ as follows:\n\n  * `COMPLETED`\n\n  * `ELIGIBLE`\n\n  * `IN_PROGRESS`\n\
            \n  * `NOT_ELIGIBLE`\n\n  * `PENDING_UPDATE`"
        OptionalDeployment:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the service software update is optional.
      description: Provides information about the state of the domain relative to
        the latest service software.
    AwsOpenSearchServiceDomainVpcOptionsDetails:
      type: object
      properties:
        SecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The list of security group IDs that are associated with the
            VPC endpoints for the domain.
        SubnetIds:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: A list of subnet IDs that are associated with the VPC endpoints
            for the domain.
      description: Contains information that OpenSearch Service derives based on the
        `VPCOptions` for the domain.
    AwsRdsDbClusterAssociatedRole:
      type: object
      properties:
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the IAM role.
        Status:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "The status of the association between the IAM role and the\
            \ DB cluster. Valid values are as follows:\n\n  * `ACTIVE`\n\n  * `INVALID`\n\
            \n  * `PENDING`"
      description: An IAM role that is associated with the Amazon RDS DB cluster.
    AwsRdsDbClusterAssociatedRoles:
      type: array
      items:
        $ref: '#/components/schemas/AwsRdsDbClusterAssociatedRole'
    AwsRdsDbClusterDetails:
      type: object
      properties:
        AllocatedStorage:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: For all database engines except Aurora, specifies the allocated
            storage size in gibibytes (GiB).
        AvailabilityZones:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: A list of Availability Zones (AZs) where instances in the DB
            cluster can be created.
        BackupRetentionPeriod:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of days for which automated backups are retained.
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the database.
        Status:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The current status of this DB cluster.
        Endpoint:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The connection endpoint for the primary instance of the DB
            cluster.
        ReaderEndpoint:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The reader endpoint for the DB cluster.
        CustomEndpoints:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: A list of custom endpoints for the DB cluster.
        MultiAz:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the DB cluster has instances in multiple Availability
            Zones.
        Engine:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "The name of the database engine to use for this DB cluster.\
            \ Valid values are as follows:\n\n  * `aurora`\n\n  * `aurora-mysql`\n\
            \n  * `aurora-postgresql`"
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The version number of the database engine to use.
        Port:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The port number on which the DB instances in the DB cluster
            accept connections.
        MasterUsername:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the master user for the DB cluster.
        PreferredBackupWindow:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The range of time each day when automated backups are created,
            if automated backups are enabled.


            Uses the format `HH:MM-HH:MM`. For example, `04:52-05:22`.'
        PreferredMaintenanceWindow:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The weekly time range during which system maintenance can
            occur, in Universal Coordinated Time (UTC).


            Uses the format `:HH:MM-:HH:MM`.


            For the day values, use `mon`|`tue`|`wed`|`thu`|`fri`|`sat`|`sun`.


            For example, `sun:09:32-sun:10:02`.'
        ReadReplicaIdentifiers:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The identifiers of the read replicas that are associated with
            this DB cluster.
        VpcSecurityGroups:
          allOf:
          - $ref: '#/components/schemas/AwsRdsDbInstanceVpcSecurityGroups'
          description: A list of VPC security groups that the DB cluster belongs to.
        HostedZoneId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Specifies the identifier that Amazon Route 53 assigns when
            you create a hosted zone.
        StorageEncrypted:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the DB cluster is encrypted.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the KMS master key that is used to encrypt the database
            instances in the DB cluster.
        DbClusterResourceId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the DB cluster. The identifier must be unique
            within each Amazon Web Services Region and is immutable.
        AssociatedRoles:
          allOf:
          - $ref: '#/components/schemas/AwsRdsDbClusterAssociatedRoles'
          description: A list of the IAM roles that are associated with the DB cluster.
        ClusterCreateTime:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the DB cluster was created, in Universal Coordinated
            Time (UTC).


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        EnabledCloudWatchLogsExports:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: A list of log types that this DB cluster is configured to export
            to CloudWatch Logs.
        EngineMode:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "The database engine mode of the DB cluster.Valid values are\
            \ as follows:\n\n  * `global`\n\n  * `multimaster`\n\n  * `parallelquery`\n\
            \n  * `provisioned`\n\n  * `serverless`"
        DeletionProtection:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the DB cluster has deletion protection enabled.
        HttpEndpointEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the HTTP endpoint for an Aurora Serverless DB cluster
            is enabled.
        ActivityStreamStatus:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "The status of the database activity stream. Valid values are\
            \ as follows:\n\n  * `started`\n\n  * `starting`\n\n  * `stopped`\n\n\
            \  * `stopping`"
        CopyTagsToSnapshot:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether tags are copied from the DB cluster to snapshots of
            the DB cluster.
        CrossAccountClone:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the DB cluster is a clone of a DB cluster owned by
            a different Amazon Web Services account.
        DomainMemberships:
          allOf:
          - $ref: '#/components/schemas/AwsRdsDbDomainMemberships'
          description: The Active Directory domain membership records that are associated
            with the DB cluster.
        DbClusterParameterGroup:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the DB cluster parameter group for the DB cluster.
        DbSubnetGroup:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The subnet group that is associated with the DB cluster, including
            the name, description, and subnets in the subnet group.
        DbClusterOptionGroupMemberships:
          allOf:
          - $ref: '#/components/schemas/AwsRdsDbClusterOptionGroupMemberships'
          description: The list of option group memberships for this DB cluster.
        DbClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The DB cluster identifier that the user assigned to the cluster.
            This identifier is the unique key that identifies a DB cluster.
        DbClusterMembers:
          allOf:
          - $ref: '#/components/schemas/AwsRdsDbClusterMembers'
          description: The list of instances that make up the DB cluster.
        IamDatabaseAuthenticationEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the mapping of IAM accounts to database accounts is
            enabled.
        AutoMinorVersionUpgrade:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates if minor version upgrades are automatically applied
            to the cluster.
      description: Information about an Amazon RDS DB cluster.
    AwsRdsDbClusterMember:
      type: object
      properties:
        IsClusterWriter:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the cluster member is the primary instance for the
            DB cluster.
        PromotionTier:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Specifies the order in which an Aurora replica is promoted
            to the primary instance when the existing primary instance fails.
        DbInstanceIdentifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The instance identifier for this member of the DB cluster.
        DbClusterParameterGroupStatus:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The status of the DB cluster parameter group for this member
            of the DB cluster.
      description: Information about an instance in the DB cluster.
    AwsRdsDbClusterMembers:
      type: array
      items:
        $ref: '#/components/schemas/AwsRdsDbClusterMember'
    AwsRdsDbClusterOptionGroupMembership:
      type: object
      properties:
        DbClusterOptionGroupName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the DB cluster option group.
        Status:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The status of the DB cluster option group.
      description: Information about an option group membership for a DB cluster.
    AwsRdsDbClusterOptionGroupMemberships:
      type: array
      items:
        $ref: '#/components/schemas/AwsRdsDbClusterOptionGroupMembership'
    AwsRdsDbClusterSnapshotDbClusterSnapshotAttribute:
      type: object
      properties:
        AttributeName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the manual DB cluster snapshot attribute. The attribute
            named `restore` refers to the list of Amazon Web Services accounts that
            have permission to copy or restore the manual DB cluster snapshot.
        AttributeValues:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The value(s) for the manual DB cluster snapshot attribute.
            If the `AttributeName` field is set to `restore`, then this element returns
            a list of IDs of the Amazon Web Services accounts that are authorized
            to copy or restore the manual DB cluster snapshot. If a value of `all`
            is in the list, then the manual DB cluster snapshot is public and available
            for any Amazon Web Services account to copy or restore.
      description: Contains the name and values of a manual Amazon Relational Database
        Service (RDS) DB cluster snapshot attribute.
    AwsRdsDbClusterSnapshotDbClusterSnapshotAttributes:
      type: array
      items:
        $ref: '#/components/schemas/AwsRdsDbClusterSnapshotDbClusterSnapshotAttribute'
    AwsRdsDbClusterSnapshotDetails:
      type: object
      properties:
        AvailabilityZones:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: A list of Availability Zones where instances in the DB cluster
            can be created.
        SnapshotCreateTime:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the snapshot was taken.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        Engine:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the database engine that you want to use for this
            DB instance.
        AllocatedStorage:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Specifies the allocated storage size in gibibytes (GiB).
        Status:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The status of this DB cluster snapshot.
        Port:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The port number on which the DB instances in the DB cluster
            accept connections.
        VpcId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The VPC ID that is associated with the DB cluster snapshot.
        ClusterCreateTime:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the DB cluster was created, in Universal Coordinated
            Time (UTC).


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        MasterUsername:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the master user for the DB cluster.
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The version of the database engine to use.
        LicenseModel:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The license model information for this DB cluster snapshot.
        SnapshotType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of DB cluster snapshot.
        PercentProgress:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Specifies the percentage of the estimated data that has been
            transferred.
        StorageEncrypted:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the DB cluster is encrypted.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the KMS master key that is used to encrypt the database
            instances in the DB cluster.
        DbClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The DB cluster identifier.
        DbClusterSnapshotIdentifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the DB cluster snapshot.
        IamDatabaseAuthenticationEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether mapping of IAM accounts to database accounts is enabled.
        DbClusterSnapshotAttributes:
          allOf:
          - $ref: '#/components/schemas/AwsRdsDbClusterSnapshotDbClusterSnapshotAttributes'
          description: Contains the name and values of a manual DB cluster snapshot
            attribute.
      description: Information about an Amazon RDS DB cluster snapshot.
    AwsRdsDbDomainMembership:
      type: object
      properties:
        Domain:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the Active Directory domain.
        Status:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The status of the Active Directory Domain membership for the
            DB instance.
        Fqdn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The fully qualified domain name of the Active Directory domain.
        IamRoleName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the IAM role to use when making API calls to the
            Directory Service.
      description: Information about an Active Directory domain membership record
        associated with the DB instance.
    AwsRdsDbDomainMemberships:
      type: array
      items:
        $ref: '#/components/schemas/AwsRdsDbDomainMembership'
    AwsRdsDbInstanceAssociatedRole:
      type: object
      properties:
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the IAM role that is associated with the DB instance.
        FeatureName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the feature associated with the IAM role.
        Status:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "Describes the state of the association between the IAM role\
            \ and the DB instance. The `Status` property returns one of the following\
            \ values:\n\n  * `ACTIVE` \\- The IAM role ARN is associated with the\
            \ DB instance and can be used to access other Amazon Web Services services\
            \ on your behalf.\n\n  * `PENDING` \\- The IAM role ARN is being associated\
            \ with the DB instance.\n\n  * `INVALID` \\- The IAM role ARN is associated\
            \ with the DB instance. But the DB instance is unable to assume the IAM\
            \ role in order to access other Amazon Web Services services on your behalf."
      description: An IAM role associated with the DB instance.
    AwsRdsDbInstanceAssociatedRoles:
      type: array
      items:
        $ref: '#/components/schemas/AwsRdsDbInstanceAssociatedRole'
    AwsRdsDbInstanceDetails:
      type: object
      properties:
        AssociatedRoles:
          allOf:
          - $ref: '#/components/schemas/AwsRdsDbInstanceAssociatedRoles'
          description: The IAM roles associated with the DB instance.
        CACertificateIdentifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the CA certificate for this DB instance.
        DBClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: If the DB instance is a member of a DB cluster, contains the
            name of the DB cluster that the DB instance is a member of.
        DBInstanceIdentifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Contains a user-supplied database identifier. This identifier
            is the unique key that identifies a DB instance.
        DBInstanceClass:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Contains the name of the compute and memory capacity class
            of the DB instance.
        DbInstancePort:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Specifies the port that the DB instance listens on. If the
            DB instance is part of a DB cluster, this can be a different port than
            the DB cluster port.
        DbiResourceId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Web Services Region-unique, immutable identifier
            for the DB instance. This identifier is found in CloudTrail log entries
            whenever the KMS key for the DB instance is accessed.
        DBName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The meaning of this parameter differs according to the database
            engine you use.


            **MySQL, MariaDB, SQL Server, PostgreSQL**


            Contains the name of the initial database of this instance that was provided
            at create time, if one was specified when the DB instance was created.
            This same name is returned for the life of the DB instance.


            **Oracle**


            Contains the Oracle System ID (SID) of the created DB instance. Not shown
            when the returned parameters don''t apply to an Oracle DB instance.'
        DeletionProtection:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'Indicates whether the DB instance has deletion protection
            enabled.


            When deletion protection is enabled, the database cannot be deleted.'
        Endpoint:
          allOf:
          - $ref: '#/components/schemas/AwsRdsDbInstanceEndpoint'
          description: Specifies the connection endpoint.
        Engine:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Provides the name of the database engine to use for this DB
            instance.
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Indicates the database engine version.
        IAMDatabaseAuthenticationEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: "True if mapping of IAM accounts to database accounts is enabled,\
            \ and otherwise false.\n\nIAM database authentication can be enabled for\
            \ the following database engines.\n\n  * For MySQL 5.6, minor version\
            \ 5.6.34 or higher\n\n  * For MySQL 5.7, minor version 5.7.16 or higher\n\
            \n  * Aurora 5.6 or higher"
        InstanceCreateTime:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the DB instance was created.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: If `StorageEncrypted` is true, the KMS key identifier for the
            encrypted DB instance.
        PubliclyAccessible:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'Specifies the accessibility options for the DB instance.


            A value of true specifies an Internet-facing instance with a publicly
            resolvable DNS name, which resolves to a public IP address.


            A value of false specifies an internal instance with a DNS name that resolves
            to a private IP address.'
        StorageEncrypted:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether the DB instance is encrypted.
        TdeCredentialArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN from the key store with which the instance is associated
            for TDE encryption.
        VpcSecurityGroups:
          allOf:
          - $ref: '#/components/schemas/AwsRdsDbInstanceVpcSecurityGroups'
          description: A list of VPC security groups that the DB instance belongs
            to.
        MultiAz:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the DB instance is a multiple Availability Zone deployment.
        EnhancedMonitoringResourceArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the CloudWatch Logs log stream that receives the
            enhanced monitoring metrics data for the DB instance.
        DbInstanceStatus:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The current status of the DB instance.
        MasterUsername:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The master user name of the DB instance.
        AllocatedStorage:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The amount of storage (in gigabytes) to initially allocate
            for the DB instance.
        PreferredBackupWindow:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The range of time each day when automated backups are created,
            if automated backups are enabled.


            Uses the format `HH:MM-HH:MM`. For example, `04:52-05:22`.'
        BackupRetentionPeriod:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of days for which to retain automated backups.
        DbSecurityGroups:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: A list of the DB security groups to assign to the DB instance.
        DbParameterGroups:
          allOf:
          - $ref: '#/components/schemas/AwsRdsDbParameterGroups'
          description: A list of the DB parameter groups to assign to the DB instance.
        AvailabilityZone:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Availability Zone where the DB instance will be created.
        DbSubnetGroup:
          allOf:
          - $ref: '#/components/schemas/AwsRdsDbSubnetGroup'
          description: Information about the subnet group that is associated with
            the DB instance.
        PreferredMaintenanceWindow:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The weekly time range during which system maintenance can
            occur, in Universal Coordinated Time (UTC).


            Uses the format `:HH:MM-:HH:MM`.


            For the day values, use `mon`|`tue`|`wed`|`thu`|`fri`|`sat`|`sun`.


            For example, `sun:09:32-sun:10:02`.'
        PendingModifiedValues:
          allOf:
          - $ref: '#/components/schemas/AwsRdsDbPendingModifiedValues'
          description: Changes to the DB instance that are currently pending.
        LatestRestorableTime:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Specifies the latest time to which a database can be restored
            with point-in-time restore.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        AutoMinorVersionUpgrade:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether minor version patches are applied automatically.
        ReadReplicaSourceDBInstanceIdentifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: If this DB instance is a read replica, contains the identifier
            of the source DB instance.
        ReadReplicaDBInstanceIdentifiers:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: List of identifiers of the read replicas associated with this
            DB instance.
        ReadReplicaDBClusterIdentifiers:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: List of identifiers of Aurora DB clusters to which the RDS
            DB instance is replicated as a read replica.
        LicenseModel:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: License model information for this DB instance.
        Iops:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Specifies the provisioned IOPS (I/O operations per second)
            for this DB instance.
        OptionGroupMemberships:
          allOf:
          - $ref: '#/components/schemas/AwsRdsDbOptionGroupMemberships'
          description: The list of option group memberships for this DB instance.
        CharacterSetName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the character set that this DB instance is associated
            with.
        SecondaryAvailabilityZone:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: For a DB instance with multi-Availability Zone support, the
            name of the secondary Availability Zone.
        StatusInfos:
          allOf:
          - $ref: '#/components/schemas/AwsRdsDbStatusInfos'
          description: The status of a read replica. If the instance isn't a read
            replica, this is empty.
        StorageType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The storage type for the DB instance.
        DomainMemberships:
          allOf:
          - $ref: '#/components/schemas/AwsRdsDbDomainMemberships'
          description: The Active Directory domain membership records associated with
            the DB instance.
        CopyTagsToSnapshot:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to copy resource tags to snapshots of the DB instance.
        MonitoringInterval:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The interval, in seconds, between points when enhanced monitoring
            metrics are collected for the DB instance.
        MonitoringRoleArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN for the IAM role that permits Amazon RDS to send enhanced
            monitoring metrics to CloudWatch Logs.
        PromotionTier:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The order in which to promote an Aurora replica to the primary
            instance after a failure of the existing primary instance.
        Timezone:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The time zone of the DB instance.
        PerformanceInsightsEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether Performance Insights is enabled for the DB
            instance.
        PerformanceInsightsKmsKeyId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the KMS key used to encrypt the Performance
            Insights data.
        PerformanceInsightsRetentionPeriod:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of days to retain Performance Insights data.
        EnabledCloudWatchLogsExports:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: A list of log types that this DB instance is configured to
            export to CloudWatch Logs.
        ProcessorFeatures:
          allOf:
          - $ref: '#/components/schemas/AwsRdsDbProcessorFeatures'
          description: The number of CPU cores and the number of threads per core
            for the DB instance class of the DB instance.
        ListenerEndpoint:
          $ref: '#/components/schemas/AwsRdsDbInstanceEndpoint'
        MaxAllocatedStorage:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The upper limit to which Amazon RDS can automatically scale
            the storage of the DB instance.
      description: Contains the details of an Amazon RDS DB instance.
    AwsRdsDbInstanceEndpoint:
      type: object
      properties:
        Address:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Specifies the DNS address of the DB instance.
        Port:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Specifies the port that the database engine is listening on.
        HostedZoneId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Specifies the ID that Amazon Route 53 assigns when you create
            a hosted zone.
      description: Specifies the connection endpoint.
    AwsRdsDbInstanceVpcSecurityGroup:
      type: object
      properties:
        VpcSecurityGroupId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the VPC security group.
        Status:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The status of the VPC security group.
      description: A VPC security groups that the DB instance belongs to.
    AwsRdsDbInstanceVpcSecurityGroups:
      type: array
      items:
        $ref: '#/components/schemas/AwsRdsDbInstanceVpcSecurityGroup'
    AwsRdsDbOptionGroupMembership:
      type: object
      properties:
        OptionGroupName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the option group.
        Status:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The status of the option group membership.
      description: An option group membership.
    AwsRdsDbOptionGroupMemberships:
      type: array
      items:
        $ref: '#/components/schemas/AwsRdsDbOptionGroupMembership'
    AwsRdsDbParameterGroup:
      type: object
      properties:
        DbParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the parameter group.
        ParameterApplyStatus:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The status of parameter updates.
      description: Provides information about a parameter group for a DB instance.
    AwsRdsDbParameterGroups:
      type: array
      items:
        $ref: '#/components/schemas/AwsRdsDbParameterGroup'
    AwsRdsDbPendingModifiedValues:
      type: object
      properties:
        DbInstanceClass:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The new DB instance class for the DB instance.
        AllocatedStorage:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The new value of the allocated storage for the DB instance.
        MasterUserPassword:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The new master user password for the DB instance.
        Port:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The new port for the DB instance.
        BackupRetentionPeriod:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The new backup retention period for the DB instance.
        MultiAZ:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates that a single Availability Zone DB instance is changing
            to a multiple Availability Zone deployment.
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The new engine version for the DB instance.
        LicenseModel:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The new license model value for the DB instance.
        Iops:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The new provisioned IOPS value for the DB instance.
        DbInstanceIdentifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The new DB instance identifier for the DB instance.
        StorageType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The new storage type for the DB instance.
        CaCertificateIdentifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The new CA certificate identifier for the DB instance.
        DbSubnetGroupName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the new subnet group for the DB instance.
        PendingCloudWatchLogsExports:
          allOf:
          - $ref: '#/components/schemas/AwsRdsPendingCloudWatchLogsExports'
          description: A list of log types that are being enabled or disabled.
        ProcessorFeatures:
          allOf:
          - $ref: '#/components/schemas/AwsRdsDbProcessorFeatures'
          description: Processor features that are being updated.
      description: Changes to a DB instance that are currently pending.
    AwsRdsDbProcessorFeature:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the processor feature. Valid values are `coreCount`
            or `threadsPerCore`.
        Value:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The value of the processor feature.
      description: A processor feature.
    AwsRdsDbProcessorFeatures:
      type: array
      items:
        $ref: '#/components/schemas/AwsRdsDbProcessorFeature'
    AwsRdsDbSecurityGroupDetails:
      type: object
      properties:
        DbSecurityGroupArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN for the DB security group.
        DbSecurityGroupDescription:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Provides the description of the DB security group.
        DbSecurityGroupName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Specifies the name of the DB security group.
        Ec2SecurityGroups:
          allOf:
          - $ref: '#/components/schemas/AwsRdsDbSecurityGroupEc2SecurityGroups'
          description: Contains a list of EC2 security groups.
        IpRanges:
          allOf:
          - $ref: '#/components/schemas/AwsRdsDbSecurityGroupIpRanges'
          description: Contains a list of IP ranges.
        OwnerId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Provides the Amazon Web Services ID of the owner of a specific
            DB security group.
        VpcId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Provides VPC ID associated with the DB security group.
      description: Provides information about an Amazon RDS DB security group.
    AwsRdsDbSecurityGroupEc2SecurityGroup:
      type: object
      properties:
        Ec2SecurityGroupId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Specifies the ID for the EC2 security group.
        Ec2SecurityGroupName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Specifies the name of the EC2 security group.
        Ec2SecurityGroupOwnerId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Provides the Amazon Web Services ID of the owner of the EC2
            security group.
        Status:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Provides the status of the EC2 security group.
      description: EC2 security group information for an RDS DB security group.
    AwsRdsDbSecurityGroupEc2SecurityGroups:
      type: array
      items:
        $ref: '#/components/schemas/AwsRdsDbSecurityGroupEc2SecurityGroup'
    AwsRdsDbSecurityGroupIpRange:
      type: object
      properties:
        CidrIp:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Specifies the IP range.
        Status:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Specifies the status of the IP range.
      description: IP range information for an RDS DB security group.
    AwsRdsDbSecurityGroupIpRanges:
      type: array
      items:
        $ref: '#/components/schemas/AwsRdsDbSecurityGroupIpRange'
    AwsRdsDbSnapshotDetails:
      type: object
      properties:
        DbSnapshotIdentifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name or ARN of the DB snapshot that is used to restore
            the DB instance.
        DbInstanceIdentifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A name for the DB instance.
        SnapshotCreateTime:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: When the snapshot was taken in Coordinated Universal Time (UTC).
        Engine:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "The name of the database engine to use for this DB instance.\
            \ Valid values are as follows:\n\n  * `aurora`\n\n  * `aurora-mysql`\n\
            \n  * `aurora-postgresql`\n\n  * `c`\n\n  * `mariadb`\n\n  * `mysql`\n\
            \n  * `oracle-ee`\n\n  * `oracle-se`\n\n  * `oracle-se1`\n\n  * `oracle-se2`\n\
            \n  * `sqlserver-ee`\n\n  * `sqlserver-ex`\n\n  * `sqlserver-se`\n\n \
            \ * `sqlserver-web`"
        AllocatedStorage:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The amount of storage (in gigabytes) to be initially allocated
            for the database instance.
        Status:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The status of this DB snapshot.
        Port:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The port that the database engine was listening on at the time
            of the snapshot.
        AvailabilityZone:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Specifies the name of the Availability Zone in which the DB
            instance was located at the time of the DB snapshot.
        VpcId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The VPC ID associated with the DB snapshot.
        InstanceCreateTime:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Specifies the time in Coordinated Universal Time (UTC) when
            the DB instance, from which the snapshot was taken, was created.
        MasterUsername:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The master user name for the DB snapshot.
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The version of the database engine.
        LicenseModel:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: License model information for the restored DB instance.
        SnapshotType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of the DB snapshot.
        Iops:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The provisioned IOPS (I/O operations per second) value of the
            DB instance at the time of the snapshot.
        OptionGroupName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The option group name for the DB snapshot.
        PercentProgress:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The percentage of the estimated data that has been transferred.
        SourceRegion:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Web Services Region that the DB snapshot was created
            in or copied from.
        SourceDbSnapshotIdentifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The DB snapshot ARN that the DB snapshot was copied from.
        StorageType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "The storage type associated with the DB snapshot. Valid values\
            \ are as follows:\n\n  * `gp2`\n\n  * `io1`\n\n  * `standard`"
        TdeCredentialArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN from the key store with which to associate the instance
            for TDE encryption.
        Encrypted:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the DB snapshot is encrypted.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: If `Encrypted` is `true`, the KMS key identifier for the encrypted
            DB snapshot.
        Timezone:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The time zone of the DB snapshot.
        IamDatabaseAuthenticationEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether mapping of IAM accounts to database accounts is enabled.
        ProcessorFeatures:
          allOf:
          - $ref: '#/components/schemas/AwsRdsDbProcessorFeatures'
          description: The number of CPU cores and the number of threads per core
            for the DB instance class of the DB instance.
        DbiResourceId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier for the source DB instance.
      description: Provides details about an Amazon RDS DB cluster snapshot.
    AwsRdsDbStatusInfo:
      type: object
      properties:
        StatusType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of status. For a read replica, the status type is
            read replication.
        Normal:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the read replica instance is operating normally.
        Status:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The status of the read replica instance.
        Message:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: If the read replica is currently in an error state, provides
            the error details.
      description: Information about the status of a read replica.
    AwsRdsDbStatusInfos:
      type: array
      items:
        $ref: '#/components/schemas/AwsRdsDbStatusInfo'
    AwsRdsDbSubnetGroup:
      type: object
      properties:
        DbSubnetGroupName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the subnet group.
        DbSubnetGroupDescription:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The description of the subnet group.
        VpcId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The VPC ID of the subnet group.
        SubnetGroupStatus:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The status of the subnet group.
        Subnets:
          allOf:
          - $ref: '#/components/schemas/AwsRdsDbSubnetGroupSubnets'
          description: A list of subnets in the subnet group.
        DbSubnetGroupArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the subnet group.
      description: Information about the subnet group for the database instance.
    AwsRdsDbSubnetGroupSubnet:
      type: object
      properties:
        SubnetIdentifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of a subnet in the subnet group.
        SubnetAvailabilityZone:
          allOf:
          - $ref: '#/components/schemas/AwsRdsDbSubnetGroupSubnetAvailabilityZone'
          description: Information about the Availability Zone for a subnet in the
            subnet group.
        SubnetStatus:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The status of a subnet in the subnet group.
      description: Information about a subnet in a subnet group.
    AwsRdsDbSubnetGroupSubnetAvailabilityZone:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the Availability Zone for a subnet in the subnet
            group.
      description: An Availability Zone for a subnet in a subnet group.
    AwsRdsDbSubnetGroupSubnets:
      type: array
      items:
        $ref: '#/components/schemas/AwsRdsDbSubnetGroupSubnet'
    AwsRdsEventSubscriptionDetails:
      type: object
      properties:
        CustSubscriptionId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the account that is associated with the event
            notification subscription.
        CustomerAwsId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the event notification subscription.
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the event notification subscription is enabled.
        EventCategoriesList:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The list of event categories for the event notification subscription.
        EventSubscriptionArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the event notification subscription.
        SnsTopicArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the SNS topic to post the event notifications to.
        SourceIdsList:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: A list of source identifiers for the event notification subscription.
        SourceType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The source type for the event notification subscription.
        Status:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The status of the event notification subscription.


            Valid values: `creating` | `modifying` | `deleting` | `active` | `no-permission`
            | `topic-not-exist`'
        SubscriptionCreationTime:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The datetime when the event notification subscription was
            created.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
      description: Details about an Amazon RDS event notification subscription. The
        subscription allows Amazon RDS to post events to an SNS topic.
    AwsRdsPendingCloudWatchLogsExports:
      type: object
      properties:
        LogTypesToEnable:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: A list of log types that are being enabled.
        LogTypesToDisable:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: A list of log types that are being disabled.
      description: Identifies the log types to enable and disable.
    AwsRedshiftClusterClusterNode:
      type: object
      properties:
        NodeRole:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The role of the node. A node might be a leader node or a compute
            node.
        PrivateIpAddress:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The private IP address of the node.
        PublicIpAddress:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The public IP address of the node.
      description: A node in an Amazon Redshift cluster.
    AwsRedshiftClusterClusterNodes:
      type: array
      items:
        $ref: '#/components/schemas/AwsRedshiftClusterClusterNode'
    AwsRedshiftClusterClusterParameterGroup:
      type: object
      properties:
        ClusterParameterStatusList:
          allOf:
          - $ref: '#/components/schemas/AwsRedshiftClusterClusterParameterStatusList'
          description: The list of parameter statuses.
        ParameterApplyStatus:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The status of updates to the parameters.
        ParameterGroupName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the parameter group.
      description: A cluster parameter group that is associated with an Amazon Redshift
        cluster.
    AwsRedshiftClusterClusterParameterGroups:
      type: array
      items:
        $ref: '#/components/schemas/AwsRedshiftClusterClusterParameterGroup'
    AwsRedshiftClusterClusterParameterStatus:
      type: object
      properties:
        ParameterName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the parameter.
        ParameterApplyStatus:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The status of the parameter. Indicates whether the parameter
            is in sync with the database, waiting for a cluster reboot, or encountered
            an error when it was applied.


            Valid values: `in-sync` | `pending-reboot` | `applying` | `invalid-parameter`
            | `apply-deferred` | `apply-error` | `unknown-error`'
        ParameterApplyErrorDescription:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The error that prevented the parameter from being applied to
            the database.
      description: The status of a parameter in a cluster parameter group for an Amazon
        Redshift cluster.
    AwsRedshiftClusterClusterParameterStatusList:
      type: array
      items:
        $ref: '#/components/schemas/AwsRedshiftClusterClusterParameterStatus'
    AwsRedshiftClusterClusterSecurityGroup:
      type: object
      properties:
        ClusterSecurityGroupName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the cluster security group.
        Status:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The status of the cluster security group.
      description: A security group that is associated with the cluster.
    AwsRedshiftClusterClusterSecurityGroups:
      type: array
      items:
        $ref: '#/components/schemas/AwsRedshiftClusterClusterSecurityGroup'
    AwsRedshiftClusterClusterSnapshotCopyStatus:
      type: object
      properties:
        DestinationRegion:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The destination Region that snapshots are automatically copied
            to when cross-Region snapshot copy is enabled.
        ManualSnapshotRetentionPeriod:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'The number of days that manual snapshots are retained in the
            destination Region after they are copied from a source Region.


            If the value is `-1`, then the manual snapshot is retained indefinitely.


            Valid values: Either `-1` or an integer between 1 and 3,653'
        RetentionPeriod:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of days to retain automated snapshots in the destination
            Region after they are copied from a source Region.
        SnapshotCopyGrantName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the snapshot copy grant.
      description: You can configure Amazon Redshift to copy snapshots for a cluster
        to another Amazon Web Services Region. This parameter provides information
        about a cross-Region snapshot copy.
    AwsRedshiftClusterDeferredMaintenanceWindow:
      type: object
      properties:
        DeferMaintenanceEndTime:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The end of the time window for which maintenance was deferred.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        DeferMaintenanceIdentifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the maintenance window.
        DeferMaintenanceStartTime:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The start of the time window for which maintenance was deferred.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
      description: A time windows during which maintenance was deferred for an Amazon
        Redshift cluster.
    AwsRedshiftClusterDeferredMaintenanceWindows:
      type: array
      items:
        $ref: '#/components/schemas/AwsRedshiftClusterDeferredMaintenanceWindow'
    AwsRedshiftClusterDetails:
      type: object
      properties:
        AllowVersionUpgrade:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether major version upgrades are applied automatically
            to the cluster during the maintenance window.
        AutomatedSnapshotRetentionPeriod:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of days that automatic cluster snapshots are retained.
        AvailabilityZone:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the Availability Zone in which the cluster is located.
        ClusterAvailabilityStatus:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "The availability status of the cluster for queries. Possible\
            \ values are the following:\n\n  * `Available` \\- The cluster is available\
            \ for queries.\n\n  * `Unavailable` \\- The cluster is not available for\
            \ queries.\n\n  * `Maintenance` \\- The cluster is intermittently available\
            \ for queries due to maintenance activities.\n\n  * `Modifying` -The cluster\
            \ is intermittently available for queries due to changes that modify the\
            \ cluster.\n\n  * `Failed` \\- The cluster failed and is not available\
            \ for queries."
        ClusterCreateTime:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the cluster was created.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        ClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The unique identifier of the cluster.
        ClusterNodes:
          allOf:
          - $ref: '#/components/schemas/AwsRedshiftClusterClusterNodes'
          description: The nodes in the cluster.
        ClusterParameterGroups:
          allOf:
          - $ref: '#/components/schemas/AwsRedshiftClusterClusterParameterGroups'
          description: The list of cluster parameter groups that are associated with
            this cluster.
        ClusterPublicKey:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The public key for the cluster.
        ClusterRevisionNumber:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The specific revision number of the database in the cluster.
        ClusterSecurityGroups:
          allOf:
          - $ref: '#/components/schemas/AwsRedshiftClusterClusterSecurityGroups'
          description: A list of cluster security groups that are associated with
            the cluster.
        ClusterSnapshotCopyStatus:
          allOf:
          - $ref: '#/components/schemas/AwsRedshiftClusterClusterSnapshotCopyStatus'
          description: Information about the destination Region and retention period
            for the cross-Region snapshot copy.
        ClusterStatus:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The current status of the cluster.


            Valid values: `available` | `available, prep-for-resize` | `available,
            resize-cleanup` |` cancelling-resize` | `creating` | `deleting` | `final-snapshot`
            | `hardware-failure` | `incompatible-hsm` |` incompatible-network` | `incompatible-parameters`
            | `incompatible-restore` | `modifying` | `paused` | `rebooting` | `renaming`
            | `resizing` | `rotating-keys` | `storage-full` | `updating-hsm`'
        ClusterSubnetGroupName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the subnet group that is associated with the cluster.
            This parameter is valid only when the cluster is in a VPC.
        ClusterVersion:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The version ID of the Amazon Redshift engine that runs on the
            cluster.
        DBName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The name of the initial database that was created when the
            cluster was created.


            The same name is returned for the life of the cluster.


            If an initial database is not specified, a database named `devdev` is
            created by default.'
        DeferredMaintenanceWindows:
          allOf:
          - $ref: '#/components/schemas/AwsRedshiftClusterDeferredMaintenanceWindows'
          description: List of time windows during which maintenance was deferred.
        ElasticIpStatus:
          allOf:
          - $ref: '#/components/schemas/AwsRedshiftClusterElasticIpStatus'
          description: Information about the status of the Elastic IP (EIP) address.
        ElasticResizeNumberOfNodeOptions:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The number of nodes that you can use the elastic resize method
            to resize the cluster to.
        Encrypted:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether the data in the cluster is encrypted at rest.
        Endpoint:
          allOf:
          - $ref: '#/components/schemas/AwsRedshiftClusterEndpoint'
          description: The connection endpoint.
        EnhancedVpcRouting:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether to create the cluster with enhanced VPC routing
            enabled.
        ExpectedNextSnapshotScheduleTime:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the next snapshot is expected to be taken.
            The cluster must have a valid snapshot schedule and have backups enabled.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        ExpectedNextSnapshotScheduleTimeStatus:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The status of the next expected snapshot.


            Valid values: `OnTrack` | `Pending`'
        HsmStatus:
          allOf:
          - $ref: '#/components/schemas/AwsRedshiftClusterHsmStatus'
          description: Information about whether the Amazon Redshift cluster finished
            applying any changes to hardware security module (HSM) settings that were
            specified in a modify cluster command.
        IamRoles:
          allOf:
          - $ref: '#/components/schemas/AwsRedshiftClusterIamRoles'
          description: A list of IAM roles that the cluster can use to access other
            Amazon Web Services services.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the KMS encryption key that is used to encrypt
            data in the cluster.
        MaintenanceTrackName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the maintenance track for the cluster.
        ManualSnapshotRetentionPeriod:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'The default number of days to retain a manual snapshot.


            If the value is `-1`, the snapshot is retained indefinitely.


            This setting doesn''t change the retention period of existing snapshots.


            Valid values: Either `-1` or an integer between 1 and 3,653'
        MasterUsername:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The master user name for the cluster. This name is used to
            connect to the database that is specified in as the value of `DBName`.
        NextMaintenanceWindowStartTime:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates the start of the next maintenance window.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        NodeType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The node type for the nodes in the cluster.
        NumberOfNodes:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of compute nodes in the cluster.
        PendingActions:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: A list of cluster operations that are waiting to start.
        PendingModifiedValues:
          allOf:
          - $ref: '#/components/schemas/AwsRedshiftClusterPendingModifiedValues'
          description: A list of changes to the cluster that are currently pending.
        PreferredMaintenanceWindow:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The weekly time range, in Universal Coordinated Time (UTC),
            during which system maintenance can occur.


            Format: ` __:HH:MM-__:HH:MM`


            For the day values, use `mon` | `tue` | `wed` | `thu` | `fri` | `sat`
            | `sun`


            For example, `sun:09:32-sun:10:02`'
        PubliclyAccessible:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the cluster can be accessed from a public network.
        ResizeInfo:
          allOf:
          - $ref: '#/components/schemas/AwsRedshiftClusterResizeInfo'
          description: Information about the resize operation for the cluster.
        RestoreStatus:
          allOf:
          - $ref: '#/components/schemas/AwsRedshiftClusterRestoreStatus'
          description: Information about the status of a cluster restore action. Only
            applies to a cluster that was created by restoring a snapshot.
        SnapshotScheduleIdentifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A unique identifier for the cluster snapshot schedule.
        SnapshotScheduleState:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The current state of the cluster snapshot schedule.


            Valid values: `MODIFYING` | `ACTIVE` | `FAILED`'
        VpcId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the VPC that the cluster is in, if the cluster
            is in a VPC.
        VpcSecurityGroups:
          allOf:
          - $ref: '#/components/schemas/AwsRedshiftClusterVpcSecurityGroups'
          description: The list of VPC security groups that the cluster belongs to,
            if the cluster is in a VPC.
        LoggingStatus:
          allOf:
          - $ref: '#/components/schemas/AwsRedshiftClusterLoggingStatus'
          description: Information about the logging status of the cluster.
      description: Details about an Amazon Redshift cluster.
    AwsRedshiftClusterElasticIpStatus:
      type: object
      properties:
        ElasticIp:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The elastic IP address for the cluster.
        Status:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The status of the elastic IP address.
      description: The status of the elastic IP (EIP) address for an Amazon Redshift
        cluster.
    AwsRedshiftClusterEndpoint:
      type: object
      properties:
        Address:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The DNS address of the cluster.
        Port:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The port that the database engine listens on.
      description: The connection endpoint for an Amazon Redshift cluster.
    AwsRedshiftClusterHsmStatus:
      type: object
      properties:
        HsmClientCertificateIdentifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the HSM client certificate that the Amazon Redshift
            cluster uses to retrieve the data encryption keys that are stored in an
            HSM.
        HsmConfigurationIdentifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the HSM configuration that contains the information
            that the Amazon Redshift cluster can use to retrieve and store keys in
            an HSM.
        Status:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates whether the Amazon Redshift cluster has finished
            applying any HSM settings changes specified in a modify cluster command.


            Type: String


            Valid values: `active` | `applying`'
      description: Information about whether an Amazon Redshift cluster finished applying
        any hardware changes to security module (HSM) settings that were specified
        in a modify cluster command.
    AwsRedshiftClusterIamRole:
      type: object
      properties:
        ApplyStatus:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The status of the IAM role''s association with the cluster.


            Valid values: `in-sync` | `adding` | `removing`'
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the IAM role.
      description: An IAM role that the cluster can use to access other Amazon Web
        Services services.
    AwsRedshiftClusterIamRoles:
      type: array
      items:
        $ref: '#/components/schemas/AwsRedshiftClusterIamRole'
    AwsRedshiftClusterLoggingStatus:
      type: object
      properties:
        BucketName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the S3 bucket where the log files are stored.
        LastFailureMessage:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The message indicating that the logs failed to be delivered.
        LastFailureTime:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The last time when logs failed to be delivered.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        LastSuccessfulDeliveryTime:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The last time that logs were delivered successfully.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        LoggingEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether logging is enabled.
        S3KeyPrefix:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Provides the prefix applied to the log file names.
      description: Provides information about the logging status of the cluster.
    AwsRedshiftClusterPendingModifiedValues:
      type: object
      properties:
        AutomatedSnapshotRetentionPeriod:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The pending or in-progress change to the automated snapshot
            retention period.
        ClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The pending or in-progress change to the identifier for the
            cluster.
        ClusterType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The pending or in-progress change to the cluster type.
        ClusterVersion:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The pending or in-progress change to the service version.
        EncryptionType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The encryption type for a cluster.
        EnhancedVpcRouting:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether to create the cluster with enhanced VPC routing
            enabled.
        MaintenanceTrackName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the maintenance track that the cluster changes
            to during the next maintenance window.
        MasterUserPassword:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The pending or in-progress change to the master user password
            for the cluster.
        NodeType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The pending or in-progress change to the cluster's node type.
        NumberOfNodes:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The pending or in-progress change to the number of nodes in
            the cluster.
        PubliclyAccessible:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: The pending or in-progress change to whether the cluster can
            be connected to from the public network.
      description: Changes to the Amazon Redshift cluster that are currently pending.
    AwsRedshiftClusterResizeInfo:
      type: object
      properties:
        AllowCancelResize:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether the resize operation can be canceled.
        ResizeType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The type of resize operation.


            Valid values: `ClassicResize`'
      description: Information about the resize operation for the cluster.
    AwsRedshiftClusterRestoreStatus:
      type: object
      properties:
        CurrentRestoreRateInMegaBytesPerSecond:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: 'The number of megabytes per second being transferred from
            the backup storage. Returns the average rate for a completed backup.


            This field is only updated when you restore to DC2 and DS2 node types.'
        ElapsedTimeInSeconds:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: 'The amount of time an in-progress restore has been running,
            or the amount of time it took a completed restore to finish.


            This field is only updated when you restore to DC2 and DS2 node types.'
        EstimatedTimeToCompletionInSeconds:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: 'The estimate of the time remaining before the restore is complete.
            Returns 0 for a completed restore.


            This field is only updated when you restore to DC2 and DS2 node types.'
        ProgressInMegaBytes:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: 'The number of megabytes that were transferred from snapshot
            storage.


            This field is only updated when you restore to DC2 and DS2 node types.'
        SnapshotSizeInMegaBytes:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: 'The size of the set of snapshot data that was used to restore
            the cluster.


            This field is only updated when you restore to DC2 and DS2 node types.'
        Status:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The status of the restore action.


            Valid values: `starting` | `restoring` | `completed` | `failed`'
      description: Information about the status of a cluster restore action. It only
        applies if the cluster was created by restoring a snapshot.
    AwsRedshiftClusterVpcSecurityGroup:
      type: object
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The status of the VPC security group.
        VpcSecurityGroupId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the VPC security group.
      description: A VPC security group that the cluster belongs to, if the cluster
        is in a VPC.
    AwsRedshiftClusterVpcSecurityGroups:
      type: array
      items:
        $ref: '#/components/schemas/AwsRedshiftClusterVpcSecurityGroup'
    AwsRoute53HostedZoneConfigDetails:
      type: object
      properties:
        Comment:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Any comments that you include about the hosted zone.
      description: An object that contains an optional comment about your Amazon Route
        53 hosted zone.
    AwsRoute53HostedZoneDetails:
      type: object
      properties:
        HostedZone:
          allOf:
          - $ref: '#/components/schemas/AwsRoute53HostedZoneObjectDetails'
          description: An object that contains information about the specified hosted
            zone.
        Vpcs:
          allOf:
          - $ref: '#/components/schemas/AwsRoute53HostedZoneVpcsList'
          description: An object that contains information about the Amazon Virtual
            Private Clouds (Amazon VPCs) that are associated with the specified hosted
            zone.
        NameServers:
          allOf:
          - $ref: '#/components/schemas/AwsRoute53HostedZoneNameServersList'
          description: An object that contains a list of the authoritative name servers
            for a hosted zone or for a reusable delegation set.
        QueryLoggingConfig:
          allOf:
          - $ref: '#/components/schemas/AwsRoute53QueryLoggingConfigDetails'
          description: An array that contains one `QueryLoggingConfig` element for
            each DNS query logging configuration that is associated with the current
            Amazon Web Services account.
      description: Provides details about a specified Amazon Route 53 hosted zone,
        including the four name servers assigned to the hosted zone. A hosted zone
        represents a collection of records that can be managed together, belonging
        to a single parent domain name.
    AwsRoute53HostedZoneNameServersList:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
    AwsRoute53HostedZoneObjectDetails:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID that Route 53 assigns to the hosted zone when you create
            it.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the domain. For public hosted zones, this is the
            name that you have registered with your DNS registrar.
        Config:
          allOf:
          - $ref: '#/components/schemas/AwsRoute53HostedZoneConfigDetails'
          description: An object that includes the `Comment` element.
      description: An object that contains information about an Amazon Route 53 hosted
        zone.
    AwsRoute53HostedZoneVpcDetails:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of an Amazon VPC.
        Region:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Web Services Region that an Amazon VPC was created
            in.
      description: For private hosted zones, this is a complex type that contains
        information about an Amazon VPC.
    AwsRoute53HostedZoneVpcsList:
      type: array
      items:
        $ref: '#/components/schemas/AwsRoute53HostedZoneVpcDetails'
    AwsRoute53QueryLoggingConfigDetails:
      type: object
      properties:
        CloudWatchLogsLogGroupArn:
          allOf:
          - $ref: '#/components/schemas/CloudWatchLogsLogGroupArnConfigDetails'
          description: The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs
            log group that Route 53 is publishing logs to.
      description: Provides details about a specified Amazon Route 53 configuration
        for DNS query logging.
    AwsS3AccessPointDetails:
      type: object
      properties:
        AccessPointArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the access point.
        Alias:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name or alias of the access point.
        Bucket:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the S3 bucket associated with the specified access
            point.
        BucketAccountId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Web Services account ID associated with the S3 bucket
            associated with this access point.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the specified access point.
        NetworkOrigin:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Indicates whether this access point allows access from the
            public internet.
        PublicAccessBlockConfiguration:
          $ref: '#/components/schemas/AwsS3AccountPublicAccessBlockDetails'
        VpcConfiguration:
          allOf:
          - $ref: '#/components/schemas/AwsS3AccessPointVpcConfigurationDetails'
          description: Contains the virtual private cloud (VPC) configuration for
            the specified access point.
      description: Returns configuration information about the specified Amazon S3
        access point. S3 access points are named network endpoints that are attached
        to buckets that you can use to perform S3 object operations.
    AwsS3AccessPointVpcConfigurationDetails:
      type: object
      properties:
        VpcId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: If this field is specified, this access point will only allow
            connections from the specified VPC ID.
      description: The virtual private cloud (VPC) configuration for an Amazon S3
        access point.
    AwsS3AccountPublicAccessBlockDetails:
      type: object
      properties:
        BlockPublicAcls:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether to reject calls to update an S3 bucket if
            the calls include a public access control list (ACL).
        BlockPublicPolicy:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether to reject calls to update the access policy
            for an S3 bucket or access point if the policy allows public access.
        IgnorePublicAcls:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether Amazon S3 ignores public ACLs that are associated
            with an S3 bucket.
        RestrictPublicBuckets:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether to restrict access to an access point or
            S3 bucket that has a public policy to only Amazon Web Services service
            principals and authorized users within the S3 bucket owner's account.
      description: provides information about the Amazon S3 Public Access Block configuration
        for accounts.
    AwsS3BucketBucketLifecycleConfigurationDetails:
      type: object
      properties:
        Rules:
          allOf:
          - $ref: '#/components/schemas/AwsS3BucketBucketLifecycleConfigurationRulesList'
          description: The lifecycle rules.
      description: The lifecycle configuration for the objects in the S3 bucket.
    AwsS3BucketBucketLifecycleConfigurationRulesAbortIncompleteMultipartUploadDetails:
      type: object
      properties:
        DaysAfterInitiation:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of days after which Amazon S3 cancels an incomplete
            multipart upload.
      description: Information about what Amazon S3 does when a multipart upload is
        incomplete.
    AwsS3BucketBucketLifecycleConfigurationRulesDetails:
      type: object
      properties:
        AbortIncompleteMultipartUpload:
          allOf:
          - $ref: '#/components/schemas/AwsS3BucketBucketLifecycleConfigurationRulesAbortIncompleteMultipartUploadDetails'
          description: How Amazon S3 responds when a multipart upload is incomplete.
            Specifically, provides a number of days before Amazon S3 cancels the entire
            upload.
        ExpirationDate:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The date when objects are moved or deleted.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        ExpirationInDays:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The length in days of the lifetime for objects that are subject
            to the rule.
        ExpiredObjectDeleteMarker:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'Whether Amazon S3 removes a delete marker that has no noncurrent
            versions. If set to `true`, the delete marker is expired. If set to `false`,
            the policy takes no action.


            If you provide `ExpiredObjectDeleteMarker`, you cannot provide `ExpirationInDays`
            or `ExpirationDate`.'
        Filter:
          allOf:
          - $ref: '#/components/schemas/AwsS3BucketBucketLifecycleConfigurationRulesFilterDetails'
          description: Identifies the objects that a rule applies to.
        ID:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The unique identifier of the rule.
        NoncurrentVersionExpirationInDays:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of days that an object is noncurrent before Amazon
            S3 can perform the associated action.
        NoncurrentVersionTransitions:
          allOf:
          - $ref: '#/components/schemas/AwsS3BucketBucketLifecycleConfigurationRulesNoncurrentVersionTransitionsList'
          description: Transition rules that describe when noncurrent objects transition
            to a specified storage class.
        Prefix:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A prefix that identifies one or more objects that the rule
            applies to.
        Status:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The current status of the rule. Indicates whether the rule
            is currently being applied.
        Transitions:
          allOf:
          - $ref: '#/components/schemas/AwsS3BucketBucketLifecycleConfigurationRulesTransitionsList'
          description: Transition rules that indicate when objects transition to a
            specified storage class.
      description: Configuration for a lifecycle rule.
    AwsS3BucketBucketLifecycleConfigurationRulesFilterDetails:
      type: object
      properties:
        Predicate:
          allOf:
          - $ref: '#/components/schemas/AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateDetails'
          description: The configuration for the filter.
      description: Identifies the objects that a rule applies to.
    AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateDetails:
      type: object
      properties:
        Operands:
          allOf:
          - $ref: '#/components/schemas/AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsList'
          description: The values to use for the filter.
        Prefix:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A prefix filter.
        Tag:
          allOf:
          - $ref: '#/components/schemas/AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateTagDetails'
          description: A tag filter.
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Whether to use `AND` or `OR` to join the operands. Valid values
            are `LifecycleAndOperator` or `LifecycleOrOperator`.
      description: The configuration for the filter.
    AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsDetails:
      type: object
      properties:
        Prefix:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Prefix text for matching objects.
        Tag:
          allOf:
          - $ref: '#/components/schemas/AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsTagDetails'
          description: A tag that is assigned to matching objects.
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of filter value. Valid values are `LifecyclePrefixPredicate`
            or `LifecycleTagPredicate`.
      description: A value to use for the filter.
    AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsList:
      type: array
      items:
        $ref: '#/components/schemas/AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsDetails'
    AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsTagDetails:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The tag key.
        Value:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The tag value.
      description: A tag that is assigned to matching objects.
    AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateTagDetails:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The tag key.
        Value:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The tag value
      description: A tag filter.
    AwsS3BucketBucketLifecycleConfigurationRulesList:
      type: array
      items:
        $ref: '#/components/schemas/AwsS3BucketBucketLifecycleConfigurationRulesDetails'
    AwsS3BucketBucketLifecycleConfigurationRulesNoncurrentVersionTransitionsDetails:
      type: object
      properties:
        Days:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of days that an object is noncurrent before Amazon
            S3 can perform the associated action.
        StorageClass:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The class of storage to change the object to after the object
            is noncurrent for the specified number of days.
      description: A transition rule that describes when noncurrent objects transition
        to a specified storage class.
    AwsS3BucketBucketLifecycleConfigurationRulesNoncurrentVersionTransitionsList:
      type: array
      items:
        $ref: '#/components/schemas/AwsS3BucketBucketLifecycleConfigurationRulesNoncurrentVersionTransitionsDetails'
    AwsS3BucketBucketLifecycleConfigurationRulesTransitionsDetails:
      type: object
      properties:
        Date:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'A date on which to transition objects to the specified storage
            class. If you provide `Date`, you cannot provide `Days`.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        Days:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of days after which to transition the object to
            the specified storage class. If you provide `Days`, you cannot provide
            `Date`.
        StorageClass:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "The storage class to transition the object to. Valid values\
            \ are as follows:\n\n  * `DEEP_ARCHIVE`\n\n  * `GLACIER`\n\n  * `INTELLIGENT_TIERING`\n\
            \n  * `ONEZONE_IA`\n\n  * `STANDARD_IA`"
      description: A rule for when objects transition to specific storage classes.
    AwsS3BucketBucketLifecycleConfigurationRulesTransitionsList:
      type: array
      items:
        $ref: '#/components/schemas/AwsS3BucketBucketLifecycleConfigurationRulesTransitionsDetails'
    AwsS3BucketBucketVersioningConfiguration:
      type: object
      properties:
        IsMfaDeleteEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether MFA delete is currently enabled in the S3
            bucket versioning configuration. If the S3 bucket was never configured
            with MFA delete, then this attribute is not included.
        Status:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The versioning status of the S3 bucket. Valid values are `Enabled`
            or `Suspended`.
      description: Describes the versioning state of an S3 bucket.
    AwsS3BucketDetails:
      type: object
      properties:
        OwnerId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The canonical user ID of the owner of the S3 bucket.
        OwnerName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The display name of the owner of the S3 bucket.
        OwnerAccountId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Web Services account identifier of the account that
            owns the S3 bucket.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the S3 bucket was created.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        ServerSideEncryptionConfiguration:
          allOf:
          - $ref: '#/components/schemas/AwsS3BucketServerSideEncryptionConfiguration'
          description: The encryption rules that are applied to the S3 bucket.
        BucketLifecycleConfiguration:
          allOf:
          - $ref: '#/components/schemas/AwsS3BucketBucketLifecycleConfigurationDetails'
          description: The lifecycle configuration for objects in the specified bucket.
        PublicAccessBlockConfiguration:
          allOf:
          - $ref: '#/components/schemas/AwsS3AccountPublicAccessBlockDetails'
          description: Provides information about the Amazon S3 Public Access Block
            configuration for the S3 bucket.
        AccessControlList:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The access control list for the S3 bucket.
        BucketLoggingConfiguration:
          allOf:
          - $ref: '#/components/schemas/AwsS3BucketLoggingConfiguration'
          description: The logging configuration for the S3 bucket.
        BucketWebsiteConfiguration:
          allOf:
          - $ref: '#/components/schemas/AwsS3BucketWebsiteConfiguration'
          description: The website configuration parameters for the S3 bucket.
        BucketNotificationConfiguration:
          allOf:
          - $ref: '#/components/schemas/AwsS3BucketNotificationConfiguration'
          description: The notification configuration for the S3 bucket.
        BucketVersioningConfiguration:
          allOf:
          - $ref: '#/components/schemas/AwsS3BucketBucketVersioningConfiguration'
          description: The versioning state of an S3 bucket.
        ObjectLockConfiguration:
          allOf:
          - $ref: '#/components/schemas/AwsS3BucketObjectLockConfiguration'
          description: Specifies which rule Amazon S3 applies by default to every
            new object placed in the bucket.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the bucket.
      description: The details of an Amazon Simple Storage Service (Amazon S3) bucket.
    AwsS3BucketLoggingConfiguration:
      type: object
      properties:
        DestinationBucketName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the S3 bucket where log files for the S3 bucket
            are stored.
        LogFilePrefix:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The prefix added to log files for the S3 bucket.
      description: Information about logging for the S3 bucket
    AwsS3BucketNotificationConfiguration:
      type: object
      properties:
        Configurations:
          allOf:
          - $ref: '#/components/schemas/AwsS3BucketNotificationConfigurationDetails'
          description: Configurations for S3 bucket notifications.
      description: The notification configuration for the S3 bucket.
    AwsS3BucketNotificationConfigurationDetail:
      type: object
      properties:
        Events:
          allOf:
          - $ref: '#/components/schemas/AwsS3BucketNotificationConfigurationEvents'
          description: The list of events that trigger a notification.
        Filter:
          allOf:
          - $ref: '#/components/schemas/AwsS3BucketNotificationConfigurationFilter'
          description: The filters that determine which S3 buckets generate notifications.
        Destination:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the Lambda function, Amazon SQS queue, or Amazon
            SNS topic that generates the notification.
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "Indicates the type of notification. Notifications can be generated\
            \ using Lambda functions, Amazon SQS queues, or Amazon SNS topics, with\
            \ corresponding valid values as follows:\n\n  * `LambdaConfiguration`\n\
            \n  * `QueueConfiguration`\n\n  * `TopicConfiguration`"
      description: Details for an S3 bucket notification configuration.
    AwsS3BucketNotificationConfigurationDetails:
      type: array
      items:
        $ref: '#/components/schemas/AwsS3BucketNotificationConfigurationDetail'
    AwsS3BucketNotificationConfigurationEvents:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
    AwsS3BucketNotificationConfigurationFilter:
      type: object
      properties:
        S3KeyFilter:
          allOf:
          - $ref: '#/components/schemas/AwsS3BucketNotificationConfigurationS3KeyFilter'
          description: Details for an Amazon S3 filter.
      description: Filtering information for the notifications. The filtering is based
        on Amazon S3 key names.
    AwsS3BucketNotificationConfigurationS3KeyFilter:
      type: object
      properties:
        FilterRules:
          allOf:
          - $ref: '#/components/schemas/AwsS3BucketNotificationConfigurationS3KeyFilterRules'
          description: The filter rules for the filter.
      description: Details for an Amazon S3 filter.
    AwsS3BucketNotificationConfigurationS3KeyFilterRule:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/AwsS3BucketNotificationConfigurationS3KeyFilterRuleName'
          description: Indicates whether the filter is based on the prefix or suffix
            of the Amazon S3 key.
        Value:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The filter value.
      description: Details for a filter rule.
    AwsS3BucketNotificationConfigurationS3KeyFilterRuleName:
      type: string
      enum:
      - Prefix
      - Suffix
    AwsS3BucketNotificationConfigurationS3KeyFilterRules:
      type: array
      items:
        $ref: '#/components/schemas/AwsS3BucketNotificationConfigurationS3KeyFilterRule'
    AwsS3BucketObjectLockConfiguration:
      type: object
      properties:
        ObjectLockEnabled:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Indicates whether the bucket has an Object Lock configuration
            enabled.
        Rule:
          allOf:
          - $ref: '#/components/schemas/AwsS3BucketObjectLockConfigurationRuleDetails'
          description: Specifies the Object Lock rule for the specified object.
      description: The container element for S3 Object Lock configuration parameters.
        In Amazon S3, Object Lock can help prevent objects from being deleted or overwritten
        for a fixed amount of time or indefinitely.
    AwsS3BucketObjectLockConfigurationRuleDefaultRetentionDetails:
      type: object
      properties:
        Days:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of days that you want to specify for the default
            retention period.
        Mode:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The default Object Lock retention mode you want to apply to
            new objects placed in the specified bucket.
        Years:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of years that you want to specify for the default
            retention period.
      description: The default S3 Object Lock retention mode and period that you want
        to apply to new objects placed in the specified Amazon S3 bucket.
    AwsS3BucketObjectLockConfigurationRuleDetails:
      type: object
      properties:
        DefaultRetention:
          allOf:
          - $ref: '#/components/schemas/AwsS3BucketObjectLockConfigurationRuleDefaultRetentionDetails'
          description: The default Object Lock retention mode and period that you
            want to apply to new objects placed in the specified bucket.
      description: Specifies the S3 Object Lock rule for the specified object. In
        Amazon S3, Object Lock can help prevent objects from being deleted or overwritten
        for a fixed amount of time or indefinitely.
    AwsS3BucketServerSideEncryptionByDefault:
      type: object
      properties:
        SSEAlgorithm:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Server-side encryption algorithm to use for the default encryption.
            Valid values are `aws: kms` or `AES256`.'
        KMSMasterKeyID:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: KMS key ID to use for the default encryption.
      description: Specifies the default server-side encryption to apply to new objects
        in the bucket.
    AwsS3BucketServerSideEncryptionConfiguration:
      type: object
      properties:
        Rules:
          allOf:
          - $ref: '#/components/schemas/AwsS3BucketServerSideEncryptionRules'
          description: The encryption rules that are applied to the S3 bucket.
      description: The encryption configuration for the S3 bucket.
    AwsS3BucketServerSideEncryptionRule:
      type: object
      properties:
        ApplyServerSideEncryptionByDefault:
          allOf:
          - $ref: '#/components/schemas/AwsS3BucketServerSideEncryptionByDefault'
          description: Specifies the default server-side encryption to apply to new
            objects in the bucket. If a `PUT` object request doesn't specify any server-side
            encryption, this default encryption is applied.
      description: An encryption rule to apply to the S3 bucket.
    AwsS3BucketServerSideEncryptionRules:
      type: array
      items:
        $ref: '#/components/schemas/AwsS3BucketServerSideEncryptionRule'
    AwsS3BucketWebsiteConfiguration:
      type: object
      properties:
        ErrorDocument:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the error document for the website.
        IndexDocumentSuffix:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the index document for the website.
        RedirectAllRequestsTo:
          allOf:
          - $ref: '#/components/schemas/AwsS3BucketWebsiteConfigurationRedirectTo'
          description: The redirect behavior for requests to the website.
        RoutingRules:
          allOf:
          - $ref: '#/components/schemas/AwsS3BucketWebsiteConfigurationRoutingRules'
          description: The rules for applying redirects for requests to the website.
      description: Website parameters for the S3 bucket.
    AwsS3BucketWebsiteConfigurationRedirectTo:
      type: object
      properties:
        Hostname:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the host to redirect requests to.
        Protocol:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The protocol to use when redirecting requests. By default,
            this field uses the same protocol as the original request. Valid values
            are `http` or `https`.
      description: The redirect behavior for requests to the website.
    AwsS3BucketWebsiteConfigurationRoutingRule:
      type: object
      properties:
        Condition:
          allOf:
          - $ref: '#/components/schemas/AwsS3BucketWebsiteConfigurationRoutingRuleCondition'
          description: Provides the condition that must be met in order to apply the
            routing rule.
        Redirect:
          allOf:
          - $ref: '#/components/schemas/AwsS3BucketWebsiteConfigurationRoutingRuleRedirect'
          description: Provides the rules to redirect the request if the condition
            in `Condition` is met.
      description: A rule for redirecting requests to the website.
    AwsS3BucketWebsiteConfigurationRoutingRuleCondition:
      type: object
      properties:
        HttpErrorCodeReturnedEquals:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Indicates to redirect the request if the HTTP error code matches
            this value.
        KeyPrefixEquals:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Indicates to redirect the request if the key prefix matches
            this value.
      description: The condition that must be met in order to apply the routing rule.
    AwsS3BucketWebsiteConfigurationRoutingRuleRedirect:
      type: object
      properties:
        Hostname:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The host name to use in the redirect request.
        HttpRedirectCode:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The HTTP redirect code to use in the response.
        Protocol:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The protocol to use to redirect the request. By default, uses
            the protocol from the original request.
        ReplaceKeyPrefixWith:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The object key prefix to use in the redirect request.


            Cannot be provided if `ReplaceKeyWith` is present.'
        ReplaceKeyWith:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The specific object key to use in the redirect request.


            Cannot be provided if `ReplaceKeyPrefixWith` is present.'
      description: The rules to redirect the request if the condition in `Condition`
        is met.
    AwsS3BucketWebsiteConfigurationRoutingRules:
      type: array
      items:
        $ref: '#/components/schemas/AwsS3BucketWebsiteConfigurationRoutingRule'
    AwsS3ObjectDetails:
      type: object
      properties:
        LastModified:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the object was last modified.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        ETag:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The opaque identifier assigned by a web server to a specific
            version of a resource found at a URL.
        VersionId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The version of the object.
        ContentType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A standard MIME type describing the format of the object data.
        ServerSideEncryption:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: If the object is stored using server-side encryption, the value
            of the server-side encryption algorithm used when storing this object
            in Amazon S3.
        SSEKMSKeyId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the KMS symmetric customer managed key that
            was used for the object.
      description: Details about an Amazon S3 object.
    AwsSageMakerNotebookInstanceDetails:
      type: object
      properties:
        AcceleratorTypes:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: A list of Amazon Elastic Inference instance types to associate
            with the notebook instance. Currently, only one instance type can be associated
            with a notebook instance.
        AdditionalCodeRepositories:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: An array of up to three Git repositories associated with the
            notebook instance. These can be either the names of Git repositories stored
            as resources in your account, or the URL of Git repositories in [CodeCommit](https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html)
            or in any other Git repository. These repositories are cloned at the same
            level as the default repository of your notebook instance. For more information,
            see [Associating Git repositories with SageMaker AI notebook instances](https://docs.aws.amazon.com/sagemaker/latest/dg/nbi-git-repo.html)
            in the _Amazon SageMaker AI Developer Guide_.
        DefaultCodeRepository:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Git repository associated with the notebook instance as
            its default code repository. This can be either the name of a Git repository
            stored as a resource in your account, or the URL of a Git repository in
            [CodeCommit](https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html)
            or in any other Git repository. When you open a notebook instance, it
            opens in the directory that contains this repository. For more information,
            see [Associating Git repositories with SageMaker AI notebook instances](https://docs.aws.amazon.com/sagemaker/latest/dg/nbi-git-repo.html)
            in the _Amazon SageMaker AI Developer Guide_.
        DirectInternetAccess:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Sets whether SageMaker AI provides internet access to the notebook
            instance. If you set this to `Disabled`, this notebook instance is able
            to access resources only in your VPC, and is not be able to connect to
            SageMaker AI training and endpoint services unless you configure a Network
            Address Translation (NAT) Gateway in your VPC.
        FailureReason:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: If status of the instance is `Failed`, the reason it failed.
        InstanceMetadataServiceConfiguration:
          allOf:
          - $ref: '#/components/schemas/AwsSageMakerNotebookInstanceMetadataServiceConfigurationDetails'
          description: Information on the IMDS configuration of the notebook instance.
        InstanceType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of machine learning (ML) compute instance to launch
            for the notebook instance.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of an Key Management Service
            (KMS) key that SageMaker AI uses to encrypt data on the storage volume
            attached to your notebook instance. The KMS key you provide must be enabled.
            For information, see [Enabling and disabling keys](https://docs.aws.amazon.com/kms/latest/developerguide/enabling-keys.html)
            in the _Key Management Service Developer Guide_.
        NetworkInterfaceId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The network interface ID that SageMaker AI created when the
            instance was created.
        NotebookInstanceArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the notebook instance.
        NotebookInstanceLifecycleConfigName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of a notebook instance lifecycle configuration.
        NotebookInstanceName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the new notebook instance.
        NotebookInstanceStatus:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The status of the notebook instance.
        PlatformIdentifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The platform identifier of the notebook instance runtime environment.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the IAM role associated with
            the instance.
        RootAccess:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Whether root access is enabled or disabled for users of the
            notebook instance.
        SecurityGroups:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The VPC security group IDs.
        SubnetId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the VPC subnet to which you have a connectivity from
            your ML compute instance.
        Url:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The URL that you use to connect to the Jupyter notebook that
            is running in your notebook instance.
        VolumeSizeInGB:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The size, in GB, of the ML storage volume to attach to the
            notebook instance.
      description: Provides details about an Amazon SageMaker AI notebook instance.
    AwsSageMakerNotebookInstanceMetadataServiceConfigurationDetails:
      type: object
      properties:
        MinimumInstanceMetadataServiceVersion:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Indicates the minimum IMDS version that the notebook instance
            supports.
      description: Information on the instance metadata service (IMDS) configuration
        of the notebook instance.
    AwsSecretsManagerSecretDetails:
      type: object
      properties:
        RotationRules:
          allOf:
          - $ref: '#/components/schemas/AwsSecretsManagerSecretRotationRules'
          description: Defines the rotation schedule for the secret.
        RotationOccurredWithinFrequency:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the rotation occurred within the specified rotation
            frequency.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN, Key ID, or alias of the KMS key used to encrypt the
            `SecretString` or `SecretBinary` values for versions of this secret.
        RotationEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether rotation is enabled.
        RotationLambdaArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the Lambda function that rotates the secret.
        Deleted:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the secret is deleted.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the secret.
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The user-provided description of the secret.
      description: Details about an Secrets Manager secret.
    AwsSecretsManagerSecretRotationRules:
      type: object
      properties:
        AutomaticallyAfterDays:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of days after the previous rotation to rotate the
            secret.
      description: Defines the rotation schedule for the secret.
    AwsSecurityFinding:
      type: object
      properties:
        SchemaVersion:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The schema version that a finding is formatted for. The value
            is `2018-10-08`.
        Id:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The security findings provider-specific identifier for a finding.


            Length Constraints: Minimum length of 1. Maximum length of 512.'
        ProductArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The ARN generated by Security Hub that uniquely identifies
            a product that generates findings. This can be the ARN for a third-party
            product that is integrated with Security Hub, or the ARN for a custom
            integration.


            Length Constraints: Minimum length of 12. Maximum length of 2048.'
        ProductName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The name of the product that generated the finding.


            Security Hub populates this attribute automatically for each finding.
            You cannot update this attribute with `BatchImportFindings` or `BatchUpdateFindings`.
            The exception to this is a custom integration.


            When you use the Security Hub console or API to filter findings by product
            name, you use this attribute.


            Length Constraints: Minimum length of 1. Maximum length of 128.'
        CompanyName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The name of the company for the product that generated the
            finding.


            Security Hub populates this attribute automatically for each finding.
            You cannot update this attribute with `BatchImportFindings` or `BatchUpdateFindings`.
            The exception to this is a custom integration.


            When you use the Security Hub console or API to filter findings by company
            name, you use this attribute.


            Length Constraints: Minimum length of 1. Maximum length of 128.'
        Region:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The Region from which the finding was generated.


            Security Hub populates this attribute automatically for each finding.
            You cannot update it using `BatchImportFindings` or `BatchUpdateFindings`.


            Length Constraints: Minimum length of 1. Maximum length of 16.'
        GeneratorId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The identifier for the solution-specific component (a discrete
            unit of logic) that generated a finding. In various security findings
            providers'' solutions, this generator can be called a rule, a check, a
            detector, a plugin, or something else.


            Length Constraints: Minimum length of 1. Maximum length of 512.'
        AwsAccountId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The Amazon Web Services account ID that a finding is generated
            in.


            Length Constraints: 12.'
        Types:
          allOf:
          - $ref: '#/components/schemas/TypeList'
          description: 'One or more finding types in the format of `namespace/category/classifier`
            that classify a finding.


            Valid namespace values are: Software and Configuration Checks | TTPs |
            Effects | Unusual Behaviors | Sensitive Data Identifications


            Array Members: Maximum number of 50 items.'
        FirstObservedAt:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the security findings provider first observed
            the potential security issue that a finding captured.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        LastObservedAt:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the security findings provider most recently
            observed a change in the resource that is involved in the finding.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the security findings provider created the
            potential security issue that a finding captured.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the security findings provider last updated
            the finding record.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        Severity:
          allOf:
          - $ref: '#/components/schemas/Severity'
          description: A finding's severity.
        Confidence:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'A finding''s confidence. Confidence is defined as the likelihood
            that a finding accurately identifies the behavior or issue that it was
            intended to identify.


            Confidence is scored on a 0-100 basis using a ratio scale, where 0 means
            zero percent confidence and 100 means 100 percent confidence.'
        Criticality:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'The level of importance assigned to the resources associated
            with the finding.


            A score of 0 means that the underlying resources have no criticality,
            and a score of 100 is reserved for the most critical resources.'
        Title:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'A finding''s title. `Title` is a required property.


            Length Constraints: Minimum length of 1. Maximum length of 256.'
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'A finding''s description. `Description` is a required property.


            Length Constraints: Minimum length of 1. Maximum length of 1024.'
        Remediation:
          allOf:
          - $ref: '#/components/schemas/Remediation'
          description: A data type that describes the remediation options for a finding.
        SourceUrl:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A URL that links to a page about the current finding in the
            security findings provider's solution.
        ProductFields:
          allOf:
          - $ref: '#/components/schemas/FieldMap'
          description: 'A data type where security findings providers can include
            additional solution-specific details that aren''t part of the defined
            `AwsSecurityFinding` format.


            Can contain up to 50 key-value pairs. For each key-value pair, the key
            can contain up to 128 characters, and the value can contain up to 2048
            characters.'
        UserDefinedFields:
          allOf:
          - $ref: '#/components/schemas/FieldMap'
          description: 'A list of name/value string pairs associated with the finding.
            These are custom, user-defined fields added to a finding.


            Can contain up to 50 key-value pairs. For each key-value pair, the key
            can contain up to 128 characters, and the value can contain up to 1024
            characters.'
        Malware:
          allOf:
          - $ref: '#/components/schemas/MalwareList'
          description: 'A list of malware related to a finding.


            Array Members: Maximum number of 5 items.'
        Network:
          allOf:
          - $ref: '#/components/schemas/Network'
          description: The details of network-related information about a finding.
        NetworkPath:
          allOf:
          - $ref: '#/components/schemas/NetworkPathList'
          description: Provides information about a network path that is relevant
            to a finding. Each entry under `NetworkPath` represents a component of
            that path.
        Process:
          allOf:
          - $ref: '#/components/schemas/ProcessDetails'
          description: The details of process-related information about a finding.
        Threats:
          allOf:
          - $ref: '#/components/schemas/ThreatList'
          description: 'Details about the threat detected in a security finding and
            the file paths that were affected by the threat.


            Array Members: Minimum number of 1 item. Maximum number of 32 items.'
        ThreatIntelIndicators:
          allOf:
          - $ref: '#/components/schemas/ThreatIntelIndicatorList'
          description: 'Threat intelligence details related to a finding.


            Array Members: Minimum number of 1 item. Maximum number of 5 items.'
        Resources:
          allOf:
          - $ref: '#/components/schemas/ResourceList'
          description: 'A set of resource data types that describe the resources that
            the finding refers to.


            Array Members: Minimum number of 1 item. Maximum number of 32 items.'
        Compliance:
          allOf:
          - $ref: '#/components/schemas/Compliance'
          description: This data type is exclusive to findings that are generated
            as the result of a check run against a specific rule in a supported security
            standard, such as CIS Amazon Web Services Foundations. Contains security
            standard-related finding details.
        VerificationState:
          allOf:
          - $ref: '#/components/schemas/VerificationState'
          description: Indicates the veracity of a finding.
        WorkflowState:
          allOf:
          - $ref: '#/components/schemas/WorkflowState'
          description: The workflow state of a finding.
        Workflow:
          allOf:
          - $ref: '#/components/schemas/Workflow'
          description: Provides information about the status of the investigation
            into a finding.
        RecordState:
          allOf:
          - $ref: '#/components/schemas/RecordState'
          description: The record state of a finding.
        RelatedFindings:
          allOf:
          - $ref: '#/components/schemas/RelatedFindingList'
          description: 'A list of related findings.


            Array Members: Minimum number of 1 item. Maximum number of 10 items.'
        Note:
          allOf:
          - $ref: '#/components/schemas/Note'
          description: A user-defined note added to a finding.
        Vulnerabilities:
          allOf:
          - $ref: '#/components/schemas/VulnerabilityList'
          description: Provides a list of vulnerabilities associated with the findings.
        PatchSummary:
          allOf:
          - $ref: '#/components/schemas/PatchSummary'
          description: Provides an overview of the patch compliance status for an
            instance against a selected compliance standard.
        Action:
          allOf:
          - $ref: '#/components/schemas/Action'
          description: Provides details about an action that affects or that was taken
            on a resource.
        FindingProviderFields:
          allOf:
          - $ref: '#/components/schemas/FindingProviderFields'
          description: In a `BatchImportFindings` request, finding providers use `FindingProviderFields`
            to provide and update their own values for confidence, criticality, related
            findings, severity, and types.
        Sample:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether the finding is a sample finding.
        GeneratorDetails:
          allOf:
          - $ref: '#/components/schemas/GeneratorDetails'
          description: Provides metadata for the Amazon CodeGuru detector associated
            with a finding. This field pertains to findings that relate to Lambda
            functions. Amazon Inspector identifies policy violations and vulnerabilities
            in Lambda function code based on internal detectors developed in collaboration
            with Amazon CodeGuru. Security Hub receives those findings.
        ProcessedAt:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'A timestamp that indicates when Security Hub received a finding
            and begins to process it.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        AwsAccountName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The name of the Amazon Web Services account from which a finding
            was generated.


            Length Constraints: Minimum length of 1. Maximum length of 50.'
        Detection:
          allOf:
          - $ref: '#/components/schemas/Detection'
          description: Provides details about an Amazon GuardDuty Extended Threat
            Detection attack sequence. GuardDuty generates an attack sequence finding
            when multiple events align to a potentially suspicious activity. To receive
            GuardDuty attack sequence findings in Security Hub, you must have GuardDuty
            enabled. For more information, see [GuardDuty Extended Threat Detection
            ](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty-extended-threat-detection.html)
            in the _Amazon GuardDuty User Guide_.
      required:
      - SchemaVersion
      - Id
      - ProductArn
      - GeneratorId
      - AwsAccountId
      - CreatedAt
      - UpdatedAt
      - Title
      - Description
      - Resources
      description: 'Provides a consistent format for Security Hub findings. `AwsSecurityFinding`
        format allows you to share findings between Amazon Web Services security services
        and third-party solutions.


        A finding is a potential security issue generated either by Amazon Web Services
        services or by the integrated third-party solutions and standards checks.'
    AwsSecurityFindingFilters:
      type: object
      properties:
        ProductArn:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The ARN generated by Security Hub that uniquely identifies
            a third-party company (security findings provider) after this provider's
            product (solution that generates findings) is registered with Security
            Hub.
        AwsAccountId:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The Amazon Web Services account ID in which a finding is generated.
        Id:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The security findings provider-specific identifier for a finding.
        GeneratorId:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The identifier for the solution-specific component (a discrete
            unit of logic) that generated a finding. In various security findings
            providers' solutions, this generator can be called a rule, a check, a
            detector, a plugin, etc.
        Region:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The Region from which the finding was generated.
        Type:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: A finding type in the format of `namespace/category/classifier`
            that classifies a finding.
        FirstObservedAt:
          allOf:
          - $ref: '#/components/schemas/DateFilterList'
          description: 'A timestamp that indicates when the security findings provider
            first observed the potential security issue that a finding captured.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        LastObservedAt:
          allOf:
          - $ref: '#/components/schemas/DateFilterList'
          description: 'A timestamp that indicates when the security findings provider
            most recently observed a change in the resource that is involved in the
            finding.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/DateFilterList'
          description: 'A timestamp that indicates when the security findings provider
            created the potential security issue that a finding reflects.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/DateFilterList'
          description: 'A timestamp that indicates when the security findings provider
            last updated the finding record.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        SeverityProduct:
          allOf:
          - $ref: '#/components/schemas/NumberFilterList'
          description: The native severity as defined by the security findings provider's
            solution that generated the finding.
        SeverityNormalized:
          allOf:
          - $ref: '#/components/schemas/NumberFilterList'
          description: The normalized severity of a finding.
        SeverityLabel:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The label of a finding's severity.
        Confidence:
          allOf:
          - $ref: '#/components/schemas/NumberFilterList'
          description: 'A finding''s confidence. Confidence is defined as the likelihood
            that a finding accurately identifies the behavior or issue that it was
            intended to identify.


            Confidence is scored on a 0-100 basis using a ratio scale, where 0 means
            zero percent confidence and 100 means 100 percent confidence.'
        Criticality:
          allOf:
          - $ref: '#/components/schemas/NumberFilterList'
          description: 'The level of importance assigned to the resources associated
            with the finding.


            A score of 0 means that the underlying resources have no criticality,
            and a score of 100 is reserved for the most critical resources.'
        Title:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: A finding's title.
        Description:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: A finding's description.
        RecommendationText:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The recommendation of what to do about the issue described
            in a finding.
        SourceUrl:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: A URL that links to a page about the current finding in the
            security findings provider's solution.
        ProductFields:
          allOf:
          - $ref: '#/components/schemas/MapFilterList'
          description: A data type where security findings providers can include additional
            solution-specific details that aren't part of the defined `AwsSecurityFinding`
            format.
        ProductName:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The name of the solution (product) that generates findings.
        CompanyName:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The name of the findings provider (company) that owns the solution
            (product) that generates findings.
        UserDefinedFields:
          allOf:
          - $ref: '#/components/schemas/MapFilterList'
          description: A list of name/value string pairs associated with the finding.
            These are custom, user-defined fields added to a finding.
        MalwareName:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The name of the malware that was observed.
        MalwareType:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The type of the malware that was observed.
        MalwarePath:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The filesystem path of the malware that was observed.
        MalwareState:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The state of the malware that was observed.
        NetworkDirection:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: Indicates the direction of network traffic associated with
            a finding.
        NetworkProtocol:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The protocol of network-related information about a finding.
        NetworkSourceIpV4:
          allOf:
          - $ref: '#/components/schemas/IpFilterList'
          description: The source IPv4 address of network-related information about
            a finding.
        NetworkSourceIpV6:
          allOf:
          - $ref: '#/components/schemas/IpFilterList'
          description: The source IPv6 address of network-related information about
            a finding.
        NetworkSourcePort:
          allOf:
          - $ref: '#/components/schemas/NumberFilterList'
          description: The source port of network-related information about a finding.
        NetworkSourceDomain:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The source domain of network-related information about a finding.
        NetworkSourceMac:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The source media access control (MAC) address of network-related
            information about a finding.
        NetworkDestinationIpV4:
          allOf:
          - $ref: '#/components/schemas/IpFilterList'
          description: The destination IPv4 address of network-related information
            about a finding.
        NetworkDestinationIpV6:
          allOf:
          - $ref: '#/components/schemas/IpFilterList'
          description: The destination IPv6 address of network-related information
            about a finding.
        NetworkDestinationPort:
          allOf:
          - $ref: '#/components/schemas/NumberFilterList'
          description: The destination port of network-related information about a
            finding.
        NetworkDestinationDomain:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The destination domain of network-related information about
            a finding.
        ProcessName:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The name of the process.
        ProcessPath:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The path to the process executable.
        ProcessPid:
          allOf:
          - $ref: '#/components/schemas/NumberFilterList'
          description: The process ID.
        ProcessParentPid:
          allOf:
          - $ref: '#/components/schemas/NumberFilterList'
          description: The parent process ID. This field accepts positive integers
            between `O` and `2147483647`.
        ProcessLaunchedAt:
          allOf:
          - $ref: '#/components/schemas/DateFilterList'
          description: 'A timestamp that identifies when the process was launched.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        ProcessTerminatedAt:
          allOf:
          - $ref: '#/components/schemas/DateFilterList'
          description: 'A timestamp that identifies when the process was terminated.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        ThreatIntelIndicatorType:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The type of a threat intelligence indicator.
        ThreatIntelIndicatorValue:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The value of a threat intelligence indicator.
        ThreatIntelIndicatorCategory:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The category of a threat intelligence indicator.
        ThreatIntelIndicatorLastObservedAt:
          allOf:
          - $ref: '#/components/schemas/DateFilterList'
          description: 'A timestamp that identifies the last observation of a threat
            intelligence indicator.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        ThreatIntelIndicatorSource:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The source of the threat intelligence.
        ThreatIntelIndicatorSourceUrl:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The URL for more details from the source of the threat intelligence.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: Specifies the type of the resource that details are provided
            for.
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The canonical identifier for the given resource type.
        ResourcePartition:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The canonical Amazon Web Services partition name that the Region
            is assigned to.
        ResourceRegion:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The canonical Amazon Web Services external Region name where
            this resource is located.
        ResourceTags:
          allOf:
          - $ref: '#/components/schemas/MapFilterList'
          description: A list of Amazon Web Services tags associated with a resource
            at the time the finding was processed.
        ResourceAwsEc2InstanceType:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The instance type of the instance.
        ResourceAwsEc2InstanceImageId:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The Amazon Machine Image (AMI) ID of the instance.
        ResourceAwsEc2InstanceIpV4Addresses:
          allOf:
          - $ref: '#/components/schemas/IpFilterList'
          description: The IPv4 addresses associated with the instance.
        ResourceAwsEc2InstanceIpV6Addresses:
          allOf:
          - $ref: '#/components/schemas/IpFilterList'
          description: The IPv6 addresses associated with the instance.
        ResourceAwsEc2InstanceKeyName:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The key name associated with the instance.
        ResourceAwsEc2InstanceIamInstanceProfileArn:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The IAM profile ARN of the instance.
        ResourceAwsEc2InstanceVpcId:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The identifier of the VPC that the instance was launched in.
        ResourceAwsEc2InstanceSubnetId:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The identifier of the subnet that the instance was launched
            in.
        ResourceAwsEc2InstanceLaunchedAt:
          allOf:
          - $ref: '#/components/schemas/DateFilterList'
          description: The date and time the instance was launched.
        ResourceAwsS3BucketOwnerId:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The canonical user ID of the owner of the S3 bucket.
        ResourceAwsS3BucketOwnerName:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The display name of the owner of the S3 bucket.
        ResourceAwsIamAccessKeyUserName:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The user associated with the IAM access key related to a finding.
        ResourceAwsIamAccessKeyPrincipalName:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The name of the principal that is associated with an IAM access
            key.
        ResourceAwsIamAccessKeyStatus:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The status of the IAM access key related to a finding.
        ResourceAwsIamAccessKeyCreatedAt:
          allOf:
          - $ref: '#/components/schemas/DateFilterList'
          description: The creation date/time of the IAM access key related to a finding.
        ResourceAwsIamUserUserName:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The name of an IAM user.
        ResourceContainerName:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The name of the container related to a finding.
        ResourceContainerImageId:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The identifier of the image related to a finding.
        ResourceContainerImageName:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The name of the image related to a finding.
        ResourceContainerLaunchedAt:
          allOf:
          - $ref: '#/components/schemas/DateFilterList'
          description: 'A timestamp that identifies when the container was started.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        ResourceDetailsOther:
          allOf:
          - $ref: '#/components/schemas/MapFilterList'
          description: The details of a resource that doesn't have a specific subfield
            for the resource type defined.
        ComplianceStatus:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: Exclusive to findings that are generated as the result of a
            check run against a specific rule in a supported standard, such as CIS
            Amazon Web Services Foundations. Contains security standard-related finding
            details.
        VerificationState:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The veracity of a finding.
        WorkflowState:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: 'The workflow state of a finding.


            Note that this field is deprecated. To search for a finding based on its
            workflow status, use `WorkflowStatus`.'
        WorkflowStatus:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: "The status of the investigation into a finding. Allowed values\
            \ are the following.\n\n  * `NEW` \\- The initial state of a finding,\
            \ before it is reviewed.\n\nSecurity Hub also resets the workflow status\
            \ from `NOTIFIED` or `RESOLVED` to `NEW` in the following cases:\n\n \
            \   * `RecordState` changes from `ARCHIVED` to `ACTIVE`.\n\n    * `Compliance.Status`\
            \ changes from `PASSED` to either `WARNING`, `FAILED`, or `NOT_AVAILABLE`.\n\
            \n  * `NOTIFIED` \\- Indicates that the resource owner has been notified\
            \ about the security issue. Used when the initial reviewer is not the\
            \ resource owner, and needs intervention from the resource owner.\n\n\
            If one of the following occurs, the workflow status is changed automatically\
            \ from `NOTIFIED` to `NEW`:\n\n    * `RecordState` changes from `ARCHIVED`\
            \ to `ACTIVE`.\n\n    * `Compliance.Status` changes from `PASSED` to `FAILED`,\
            \ `WARNING`, or `NOT_AVAILABLE`.\n\n  * `SUPPRESSED` \\- Indicates that\
            \ you reviewed the finding and don't believe that any action is needed.\n\
            \nThe workflow status of a `SUPPRESSED` finding does not change if `RecordState`\
            \ changes from `ARCHIVED` to `ACTIVE`.\n\n  * `RESOLVED` \\- The finding\
            \ was reviewed and remediated and is now considered resolved. \n\nThe\
            \ finding remains `RESOLVED` unless one of the following occurs:\n\n \
            \   * `RecordState` changes from `ARCHIVED` to `ACTIVE`.\n\n    * `Compliance.Status`\
            \ changes from `PASSED` to `FAILED`, `WARNING`, or `NOT_AVAILABLE`.\n\n\
            In those cases, the workflow status is automatically reset to `NEW`.\n\
            \nFor findings from controls, if `Compliance.Status` is `PASSED`, then\
            \ Security Hub automatically sets the workflow status to `RESOLVED`."
        RecordState:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The updated record state for the finding.
        RelatedFindingsProductArn:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The ARN of the solution that generated a related finding.
        RelatedFindingsId:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The solution-generated identifier for a related finding.
        NoteText:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The text of a note.
        NoteUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/DateFilterList'
          description: The timestamp of when the note was updated.
        NoteUpdatedBy:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The principal that created a note.
        Keyword:
          allOf:
          - $ref: '#/components/schemas/KeywordFilterList'
          description: A keyword for a finding.
        FindingProviderFieldsConfidence:
          allOf:
          - $ref: '#/components/schemas/NumberFilterList'
          description: 'The finding provider value for the finding confidence. Confidence
            is defined as the likelihood that a finding accurately identifies the
            behavior or issue that it was intended to identify.


            Confidence is scored on a 0-100 basis using a ratio scale, where 0 means
            zero percent confidence and 100 means 100 percent confidence.'
        FindingProviderFieldsCriticality:
          allOf:
          - $ref: '#/components/schemas/NumberFilterList'
          description: 'The finding provider value for the level of importance assigned
            to the resources associated with the findings.


            A score of 0 means that the underlying resources have no criticality,
            and a score of 100 is reserved for the most critical resources.'
        FindingProviderFieldsRelatedFindingsId:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The finding identifier of a related finding that is identified
            by the finding provider.
        FindingProviderFieldsRelatedFindingsProductArn:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The ARN of the solution that generated a related finding that
            is identified by the finding provider.
        FindingProviderFieldsSeverityLabel:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The finding provider value for the severity label.
        FindingProviderFieldsSeverityOriginal:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The finding provider's original value for the severity.
        FindingProviderFieldsTypes:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: 'One or more finding types that the finding provider assigned
            to the finding. Uses the format of `namespace/category/classifier` that
            classify a finding.


            Valid namespace values are: Software and Configuration Checks | TTPs |
            Effects | Unusual Behaviors | Sensitive Data Identifications'
        Sample:
          allOf:
          - $ref: '#/components/schemas/BooleanFilterList'
          description: Indicates whether or not sample findings are included in the
            filter results.
        ComplianceSecurityControlId:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The unique identifier of a control across standards. Values
            for this field typically consist of an Amazon Web Services service and
            a number, such as APIGateway.5.
        ComplianceAssociatedStandardsId:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The unique identifier of a standard in which a control is enabled.
            This field consists of the resource portion of the Amazon Resource Name
            (ARN) returned for a standard in the [DescribeStandards](https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_DescribeStandards.html)
            API response.
        VulnerabilitiesExploitAvailable:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: Indicates whether a software vulnerability in your environment
            has a known exploit. You can filter findings by this field only if you
            use Security Hub and Amazon Inspector.
        VulnerabilitiesFixAvailable:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: Indicates whether a vulnerability is fixed in a newer version
            of the affected software packages. You can filter findings by this field
            only if you use Security Hub and Amazon Inspector.
        ComplianceSecurityControlParametersName:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The name of a security control parameter.
        ComplianceSecurityControlParametersValue:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The current value of a security control parameter.
        AwsAccountName:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The name of the Amazon Web Services account in which a finding
            is generated.
        ResourceApplicationName:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The name of the application that is related to a finding.
        ResourceApplicationArn:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The ARN of the application that is related to a finding.
      description: 'A collection of filters that are applied to all active findings
        aggregated by Security Hub.


        You can filter by up to ten finding attributes. For each attribute, you can
        provide up to 20 filter values.'
    AwsSecurityFindingIdentifier:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the finding that was specified by the finding
            provider.
        ProductArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN generated by Security Hub that uniquely identifies
            a product that generates findings. This can be the ARN for a third-party
            product that is integrated with Security Hub, or the ARN for a custom
            integration.
      required:
      - Id
      - ProductArn
      description: Identifies which finding to get the finding history for.
    AwsSecurityFindingIdentifierList:
      type: array
      items:
        $ref: '#/components/schemas/AwsSecurityFindingIdentifier'
    AwsSecurityFindingList:
      type: array
      items:
        $ref: '#/components/schemas/AwsSecurityFinding'
    AwsSnsTopicDetails:
      type: object
      properties:
        KmsMasterKeyId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of an Amazon Web Services managed key for Amazon SNS
            or a customer managed key.
        Subscription:
          allOf:
          - $ref: '#/components/schemas/AwsSnsTopicSubscriptionList'
          description: Subscription is an embedded property that describes the subscription
            endpoints of an Amazon SNS topic.
        TopicName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the Amazon SNS topic.
        Owner:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The subscription's owner.
        SqsSuccessFeedbackRoleArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Indicates successful message delivery status for an Amazon
            SNS topic that is subscribed to an Amazon SQS endpoint.
        SqsFailureFeedbackRoleArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Indicates failed message delivery status for an Amazon SNS
            topic that is subscribed to an Amazon SQS endpoint.
        ApplicationSuccessFeedbackRoleArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Indicates failed message delivery status for an Amazon SNS
            topic that is subscribed to a platform application endpoint.
        FirehoseSuccessFeedbackRoleArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Indicates successful message delivery status for an Amazon
            SNS topic that is subscribed to an Amazon Kinesis Data Firehose endpoint.
        FirehoseFailureFeedbackRoleArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Indicates failed message delivery status for an Amazon SNS
            topic that is subscribed to an Amazon Kinesis Data Firehose endpoint.
        HttpSuccessFeedbackRoleArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Indicates successful message delivery status for an Amazon
            SNS topic that is subscribed to an HTTP endpoint.
        HttpFailureFeedbackRoleArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Indicates failed message delivery status for an Amazon SNS
            topic that is subscribed to an HTTP endpoint.
      description: Provides information about an Amazon SNS topic to which notifications
        can be published.
    AwsSnsTopicSubscription:
      type: object
      properties:
        Endpoint:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The subscription's endpoint (format depends on the protocol).
        Protocol:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The subscription's protocol.
      description: A wrapper type for the attributes of an Amazon SNS subscription.
    AwsSnsTopicSubscriptionList:
      type: array
      items:
        $ref: '#/components/schemas/AwsSnsTopicSubscription'
    AwsSqsQueueDetails:
      type: object
      properties:
        KmsDataKeyReusePeriodSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The length of time, in seconds, for which Amazon SQS can reuse
            a data key to encrypt or decrypt messages before calling KMS again.
        KmsMasterKeyId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of an Amazon Web Services managed key for Amazon SQS
            or a custom KMS key.
        QueueName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the new queue.
        DeadLetterTargetArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the dead-letter queue to which Amazon SQS moves
            messages after the value of `maxReceiveCount` is exceeded.
      description: Data about a queue.
    AwsSsmComplianceSummary:
      type: object
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "The current patch compliance status. Valid values are as follows:\n\
            \n  * `COMPLIANT`\n\n  * `NON_COMPLIANT`\n\n  * `UNSPECIFIED_DATA`"
        CompliantCriticalCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: For the patches that are compliant, the number that have a
            severity of `CRITICAL`.
        CompliantHighCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: For the patches that are compliant, the number that have a
            severity of `HIGH`.
        CompliantMediumCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: For the patches that are compliant, the number that have a
            severity of `MEDIUM`.
        ExecutionType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of execution that was used determine compliance.
        NonCompliantCriticalCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: For the patch items that are noncompliant, the number of items
            that have a severity of `CRITICAL`.
        CompliantInformationalCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: For the patches that are compliant, the number that have a
            severity of `INFORMATIONAL`.
        NonCompliantInformationalCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: For the patches that are noncompliant, the number that have
            a severity of `INFORMATIONAL`.
        CompliantUnspecifiedCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: For the patches that are compliant, the number that have a
            severity of `UNSPECIFIED`.
        NonCompliantLowCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: For the patches that are noncompliant, the number that have
            a severity of `LOW`.
        NonCompliantHighCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: For the patches that are noncompliant, the number that have
            a severity of `HIGH`.
        CompliantLowCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: For the patches that are compliant, the number that have a
            severity of `LOW`.
        ComplianceType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of resource for which the compliance was determined.
            For `AwsSsmPatchCompliance`, `ComplianceType` is `Patch`.
        PatchBaselineId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the patch baseline. The patch baseline lists
            the patches that are approved for installation.
        OverallSeverity:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "The highest severity for the patches. Valid values are as\
            \ follows:\n\n  * `CRITICAL`\n\n  * `HIGH`\n\n  * `MEDIUM`\n\n  * `LOW`\n\
            \n  * `INFORMATIONAL`\n\n  * `UNSPECIFIED`"
        NonCompliantMediumCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: For the patches that are noncompliant, the number that have
            a severity of `MEDIUM`.
        NonCompliantUnspecifiedCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: For the patches that are noncompliant, the number that have
            a severity of `UNSPECIFIED`.
        PatchGroup:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the patch group for which compliance was
            determined. A patch group uses tags to group EC2 instances that should
            have the same patch compliance.
      description: Provides the details about the compliance status for a patch.
    AwsSsmPatch:
      type: object
      properties:
        ComplianceSummary:
          allOf:
          - $ref: '#/components/schemas/AwsSsmComplianceSummary'
          description: The compliance status details for the patch.
      description: Provides details about the compliance for a patch.
    AwsSsmPatchComplianceDetails:
      type: object
      properties:
        Patch:
          allOf:
          - $ref: '#/components/schemas/AwsSsmPatch'
          description: Information about the status of a patch.
      description: Provides information about the state of a patch on an instance
        based on the patch baseline that was used to patch the instance.
    AwsStepFunctionStateMachineDetails:
      type: object
      properties:
        Label:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A user-defined or an auto-generated string that identifies
            a `Map` state. This parameter is present only if the `stateMachineArn`
            specified in input is a qualified state machine ARN.
        LoggingConfiguration:
          allOf:
          - $ref: '#/components/schemas/AwsStepFunctionStateMachineLoggingConfigurationDetails'
          description: Used to set CloudWatch Logs options.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the state machine.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the IAM role used when creating
            this state machine.
        StateMachineArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN that identifies the state machine.
        Status:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The current status of the state machine.
        TracingConfiguration:
          allOf:
          - $ref: '#/components/schemas/AwsStepFunctionStateMachineTracingConfigurationDetails'
          description: Specifies whether X-Ray tracing is enabled.
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of the state machine (STANDARD or EXPRESS).
      description: Provides details about an Step Functions state machine, which is
        a workflow consisting of a series of event- driven steps.
    AwsStepFunctionStateMachineLoggingConfigurationDestinationsCloudWatchLogsLogGroupDetails:
      type: object
      properties:
        LogGroupArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN (ends with `:*`) of the CloudWatch Logs log group to
            which you want your logs emitted.
      description: An object describing a CloudWatch log group. For more information,
        see [ Amazon Web Services::Logs::LogGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loggroup.html)
        in the _CloudFormation User Guide_.
    AwsStepFunctionStateMachineLoggingConfigurationDestinationsDetails:
      type: object
      properties:
        CloudWatchLogsLogGroup:
          allOf:
          - $ref: '#/components/schemas/AwsStepFunctionStateMachineLoggingConfigurationDestinationsCloudWatchLogsLogGroupDetails'
          description: An object describing a CloudWatch Logs log group. For more
            information, see [ Amazon Web Services::Logs::LogGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-loggroup.html)
            in the _CloudFormation User Guide_.
      description: An array of objects that describes where your execution history
        events will be logged.
    AwsStepFunctionStateMachineLoggingConfigurationDestinationsList:
      type: array
      items:
        $ref: '#/components/schemas/AwsStepFunctionStateMachineLoggingConfigurationDestinationsDetails'
    AwsStepFunctionStateMachineLoggingConfigurationDetails:
      type: object
      properties:
        Destinations:
          allOf:
          - $ref: '#/components/schemas/AwsStepFunctionStateMachineLoggingConfigurationDestinationsList'
          description: An array of objects that describes where your execution history
            events will be logged.
        IncludeExecutionData:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Determines whether execution data is included in your log.
            When set to false, data is excluded.
        Level:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Defines which category of execution history events are logged.
      description: The `LoggingConfiguration` data type is used to set CloudWatch
        Logs options.
    AwsStepFunctionStateMachineTracingConfigurationDetails:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: When set to true, X-Ray tracing is enabled.
      description: Specifies whether X-Ray tracing is enabled.
    AwsWafRateBasedRuleDetails:
      type: object
      properties:
        MetricName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the metrics for the rate-based rule.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the rate-based rule.
        RateKey:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The field that WAF uses to determine whether requests are likely
            arriving from single source and are subject to rate monitoring.
        RateLimit:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The maximum number of requests that have an identical value
            for the field specified in `RateKey` that are allowed within a five-minute
            period. If the number of requests exceeds `RateLimit` and the other predicates
            specified in the rule are met, WAF triggers the action for the rule.
        RuleId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The unique identifier for the rate-based rule.
        MatchPredicates:
          allOf:
          - $ref: '#/components/schemas/AwsWafRateBasedRuleMatchPredicateList'
          description: The predicates to include in the rate-based rule.
      description: Details about a rate-based rule for global resources. A rate-based
        rule provides settings to indicate when to allow, block, or count a request.
        Rate-based rules include the number of requests that arrive over a specified
        period of time.
    AwsWafRateBasedRuleMatchPredicate:
      type: object
      properties:
        DataId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The unique identifier for the predicate.
        Negated:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'If set to `true`, then the rule actions are performed on requests
            that match the predicate settings.


            If set to `false`, then the rule actions are performed on all requests
            except those that match the predicate settings.'
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "The type of predicate. Valid values are as follows:\n\n  *\
            \ `ByteMatch`\n\n  * `GeoMatch`\n\n  * `IPMatch`\n\n  * `RegexMatch`\n\
            \n  * `SizeConstraint`\n\n  * `SqlInjectionMatch`\n\n  * `XssMatch`"
      description: A match predicate. A predicate might look for characteristics such
        as specific IP addresses, geographic locations, or sizes.
    AwsWafRateBasedRuleMatchPredicateList:
      type: array
      items:
        $ref: '#/components/schemas/AwsWafRateBasedRuleMatchPredicate'
    AwsWafRegionalRateBasedRuleDetails:
      type: object
      properties:
        MetricName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the metrics for the rate-based rule.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the rate-based rule.
        RateKey:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The field that WAF uses to determine whether requests are likely
            arriving from single source and are subject to rate monitoring.
        RateLimit:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The maximum number of requests that have an identical value
            for the field specified in `RateKey` that are allowed within a five-minute
            period. If the number of requests exceeds `RateLimit` and the other predicates
            specified in the rule are met, WAF triggers the action for the rule.
        RuleId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The unique identifier for the rate-based rule.
        MatchPredicates:
          allOf:
          - $ref: '#/components/schemas/AwsWafRegionalRateBasedRuleMatchPredicateList'
          description: The predicates to include in the rate-based rule.
      description: contains details about a rate-based rule for Regional resources.
        A rate-based rule provides settings to indicate when to allow, block, or count
        a request. Rate-based rules include the number of requests that arrive over
        a specified period of time.
    AwsWafRegionalRateBasedRuleMatchPredicate:
      type: object
      properties:
        DataId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The unique identifier for the predicate.
        Negated:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'If set to `true`, then the rule actions are performed on requests
            that match the predicate settings.


            If set to `false`, then the rule actions are performed on all requests
            except those that match the predicate settings.'
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "The type of predicate. Valid values are as follows:\n\n  *\
            \ `ByteMatch`\n\n  * `GeoMatch`\n\n  * `IPMatch`\n\n  * `RegexMatch`\n\
            \n  * `SizeConstraint`\n\n  * `SqlInjectionMatch`\n\n  * `XssMatch`"
      description: Details for a match predicate. A predicate might look for characteristics
        such as specific IP addresses, geographic locations, or sizes.
    AwsWafRegionalRateBasedRuleMatchPredicateList:
      type: array
      items:
        $ref: '#/components/schemas/AwsWafRegionalRateBasedRuleMatchPredicate'
    AwsWafRegionalRuleDetails:
      type: object
      properties:
        MetricName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A name for the metrics for the rule.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A descriptive name for the rule.
        PredicateList:
          allOf:
          - $ref: '#/components/schemas/AwsWafRegionalRulePredicateList'
          description: Specifies the `ByteMatchSet`, `IPSet`, `SqlInjectionMatchSet`,
            `XssMatchSet`, `RegexMatchSet`, `GeoMatchSet`, and `SizeConstraintSet`
            objects that you want to add to a rule and, for each object, indicates
            whether you want to negate the settings.
        RuleId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the rule.
      description: Provides information about an WAF Regional rule. This rule identifies
        the web requests that you want to allow, block, or count.
    AwsWafRegionalRuleGroupDetails:
      type: object
      properties:
        MetricName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A name for the metrics for this rule group.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The descriptive name of the rule group.
        RuleGroupId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the rule group.
        Rules:
          allOf:
          - $ref: '#/components/schemas/AwsWafRegionalRuleGroupRulesList'
          description: Provides information about the rule statements used to identify
            the web requests that you want to allow, block, or count.
      description: Provides information about an WAF Regional rule group. The rule
        group is a collection of rules for inspecting and controlling web requests.
    AwsWafRegionalRuleGroupRulesActionDetails:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Specifies the `ByteMatchSet`, `IPSet`, `SqlInjectionMatchSet`,
            `XssMatchSet`, `RegexMatchSet`, `GeoMatchSet`, and `SizeConstraintSet`
            objects that you want to add to a rule and, for each object, indicates
            whether you want to negate the settings.
      description: Describes the action that WAF should take on a web request when
        it matches the criteria defined in the rule.
    AwsWafRegionalRuleGroupRulesDetails:
      type: object
      properties:
        Action:
          allOf:
          - $ref: '#/components/schemas/AwsWafRegionalRuleGroupRulesActionDetails'
          description: The action that WAF should take on a web request when it matches
            the criteria defined in the rule.
        Priority:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: If you define more than one rule in a web ACL, WAF evaluates
            each request against the rules in order based on the value of `Priority`.
        RuleId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID for a rule.
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of rule in the rule group.
      description: Provides information about the rules attached to a rule group
    AwsWafRegionalRuleGroupRulesList:
      type: array
      items:
        $ref: '#/components/schemas/AwsWafRegionalRuleGroupRulesDetails'
    AwsWafRegionalRulePredicateList:
      type: array
      items:
        $ref: '#/components/schemas/AwsWafRegionalRulePredicateListDetails'
    AwsWafRegionalRulePredicateListDetails:
      type: object
      properties:
        DataId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A unique identifier for a predicate in a rule, such as `ByteMatchSetId`
            or `IPSetId`.
        Negated:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies if you want WAF to allow, block, or count requests
            based on the settings in the `ByteMatchSet`, `IPSet`, `SqlInjectionMatchSet`,
            `XssMatchSet`, `RegexMatchSet`, `GeoMatchSet`, or `SizeConstraintSet`.
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of predicate in a rule, such as `ByteMatch` or `IPSet`.
      description: Provides details about the `ByteMatchSet`, `IPSet`, `SqlInjectionMatchSet`,
        `XssMatchSet`, `RegexMatchSet`, `GeoMatchSet`, and `SizeConstraintSet` objects
        that you want to add to a rule and, for each object, indicates whether you
        want to negate the settings.
    AwsWafRegionalWebAclDetails:
      type: object
      properties:
        DefaultAction:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The action to perform if none of the rules contained in the
            web ACL match.
        MetricName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A name for the metrics for this web ACL.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A descriptive name for the web ACL.
        RulesList:
          allOf:
          - $ref: '#/components/schemas/AwsWafRegionalWebAclRulesList'
          description: An array that contains the action for each rule in a web ACL,
            the priority of the rule, and the ID of the rule.
        WebAclId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the web ACL.
      description: Provides information about the web access control list (web ACL).
        The web ACL contains the rules that identify the requests that you want to
        allow, block, or count.
    AwsWafRegionalWebAclRulesList:
      type: array
      items:
        $ref: '#/components/schemas/AwsWafRegionalWebAclRulesListDetails'
    AwsWafRegionalWebAclRulesListActionDetails:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: For actions that are associated with a rule, the action that
            WAF takes when a web request matches all conditions in a rule.
      description: The action that WAF takes when a web request matches all conditions
        in the rule, such as allow, block, or count the request.
    AwsWafRegionalWebAclRulesListDetails:
      type: object
      properties:
        Action:
          allOf:
          - $ref: '#/components/schemas/AwsWafRegionalWebAclRulesListActionDetails'
          description: The action that WAF takes when a web request matches all conditions
            in the rule, such as allow, block, or count the request.
        OverrideAction:
          allOf:
          - $ref: '#/components/schemas/AwsWafRegionalWebAclRulesListOverrideActionDetails'
          description: Overrides the rule evaluation result in the rule group.
        Priority:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The order in which WAF evaluates the rules in a web ACL.
        RuleId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of an WAF Regional rule to associate with a web ACL.
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: For actions that are associated with a rule, the action that
            WAF takes when a web request matches all conditions in a rule.
      description: A combination of `ByteMatchSet`, `IPSet`, and/or `SqlInjectionMatchSet`
        objects that identify the web requests that you want to allow, block, or count.
    AwsWafRegionalWebAclRulesListOverrideActionDetails:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Overrides the rule evaluation result in the rule group.
      description: Provides details about the action to use in the place of the action
        that results from the rule group evaluation.
    AwsWafRuleDetails:
      type: object
      properties:
        MetricName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the metrics for this rule.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A descriptive name for the rule.
        PredicateList:
          allOf:
          - $ref: '#/components/schemas/AwsWafRulePredicateList'
          description: Specifies the `ByteMatchSet`, `IPSet`, `SqlInjectionMatchSet`,
            `XssMatchSet`, `RegexMatchSet`, `GeoMatchSet`, and `SizeConstraintSet`
            objects that you want to add to a rule and, for each object, indicates
            whether you want to negate the settings.
        RuleId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the WAF rule.
      description: Provides information about a WAF rule. This rule specifies the
        web requests that you want to allow, block, or count.
    AwsWafRuleGroupDetails:
      type: object
      properties:
        MetricName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the metrics for this rule group.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the rule group.
        RuleGroupId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the rule group.
        Rules:
          allOf:
          - $ref: '#/components/schemas/AwsWafRuleGroupRulesList'
          description: Provides information about the rules attached to the rule group.
            These rules identify the web requests that you want to allow, block, or
            count.
      description: Provides information about an WAF rule group. A rule group is a
        collection of rules for inspecting and controlling web requests.
    AwsWafRuleGroupRulesActionDetails:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The action that WAF should take on a web request when it matches
            the rule's statement.
      description: Provides information about what action WAF should take on a web
        request when it matches the criteria defined in the rule.
    AwsWafRuleGroupRulesDetails:
      type: object
      properties:
        Action:
          allOf:
          - $ref: '#/components/schemas/AwsWafRuleGroupRulesActionDetails'
          description: Provides information about what action WAF should take on a
            web request when it matches the criteria defined in the rule.
        Priority:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: If you define more than one rule in a web ACL, WAF evaluates
            each request against the rules in order based on the value of `Priority`.
        RuleId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The rule ID for a rule.
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of rule.
      description: Provides information about the rules attached to the rule group.
        These rules identify the web requests that you want to allow, block, or count.
    AwsWafRuleGroupRulesList:
      type: array
      items:
        $ref: '#/components/schemas/AwsWafRuleGroupRulesDetails'
    AwsWafRulePredicateList:
      type: array
      items:
        $ref: '#/components/schemas/AwsWafRulePredicateListDetails'
    AwsWafRulePredicateListDetails:
      type: object
      properties:
        DataId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A unique identifier for a predicate in a rule, such as `ByteMatchSetId`
            or `IPSetId`.
        Negated:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies if you want WAF to allow, block, or count requests
            based on the settings in the `ByteMatchSet`, `IPSet`, `SqlInjectionMatchSet`,
            `XssMatchSet`, `RegexMatchSet`, `GeoMatchSet`, or `SizeConstraintSet`.
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of predicate in a rule, such as `ByteMatch` or `IPSet`.
      description: Provides details about the `ByteMatchSet`, `IPSet`, `SqlInjectionMatchSet`,
        `XssMatchSet`, `RegexMatchSet`, `GeoMatchSet`, and `SizeConstraintSet` objects
        that you want to add to a rule and, for each object, indicates whether you
        want to negate the settings.
    AwsWafWebAclDetails:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A friendly name or description of the web ACL. You can't change
            the name of a web ACL after you create it.
        DefaultAction:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The action to perform if none of the rules contained in the
            web ACL match.
        Rules:
          allOf:
          - $ref: '#/components/schemas/AwsWafWebAclRuleList'
          description: An array that contains the action for each rule in a web ACL,
            the priority of the rule, and the ID of the rule.
        WebAclId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A unique identifier for a web ACL.
      description: Provides information about an WAF web access control list (web
        ACL).
    AwsWafWebAclRule:
      type: object
      properties:
        Action:
          allOf:
          - $ref: '#/components/schemas/WafAction'
          description: Specifies the action that CloudFront or WAF takes when a web
            request matches the conditions in the rule.
        ExcludedRules:
          allOf:
          - $ref: '#/components/schemas/WafExcludedRuleList'
          description: Rules to exclude from a rule group.
        OverrideAction:
          allOf:
          - $ref: '#/components/schemas/WafOverrideAction'
          description: 'Use the `OverrideAction` to test your `RuleGroup`.


            Any rule in a `RuleGroup` can potentially block a request. If you set
            the `OverrideAction` to `None`, the `RuleGroup` blocks a request if any
            individual rule in the `RuleGroup` matches the request and is configured
            to block that request.


            However, if you first want to test the `RuleGroup`, set the `OverrideAction`
            to `Count`. The `RuleGroup` then overrides any block action specified
            by individual rules contained within the group. Instead of blocking matching
            requests, those requests are counted.


            `ActivatedRule`|`OverrideAction` applies only when updating or adding
            a `RuleGroup` to a web ACL. In this case you don''t use `ActivatedRule`
            `Action`. For all other update requests, `ActivatedRule` `Action` is used
            instead of `ActivatedRule` `OverrideAction`.'
        Priority:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Specifies the order in which the rules in a web ACL are evaluated.
            Rules with a lower value for `Priority` are evaluated before rules with
            a higher value. The value must be a unique integer. If you add multiple
            rules to a web ACL, the values don't need to be consecutive.
        RuleId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier for a rule.
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The rule type.


            Valid values: `REGULAR` | `RATE_BASED` | `GROUP`


            The default is `REGULAR`.'
      description: Details for a rule in an WAF web ACL.
    AwsWafWebAclRuleList:
      type: array
      items:
        $ref: '#/components/schemas/AwsWafWebAclRule'
    AwsWafv2ActionAllowDetails:
      type: object
      properties:
        CustomRequestHandling:
          allOf:
          - $ref: '#/components/schemas/AwsWafv2CustomRequestHandlingDetails'
          description: Defines custom handling for the web request. For information
            about customizing web requests and responses, see [Customizing web requests
            and responses in WAF](https://docs.aws.amazon.com/waf/latest/developerguide/waf-custom-request-response.html)
            in the _WAF Developer Guide._.
      description: Specifies that WAF should allow the request and optionally defines
        additional custom handling for the request.
    AwsWafv2ActionBlockDetails:
      type: object
      properties:
        CustomResponse:
          allOf:
          - $ref: '#/components/schemas/AwsWafv2CustomResponseDetails'
          description: Defines a custom response for the web request. For information,
            see [Customizing web requests and responses in WAF](https://docs.aws.amazon.com/waf/latest/developerguide/waf-custom-request-response.html)
            in the _WAF Developer Guide._.
      description: Specifies that WAF should block the request and optionally defines
        additional custom handling for the response to the web request.
    AwsWafv2CustomHttpHeader:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the custom header.
        Value:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The value of the custom header.
      description: A custom header for custom request and response handling.
    AwsWafv2CustomRequestHandlingDetails:
      type: object
      properties:
        InsertHeaders:
          allOf:
          - $ref: '#/components/schemas/AwsWafv2InsertHeadersList'
          description: The HTTP headers to insert into the request.
      description: Custom request handling behavior that inserts custom headers into
        a web request. WAF uses custom request handling when the rule action doesn't
        block the request.
    AwsWafv2CustomResponseDetails:
      type: object
      properties:
        CustomResponseBodyKey:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: References the response body that you want WAF to return to
            the web request client. You can define a custom response for a rule action
            or a default web ACL action that is set to block.
        ResponseCode:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The HTTP status code to return to the client. For a list of
            status codes that you can use in your custom responses, see [Supported
            status codes for custom response](https://docs.aws.amazon.com/waf/latest/developerguide/customizing-the-response-status-codes.html)
            in the _WAF Developer Guide._
        ResponseHeaders:
          allOf:
          - $ref: '#/components/schemas/AwsWafv2InsertHeadersList'
          description: The HTTP headers to use in the response.
      description: A custom response to send to the client. You can define a custom
        response for rule actions and default web ACL actions that are set to block.
    AwsWafv2InsertHeadersList:
      type: array
      items:
        $ref: '#/components/schemas/AwsWafv2CustomHttpHeader'
    AwsWafv2RuleGroupDetails:
      type: object
      properties:
        Capacity:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The web ACL capacity units (WCUs) required for this rule group.
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A description of the rule group that helps with identification.
        Id:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A unique identifier for the rule group.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the rule group. You cannot change the name of a
            rule group after you create it.
        Arn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the entity.
        Rules:
          allOf:
          - $ref: '#/components/schemas/AwsWafv2RulesList'
          description: The Rule statements used to identify the web requests that
            you want to allow, block, or count. Each rule includes one top-level statement
            that WAF uses to identify matching web requests, and parameters that govern
            how WAF handles them.
        Scope:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Specifies whether the rule group is for an Amazon CloudFront
            distribution or for a regional application. A regional application can
            be an Application Load Balancer (ALB), an Amazon API Gateway REST API,
            an AppSync GraphQL API, or an Amazon Cognito user pool.
        VisibilityConfig:
          allOf:
          - $ref: '#/components/schemas/AwsWafv2VisibilityConfigDetails'
          description: Defines and enables Amazon CloudWatch metrics and web request
            sample collection.
      description: Details about an WAFv2 rule group.
    AwsWafv2RulesActionCaptchaDetails:
      type: object
      properties:
        CustomRequestHandling:
          allOf:
          - $ref: '#/components/schemas/AwsWafv2CustomRequestHandlingDetails'
          description: Defines custom handling for the web request, used when the
            CAPTCHA inspection determines that the request's token is valid and unexpired.
            For more information, see [Customizing web requests and responses in WAF](https://docs.aws.amazon.com/waf/latest/developerguide/waf-custom-request-response.html)
            in the _WAF Developer Guide._.
      description: Specifies that WAF should run a CAPTCHA check against the request.
    AwsWafv2RulesActionCountDetails:
      type: object
      properties:
        CustomRequestHandling:
          allOf:
          - $ref: '#/components/schemas/AwsWafv2CustomRequestHandlingDetails'
          description: Defines custom handling for the web request. For more information,
            see [Customizing web requests and responses in WAF](https://docs.aws.amazon.com/waf/latest/developerguide/waf-custom-request-response.html)
            in the _WAF Developer Guide._.
      description: Specifies that WAF should count the request.
    AwsWafv2RulesActionDetails:
      type: object
      properties:
        Allow:
          allOf:
          - $ref: '#/components/schemas/AwsWafv2ActionAllowDetails'
          description: Instructs WAF to allow the web request.
        Block:
          allOf:
          - $ref: '#/components/schemas/AwsWafv2ActionBlockDetails'
          description: Instructs WAF to block the web request.
        Captcha:
          allOf:
          - $ref: '#/components/schemas/AwsWafv2RulesActionCaptchaDetails'
          description: Instructs WAF to run a CAPTCHA check against the web request.
        Count:
          allOf:
          - $ref: '#/components/schemas/AwsWafv2RulesActionCountDetails'
          description: Instructs WAF to count the web request and then continue evaluating
            the request using the remaining rules in the web ACL.
      description: The action that WAF should take on a web request when it matches
        a rule's statement. Settings at the web ACL level can override the rule action
        setting.
    AwsWafv2RulesDetails:
      type: object
      properties:
        Action:
          allOf:
          - $ref: '#/components/schemas/AwsWafv2RulesActionDetails'
          description: The action that WAF should take on a web request when it matches
            the rule statement. Settings at the web ACL level can override the rule
            action setting.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the rule.
        OverrideAction:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The action to use in the place of the action that results from
            the rule group evaluation.
        Priority:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: If you define more than one Rule in a WebACL, WAF evaluates
            each request against the Rules in order based on the value of `Priority`.
            WAF processes rules with lower priority first. The priorities don't need
            to be consecutive, but they must all be different.
        VisibilityConfig:
          allOf:
          - $ref: '#/components/schemas/AwsWafv2VisibilityConfigDetails'
          description: Defines and enables Amazon CloudWatch metrics and web request
            sample collection.
      description: Provides details about rules in a rule group. A rule identifies
        web requests that you want to allow, block, or count. Each rule includes one
        top-level Statement that WAF uses to identify matching web requests, and parameters
        that govern how WAF handles them.
    AwsWafv2RulesList:
      type: array
      items:
        $ref: '#/components/schemas/AwsWafv2RulesDetails'
    AwsWafv2VisibilityConfigDetails:
      type: object
      properties:
        CloudWatchMetricsEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A boolean indicating whether the associated resource sends
            metrics to Amazon CloudWatch. For the list of available metrics, see [WAF
            metrics and dimensions](https://docs.aws.amazon.com/waf/latest/developerguide/monitoring-cloudwatch.html#waf-metrics)
            in the _WAF Developer Guide_.
        MetricName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A name of the Amazon CloudWatch metric.
        SampledRequestsEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A boolean indicating whether WAF should store a sampling of
            the web requests that match the rules. You can view the sampled requests
            through the WAF console.
      description: Defines and enables Amazon CloudWatch metrics and web request sample
        collection.
    AwsWafv2WebAclActionDetails:
      type: object
      properties:
        Allow:
          allOf:
          - $ref: '#/components/schemas/AwsWafv2ActionAllowDetails'
          description: Specifies that WAF should allow requests by default.
        Block:
          allOf:
          - $ref: '#/components/schemas/AwsWafv2ActionBlockDetails'
          description: Specifies that WAF should block requests by default.
      description: Specifies the action that Amazon CloudFront or WAF takes when a
        web request matches the conditions in the rule.
    AwsWafv2WebAclCaptchaConfigDetails:
      type: object
      properties:
        ImmunityTimeProperty:
          allOf:
          - $ref: '#/components/schemas/AwsWafv2WebAclCaptchaConfigImmunityTimePropertyDetails'
          description: Determines how long a CAPTCHA timestamp in the token remains
            valid after the client successfully solves a CAPTCHA puzzle.
      description: Specifies how WAF should handle CAPTCHA evaluations for rules that
        don't have their own `CaptchaConfig` settings.
    AwsWafv2WebAclCaptchaConfigImmunityTimePropertyDetails:
      type: object
      properties:
        ImmunityTime:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The amount of time, in seconds, that a CAPTCHA or challenge
            timestamp is considered valid by WAF.
      description: Used for CAPTCHA and challenge token settings. Determines how long
        a CAPTCHA or challenge timestamp remains valid after WAF updates it for a
        successful CAPTCHA or challenge response.
    AwsWafv2WebAclDetails:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the web ACL.
        Arn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the web ACL that you want
            to associate with the resource.
        ManagedbyFirewallManager:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether this web ACL is managed by Firewall Manager.
        Id:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A unique identifier for the web ACL.
        Capacity:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The web ACL capacity units (WCUs) currently being used by this
            web ACL.
        CaptchaConfig:
          allOf:
          - $ref: '#/components/schemas/AwsWafv2WebAclCaptchaConfigDetails'
          description: Specifies how WAF should handle CAPTCHA evaluations for rules
            that don't have their own `CaptchaConfig` settings.
        DefaultAction:
          allOf:
          - $ref: '#/components/schemas/AwsWafv2WebAclActionDetails'
          description: The action to perform if none of the Rules contained in the
            web ACL match.
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A description of the web ACL that helps with identification.
        Rules:
          allOf:
          - $ref: '#/components/schemas/AwsWafv2RulesList'
          description: The Rule statements used to identify the web requests that
            you want to allow, block, or count. Each rule includes one top-level statement
            that WAF uses to identify matching web requests, and parameters that govern
            how WAF handles them.
        VisibilityConfig:
          allOf:
          - $ref: '#/components/schemas/AwsWafv2VisibilityConfigDetails'
          description: Defines and enables Amazon CloudWatch metrics and web request
            sample collection.
      description: Details about an WAFv2 web Access Control List (ACL).
    AwsXrayEncryptionConfigDetails:
      type: object
      properties:
        KeyId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the KMS key that is used for encryption.
            Provided if `Type` is `KMS`.
        Status:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The current status of the encryption configuration. Valid
            values are `ACTIVE` or `UPDATING`.


            When `Status` is equal to `UPDATING`, X-Ray might use both the old and
            new encryption.'
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of encryption. `KMS` indicates that the encryption
            uses KMS keys. `NONE` indicates the default encryption.
      description: Information about the encryption configuration for X-Ray.
    BatchDeleteAutomationRulesRequest:
      type: object
      properties:
        AutomationRulesArns:
          allOf:
          - $ref: '#/components/schemas/AutomationRulesArnsList'
          description: A list of Amazon Resource Names (ARNs) for the rules that are
            to be deleted.
      required:
      - AutomationRulesArns
    BatchDeleteAutomationRulesResponse:
      type: object
      properties:
        ProcessedAutomationRules:
          allOf:
          - $ref: '#/components/schemas/AutomationRulesArnsList'
          description: A list of properly processed rule ARNs.
        UnprocessedAutomationRules:
          allOf:
          - $ref: '#/components/schemas/UnprocessedAutomationRulesList'
          description: A list of objects containing `RuleArn`, `ErrorCode`, and `ErrorMessage`.
            This parameter tells you which automation rules the request didn't delete
            and why.
    BatchDisableStandardsRequest:
      type: object
      properties:
        StandardsSubscriptionArns:
          allOf:
          - $ref: '#/components/schemas/StandardsSubscriptionArns'
          description: The ARNs of the standards subscriptions to disable.
      required:
      - StandardsSubscriptionArns
    BatchDisableStandardsResponse:
      type: object
      properties:
        StandardsSubscriptions:
          allOf:
          - $ref: '#/components/schemas/StandardsSubscriptions'
          description: The details of the standards subscriptions that were disabled.
    BatchEnableStandardsRequest:
      type: object
      properties:
        StandardsSubscriptionRequests:
          allOf:
          - $ref: '#/components/schemas/StandardsSubscriptionRequests'
          description: The list of standards checks to enable.
      required:
      - StandardsSubscriptionRequests
    BatchEnableStandardsResponse:
      type: object
      properties:
        StandardsSubscriptions:
          allOf:
          - $ref: '#/components/schemas/StandardsSubscriptions'
          description: The details of the standards subscriptions that were enabled.
    BatchGetAutomationRulesRequest:
      type: object
      properties:
        AutomationRulesArns:
          allOf:
          - $ref: '#/components/schemas/AutomationRulesArnsList'
          description: A list of rule ARNs to get details for.
      required:
      - AutomationRulesArns
    BatchGetAutomationRulesResponse:
      type: object
      properties:
        Rules:
          allOf:
          - $ref: '#/components/schemas/AutomationRulesConfigList'
          description: A list of rule details for the provided rule ARNs.
        UnprocessedAutomationRules:
          allOf:
          - $ref: '#/components/schemas/UnprocessedAutomationRulesList'
          description: A list of objects containing `RuleArn`, `ErrorCode`, and `ErrorMessage`.
            This parameter tells you which automation rules the request didn't retrieve
            and why.
    BatchGetConfigurationPolicyAssociationsRequest:
      type: object
      properties:
        ConfigurationPolicyAssociationIdentifiers:
          allOf:
          - $ref: '#/components/schemas/ConfigurationPolicyAssociationsList'
          description: Specifies one or more target account IDs, organizational unit
            (OU) IDs, or the root ID to retrieve associations for.
      required:
      - ConfigurationPolicyAssociationIdentifiers
    BatchGetConfigurationPolicyAssociationsResponse:
      type: object
      properties:
        ConfigurationPolicyAssociations:
          allOf:
          - $ref: '#/components/schemas/ConfigurationPolicyAssociationList'
          description: Describes associations for the target accounts, OUs, or the
            root.
        UnprocessedConfigurationPolicyAssociations:
          allOf:
          - $ref: '#/components/schemas/UnprocessedConfigurationPolicyAssociationList'
          description: An array of configuration policy associations, one for each
            configuration policy association identifier, that was specified in the
            request but couldn’t be processed due to an error.
    BatchGetSecurityControlsRequest:
      type: object
      properties:
        SecurityControlIds:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: A list of security controls (identified with `SecurityControlId`,
            `SecurityControlArn`, or a mix of both parameters). The security control
            ID or Amazon Resource Name (ARN) is the same across standards.
      required:
      - SecurityControlIds
    BatchGetSecurityControlsResponse:
      type: object
      properties:
        SecurityControls:
          allOf:
          - $ref: '#/components/schemas/SecurityControls'
          description: An array that returns the identifier, Amazon Resource Name
            (ARN), and other details about a security control. The same information
            is returned whether the request includes `SecurityControlId` or `SecurityControlArn`.
        UnprocessedIds:
          allOf:
          - $ref: '#/components/schemas/UnprocessedSecurityControls'
          description: A security control (identified with `SecurityControlId`, `SecurityControlArn`,
            or a mix of both parameters) for which details cannot be returned.
      required:
      - SecurityControls
    BatchGetStandardsControlAssociationsRequest:
      type: object
      properties:
        StandardsControlAssociationIds:
          allOf:
          - $ref: '#/components/schemas/StandardsControlAssociationIds'
          description: An array with one or more objects that includes a security
            control (identified with `SecurityControlId`, `SecurityControlArn`, or
            a mix of both parameters) and the Amazon Resource Name (ARN) of a standard.
            This field is used to query the enablement status of a control in a specified
            standard. The security control ID or ARN is the same across standards.
      required:
      - StandardsControlAssociationIds
    BatchGetStandardsControlAssociationsResponse:
      type: object
      properties:
        StandardsControlAssociationDetails:
          allOf:
          - $ref: '#/components/schemas/StandardsControlAssociationDetails'
          description: Provides the enablement status of a security control in a specified
            standard and other details for the control in relation to the specified
            standard.
        UnprocessedAssociations:
          allOf:
          - $ref: '#/components/schemas/UnprocessedStandardsControlAssociations'
          description: A security control (identified with `SecurityControlId`, `SecurityControlArn`,
            or a mix of both parameters) whose enablement status in a specified standard
            cannot be returned.
      required:
      - StandardsControlAssociationDetails
    BatchImportFindingsRequest:
      type: object
      properties:
        Findings:
          allOf:
          - $ref: '#/components/schemas/BatchImportFindingsRequestFindingList'
          description: A list of findings to import. To successfully import a finding,
            it must follow the [Amazon Web Services Security Finding Format](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-findings-format.html).
            Maximum of 100 findings per request.
      required:
      - Findings
    BatchImportFindingsRequestFindingList:
      type: array
      items:
        $ref: '#/components/schemas/AwsSecurityFinding'
    BatchImportFindingsResponse:
      type: object
      properties:
        FailedCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of findings that failed to import.
        SuccessCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of findings that were successfully imported.
        FailedFindings:
          allOf:
          - $ref: '#/components/schemas/ImportFindingsErrorList'
          description: The list of findings that failed to import.
      required:
      - FailedCount
      - SuccessCount
    BatchUpdateAutomationRulesRequest:
      type: object
      properties:
        UpdateAutomationRulesRequestItems:
          allOf:
          - $ref: '#/components/schemas/UpdateAutomationRulesRequestItemsList'
          description: An array of ARNs for the rules that are to be updated. Optionally,
            you can also include `RuleStatus` and `RuleOrder`.
      required:
      - UpdateAutomationRulesRequestItems
    BatchUpdateAutomationRulesResponse:
      type: object
      properties:
        ProcessedAutomationRules:
          allOf:
          - $ref: '#/components/schemas/AutomationRulesArnsList'
          description: A list of properly processed rule ARNs.
        UnprocessedAutomationRules:
          allOf:
          - $ref: '#/components/schemas/UnprocessedAutomationRulesList'
          description: A list of objects containing `RuleArn`, `ErrorCode`, and `ErrorMessage`.
            This parameter tells you which automation rules the request didn't update
            and why.
    BatchUpdateFindingsRequest:
      type: object
      properties:
        FindingIdentifiers:
          allOf:
          - $ref: '#/components/schemas/AwsSecurityFindingIdentifierList'
          description: 'The list of findings to update. `BatchUpdateFindings` can
            be used to update up to 100 findings at a time.


            For each finding, the list provides the finding identifier and the ARN
            of the finding provider.'
        Note:
          $ref: '#/components/schemas/NoteUpdate'
        Severity:
          allOf:
          - $ref: '#/components/schemas/SeverityUpdate'
          description: Used to update the finding severity.
        VerificationState:
          allOf:
          - $ref: '#/components/schemas/VerificationState'
          description: "Indicates the veracity of a finding.\n\nThe available values\
            \ for `VerificationState` are as follows.\n\n  * `UNKNOWN` – The default\
            \ disposition of a security finding\n\n  * `TRUE_POSITIVE` – The security\
            \ finding is confirmed\n\n  * `FALSE_POSITIVE` – The security finding\
            \ was determined to be a false alarm\n\n  * `BENIGN_POSITIVE` – A special\
            \ case of `TRUE_POSITIVE` where the finding doesn't pose any threat, is\
            \ expected, or both"
        Confidence:
          allOf:
          - $ref: '#/components/schemas/RatioScale'
          description: 'The updated value for the finding confidence. Confidence is
            defined as the likelihood that a finding accurately identifies the behavior
            or issue that it was intended to identify.


            Confidence is scored on a 0-100 basis using a ratio scale, where 0 means
            zero percent confidence and 100 means 100 percent confidence.'
        Criticality:
          allOf:
          - $ref: '#/components/schemas/RatioScale'
          description: 'The updated value for the level of importance assigned to
            the resources associated with the findings.


            A score of 0 means that the underlying resources have no criticality,
            and a score of 100 is reserved for the most critical resources.'
        Types:
          allOf:
          - $ref: '#/components/schemas/TypeList'
          description: "One or more finding types in the format of namespace/category/classifier\
            \ that classify a finding.\n\nValid namespace values are as follows.\n\
            \n  * Software and Configuration Checks\n\n  * TTPs\n\n  * Effects\n\n\
            \  * Unusual Behaviors\n\n  * Sensitive Data Identifications"
        UserDefinedFields:
          allOf:
          - $ref: '#/components/schemas/FieldMap'
          description: A list of name/value string pairs associated with the finding.
            These are custom, user-defined fields added to a finding.
        Workflow:
          allOf:
          - $ref: '#/components/schemas/WorkflowUpdate'
          description: 'Used to update the workflow status of a finding.


            The workflow status indicates the progress of the investigation into the
            finding.'
        RelatedFindings:
          allOf:
          - $ref: '#/components/schemas/RelatedFindingList'
          description: A list of findings that are related to the updated findings.
      required:
      - FindingIdentifiers
    BatchUpdateFindingsResponse:
      type: object
      properties:
        ProcessedFindings:
          allOf:
          - $ref: '#/components/schemas/AwsSecurityFindingIdentifierList'
          description: The list of findings that were updated successfully.
        UnprocessedFindings:
          allOf:
          - $ref: '#/components/schemas/BatchUpdateFindingsUnprocessedFindingsList'
          description: The list of findings that were not updated.
      required:
      - ProcessedFindings
      - UnprocessedFindings
    BatchUpdateFindingsUnprocessedFinding:
      type: object
      properties:
        FindingIdentifier:
          allOf:
          - $ref: '#/components/schemas/AwsSecurityFindingIdentifier'
          description: The identifier of the finding that was not updated.
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "The code associated with the error. Possible values are:\n\
            \n  * `ConcurrentUpdateError` \\- Another request attempted to update\
            \ the finding while this request was being processed. This error may also\
            \ occur if you call [ `BatchUpdateFindings` ](https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_BatchUpdateFindings.html)\
            \ and [ `BatchImportFindings` ](https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_BatchImportFindings.html)\
            \ at the same time.\n\n  * `DuplicatedFindingIdentifier` \\- The request\
            \ included two or more findings with the same `FindingIdentifier`.\n\n\
            \  * `FindingNotFound` \\- The `FindingIdentifier` included in the request\
            \ did not match an existing finding.\n\n  * `FindingSizeExceeded` \\-\
            \ The finding size was greater than the permissible value of 240 KB.\n\
            \n  * `InternalFailure` \\- An internal service failure occurred when\
            \ updating the finding.\n\n  * `InvalidInput` \\- The finding update contained\
            \ an invalid value that did not satisfy the [Amazon Web Services Security\
            \ Finding Format](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-findings-format.html)\
            \ syntax."
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "The message associated with the error. Possible values are:\n\
            \n  * `Concurrent finding updates detected`\n\n  * `Finding Identifier\
            \ is duplicated`\n\n  * `Finding Not Found`\n\n  * `Finding size exceeded\
            \ 240 KB`\n\n  * `Internal service failure`\n\n  * `Invalid Input`"
      required:
      - FindingIdentifier
      - ErrorCode
      - ErrorMessage
      description: A finding from a `BatchUpdateFindings` request that Security Hub
        was unable to update.
    BatchUpdateFindingsUnprocessedFindingsList:
      type: array
      items:
        $ref: '#/components/schemas/BatchUpdateFindingsUnprocessedFinding'
    BatchUpdateStandardsControlAssociationsRequest:
      type: object
      properties:
        StandardsControlAssociationUpdates:
          allOf:
          - $ref: '#/components/schemas/StandardsControlAssociationUpdates'
          description: 'Updates the enablement status of a security control in a specified
            standard.


            Calls to this operation return a `RESOURCE_NOT_FOUND_EXCEPTION` error
            when the standard subscription for the control has `StandardsControlsUpdatable`
            value `NOT_READY_FOR_UPDATES`.'
      required:
      - StandardsControlAssociationUpdates
    BatchUpdateStandardsControlAssociationsResponse:
      type: object
      properties:
        UnprocessedAssociationUpdates:
          allOf:
          - $ref: '#/components/schemas/UnprocessedStandardsControlAssociationUpdates'
          description: A security control (identified with `SecurityControlId`, `SecurityControlArn`,
            or a mix of both parameters) whose enablement status in a specified standard
            couldn't be updated.
    Boolean:
      type: boolean
    BooleanConfigurationOptions:
      type: object
      properties:
        DefaultValue:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: The Security Hub default value for a boolean parameter.
      description: The options for customizing a security control parameter with a
        boolean. For a boolean parameter, the options are `true` and `false`.
    BooleanFilter:
      type: object
      properties:
        Value:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: The value of the boolean.
      description: Boolean filter for querying findings.
    BooleanFilterList:
      type: array
      items:
        $ref: '#/components/schemas/BooleanFilter'
    CategoryList:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
    Cell:
      type: object
      properties:
        Column:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The column number of the column that contains the data. For
            a Microsoft Excel workbook, the column number corresponds to the alphabetical
            column identifiers. For example, a value of 1 for Column corresponds to
            the A column in the workbook.
        Row:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The row number of the row that contains the data.
        ColumnName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the column that contains the data.
        CellReference:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: For a Microsoft Excel workbook, provides the location of the
            cell, as an absolute cell reference, that contains the data. For example,
            Sheet2!C5 for cell C5 on Sheet2.
      description: An occurrence of sensitive data detected in a Microsoft Excel workbook,
        comma-separated value (CSV) file, or tab-separated value (TSV) file.
    Cells:
      type: array
      items:
        $ref: '#/components/schemas/Cell'
    CidrBlockAssociation:
      type: object
      properties:
        AssociationId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The association ID for the IPv4 CIDR block.
        CidrBlock:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The IPv4 CIDR block.
        CidrBlockState:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Information about the state of the IPv4 CIDR block.
      description: An IPv4 CIDR block association.
    CidrBlockAssociationList:
      type: array
      items:
        $ref: '#/components/schemas/CidrBlockAssociation'
    City:
      type: object
      properties:
        CityName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the city.
      description: Information about a city.
    ClassificationResult:
      type: object
      properties:
        MimeType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of content that the finding applies to.
        SizeClassified:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The total size in bytes of the affected data.
        AdditionalOccurrences:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether there are additional occurrences of sensitive
            data that are not included in the finding. This occurs when the number
            of occurrences exceeds the maximum that can be included.
        Status:
          allOf:
          - $ref: '#/components/schemas/ClassificationStatus'
          description: The current status of the sensitive data detection.
        SensitiveData:
          allOf:
          - $ref: '#/components/schemas/SensitiveDataResultList'
          description: Provides details about sensitive data that was identified based
            on built-in configuration.
        CustomDataIdentifiers:
          allOf:
          - $ref: '#/components/schemas/CustomDataIdentifiersResult'
          description: Provides details about sensitive data that was identified based
            on customer-defined configuration.
      description: Details about the sensitive data that was detected on the resource.
    ClassificationStatus:
      type: object
      properties:
        Code:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The code that represents the status of the sensitive data detection.
        Reason:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A longer description of the current status of the sensitive
            data detection.
      description: Provides details about the current status of the sensitive data
        detection.
    CloudWatchLogsLogGroupArnConfigDetails:
      type: object
      properties:
        CloudWatchLogsLogGroupArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the CloudWatch Logs log group that Route 53 is publishing
            logs to.
        HostedZoneId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the hosted zone that CloudWatch Logs is logging queries
            for.
        Id:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID for a DNS query logging configuration.
      description: The Amazon Resource Name (ARN) and other details of the Amazon
        CloudWatch Logs log group that Amazon Route 53 is publishing logs to.
    CodeVulnerabilitiesFilePath:
      type: object
      properties:
        EndLine:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The line number of the last line of code in which the vulnerability
            is located.
        FileName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the file in which the code vulnerability is located.
        FilePath:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The file path to the code in which the vulnerability is located.
        StartLine:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The line number of the first line of code in which the vulnerability
            is located.
      description: Provides details about where a code vulnerability is located in
        your Lambda function.
    Compliance:
      type: object
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/ComplianceStatus'
          description: "Typically summarizes the result of a control check.\n\nFor\
            \ Security Hub controls, valid values for `Status` are as follows.\n\n\
            \  *     * `PASSED` \\- Standards check passed for all evaluated resources.\n\
            \n    * `WARNING` \\- Some information is missing or this check is not\
            \ supported for your configuration.\n\n    * `FAILED` \\- Standards check\
            \ failed for at least one evaluated resource.\n\n    * `NOT_AVAILABLE`\
            \ \\- Check could not be performed due to a service outage, API error,\
            \ or because the result of the Config evaluation was `NOT_APPLICABLE`.\
            \ If the Config evaluation result was `NOT_APPLICABLE` for a Security\
            \ Hub control, Security Hub automatically archives the finding after 3\
            \ days."
        RelatedRequirements:
          allOf:
          - $ref: '#/components/schemas/RelatedRequirementsList'
          description: 'Typically provides the industry or regulatory framework requirements
            that are related to a control. The check for that control is aligned with
            these requirements.


            Array Members: Maximum number of 32 items.'
        StatusReasons:
          allOf:
          - $ref: '#/components/schemas/StatusReasonsList'
          description: Typically used to provide a list of reasons for the value of
            `Status`.
        SecurityControlId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Typically provides the unique identifier of a control across
            standards. For Security Hub controls, this field consists of an Amazon
            Web Services service and a unique number, such as `APIGateway.5`.
        AssociatedStandards:
          allOf:
          - $ref: '#/components/schemas/AssociatedStandardsList'
          description: Typically provides an array of enabled security standards in
            which a security control is currently enabled.
        SecurityControlParameters:
          allOf:
          - $ref: '#/components/schemas/SecurityControlParametersList'
          description: Typically an object that includes security control parameter
            names and values.
      description: This object typically provides details about a control finding,
        such as applicable standards and the status of control checks. While finding
        providers can add custom content in `Compliance` object fields, they are typically
        used to review details of Security Hub control findings.
    ComplianceStatus:
      type: string
      enum:
      - PASSED
      - WARNING
      - FAILED
      - NOT_AVAILABLE
    ConfigurationOptions:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/IntegerConfigurationOptions'
        description: |-
          The options for customizing a security control parameter that is an integer.
      - allOf:
        - $ref: '#/components/schemas/IntegerListConfigurationOptions'
        description: |-
          The options for customizing a security control parameter that is a list of integers.
      - allOf:
        - $ref: '#/components/schemas/DoubleConfigurationOptions'
        description: |-
          The options for customizing a security control parameter that is a double.
      - allOf:
        - $ref: '#/components/schemas/StringConfigurationOptions'
        description: |-
          The options for customizing a security control parameter that is a string data type.
      - allOf:
        - $ref: '#/components/schemas/StringListConfigurationOptions'
        description: |-
          The options for customizing a security control parameter that is a list of strings.
      - allOf:
        - $ref: '#/components/schemas/BooleanConfigurationOptions'
        description: |-
          The options for customizing a security control parameter that is a boolean. For a boolean parameter, the options are `true` and `false`.
      - allOf:
        - $ref: '#/components/schemas/EnumConfigurationOptions'
        description: |-
          The options for customizing a security control parameter that is an enum.
      - allOf:
        - $ref: '#/components/schemas/EnumListConfigurationOptions'
        description: |-
          The options for customizing a security control parameter that is a list of enums.
      description: |-
        The options for customizing a security control parameter.
    ConfigurationPolicyAssociation:
      type: object
      properties:
        Target:
          allOf:
          - $ref: '#/components/schemas/Target'
          description: The target account, organizational unit, or the root.
      description: Provides details about the association between an Security Hub
        configuration and a target account, organizational unit, or the root. An association
        can exist between a target and a configuration policy, or between a target
        and self-managed behavior.
    ConfigurationPolicyAssociationList:
      type: array
      items:
        $ref: '#/components/schemas/ConfigurationPolicyAssociationSummary'
    ConfigurationPolicyAssociationStatus:
      type: string
      enum:
      - PENDING
      - SUCCESS
      - FAILED
    ConfigurationPolicyAssociationSummary:
      type: object
      properties:
        ConfigurationPolicyId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The universally unique identifier (UUID) of the configuration
            policy.
        TargetId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the target account, organizational unit,
            or the root.
        TargetType:
          allOf:
          - $ref: '#/components/schemas/TargetType'
          description: Specifies whether the target is an Amazon Web Services account,
            organizational unit, or the root.
        AssociationType:
          allOf:
          - $ref: '#/components/schemas/AssociationType'
          description: Indicates whether the association between the specified target
            and the configuration was directly applied by the Security Hub delegated
            administrator or inherited from a parent.
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time, in UTC and ISO 8601 format, that the configuration
            policy association was last updated.
        AssociationStatus:
          allOf:
          - $ref: '#/components/schemas/ConfigurationPolicyAssociationStatus'
          description: The current status of the association between the specified
            target and the configuration.
        AssociationStatusMessage:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The explanation for a `FAILED` value for `AssociationStatus`.
      description: An object that contains the details of a configuration policy association
        that’s returned in a `ListConfigurationPolicyAssociations` request.
    ConfigurationPolicyAssociationSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ConfigurationPolicyAssociationSummary'
    ConfigurationPolicyAssociationsList:
      type: array
      items:
        $ref: '#/components/schemas/ConfigurationPolicyAssociation'
    ConfigurationPolicySummary:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the configuration policy.
        Id:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The universally unique identifier (UUID) of the configuration
            policy.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The name of the configuration policy. Alphanumeric characters
            and the following ASCII characters are permitted: `-, ., !, *, /`.'
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The description of the configuration policy.
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time, in UTC and ISO 8601 format, that the configuration
            policy was last updated.
        ServiceEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether the service that the configuration policy
            applies to is enabled in the policy.
      description: An object that contains the details of an Security Hub configuration
        policy that’s returned in a `ListConfigurationPolicies` request.
    ConfigurationPolicySummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ConfigurationPolicySummary'
    ConnectionDirection:
      type: string
      enum:
      - INBOUND
      - OUTBOUND
    ContainerDetails:
      type: object
      properties:
        ContainerRuntime:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The runtime of the container.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the container related to a finding.
        ImageId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the container image related to a finding.
        ImageName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the container image related to a finding.
        LaunchedAt:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the container started.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        VolumeMounts:
          allOf:
          - $ref: '#/components/schemas/VolumeMountList'
          description: Provides information about the mounting of a volume in a container.
        Privileged:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: When this parameter is `true`, the container is given elevated
            privileges on the host container instance (similar to the root user).
      description: Container details related to a finding.
    ControlFindingGenerator:
      type: string
      enum:
      - STANDARD_CONTROL
      - SECURITY_CONTROL
    ControlStatus:
      type: string
      enum:
      - ENABLED
      - DISABLED
    Country:
      type: object
      properties:
        CountryCode:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The 2-letter ISO 3166 country code for the country.
        CountryName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the country.
      description: Information about a country.
    CreateActionTargetRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the custom action target. Can contain up to 20
            characters.
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The description for the custom action target.
        Id:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID for the custom action target. Can contain up to 20 alphanumeric
            characters.
      required:
      - Name
      - Description
      - Id
    CreateActionTargetResponse:
      type: object
      properties:
        ActionTargetArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) for the custom action target.
      required:
      - ActionTargetArn
    CreateAutomationRuleRequest:
      type: object
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: User-defined tags associated with an automation rule.
        RuleStatus:
          allOf:
          - $ref: '#/components/schemas/RuleStatus'
          description: Whether the rule is active after it is created. If this parameter
            is equal to `ENABLED`, Security Hub starts applying the rule to findings
            and finding updates after the rule is created. To change the value of
            this parameter after creating a rule, use [ `BatchUpdateAutomationRules`
            ](https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_BatchUpdateAutomationRules.html).
        RuleOrder:
          allOf:
          - $ref: '#/components/schemas/RuleOrderValue'
          description: An integer ranging from 1 to 1000 that represents the order
            in which the rule action is applied to findings. Security Hub applies
            rules with lower values for this parameter first.
        RuleName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the rule.
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A description of the rule.
        IsTerminal:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether a rule is the last to be applied with respect
            to a finding that matches the rule criteria. This is useful when a finding
            matches the criteria for multiple rules, and each rule has different actions.
            If a rule is terminal, Security Hub applies the rule action to a finding
            that matches the rule criteria and doesn't evaluate other rules for the
            finding. By default, a rule isn't terminal.
        Criteria:
          allOf:
          - $ref: '#/components/schemas/AutomationRulesFindingFilters'
          description: A set of ASFF finding field attributes and corresponding expected
            values that Security Hub uses to filter findings. If a rule is enabled
            and a finding matches the conditions specified in this parameter, Security
            Hub applies the rule action to the finding.
        Actions:
          allOf:
          - $ref: '#/components/schemas/ActionList'
          description: One or more actions to update finding fields if a finding matches
            the conditions specified in `Criteria`.
      required:
      - RuleOrder
      - RuleName
      - Description
      - Criteria
      - Actions
    CreateAutomationRuleResponse:
      type: object
      properties:
        RuleArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the automation rule that
            you created.
    CreateConfigurationPolicyRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The name of the configuration policy. Alphanumeric characters
            and the following ASCII characters are permitted: `-, ., !, *, /`.'
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The description of the configuration policy.
        ConfigurationPolicy:
          allOf:
          - $ref: '#/components/schemas/Policy'
          description: An object that defines how Security Hub is configured. It includes
            whether Security Hub is enabled or disabled, a list of enabled security
            standards, a list of enabled or disabled security controls, and a list
            of custom parameter values for specified controls. If you provide a list
            of security controls that are enabled in the configuration policy, Security
            Hub disables all other controls (including newly released controls). If
            you provide a list of security controls that are disabled in the configuration
            policy, Security Hub enables all other controls (including newly released
            controls).
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: User-defined tags associated with a configuration policy. For
            more information, see [Tagging Security Hub resources](https://docs.aws.amazon.com/securityhub/latest/userguide/tagging-resources.html)
            in the _Security Hub user guide_.
      required:
      - Name
      - ConfigurationPolicy
    CreateConfigurationPolicyResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the configuration policy.
        Id:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The universally unique identifier (UUID) of the configuration
            policy.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the configuration policy.
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The description of the configuration policy.
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time, in UTC and ISO 8601 format, that the configuration
            policy was last updated.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time, in UTC and ISO 8601 format, that the configuration
            policy was created.
        ConfigurationPolicy:
          allOf:
          - $ref: '#/components/schemas/Policy'
          description: An object that defines how Security Hub is configured. It includes
            whether Security Hub is enabled or disabled, a list of enabled security
            standards, a list of enabled or disabled security controls, and a list
            of custom parameter values for specified controls. If the request included
            a list of security controls that are enabled in the configuration policy,
            Security Hub disables all other controls (including newly released controls).
            If the request included a list of security controls that are disabled
            in the configuration policy, Security Hub enables all other controls (including
            newly released controls).
    CreateFindingAggregatorRequest:
      type: object
      properties:
        RegionLinkingMode:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "Indicates whether to aggregate findings from all of the available\
            \ Regions in the current partition. Also determines whether to automatically\
            \ aggregate findings from new Regions as Security Hub supports them and\
            \ you opt into them.\n\nThe selected option also determines how to use\
            \ the Regions provided in the Regions list.\n\nThe options are as follows:\n\
            \n  * `ALL_REGIONS` \\- Aggregates findings from all of the Regions where\
            \ Security Hub is enabled. When you choose this option, Security Hub also\
            \ automatically aggregates findings from new Regions as Security Hub supports\
            \ them and you opt into them. \n\n  * `ALL_REGIONS_EXCEPT_SPECIFIED` \\\
            - Aggregates findings from all of the Regions where Security Hub is enabled,\
            \ except for the Regions listed in the `Regions` parameter. When you choose\
            \ this option, Security Hub also automatically aggregates findings from\
            \ new Regions as Security Hub supports them and you opt into them. \n\n\
            \  * `SPECIFIED_REGIONS` \\- Aggregates findings only from the Regions\
            \ listed in the `Regions` parameter. Security Hub does not automatically\
            \ aggregate findings from new Regions. \n\n  * `NO_REGIONS` \\- Aggregates\
            \ no data because no Regions are selected as linked Regions."
        Regions:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: 'If `RegionLinkingMode` is `ALL_REGIONS_EXCEPT_SPECIFIED`,
            then this is a space-separated list of Regions that don''t replicate and
            send findings to the home Region.


            If `RegionLinkingMode` is `SPECIFIED_REGIONS`, then this is a space-separated
            list of Regions that do replicate and send findings to the home Region.


            An `InvalidInputException` error results if you populate this field while
            `RegionLinkingMode` is `NO_REGIONS`.'
      required:
      - RegionLinkingMode
    CreateFindingAggregatorResponse:
      type: object
      properties:
        FindingAggregatorArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the finding aggregator. You use the finding aggregator
            ARN to retrieve details for, update, and stop cross-Region aggregation.
        FindingAggregationRegion:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The home Region. Findings generated in linked Regions are replicated
            and sent to the home Region.
        RegionLinkingMode:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Indicates whether to link all Regions, all Regions except for
            a list of excluded Regions, or a list of included Regions.
        Regions:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The list of excluded Regions or included Regions.
    CreateInsightRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the custom insight to create.
        Filters:
          allOf:
          - $ref: '#/components/schemas/AwsSecurityFindingFilters'
          description: One or more attributes used to filter the findings included
            in the insight. The insight only includes findings that match the criteria
            defined in the filters.
        GroupByAttribute:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The attribute used to group the findings for the insight. The
            grouping attribute identifies the type of item that the insight applies
            to. For example, if an insight is grouped by resource identifier, then
            the insight produces a list of resource identifiers.
      required:
      - Name
      - Filters
      - GroupByAttribute
    CreateInsightResponse:
      type: object
      properties:
        InsightArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the insight created.
      required:
      - InsightArn
    CreateMembersRequest:
      type: object
      properties:
        AccountDetails:
          allOf:
          - $ref: '#/components/schemas/AccountDetailsList'
          description: The list of accounts to associate with the Security Hub administrator
            account. For each account, the list includes the account ID and optionally
            the email address.
      required:
      - AccountDetails
    CreateMembersResponse:
      type: object
      properties:
        UnprocessedAccounts:
          allOf:
          - $ref: '#/components/schemas/ResultList'
          description: The list of Amazon Web Services accounts that were not processed.
            For each account, the list includes the account ID and the email address.
    CrossAccountMaxResults:
      type: integer
      minimum: 1
      maximum: 50
    CustomDataIdentifiersDetections:
      type: object
      properties:
        Count:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The total number of occurrences of sensitive data that were
            detected.
        Arn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the custom identifier that was used to detect the
            sensitive data.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: he name of the custom identifier that detected the sensitive
            data.
        Occurrences:
          allOf:
          - $ref: '#/components/schemas/Occurrences'
          description: Details about the sensitive data that was detected.
      description: The list of detected instances of sensitive data.
    CustomDataIdentifiersDetectionsList:
      type: array
      items:
        $ref: '#/components/schemas/CustomDataIdentifiersDetections'
    CustomDataIdentifiersResult:
      type: object
      properties:
        Detections:
          allOf:
          - $ref: '#/components/schemas/CustomDataIdentifiersDetectionsList'
          description: The list of detected instances of sensitive data.
        TotalCount:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The total number of occurrences of sensitive data.
      description: Contains an instance of sensitive data that was detected by a customer-defined
        identifier.
    CustomizableProperties:
      type: array
      items:
        $ref: '#/components/schemas/SecurityControlProperty'
    Cvss:
      type: object
      properties:
        Version:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The version of CVSS for the CVSS score.
        BaseScore:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The base CVSS score.
        BaseVector:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The base scoring vector for the CVSS score.
        Source:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The origin of the original CVSS score and vector.
        Adjustments:
          allOf:
          - $ref: '#/components/schemas/AdjustmentList'
          description: Adjustments to the CVSS metrics.
      description: CVSS scores from the advisory related to the vulnerability.
    CvssList:
      type: array
      items:
        $ref: '#/components/schemas/Cvss'
    DataClassificationDetails:
      type: object
      properties:
        DetailedResultsLocation:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The path to the folder or file that contains the sensitive
            data.
        Result:
          allOf:
          - $ref: '#/components/schemas/ClassificationResult'
          description: The details about the sensitive data that was detected on the
            resource.
      description: Provides details about sensitive data that was detected on a resource.
    DateFilter:
      type: object
      properties:
        Start:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'A timestamp that provides the start date for the date filter.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        End:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'A timestamp that provides the end date for the date filter.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        DateRange:
          allOf:
          - $ref: '#/components/schemas/DateRange'
          description: A date range for the date filter.
      description: A date filter for querying findings.
    DateFilterList:
      type: array
      items:
        $ref: '#/components/schemas/DateFilter'
    DateRange:
      type: object
      properties:
        Value:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: A date range value for the date filter.
        Unit:
          allOf:
          - $ref: '#/components/schemas/DateRangeUnit'
          description: A date range unit for the date filter.
      description: A date range for the date filter.
    DateRangeUnit:
      type: string
      enum:
      - DAYS
    DeclineInvitationsRequest:
      type: object
      properties:
        AccountIds:
          allOf:
          - $ref: '#/components/schemas/AccountIdList'
          description: The list of prospective member account IDs for which to decline
            an invitation.
      required:
      - AccountIds
    DeclineInvitationsResponse:
      type: object
      properties:
        UnprocessedAccounts:
          allOf:
          - $ref: '#/components/schemas/ResultList'
          description: The list of Amazon Web Services accounts that were not processed.
            For each account, the list includes the account ID and the email address.
    DeleteActionTargetRequest:
      type: object
      properties:
        ActionTargetArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the custom action target
            to delete.
      required:
      - ActionTargetArn
    DeleteActionTargetResponse:
      type: object
      properties:
        ActionTargetArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the custom action target that was deleted.
      required:
      - ActionTargetArn
    DeleteConfigurationPolicyRequest:
      type: object
      properties:
        Identifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) or universally unique identifier
            (UUID) of the configuration policy.
      required:
      - Identifier
    DeleteConfigurationPolicyResponse:
      type: object
      properties: {}
    DeleteFindingAggregatorRequest:
      type: object
      properties:
        FindingAggregatorArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the finding aggregator to delete. To obtain the
            ARN, use `ListFindingAggregators`.
      required:
      - FindingAggregatorArn
    DeleteFindingAggregatorResponse:
      type: object
      properties: {}
    DeleteInsightRequest:
      type: object
      properties:
        InsightArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the insight to delete.
      required:
      - InsightArn
    DeleteInsightResponse:
      type: object
      properties:
        InsightArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the insight that was deleted.
      required:
      - InsightArn
    DeleteInvitationsRequest:
      type: object
      properties:
        AccountIds:
          allOf:
          - $ref: '#/components/schemas/AccountIdList'
          description: The list of member account IDs that received the invitations
            you want to delete.
      required:
      - AccountIds
    DeleteInvitationsResponse:
      type: object
      properties:
        UnprocessedAccounts:
          allOf:
          - $ref: '#/components/schemas/ResultList'
          description: The list of Amazon Web Services accounts for which the invitations
            were not deleted. For each account, the list includes the account ID and
            the email address.
    DeleteMembersRequest:
      type: object
      properties:
        AccountIds:
          allOf:
          - $ref: '#/components/schemas/AccountIdList'
          description: The list of account IDs for the member accounts to delete.
      required:
      - AccountIds
    DeleteMembersResponse:
      type: object
      properties:
        UnprocessedAccounts:
          allOf:
          - $ref: '#/components/schemas/ResultList'
          description: The list of Amazon Web Services accounts that were not deleted.
            For each account, the list includes the account ID and the email address.
    DescribeActionTargetsRequest:
      type: object
      properties:
        ActionTargetArns:
          allOf:
          - $ref: '#/components/schemas/ArnList'
          description: A list of custom action target ARNs for the custom action targets
            to retrieve.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: 'The token that is required for pagination. On your first call
            to the `DescribeActionTargets` operation, set the value of this parameter
            to `NULL`.


            For subsequent calls to the operation, to continue listing data, set the
            value of this parameter to the value returned from the previous response.'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return.
    DescribeActionTargetsResponse:
      type: object
      properties:
        ActionTargets:
          allOf:
          - $ref: '#/components/schemas/ActionTargetList'
          description: A list of `ActionTarget` objects. Each object includes the
            `ActionTargetArn`, `Description`, and `Name` of a custom action target
            available in Security Hub.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token to use to request the next page of results.
      required:
      - ActionTargets
    DescribeHubRequest:
      type: object
      properties:
        HubArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the Hub resource to retrieve.
    DescribeHubResponse:
      type: object
      properties:
        HubArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the Hub resource that was retrieved.
        SubscribedAt:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The date and time when Security Hub was enabled in the account.
        AutoEnableControls:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'Whether to automatically enable new controls when they are
            added to standards that are enabled.


            If set to `true`, then new controls for enabled standards are enabled
            automatically. If set to `false`, then new controls are not enabled.


            When you automatically enable new controls, you can interact with the
            controls in the console and programmatically immediately after release.
            However, automatically enabled controls have a temporary default status
            of `DISABLED`. It can take up to several days for Security Hub to process
            the control release and designate the control as `ENABLED` in your account.
            During the processing period, you can manually enable or disable a control,
            and Security Hub will maintain that designation regardless of whether
            you have `AutoEnableControls` set to `true`.'
        ControlFindingGenerator:
          allOf:
          - $ref: '#/components/schemas/ControlFindingGenerator'
          description: 'Specifies whether the calling account has consolidated control
            findings turned on. If the value for this field is set to `SECURITY_CONTROL`,
            Security Hub generates a single finding for a control check even when
            the check applies to multiple enabled standards.


            If the value for this field is set to `STANDARD_CONTROL`, Security Hub
            generates separate findings for a control check when the check applies
            to multiple enabled standards.


            The value for this field in a member account matches the value in the
            administrator account. For accounts that aren''t part of an organization,
            the default value of this field is `SECURITY_CONTROL` if you enabled Security
            Hub on or after February 23, 2023.'
    DescribeOrganizationConfigurationRequest:
      type: object
      properties: {}
    DescribeOrganizationConfigurationResponse:
      type: object
      properties:
        AutoEnable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'Whether to automatically enable Security Hub in new member
            accounts when they join the organization.


            If set to `true`, then Security Hub is automatically enabled in new accounts.
            If set to `false`, then Security Hub isn''t enabled in new accounts automatically.
            The default value is `false`.


            If the `ConfigurationType` of your organization is set to `CENTRAL`, then
            this field is set to `false` and can''t be changed in the home Region
            and linked Regions. However, in that case, the delegated administrator
            can create a configuration policy in which Security Hub is enabled and
            associate the policy with new organization accounts.'
        MemberAccountLimitReached:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the maximum number of allowed member accounts are already
            associated with the Security Hub administrator account.
        AutoEnableStandards:
          allOf:
          - $ref: '#/components/schemas/AutoEnableStandards'
          description: 'Whether to automatically enable Security Hub [default standards](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards-enable-disable.html)
            in new member accounts when they join the organization.


            If equal to `DEFAULT`, then Security Hub default standards are automatically
            enabled for new member accounts. If equal to `NONE`, then default standards
            are not automatically enabled for new member accounts. The default value
            of this parameter is equal to `DEFAULT`.


            If the `ConfigurationType` of your organization is set to `CENTRAL`, then
            this field is set to `NONE` and can''t be changed in the home Region and
            linked Regions. However, in that case, the delegated administrator can
            create a configuration policy in which specific security standards are
            enabled and associate the policy with new organization accounts.'
        OrganizationConfiguration:
          $ref: '#/components/schemas/OrganizationConfiguration'
    DescribeProductsRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: 'The token that is required for pagination. On your first call
            to the `DescribeProducts` operation, set the value of this parameter to
            `NULL`.


            For subsequent calls to the operation, to continue listing data, set the
            value of this parameter to the value returned from the previous response.'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return.
        ProductArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the integration to return.
    DescribeProductsResponse:
      type: object
      properties:
        Products:
          allOf:
          - $ref: '#/components/schemas/ProductsList'
          description: A list of products, including details for each product.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token to use to request the next page of results.
      required:
      - Products
    DescribeStandardsControlsRequest:
      type: object
      properties:
        StandardsSubscriptionArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of a resource that represents your subscription to
            a supported standard. To get the subscription ARNs of the standards you
            have enabled, use the `GetEnabledStandards` operation.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: 'The token that is required for pagination. On your first call
            to the `DescribeStandardsControls` operation, set the value of this parameter
            to `NULL`.


            For subsequent calls to the operation, to continue listing data, set the
            value of this parameter to the value returned from the previous response.'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of security standard controls to return.
      required:
      - StandardsSubscriptionArn
    DescribeStandardsControlsResponse:
      type: object
      properties:
        Controls:
          allOf:
          - $ref: '#/components/schemas/StandardsControls'
          description: A list of security standards controls.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token to use to request the next page of results.
    DescribeStandardsRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: 'The token that is required for pagination. On your first call
            to the `DescribeStandards` operation, set the value of this parameter
            to `NULL`.


            For subsequent calls to the operation, to continue listing data, set the
            value of this parameter to the value returned from the previous response.'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of standards to return.
    DescribeStandardsResponse:
      type: object
      properties:
        Standards:
          allOf:
          - $ref: '#/components/schemas/Standards'
          description: A list of available standards.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token to use to request the next page of results.
    Detection:
      type: object
      properties:
        Sequence:
          allOf:
          - $ref: '#/components/schemas/Sequence'
          description: Provides details about an attack sequence.
      description: A top-level object field that provides details about an Amazon
        GuardDuty Extended Threat Detection attack sequence. GuardDuty generates an
        attack sequence finding when multiple events align to a potentially suspicious
        activity. To receive GuardDuty attack sequence findings in Security Hub, you
        must have GuardDuty enabled. For more information, see [GuardDuty Extended
        Threat Detection ](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty-extended-threat-detection.html)
        in the _Amazon GuardDuty User Guide_.
    DisableImportFindingsForProductRequest:
      type: object
      properties:
        ProductSubscriptionArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the integrated product to disable the integration
            for.
      required:
      - ProductSubscriptionArn
    DisableImportFindingsForProductResponse:
      type: object
      properties: {}
    DisableOrganizationAdminAccountRequest:
      type: object
      properties:
        AdminAccountId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Web Services account identifier of the Security
            Hub administrator account.
      required:
      - AdminAccountId
    DisableOrganizationAdminAccountResponse:
      type: object
      properties: {}
    DisableSecurityHubRequest:
      type: object
      properties: {}
    DisableSecurityHubResponse:
      type: object
      properties: {}
    DisabledSecurityControlIdentifierList:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
    DisassociateFromAdministratorAccountRequest:
      type: object
      properties: {}
    DisassociateFromAdministratorAccountResponse:
      type: object
      properties: {}
    DisassociateFromMasterAccountRequest:
      type: object
      properties: {}
    DisassociateFromMasterAccountResponse:
      type: object
      properties: {}
    DisassociateMembersRequest:
      type: object
      properties:
        AccountIds:
          allOf:
          - $ref: '#/components/schemas/AccountIdList'
          description: The account IDs of the member accounts to disassociate from
            the administrator account.
      required:
      - AccountIds
    DisassociateMembersResponse:
      type: object
      properties: {}
    DnsRequestAction:
      type: object
      properties:
        Domain:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The DNS domain that is associated with the DNS request.


            Length Constraints: 128.'
        Protocol:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The protocol that was used for the DNS request.


            Length Constraints: Minimum length of 1. Maximum length of 64.'
        Blocked:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether the DNS request was blocked.
      description: Provided if `ActionType` is `DNS_REQUEST`. It provides details
        about the DNS request that was detected.
    Double:
      type: number
      format: double
    DoubleConfigurationOptions:
      type: object
      properties:
        DefaultValue:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The Security Hub default value for a control parameter that
            is a double.
        Min:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The minimum valid value for a control parameter that is a double.
        Max:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The maximum valid value for a control parameter that is a double.
      description: The options for customizing a security control parameter that is
        a double.
    EnableImportFindingsForProductRequest:
      type: object
      properties:
        ProductArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the product to enable the integration for.
      required:
      - ProductArn
    EnableImportFindingsForProductResponse:
      type: object
      properties:
        ProductSubscriptionArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of your subscription to the product to enable integrations
            for.
    EnableOrganizationAdminAccountRequest:
      type: object
      properties:
        AdminAccountId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Web Services account identifier of the account to
            designate as the Security Hub administrator account.
      required:
      - AdminAccountId
    EnableOrganizationAdminAccountResponse:
      type: object
      properties: {}
    EnableSecurityHubRequest:
      type: object
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags to add to the hub resource when you enable Security
            Hub.
        EnableDefaultStandards:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to enable the security standards that Security Hub
            has designated as automatically enabled. If you don't provide a value
            for `EnableDefaultStandards`, it is set to `true`. To not enable the automatically
            enabled standards, set `EnableDefaultStandards` to `false`.
        ControlFindingGenerator:
          allOf:
          - $ref: '#/components/schemas/ControlFindingGenerator'
          description: 'This field, used when enabling Security Hub, specifies whether
            the calling account has consolidated control findings turned on. If the
            value for this field is set to `SECURITY_CONTROL`, Security Hub generates
            a single finding for a control check even when the check applies to multiple
            enabled standards.


            If the value for this field is set to `STANDARD_CONTROL`, Security Hub
            generates separate findings for a control check when the check applies
            to multiple enabled standards.


            The value for this field in a member account matches the value in the
            administrator account. For accounts that aren''t part of an organization,
            the default value of this field is `SECURITY_CONTROL` if you enabled Security
            Hub on or after February 23, 2023.'
    EnableSecurityHubResponse:
      type: object
      properties: {}
    EnabledSecurityControlIdentifierList:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
    EnabledStandardIdentifierList:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
    EnumConfigurationOptions:
      type: object
      properties:
        DefaultValue:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Security Hub default value for a control parameter that
            is an enum.
        AllowedValues:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The valid values for a control parameter that is an enum.
      description: The options for customizing a security control parameter that is
        an enum.
    EnumListConfigurationOptions:
      type: object
      properties:
        DefaultValue:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The Security Hub default value for a control parameter that
            is a list of enums.
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of list items that an enum list control
            parameter can accept.
        AllowedValues:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The valid values for a control parameter that is a list of
            enums.
      description: The options for customizing a security control parameter that is
        a list of enums.
    FieldMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/NonEmptyString'
    FilePathList:
      type: array
      items:
        $ref: '#/components/schemas/FilePaths'
    FilePaths:
      type: object
      properties:
        FilePath:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Path to the infected or suspicious file on the resource it
            was detected on.


            Length Constraints: Minimum of 1 length. Maximum of 128 length.'
        FileName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The name of the infected or suspicious file corresponding
            to the hash.


            Length Constraints: Minimum of 1 length. Maximum of 128 length.'
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The Amazon Resource Name (ARN) of the resource on which the
            threat was detected.


            Length Constraints: Minimum of 1 length. Maximum of 128 length.'
        Hash:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The hash value for the infected or suspicious file.


            Length Constraints: Minimum of 1 length. Maximum of 128 length.'
      description: Provides information about the file paths that were affected by
        the threat.
    FindingAggregator:
      type: object
      properties:
        FindingAggregatorArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the finding aggregator. You use the finding aggregator
            ARN to retrieve details for, update, and delete the finding aggregator.
      description: A finding aggregator is a Security Hub resource that specifies
        cross-Region aggregation settings, including the home Region and any linked
        Regions.
    FindingAggregatorList:
      type: array
      items:
        $ref: '#/components/schemas/FindingAggregator'
    FindingHistoryRecord:
      type: object
      properties:
        FindingIdentifier:
          $ref: '#/components/schemas/AwsSecurityFindingIdentifier'
        UpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'A timestamp that indicates when Security Hub processed the
            updated finding record.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        FindingCreated:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Identifies whether the event marks the creation of a new finding.
            A value of `True` means that the finding is newly created. A value of
            `False` means that the finding isn’t newly created.
        UpdateSource:
          allOf:
          - $ref: '#/components/schemas/FindingHistoryUpdateSource'
          description: Identifies the source of the event that changed the finding.
            For example, an integrated Amazon Web Services service or third-party
            partner integration may call [ `BatchImportFindings` ](https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_BatchImportFindings.html),
            or an Security Hub customer may call [ `BatchUpdateFindings` ](https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_BatchUpdateFindings.html).
        Updates:
          allOf:
          - $ref: '#/components/schemas/FindingHistoryUpdatesList'
          description: An array of objects that provides details about the finding
            change event, including the Amazon Web Services Security Finding Format
            (ASFF) field that changed, the value of the field before the change, and
            the value of the field after the change.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token for pagination purposes. Provide this token in the
            subsequent request to [ `GetFindingsHistory` ](https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_GetFindingsHistory.html)
            to get up to an additional 100 results of history for the same finding
            that you specified in your initial request.
      description: A list of events that changed the specified finding during the
        specified time period. Each record represents a single finding change event.
    FindingHistoryRecordList:
      type: array
      items:
        $ref: '#/components/schemas/FindingHistoryRecord'
    FindingHistoryUpdate:
      type: object
      properties:
        UpdatedField:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ASFF field that changed during the finding change event.
        OldValue:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The value of the ASFF field before the finding change event.
        NewValue:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The value of the ASFF field after the finding change event.
            To preserve storage and readability, Security Hub omits this value if
            [ `FindingHistoryRecord` ](https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_FindingHistoryRecord.html)
            exceeds database limits.
      description: An array of objects that provides details about a change to a finding,
        including the Amazon Web Services Security Finding Format (ASFF) field that
        changed, the value of the field before the change, and the value of the field
        after the change.
    FindingHistoryUpdateSource:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/FindingHistoryUpdateSourceType'
          description: Describes the type of finding change event, such as a call
            to [ `BatchImportFindings` ](https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_BatchImportFindings.html)
            (by an integrated Amazon Web Services service or third party partner integration)
            or [ `BatchUpdateFindings` ](https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_BatchUpdateFindings.html)
            (by a Security Hub customer).
        Identity:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identity of the source that initiated the finding change
            event. For example, the Amazon Resource Name (ARN) of a partner that calls
            BatchImportFindings or of a customer that calls BatchUpdateFindings.
      description: Identifies the source of the finding change event.
    FindingHistoryUpdateSourceType:
      type: string
      enum:
      - BATCH_UPDATE_FINDINGS
      - BATCH_IMPORT_FINDINGS
    FindingHistoryUpdatesList:
      type: array
      items:
        $ref: '#/components/schemas/FindingHistoryUpdate'
    FindingProviderFields:
      type: object
      properties:
        Confidence:
          allOf:
          - $ref: '#/components/schemas/RatioScale'
          description: 'A finding''s confidence. Confidence is defined as the likelihood
            that a finding accurately identifies the behavior or issue that it was
            intended to identify.


            Confidence is scored on a 0-100 basis using a ratio scale, where 0 means
            zero percent confidence and 100 means 100 percent confidence.'
        Criticality:
          allOf:
          - $ref: '#/components/schemas/RatioScale'
          description: 'The level of importance assigned to the resources associated
            with the finding.


            A score of 0 means that the underlying resources have no criticality,
            and a score of 100 is reserved for the most critical resources.'
        RelatedFindings:
          allOf:
          - $ref: '#/components/schemas/RelatedFindingList'
          description: A list of findings that are related to the current finding.
        Severity:
          allOf:
          - $ref: '#/components/schemas/FindingProviderSeverity'
          description: The severity of a finding.
        Types:
          allOf:
          - $ref: '#/components/schemas/TypeList'
          description: 'One or more finding types in the format of `namespace/category/classifier`
            that classify a finding.


            Valid namespace values are: Software and Configuration Checks | TTPs |
            Effects | Unusual Behaviors | Sensitive Data Identifications'
      description: "In a [ `BatchImportFindings` ](https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_BatchImportFindings.html)\
        \ request, finding providers use `FindingProviderFields` to provide and update\
        \ values for the following fields:\n\n  * `Confidence`\n\n  * `Criticality`\n\
        \n  * `RelatedFindings`\n\n  * `Severity`\n\n  * `Types`\n\nThe preceding\
        \ fields are nested under the `FindingProviderFields` object, but also have\
        \ analogues of the same name as top-level ASFF fields. When a new finding\
        \ is sent to Security Hub by a finding provider, Security Hub populates the\
        \ `FindingProviderFields` object automatically, if it is empty, based on the\
        \ corresponding top-level fields.\n\nFinding providers can update `FindingProviderFields`\
        \ only by using the `BatchImportFindings` operation. Finding providers can't\
        \ update this object with the [ `BatchUpdateFindings` ](https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_BatchUpdateFindings.html)\
        \ operation. Customers can update the top-level fields by using the `BatchUpdateFindings`\
        \ operation. Customers can't update `FindingProviderFields`.\n\nFor information\
        \ about how Security Hub handles updates from `BatchImportFindings` to `FindingProviderFields`\
        \ and to the corresponding top-level attributes, see [Using `FindingProviderFields`\
        \ ](https://docs.aws.amazon.com/securityhub/latest/userguide/finding-update-batchimportfindings.html#batchimportfindings-findingproviderfields)\
        \ in the _Security Hub User Guide_."
    FindingProviderSeverity:
      type: object
      properties:
        Label:
          allOf:
          - $ref: '#/components/schemas/SeverityLabel'
          description: The severity label assigned to the finding by the finding provider.
        Original:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The finding provider''s original value for the severity.


            Length Constraints: Minimum length of 1. Maximum length of 64.'
      description: "The severity assigned to a finding by the finding provider. This\
        \ object may include one or more of the following attributes:\n\n  * `Label`\n\
        \n  * `Normalized`\n\n  * `Original`\n\n  * `Product`\n\nIf a [ `BatchImportFindings`\
        \ ](https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_BatchImportFindings.html)\
        \ request for a new finding only provides `Label` or only provides `Normalized`,\
        \ Security Hub automatically populates the value of the other field.\n\nThe\
        \ `Normalized` and `Product` attributes are included in the `FindingProviderSeverity`\
        \ structure to preserve the historical information associated with the finding,\
        \ even if the top-level `Severity` object is later modified using the [ `BatchUpdateFindings`\
        \ ](https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_BatchUpdateFindings.html)\
        \ operation.\n\nIf the top-level `Finding.Severity` object is present, but\
        \ `Finding.FindingProviderFields` isn't present, Security Hub creates the\
        \ `FindingProviderFields.Severity` object and copies the entire `Finding.Severity`\
        \ object into it. This ensures that the original, provider-supplied details\
        \ are retained within the `FindingProviderFields.Severity` object, even if\
        \ the top-level `Severity` object is overwritten."
    FirewallPolicyDetails:
      type: object
      properties:
        StatefulRuleGroupReferences:
          allOf:
          - $ref: '#/components/schemas/FirewallPolicyStatefulRuleGroupReferencesList'
          description: The stateful rule groups that are used in the firewall policy.
        StatelessCustomActions:
          allOf:
          - $ref: '#/components/schemas/FirewallPolicyStatelessCustomActionsList'
          description: The custom action definitions that are available to use in
            the firewall policy's `StatelessDefaultActions` setting.
        StatelessDefaultActions:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: 'The actions to take on a packet if it doesn''t match any of
            the stateless rules in the policy.


            You must specify a standard action (`aws:pass`, `aws:drop`, `aws:forward_to_sfe`),
            and can optionally include a custom action from `StatelessCustomActions`.'
        StatelessFragmentDefaultActions:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: 'The actions to take on a fragmented UDP packet if it doesn''t
            match any of the stateless rules in the policy.


            You must specify a standard action (`aws:pass`, `aws:drop`, `aws:forward_to_sfe`),
            and can optionally include a custom action from `StatelessCustomActions`.'
        StatelessRuleGroupReferences:
          allOf:
          - $ref: '#/components/schemas/FirewallPolicyStatelessRuleGroupReferencesList'
          description: The stateless rule groups that are used in the firewall policy.
      description: Defines the behavior of the firewall.
    FirewallPolicyStatefulRuleGroupReferencesDetails:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the stateful rule group.
      description: A stateful rule group that is used by the firewall policy.
    FirewallPolicyStatefulRuleGroupReferencesList:
      type: array
      items:
        $ref: '#/components/schemas/FirewallPolicyStatefulRuleGroupReferencesDetails'
    FirewallPolicyStatelessCustomActionsDetails:
      type: object
      properties:
        ActionDefinition:
          allOf:
          - $ref: '#/components/schemas/StatelessCustomActionDefinition'
          description: The definition of the custom action.
        ActionName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the custom action.
      description: A custom action that can be used for stateless packet handling.
    FirewallPolicyStatelessCustomActionsList:
      type: array
      items:
        $ref: '#/components/schemas/FirewallPolicyStatelessCustomActionsDetails'
    FirewallPolicyStatelessRuleGroupReferencesDetails:
      type: object
      properties:
        Priority:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The order in which to run the stateless rule group.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the stateless rule group.
      description: A stateless rule group that is used by the firewall policy.
    FirewallPolicyStatelessRuleGroupReferencesList:
      type: array
      items:
        $ref: '#/components/schemas/FirewallPolicyStatelessRuleGroupReferencesDetails'
    GeneratorDetails:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the detector used to identify the code vulnerability.
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The description of the detector used to identify the code vulnerability.
        Labels:
          allOf:
          - $ref: '#/components/schemas/TypeList'
          description: 'An array of tags used to identify the detector associated
            with the finding.


            Array Members: Minimum number of 0 items. Maximum number of 10 items.'
      description: Provides metadata for the Amazon CodeGuru detector associated with
        a finding. This field pertains to findings that relate to Lambda functions.
        Amazon Inspector identifies policy violations and vulnerabilities in Lambda
        function code based on internal detectors developed in collaboration with
        Amazon CodeGuru. Security Hub receives those findings.
    GeoLocation:
      type: object
      properties:
        Lon:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The longitude of the location.
        Lat:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The latitude of the location.
      description: Provides the latitude and longitude coordinates of a location.
    GetAdministratorAccountRequest:
      type: object
      properties: {}
    GetAdministratorAccountResponse:
      type: object
      properties:
        Administrator:
          $ref: '#/components/schemas/Invitation'
    GetConfigurationPolicyAssociationRequest:
      type: object
      properties:
        Target:
          allOf:
          - $ref: '#/components/schemas/Target'
          description: The target account ID, organizational unit ID, or the root
            ID to retrieve the association for.
      required:
      - Target
    GetConfigurationPolicyAssociationResponse:
      type: object
      properties:
        ConfigurationPolicyId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The universally unique identifier (UUID) of a configuration
            policy. For self-managed behavior, the value is `SELF_MANAGED_SECURITY_HUB`.
        TargetId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The target account ID, organizational unit ID, or the root
            ID for which the association is retrieved.
        TargetType:
          allOf:
          - $ref: '#/components/schemas/TargetType'
          description: Specifies whether the target is an Amazon Web Services account,
            organizational unit, or the organization root.
        AssociationType:
          allOf:
          - $ref: '#/components/schemas/AssociationType'
          description: Indicates whether the association between the specified target
            and the configuration was directly applied by the Security Hub delegated
            administrator or inherited from a parent.
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time, in UTC and ISO 8601 format, that the configuration
            policy association was last updated.
        AssociationStatus:
          allOf:
          - $ref: '#/components/schemas/ConfigurationPolicyAssociationStatus'
          description: The current status of the association between the specified
            target and the configuration.
        AssociationStatusMessage:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The explanation for a `FAILED` value for `AssociationStatus`.
    GetConfigurationPolicyRequest:
      type: object
      properties:
        Identifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) or universally unique identifier
            (UUID) of the configuration policy.
      required:
      - Identifier
    GetConfigurationPolicyResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the configuration policy.
        Id:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The UUID of the configuration policy.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the configuration policy.
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The description of the configuration policy.
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time, in UTC and ISO 8601 format, that the configuration
            policy was last updated.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time, in UTC and ISO 8601 format, that the configuration
            policy was created.
        ConfigurationPolicy:
          allOf:
          - $ref: '#/components/schemas/Policy'
          description: An object that defines how Security Hub is configured. It includes
            whether Security Hub is enabled or disabled, a list of enabled security
            standards, a list of enabled or disabled security controls, and a list
            of custom parameter values for specified controls. If the policy includes
            a list of security controls that are enabled, Security Hub disables all
            other controls (including newly released controls). If the policy includes
            a list of security controls that are disabled, Security Hub enables all
            other controls (including newly released controls).
    GetEnabledStandardsRequest:
      type: object
      properties:
        StandardsSubscriptionArns:
          allOf:
          - $ref: '#/components/schemas/StandardsSubscriptionArns'
          description: The list of the standards subscription ARNs for the standards
            to retrieve.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: 'The token that is required for pagination. On your first call
            to the `GetEnabledStandards` operation, set the value of this parameter
            to `NULL`.


            For subsequent calls to the operation, to continue listing data, set the
            value of this parameter to the value returned from the previous response.'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in the response.
    GetEnabledStandardsResponse:
      type: object
      properties:
        StandardsSubscriptions:
          allOf:
          - $ref: '#/components/schemas/StandardsSubscriptions'
          description: The list of `StandardsSubscriptions` objects that include information
            about the enabled standards.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token to use to request the next page of results.
    GetFindingAggregatorRequest:
      type: object
      properties:
        FindingAggregatorArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the finding aggregator to return details for. To
            obtain the ARN, use `ListFindingAggregators`.
      required:
      - FindingAggregatorArn
    GetFindingAggregatorResponse:
      type: object
      properties:
        FindingAggregatorArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the finding aggregator.
        FindingAggregationRegion:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The home Region. Findings generated in linked Regions are replicated
            and sent to the home Region.
        RegionLinkingMode:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Indicates whether to link all Regions, all Regions except for
            a list of excluded Regions, or a list of included Regions.
        Regions:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The list of excluded Regions or included Regions.
    GetFindingHistoryRequest:
      type: object
      properties:
        FindingIdentifier:
          $ref: '#/components/schemas/AwsSecurityFindingIdentifier'
        StartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'A timestamp that indicates the start time of the requested
            finding history.


            If you provide values for both `StartTime` and `EndTime`, Security Hub
            returns finding history for the specified time period. If you provide
            a value for `StartTime` but not for `EndTime`, Security Hub returns finding
            history from the `StartTime` to the time at which the API is called. If
            you provide a value for `EndTime` but not for `StartTime`, Security Hub
            returns finding history from the [CreatedAt](https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_AwsSecurityFindingFilters.html#securityhub-Type-AwsSecurityFindingFilters-CreatedAt)
            timestamp of the finding to the `EndTime`. If you provide neither `StartTime`
            nor `EndTime`, Security Hub returns finding history from the CreatedAt
            timestamp of the finding to the time at which the API is called. In all
            of these scenarios, the response is limited to 100 results, and the maximum
            time period is limited to 90 days.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        EndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'An ISO 8601-formatted timestamp that indicates the end time
            of the requested finding history.


            If you provide values for both `StartTime` and `EndTime`, Security Hub
            returns finding history for the specified time period. If you provide
            a value for `StartTime` but not for `EndTime`, Security Hub returns finding
            history from the `StartTime` to the time at which the API is called. If
            you provide a value for `EndTime` but not for `StartTime`, Security Hub
            returns finding history from the [CreatedAt](https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_AwsSecurityFindingFilters.html#securityhub-Type-AwsSecurityFindingFilters-CreatedAt)
            timestamp of the finding to the `EndTime`. If you provide neither `StartTime`
            nor `EndTime`, Security Hub returns finding history from the CreatedAt
            timestamp of the finding to the time at which the API is called. In all
            of these scenarios, the response is limited to 100 results, and the maximum
            time period is limited to 90 days.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token for pagination purposes. Provide `NULL` as the initial
            value. In subsequent requests, provide the token included in the response
            to get up to an additional 100 results of finding history. If you don’t
            provide `NextToken`, Security Hub returns up to 100 results of finding
            history for each request.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to be returned. If you don’t
            provide it, Security Hub returns up to 100 results of finding history.
      required:
      - FindingIdentifier
    GetFindingHistoryResponse:
      type: object
      properties:
        Records:
          allOf:
          - $ref: '#/components/schemas/FindingHistoryRecordList'
          description: A list of events that altered the specified finding during
            the specified time period.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token for pagination purposes. Provide this token in the
            subsequent request to `GetFindingsHistory` to get up to an additional
            100 results of history for the same finding that you specified in your
            initial request.
    GetFindingsRequest:
      type: object
      properties:
        Filters:
          allOf:
          - $ref: '#/components/schemas/AwsSecurityFindingFilters'
          description: 'The finding attributes used to define a condition to filter
            the returned findings.


            You can filter by up to 10 finding attributes. For each attribute, you
            can provide up to 20 filter values.


            Note that in the available filter fields, `WorkflowState` is deprecated.
            To search for a finding based on its workflow status, use `WorkflowStatus`.'
        SortCriteria:
          allOf:
          - $ref: '#/components/schemas/SortCriteria'
          description: The finding attributes used to sort the list of returned findings.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: 'The token that is required for pagination. On your first call
            to the `GetFindings` operation, set the value of this parameter to `NULL`.


            For subsequent calls to the operation, to continue listing data, set the
            value of this parameter to the value returned from the previous response.'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of findings to return.
    GetFindingsResponse:
      type: object
      properties:
        Findings:
          allOf:
          - $ref: '#/components/schemas/AwsSecurityFindingList'
          description: The findings that matched the filters specified in the request.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token to use to request the next page of results.
      required:
      - Findings
    GetInsightResultsRequest:
      type: object
      properties:
        InsightArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the insight for which to return results.
      required:
      - InsightArn
    GetInsightResultsResponse:
      type: object
      properties:
        InsightResults:
          allOf:
          - $ref: '#/components/schemas/InsightResults'
          description: The insight results returned by the operation.
      required:
      - InsightResults
    GetInsightsRequest:
      type: object
      properties:
        InsightArns:
          allOf:
          - $ref: '#/components/schemas/ArnList'
          description: The ARNs of the insights to describe. If you don't provide
            any insight ARNs, then `GetInsights` returns all of your custom insights.
            It does not return any managed insights.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: 'The token that is required for pagination. On your first call
            to the `GetInsights` operation, set the value of this parameter to `NULL`.


            For subsequent calls to the operation, to continue listing data, set the
            value of this parameter to the value returned from the previous response.'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of items to return in the response.
    GetInsightsResponse:
      type: object
      properties:
        Insights:
          allOf:
          - $ref: '#/components/schemas/InsightList'
          description: The insights returned by the operation.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token to use to request the next page of results.
      required:
      - Insights
    GetInvitationsCountRequest:
      type: object
      properties: {}
    GetInvitationsCountResponse:
      type: object
      properties:
        InvitationsCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of all membership invitations sent to this Security
            Hub member account, not including the currently accepted invitation.
    GetMasterAccountRequest:
      type: object
      properties: {}
    GetMasterAccountResponse:
      type: object
      properties:
        Master:
          allOf:
          - $ref: '#/components/schemas/Invitation'
          description: A list of details about the Security Hub administrator account
            for the current member account.
    GetMembersRequest:
      type: object
      properties:
        AccountIds:
          allOf:
          - $ref: '#/components/schemas/AccountIdList'
          description: The list of account IDs for the Security Hub member accounts
            to return the details for.
      required:
      - AccountIds
    GetMembersResponse:
      type: object
      properties:
        Members:
          allOf:
          - $ref: '#/components/schemas/MemberList'
          description: The list of details about the Security Hub member accounts.
        UnprocessedAccounts:
          allOf:
          - $ref: '#/components/schemas/ResultList'
          description: The list of Amazon Web Services accounts that could not be
            processed. For each account, the list includes the account ID and the
            email address.
    GetSecurityControlDefinitionRequest:
      type: object
      properties:
        SecurityControlId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the security control to retrieve the definition for.
            This field doesn’t accept an Amazon Resource Name (ARN).
      required:
      - SecurityControlId
    GetSecurityControlDefinitionResponse:
      type: object
      properties:
        SecurityControlDefinition:
          $ref: '#/components/schemas/SecurityControlDefinition'
      required:
      - SecurityControlDefinition
    IcmpTypeCode:
      type: object
      properties:
        Code:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The ICMP code for which to deny or allow access. To deny or
            allow all codes, use the value `-1`.
        Type:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The ICMP type for which to deny or allow access. To deny or
            allow all types, use the value `-1`.
      description: An Internet Control Message Protocol (ICMP) type and code.
    ImportFindingsError:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the finding that could not be updated.
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The code of the error returned by the `BatchImportFindings`
            operation.
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The message of the error returned by the `BatchImportFindings`
            operation.
      required:
      - Id
      - ErrorCode
      - ErrorMessage
      description: The list of the findings that cannot be imported. For each finding,
        the list provides the error.
    ImportFindingsErrorList:
      type: array
      items:
        $ref: '#/components/schemas/ImportFindingsError'
    Indicator:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the indicator that’s present in the attack sequence
            finding.
        Values:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: Values associated with each indicator key. For example, if
            the indicator key is `SUSPICIOUS_NETWORK`, then the value will be the
            name of the network. If the indicator key is `ATTACK_TACTIC`, then the
            value will be one of the MITRE tactics.
        Title:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The title describing the indicator.
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of indicator.
      description: Contains information about the indicators observed in an Amazon
        GuardDuty Extended Threat Detection attack sequence. Indicators include a
        set of signals, which can be API activities or findings that GuardDuty uses
        to detect an attack sequence finding. GuardDuty generates an attack sequence
        finding when multiple signals align to a potentially suspicious activity.
        To receive GuardDuty attack sequence findings in Security Hub, you must have
        GuardDuty and GuardDuty S3 Protection enabled. For more information, see [GuardDuty
        Extended Threat Detection ](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty-extended-threat-detection.html)
        in the _Amazon GuardDuty User Guide_.
    IndicatorsList:
      type: array
      items:
        $ref: '#/components/schemas/Indicator'
    Insight:
      type: object
      properties:
        InsightArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of a Security Hub insight.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of a Security Hub insight.
        Filters:
          allOf:
          - $ref: '#/components/schemas/AwsSecurityFindingFilters'
          description: One or more attributes used to filter the findings included
            in the insight. You can filter by up to ten finding attributes. For each
            attribute, you can provide up to 20 filter values. The insight only includes
            findings that match the criteria defined in the filters.
        GroupByAttribute:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The grouping attribute for the insight's findings. Indicates
            how to group the matching findings, and identifies the type of item that
            the insight applies to. For example, if an insight is grouped by resource
            identifier, then the insight produces a list of resource identifiers.
      required:
      - InsightArn
      - Name
      - Filters
      - GroupByAttribute
      description: Contains information about a Security Hub insight.
    InsightList:
      type: array
      items:
        $ref: '#/components/schemas/Insight'
    InsightResultValue:
      type: object
      properties:
        GroupByAttributeValue:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The value of the attribute that the findings are grouped by
            for the insight whose results are returned by the `GetInsightResults`
            operation.
        Count:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of findings returned for each `GroupByAttributeValue`.
      required:
      - GroupByAttributeValue
      - Count
      description: The insight result values returned by the `GetInsightResults` operation.
    InsightResultValueList:
      type: array
      items:
        $ref: '#/components/schemas/InsightResultValue'
    InsightResults:
      type: object
      properties:
        InsightArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the insight whose results are returned by the `GetInsightResults`
            operation.
        GroupByAttribute:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The attribute that the findings are grouped by for the insight
            whose results are returned by the `GetInsightResults` operation.
        ResultValues:
          allOf:
          - $ref: '#/components/schemas/InsightResultValueList'
          description: The list of insight result values returned by the `GetInsightResults`
            operation.
      required:
      - InsightArn
      - GroupByAttribute
      - ResultValues
      description: The insight results returned by the `GetInsightResults` operation.
    Integer:
      type: integer
    IntegerConfigurationOptions:
      type: object
      properties:
        DefaultValue:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The Security Hub default value for a control parameter that
            is an integer.
        Min:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The minimum valid value for a control parameter that is an
            integer.
        Max:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum valid value for a control parameter that is an
            integer.
      description: The options for customizing a security control parameter that is
        an integer.
    IntegerList:
      type: array
      items:
        $ref: '#/components/schemas/Integer'
    IntegerListConfigurationOptions:
      type: object
      properties:
        DefaultValue:
          allOf:
          - $ref: '#/components/schemas/IntegerList'
          description: The Security Hub default value for a control parameter that
            is a list of integers.
        Min:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The minimum valid value for a control parameter that is a list
            of integers.
        Max:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum valid value for a control parameter that is a list
            of integers.
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of list items that an interger list control
            parameter can accept.
      description: The options for customizing a security control parameter that is
        a list of integers.
    IntegrationType:
      type: string
      enum:
      - SEND_FINDINGS_TO_SECURITY_HUB
      - RECEIVE_FINDINGS_FROM_SECURITY_HUB
      - UPDATE_FINDINGS_IN_SECURITY_HUB
    IntegrationTypeList:
      type: array
      items:
        $ref: '#/components/schemas/IntegrationType'
    InternalException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/NonEmptyString'
        Code:
          $ref: '#/components/schemas/NonEmptyString'
      description: Internal server error.
    InvalidAccessException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/NonEmptyString'
        Code:
          $ref: '#/components/schemas/NonEmptyString'
      description: The account doesn't have permission to perform this action.
    InvalidInputException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/NonEmptyString'
        Code:
          $ref: '#/components/schemas/NonEmptyString'
      description: The request was rejected because you supplied an invalid or out-of-range
        value for an input parameter.
    Invitation:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The account ID of the Security Hub administrator account that
            the invitation was sent from.
        InvitationId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the invitation sent to the member account.
        InvitedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp of when the invitation was sent.
        MemberStatus:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The current status of the association between the member and
            administrator accounts.
      description: Details about an invitation.
    InvitationList:
      type: array
      items:
        $ref: '#/components/schemas/Invitation'
    InviteMembersRequest:
      type: object
      properties:
        AccountIds:
          allOf:
          - $ref: '#/components/schemas/AccountIdList'
          description: The list of account IDs of the Amazon Web Services accounts
            to invite to Security Hub as members.
      required:
      - AccountIds
    InviteMembersResponse:
      type: object
      properties:
        UnprocessedAccounts:
          allOf:
          - $ref: '#/components/schemas/ResultList'
          description: The list of Amazon Web Services accounts that could not be
            processed. For each account, the list includes the account ID and the
            email address.
    IpFilter:
      type: object
      properties:
        Cidr:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A finding's CIDR value.
      description: The IP filter for querying findings.
    IpFilterList:
      type: array
      items:
        $ref: '#/components/schemas/IpFilter'
    IpOrganizationDetails:
      type: object
      properties:
        Asn:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The Autonomous System Number (ASN) of the internet provider
        AsnOrg:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the organization that registered the ASN.
        Isp:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ISP information for the internet provider.
        Org:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the internet provider.
      description: Provides information about an internet provider.
    Ipv6CidrBlockAssociation:
      type: object
      properties:
        AssociationId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The association ID for the IPv6 CIDR block.
        Ipv6CidrBlock:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The IPv6 CIDR block.
        CidrBlockState:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "Information about the state of the CIDR block. Valid values\
            \ are as follows:\n\n  * `associating`\n\n  * `associated`\n\n  * `disassociating`\n\
            \n  * `disassociated`\n\n  * `failed`\n\n  * `failing`"
      description: An IPV6 CIDR block association.
    Ipv6CidrBlockAssociationList:
      type: array
      items:
        $ref: '#/components/schemas/Ipv6CidrBlockAssociation'
    KeywordFilter:
      type: object
      properties:
        Value:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A value for the keyword.
      description: A keyword filter for querying findings.
    KeywordFilterList:
      type: array
      items:
        $ref: '#/components/schemas/KeywordFilter'
    LimitExceededException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/NonEmptyString'
        Code:
          $ref: '#/components/schemas/NonEmptyString'
      description: The request was rejected because it attempted to create resources
        beyond the current Amazon Web Services account or throttling limits. The error
        code describes the limit exceeded.
    ListAutomationRulesRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token to specify where to start paginating the response.
            This is the `NextToken` from a previously truncated response. On your
            first call to the `ListAutomationRules` API, set the value of this parameter
            to `NULL`.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of rules to return in the response. This
            currently ranges from 1 to 100\.
    ListAutomationRulesResponse:
      type: object
      properties:
        AutomationRulesMetadata:
          allOf:
          - $ref: '#/components/schemas/AutomationRulesMetadataList'
          description: Metadata for rules in the calling account. The response includes
            rules with a `RuleStatus` of `ENABLED` and `DISABLED`.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A pagination token for the response.
    ListConfigurationPoliciesRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The NextToken value that's returned from a previous paginated
            `ListConfigurationPolicies` request where `MaxResults` was used but the
            results exceeded the value of that parameter. Pagination continues from
            the `MaxResults` was used but the results exceeded the value of that parameter.
            Pagination continues from the end of the previous response that returned
            the `NextToken` value. This value is `null` when there are no more results
            to return.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results that's returned by `ListConfigurationPolicies`
            in each page of the response. When this parameter is used, `ListConfigurationPolicies`
            returns the specified number of results in a single page and a `NextToken`
            response element. You can see the remaining results of the initial request
            by sending another `ListConfigurationPolicies` request with the returned
            `NextToken` value. A valid range for `MaxResults` is between 1 and 100.
    ListConfigurationPoliciesResponse:
      type: object
      properties:
        ConfigurationPolicySummaries:
          allOf:
          - $ref: '#/components/schemas/ConfigurationPolicySummaryList'
          description: Provides metadata for each of your configuration policies.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The `NextToken` value to include in the next `ListConfigurationPolicies`
            request. When the results of a `ListConfigurationPolicies` request exceed
            `MaxResults`, this value can be used to retrieve the next page of results.
            This value is `null` when there are no more results to return.
    ListConfigurationPolicyAssociationsRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The `NextToken` value that's returned from a previous paginated
            `ListConfigurationPolicyAssociations` request where `MaxResults` was used
            but the results exceeded the value of that parameter. Pagination continues
            from the end of the previous response that returned the `NextToken` value.
            This value is `null` when there are no more results to return.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results that's returned by `ListConfigurationPolicies`
            in each page of the response. When this parameter is used, `ListConfigurationPolicyAssociations`
            returns the specified number of results in a single page and a `NextToken`
            response element. You can see the remaining results of the initial request
            by sending another `ListConfigurationPolicyAssociations` request with
            the returned `NextToken` value. A valid range for `MaxResults` is between
            1 and 100.
        Filters:
          allOf:
          - $ref: '#/components/schemas/AssociationFilters'
          description: Options for filtering the `ListConfigurationPolicyAssociations`
            response. You can filter by the Amazon Resource Name (ARN) or universally
            unique identifier (UUID) of a configuration, `AssociationType`, or `AssociationStatus`.
    ListConfigurationPolicyAssociationsResponse:
      type: object
      properties:
        ConfigurationPolicyAssociationSummaries:
          allOf:
          - $ref: '#/components/schemas/ConfigurationPolicyAssociationSummaryList'
          description: An object that contains the details of each configuration policy
            association that’s returned in a `ListConfigurationPolicyAssociations`
            request.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The `NextToken` value to include in the next `ListConfigurationPolicyAssociations`
            request. When the results of a `ListConfigurationPolicyAssociations` request
            exceed `MaxResults`, this value can be used to retrieve the next page
            of results. This value is `null` when there are no more results to return.
    ListEnabledProductsForImportRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: 'The token that is required for pagination. On your first call
            to the `ListEnabledProductsForImport` operation, set the value of this
            parameter to `NULL`.


            For subsequent calls to the operation, to continue listing data, set the
            value of this parameter to the value returned from the previous response.'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of items to return in the response.
    ListEnabledProductsForImportResponse:
      type: object
      properties:
        ProductSubscriptions:
          allOf:
          - $ref: '#/components/schemas/ProductSubscriptionArnList'
          description: The list of ARNs for the resources that represent your subscriptions
            to products.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token to use to request the next page of results.
    ListFindingAggregatorsRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token returned with the previous set of results. Identifies
            the next set of results to return.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return. This operation currently
            only returns a single result.
    ListFindingAggregatorsResponse:
      type: object
      properties:
        FindingAggregators:
          allOf:
          - $ref: '#/components/schemas/FindingAggregatorList'
          description: The list of finding aggregators. This operation currently only
            returns a single result.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: 'If there are more results, this is the token to provide in
            the next call to `ListFindingAggregators`.


            This operation currently only returns a single result.'
    ListInvitationsRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/CrossAccountMaxResults'
          description: The maximum number of items to return in the response.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: 'The token that is required for pagination. On your first call
            to the `ListInvitations` operation, set the value of this parameter to
            `NULL`.


            For subsequent calls to the operation, to continue listing data, set the
            value of this parameter to the value returned from the previous response.'
    ListInvitationsResponse:
      type: object
      properties:
        Invitations:
          allOf:
          - $ref: '#/components/schemas/InvitationList'
          description: The details of the invitations returned by the operation.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The pagination token to use to request the next page of results.
    ListMembersRequest:
      type: object
      properties:
        OnlyAssociated:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'Specifies which member accounts to include in the response
            based on their relationship status with the administrator account. The
            default value is `TRUE`.


            If `OnlyAssociated` is set to `TRUE`, the response includes member accounts
            whose relationship status with the administrator account is set to `ENABLED`.


            If `OnlyAssociated` is set to `FALSE`, the response includes all existing
            member accounts.'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/CrossAccountMaxResults'
          description: The maximum number of items to return in the response.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: 'The token that is required for pagination. On your first call
            to the `ListMembers` operation, set the value of this parameter to `NULL`.


            For subsequent calls to the operation, to continue listing data, set the
            value of this parameter to the value returned from the previous response.'
    ListMembersResponse:
      type: object
      properties:
        Members:
          allOf:
          - $ref: '#/components/schemas/MemberList'
          description: Member details returned by the operation.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The pagination token to use to request the next page of results.
    ListOrganizationAdminAccountsRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/AdminsMaxResults'
          description: The maximum number of items to return in the response.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token that is required for pagination. On your first call
            to the `ListOrganizationAdminAccounts` operation, set the value of this
            parameter to `NULL`. For subsequent calls to the operation, to continue
            listing data, set the value of this parameter to the value returned from
            the previous response.
    ListOrganizationAdminAccountsResponse:
      type: object
      properties:
        AdminAccounts:
          allOf:
          - $ref: '#/components/schemas/AdminAccounts'
          description: The list of Security Hub administrator accounts.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token to use to request the next page of results.
    ListSecurityControlDefinitionsRequest:
      type: object
      properties:
        StandardsArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the standard that you want
            to view controls for.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Optional pagination parameter.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: An optional parameter that limits the total results of the
            API response to the specified number. If this parameter isn't provided
            in the request, the results include the first 25 security controls that
            apply to the specified standard. The results also include a `NextToken`
            parameter that you can use in a subsequent API call to get the next 25
            controls. This repeats until all controls for the standard are returned.
    ListSecurityControlDefinitionsResponse:
      type: object
      properties:
        SecurityControlDefinitions:
          allOf:
          - $ref: '#/components/schemas/SecurityControlDefinitions'
          description: An array of controls that apply to the specified standard.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A pagination parameter that's included in the response only
            if it was included in the request.
      required:
      - SecurityControlDefinitions
    ListStandardsControlAssociationsRequest:
      type: object
      properties:
        SecurityControlId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the control (identified with `SecurityControlId`,
            `SecurityControlArn`, or a mix of both parameters) that you want to determine
            the enablement status of in each enabled standard.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Optional pagination parameter.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: An optional parameter that limits the total results of the
            API response to the specified number. If this parameter isn't provided
            in the request, the results include the first 25 standard and control
            associations. The results also include a `NextToken` parameter that you
            can use in a subsequent API call to get the next 25 associations. This
            repeats until all associations for the specified control are returned.
            The number of results is limited by the number of supported Security Hub
            standards that you've enabled in the calling account.
      required:
      - SecurityControlId
    ListStandardsControlAssociationsResponse:
      type: object
      properties:
        StandardsControlAssociationSummaries:
          allOf:
          - $ref: '#/components/schemas/StandardsControlAssociationSummaries'
          description: An array that provides the enablement status and other details
            for each security control that applies to each enabled standard.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A pagination parameter that's included in the response only
            if it was included in the request.
      required:
      - StandardsControlAssociationSummaries
    ListTagsForResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The ARN of the resource to retrieve tags for.
      required:
      - ResourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags associated with a resource.
    LoadBalancerState:
      type: object
      properties:
        Code:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The state code. The initial state of the load balancer is
            provisioning.


            After the load balancer is fully set up and ready to route traffic, its
            state is active.


            If the load balancer could not be set up, its state is failed.'
        Reason:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A description of the state.
      description: Information about the state of the load balancer.
    Long:
      type: integer
      format: int64
    Malware:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The name of the malware that was observed.


            Length Constraints: Minimum of 1. Maximum of 64.'
        Type:
          allOf:
          - $ref: '#/components/schemas/MalwareType'
          description: The type of the malware that was observed.
        Path:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The file system path of the malware that was observed.


            Length Constraints: Minimum of 1. Maximum of 512.'
        State:
          allOf:
          - $ref: '#/components/schemas/MalwareState'
          description: The state of the malware that was observed.
      required:
      - Name
      description: A list of malware related to a finding.
    MalwareList:
      type: array
      items:
        $ref: '#/components/schemas/Malware'
    MalwareState:
      type: string
      enum:
      - OBSERVED
      - REMOVAL_FAILED
      - REMOVED
    MalwareType:
      type: string
      enum:
      - ADWARE
      - BLENDED_THREAT
      - BOTNET_AGENT
      - COIN_MINER
      - EXPLOIT_KIT
      - KEYLOGGER
      - MACRO
      - POTENTIALLY_UNWANTED
      - SPYWARE
      - RANSOMWARE
      - REMOTE_ACCESS
      - ROOTKIT
      - TROJAN
      - VIRUS
      - WORM
    MapFilter:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The key of the map filter. For example, for `ResourceTags`,
            `Key` identifies the name of the tag. For `UserDefinedFields`, `Key` is
            the name of the field.
        Value:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The value for the key in the map filter. Filter values are
            case sensitive. For example, one of the values for a tag called `Department`
            might be `Security`. If you provide `security` as the filter value, then
            there's no match.
        Comparison:
          allOf:
          - $ref: '#/components/schemas/MapFilterComparison'
          description: "The condition to apply to the key value when filtering Security\
            \ Hub findings with a map filter.\n\nTo search for values that have the\
            \ filter value, use one of the following comparison operators:\n\n  *\
            \ To search for values that include the filter value, use `CONTAINS`.\
            \ For example, for the `ResourceTags` field, the filter `Department CONTAINS\
            \ Security` matches findings that include the value `Security` for the\
            \ `Department` tag. In the same example, a finding with a value of `Security\
            \ team` for the `Department` tag is a match.\n\n  * To search for values\
            \ that exactly match the filter value, use `EQUALS`. For example, for\
            \ the `ResourceTags` field, the filter `Department EQUALS Security` matches\
            \ findings that have the value `Security` for the `Department` tag.\n\n\
            `CONTAINS` and `EQUALS` filters on the same field are joined by `OR`.\
            \ A finding matches if it matches any one of those filters. For example,\
            \ the filters `Department CONTAINS Security OR Department CONTAINS Finance`\
            \ match a finding that includes either `Security`, `Finance`, or both\
            \ values.\n\nTo search for values that don't have the filter value, use\
            \ one of the following comparison operators:\n\n  * To search for values\
            \ that exclude the filter value, use `NOT_CONTAINS`. For example, for\
            \ the `ResourceTags` field, the filter `Department NOT_CONTAINS Finance`\
            \ matches findings that exclude the value `Finance` for the `Department`\
            \ tag.\n\n  * To search for values other than the filter value, use `NOT_EQUALS`.\
            \ For example, for the `ResourceTags` field, the filter `Department NOT_EQUALS\
            \ Finance` matches findings that don’t have the value `Finance` for the\
            \ `Department` tag.\n\n`NOT_CONTAINS` and `NOT_EQUALS` filters on the\
            \ same field are joined by `AND`. A finding matches only if it matches\
            \ all of those filters. For example, the filters `Department NOT_CONTAINS\
            \ Security AND Department NOT_CONTAINS Finance` match a finding that excludes\
            \ both the `Security` and `Finance` values.\n\n`CONTAINS` filters can\
            \ only be used with other `CONTAINS` filters. `NOT_CONTAINS` filters can\
            \ only be used with other `NOT_CONTAINS` filters.\n\nYou can’t have both\
            \ a `CONTAINS` filter and a `NOT_CONTAINS` filter on the same field. Similarly,\
            \ you can’t have both an `EQUALS` filter and a `NOT_EQUALS` filter on\
            \ the same field. Combining filters in this way returns an error.\n\n\
            `CONTAINS` and `NOT_CONTAINS` operators can be used only with automation\
            \ rules. For more information, see [Automation rules](https://docs.aws.amazon.com/securityhub/latest/userguide/automation-rules.html)\
            \ in the _Security Hub User Guide_."
      description: A map filter for filtering Security Hub findings. Each map filter
        provides the field to check for, the value to check for, and the comparison
        operator.
    MapFilterComparison:
      type: string
      enum:
      - EQUALS
      - NOT_EQUALS
      - CONTAINS
      - NOT_CONTAINS
    MapFilterList:
      type: array
      items:
        $ref: '#/components/schemas/MapFilter'
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    Member:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The Amazon Web Services account ID of the member account.
        Email:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The email address of the member account.
        MasterId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'This is replaced by `AdministratorID`.


            The Amazon Web Services account ID of the Security Hub administrator account
            associated with this member account.'
        AdministratorId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Web Services account ID of the Security Hub administrator
            account associated with this member account.
        MemberStatus:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "The status of the relationship between the member account\
            \ and its administrator account.\n\nThe status can have one of the following\
            \ values:\n\n  * `Created` \\- Indicates that the administrator account\
            \ added the member account, but has not yet invited the member account.\n\
            \n  * `Invited` \\- Indicates that the administrator account invited the\
            \ member account. The member account has not yet responded to the invitation.\n\
            \n  * `Enabled` \\- Indicates that the member account is currently active.\
            \ For manually invited member accounts, indicates that the member account\
            \ accepted the invitation.\n\n  * `Removed` \\- Indicates that the administrator\
            \ account disassociated the member account.\n\n  * `Resigned` \\- Indicates\
            \ that the member account disassociated themselves from the administrator\
            \ account.\n\n  * `Deleted` \\- Indicates that the administrator account\
            \ deleted the member account.\n\n  * `AccountSuspended` \\- Indicates\
            \ that an organization account was suspended from Amazon Web Services\
            \ at the same time that the administrator account tried to enable the\
            \ organization account as a member account."
        InvitedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: A timestamp for the date and time when the invitation was sent
            to the member account.
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp for the date and time when the member account
            was updated.
      description: The details about a member account.
    MemberList:
      type: array
      items:
        $ref: '#/components/schemas/Member'
    Network:
      type: object
      properties:
        Direction:
          allOf:
          - $ref: '#/components/schemas/NetworkDirection'
          description: The direction of network traffic associated with a finding.
        Protocol:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The protocol of network-related information about a finding.


            Length Constraints: Minimum of 1. Maximum of 16.'
        OpenPortRange:
          allOf:
          - $ref: '#/components/schemas/PortRange'
          description: The range of open ports that is present on the network.
        SourceIpV4:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The source IPv4 address of network-related information about
            a finding.
        SourceIpV6:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The source IPv6 address of network-related information about
            a finding.
        SourcePort:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The source port of network-related information about a finding.
        SourceDomain:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The source domain of network-related information about a finding.


            Length Constraints: Minimum of 1. Maximum of 128.'
        SourceMac:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The source media access control (MAC) address of network-related
            information about a finding.
        DestinationIpV4:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The destination IPv4 address of network-related information
            about a finding.
        DestinationIpV6:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The destination IPv6 address of network-related information
            about a finding.
        DestinationPort:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The destination port of network-related information about a
            finding.
        DestinationDomain:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The destination domain of network-related information about
            a finding.


            Length Constraints: Minimum of 1. Maximum of 128.'
      description: The details of network-related information about a finding.
    NetworkAutonomousSystem:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name associated with the AS.
        Number:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The unique number that identifies the AS.
      description: Contains information about the Autonomous System (AS) of the network
        endpoints involved in an Amazon GuardDuty Extended Threat Detection attack
        sequence. GuardDuty generates an attack sequence finding when multiple events
        align to a potentially suspicious activity. To receive GuardDuty attack sequence
        findings in Security Hub, you must have GuardDuty enabled. For more information,
        see [GuardDuty Extended Threat Detection ](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty-extended-threat-detection.html)
        in the _Amazon GuardDuty User Guide_.
    NetworkConnection:
      type: object
      properties:
        Direction:
          allOf:
          - $ref: '#/components/schemas/ConnectionDirection'
          description: The direction in which the network traffic is flowing.
      description: Contains information about the network connection involved in an
        Amazon GuardDuty Extended Threat Detection attack sequence. GuardDuty generates
        an attack sequence finding when multiple events align to a potentially suspicious
        activity. To receive GuardDuty attack sequence findings in Security Hub, you
        must have GuardDuty enabled. For more information, see [GuardDuty Extended
        Threat Detection ](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty-extended-threat-detection.html)
        in the _Amazon GuardDuty User Guide_.
    NetworkConnectionAction:
      type: object
      properties:
        ConnectionDirection:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The direction of the network connection request (`IN` or `OUT`).
        RemoteIpDetails:
          allOf:
          - $ref: '#/components/schemas/ActionRemoteIpDetails'
          description: Information about the remote IP address that issued the network
            connection request.
        RemotePortDetails:
          allOf:
          - $ref: '#/components/schemas/ActionRemotePortDetails'
          description: Information about the port on the remote IP address.
        LocalPortDetails:
          allOf:
          - $ref: '#/components/schemas/ActionLocalPortDetails'
          description: Information about the port on the EC2 instance.
        Protocol:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The protocol used to make the network connection request.


            Length Constraints: Minimum length of 1. Maximum length of 64.'
        Blocked:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether the network connection attempt was blocked.
      description: Provided if `ActionType` is `NETWORK_CONNECTION`. It provides details
        about the attempted network connection that was detected.
    NetworkDirection:
      type: string
      enum:
      - IN
      - OUT
    NetworkEndpoint:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the network endpoint involved in the attack
            sequence.
        Ip:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The IP address used in the network endpoint.
        Domain:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The domain information for the network endpoint.
        Port:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The port number associated with the network endpoint.
        Location:
          allOf:
          - $ref: '#/components/schemas/NetworkGeoLocation'
          description: Information about the location of the network endpoint.
        AutonomousSystem:
          allOf:
          - $ref: '#/components/schemas/NetworkAutonomousSystem'
          description: The Autonomous System Number (ASN) of the network endpoint.
        Connection:
          allOf:
          - $ref: '#/components/schemas/NetworkConnection'
          description: Information about the network connection.
      description: 'Contains information about network endpoints involved in an Amazon
        GuardDuty Extended Threat Detection attack sequence. GuardDuty generates an
        attack sequence finding when multiple events align to a potentially suspicious
        activity. To receive GuardDuty attack sequence findings in Security Hub, you
        must have GuardDuty enabled. For more information, see [GuardDuty Extended
        Threat Detection ](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty-extended-threat-detection.html)
        in the _Amazon GuardDuty User Guide_.


        This field can provide information about the network endpoints associated
        with the resource in the attack sequence finding, or about a specific network
        endpoint used for the attack.'
    NetworkEndpointsList:
      type: array
      items:
        $ref: '#/components/schemas/NetworkEndpoint'
    NetworkGeoLocation:
      type: object
      properties:
        City:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the city.
        Country:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the country.
        Lat:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The latitude information of the endpoint location.
        Lon:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The longitude information of the endpoint location.
      description: Contains information about the location of a network endpoint involved
        in an Amazon GuardDuty Extended Threat Detection attack sequence. GuardDuty
        generates an attack sequence finding when multiple events align to a potentially
        suspicious activity. To receive GuardDuty attack sequence findings in Security
        Hub, you must have GuardDuty enabled. For more information, see [GuardDuty
        Extended Threat Detection ](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty-extended-threat-detection.html)
        in the _Amazon GuardDuty User Guide_.
    NetworkHeader:
      type: object
      properties:
        Protocol:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The protocol used for the component.


            Length Constraints: Minimum of 1. Maximum of 16.'
        Destination:
          allOf:
          - $ref: '#/components/schemas/NetworkPathComponentDetails'
          description: Information about the destination of the component.
        Source:
          allOf:
          - $ref: '#/components/schemas/NetworkPathComponentDetails'
          description: Information about the origin of the component.
      description: Details about a network path component that occurs before or after
        the current component.
    NetworkPathComponent:
      type: object
      properties:
        ComponentId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The identifier of a component in the network path.


            Length Constraints: Minimum of 1. Maximum of 32.'
        ComponentType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The type of component.


            Length Constraints: Minimum of 1. Maximum of 32.'
        Egress:
          allOf:
          - $ref: '#/components/schemas/NetworkHeader'
          description: Information about the component that comes after the current
            component in the network path.
        Ingress:
          allOf:
          - $ref: '#/components/schemas/NetworkHeader'
          description: Information about the component that comes before the current
            node in the network path.
      description: Information about a network path component.
    NetworkPathComponentDetails:
      type: object
      properties:
        Address:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The IP addresses of the destination.
        PortRanges:
          allOf:
          - $ref: '#/components/schemas/PortRangeList'
          description: A list of port ranges for the destination.
      description: Information about the destination of the next component in the
        network path.
    NetworkPathList:
      type: array
      items:
        $ref: '#/components/schemas/NetworkPathComponent'
    NextToken:
      type: string
    NonEmptyString:
      type: string
      pattern: \S
    NonEmptyStringList:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
    Note:
      type: object
      properties:
        Text:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The text of a note.


            Length Constraints: Minimum of 1. Maximum of 512.'
        UpdatedBy:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The principal that created a note.
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'A timestamp that indicates when the note was updated.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
      required:
      - Text
      - UpdatedBy
      - UpdatedAt
      description: A user-defined note added to a finding.
    NoteUpdate:
      type: object
      properties:
        Text:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The updated note text.
        UpdatedBy:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The principal that updated the note.
      required:
      - Text
      - UpdatedBy
      description: The updated note.
    NumberFilter:
      type: object
      properties:
        Gte:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The greater-than-equal condition to be applied to a single
            field when querying for findings.
        Lte:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The less-than-equal condition to be applied to a single field
            when querying for findings.
        Eq:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The equal-to condition to be applied to a single field when
            querying for findings.
        Gt:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The greater-than condition to be applied to a single field
            when querying for findings.
        Lt:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The less-than condition to be applied to a single field when
            querying for findings.
      description: A number filter for querying findings.
    NumberFilterList:
      type: array
      items:
        $ref: '#/components/schemas/NumberFilter'
    Occurrences:
      type: object
      properties:
        LineRanges:
          allOf:
          - $ref: '#/components/schemas/Ranges'
          description: Occurrences of sensitive data detected in a non-binary text
            file or a Microsoft Word file. Non-binary text files include files such
            as HTML, XML, JSON, and TXT files.
        OffsetRanges:
          allOf:
          - $ref: '#/components/schemas/Ranges'
          description: Occurrences of sensitive data detected in a binary text file.
        Pages:
          allOf:
          - $ref: '#/components/schemas/Pages'
          description: Occurrences of sensitive data in an Adobe Portable Document
            Format (PDF) file.
        Records:
          allOf:
          - $ref: '#/components/schemas/Records'
          description: Occurrences of sensitive data in an Apache Avro object container
            or an Apache Parquet file.
        Cells:
          allOf:
          - $ref: '#/components/schemas/Cells'
          description: Occurrences of sensitive data detected in Microsoft Excel workbooks,
            comma-separated value (CSV) files, or tab-separated value (TSV) files.
      description: The detected occurrences of sensitive data.
    OrganizationConfiguration:
      type: object
      properties:
        ConfigurationType:
          allOf:
          - $ref: '#/components/schemas/OrganizationConfigurationConfigurationType'
          description: 'Indicates whether the organization uses local or central configuration.


            If you use local configuration, the Security Hub delegated administrator
            can set `AutoEnable` to `true` and `AutoEnableStandards` to `DEFAULT`.
            This automatically enables Security Hub and default security standards
            in new organization accounts. These new account settings must be set separately
            in each Amazon Web Services Region, and settings may be different in each
            Region.


            If you use central configuration, the delegated administrator can create
            configuration policies. Configuration policies can be used to configure
            Security Hub, security standards, and security controls in multiple accounts
            and Regions. If you want new organization accounts to use a specific configuration,
            you can create a configuration policy and associate it with the root or
            specific organizational units (OUs). New accounts will inherit the policy
            from the root or their assigned OU.'
        Status:
          allOf:
          - $ref: '#/components/schemas/OrganizationConfigurationStatus'
          description: Describes whether central configuration could be enabled as
            the `ConfigurationType` for the organization. If your `ConfigurationType`
            is local configuration, then the value of `Status` is always `ENABLED`.
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Provides an explanation if the value of `Status` is equal to
            `FAILED` when `ConfigurationType` is equal to `CENTRAL`.
      description: Provides information about the way an organization is configured
        in Security Hub.
    OrganizationConfigurationConfigurationType:
      type: string
      enum:
      - CENTRAL
      - LOCAL
    OrganizationConfigurationStatus:
      type: string
      enum:
      - PENDING
      - ENABLED
      - FAILED
    Page:
      type: object
      properties:
        PageNumber:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The page number of the page that contains the sensitive data.
        LineRange:
          allOf:
          - $ref: '#/components/schemas/Range'
          description: An occurrence of sensitive data detected in a non-binary text
            file or a Microsoft Word file. Non-binary text files include files such
            as HTML, XML, JSON, and TXT files.
        OffsetRange:
          allOf:
          - $ref: '#/components/schemas/Range'
          description: An occurrence of sensitive data detected in a binary text file.
      description: An occurrence of sensitive data in an Adobe Portable Document Format
        (PDF) file.
    Pages:
      type: array
      items:
        $ref: '#/components/schemas/Page'
    ParameterConfiguration:
      type: object
      properties:
        ValueType:
          allOf:
          - $ref: '#/components/schemas/ParameterValueType'
          description: 'Identifies whether a control parameter uses a custom user-defined
            value or subscribes to the default Security Hub behavior.


            When `ValueType` is set equal to `DEFAULT`, the default behavior can be
            a specific Security Hub default value, or the default behavior can be
            to ignore a specific parameter. When `ValueType` is set equal to `DEFAULT`,
            Security Hub ignores user-provided input for the `Value` field.


            When `ValueType` is set equal to `CUSTOM`, the `Value` field can''t be
            empty.'
        Value:
          allOf:
          - $ref: '#/components/schemas/ParameterValue'
          description: The current value of a control parameter.
      required:
      - ValueType
      description: An object that provides the current value of a security control
        parameter and identifies whether it has been customized.
    ParameterDefinition:
      type: object
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Description of a control parameter.
        ConfigurationOptions:
          allOf:
          - $ref: '#/components/schemas/ConfigurationOptions'
          description: The options for customizing a control parameter. Customization
            options vary based on the data type of the parameter.
      required:
      - Description
      - ConfigurationOptions
      description: An object that describes a security control parameter and the options
        for customizing it.
    ParameterDefinitions:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ParameterDefinition'
    ParameterValue:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/Integer'
        description: |-
          A control parameter that is an integer.
      - allOf:
        - $ref: '#/components/schemas/IntegerList'
        description: |-
          A control parameter that is a list of integers.
      - allOf:
        - $ref: '#/components/schemas/Double'
        description: |-
          A control parameter that is a double.
      - allOf:
        - $ref: '#/components/schemas/NonEmptyString'
        description: |-
          A control parameter that is a string.
      - allOf:
        - $ref: '#/components/schemas/StringList'
        description: |-
          A control parameter that is a list of strings.
      - allOf:
        - $ref: '#/components/schemas/Boolean'
        description: |-
          A control parameter that is a boolean.
      - allOf:
        - $ref: '#/components/schemas/NonEmptyString'
        description: |-
          A control parameter that is an enum.
      - allOf:
        - $ref: '#/components/schemas/StringList'
        description: |-
          A control parameter that is a list of enums.
      description: |-
        An object that includes the data type of a security control parameter and its current value.
    ParameterValueType:
      type: string
      enum:
      - DEFAULT
      - CUSTOM
    Parameters:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ParameterConfiguration'
    Partition:
      type: string
      enum:
      - aws
      - aws-cn
      - aws-us-gov
    PatchSummary:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The identifier of the compliance standard that was used to
            determine the patch compliance status.


            Length Constraints: Minimum length of 1. Maximum length of 256.'
        InstalledCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'The number of patches from the compliance standard that were
            installed successfully.


            The value can be an integer from `0` to `100000`.'
        MissingCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'The number of patches that are part of the compliance standard
            but are not installed. The count includes patches that failed to install.


            The value can be an integer from `0` to `100000`.'
        FailedCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'The number of patches from the compliance standard that failed
            to install.


            The value can be an integer from `0` to `100000`.'
        InstalledOtherCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'The number of installed patches that are not part of the compliance
            standard.


            The value can be an integer from `0` to `100000`.'
        InstalledRejectedCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'The number of patches that are installed but are also on a
            list of patches that the customer rejected.


            The value can be an integer from `0` to `100000`.'
        InstalledPendingReboot:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'The number of patches that were applied, but that require
            the instance to be rebooted in order to be marked as installed.


            The value can be an integer from `0` to `100000`.'
        OperationStartTime:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the operation started.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        OperationEndTime:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the operation completed.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        RebootOption:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The reboot option specified for the instance.


            Length Constraints: Minimum length of 1. Maximum length of 256.'
        Operation:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The type of patch operation performed. For Patch Manager,
            the values are `SCAN` and `INSTALL`.


            Length Constraints: Minimum length of 1. Maximum length of 256.'
      required:
      - Id
      description: Provides an overview of the patch compliance status for an instance
        against a selected compliance standard.
    Policy:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/SecurityHubPolicy'
        description: |-
          The Amazon Web Services service that the configuration policy applies to.
      description: |-
        An object that defines how Security Hub is configured. It includes whether Security Hub is enabled or disabled, a list of enabled security standards, a list of enabled or disabled security controls, and a list of custom parameter values for specified controls. If you provide a list of security controls that are enabled in the configuration policy, Security Hub disables all other controls (including newly released controls). If you provide a list of security controls that are disabled in the configuration policy, Security Hub enables all other controls (including newly released controls).
    PortProbeAction:
      type: object
      properties:
        PortProbeDetails:
          allOf:
          - $ref: '#/components/schemas/PortProbeDetailList'
          description: Information about the ports affected by the port probe.
        Blocked:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether the port probe was blocked.
      description: Provided if `ActionType` is `PORT_PROBE`. It provides details about
        the attempted port probe that was detected.
    PortProbeDetail:
      type: object
      properties:
        LocalPortDetails:
          allOf:
          - $ref: '#/components/schemas/ActionLocalPortDetails'
          description: Provides information about the port that was scanned.
        LocalIpDetails:
          allOf:
          - $ref: '#/components/schemas/ActionLocalIpDetails'
          description: Provides information about the IP address where the scanned
            port is located.
        RemoteIpDetails:
          allOf:
          - $ref: '#/components/schemas/ActionRemoteIpDetails'
          description: Provides information about the remote IP address that performed
            the scan.
      description: A port scan that was part of the port probe. For each scan, PortProbeDetails
        provides information about the local IP address and port that were scanned,
        and the remote IP address that the scan originated from.
    PortProbeDetailList:
      type: array
      items:
        $ref: '#/components/schemas/PortProbeDetail'
    PortRange:
      type: object
      properties:
        Begin:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The first port in the port range.
        End:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The last port in the port range.
      description: A range of ports.
    PortRangeFromTo:
      type: object
      properties:
        From:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The first port in the port range.
        To:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The last port in the port range.
      description: A range of ports.
    PortRangeList:
      type: array
      items:
        $ref: '#/components/schemas/PortRange'
    ProcessDetails:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The name of the process.


            Length Constraints: Minimum of 1. Maximum of 64.'
        Path:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The path to the process executable.


            Length Constraints: Minimum of 1. Maximum of 512.'
        Pid:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The process ID.
        ParentPid:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The parent process ID. This field accepts positive integers
            between `O` and `2147483647`.
        LaunchedAt:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the process was launched.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        TerminatedAt:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the process was terminated.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
      description: The details of process-related information about a finding.
    Product:
      type: object
      properties:
        ProductArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN assigned to the product.
        ProductName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the product.
        CompanyName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the company that provides the product.
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A description of the product.
        Categories:
          allOf:
          - $ref: '#/components/schemas/CategoryList'
          description: The categories assigned to the product.
        IntegrationTypes:
          allOf:
          - $ref: '#/components/schemas/IntegrationTypeList'
          description: "The types of integration that the product supports. Available\
            \ values are the following.\n\n  * `SEND_FINDINGS_TO_SECURITY_HUB` \\\
            - The integration sends findings to Security Hub.\n\n  * `RECEIVE_FINDINGS_FROM_SECURITY_HUB`\
            \ \\- The integration receives findings from Security Hub.\n\n  * `UPDATE_FINDINGS_IN_SECURITY_HUB`\
            \ \\- The integration does not send new findings to Security Hub, but\
            \ does make updates to the findings that it receives from Security Hub."
        MarketplaceUrl:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'For integrations with Amazon Web Services services, the Amazon
            Web Services Console URL from which to activate the service.


            For integrations with third-party products, the Amazon Web Services Marketplace
            URL from which to subscribe to or purchase the product.'
        ActivationUrl:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The URL to the service or product documentation about the integration
            with Security Hub, including how to activate the integration.
        ProductSubscriptionResourcePolicy:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The resource policy associated with the product.
      required:
      - ProductArn
      description: Contains details about a product.
    ProductSubscriptionArnList:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
    ProductsList:
      type: array
      items:
        $ref: '#/components/schemas/Product'
    PropagatingVgwSetDetails:
      type: object
      properties:
        GatewayId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the virtual private gateway.
      description: Describes a virtual private gateway propagating route.
    PropagatingVgwSetList:
      type: array
      items:
        $ref: '#/components/schemas/PropagatingVgwSetDetails'
    Range:
      type: object
      properties:
        Start:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The number of lines (for a line range) or characters (for an
            offset range) from the beginning of the file to the end of the sensitive
            data.
        End:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The number of lines (for a line range) or characters (for an
            offset range) from the beginning of the file to the end of the sensitive
            data.
        StartColumn:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: In the line where the sensitive data starts, the column within
            the line where the sensitive data starts.
      description: Identifies where the sensitive data begins and ends.
    Ranges:
      type: array
      items:
        $ref: '#/components/schemas/Range'
    RatioScale:
      type: integer
      minimum: 0
      maximum: 100
    Recommendation:
      type: object
      properties:
        Text:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Describes the recommended steps to take to remediate an issue
            identified in a finding.


            Length Constraints: Minimum of 1 length. Maximum of 512 length.'
        Url:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A URL to a page or site that contains information about how
            to remediate a finding.
      description: A recommendation on how to remediate the issue identified in a
        finding.
    Record:
      type: object
      properties:
        JsonPath:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The path, as a JSONPath expression, to the field in the record
            that contains the data. If the field name is longer than 20 characters,
            it is truncated. If the path is longer than 250 characters, it is truncated.
        RecordIndex:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The record index, starting from 0, for the record that contains
            the data.
      description: An occurrence of sensitive data in an Apache Avro object container
        or an Apache Parquet file.
    RecordState:
      type: string
      enum:
      - ACTIVE
      - ARCHIVED
    Records:
      type: array
      items:
        $ref: '#/components/schemas/Record'
    RegionAvailabilityStatus:
      type: string
      enum:
      - AVAILABLE
      - UNAVAILABLE
    RelatedFinding:
      type: object
      properties:
        ProductArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the product that generated a related finding.
        Id:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The product-generated identifier for a related finding.
      required:
      - ProductArn
      - Id
      description: Details about a related finding.
    RelatedFindingList:
      type: array
      items:
        $ref: '#/components/schemas/RelatedFinding'
    RelatedRequirementsList:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
    Remediation:
      type: object
      properties:
        Recommendation:
          allOf:
          - $ref: '#/components/schemas/Recommendation'
          description: A recommendation on the steps to take to remediate the issue
            identified by a finding.
      description: Details about the remediation steps for a finding.
    Resource:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The type of the resource that details are provided for. If
            possible, set `Type` to one of the supported resource types. For example,
            if the resource is an EC2 instance, then set `Type` to `AwsEc2Instance`.


            If the resource does not match any of the provided types, then set `Type`
            to `Other`.


            Length Constraints: Minimum length of 1. Maximum length of 256.'
        Id:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The canonical identifier for the given resource type.
        Partition:
          allOf:
          - $ref: '#/components/schemas/Partition'
          description: The canonical Amazon Web Services partition name that the Region
            is assigned to.
        Region:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The canonical Amazon Web Services external Region name where
            this resource is located.


            Length Constraints: Minimum length of 1. Maximum length of 16.'
        ResourceRole:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Identifies the role of the resource in the finding. A resource
            is either the actor or target of the finding activity,
        Tags:
          allOf:
          - $ref: '#/components/schemas/FieldMap'
          description: A list of Amazon Web Services tags associated with a resource
            at the time the finding was processed. Tags must follow [Amazon Web Services
            tag naming limits and requirements](https://docs.aws.amazon.com/tag-editor/latest/userguide/tagging.html#tag-conventions).
        DataClassification:
          allOf:
          - $ref: '#/components/schemas/DataClassificationDetails'
          description: Contains information about sensitive data that was detected
            on the resource.
        Details:
          allOf:
          - $ref: '#/components/schemas/ResourceDetails'
          description: Additional details about the resource related to a finding.
        ApplicationName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the application that is related to a finding.
        ApplicationArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the application that is related
            to a finding.
      required:
      - Type
      - Id
      description: A resource related to a finding.
    ResourceArn:
      type: string
      pattern: '^arn:aws:securityhub:'
    ResourceConflictException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/NonEmptyString'
        Code:
          $ref: '#/components/schemas/NonEmptyString'
      description: The resource specified in the request conflicts with an existing
        resource.
    ResourceDetails:
      type: object
      properties:
        AwsAutoScalingAutoScalingGroup:
          allOf:
          - $ref: '#/components/schemas/AwsAutoScalingAutoScalingGroupDetails'
          description: Details for an autoscaling group.
        AwsCodeBuildProject:
          allOf:
          - $ref: '#/components/schemas/AwsCodeBuildProjectDetails'
          description: Details for an CodeBuild project.
        AwsCloudFrontDistribution:
          allOf:
          - $ref: '#/components/schemas/AwsCloudFrontDistributionDetails'
          description: Details about a CloudFront distribution.
        AwsEc2Instance:
          allOf:
          - $ref: '#/components/schemas/AwsEc2InstanceDetails'
          description: Details about an EC2 instance related to a finding.
        AwsEc2NetworkInterface:
          allOf:
          - $ref: '#/components/schemas/AwsEc2NetworkInterfaceDetails'
          description: Details for an EC2 network interface.
        AwsEc2SecurityGroup:
          allOf:
          - $ref: '#/components/schemas/AwsEc2SecurityGroupDetails'
          description: Details for an EC2 security group.
        AwsEc2Volume:
          allOf:
          - $ref: '#/components/schemas/AwsEc2VolumeDetails'
          description: Details for an Amazon EC2 volume.
        AwsEc2Vpc:
          allOf:
          - $ref: '#/components/schemas/AwsEc2VpcDetails'
          description: Details for an Amazon EC2 VPC.
        AwsEc2Eip:
          allOf:
          - $ref: '#/components/schemas/AwsEc2EipDetails'
          description: Details about an Elastic IP address.
        AwsEc2Subnet:
          allOf:
          - $ref: '#/components/schemas/AwsEc2SubnetDetails'
          description: Details about a subnet in Amazon EC2.
        AwsEc2NetworkAcl:
          allOf:
          - $ref: '#/components/schemas/AwsEc2NetworkAclDetails'
          description: Details about an EC2 network access control list (ACL).
        AwsElbv2LoadBalancer:
          allOf:
          - $ref: '#/components/schemas/AwsElbv2LoadBalancerDetails'
          description: Details about a load balancer.
        AwsElasticBeanstalkEnvironment:
          allOf:
          - $ref: '#/components/schemas/AwsElasticBeanstalkEnvironmentDetails'
          description: Details about an Elastic Beanstalk environment.
        AwsElasticsearchDomain:
          allOf:
          - $ref: '#/components/schemas/AwsElasticsearchDomainDetails'
          description: Details for an Elasticsearch domain.
        AwsS3Bucket:
          allOf:
          - $ref: '#/components/schemas/AwsS3BucketDetails'
          description: Details about an S3 bucket related to a finding.
        AwsS3AccountPublicAccessBlock:
          allOf:
          - $ref: '#/components/schemas/AwsS3AccountPublicAccessBlockDetails'
          description: Details about the Amazon S3 Public Access Block configuration
            for an account.
        AwsS3Object:
          allOf:
          - $ref: '#/components/schemas/AwsS3ObjectDetails'
          description: Details about an S3 object related to a finding.
        AwsSecretsManagerSecret:
          allOf:
          - $ref: '#/components/schemas/AwsSecretsManagerSecretDetails'
          description: Details about a Secrets Manager secret.
        AwsIamAccessKey:
          allOf:
          - $ref: '#/components/schemas/AwsIamAccessKeyDetails'
          description: Details about an IAM access key related to a finding.
        AwsIamUser:
          allOf:
          - $ref: '#/components/schemas/AwsIamUserDetails'
          description: Details about an IAM user.
        AwsIamPolicy:
          allOf:
          - $ref: '#/components/schemas/AwsIamPolicyDetails'
          description: Details about an IAM permissions policy.
        AwsApiGatewayV2Stage:
          allOf:
          - $ref: '#/components/schemas/AwsApiGatewayV2StageDetails'
          description: Provides information about a version 2 stage for Amazon API
            Gateway.
        AwsApiGatewayV2Api:
          allOf:
          - $ref: '#/components/schemas/AwsApiGatewayV2ApiDetails'
          description: Provides information about a version 2 API in Amazon API Gateway.
        AwsDynamoDbTable:
          allOf:
          - $ref: '#/components/schemas/AwsDynamoDbTableDetails'
          description: Details about a DynamoDB table.
        AwsApiGatewayStage:
          allOf:
          - $ref: '#/components/schemas/AwsApiGatewayStageDetails'
          description: Provides information about a version 1 Amazon API Gateway stage.
        AwsApiGatewayRestApi:
          allOf:
          - $ref: '#/components/schemas/AwsApiGatewayRestApiDetails'
          description: Provides information about a REST API in version 1 of Amazon
            API Gateway.
        AwsCloudTrailTrail:
          allOf:
          - $ref: '#/components/schemas/AwsCloudTrailTrailDetails'
          description: Provides details about a CloudTrail trail.
        AwsSsmPatchCompliance:
          allOf:
          - $ref: '#/components/schemas/AwsSsmPatchComplianceDetails'
          description: Provides information about the state of a patch on an instance
            based on the patch baseline that was used to patch the instance.
        AwsCertificateManagerCertificate:
          allOf:
          - $ref: '#/components/schemas/AwsCertificateManagerCertificateDetails'
          description: Provides details about an Certificate Manager certificate.
        AwsRedshiftCluster:
          allOf:
          - $ref: '#/components/schemas/AwsRedshiftClusterDetails'
          description: Contains details about an Amazon Redshift cluster.
        AwsElbLoadBalancer:
          allOf:
          - $ref: '#/components/schemas/AwsElbLoadBalancerDetails'
          description: Contains details about a Classic Load Balancer.
        AwsIamGroup:
          allOf:
          - $ref: '#/components/schemas/AwsIamGroupDetails'
          description: Contains details about an IAM group.
        AwsIamRole:
          allOf:
          - $ref: '#/components/schemas/AwsIamRoleDetails'
          description: Details about an IAM role.
        AwsKmsKey:
          allOf:
          - $ref: '#/components/schemas/AwsKmsKeyDetails'
          description: Details about an KMS key.
        AwsLambdaFunction:
          allOf:
          - $ref: '#/components/schemas/AwsLambdaFunctionDetails'
          description: Details about a Lambda function.
        AwsLambdaLayerVersion:
          allOf:
          - $ref: '#/components/schemas/AwsLambdaLayerVersionDetails'
          description: Details for a Lambda layer version.
        AwsRdsDbInstance:
          allOf:
          - $ref: '#/components/schemas/AwsRdsDbInstanceDetails'
          description: Details about an Amazon RDS database instance.
        AwsSnsTopic:
          allOf:
          - $ref: '#/components/schemas/AwsSnsTopicDetails'
          description: Details about an SNS topic.
        AwsSqsQueue:
          allOf:
          - $ref: '#/components/schemas/AwsSqsQueueDetails'
          description: Details about an SQS queue.
        AwsWafWebAcl:
          allOf:
          - $ref: '#/components/schemas/AwsWafWebAclDetails'
          description: Details for an WAF web ACL.
        AwsRdsDbSnapshot:
          allOf:
          - $ref: '#/components/schemas/AwsRdsDbSnapshotDetails'
          description: Details about an Amazon RDS database snapshot.
        AwsRdsDbClusterSnapshot:
          allOf:
          - $ref: '#/components/schemas/AwsRdsDbClusterSnapshotDetails'
          description: Details about an Amazon RDS database cluster snapshot.
        AwsRdsDbCluster:
          allOf:
          - $ref: '#/components/schemas/AwsRdsDbClusterDetails'
          description: Details about an Amazon RDS database cluster.
        AwsEcsCluster:
          allOf:
          - $ref: '#/components/schemas/AwsEcsClusterDetails'
          description: Details about an Amazon ECS cluster.
        AwsEcsContainer:
          allOf:
          - $ref: '#/components/schemas/AwsEcsContainerDetails'
          description: Provides information about a Docker container that's part of
            a task.
        AwsEcsTaskDefinition:
          allOf:
          - $ref: '#/components/schemas/AwsEcsTaskDefinitionDetails'
          description: Details about a task definition. A task definition describes
            the container and volume definitions of an Amazon Elastic Container Service
            task.
        Container:
          allOf:
          - $ref: '#/components/schemas/ContainerDetails'
          description: Details about a container resource related to a finding.
        Other:
          allOf:
          - $ref: '#/components/schemas/FieldMap'
          description: "Details about a resource that are not available in a type-specific\
            \ details object. Use the `Other` object in the following cases.\n\n \
            \ * The type-specific object does not contain all of the fields that you\
            \ want to populate. In this case, first use the type-specific object to\
            \ populate those fields. Use the `Other` object to populate the fields\
            \ that are missing from the type-specific object.\n\n  * The resource\
            \ type does not have a corresponding object. This includes resources for\
            \ which the type is `Other`."
        AwsRdsEventSubscription:
          allOf:
          - $ref: '#/components/schemas/AwsRdsEventSubscriptionDetails'
          description: Details about an RDS event notification subscription.
        AwsEcsService:
          allOf:
          - $ref: '#/components/schemas/AwsEcsServiceDetails'
          description: Details about a service within an ECS cluster.
        AwsAutoScalingLaunchConfiguration:
          allOf:
          - $ref: '#/components/schemas/AwsAutoScalingLaunchConfigurationDetails'
          description: Provides details about a launch configuration.
        AwsEc2VpnConnection:
          allOf:
          - $ref: '#/components/schemas/AwsEc2VpnConnectionDetails'
          description: Details about an Amazon EC2 VPN connection.
        AwsEcrContainerImage:
          allOf:
          - $ref: '#/components/schemas/AwsEcrContainerImageDetails'
          description: Information about an Amazon ECR image.
        AwsOpenSearchServiceDomain:
          allOf:
          - $ref: '#/components/schemas/AwsOpenSearchServiceDomainDetails'
          description: Details about an Amazon OpenSearch Service domain.
        AwsEc2VpcEndpointService:
          allOf:
          - $ref: '#/components/schemas/AwsEc2VpcEndpointServiceDetails'
          description: Details about the service configuration for a VPC endpoint
            service.
        AwsXrayEncryptionConfig:
          allOf:
          - $ref: '#/components/schemas/AwsXrayEncryptionConfigDetails'
          description: Information about the encryption configuration for X-Ray.
        AwsWafRateBasedRule:
          allOf:
          - $ref: '#/components/schemas/AwsWafRateBasedRuleDetails'
          description: Details about a rate-based rule for global resources.
        AwsWafRegionalRateBasedRule:
          allOf:
          - $ref: '#/components/schemas/AwsWafRegionalRateBasedRuleDetails'
          description: Details about a rate-based rule for Regional resources.
        AwsEcrRepository:
          allOf:
          - $ref: '#/components/schemas/AwsEcrRepositoryDetails'
          description: Information about an Amazon Elastic Container Registry repository.
        AwsEksCluster:
          allOf:
          - $ref: '#/components/schemas/AwsEksClusterDetails'
          description: Details about an Amazon EKS cluster.
        AwsNetworkFirewallFirewallPolicy:
          allOf:
          - $ref: '#/components/schemas/AwsNetworkFirewallFirewallPolicyDetails'
          description: Details about an Network Firewall firewall policy.
        AwsNetworkFirewallFirewall:
          allOf:
          - $ref: '#/components/schemas/AwsNetworkFirewallFirewallDetails'
          description: Details about an Network Firewall firewall.
        AwsNetworkFirewallRuleGroup:
          allOf:
          - $ref: '#/components/schemas/AwsNetworkFirewallRuleGroupDetails'
          description: Details about an Network Firewall rule group.
        AwsRdsDbSecurityGroup:
          allOf:
          - $ref: '#/components/schemas/AwsRdsDbSecurityGroupDetails'
          description: Details about an Amazon RDS DB security group.
        AwsKinesisStream:
          allOf:
          - $ref: '#/components/schemas/AwsKinesisStreamDetails'
          description: Details about an Amazon Kinesis data stream.
        AwsEc2TransitGateway:
          allOf:
          - $ref: '#/components/schemas/AwsEc2TransitGatewayDetails'
          description: Details about an Amazon EC2 transit gateway that interconnects
            your virtual private clouds (VPC) and on-premises networks.
        AwsEfsAccessPoint:
          allOf:
          - $ref: '#/components/schemas/AwsEfsAccessPointDetails'
          description: Details about an Amazon EFS access point. An access point is
            an application-specific view into an EFS file system that applies an operating
            system user and group, and a file system path, to any file system request
            made through the access point.
        AwsCloudFormationStack:
          allOf:
          - $ref: '#/components/schemas/AwsCloudFormationStackDetails'
          description: Details about an CloudFormation stack. A stack is a collection
            of Amazon Web Services resources that you can manage as a single unit.
        AwsCloudWatchAlarm:
          allOf:
          - $ref: '#/components/schemas/AwsCloudWatchAlarmDetails'
          description: Details about an Amazon CloudWatch alarm. An alarm allows you
            to monitor and receive alerts about your Amazon Web Services resources
            and applications across multiple Regions.
        AwsEc2VpcPeeringConnection:
          allOf:
          - $ref: '#/components/schemas/AwsEc2VpcPeeringConnectionDetails'
          description: Details about an Amazon EC2 VPC peering connection. A VPC peering
            connection is a networking connection between two VPCs that enables you
            to route traffic between them privately.
        AwsWafRegionalRuleGroup:
          allOf:
          - $ref: '#/components/schemas/AwsWafRegionalRuleGroupDetails'
          description: Details about an WAF rule group for Regional resources.
        AwsWafRegionalRule:
          allOf:
          - $ref: '#/components/schemas/AwsWafRegionalRuleDetails'
          description: Details about an WAF rule for Regional resources.
        AwsWafRegionalWebAcl:
          allOf:
          - $ref: '#/components/schemas/AwsWafRegionalWebAclDetails'
          description: Details about an WAF web access control list (web ACL) for
            Regional resources.
        AwsWafRule:
          allOf:
          - $ref: '#/components/schemas/AwsWafRuleDetails'
          description: Details about an WAF rule for global resources.
        AwsWafRuleGroup:
          allOf:
          - $ref: '#/components/schemas/AwsWafRuleGroupDetails'
          description: Details about an WAF rule group for global resources.
        AwsEcsTask:
          allOf:
          - $ref: '#/components/schemas/AwsEcsTaskDetails'
          description: Details about a task in a cluster.
        AwsBackupBackupVault:
          allOf:
          - $ref: '#/components/schemas/AwsBackupBackupVaultDetails'
          description: Provides details about an Backup backup vault.
        AwsBackupBackupPlan:
          allOf:
          - $ref: '#/components/schemas/AwsBackupBackupPlanDetails'
          description: Provides details about an Backup backup plan.
        AwsBackupRecoveryPoint:
          allOf:
          - $ref: '#/components/schemas/AwsBackupRecoveryPointDetails'
          description: Provides details about an Backup backup, or recovery point.
        AwsEc2LaunchTemplate:
          $ref: '#/components/schemas/AwsEc2LaunchTemplateDetails'
        AwsSageMakerNotebookInstance:
          $ref: '#/components/schemas/AwsSageMakerNotebookInstanceDetails'
        AwsWafv2WebAcl:
          $ref: '#/components/schemas/AwsWafv2WebAclDetails'
        AwsWafv2RuleGroup:
          $ref: '#/components/schemas/AwsWafv2RuleGroupDetails'
        AwsEc2RouteTable:
          allOf:
          - $ref: '#/components/schemas/AwsEc2RouteTableDetails'
          description: Provides details about a route table. A route table contains
            a set of rules, called routes, that determine where to direct network
            traffic from your subnet or gateway.
        AwsAmazonMqBroker:
          allOf:
          - $ref: '#/components/schemas/AwsAmazonMqBrokerDetails'
          description: Provides details about AppSync message broker. A message broker
            allows software applications and components to communicate using various
            programming languages, operating systems, and formal messaging protocols.
        AwsAppSyncGraphQlApi:
          allOf:
          - $ref: '#/components/schemas/AwsAppSyncGraphQlApiDetails'
          description: Provides details about an AppSync Graph QL API, which lets
            you query multiple databases, microservices, and APIs from a single GraphQL
            endpoint.
        AwsEventSchemasRegistry:
          allOf:
          - $ref: '#/components/schemas/AwsEventSchemasRegistryDetails'
          description: A schema defines the structure of events that are sent to Amazon
            EventBridge. Schema registries are containers for schemas. They collect
            and organize schemas so that your schemas are in logical groups.
        AwsGuardDutyDetector:
          allOf:
          - $ref: '#/components/schemas/AwsGuardDutyDetectorDetails'
          description: Provides details about an Amazon GuardDuty detector. A detector
            is an object that represents the GuardDuty service. A detector is required
            for GuardDuty to become operational.
        AwsStepFunctionStateMachine:
          allOf:
          - $ref: '#/components/schemas/AwsStepFunctionStateMachineDetails'
          description: Provides details about an Step Functions state machine, which
            is a workflow consisting of a series of event-driven steps.
        AwsAthenaWorkGroup:
          allOf:
          - $ref: '#/components/schemas/AwsAthenaWorkGroupDetails'
          description: Provides information about an Amazon Athena workgroup. A workgroup
            helps you separate users, teams, applications, or workloads. It also helps
            you set limits on data processing and track costs.
        AwsEventsEventbus:
          allOf:
          - $ref: '#/components/schemas/AwsEventsEventbusDetails'
          description: Provides details about Amazon EventBridge event bus for an
            endpoint. An event bus is a router that receives events and delivers them
            to zero or more destinations, or targets.
        AwsDmsEndpoint:
          allOf:
          - $ref: '#/components/schemas/AwsDmsEndpointDetails'
          description: Provides details about an Database Migration Service (DMS)
            endpoint. An endpoint provides connection, data store type, and location
            information about your data store.
        AwsEventsEndpoint:
          allOf:
          - $ref: '#/components/schemas/AwsEventsEndpointDetails'
          description: Provides details about an Amazon EventBridge global endpoint.
            The endpoint can improve your application’s availability by making it
            Regional-fault tolerant.
        AwsDmsReplicationTask:
          allOf:
          - $ref: '#/components/schemas/AwsDmsReplicationTaskDetails'
          description: Provides details about an DMS replication task. A replication
            task moves a set of data from the source endpoint to the target endpoint.
        AwsDmsReplicationInstance:
          allOf:
          - $ref: '#/components/schemas/AwsDmsReplicationInstanceDetails'
          description: Provides details about an DMS replication instance. DMS uses
            a replication instance to connect to your source data store, read the
            source data, and format the data for consumption by the target data store.
        AwsRoute53HostedZone:
          allOf:
          - $ref: '#/components/schemas/AwsRoute53HostedZoneDetails'
          description: Provides details about an Amazon Route 53 hosted zone, including
            the four name servers assigned to the hosted zone. A hosted zone represents
            a collection of records that can be managed together, belonging to a single
            parent domain name.
        AwsMskCluster:
          allOf:
          - $ref: '#/components/schemas/AwsMskClusterDetails'
          description: Provides details about an Amazon Managed Streaming for Apache
            Kafka (Amazon MSK) cluster.
        AwsS3AccessPoint:
          allOf:
          - $ref: '#/components/schemas/AwsS3AccessPointDetails'
          description: Provides details about an Amazon Simple Storage Service (Amazon
            S3) access point. S3 access points are named network endpoints that are
            attached to S3 buckets that you can use to perform S3 object operations.
        AwsEc2ClientVpnEndpoint:
          allOf:
          - $ref: '#/components/schemas/AwsEc2ClientVpnEndpointDetails'
          description: Provides details about an Client VPN endpoint. A Client VPN
            endpoint is the resource that you create and configure to enable and manage
            client VPN sessions. It's the termination point for all client VPN sessions.
      description: 'Additional details about a resource related to a finding.


        To provide the details, use the object that corresponds to the resource type.
        For example, if the resource type is `AwsEc2Instance`, then you use the `AwsEc2Instance`
        object to provide the details.


        If the type-specific object does not contain all of the fields you want to
        populate, then you use the `Other` object to populate those additional fields.


        You also use the `Other` object to populate the details when the selected
        type does not have a corresponding object.'
    ResourceInUseException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/NonEmptyString'
        Code:
          $ref: '#/components/schemas/NonEmptyString'
      description: The request was rejected because it conflicts with the resource's
        availability. For example, you tried to update a security control that's currently
        in the `UPDATING` state.
    ResourceList:
      type: array
      items:
        $ref: '#/components/schemas/Resource'
    ResourceNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/NonEmptyString'
        Code:
          $ref: '#/components/schemas/NonEmptyString'
      description: The request was rejected because we can't find the specified resource.
    Result:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: An Amazon Web Services account ID of the account that was not
            processed.
        ProcessingResult:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The reason that the account was not processed.
      description: Details about the account that was not processed.
    ResultList:
      type: array
      items:
        $ref: '#/components/schemas/Result'
    RouteSetDetails:
      type: object
      properties:
        CarrierGatewayId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the carrier gateway.
        CoreNetworkArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the core network.
        DestinationCidrBlock:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The IPv4 CIDR block used for the destination match.
        DestinationIpv6CidrBlock:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The IPv6 CIDR block used for the destination match.
        DestinationPrefixListId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The prefix of the destination Amazon Web Services service.
        EgressOnlyInternetGatewayId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the egress-only internet gateway.
        GatewayId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of a gateway attached to your VPC.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of a NAT instance in your VPC.
        InstanceOwnerId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the Amazon Web Services account that owns the instance.
        LocalGatewayId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the local gateway.
        NatGatewayId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of a NAT gateway.
        NetworkInterfaceId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the network interface.
        Origin:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Describes how the route was created.
        State:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The state of the route.
        TransitGatewayId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of a transit gateway.
        VpcPeeringConnectionId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of a VPC peering connection.
      description: Provides details about the routes in the route table.
    RouteSetList:
      type: array
      items:
        $ref: '#/components/schemas/RouteSetDetails'
    RuleGroupDetails:
      type: object
      properties:
        RuleVariables:
          allOf:
          - $ref: '#/components/schemas/RuleGroupVariables'
          description: Additional settings to use in the specified rules.
        RulesSource:
          allOf:
          - $ref: '#/components/schemas/RuleGroupSource'
          description: 'The rules and actions for the rule group.


            For stateful rule groups, can contain `RulesString`, `RulesSourceList`,
            or `StatefulRules`.


            For stateless rule groups, contains `StatelessRulesAndCustomActions`.'
      description: Details about the rule group.
    RuleGroupSource:
      type: object
      properties:
        RulesSourceList:
          allOf:
          - $ref: '#/components/schemas/RuleGroupSourceListDetails'
          description: Stateful inspection criteria for a domain list rule group.
            A domain list rule group determines access by specific protocols to specific
            domains.
        RulesString:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Stateful inspection criteria, provided in Suricata compatible
            intrusion prevention system (IPS) rules.
        StatefulRules:
          allOf:
          - $ref: '#/components/schemas/RuleGroupSourceStatefulRulesList'
          description: Suricata rule specifications.
        StatelessRulesAndCustomActions:
          allOf:
          - $ref: '#/components/schemas/RuleGroupSourceStatelessRulesAndCustomActionsDetails'
          description: The stateless rules and custom actions used by a stateless
            rule group.
      description: The rules and actions for the rule group.
    RuleGroupSourceCustomActionsDetails:
      type: object
      properties:
        ActionDefinition:
          allOf:
          - $ref: '#/components/schemas/StatelessCustomActionDefinition'
          description: The definition of a custom action.
        ActionName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A descriptive name of the custom action.
      description: A custom action definition. A custom action is an optional, non-standard
        action to use for stateless packet handling.
    RuleGroupSourceCustomActionsList:
      type: array
      items:
        $ref: '#/components/schemas/RuleGroupSourceCustomActionsDetails'
    RuleGroupSourceListDetails:
      type: object
      properties:
        GeneratedRulesType:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Indicates whether to allow or deny access to the domains listed
            in `Targets`.
        TargetTypes:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The protocols that you want to inspect. Specify `LS_SNI` for
            HTTPS. Specify `HTTP_HOST` for HTTP. You can specify either or both.
        Targets:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The domains that you want to inspect for in your traffic flows.
            You can provide full domain names, or use the '.' prefix as a wildcard.
            For example, `.example.com` matches all domains that end with `example.com`.
      description: Stateful inspection criteria for a domain list rule group.
    RuleGroupSourceStatefulRulesDetails:
      type: object
      properties:
        Action:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Defines what Network Firewall should do with the packets in
            a traffic flow when the flow matches the stateful rule criteria.
        Header:
          allOf:
          - $ref: '#/components/schemas/RuleGroupSourceStatefulRulesHeaderDetails'
          description: The stateful inspection criteria for the rule.
        RuleOptions:
          allOf:
          - $ref: '#/components/schemas/RuleGroupSourceStatefulRulesOptionsList'
          description: Additional options for the rule.
      description: A Suricata rule specification.
    RuleGroupSourceStatefulRulesHeaderDetails:
      type: object
      properties:
        Destination:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The destination IP address or address range to inspect for,
            in CIDR notation. To match with any address, specify `ANY`.
        DestinationPort:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The destination port to inspect for. You can specify an individual
            port, such as `1994`. You also can specify a port range, such as `1990:1994`.
            To match with any port, specify `ANY`.
        Direction:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The direction of traffic flow to inspect. If set to `ANY`,
            the inspection matches bidirectional traffic, both from the source to
            the destination and from the destination to the source. If set to `FORWARD`,
            the inspection only matches traffic going from the source to the destination.
        Protocol:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The protocol to inspect for. To inspector for all protocols,
            use `IP`.
        Source:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The source IP address or address range to inspect for, in CIDR
            notation. To match with any address, specify `ANY`.
        SourcePort:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The source port to inspect for. You can specify an individual
            port, such as `1994`. You also can specify a port range, such as `1990:1994`.
            To match with any port, specify `ANY`.
      description: The inspection criteria for a stateful rule.
    RuleGroupSourceStatefulRulesList:
      type: array
      items:
        $ref: '#/components/schemas/RuleGroupSourceStatefulRulesDetails'
    RuleGroupSourceStatefulRulesOptionsDetails:
      type: object
      properties:
        Keyword:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A keyword to look for.
        Settings:
          allOf:
          - $ref: '#/components/schemas/RuleGroupSourceStatefulRulesRuleOptionsSettingsList'
          description: A list of settings.
      description: A rule option for a stateful rule.
    RuleGroupSourceStatefulRulesOptionsList:
      type: array
      items:
        $ref: '#/components/schemas/RuleGroupSourceStatefulRulesOptionsDetails'
    RuleGroupSourceStatefulRulesRuleOptionsSettingsList:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
    RuleGroupSourceStatelessRuleDefinition:
      type: object
      properties:
        Actions:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The actions to take on a packet that matches one of the stateless
            rule definition's match attributes. You must specify a standard action
            (`aws:pass`, `aws:drop`, or `aws:forward_to_sfe`). You can then add custom
            actions.
        MatchAttributes:
          allOf:
          - $ref: '#/components/schemas/RuleGroupSourceStatelessRuleMatchAttributes'
          description: The criteria for Network Firewall to use to inspect an individual
            packet in a stateless rule inspection.
      description: The definition of the stateless rule.
    RuleGroupSourceStatelessRuleMatchAttributes:
      type: object
      properties:
        DestinationPorts:
          allOf:
          - $ref: '#/components/schemas/RuleGroupSourceStatelessRuleMatchAttributesDestinationPortsList'
          description: A list of port ranges to specify the destination ports to inspect
            for.
        Destinations:
          allOf:
          - $ref: '#/components/schemas/RuleGroupSourceStatelessRuleMatchAttributesDestinationsList'
          description: The destination IP addresses and address ranges to inspect
            for, in CIDR notation.
        Protocols:
          allOf:
          - $ref: '#/components/schemas/RuleGroupSourceStatelessRuleMatchAttributesProtocolsList'
          description: The protocols to inspect for.
        SourcePorts:
          allOf:
          - $ref: '#/components/schemas/RuleGroupSourceStatelessRuleMatchAttributesSourcePortsList'
          description: A list of port ranges to specify the source ports to inspect
            for.
        Sources:
          allOf:
          - $ref: '#/components/schemas/RuleGroupSourceStatelessRuleMatchAttributesSourcesList'
          description: The source IP addresses and address ranges to inspect for,
            in CIDR notation.
        TcpFlags:
          allOf:
          - $ref: '#/components/schemas/RuleGroupSourceStatelessRuleMatchAttributesTcpFlagsList'
          description: The TCP flags and masks to inspect for.
      description: Criteria for the stateless rule.
    RuleGroupSourceStatelessRuleMatchAttributesDestinationPorts:
      type: object
      properties:
        FromPort:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The starting port value for the port range.
        ToPort:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The ending port value for the port range.
      description: A port range to specify the destination ports to inspect for.
    RuleGroupSourceStatelessRuleMatchAttributesDestinationPortsList:
      type: array
      items:
        $ref: '#/components/schemas/RuleGroupSourceStatelessRuleMatchAttributesDestinationPorts'
    RuleGroupSourceStatelessRuleMatchAttributesDestinations:
      type: object
      properties:
        AddressDefinition:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: An IP address or a block of IP addresses.
      description: A destination IP address or range.
    RuleGroupSourceStatelessRuleMatchAttributesDestinationsList:
      type: array
      items:
        $ref: '#/components/schemas/RuleGroupSourceStatelessRuleMatchAttributesDestinations'
    RuleGroupSourceStatelessRuleMatchAttributesProtocolsList:
      type: array
      items:
        $ref: '#/components/schemas/Integer'
    RuleGroupSourceStatelessRuleMatchAttributesSourcePorts:
      type: object
      properties:
        FromPort:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The starting port value for the port range.
        ToPort:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The ending port value for the port range.
      description: A port range to specify the source ports to inspect for.
    RuleGroupSourceStatelessRuleMatchAttributesSourcePortsList:
      type: array
      items:
        $ref: '#/components/schemas/RuleGroupSourceStatelessRuleMatchAttributesSourcePorts'
    RuleGroupSourceStatelessRuleMatchAttributesSources:
      type: object
      properties:
        AddressDefinition:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: An IP address or a block of IP addresses.
      description: A source IP addresses and address range to inspect for.
    RuleGroupSourceStatelessRuleMatchAttributesSourcesList:
      type: array
      items:
        $ref: '#/components/schemas/RuleGroupSourceStatelessRuleMatchAttributesSources'
    RuleGroupSourceStatelessRuleMatchAttributesTcpFlags:
      type: object
      properties:
        Flags:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: Defines the flags from the `Masks` setting that must be set
            in order for the packet to match. Flags that are listed must be set. Flags
            that are not listed must not be set.
        Masks:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The set of flags to consider in the inspection. If not specified,
            then all flags are inspected.
      description: A set of TCP flags and masks to inspect for.
    RuleGroupSourceStatelessRuleMatchAttributesTcpFlagsList:
      type: array
      items:
        $ref: '#/components/schemas/RuleGroupSourceStatelessRuleMatchAttributesTcpFlags'
    RuleGroupSourceStatelessRulesAndCustomActionsDetails:
      type: object
      properties:
        CustomActions:
          allOf:
          - $ref: '#/components/schemas/RuleGroupSourceCustomActionsList'
          description: Custom actions for the rule group.
        StatelessRules:
          allOf:
          - $ref: '#/components/schemas/RuleGroupSourceStatelessRulesList'
          description: Stateless rules for the rule group.
      description: Stateless rules and custom actions for a stateless rule group.
    RuleGroupSourceStatelessRulesDetails:
      type: object
      properties:
        Priority:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Indicates the order in which to run this rule relative to all
            of the rules in the stateless rule group.
        RuleDefinition:
          allOf:
          - $ref: '#/components/schemas/RuleGroupSourceStatelessRuleDefinition'
          description: Provides the definition of the stateless rule.
      description: A stateless rule in the rule group.
    RuleGroupSourceStatelessRulesList:
      type: array
      items:
        $ref: '#/components/schemas/RuleGroupSourceStatelessRulesDetails'
    RuleGroupVariables:
      type: object
      properties:
        IpSets:
          allOf:
          - $ref: '#/components/schemas/RuleGroupVariablesIpSetsDetails'
          description: A list of IP addresses and address ranges, in CIDR notation.
        PortSets:
          allOf:
          - $ref: '#/components/schemas/RuleGroupVariablesPortSetsDetails'
          description: A list of port ranges.
      description: Additional settings to use in the specified rules.
    RuleGroupVariablesIpSetsDetails:
      type: object
      properties:
        Definition:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The list of IP addresses and ranges.
      description: A list of IP addresses and address ranges, in CIDR notation.
    RuleGroupVariablesPortSetsDetails:
      type: object
      properties:
        Definition:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The list of port ranges.
      description: A list of port ranges.
    RuleOrderValue:
      type: integer
      minimum: 1
      maximum: 1000
    RuleStatus:
      type: string
      enum:
      - ENABLED
      - DISABLED
    SecurityControl:
      type: object
      properties:
        SecurityControlId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The unique identifier of a security control across standards.
            Values for this field typically consist of an Amazon Web Services service
            name and a number, such as APIGateway.3.
        SecurityControlArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) for a security control across
            standards, such as `arn:aws:securityhub:eu-central-1:123456789012:security-control/S3.1`.
            This parameter doesn't mention a specific standard.
        Title:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The title of a security control.
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The description of a security control across standards. This
            typically summarizes how Security Hub evaluates the control and the conditions
            under which it produces a failed finding. This parameter doesn't reference
            a specific standard.
        RemediationUrl:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A link to Security Hub documentation that explains how to remediate
            a failed finding for a security control.
        SeverityRating:
          allOf:
          - $ref: '#/components/schemas/SeverityRating'
          description: The severity of a security control. For more information about
            how Security Hub determines control severity, see [Assigning severity
            to control findings](https://docs.aws.amazon.com/securityhub/latest/userguide/controls-findings-create-update.html#control-findings-severity)
            in the _Security Hub User Guide_.
        SecurityControlStatus:
          allOf:
          - $ref: '#/components/schemas/ControlStatus'
          description: The enablement status of a security control in a specific standard.
        UpdateStatus:
          allOf:
          - $ref: '#/components/schemas/UpdateStatus'
          description: Identifies whether customizable properties of a security control
            are reflected in Security Hub findings. A status of `READY` indicates
            that Security Hub uses the current control parameter values when running
            security checks of the control. A status of `UPDATING` indicates that
            all security checks might not use the current parameter values.
        Parameters:
          allOf:
          - $ref: '#/components/schemas/Parameters'
          description: An object that identifies the name of a control parameter,
            its current value, and whether it has been customized.
        LastUpdateReason:
          allOf:
          - $ref: '#/components/schemas/AlphaNumericNonEmptyString'
          description: The most recent reason for updating the customizable properties
            of a security control. This differs from the `UpdateReason` field of the
            [ `BatchUpdateStandardsControlAssociations` ](https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_BatchUpdateStandardsControlAssociations.html)
            API, which tracks the reason for updating the enablement status of a control.
            This field accepts alphanumeric characters in addition to white spaces,
            dashes, and underscores.
      required:
      - SecurityControlId
      - SecurityControlArn
      - Title
      - Description
      - RemediationUrl
      - SeverityRating
      - SecurityControlStatus
      description: A security control in Security Hub describes a security best practice
        related to a specific resource.
    SecurityControlCustomParameter:
      type: object
      properties:
        SecurityControlId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the security control.
        Parameters:
          allOf:
          - $ref: '#/components/schemas/Parameters'
          description: An object that specifies parameter values for a control in
            a configuration policy.
      description: A list of security controls and control parameter values that are
        included in a configuration policy.
    SecurityControlCustomParametersList:
      type: array
      items:
        $ref: '#/components/schemas/SecurityControlCustomParameter'
    SecurityControlDefinition:
      type: object
      properties:
        SecurityControlId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The unique identifier of a security control across standards.
            Values for this field typically consist of an Amazon Web Services service
            name and a number (for example, APIGateway.3). This parameter differs
            from `SecurityControlArn`, which is a unique Amazon Resource Name (ARN)
            assigned to a control. The ARN references the security control ID (for
            example, arn:aws:securityhub:eu-central-1:123456789012:security-control/APIGateway.3).
        Title:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The title of a security control.
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The description of a security control across standards. This
            typically summarizes how Security Hub evaluates the control and the conditions
            under which it produces a failed finding. This parameter doesn't reference
            a specific standard.
        RemediationUrl:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A link to Security Hub documentation that explains how to remediate
            a failed finding for a security control.
        SeverityRating:
          allOf:
          - $ref: '#/components/schemas/SeverityRating'
          description: The severity of a security control. For more information about
            how Security Hub determines control severity, see [Assigning severity
            to control findings](https://docs.aws.amazon.com/securityhub/latest/userguide/controls-findings-create-update.html#control-findings-severity)
            in the _Security Hub User Guide_.
        CurrentRegionAvailability:
          allOf:
          - $ref: '#/components/schemas/RegionAvailabilityStatus'
          description: Specifies whether a security control is available in the current
            Amazon Web Services Region.
        CustomizableProperties:
          allOf:
          - $ref: '#/components/schemas/CustomizableProperties'
          description: Security control properties that you can customize. Currently,
            only parameter customization is supported for select controls. An empty
            array is returned for controls that don’t support custom properties.
        ParameterDefinitions:
          allOf:
          - $ref: '#/components/schemas/ParameterDefinitions'
          description: An object that provides a security control parameter name,
            description, and the options for customizing it. This object is excluded
            for a control that doesn't support custom parameters.
      required:
      - SecurityControlId
      - Title
      - Description
      - RemediationUrl
      - SeverityRating
      - CurrentRegionAvailability
      description: Provides metadata for a security control, including its unique
        standard-agnostic identifier, title, description, severity, availability in
        Amazon Web Services Regions, and a link to remediation steps.
    SecurityControlDefinitions:
      type: array
      items:
        $ref: '#/components/schemas/SecurityControlDefinition'
    SecurityControlParameter:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of a
        Value:
          allOf:
          - $ref: '#/components/schemas/TypeList'
          description: The current value of a control parameter.
      description: A parameter that a security control accepts.
    SecurityControlParametersList:
      type: array
      items:
        $ref: '#/components/schemas/SecurityControlParameter'
    SecurityControlProperty:
      type: string
      enum:
      - Parameters
    SecurityControls:
      type: array
      items:
        $ref: '#/components/schemas/SecurityControl'
    SecurityControlsConfiguration:
      type: object
      properties:
        EnabledSecurityControlIdentifiers:
          allOf:
          - $ref: '#/components/schemas/EnabledSecurityControlIdentifierList'
          description: A list of security controls that are enabled in the configuration
            policy. Security Hub disables all other controls (including newly released
            controls) other than the listed controls.
        DisabledSecurityControlIdentifiers:
          allOf:
          - $ref: '#/components/schemas/DisabledSecurityControlIdentifierList'
          description: A list of security controls that are disabled in the configuration
            policy. Security Hub enables all other controls (including newly released
            controls) other than the listed controls.
        SecurityControlCustomParameters:
          allOf:
          - $ref: '#/components/schemas/SecurityControlCustomParametersList'
          description: A list of security controls and control parameter values that
            are included in a configuration policy.
      description: An object that defines which security controls are enabled in an
        Security Hub configuration policy. The enablement status of a control is aligned
        across all of the enabled standards in an account.
    SecurityGroups:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
    SecurityHubPolicy:
      type: object
      properties:
        ServiceEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether Security Hub is enabled in the policy.
        EnabledStandardIdentifiers:
          allOf:
          - $ref: '#/components/schemas/EnabledStandardIdentifierList'
          description: A list that defines which security standards are enabled in
            the configuration policy.
        SecurityControlsConfiguration:
          allOf:
          - $ref: '#/components/schemas/SecurityControlsConfiguration'
          description: An object that defines which security controls are enabled
            in the configuration policy. The enablement status of a control is aligned
            across all of the enabled standards in an account.
      description: An object that defines how Security Hub is configured. The configuration
        policy includes whether Security Hub is enabled or disabled, a list of enabled
        security standards, a list of enabled or disabled security controls, and a
        list of custom parameter values for specified controls. If you provide a list
        of security controls that are enabled in the configuration policy, Security
        Hub disables all other controls (including newly released controls). If you
        provide a list of security controls that are disabled in the configuration
        policy, Security Hub enables all other controls (including newly released
        controls).
    SensitiveDataDetections:
      type: object
      properties:
        Count:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The total number of occurrences of sensitive data that were
            detected.
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of sensitive data that was detected. For example,
            the type might indicate that the data is an email address.
        Occurrences:
          allOf:
          - $ref: '#/components/schemas/Occurrences'
          description: Details about the sensitive data that was detected.
      description: The list of detected instances of sensitive data.
    SensitiveDataDetectionsList:
      type: array
      items:
        $ref: '#/components/schemas/SensitiveDataDetections'
    SensitiveDataResult:
      type: object
      properties:
        Category:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The category of sensitive data that was detected. For example,
            the category can indicate that the sensitive data involved credentials,
            financial information, or personal information.
        Detections:
          allOf:
          - $ref: '#/components/schemas/SensitiveDataDetectionsList'
          description: The list of detected instances of sensitive data.
        TotalCount:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The total number of occurrences of sensitive data.
      description: Contains a detected instance of sensitive data that are based on
        built-in identifiers.
    SensitiveDataResultList:
      type: array
      items:
        $ref: '#/components/schemas/SensitiveDataResult'
    Sequence:
      type: object
      properties:
        Uid:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Unique identifier of the attack sequence.
        Actors:
          allOf:
          - $ref: '#/components/schemas/ActorsList'
          description: Provides information about the actors involved in the attack
            sequence.
        Endpoints:
          allOf:
          - $ref: '#/components/schemas/NetworkEndpointsList'
          description: Contains information about the network endpoints that were
            used in the attack sequence.
        Signals:
          allOf:
          - $ref: '#/components/schemas/SignalsList'
          description: Contains information about the signals involved in the attack
            sequence.
        SequenceIndicators:
          allOf:
          - $ref: '#/components/schemas/IndicatorsList'
          description: Contains information about the indicators observed in the attack
            sequence. The values for [SignalIndicators](https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_Signal.html)
            are a subset of the values for `SequenceIndicators`, but the values for
            these fields don't always match 1:1.
      description: Contains information about an Amazon GuardDuty Extended Threat
        Detection attack sequence finding. GuardDuty generates an attack sequence
        finding when multiple events align to a potentially suspicious activity. To
        receive GuardDuty attack sequence findings in Security Hub, you must have
        GuardDuty enabled. For more information, see [GuardDuty Extended Threat Detection
        ](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty-extended-threat-detection.html)
        in the _Amazon GuardDuty User Guide_.
    Severity:
      type: object
      properties:
        Product:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: 'Deprecated. This attribute isn''t included in findings. Instead
            of providing `Product`, provide `Original`.


            The native severity as defined by the Amazon Web Services service or integrated
            partner product that generated the finding.'
        Label:
          allOf:
          - $ref: '#/components/schemas/SeverityLabel'
          description: "The severity value of the finding. The allowed values are\
            \ the following.\n\n  * `INFORMATIONAL` \\- No issue was found.\n\n  *\
            \ `LOW` \\- The issue does not require action on its own.\n\n  * `MEDIUM`\
            \ \\- The issue must be addressed but not urgently.\n\n  * `HIGH` \\-\
            \ The issue must be addressed as a priority.\n\n  * `CRITICAL` \\- The\
            \ issue must be remediated immediately to avoid it escalating.\n\nIf you\
            \ provide `Normalized` and don't provide `Label`, then `Label` is set\
            \ automatically as follows.\n\n  * 0 - `INFORMATIONAL`\n\n  * 1–39 - `LOW`\n\
            \n  * 40–69 - `MEDIUM`\n\n  * 70–89 - `HIGH`\n\n  * 90–100 - `CRITICAL`"
        Normalized:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: "Deprecated. The normalized severity of a finding. Instead\
            \ of providing `Normalized`, provide `Label`.\n\nThe value of `Normalized`\
            \ can be an integer between `0` and `100`.\n\nIf you provide `Label` and\
            \ don't provide `Normalized`, then `Normalized` is set automatically as\
            \ follows.\n\n  * `INFORMATIONAL` \\- 0\n\n  * `LOW` \\- 1\n\n  * `MEDIUM`\
            \ \\- 40\n\n  * `HIGH` \\- 70\n\n  * `CRITICAL` \\- 90"
        Original:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The native severity from the finding product that generated
            the finding.


            Length Constraints: Minimum length of 1. Maximum length of 64.'
      description: 'The severity of the finding.


        The finding provider can provide the initial severity. The finding provider
        can only update the severity if it hasn''t been updated using `BatchUpdateFindings`.


        The finding must have either `Label` or `Normalized` populated. If only one
        of these attributes is populated, then Security Hub automatically populates
        the other one. If neither attribute is populated, then the finding is invalid.
        `Label` is the preferred attribute.'
    SeverityLabel:
      type: string
      enum:
      - INFORMATIONAL
      - LOW
      - MEDIUM
      - HIGH
      - CRITICAL
    SeverityRating:
      type: string
      enum:
      - LOW
      - MEDIUM
      - HIGH
      - CRITICAL
    SeverityUpdate:
      type: object
      properties:
        Normalized:
          allOf:
          - $ref: '#/components/schemas/RatioScale'
          description: "The normalized severity for the finding. This attribute is\
            \ to be deprecated in favor of `Label`.\n\nIf you provide `Normalized`\
            \ and don't provide `Label`, `Label` is set automatically as follows.\n\
            \n  * 0 - `INFORMATIONAL`\n\n  * 1–39 - `LOW`\n\n  * 40–69 - `MEDIUM`\n\
            \n  * 70–89 - `HIGH`\n\n  * 90–100 - `CRITICAL`"
        Product:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The native severity as defined by the Amazon Web Services service
            or integrated partner product that generated the finding.
        Label:
          allOf:
          - $ref: '#/components/schemas/SeverityLabel'
          description: "The severity value of the finding. The allowed values are\
            \ the following.\n\n  * `INFORMATIONAL` \\- No issue was found.\n\n  *\
            \ `LOW` \\- The issue does not require action on its own.\n\n  * `MEDIUM`\
            \ \\- The issue must be addressed but not urgently.\n\n  * `HIGH` \\-\
            \ The issue must be addressed as a priority.\n\n  * `CRITICAL` \\- The\
            \ issue must be remediated immediately to avoid it escalating."
      description: Updates to the severity information for a finding.
    Signal:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "The type of the signal used to identify an attack sequence.\n\
            \nSignals can be GuardDuty findings or activities observed in data sources\
            \ that GuardDuty monitors. For more information, see [GuardDuty foundational\
            \ data sources](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_data-sources.html)\
            \ in the _Amazon GuardDuty User Guide_.\n\nA signal type can be one of\
            \ the following values. Here are the related descriptions:\n\n  * `FINDING`\
            \ \\- Individually generated GuardDuty finding.\n\n  * `CLOUD_TRAIL` \\\
            - Activity observed from CloudTrail logs\n\n  * `S3_DATA_EVENTS` \\- Activity\
            \ observed from CloudTrail data events for Amazon Simple Storage Service\
            \ (S3). Activities associated with this type will show up only when you\
            \ have enabled GuardDuty S3 Protection feature in your account. For more\
            \ information about S3 Protection and the steps to enable it, see [S3\
            \ Protection](https://docs.aws.amazon.com/guardduty/latest/ug/s3-protection.html)\
            \ in the _Amazon GuardDuty User Guide_."
        Id:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the signal.
        Title:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The description of the GuardDuty finding.
        ProductArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the product that generated
            the signal.
        ResourceIds:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The ARN or ID of the Amazon Web Services resource associated
            with the signal.
        SignalIndicators:
          allOf:
          - $ref: '#/components/schemas/IndicatorsList'
          description: Contains information about the indicators associated with the
            signals in this attack sequence finding. The values for `SignalIndicators`
            are a subset of the values for [SequenceIndicators](https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_Sequence.html),
            but the values for these fields don't always match 1:1.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the GuardDuty signal. For example, when signal
            type is `FINDING`, the signal name is the name of the finding.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The timestamp when the first finding or activity related to
            this signal was observed.
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The timestamp when this signal was last observed.
        FirstSeenAt:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The timestamp when the first finding or activity related to
            this signal was observed.
        LastSeenAt:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The timestamp when the last finding or activity related to
            this signal was observed.
        Severity:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The severity associated with the signal. For more information
            about severity, see [Severity levels for GuardDuty findings](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_findings-severity.html)
            in the _Amazon GuardDuty User Guide_.
        Count:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of times this signal was observed.
        ActorIds:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: The IDs of the threat actors involved in the signal.
        EndpointIds:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: Information about the endpoint IDs associated with this signal.
      description: 'Contains information about the signals involved in an Amazon GuardDuty
        Extended Threat Detection attack sequence. An attack sequence is a type of
        threat detected by GuardDuty. GuardDuty generates an attack sequence finding
        when multiple events, or signals, align to a potentially suspicious activity.
        When GuardDuty and Security Hub are integrated, GuardDuty sends attack sequence
        findings to Security Hub.


        A signal can be an API activity or a finding that GuardDuty uses to detect
        an attack sequence finding.'
    SignalsList:
      type: array
      items:
        $ref: '#/components/schemas/Signal'
    SizeBytes:
      type: integer
      format: int64
    SoftwarePackage:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the software package.
        Version:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The version of the software package.
        Epoch:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The epoch of the software package.
        Release:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The release of the software package.
        Architecture:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The architecture used for the software package.
        PackageManager:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The source of the package.
        FilePath:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The file system path to the package manager inventory file.
        FixedInVersion:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The version of the software package in which the vulnerability
            has been resolved.
        Remediation:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Describes the actions a customer can take to resolve the vulnerability
            in the software package.
        SourceLayerHash:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The source layer hash of the vulnerable package.
        SourceLayerArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the source layer.
      description: Information about a software package.
    SoftwarePackageList:
      type: array
      items:
        $ref: '#/components/schemas/SoftwarePackage'
    SortCriteria:
      type: array
      items:
        $ref: '#/components/schemas/SortCriterion'
    SortCriterion:
      type: object
      properties:
        Field:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The finding attribute used to sort findings.
        SortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          description: The order used to sort findings.
      description: A collection of finding attributes used to sort findings.
    SortOrder:
      type: string
      enum:
      - asc
      - desc
    Standard:
      type: object
      properties:
        StandardsArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the standard.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the standard.
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A description of the standard.
        EnabledByDefault:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'Whether the standard is enabled by default. When Security
            Hub is enabled from the console, if a standard is enabled by default,
            the check box for that standard is selected by default.


            When Security Hub is enabled using the `EnableSecurityHub` API operation,
            the standard is enabled by default unless `EnableDefaultStandards` is
            set to `false`.'
        StandardsManagedBy:
          allOf:
          - $ref: '#/components/schemas/StandardsManagedBy'
          description: Provides details about the management of a standard.
      description: Provides information about a specific security standard.
    Standards:
      type: array
      items:
        $ref: '#/components/schemas/Standard'
    StandardsControl:
      type: object
      properties:
        StandardsControlArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the security standard control.
        ControlStatus:
          allOf:
          - $ref: '#/components/schemas/ControlStatus'
          description: The current status of the security standard control. Indicates
            whether the control is enabled or disabled. Security Hub does not check
            against disabled controls.
        DisabledReason:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The reason provided for the most recent change in status for
            the control.
        ControlStatusUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time that the status of the security standard
            control was most recently updated.
        ControlId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the security standard control.
        Title:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The title of the security standard control.
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The longer description of the security standard control. Provides
            information about what the control is checking for.
        RemediationUrl:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A link to remediation information for the control in the Security
            Hub user documentation.
        SeverityRating:
          allOf:
          - $ref: '#/components/schemas/SeverityRating'
          description: 'The severity of findings generated from this security standard
            control.


            The finding severity is based on an assessment of how easy it would be
            to compromise Amazon Web Services resources if the issue is detected.'
        RelatedRequirements:
          allOf:
          - $ref: '#/components/schemas/RelatedRequirementsList'
          description: The list of requirements that are related to this control.
      description: Details for an individual security standard control.
    StandardsControlArnList:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
    StandardsControlAssociationDetail:
      type: object
      properties:
        StandardsArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of a security standard.
        SecurityControlId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The unique identifier of a security control across standards.
            Values for this field typically consist of an Amazon Web Services service
            name and a number, such as APIGateway.3.
        SecurityControlArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of a security control across standards, such as `arn:aws:securityhub:eu-central-1:123456789012:security-control/S3.1`.
            This parameter doesn't mention a specific standard.
        AssociationStatus:
          allOf:
          - $ref: '#/components/schemas/AssociationStatus'
          description: Specifies whether a control is enabled or disabled in a specified
            standard.
        RelatedRequirements:
          allOf:
          - $ref: '#/components/schemas/RelatedRequirementsList'
          description: The requirement that underlies a control in the compliance
            framework related to the standard.
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the enablement status of the control in the
            specified standard was last updated.
        UpdatedReason:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The reason for updating the enablement status of a control
            in a specified standard.
        StandardsControlTitle:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The title of a control. This field may reference a specific
            standard.
        StandardsControlDescription:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The description of a control. This typically summarizes how
            Security Hub evaluates the control and the conditions under which it produces
            a failed finding. This parameter may reference a specific standard.
        StandardsControlArns:
          allOf:
          - $ref: '#/components/schemas/StandardsControlArnList'
          description: Provides the input parameter that Security Hub uses to call
            the [UpdateStandardsControl](https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_UpdateStandardsControl.html)
            API. This API can be used to enable or disable a control in a specified
            standard.
      required:
      - StandardsArn
      - SecurityControlId
      - SecurityControlArn
      - AssociationStatus
      description: Provides details about a control's enablement status in a specified
        standard.
    StandardsControlAssociationDetails:
      type: array
      items:
        $ref: '#/components/schemas/StandardsControlAssociationDetail'
    StandardsControlAssociationId:
      type: object
      properties:
        SecurityControlId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The unique identifier (identified with `SecurityControlId`,
            `SecurityControlArn`, or a mix of both parameters) of a security control
            across standards.
        StandardsArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of a standard.
      required:
      - SecurityControlId
      - StandardsArn
      description: An array with one or more objects that includes a security control
        (identified with `SecurityControlId`, `SecurityControlArn`, or a mix of both
        parameters) and the Amazon Resource Name (ARN) of a standard. The security
        control ID or ARN is the same across standards.
    StandardsControlAssociationIds:
      type: array
      items:
        $ref: '#/components/schemas/StandardsControlAssociationId'
    StandardsControlAssociationSummaries:
      type: array
      items:
        $ref: '#/components/schemas/StandardsControlAssociationSummary'
    StandardsControlAssociationSummary:
      type: object
      properties:
        StandardsArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of a standard.
        SecurityControlId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A unique standard-agnostic identifier for a control. Values
            for this field typically consist of an Amazon Web Services service and
            a number, such as APIGateway.5. This field doesn't reference a specific
            standard.
        SecurityControlArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of a control, such as `arn:aws:securityhub:eu-central-1:123456789012:security-control/S3.1`.
            This parameter doesn't mention a specific standard.
        AssociationStatus:
          allOf:
          - $ref: '#/components/schemas/AssociationStatus'
          description: The enablement status of a control in a specific standard.
        RelatedRequirements:
          allOf:
          - $ref: '#/components/schemas/RelatedRequirementsList'
          description: The requirement that underlies this control in the compliance
            framework related to the standard.
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The last time that a control's enablement status in a specified
            standard was updated.
        UpdatedReason:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The reason for updating a control's enablement status in a
            specified standard.
        StandardsControlTitle:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The title of a control.
        StandardsControlDescription:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The description of a control. This typically summarizes how
            Security Hub evaluates the control and the conditions under which it produces
            a failed finding. The parameter may reference a specific standard.
      required:
      - StandardsArn
      - SecurityControlId
      - SecurityControlArn
      - AssociationStatus
      description: An array that provides the enablement status and other details
        for each control that applies to each enabled standard.
    StandardsControlAssociationUpdate:
      type: object
      properties:
        StandardsArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the standard in which you
            want to update the control's enablement status.
        SecurityControlId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The unique identifier for the security control whose enablement
            status you want to update.
        AssociationStatus:
          allOf:
          - $ref: '#/components/schemas/AssociationStatus'
          description: The desired enablement status of the control in the standard.
        UpdatedReason:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The reason for updating the control's enablement status in
            the standard.
      required:
      - StandardsArn
      - SecurityControlId
      - AssociationStatus
      description: An array of requested updates to the enablement status of controls
        in specified standards. The objects in the array include a security control
        ID, the Amazon Resource Name (ARN) of the standard, the requested enablement
        status, and the reason for updating the enablement status.
    StandardsControlAssociationUpdates:
      type: array
      items:
        $ref: '#/components/schemas/StandardsControlAssociationUpdate'
    StandardsControls:
      type: array
      items:
        $ref: '#/components/schemas/StandardsControl'
    StandardsControlsUpdatable:
      type: string
      enum:
      - READY_FOR_UPDATES
      - NOT_READY_FOR_UPDATES
    StandardsInputParameterMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/NonEmptyString'
    StandardsManagedBy:
      type: object
      properties:
        Company:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: An identifier for the company that manages a specific security
            standard. For existing standards, the value is equal to `Amazon Web Services`.
        Product:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: An identifier for the product that manages a specific security
            standard. For existing standards, the value is equal to the Amazon Web
            Services service that manages the standard.
      description: Provides details about the management of a security standard.
    StandardsStatus:
      type: string
      enum:
      - PENDING
      - READY
      - FAILED
      - DELETING
      - INCOMPLETE
    StandardsStatusReason:
      type: object
      properties:
        StatusReasonCode:
          allOf:
          - $ref: '#/components/schemas/StatusReasonCode'
          description: The reason code that represents the reason for the current
            status of a standard subscription.
      required:
      - StatusReasonCode
      description: The reason for the current status of your subscription to the standard.
    StandardsSubscription:
      type: object
      properties:
        StandardsSubscriptionArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the resource that represents your subscription to
            the standard.
        StandardsArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the standard.
        StandardsInput:
          allOf:
          - $ref: '#/components/schemas/StandardsInputParameterMap'
          description: A key-value pair of input for the standard.
        StandardsStatus:
          allOf:
          - $ref: '#/components/schemas/StandardsStatus'
          description: "The status of your subscription to the standard. Possible\
            \ values are:\n\n  * `PENDING` \\- The standard is in the process of being\
            \ enabled. Or the standard is already enabled and Security Hub is adding\
            \ new controls to the standard.\n\n  * `READY` \\- The standard is enabled.\n\
            \n  * `INCOMPLETE` \\- The standard could not be enabled completely. One\
            \ or more errors (`StandardsStatusReason`) occurred when Security Hub\
            \ attempted to enable the standard.\n\n  * `DELETING` \\- The standard\
            \ is in the process of being disabled.\n\n  * `FAILED` \\- The standard\
            \ could not be disabled. One or more errors (`StandardsStatusReason`)\
            \ occurred when Security Hub attempted to disable the standard."
        StandardsControlsUpdatable:
          allOf:
          - $ref: '#/components/schemas/StandardsControlsUpdatable'
          description: "Specifies whether you can retrieve information about and configure\
            \ individual controls that apply to the standard. Possible values are:\n\
            \n  * `READY_FOR_UPDATES` \\- Controls in the standard can be retrieved\
            \ and configured.\n\n  * `NOT_READY_FOR_UPDATES` \\- Controls in the standard\
            \ cannot be retrieved or configured."
        StandardsStatusReason:
          allOf:
          - $ref: '#/components/schemas/StandardsStatusReason'
          description: The reason for the current status.
      required:
      - StandardsSubscriptionArn
      - StandardsArn
      - StandardsInput
      - StandardsStatus
      description: A resource that represents your subscription to a supported standard.
    StandardsSubscriptionArns:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
    StandardsSubscriptionRequest:
      type: object
      properties:
        StandardsArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the standard that you want to enable. To view the
            list of available standards and their ARNs, use the `DescribeStandards`
            operation.
        StandardsInput:
          allOf:
          - $ref: '#/components/schemas/StandardsInputParameterMap'
          description: A key-value pair of input for the standard.
      required:
      - StandardsArn
      description: The standard that you want to enable.
    StandardsSubscriptionRequests:
      type: array
      items:
        $ref: '#/components/schemas/StandardsSubscriptionRequest'
    StandardsSubscriptions:
      type: array
      items:
        $ref: '#/components/schemas/StandardsSubscription'
    StartConfigurationPolicyAssociationRequest:
      type: object
      properties:
        ConfigurationPolicyIdentifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of a configuration policy, the
            universally unique identifier (UUID) of a configuration policy, or a value
            of `SELF_MANAGED_SECURITY_HUB` for a self-managed configuration.
        Target:
          allOf:
          - $ref: '#/components/schemas/Target'
          description: The identifier of the target account, organizational unit,
            or the root to associate with the specified configuration.
      required:
      - ConfigurationPolicyIdentifier
      - Target
    StartConfigurationPolicyAssociationResponse:
      type: object
      properties:
        ConfigurationPolicyId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The UUID of the configuration policy.
        TargetId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the target account, organizational unit,
            or the organization root with which the configuration is associated.
        TargetType:
          allOf:
          - $ref: '#/components/schemas/TargetType'
          description: Indicates whether the target is an Amazon Web Services account,
            organizational unit, or the organization root.
        AssociationType:
          allOf:
          - $ref: '#/components/schemas/AssociationType'
          description: Indicates whether the association between the specified target
            and the configuration was directly applied by the Security Hub delegated
            administrator or inherited from a parent.
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time, in UTC and ISO 8601 format, that the configuration
            policy association was last updated.
        AssociationStatus:
          allOf:
          - $ref: '#/components/schemas/ConfigurationPolicyAssociationStatus'
          description: The current status of the association between the specified
            target and the configuration.
        AssociationStatusMessage:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: An explanation for a `FAILED` value for `AssociationStatus`.
    StartConfigurationPolicyDisassociationRequest:
      type: object
      properties:
        Target:
          allOf:
          - $ref: '#/components/schemas/Target'
          description: The identifier of the target account, organizational unit,
            or the root to disassociate from the specified configuration.
        ConfigurationPolicyIdentifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of a configuration policy, the
            universally unique identifier (UUID) of a configuration policy, or a value
            of `SELF_MANAGED_SECURITY_HUB` for a self-managed configuration.
      required:
      - ConfigurationPolicyIdentifier
    StartConfigurationPolicyDisassociationResponse:
      type: object
      properties: {}
    StatelessCustomActionDefinition:
      type: object
      properties:
        PublishMetricAction:
          allOf:
          - $ref: '#/components/schemas/StatelessCustomPublishMetricAction'
          description: Information about metrics to publish to CloudWatch.
      description: The definition of a custom action that can be used for stateless
        packet handling.
    StatelessCustomPublishMetricAction:
      type: object
      properties:
        Dimensions:
          allOf:
          - $ref: '#/components/schemas/StatelessCustomPublishMetricActionDimensionsList'
          description: Defines CloudWatch dimension values to publish.
      description: Information about metrics to publish to CloudWatch.
    StatelessCustomPublishMetricActionDimension:
      type: object
      properties:
        Value:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The value to use for the custom metric dimension.
      description: Defines a CloudWatch dimension value to publish.
    StatelessCustomPublishMetricActionDimensionsList:
      type: array
      items:
        $ref: '#/components/schemas/StatelessCustomPublishMetricActionDimension'
    StatusReason:
      type: object
      properties:
        ReasonCode:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A code that represents a reason for the control status. For
            the list of status reason codes and their meanings, see [Compliance details
            for control findings](https://docs.aws.amazon.com/securityhub/latest/userguide/controls-findings-create-update.html#control-findings-asff-compliance)
            in the _Security Hub User Guide_.
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The corresponding description for the status reason code.
      required:
      - ReasonCode
      description: Provides additional context for the value of `Compliance.Status`.
    StatusReasonCode:
      type: string
      enum:
      - NO_AVAILABLE_CONFIGURATION_RECORDER
      - MAXIMUM_NUMBER_OF_CONFIG_RULES_EXCEEDED
      - INTERNAL_ERROR
    StatusReasonsList:
      type: array
      items:
        $ref: '#/components/schemas/StatusReason'
    StringConfigurationOptions:
      type: object
      properties:
        DefaultValue:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Security Hub default value for a control parameter that
            is a string.
        Re2Expression:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: An RE2 regular expression that Security Hub uses to validate
            a user-provided control parameter string.
        ExpressionDescription:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The description of the RE2 regular expression.
      description: The options for customizing a security control parameter that is
        a string.
    StringFilter:
      type: object
      properties:
        Value:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The string filter value. Filter values are case sensitive.
            For example, the product name for control-based findings is `Security
            Hub`. If you provide `security hub` as the filter value, there's no match.
        Comparison:
          allOf:
          - $ref: '#/components/schemas/StringFilterComparison'
          description: "The condition to apply to a string value when filtering Security\
            \ Hub findings.\n\nTo search for values that have the filter value, use\
            \ one of the following comparison operators:\n\n  * To search for values\
            \ that include the filter value, use `CONTAINS`. For example, the filter\
            \ `Title CONTAINS CloudFront` matches findings that have a `Title` that\
            \ includes the string CloudFront.\n\n  * To search for values that exactly\
            \ match the filter value, use `EQUALS`. For example, the filter `AwsAccountId\
            \ EQUALS 123456789012` only matches findings that have an account ID of\
            \ `123456789012`.\n\n  * To search for values that start with the filter\
            \ value, use `PREFIX`. For example, the filter `ResourceRegion PREFIX\
            \ us` matches findings that have a `ResourceRegion` that starts with `us`.\
            \ A `ResourceRegion` that starts with a different value, such as `af`,\
            \ `ap`, or `ca`, doesn't match.\n\n`CONTAINS`, `EQUALS`, and `PREFIX`\
            \ filters on the same field are joined by `OR`. A finding matches if it\
            \ matches any one of those filters. For example, the filters `Title CONTAINS\
            \ CloudFront OR Title CONTAINS CloudWatch` match a finding that includes\
            \ either `CloudFront`, `CloudWatch`, or both strings in the title.\n\n\
            To search for values that don’t have the filter value, use one of the\
            \ following comparison operators:\n\n  * To search for values that exclude\
            \ the filter value, use `NOT_CONTAINS`. For example, the filter `Title\
            \ NOT_CONTAINS CloudFront` matches findings that have a `Title` that excludes\
            \ the string CloudFront.\n\n  * To search for values other than the filter\
            \ value, use `NOT_EQUALS`. For example, the filter `AwsAccountId NOT_EQUALS\
            \ 123456789012` only matches findings that have an account ID other than\
            \ `123456789012`.\n\n  * To search for values that don't start with the\
            \ filter value, use `PREFIX_NOT_EQUALS`. For example, the filter `ResourceRegion\
            \ PREFIX_NOT_EQUALS us` matches findings with a `ResourceRegion` that\
            \ starts with a value other than `us`.\n\n`NOT_CONTAINS`, `NOT_EQUALS`,\
            \ and `PREFIX_NOT_EQUALS` filters on the same field are joined by `AND`.\
            \ A finding matches only if it matches all of those filters. For example,\
            \ the filters `Title NOT_CONTAINS CloudFront AND Title NOT_CONTAINS CloudWatch`\
            \ match a finding that excludes both `CloudFront` and `CloudWatch` in\
            \ the title.\n\nYou can’t have both a `CONTAINS` filter and a `NOT_CONTAINS`\
            \ filter on the same field. Similarly, you can't provide both an `EQUALS`\
            \ filter and a `NOT_EQUALS` or `PREFIX_NOT_EQUALS` filter on the same\
            \ field. Combining filters in this way returns an error. `CONTAINS` filters\
            \ can only be used with other `CONTAINS` filters. `NOT_CONTAINS` filters\
            \ can only be used with other `NOT_CONTAINS` filters.\n\nYou can combine\
            \ `PREFIX` filters with `NOT_EQUALS` or `PREFIX_NOT_EQUALS` filters for\
            \ the same field. Security Hub first processes the `PREFIX` filters, and\
            \ then the `NOT_EQUALS` or `PREFIX_NOT_EQUALS` filters.\n\nFor example,\
            \ for the following filters, Security Hub first identifies findings that\
            \ have resource types that start with either `AwsIam` or `AwsEc2`. It\
            \ then excludes findings that have a resource type of `AwsIamPolicy` and\
            \ findings that have a resource type of `AwsEc2NetworkInterface`.\n\n\
            \  * `ResourceType PREFIX AwsIam`\n\n  * `ResourceType PREFIX AwsEc2`\n\
            \n  * `ResourceType NOT_EQUALS AwsIamPolicy`\n\n  * `ResourceType NOT_EQUALS\
            \ AwsEc2NetworkInterface`\n\n`CONTAINS` and `NOT_CONTAINS` operators can\
            \ be used only with automation rules. For more information, see [Automation\
            \ rules](https://docs.aws.amazon.com/securityhub/latest/userguide/automation-rules.html)\
            \ in the _Security Hub User Guide_."
      description: A string filter for filtering Security Hub findings.
    StringFilterComparison:
      type: string
      enum:
      - EQUALS
      - PREFIX
      - NOT_EQUALS
      - PREFIX_NOT_EQUALS
      - CONTAINS
      - NOT_CONTAINS
    StringFilterList:
      type: array
      items:
        $ref: '#/components/schemas/StringFilter'
    StringList:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
    StringListConfigurationOptions:
      type: object
      properties:
        DefaultValue:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The Security Hub default value for a control parameter that
            is a list of strings.
        Re2Expression:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: An RE2 regular expression that Security Hub uses to validate
            a user-provided list of strings for a control parameter.
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of list items that a string list control
            parameter can accept.
        ExpressionDescription:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The description of the RE2 regular expression.
      description: The options for customizing a security control parameter that is
        a list of strings.
    TagKey:
      type: string
      pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The ARN of the resource to apply the tags to.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags to add to the resource. You can add up to 50 tags
            at a time. The tag keys can be no longer than 128 characters. The tag
            values can be no longer than 256 characters.
      required:
      - ResourceArn
      - Tags
    TagResourceResponse:
      type: object
      properties: {}
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    Target:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/NonEmptyString'
        description: |-
          The Amazon Web Services account ID of the target account.
      - allOf:
        - $ref: '#/components/schemas/NonEmptyString'
        description: |-
          The organizational unit ID of the target organizational unit.
      - allOf:
        - $ref: '#/components/schemas/NonEmptyString'
        description: |-
          The ID of the organization root.
      description: |-
        The target account, organizational unit, or the root that is associated with an Security Hub configuration. The configuration can be a configuration policy or self-managed behavior.
    TargetType:
      type: string
      enum:
      - ACCOUNT
      - ORGANIZATIONAL_UNIT
      - ROOT
    Threat:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The name of the threat.


            Length Constraints: Minimum of 1 length. Maximum of 128 length.'
        Severity:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The severity of the threat.


            Length Constraints: Minimum of 1 length. Maximum of 128 length.'
        ItemCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: This total number of items in which the threat has been detected.
        FilePaths:
          allOf:
          - $ref: '#/components/schemas/FilePathList'
          description: 'Provides information about the file paths that were affected
            by the threat.


            Array Members: Minimum number of 1 item. Maximum number of 5 items.'
      description: Provides information about the threat detected in a security finding
        and the file paths that were affected by the threat.
    ThreatIntelIndicator:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/ThreatIntelIndicatorType'
          description: The type of threat intelligence indicator.
        Value:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The value of a threat intelligence indicator.


            Length Constraints: Minimum of 1 length. Maximum of 512 length.'
        Category:
          allOf:
          - $ref: '#/components/schemas/ThreatIntelIndicatorCategory'
          description: The category of a threat intelligence indicator.
        LastObservedAt:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the most recent instance of a threat intelligence
            indicator was observed.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        Source:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The source of the threat intelligence indicator.


            Length Constraints: Minimum of 1 length. Maximum of 64 length.'
        SourceUrl:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The URL to the page or site where you can get more information
            about the threat intelligence indicator.
      description: Details about the threat intelligence related to a finding.
    ThreatIntelIndicatorCategory:
      type: string
      enum:
      - BACKDOOR
      - CARD_STEALER
      - COMMAND_AND_CONTROL
      - DROP_SITE
      - EXPLOIT_SITE
      - KEYLOGGER
    ThreatIntelIndicatorList:
      type: array
      items:
        $ref: '#/components/schemas/ThreatIntelIndicator'
    ThreatIntelIndicatorType:
      type: string
      enum:
      - DOMAIN
      - EMAIL_ADDRESS
      - HASH_MD5
      - HASH_SHA1
      - HASH_SHA256
      - HASH_SHA512
      - IPV4_ADDRESS
      - IPV6_ADDRESS
      - MUTEX
      - PROCESS
      - URL
    ThreatList:
      type: array
      items:
        $ref: '#/components/schemas/Threat'
    Timestamp:
      type: string
      format: date-time
    TypeList:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
    UnprocessedAutomationRule:
      type: object
      properties:
        RuleArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) for the unprocessed automation
            rule.
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The error code associated with the unprocessed automation rule.
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: An error message describing why a request didn't process a
            specific rule.
      description: A list of objects containing `RuleArn`, `ErrorCode`, and `ErrorMessage`.
        This parameter tells you which automation rules the request didn't process
        and why.
    UnprocessedAutomationRulesList:
      type: array
      items:
        $ref: '#/components/schemas/UnprocessedAutomationRule'
    UnprocessedConfigurationPolicyAssociation:
      type: object
      properties:
        ConfigurationPolicyAssociationIdentifiers:
          allOf:
          - $ref: '#/components/schemas/ConfigurationPolicyAssociation'
          description: Configuration policy association identifiers that were specified
            in a `BatchGetConfigurationPolicyAssociations` request but couldn’t be
            processed due to an error.
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: An HTTP status code that identifies why the configuration policy
            association failed.
        ErrorReason:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A string that identifies why the configuration policy association
            failed.
      description: An array of configuration policy associations, one for each configuration
        policy association identifier, that was specified in a `BatchGetConfigurationPolicyAssociations`
        request but couldn’t be processed due to an error.
    UnprocessedConfigurationPolicyAssociationList:
      type: array
      items:
        $ref: '#/components/schemas/UnprocessedConfigurationPolicyAssociation'
    UnprocessedErrorCode:
      type: string
      enum:
      - INVALID_INPUT
      - ACCESS_DENIED
      - NOT_FOUND
      - LIMIT_EXCEEDED
    UnprocessedSecurityControl:
      type: object
      properties:
        SecurityControlId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The control (identified with `SecurityControlId`, `SecurityControlArn`,
            or a mix of both parameters) for which a response couldn't be returned.
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/UnprocessedErrorCode'
          description: The error code for the unprocessed security control.
        ErrorReason:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The reason why the security control was unprocessed.
      required:
      - SecurityControlId
      - ErrorCode
      description: Provides details about a security control for which a response
        couldn't be returned.
    UnprocessedSecurityControls:
      type: array
      items:
        $ref: '#/components/schemas/UnprocessedSecurityControl'
    UnprocessedStandardsControlAssociation:
      type: object
      properties:
        StandardsControlAssociationId:
          allOf:
          - $ref: '#/components/schemas/StandardsControlAssociationId'
          description: An array with one or more objects that includes a security
            control (identified with `SecurityControlId`, `SecurityControlArn`, or
            a mix of both parameters) and the Amazon Resource Name (ARN) of a standard.
            This parameter shows the specific controls for which the enablement status
            couldn't be retrieved in specified standards when calling [BatchUpdateStandardsControlAssociations](https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_BatchUpdateStandardsControlAssociations.html).
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/UnprocessedErrorCode'
          description: The error code for the unprocessed standard and control association.
        ErrorReason:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The reason why the standard and control association was unprocessed.
      required:
      - StandardsControlAssociationId
      - ErrorCode
      description: Provides details about which control's enablement status couldn't
        be retrieved in a specified standard when calling [BatchUpdateStandardsControlAssociations](https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_BatchUpdateStandardsControlAssociations.html).
        This parameter also provides details about why the request was unprocessed.
    UnprocessedStandardsControlAssociationUpdate:
      type: object
      properties:
        StandardsControlAssociationUpdate:
          allOf:
          - $ref: '#/components/schemas/StandardsControlAssociationUpdate'
          description: An array of control and standard associations for which an
            update failed when calling [BatchUpdateStandardsControlAssociations](https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_BatchUpdateStandardsControlAssociations.html).
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/UnprocessedErrorCode'
          description: The error code for the unprocessed update of the control's
            enablement status in the specified standard.
        ErrorReason:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The reason why a control's enablement status in the specified
            standard couldn't be updated.
      required:
      - StandardsControlAssociationUpdate
      - ErrorCode
      description: Provides details about which control's enablement status could
        not be updated in a specified standard when calling the [BatchUpdateStandardsControlAssociations](https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_BatchUpdateStandardsControlAssociations.html)
        API. This parameter also provides details about why the request was unprocessed.
    UnprocessedStandardsControlAssociationUpdates:
      type: array
      items:
        $ref: '#/components/schemas/UnprocessedStandardsControlAssociationUpdate'
    UnprocessedStandardsControlAssociations:
      type: array
      items:
        $ref: '#/components/schemas/UnprocessedStandardsControlAssociation'
    UntagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The ARN of the resource to remove the tags from.
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: The tag keys associated with the tags to remove from the resource.
            You can remove up to 50 tags at a time.
      required:
      - ResourceArn
      - TagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateActionTargetRequest:
      type: object
      properties:
        ActionTargetArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the custom action target to update.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The updated name of the custom action target.
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The updated description for the custom action target.
      required:
      - ActionTargetArn
    UpdateActionTargetResponse:
      type: object
      properties: {}
    UpdateAutomationRulesRequestItem:
      type: object
      properties:
        RuleArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) for the rule.
        RuleStatus:
          allOf:
          - $ref: '#/components/schemas/RuleStatus'
          description: Whether the rule is active after it is created. If this parameter
            is equal to `ENABLED`, Security Hub starts applying the rule to findings
            and finding updates after the rule is created. To change the value of
            this parameter after creating a rule, use [ `BatchUpdateAutomationRules`
            ](https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_BatchUpdateAutomationRules.html).
        RuleOrder:
          allOf:
          - $ref: '#/components/schemas/RuleOrderValue'
          description: An integer ranging from 1 to 1000 that represents the order
            in which the rule action is applied to findings. Security Hub applies
            rules with lower values for this parameter first.
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A description of the rule.
        RuleName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the rule.
        IsTerminal:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether a rule is the last to be applied with respect
            to a finding that matches the rule criteria. This is useful when a finding
            matches the criteria for multiple rules, and each rule has different actions.
            If a rule is terminal, Security Hub applies the rule action to a finding
            that matches the rule criteria and doesn't evaluate other rules for the
            finding. By default, a rule isn't terminal.
        Criteria:
          allOf:
          - $ref: '#/components/schemas/AutomationRulesFindingFilters'
          description: A set of ASFF finding field attributes and corresponding expected
            values that Security Hub uses to filter findings. If a rule is enabled
            and a finding matches the conditions specified in this parameter, Security
            Hub applies the rule action to the finding.
        Actions:
          allOf:
          - $ref: '#/components/schemas/ActionList'
          description: One or more actions to update finding fields if a finding matches
            the conditions specified in `Criteria`.
      required:
      - RuleArn
      description: Specifies the parameters to update in an existing automation rule.
    UpdateAutomationRulesRequestItemsList:
      type: array
      items:
        $ref: '#/components/schemas/UpdateAutomationRulesRequestItem'
    UpdateConfigurationPolicyRequest:
      type: object
      properties:
        Identifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) or universally unique identifier
            (UUID) of the configuration policy.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The name of the configuration policy. Alphanumeric characters
            and the following ASCII characters are permitted: `-, ., !, *, /`.'
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The description of the configuration policy.
        UpdatedReason:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The reason for updating the configuration policy.
        ConfigurationPolicy:
          allOf:
          - $ref: '#/components/schemas/Policy'
          description: 'An object that defines how Security Hub is configured. It
            includes whether Security Hub is enabled or disabled, a list of enabled
            security standards, a list of enabled or disabled security controls, and
            a list of custom parameter values for specified controls. If you provide
            a list of security controls that are enabled in the configuration policy,
            Security Hub disables all other controls (including newly released controls).
            If you provide a list of security controls that are disabled in the configuration
            policy, Security Hub enables all other controls (including newly released
            controls).


            When updating a configuration policy, provide a complete list of standards
            that you want to enable and a complete list of controls that you want
            to enable or disable. The updated configuration replaces the current configuration.'
      required:
      - Identifier
    UpdateConfigurationPolicyResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the configuration policy.
        Id:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The UUID of the configuration policy.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the configuration policy.
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The description of the configuration policy.
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time, in UTC and ISO 8601 format, that the configuration
            policy was last updated.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time, in UTC and ISO 8601 format, that the configuration
            policy was created.
        ConfigurationPolicy:
          allOf:
          - $ref: '#/components/schemas/Policy'
          description: An object that defines how Security Hub is configured. It includes
            whether Security Hub is enabled or disabled, a list of enabled security
            standards, a list of enabled or disabled security controls, and a list
            of custom parameter values for specified controls. If the request included
            a list of security controls that are enabled in the configuration policy,
            Security Hub disables all other controls (including newly released controls).
            If the request included a list of security controls that are disabled
            in the configuration policy, Security Hub enables all other controls (including
            newly released controls).
    UpdateFindingAggregatorRequest:
      type: object
      properties:
        FindingAggregatorArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the finding aggregator. To obtain the ARN, use `ListFindingAggregators`.
        RegionLinkingMode:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "Indicates whether to aggregate findings from all of the available\
            \ Regions in the current partition. Also determines whether to automatically\
            \ aggregate findings from new Regions as Security Hub supports them and\
            \ you opt into them.\n\nThe selected option also determines how to use\
            \ the Regions provided in the Regions list.\n\nThe options are as follows:\n\
            \n  * `ALL_REGIONS` \\- Aggregates findings from all of the Regions where\
            \ Security Hub is enabled. When you choose this option, Security Hub also\
            \ automatically aggregates findings from new Regions as Security Hub supports\
            \ them and you opt into them. \n\n  * `ALL_REGIONS_EXCEPT_SPECIFIED` \\\
            - Aggregates findings from all of the Regions where Security Hub is enabled,\
            \ except for the Regions listed in the `Regions` parameter. When you choose\
            \ this option, Security Hub also automatically aggregates findings from\
            \ new Regions as Security Hub supports them and you opt into them. \n\n\
            \  * `SPECIFIED_REGIONS` \\- Aggregates findings only from the Regions\
            \ listed in the `Regions` parameter. Security Hub does not automatically\
            \ aggregate findings from new Regions. \n\n  * `NO_REGIONS` \\- Aggregates\
            \ no data because no Regions are selected as linked Regions."
        Regions:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: 'If `RegionLinkingMode` is `ALL_REGIONS_EXCEPT_SPECIFIED`,
            then this is a space-separated list of Regions that don''t replicate and
            send findings to the home Region.


            If `RegionLinkingMode` is `SPECIFIED_REGIONS`, then this is a space-separated
            list of Regions that do replicate and send findings to the home Region.


            An `InvalidInputException` error results if you populate this field while
            `RegionLinkingMode` is `NO_REGIONS`.'
      required:
      - FindingAggregatorArn
      - RegionLinkingMode
    UpdateFindingAggregatorResponse:
      type: object
      properties:
        FindingAggregatorArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the finding aggregator.
        FindingAggregationRegion:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The home Region. Findings generated in linked Regions are replicated
            and sent to the home Region.
        RegionLinkingMode:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Indicates whether to link all Regions, all Regions except for
            a list of excluded Regions, or a list of included Regions.
        Regions:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The list of excluded Regions or included Regions.
    UpdateFindingsRequest:
      type: object
      properties:
        Filters:
          allOf:
          - $ref: '#/components/schemas/AwsSecurityFindingFilters'
          description: A collection of attributes that specify which findings you
            want to update.
        Note:
          allOf:
          - $ref: '#/components/schemas/NoteUpdate'
          description: The updated note for the finding.
        RecordState:
          allOf:
          - $ref: '#/components/schemas/RecordState'
          description: The updated record state for the finding.
      required:
      - Filters
    UpdateFindingsResponse:
      type: object
      properties: {}
    UpdateInsightRequest:
      type: object
      properties:
        InsightArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the insight that you want to update.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The updated name for the insight.
        Filters:
          allOf:
          - $ref: '#/components/schemas/AwsSecurityFindingFilters'
          description: The updated filters that define this insight.
        GroupByAttribute:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The updated `GroupBy` attribute that defines this insight.
      required:
      - InsightArn
    UpdateInsightResponse:
      type: object
      properties: {}
    UpdateOrganizationConfigurationRequest:
      type: object
      properties:
        AutoEnable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'Whether to automatically enable Security Hub in new member
            accounts when they join the organization.


            If set to `true`, then Security Hub is automatically enabled in new accounts.
            If set to `false`, then Security Hub isn''t enabled in new accounts automatically.
            The default value is `false`.


            If the `ConfigurationType` of your organization is set to `CENTRAL`, then
            this field is set to `false` and can''t be changed in the home Region
            and linked Regions. However, in that case, the delegated administrator
            can create a configuration policy in which Security Hub is enabled and
            associate the policy with new organization accounts.'
        AutoEnableStandards:
          allOf:
          - $ref: '#/components/schemas/AutoEnableStandards'
          description: 'Whether to automatically enable Security Hub [default standards](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards-enable-disable.html)
            in new member accounts when they join the organization.


            The default value of this parameter is equal to `DEFAULT`.


            If equal to `DEFAULT`, then Security Hub default standards are automatically
            enabled for new member accounts. If equal to `NONE`, then default standards
            are not automatically enabled for new member accounts.


            If the `ConfigurationType` of your organization is set to `CENTRAL`, then
            this field is set to `NONE` and can''t be changed in the home Region and
            linked Regions. However, in that case, the delegated administrator can
            create a configuration policy in which specific security standards are
            enabled and associate the policy with new organization accounts.'
        OrganizationConfiguration:
          $ref: '#/components/schemas/OrganizationConfiguration'
      required:
      - AutoEnable
    UpdateOrganizationConfigurationResponse:
      type: object
      properties: {}
    UpdateSecurityControlRequest:
      type: object
      properties:
        SecurityControlId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) or ID of the control to update.
        Parameters:
          allOf:
          - $ref: '#/components/schemas/Parameters'
          description: An object that specifies which security control parameters
            to update.
        LastUpdateReason:
          allOf:
          - $ref: '#/components/schemas/AlphaNumericNonEmptyString'
          description: The most recent reason for updating the properties of the security
            control. This field accepts alphanumeric characters in addition to white
            spaces, dashes, and underscores.
      required:
      - SecurityControlId
      - Parameters
    UpdateSecurityControlResponse:
      type: object
      properties: {}
    UpdateSecurityHubConfigurationRequest:
      type: object
      properties:
        AutoEnableControls:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'Whether to automatically enable new controls when they are
            added to standards that are enabled.


            By default, this is set to `true`, and new controls are enabled automatically.
            To not automatically enable new controls, set this to `false`.


            When you automatically enable new controls, you can interact with the
            controls in the console and programmatically immediately after release.
            However, automatically enabled controls have a temporary default status
            of `DISABLED`. It can take up to several days for Security Hub to process
            the control release and designate the control as `ENABLED` in your account.
            During the processing period, you can manually enable or disable a control,
            and Security Hub will maintain that designation regardless of whether
            you have `AutoEnableControls` set to `true`.'
        ControlFindingGenerator:
          allOf:
          - $ref: '#/components/schemas/ControlFindingGenerator'
          description: 'Updates whether the calling account has consolidated control
            findings turned on. If the value for this field is set to `SECURITY_CONTROL`,
            Security Hub generates a single finding for a control check even when
            the check applies to multiple enabled standards.


            If the value for this field is set to `STANDARD_CONTROL`, Security Hub
            generates separate findings for a control check when the check applies
            to multiple enabled standards.


            For accounts that are part of an organization, this value can only be
            updated in the administrator account.'
    UpdateSecurityHubConfigurationResponse:
      type: object
      properties: {}
    UpdateStandardsControlRequest:
      type: object
      properties:
        StandardsControlArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ARN of the security standard control to enable or disable.
        ControlStatus:
          allOf:
          - $ref: '#/components/schemas/ControlStatus'
          description: The updated status of the security standard control.
        DisabledReason:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A description of the reason why you are disabling a security
            standard control. If you are disabling a control, then this is required.
      required:
      - StandardsControlArn
    UpdateStandardsControlResponse:
      type: object
      properties: {}
    UpdateStatus:
      type: string
      enum:
      - READY
      - UPDATING
    UserAccount:
      type: object
      properties:
        Uid:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The unique identifier of the user account involved in the attack
            sequence.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the user account involved in the attack sequence.
      description: Provides Amazon Web Services account information of the user involved
        in an Amazon GuardDuty Extended Threat Detection attack sequence. GuardDuty
        generates an attack sequence finding when multiple events align to a potentially
        suspicious activity. To receive GuardDuty attack sequence findings in Security
        Hub, you must have GuardDuty enabled. For more information, see [GuardDuty
        Extended Threat Detection ](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty-extended-threat-detection.html)
        in the _Amazon GuardDuty User Guide_.
    VerificationState:
      type: string
      enum:
      - UNKNOWN
      - TRUE_POSITIVE
      - FALSE_POSITIVE
      - BENIGN_POSITIVE
    VolumeMount:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the volume.
        MountPath:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The path in the container at which the volume should be mounted.
      description: Describes the mounting of a volume in a container.
    VolumeMountList:
      type: array
      items:
        $ref: '#/components/schemas/VolumeMount'
    VpcInfoCidrBlockSetDetails:
      type: object
      properties:
        CidrBlock:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The IPv4 CIDR block for the VPC.
      description: Provides details about the IPv4 CIDR blocks for the VPC.
    VpcInfoCidrBlockSetList:
      type: array
      items:
        $ref: '#/components/schemas/VpcInfoCidrBlockSetDetails'
    VpcInfoIpv6CidrBlockSetDetails:
      type: object
      properties:
        Ipv6CidrBlock:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The IPv6 CIDR block for the VPC.
      description: Provides details about the IPv6 CIDR blocks for the VPC.
    VpcInfoIpv6CidrBlockSetList:
      type: array
      items:
        $ref: '#/components/schemas/VpcInfoIpv6CidrBlockSetDetails'
    VpcInfoPeeringOptionsDetails:
      type: object
      properties:
        AllowDnsResolutionFromRemoteVpc:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether a local VPC can resolve public DNS hostnames
            to private IP addresses when queried from instances in a peer VPC.
        AllowEgressFromLocalClassicLinkToRemoteVpc:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether a local ClassicLink connection can communicate
            with the peer VPC over the VPC peering connection.
        AllowEgressFromLocalVpcToRemoteClassicLink:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether a local VPC can communicate with a ClassicLink
            connection in the peer VPC over the VPC peering connection.
      description: Provides information about the VPC peering connection options for
        the accepter or requester VPC.
    Vulnerability:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the vulnerability.
        VulnerablePackages:
          allOf:
          - $ref: '#/components/schemas/SoftwarePackageList'
          description: List of software packages that have the vulnerability.
        Cvss:
          allOf:
          - $ref: '#/components/schemas/CvssList'
          description: CVSS scores from the advisory related to the vulnerability.
        RelatedVulnerabilities:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: List of vulnerabilities that are related to this vulnerability.
        Vendor:
          allOf:
          - $ref: '#/components/schemas/VulnerabilityVendor'
          description: Information about the vendor that generates the vulnerability
            report.
        ReferenceUrls:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: A list of URLs that provide additional information about the
            vulnerability.
        FixAvailable:
          allOf:
          - $ref: '#/components/schemas/VulnerabilityFixAvailable'
          description: "Specifies if all vulnerable packages in a finding have a value\
            \ for `FixedInVersion` and `Remediation`. This field is evaluated for\
            \ each vulnerability `Id` based on the number of vulnerable packages that\
            \ have a value for both `FixedInVersion` and `Remediation`. Valid values\
            \ are as follows:\n\n  * `YES` if all vulnerable packages have a value\
            \ for both `FixedInVersion` and `Remediation`\n\n  * `NO` if no vulnerable\
            \ packages have a value for `FixedInVersion` and `Remediation`\n\n  *\
            \ `PARTIAL` otherwise"
        EpssScore:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The Exploit Prediction Scoring System (EPSS) score for a finding.
        ExploitAvailable:
          allOf:
          - $ref: '#/components/schemas/VulnerabilityExploitAvailable'
          description: Whether an exploit is available for a finding.
        LastKnownExploitAt:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The date and time of the last exploit associated with a finding
            discovered in your environment.
        CodeVulnerabilities:
          allOf:
          - $ref: '#/components/schemas/VulnerabilityCodeVulnerabilitiesList'
          description: The vulnerabilities found in your Lambda function code. This
            field pertains to findings that Security Hub receives from Amazon Inspector.
      required:
      - Id
      description: A vulnerability associated with a finding.
    VulnerabilityCodeVulnerabilities:
      type: object
      properties:
        Cwes:
          allOf:
          - $ref: '#/components/schemas/TypeList'
          description: The Common Weakness Enumeration (CWE) item associated with
            the detected code vulnerability.
        FilePath:
          allOf:
          - $ref: '#/components/schemas/CodeVulnerabilitiesFilePath'
          description: Provides details about where a code vulnerability is located
            in your Lambda function.
        SourceArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the Lambda layer in which
            the code vulnerability is located.
      description: Provides details about the vulnerabilities found in your Lambda
        function code. This field pertains to findings that Security Hub receives
        from Amazon Inspector.
    VulnerabilityCodeVulnerabilitiesList:
      type: array
      items:
        $ref: '#/components/schemas/VulnerabilityCodeVulnerabilities'
    VulnerabilityExploitAvailable:
      type: string
      enum:
      - 'YES'
      - 'NO'
    VulnerabilityFixAvailable:
      type: string
      enum:
      - 'YES'
      - 'NO'
      - PARTIAL
    VulnerabilityList:
      type: array
      items:
        $ref: '#/components/schemas/Vulnerability'
    VulnerabilityVendor:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the vendor.
        Url:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The URL of the vulnerability advisory.
        VendorSeverity:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The severity that the vendor assigned to the vulnerability.
        VendorCreatedAt:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the vulnerability advisory was created.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
        VendorUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'Indicates when the vulnerability advisory was last updated.


            For more information about the validation and formatting of timestamp
            fields in Security Hub, see [Timestamps](https://docs.aws.amazon.com/securityhub/1.0/APIReference/Welcome.html#timestamps).'
      required:
      - Name
      description: A vendor that generates a vulnerability report.
    WafAction:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: "Specifies how you want WAF to respond to requests that match\
            \ the settings in a rule.\n\nValid settings include the following:\n\n\
            \  * `ALLOW` \\- WAF allows requests\n\n  * `BLOCK` \\- WAF blocks requests\n\
            \n  * `COUNT` \\- WAF increments a counter of the requests that match\
            \ all of the conditions in the rule. WAF then continues to inspect the\
            \ web request based on the remaining rules in the web ACL. You can't specify\
            \ `COUNT` for the default action for a web ACL."
      description: Details about the action that CloudFront or WAF takes when a web
        request matches the conditions in the rule.
    WafExcludedRule:
      type: object
      properties:
        RuleId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The unique identifier for the rule to exclude from the rule
            group.
      description: Details about a rule to exclude from a rule group.
    WafExcludedRuleList:
      type: array
      items:
        $ref: '#/components/schemas/WafExcludedRule'
    WafOverrideAction:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: '`COUNT` overrides the action specified by the individual rule
            within a `RuleGroup` .


            If set to `NONE`, the rule''s action takes place.'
      description: Details about an override action for a rule.
    Workflow:
      type: object
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/WorkflowStatus'
          description: "The status of the investigation into the finding. The workflow\
            \ status is specific to an individual finding. It does not affect the\
            \ generation of new findings. For example, setting the workflow status\
            \ to `SUPPRESSED` or `RESOLVED` does not prevent a new finding for the\
            \ same issue.\n\nThe allowed values are the following.\n\n  * `NEW` \\\
            - The initial state of a finding, before it is reviewed.\n\nSecurity Hub\
            \ also resets the workflow status from `NOTIFIED` or `RESOLVED` to `NEW`\
            \ in the following cases:\n\n    * `RecordState` changes from `ARCHIVED`\
            \ to `ACTIVE`.\n\n    * `ComplianceStatus` changes from `PASSED` to either\
            \ `WARNING`, `FAILED`, or `NOT_AVAILABLE`.\n\n  * `NOTIFIED` \\- Indicates\
            \ that you notified the resource owner about the security issue. Used\
            \ when the initial reviewer is not the resource owner, and needs intervention\
            \ from the resource owner.\n\n  * `SUPPRESSED` \\- Indicates that you\
            \ reviewed the finding and don't believe that any action is needed. The\
            \ finding is no longer updated.\n\n  * `RESOLVED` \\- The finding was\
            \ reviewed and remediated and is now considered resolved."
      description: Provides details about the status of the investigation into a finding.
    WorkflowState:
      type: string
      enum:
      - NEW
      - ASSIGNED
      - IN_PROGRESS
      - DEFERRED
      - RESOLVED
    WorkflowStatus:
      type: string
      enum:
      - NEW
      - NOTIFIED
      - RESOLVED
      - SUPPRESSED
    WorkflowUpdate:
      type: object
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/WorkflowStatus'
          description: "The status of the investigation into the finding. The workflow\
            \ status is specific to an individual finding. It does not affect the\
            \ generation of new findings. For example, setting the workflow status\
            \ to `SUPPRESSED` or `RESOLVED` does not prevent a new finding for the\
            \ same issue.\n\nThe allowed values are the following.\n\n  * `NEW` \\\
            - The initial state of a finding, before it is reviewed.\n\nSecurity Hub\
            \ also resets `WorkFlowStatus` from `NOTIFIED` or `RESOLVED` to `NEW`\
            \ in the following cases:\n\n    * The record state changes from `ARCHIVED`\
            \ to `ACTIVE`.\n\n    * The compliance status changes from `PASSED` to\
            \ either `WARNING`, `FAILED`, or `NOT_AVAILABLE`.\n\n  * `NOTIFIED` \\\
            - Indicates that you notified the resource owner about the security issue.\
            \ Used when the initial reviewer is not the resource owner, and needs\
            \ intervention from the resource owner.\n\n  * `RESOLVED` \\- The finding\
            \ was reviewed and remediated and is now considered resolved.\n\n  * `SUPPRESSED`\
            \ \\- Indicates that you reviewed the finding and don't believe that any\
            \ action is needed. The finding is no longer updated."
      description: Used to update information about the investigation into the finding.
