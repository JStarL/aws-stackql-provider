openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: iot_wireless
  x-aws-serviceName: iotwireless
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2020-11-22'
  title: AWS IoT Wireless
  description: |-
    AWS IoT Wireless provides bi-directional communication between internet-connected wireless devices and the AWS Cloud. To onboard both LoRaWAN and Sidewalk devices to AWS IoT, use the IoT Wireless API. These wireless devices use the Low Power Wide Area Networking (LPWAN) communication protocol to communicate with AWS IoT.

    Using the API, you can perform create, read, update, and delete operations for your wireless devices, gateways, destinations, and profiles. After onboarding your devices, you can use the API operations to set log levels and monitor your devices with CloudWatch.

    You can also use the API operations to create multicast groups and schedule a multicast session for sending a downlink message to devices in the group. By using Firmware Updates Over-The-Air (FUOTA) API operations, you can create a FUOTA task and schedule a session to update the firmware of individual devices or an entire group of devices in a multicast group.

    To connect to the AWS IoT Wireless Service, use the Service endpoints as described in [IoT Wireless Service endpoints](https://docs.aws.amazon.com/general/latest/gr/iot-lorawan.html#iot-wireless_region). You can use both IPv4 and IPv6 protocols to connect to the endpoints and send requests to the AWS IoT Wireless service. For more information, see [Using IPv6 with AWS IoT Wireless](https://docs.aws.amazon.com/iot-wireless/latest/developerguide/wireless-ipv6-access.html).
servers:
- description: The AWS IoT Wireless regional endpoint
  url: https://api.iotwireless.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /partner-accounts:
    post:
      operationId: AssociateAwsAccountWithPartnerAccount
      description: |-
        Associates a partner account with your AWS account.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Sidewalk:
                  $ref: '#/components/schemas/SidewalkAccountInfo'
                ClientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
                Tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListPartnerAccounts
      description: |-
        Lists the partner accounts associated with your AWS account.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /fuota-tasks/{Id}/multicast-group:
    put:
      operationId: AssociateMulticastGroupWithFuotaTask
      description: |-
        Associate a multicast group with a FUOTA task.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FuotaTaskId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MulticastGroupId:
                  $ref: '#/components/schemas/MulticastGroupId'
      responses:
        '204': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /fuota-tasks/{Id}/wireless-device:
    put:
      operationId: AssociateWirelessDeviceWithFuotaTask
      description: |-
        Associate a wireless device with a FUOTA task.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FuotaTaskId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                WirelessDeviceId:
                  $ref: '#/components/schemas/WirelessDeviceId'
      responses:
        '204': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /multicast-groups/{Id}/wireless-device:
    put:
      operationId: AssociateWirelessDeviceWithMulticastGroup
      description: |-
        Associates a wireless device with a multicast group.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MulticastGroupId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                WirelessDeviceId:
                  $ref: '#/components/schemas/WirelessDeviceId'
      responses:
        '204': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /wireless-devices/{Id}/thing:
    put:
      operationId: AssociateWirelessDeviceWithThing
      description: |-
        Associates a wireless device with a thing.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WirelessDeviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ThingArn:
                  $ref: '#/components/schemas/ThingArn'
      responses:
        '204': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: DisassociateWirelessDeviceFromThing
      description: |-
        Disassociates a wireless device from its currently associated thing.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WirelessDeviceId'
      responses:
        '204': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /wireless-gateways/{Id}/certificate:
    put:
      operationId: AssociateWirelessGatewayWithCertificate
      description: |-
        Associates a wireless gateway with a certificate.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WirelessGatewayId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                IotCertificateId:
                  $ref: '#/components/schemas/IotCertificateId'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: DisassociateWirelessGatewayFromCertificate
      description: |-
        Disassociates a wireless gateway from its currently associated certificate.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WirelessGatewayId'
      responses:
        '204': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetWirelessGatewayCertificate
      description: |-
        Gets the ID of the certificate that is currently associated with a wireless gateway.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WirelessGatewayId'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /wireless-gateways/{Id}/thing:
    put:
      operationId: AssociateWirelessGatewayWithThing
      description: |-
        Associates a wireless gateway with a thing.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WirelessGatewayId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ThingArn:
                  $ref: '#/components/schemas/ThingArn'
      responses:
        '204': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: DisassociateWirelessGatewayFromThing
      description: |-
        Disassociates a wireless gateway from its currently associated thing.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WirelessGatewayId'
      responses:
        '204': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /multicast-groups/{Id}/session:
    delete:
      operationId: CancelMulticastGroupSession
      description: |-
        Cancels an existing multicast group session.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MulticastGroupId'
      responses:
        '204': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetMulticastGroupSession
      description: |-
        Gets information about a multicast group session.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MulticastGroupId'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: StartMulticastGroupSession
      description: |-
        Starts a multicast group session.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MulticastGroupId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                LoRaWAN:
                  $ref: '#/components/schemas/LoRaWANMulticastSession'
      responses:
        '204': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /destinations:
    post:
      operationId: CreateDestination
      description: |-
        Creates a new destination that maps a device message to an AWS IoT rule.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/DestinationName'
                ExpressionType:
                  $ref: '#/components/schemas/ExpressionType'
                Expression:
                  $ref: '#/components/schemas/Expression'
                Description:
                  $ref: '#/components/schemas/Description'
                RoleArn:
                  $ref: '#/components/schemas/RoleArn'
                Tags:
                  $ref: '#/components/schemas/TagList'
                ClientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
      responses:
        '201': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListDestinations
      description: |-
        Lists the destinations registered to your AWS account.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /device-profiles:
    post:
      operationId: CreateDeviceProfile
      description: |-
        Creates a new device profile.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/DeviceProfileName'
                LoRaWAN:
                  $ref: '#/components/schemas/LoRaWANDeviceProfile'
                Tags:
                  $ref: '#/components/schemas/TagList'
                ClientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
                Sidewalk:
                  $ref: '#/components/schemas/SidewalkCreateDeviceProfile'
      responses:
        '201': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListDeviceProfiles
      description: |-
        Lists the device profiles registered to your AWS account.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: deviceProfileType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/DeviceProfileType'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /fuota-tasks:
    post:
      operationId: CreateFuotaTask
      description: |-
        Creates a FUOTA task.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/FuotaTaskName'
                Description:
                  $ref: '#/components/schemas/Description'
                ClientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
                LoRaWAN:
                  $ref: '#/components/schemas/LoRaWANFuotaTask'
                FirmwareUpdateImage:
                  $ref: '#/components/schemas/FirmwareUpdateImage'
                FirmwareUpdateRole:
                  $ref: '#/components/schemas/FirmwareUpdateRole'
                Tags:
                  $ref: '#/components/schemas/TagList'
                RedundancyPercent:
                  $ref: '#/components/schemas/RedundancyPercent'
                FragmentSizeBytes:
                  $ref: '#/components/schemas/FragmentSizeBytes'
                FragmentIntervalMS:
                  $ref: '#/components/schemas/FragmentIntervalMS'
                Descriptor:
                  $ref: '#/components/schemas/FileDescriptor'
      responses:
        '201': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListFuotaTasks
      description: |-
        Lists the FUOTA tasks registered to your AWS account.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /multicast-groups:
    post:
      operationId: CreateMulticastGroup
      description: |-
        Creates a multicast group.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/MulticastGroupName'
                Description:
                  $ref: '#/components/schemas/Description'
                ClientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
                LoRaWAN:
                  $ref: '#/components/schemas/LoRaWANMulticast'
                Tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '201': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListMulticastGroups
      description: |-
        Lists the multicast groups registered to your AWS account.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /network-analyzer-configurations:
    post:
      operationId: CreateNetworkAnalyzerConfiguration
      description: |-
        Creates a new network analyzer configuration.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/NetworkAnalyzerConfigurationName'
                TraceContent:
                  $ref: '#/components/schemas/TraceContent'
                WirelessDevices:
                  $ref: '#/components/schemas/WirelessDeviceList'
                WirelessGateways:
                  $ref: '#/components/schemas/WirelessGatewayList'
                Description:
                  $ref: '#/components/schemas/Description'
                Tags:
                  $ref: '#/components/schemas/TagList'
                ClientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
                MulticastGroups:
                  $ref: '#/components/schemas/NetworkAnalyzerMulticastGroupList'
      responses:
        '201': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListNetworkAnalyzerConfigurations
      description: |-
        Lists the network analyzer configurations.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /service-profiles:
    post:
      operationId: CreateServiceProfile
      description: |-
        Creates a new service profile.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/ServiceProfileName'
                LoRaWAN:
                  $ref: '#/components/schemas/LoRaWANServiceProfile'
                Tags:
                  $ref: '#/components/schemas/TagList'
                ClientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
      responses:
        '201': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListServiceProfiles
      description: |-
        Lists the service profiles registered to your AWS account.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /wireless-devices:
    post:
      operationId: CreateWirelessDevice
      description: |-
        Provisions a wireless device.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Type:
                  $ref: '#/components/schemas/WirelessDeviceType'
                Name:
                  $ref: '#/components/schemas/WirelessDeviceName'
                Description:
                  $ref: '#/components/schemas/Description'
                DestinationName:
                  $ref: '#/components/schemas/DestinationName'
                ClientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
                LoRaWAN:
                  $ref: '#/components/schemas/LoRaWANDevice'
                Tags:
                  $ref: '#/components/schemas/TagList'
                Positioning:
                  $ref: '#/components/schemas/PositioningConfigStatus'
                Sidewalk:
                  $ref: '#/components/schemas/SidewalkCreateWirelessDevice'
      responses:
        '201': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListWirelessDevices
      description: |-
        Lists the wireless devices registered to your AWS account.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: destinationName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/DestinationName'
      - name: deviceProfileId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/DeviceProfileId'
      - name: serviceProfileId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ServiceProfileId'
      - name: wirelessDeviceType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/WirelessDeviceType'
      - name: fuotaTaskId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/FuotaTaskId'
      - name: multicastGroupId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MulticastGroupId'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /wireless-gateways:
    post:
      operationId: CreateWirelessGateway
      description: |-
        Provisions a wireless gateway.

        When provisioning a wireless gateway, you might run into duplication errors for the following reasons.

          * If you specify a `GatewayEui` value that already exists.

          * If you used a `ClientRequestToken` with the same parameters within the last 10 minutes.

        To avoid this error, make sure that you use unique identifiers and parameters for each request within the specified time period.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/WirelessGatewayName'
                Description:
                  $ref: '#/components/schemas/Description'
                LoRaWAN:
                  $ref: '#/components/schemas/LoRaWANGateway'
                Tags:
                  $ref: '#/components/schemas/TagList'
                ClientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
      responses:
        '201': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListWirelessGateways
      description: |-
        Lists the wireless gateways registered to your AWS account.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /wireless-gateways/{Id}/tasks:
    post:
      operationId: CreateWirelessGatewayTask
      description: |-
        Creates a task for a wireless gateway.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WirelessGatewayId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                WirelessGatewayTaskDefinitionId:
                  $ref: '#/components/schemas/WirelessGatewayTaskDefinitionId'
      responses:
        '201': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: DeleteWirelessGatewayTask
      description: |-
        Deletes a wireless gateway task.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WirelessGatewayId'
      responses:
        '204': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetWirelessGatewayTask
      description: |-
        Gets information about a wireless gateway task.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WirelessGatewayId'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /wireless-gateway-task-definitions:
    post:
      operationId: CreateWirelessGatewayTaskDefinition
      description: |-
        Creates a gateway task definition.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AutoCreateTasks:
                  $ref: '#/components/schemas/AutoCreateTasks'
                Name:
                  $ref: '#/components/schemas/WirelessGatewayTaskName'
                Update:
                  $ref: '#/components/schemas/UpdateWirelessGatewayTaskCreate'
                ClientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
                Tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '201': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListWirelessGatewayTaskDefinitions
      description: |-
        List the wireless gateway tasks definitions registered to your AWS account.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: taskDefinitionType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/WirelessGatewayTaskDefinitionType'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /destinations/{Name}:
    delete:
      operationId: DeleteDestination
      description: |-
        Deletes a destination.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DestinationName'
      responses:
        '204': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetDestination
      description: |-
        Gets information about a destination.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DestinationName'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateDestination
      description: |-
        Updates properties of a destination.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DestinationName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ExpressionType:
                  $ref: '#/components/schemas/ExpressionType'
                Expression:
                  $ref: '#/components/schemas/Expression'
                Description:
                  $ref: '#/components/schemas/Description'
                RoleArn:
                  $ref: '#/components/schemas/RoleArn'
      responses:
        '204': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /device-profiles/{Id}:
    delete:
      operationId: DeleteDeviceProfile
      description: |-
        Deletes a device profile.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DeviceProfileId'
      responses:
        '204': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetDeviceProfile
      description: |-
        Gets information about a device profile.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DeviceProfileId'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /fuota-tasks/{Id}:
    delete:
      operationId: DeleteFuotaTask
      description: |-
        Deletes a FUOTA task.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FuotaTaskId'
      responses:
        '204': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetFuotaTask
      description: |-
        Gets information about a FUOTA task.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FuotaTaskId'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: StartFuotaTask
      description: |-
        Starts a FUOTA task.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FuotaTaskId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                LoRaWAN:
                  $ref: '#/components/schemas/LoRaWANStartFuotaTask'
      responses:
        '204': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateFuotaTask
      description: |-
        Updates properties of a FUOTA task.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FuotaTaskId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/FuotaTaskName'
                Description:
                  $ref: '#/components/schemas/Description'
                LoRaWAN:
                  $ref: '#/components/schemas/LoRaWANFuotaTask'
                FirmwareUpdateImage:
                  $ref: '#/components/schemas/FirmwareUpdateImage'
                FirmwareUpdateRole:
                  $ref: '#/components/schemas/FirmwareUpdateRole'
                RedundancyPercent:
                  $ref: '#/components/schemas/RedundancyPercent'
                FragmentSizeBytes:
                  $ref: '#/components/schemas/FragmentSizeBytes'
                FragmentIntervalMS:
                  $ref: '#/components/schemas/FragmentIntervalMS'
                Descriptor:
                  $ref: '#/components/schemas/FileDescriptor'
      responses:
        '204': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /multicast-groups/{Id}:
    delete:
      operationId: DeleteMulticastGroup
      description: |-
        Deletes a multicast group if it is not in use by a FUOTA task.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MulticastGroupId'
      responses:
        '204': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetMulticastGroup
      description: |-
        Gets information about a multicast group.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MulticastGroupId'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateMulticastGroup
      description: |-
        Updates properties of a multicast group session.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MulticastGroupId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/MulticastGroupName'
                Description:
                  $ref: '#/components/schemas/Description'
                LoRaWAN:
                  $ref: '#/components/schemas/LoRaWANMulticast'
      responses:
        '204': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /network-analyzer-configurations/{ConfigurationName}:
    delete:
      operationId: DeleteNetworkAnalyzerConfiguration
      description: |-
        Deletes a network analyzer configuration.
      parameters:
      - name: ConfigurationName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NetworkAnalyzerConfigurationName'
      responses:
        '204': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetNetworkAnalyzerConfiguration
      description: |-
        Get network analyzer configuration.
      parameters:
      - name: ConfigurationName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NetworkAnalyzerConfigurationName'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateNetworkAnalyzerConfiguration
      description: |-
        Update network analyzer configuration.
      parameters:
      - name: ConfigurationName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NetworkAnalyzerConfigurationName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TraceContent:
                  $ref: '#/components/schemas/TraceContent'
                WirelessDevicesToAdd:
                  $ref: '#/components/schemas/WirelessDeviceList'
                WirelessDevicesToRemove:
                  $ref: '#/components/schemas/WirelessDeviceList'
                WirelessGatewaysToAdd:
                  $ref: '#/components/schemas/WirelessGatewayList'
                WirelessGatewaysToRemove:
                  $ref: '#/components/schemas/WirelessGatewayList'
                Description:
                  $ref: '#/components/schemas/Description'
                MulticastGroupsToAdd:
                  $ref: '#/components/schemas/NetworkAnalyzerMulticastGroupList'
                MulticastGroupsToRemove:
                  $ref: '#/components/schemas/NetworkAnalyzerMulticastGroupList'
      responses:
        '204': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /wireless-devices/{Id}/data:
    delete:
      operationId: DeleteQueuedMessages
      description: |-
        Remove queued messages from the downlink queue.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WirelessDeviceId'
      - name: messageId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/MessageId'
      - name: WirelessDeviceType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/WirelessDeviceType'
      responses:
        '204': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListQueuedMessages
      description: |-
        List queued messages in the downlink queue.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WirelessDeviceId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: WirelessDeviceType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/WirelessDeviceType'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: SendDataToWirelessDevice
      description: |-
        Sends a decrypted application data frame to a device.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WirelessDeviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TransmitMode:
                  $ref: '#/components/schemas/TransmitMode'
                PayloadData:
                  $ref: '#/components/schemas/PayloadData'
                WirelessMetadata:
                  $ref: '#/components/schemas/WirelessMetadata'
      responses:
        '202': {}
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /service-profiles/{Id}:
    delete:
      operationId: DeleteServiceProfile
      description: |-
        Deletes a service profile.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ServiceProfileId'
      responses:
        '204': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetServiceProfile
      description: |-
        Gets information about a service profile.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ServiceProfileId'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /wireless-devices/{Id}:
    delete:
      operationId: DeleteWirelessDevice
      description: |-
        Deletes a wireless device.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WirelessDeviceId'
      responses:
        '204': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateWirelessDevice
      description: |-
        Updates properties of a wireless device.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WirelessDeviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DestinationName:
                  $ref: '#/components/schemas/DestinationName'
                Name:
                  $ref: '#/components/schemas/WirelessDeviceName'
                Description:
                  $ref: '#/components/schemas/Description'
                LoRaWAN:
                  $ref: '#/components/schemas/LoRaWANUpdateDevice'
                Positioning:
                  $ref: '#/components/schemas/PositioningConfigStatus'
      responses:
        '204': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /wireless_device_import_task/{Id}:
    delete:
      operationId: DeleteWirelessDeviceImportTask
      description: |-
        Delete an import task.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ImportTaskId'
      responses:
        '204': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetWirelessDeviceImportTask
      description: |-
        Get information about an import task and count of device onboarding summary information for the import task.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ImportTaskId'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateWirelessDeviceImportTask
      description: |-
        Update an import task to add more devices to the task.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ImportTaskId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Sidewalk:
                  $ref: '#/components/schemas/SidewalkUpdateImportInfo'
      responses:
        '204': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /wireless-gateways/{Id}:
    delete:
      operationId: DeleteWirelessGateway
      description: |-
        Deletes a wireless gateway.

        When deleting a wireless gateway, you might run into duplication errors for the following reasons.

          * If you specify a `GatewayEui` value that already exists.

          * If you used a `ClientRequestToken` with the same parameters within the last 10 minutes.

        To avoid this error, make sure that you use unique identifiers and parameters for each request within the specified time period.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WirelessGatewayId'
      responses:
        '204': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateWirelessGateway
      description: |-
        Updates properties of a wireless gateway.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WirelessGatewayId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/WirelessGatewayName'
                Description:
                  $ref: '#/components/schemas/Description'
                JoinEuiFilters:
                  $ref: '#/components/schemas/JoinEuiFilters'
                NetIdFilters:
                  $ref: '#/components/schemas/NetIdFilters'
                MaxEirp:
                  $ref: '#/components/schemas/GatewayMaxEirp'
      responses:
        '204': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /wireless-gateway-task-definitions/{Id}:
    delete:
      operationId: DeleteWirelessGatewayTaskDefinition
      description: |-
        Deletes a wireless gateway task definition. Deleting this task definition does not affect tasks that are currently in progress.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WirelessGatewayTaskDefinitionId'
      responses:
        '204': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetWirelessGatewayTaskDefinition
      description: |-
        Gets information about a wireless gateway task definition.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WirelessGatewayTaskDefinitionId'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /wireless-devices/{Identifier}/deregister:
    patch:
      operationId: DeregisterWirelessDevice
      description: |-
        Deregister a wireless device from AWS IoT Wireless.
      parameters:
      - name: Identifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Identifier'
      - name: WirelessDeviceType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/WirelessDeviceType'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /partner-accounts/{PartnerAccountId}:
    delete:
      operationId: DisassociateAwsAccountFromPartnerAccount
      description: |-
        Disassociates your AWS account from a partner account. If `PartnerAccountId` and `PartnerType` are `null`, disassociates your AWS account from all partner accounts.
      parameters:
      - name: PartnerAccountId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PartnerAccountId'
      - name: partnerType
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/PartnerType'
      responses:
        '204': {}
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetPartnerAccount
      description: |-
        Gets information about a partner account. If `PartnerAccountId` and `PartnerType` are `null`, returns all partner accounts.
      parameters:
      - name: PartnerAccountId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PartnerAccountId'
      - name: partnerType
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/PartnerType'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdatePartnerAccount
      description: |-
        Updates properties of a partner account.
      parameters:
      - name: PartnerAccountId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PartnerAccountId'
      - name: partnerType
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/PartnerType'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Sidewalk:
                  $ref: '#/components/schemas/SidewalkUpdateAccount'
      responses:
        '204': {}
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /fuota-tasks/{Id}/multicast-groups/{MulticastGroupId}:
    delete:
      operationId: DisassociateMulticastGroupFromFuotaTask
      description: |-
        Disassociates a multicast group from a FUOTA task.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FuotaTaskId'
      - name: MulticastGroupId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MulticastGroupId'
      responses:
        '204': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /fuota-tasks/{Id}/wireless-devices/{WirelessDeviceId}:
    delete:
      operationId: DisassociateWirelessDeviceFromFuotaTask
      description: |-
        Disassociates a wireless device from a FUOTA task.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FuotaTaskId'
      - name: WirelessDeviceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WirelessDeviceId'
      responses:
        '204': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /multicast-groups/{Id}/wireless-devices/{WirelessDeviceId}:
    delete:
      operationId: DisassociateWirelessDeviceFromMulticastGroup
      description: |-
        Disassociates a wireless device from a multicast group.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MulticastGroupId'
      - name: WirelessDeviceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WirelessDeviceId'
      responses:
        '204': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /event-configurations-resource-types:
    get:
      operationId: GetEventConfigurationByResourceTypes
      description: |-
        Get the event configuration based on resource types.
      parameters: []
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    patch:
      operationId: UpdateEventConfigurationByResourceTypes
      description: |-
        Update the event configuration based on resource types.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DeviceRegistrationState:
                  $ref: '#/components/schemas/DeviceRegistrationStateResourceTypeEventConfiguration'
                Proximity:
                  $ref: '#/components/schemas/ProximityResourceTypeEventConfiguration'
                Join:
                  $ref: '#/components/schemas/JoinResourceTypeEventConfiguration'
                ConnectionStatus:
                  $ref: '#/components/schemas/ConnectionStatusResourceTypeEventConfiguration'
                MessageDeliveryStatus:
                  $ref: '#/components/schemas/MessageDeliveryStatusResourceTypeEventConfiguration'
      responses:
        '204': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /log-levels:
    get:
      operationId: GetLogLevelsByResourceTypes
      description: |-
        Returns current default log levels or log levels by resource types. Based on the resource type, log levels can be returned for wireless device, wireless gateway, or FUOTA task log options.
      parameters: []
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: ResetAllResourceLogLevels
      description: |-
        Removes the log-level overrides for all resources; wireless devices, wireless gateways, and FUOTA tasks.
      parameters: []
      responses:
        '204': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: UpdateLogLevelsByResourceTypes
      description: |-
        Set default log level, or log levels by resource types. This can be for wireless device, wireless gateway, or FUOTA task log options, and is used to control the log messages that'll be displayed in CloudWatch.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DefaultLogLevel:
                  $ref: '#/components/schemas/LogLevel'
                FuotaTaskLogOptions:
                  $ref: '#/components/schemas/FuotaTaskLogOptionList'
                WirelessDeviceLogOptions:
                  $ref: '#/components/schemas/WirelessDeviceLogOptionList'
                WirelessGatewayLogOptions:
                  $ref: '#/components/schemas/WirelessGatewayLogOptionList'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /metric-configuration:
    get:
      operationId: GetMetricConfiguration
      description: |-
        Get the metric configuration status for this AWS account.
      parameters: []
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: UpdateMetricConfiguration
      description: |-
        Update the summary metric configuration.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SummaryMetric:
                  $ref: '#/components/schemas/SummaryMetricConfiguration'
      responses:
        '204': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /metrics:
    post:
      operationId: GetMetrics
      description: |-
        Get the summary metrics for this AWS account.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SummaryMetricQueries:
                  $ref: '#/components/schemas/SummaryMetricQueries'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /positions/{ResourceIdentifier}:
    get:
      operationId: GetPosition
      description: |-
        Get the position information for a given resource.

        This action is no longer supported. Calls to retrieve the position information should use the [GetResourcePosition](https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_GetResourcePosition.html) API operation instead.
      parameters:
      - name: ResourceIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PositionResourceIdentifier'
      - name: resourceType
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/PositionResourceType'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdatePosition
      description: |-
        Update the position information of a resource.

        This action is no longer supported. Calls to update the position information should use the [UpdateResourcePosition](https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_UpdateResourcePosition.html) API operation instead.
      parameters:
      - name: ResourceIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PositionResourceIdentifier'
      - name: resourceType
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/PositionResourceType'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Position:
                  $ref: '#/components/schemas/PositionCoordinate'
      responses:
        '204': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /position-configurations/{ResourceIdentifier}:
    get:
      operationId: GetPositionConfiguration
      description: |-
        Get position configuration for a given resource.

        This action is no longer supported. Calls to retrieve the position configuration should use the [GetResourcePosition](https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_GetResourcePosition.html) API operation instead.
      parameters:
      - name: ResourceIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PositionResourceIdentifier'
      - name: resourceType
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/PositionResourceType'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: PutPositionConfiguration
      description: |-
        Put position configuration for a given resource.

        This action is no longer supported. Calls to update the position configuration should use the [UpdateResourcePosition](https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_UpdateResourcePosition.html) API operation instead.
      parameters:
      - name: ResourceIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PositionResourceIdentifier'
      - name: resourceType
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/PositionResourceType'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Solvers:
                  $ref: '#/components/schemas/PositionSolverConfigurations'
                Destination:
                  $ref: '#/components/schemas/DestinationName'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /position-estimate:
    post:
      operationId: GetPositionEstimate
      description: |-
        Get estimated position information as a payload in GeoJSON format. The payload measurement data is resolved using solvers that are provided by third-party vendors.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                WiFiAccessPoints:
                  $ref: '#/components/schemas/WiFiAccessPoints'
                CellTowers:
                  $ref: '#/components/schemas/CellTowers'
                Ip:
                  $ref: '#/components/schemas/Ip'
                Gnss:
                  $ref: '#/components/schemas/Gnss'
                Timestamp:
                  $ref: '#/components/schemas/CreationDate'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /event-configurations/{Identifier}:
    get:
      operationId: GetResourceEventConfiguration
      description: |-
        Get the event configuration for a particular resource identifier.
      parameters:
      - name: Identifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Identifier'
      - name: identifierType
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/IdentifierType'
      - name: partnerType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/EventNotificationPartnerType'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateResourceEventConfiguration
      description: |-
        Update the event configuration for a particular resource identifier.
      parameters:
      - name: Identifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Identifier'
      - name: identifierType
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/IdentifierType'
      - name: partnerType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/EventNotificationPartnerType'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DeviceRegistrationState:
                  $ref: '#/components/schemas/DeviceRegistrationStateEventConfiguration'
                Proximity:
                  $ref: '#/components/schemas/ProximityEventConfiguration'
                Join:
                  $ref: '#/components/schemas/JoinEventConfiguration'
                ConnectionStatus:
                  $ref: '#/components/schemas/ConnectionStatusEventConfiguration'
                MessageDeliveryStatus:
                  $ref: '#/components/schemas/MessageDeliveryStatusEventConfiguration'
      responses:
        '204': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /log-levels/{ResourceIdentifier}:
    get:
      operationId: GetResourceLogLevel
      description: |-
        Fetches the log-level override, if any, for a given resource ID and resource type..
      parameters:
      - name: ResourceIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceIdentifier'
      - name: resourceType
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ResourceType'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: PutResourceLogLevel
      description: |-
        Sets the log-level override for a resource ID and resource type. A limit of 200 log level override can be set per account.
      parameters:
      - name: ResourceIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceIdentifier'
      - name: resourceType
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ResourceType'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                LogLevel:
                  $ref: '#/components/schemas/LogLevel'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: ResetResourceLogLevel
      description: |-
        Removes the log-level override, if any, for a specific resource ID and resource type. It can be used for a wireless device, a wireless gateway, or a FUOTA task.
      parameters:
      - name: ResourceIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceIdentifier'
      - name: resourceType
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ResourceType'
      responses:
        '204': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /resource-positions/{ResourceIdentifier}:
    get:
      operationId: GetResourcePosition
      description: |-
        Get the position information for a given wireless device or a wireless gateway resource. The position information uses the [ World Geodetic System (WGS84)](https://gisgeography.com/wgs84-world-geodetic-system/).
      parameters:
      - name: ResourceIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PositionResourceIdentifier'
      - name: resourceType
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/PositionResourceType'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateResourcePosition
      description: |-
        Update the position information of a given wireless device or a wireless gateway resource. The position coordinates are based on the [ World Geodetic System (WGS84)](https://gisgeography.com/wgs84-world-geodetic-system/).
      parameters:
      - name: ResourceIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PositionResourceIdentifier'
      - name: resourceType
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/PositionResourceType'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                GeoJsonPayload:
                  $ref: '#/components/schemas/GeoJsonPayload'
      responses:
        '204': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /service-endpoint:
    get:
      operationId: GetServiceEndpoint
      description: |-
        Gets the account-specific endpoint for Configuration and Update Server (CUPS) protocol or LoRaWAN Network Server (LNS) connections.
      parameters:
      - name: serviceType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/WirelessGatewayServiceType'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /wireless-devices/{Identifier}:
    get:
      operationId: GetWirelessDevice
      description: |-
        Gets information about a wireless device.
      parameters:
      - name: Identifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Identifier'
      - name: identifierType
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/WirelessDeviceIdType'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /wireless-devices/{WirelessDeviceId}/statistics:
    get:
      operationId: GetWirelessDeviceStatistics
      description: |-
        Gets operating information about a wireless device.
      parameters:
      - name: WirelessDeviceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WirelessDeviceId'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /wireless-gateways/{Identifier}:
    get:
      operationId: GetWirelessGateway
      description: |-
        Gets information about a wireless gateway.
      parameters:
      - name: Identifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Identifier'
      - name: identifierType
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/WirelessGatewayIdType'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /wireless-gateways/{Id}/firmware-information:
    get:
      operationId: GetWirelessGatewayFirmwareInformation
      description: |-
        Gets the firmware version and other information about a wireless gateway.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WirelessGatewayId'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /wireless-gateways/{WirelessGatewayId}/statistics:
    get:
      operationId: GetWirelessGatewayStatistics
      description: |-
        Gets operating information about a wireless gateway.
      parameters:
      - name: WirelessGatewayId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WirelessGatewayId'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /wireless_device_import_task:
    get:
      operationId: ListDevicesForWirelessDeviceImportTask
      description: |-
        List the Sidewalk devices in an import task and their onboarding status.
      parameters:
      - name: id
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ImportTaskId'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: status
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/OnboardStatus'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: StartWirelessDeviceImportTask
      description: |-
        Start import task for provisioning Sidewalk devices in bulk using an S3 CSV file.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DestinationName:
                  $ref: '#/components/schemas/DestinationName'
                ClientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
                Tags:
                  $ref: '#/components/schemas/TagList'
                Sidewalk:
                  $ref: '#/components/schemas/SidewalkStartImportInfo'
      responses:
        '201': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /event-configurations:
    get:
      operationId: ListEventConfigurations
      description: |-
        List event configurations where at least one event topic has been enabled.
      parameters:
      - name: resourceType
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/EventNotificationResourceType'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /fuota-tasks/{Id}/multicast-groups:
    get:
      operationId: ListMulticastGroupsByFuotaTask
      description: |-
        List all multicast groups associated with a FUOTA task.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FuotaTaskId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /position-configurations:
    get:
      operationId: ListPositionConfigurations
      description: |-
        List position configurations for a given resource, such as positioning solvers.

        This action is no longer supported. Calls to retrieve position information should use the [GetResourcePosition](https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_GetResourcePosition.html) API operation instead.
      parameters:
      - name: resourceType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PositionResourceType'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tags:
    get:
      operationId: ListTagsForResource
      description: |-
        Lists the tags (metadata) you have assigned to the resource.
      parameters:
      - name: resourceArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/AmazonResourceName'
      responses:
        '200': {}
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: TagResource
      description: |-
        Adds a tag to a resource.
      parameters:
      - name: resourceArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/AmazonResourceName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '204': {}
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: UntagResource
      description: |-
        Removes one or more tags from a resource.
      parameters:
      - name: resourceArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/AmazonResourceName'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeyList'
      responses:
        '204': {}
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /wireless_device_import_tasks:
    get:
      operationId: ListWirelessDeviceImportTasks
      description: |-
        List wireless devices that have been added to an import task.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /multicast-groups/{Id}/data:
    post:
      operationId: SendDataToMulticastGroup
      description: |-
        Sends the specified data to a multicast group.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MulticastGroupId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                PayloadData:
                  $ref: '#/components/schemas/PayloadData'
                WirelessMetadata:
                  $ref: '#/components/schemas/MulticastWirelessMetadata'
      responses:
        '201': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /multicast-groups/{Id}/bulk:
    patch:
      operationId: StartBulkAssociateWirelessDeviceWithMulticastGroup
      description: |-
        Starts a bulk association of all qualifying wireless devices with a multicast group.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MulticastGroupId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                QueryString:
                  $ref: '#/components/schemas/QueryString'
                Tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '204': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: StartBulkDisassociateWirelessDeviceFromMulticastGroup
      description: |-
        Starts a bulk disassociatin of all qualifying wireless devices from a multicast group.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MulticastGroupId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                QueryString:
                  $ref: '#/components/schemas/QueryString'
                Tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '204': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /wireless_single_device_import_task:
    post:
      operationId: StartSingleWirelessDeviceImportTask
      description: |-
        Start import task for a single wireless device.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DestinationName:
                  $ref: '#/components/schemas/DestinationName'
                ClientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
                DeviceName:
                  $ref: '#/components/schemas/DeviceName'
                Tags:
                  $ref: '#/components/schemas/TagList'
                Sidewalk:
                  $ref: '#/components/schemas/SidewalkSingleStartImportInfo'
      responses:
        '201': {}
        '403':
          description: |-
            User does not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Adding, updating, or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /wireless-devices/{Id}/test:
    post:
      operationId: TestWirelessDevice
      description: |-
        Simulates a provisioned device by sending an uplink data payload of `Hello`.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WirelessDeviceId'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error occurred while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because it exceeded the allowed API request rate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input did not meet the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    AbpV1_0_x:
      type: object
      properties:
        DevAddr:
          allOf:
          - $ref: '#/components/schemas/DevAddr'
          description: The DevAddr value.
        SessionKeys:
          allOf:
          - $ref: '#/components/schemas/SessionKeysAbpV1_0_x'
          description: Session keys for ABP v1.0.x
        FCntStart:
          allOf:
          - $ref: '#/components/schemas/FCntStart'
          description: The FCnt init value.
      description: ABP device object for LoRaWAN specification v1.0.x
    AbpV1_1:
      type: object
      properties:
        DevAddr:
          allOf:
          - $ref: '#/components/schemas/DevAddr'
          description: The DevAddr value.
        SessionKeys:
          allOf:
          - $ref: '#/components/schemas/SessionKeysAbpV1_1'
          description: Session keys for ABP v1.1
        FCntStart:
          allOf:
          - $ref: '#/components/schemas/FCntStart'
          description: The FCnt init value.
      description: ABP device object for LoRaWAN specification v1.1
    AccessDeniedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
      description: User does not have permission to perform this action.
    AccountLinked:
      type: boolean
      default: false
    Accuracy:
      type: object
      properties:
        HorizontalAccuracy:
          allOf:
          - $ref: '#/components/schemas/HorizontalAccuracy'
          description: The horizontal accuracy of the estimated position, which is
            the difference between the estimated location and the actual device location.
        VerticalAccuracy:
          allOf:
          - $ref: '#/components/schemas/VerticalAccuracy'
          description: The vertical accuracy of the estimated position, which is the
            difference between the estimated altitude and actual device latitude in
            meters.
      description: The accuracy of the estimated position in meters. An empty value
        indicates that no position data is available. A value of ‘0.0’ value indicates
        that position data is available. This data corresponds to the position information
        that you specified instead of the position computed by solver.
    AckModeRetryDurationSecs:
      type: integer
      minimum: 0
      maximum: 604800
    AddGwMetadata:
      type: boolean
      default: false
    AggregationPeriod:
      type: string
      enum:
      - OneHour
      - OneDay
      - OneWeek
    AmazonId:
      type: string
      minLength: 0
      maxLength: 2048
    AmazonResourceName:
      type: string
      minLength: 1
      maxLength: 1011
    ApId:
      type: string
      minLength: 0
      maxLength: 256
    AppEui:
      type: string
      pattern: ^[a-fA-F0-9]{16}$
    AppKey:
      type: string
      pattern: ^[a-fA-F0-9]{32}$
    AppSKey:
      type: string
      pattern: ^[a-fA-F0-9]{32}$
    AppServerPrivateKey:
      type: string
      pattern: ^[a-fA-F0-9]{64}$
      minLength: 1
      maxLength: 4096
    ApplicationConfig:
      type: object
      properties:
        FPort:
          $ref: '#/components/schemas/FPort'
        Type:
          allOf:
          - $ref: '#/components/schemas/ApplicationConfigType'
          description: Application type, which can be specified to obtain real-time
            position information of your LoRaWAN device.
        DestinationName:
          allOf:
          - $ref: '#/components/schemas/DestinationName'
          description: The name of the position data destination that describes the
            AWS IoT rule that processes the device's position data for use by AWS
            IoT Core for LoRaWAN.
      description: LoRaWAN application configuration, which can be used to perform
        geolocation.
    ApplicationConfigType:
      type: string
      enum:
      - SemtechGeolocation
    ApplicationServerPublicKey:
      type: string
      pattern: ^[a-fA-F0-9]{64}$
      minLength: 1
      maxLength: 4096
    Applications:
      type: array
      items:
        $ref: '#/components/schemas/ApplicationConfig'
    AssistPosition:
      type: array
      items:
        $ref: '#/components/schemas/Coordinate'
    AssociateAwsAccountWithPartnerAccountRequest:
      type: object
      properties:
        Sidewalk:
          allOf:
          - $ref: '#/components/schemas/SidewalkAccountInfo'
          description: The Sidewalk account credentials.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: Each resource must have a unique client request token. The
            client token is used to implement idempotency. It ensures that the request
            completes no more than one time. If you retry a request with the same
            token and the same parameters, the request will complete successfully.
            However, if you try to create a new resource using the same token but
            different parameters, an HTTP 409 conflict occurs. If you omit this value,
            AWS SDKs will automatically generate a unique client request. For more
            information about idempotency, see [Ensuring idempotency in Amazon EC2
            API requests](https://docs.aws.amazon.com/ec2/latest/devguide/ec2-api-idempotency.html).
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags to attach to the specified resource. Tags are metadata
            that you can use to manage a resource.
      required:
      - Sidewalk
    AssociateAwsAccountWithPartnerAccountResponse:
      type: object
      properties:
        Sidewalk:
          allOf:
          - $ref: '#/components/schemas/SidewalkAccountInfo'
          description: The Sidewalk account credentials.
        Arn:
          allOf:
          - $ref: '#/components/schemas/PartnerAccountArn'
          description: The Amazon Resource Name of the resource.
    AssociateMulticastGroupWithFuotaTaskRequest:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/FuotaTaskId'
        MulticastGroupId:
          $ref: '#/components/schemas/MulticastGroupId'
      required:
      - Id
      - MulticastGroupId
    AssociateMulticastGroupWithFuotaTaskResponse:
      type: object
      properties: {}
    AssociateWirelessDeviceWithFuotaTaskRequest:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/FuotaTaskId'
        WirelessDeviceId:
          $ref: '#/components/schemas/WirelessDeviceId'
      required:
      - Id
      - WirelessDeviceId
    AssociateWirelessDeviceWithFuotaTaskResponse:
      type: object
      properties: {}
    AssociateWirelessDeviceWithMulticastGroupRequest:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/MulticastGroupId'
        WirelessDeviceId:
          $ref: '#/components/schemas/WirelessDeviceId'
      required:
      - Id
      - WirelessDeviceId
    AssociateWirelessDeviceWithMulticastGroupResponse:
      type: object
      properties: {}
    AssociateWirelessDeviceWithThingRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceId'
          description: The ID of the resource to update.
        ThingArn:
          allOf:
          - $ref: '#/components/schemas/ThingArn'
          description: The ARN of the thing to associate with the wireless device.
      required:
      - Id
      - ThingArn
    AssociateWirelessDeviceWithThingResponse:
      type: object
      properties: {}
    AssociateWirelessGatewayWithCertificateRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayId'
          description: The ID of the resource to update.
        IotCertificateId:
          allOf:
          - $ref: '#/components/schemas/IotCertificateId'
          description: The ID of the certificate to associate with the wireless gateway.
      required:
      - Id
      - IotCertificateId
    AssociateWirelessGatewayWithCertificateResponse:
      type: object
      properties:
        IotCertificateId:
          allOf:
          - $ref: '#/components/schemas/IotCertificateId'
          description: The ID of the certificate associated with the wireless gateway.
    AssociateWirelessGatewayWithThingRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayId'
          description: The ID of the resource to update.
        ThingArn:
          allOf:
          - $ref: '#/components/schemas/ThingArn'
          description: The ARN of the thing to associate with the wireless gateway.
      required:
      - Id
      - ThingArn
    AssociateWirelessGatewayWithThingResponse:
      type: object
      properties: {}
    AutoCreateTasks:
      type: boolean
      default: false
    Avg:
      type: number
      format: double
    BCCH:
      type: integer
      minimum: 0
      maximum: 1023
    BSIC:
      type: integer
      minimum: 0
      maximum: 63
    BaseLat:
      type: number
      format: float
      minimum: -90
      maximum: 90
    BaseLng:
      type: number
      format: float
      minimum: -180
      maximum: 180
    BaseStationId:
      type: integer
      minimum: 0
      maximum: 65535
    BatteryLevel:
      type: string
      enum:
      - normal
      - low
      - critical
      description: <p>Sidewalk device battery level.</p>
    Beaconing:
      type: object
      properties:
        DataRate:
          allOf:
          - $ref: '#/components/schemas/BeaconingDataRate'
          description: The data rate for gateways that are sending the beacons.
        Frequencies:
          allOf:
          - $ref: '#/components/schemas/BeaconingFrequencies'
          description: The frequency list for the gateways to send the beacons.
      description: Beaconing parameters for configuring the wireless gateways.
    BeaconingDataRate:
      type: integer
      minimum: 0
      maximum: 15
    BeaconingFrequencies:
      type: array
      items:
        $ref: '#/components/schemas/BeaconingFrequency'
    BeaconingFrequency:
      type: integer
      minimum: 100000000
      maximum: 1000000000
    CancelMulticastGroupSessionRequest:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/MulticastGroupId'
      required:
      - Id
    CancelMulticastGroupSessionResponse:
      type: object
      properties: {}
    CaptureTimeAccuracy:
      type: number
      format: float
    CdmaChannel:
      type: integer
      minimum: 0
      maximum: 4095
    CdmaList:
      type: array
      items:
        $ref: '#/components/schemas/CdmaObj'
    CdmaLocalId:
      type: object
      properties:
        PnOffset:
          allOf:
          - $ref: '#/components/schemas/PnOffset'
          description: Pseudo-noise offset, which is a characteristic of the signal
            from a cell on a radio tower.
        CdmaChannel:
          allOf:
          - $ref: '#/components/schemas/CdmaChannel'
          description: CDMA channel information.
      required:
      - PnOffset
      - CdmaChannel
      description: CDMA local ID information, which corresponds to the local identification
        parameters of a CDMA cell.
    CdmaNmrList:
      type: array
      items:
        $ref: '#/components/schemas/CdmaNmrObj'
    CdmaNmrObj:
      type: object
      properties:
        PnOffset:
          allOf:
          - $ref: '#/components/schemas/PnOffset'
          description: Pseudo-noise offset, which is a characteristic of the signal
            from a cell on a radio tower.
        CdmaChannel:
          allOf:
          - $ref: '#/components/schemas/CdmaChannel'
          description: CDMA channel information.
        PilotPower:
          allOf:
          - $ref: '#/components/schemas/PilotPower'
          description: Transmit power level of the pilot signal, measured in dBm (decibel-milliwatts).
        BaseStationId:
          allOf:
          - $ref: '#/components/schemas/BaseStationId'
          description: CDMA base station ID (BSID).
      required:
      - PnOffset
      - CdmaChannel
      description: CDMA object for network measurement reports.
    CdmaObj:
      type: object
      properties:
        SystemId:
          allOf:
          - $ref: '#/components/schemas/SystemId'
          description: CDMA system ID (SID).
        NetworkId:
          allOf:
          - $ref: '#/components/schemas/NetworkId'
          description: CDMA network ID (NID).
        BaseStationId:
          allOf:
          - $ref: '#/components/schemas/BaseStationId'
          description: CDMA base station ID (BSID).
        RegistrationZone:
          allOf:
          - $ref: '#/components/schemas/RegistrationZone'
          description: CDMA registration zone (RZ).
        CdmaLocalId:
          allOf:
          - $ref: '#/components/schemas/CdmaLocalId'
          description: CDMA local identification (local ID) parameters.
        PilotPower:
          allOf:
          - $ref: '#/components/schemas/PilotPower'
          description: Transmit power level of the pilot signal, measured in dBm (decibel-milliwatts).
        BaseLat:
          allOf:
          - $ref: '#/components/schemas/BaseLat'
          description: CDMA base station latitude in degrees.
        BaseLng:
          allOf:
          - $ref: '#/components/schemas/BaseLng'
          description: CDMA base station longitude in degrees.
        CdmaNmr:
          allOf:
          - $ref: '#/components/schemas/CdmaNmrList'
          description: CDMA network measurement reports.
      required:
      - SystemId
      - NetworkId
      - BaseStationId
      description: CDMA (Code-division multiple access) object.
    CellParams:
      type: integer
      minimum: 0
      maximum: 127
    CellTowers:
      type: object
      properties:
        Gsm:
          allOf:
          - $ref: '#/components/schemas/GsmList'
          description: GSM object information.
        Wcdma:
          allOf:
          - $ref: '#/components/schemas/WcdmaList'
          description: WCDMA object information.
        Tdscdma:
          allOf:
          - $ref: '#/components/schemas/TdscdmaList'
          description: TD-SCDMA object information.
        Lte:
          allOf:
          - $ref: '#/components/schemas/LteList'
          description: LTE object information.
        Cdma:
          allOf:
          - $ref: '#/components/schemas/CdmaList'
          description: CDMA object information.
      description: The cell towers that were used to perform the measurements.
    CertificateList:
      type: object
      properties:
        SigningAlg:
          allOf:
          - $ref: '#/components/schemas/SigningAlg'
          description: The certificate chain algorithm provided by sidewalk.
        Value:
          allOf:
          - $ref: '#/components/schemas/CertificateValue'
          description: The value of the chosen sidewalk certificate.
      required:
      - SigningAlg
      - Value
      description: List of sidewalk certificates.
    CertificatePEM:
      type: string
      pattern: ^[^-A-Za-z0-9+/=]|=[^=]|={3,}${1,4096}$
      minLength: 1
      maxLength: 4096
    CertificateValue:
      type: string
      minLength: 0
      maxLength: 2048
    ChannelMask:
      type: string
      minLength: 0
      maxLength: 2048
    ClassBTimeout:
      type: integer
      minimum: 0
      maximum: 1000
    ClassCTimeout:
      type: integer
      minimum: 0
      maximum: 1000
    ClientRequestToken:
      type: string
      pattern: ^[a-zA-Z0-9-_]+$
      minLength: 1
      maxLength: 64
    ConflictException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: Id of the resource in the conflicting operation.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: Type of the resource in the conflicting operation.
      description: Adding, updating, or deleting the resource can cause an inconsistent
        state.
    ConnectionStatus:
      type: string
      enum:
      - Connected
      - Disconnected
    ConnectionStatusEventConfiguration:
      type: object
      properties:
        LoRaWAN:
          allOf:
          - $ref: '#/components/schemas/LoRaWANConnectionStatusEventNotificationConfigurations'
          description: Connection status event configuration object for enabling or
            disabling LoRaWAN related event topics.
        WirelessGatewayIdEventTopic:
          allOf:
          - $ref: '#/components/schemas/EventNotificationTopicStatus'
          description: Denotes whether the wireless gateway ID connection status event
            topic is enabled or disabled.
      description: Connection status event configuration object for enabling or disabling
        topic.
    ConnectionStatusResourceTypeEventConfiguration:
      type: object
      properties:
        LoRaWAN:
          allOf:
          - $ref: '#/components/schemas/LoRaWANConnectionStatusResourceTypeEventConfiguration'
          description: Connection status resource type event configuration object
            for enabling or disabling LoRaWAN related event topics.
      description: Connection status resource type event configuration object for
        enabling or disabling topic.
    Coordinate:
      type: number
      format: float
    Crc:
      type: integer
      format: int64
      minimum: 1
      maximum: 4294967295
    CreateDestinationRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DestinationName'
          description: The name of the new resource.
        ExpressionType:
          allOf:
          - $ref: '#/components/schemas/ExpressionType'
          description: The type of value in `Expression`.
        Expression:
          allOf:
          - $ref: '#/components/schemas/Expression'
          description: The rule name or topic rule to send messages to.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the new resource.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The ARN of the IAM Role that authorizes the destination.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags to attach to the new destination. Tags are metadata
            that you can use to manage a resource.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: Each resource must have a unique client request token. The
            client token is used to implement idempotency. It ensures that the request
            completes no more than one time. If you retry a request with the same
            token and the same parameters, the request will complete successfully.
            However, if you try to create a new resource using the same token but
            different parameters, an HTTP 409 conflict occurs. If you omit this value,
            AWS SDKs will automatically generate a unique client request. For more
            information about idempotency, see [Ensuring idempotency in Amazon EC2
            API requests](https://docs.aws.amazon.com/ec2/latest/devguide/ec2-api-idempotency.html).
      required:
      - Name
      - ExpressionType
      - Expression
      - RoleArn
    CreateDestinationResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/DestinationArn'
          description: The Amazon Resource Name of the new resource.
        Name:
          allOf:
          - $ref: '#/components/schemas/DestinationName'
          description: The name of the new resource.
    CreateDeviceProfileRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DeviceProfileName'
          description: The name of the new resource.
        LoRaWAN:
          allOf:
          - $ref: '#/components/schemas/LoRaWANDeviceProfile'
          description: The device profile information to use to create the device
            profile.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags to attach to the new device profile. Tags are metadata
            that you can use to manage a resource.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: Each resource must have a unique client request token. The
            client token is used to implement idempotency. It ensures that the request
            completes no more than one time. If you retry a request with the same
            token and the same parameters, the request will complete successfully.
            However, if you try to create a new resource using the same token but
            different parameters, an HTTP 409 conflict occurs. If you omit this value,
            AWS SDKs will automatically generate a unique client request. For more
            information about idempotency, see [Ensuring idempotency in Amazon EC2
            API requests](https://docs.aws.amazon.com/ec2/latest/devguide/ec2-api-idempotency.html).
        Sidewalk:
          allOf:
          - $ref: '#/components/schemas/SidewalkCreateDeviceProfile'
          description: The Sidewalk-related information for creating the Sidewalk
            device profile.
    CreateDeviceProfileResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/DeviceProfileArn'
          description: The Amazon Resource Name of the new resource.
        Id:
          allOf:
          - $ref: '#/components/schemas/DeviceProfileId'
          description: The ID of the new device profile.
    CreateFuotaTaskRequest:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/FuotaTaskName'
        Description:
          $ref: '#/components/schemas/Description'
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
        LoRaWAN:
          $ref: '#/components/schemas/LoRaWANFuotaTask'
        FirmwareUpdateImage:
          $ref: '#/components/schemas/FirmwareUpdateImage'
        FirmwareUpdateRole:
          $ref: '#/components/schemas/FirmwareUpdateRole'
        Tags:
          $ref: '#/components/schemas/TagList'
        RedundancyPercent:
          $ref: '#/components/schemas/RedundancyPercent'
        FragmentSizeBytes:
          $ref: '#/components/schemas/FragmentSizeBytes'
        FragmentIntervalMS:
          $ref: '#/components/schemas/FragmentIntervalMS'
        Descriptor:
          $ref: '#/components/schemas/FileDescriptor'
      required:
      - FirmwareUpdateImage
      - FirmwareUpdateRole
    CreateFuotaTaskResponse:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/FuotaTaskArn'
        Id:
          $ref: '#/components/schemas/FuotaTaskId'
    CreateMulticastGroupRequest:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/MulticastGroupName'
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the multicast group.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: Each resource must have a unique client request token. The
            client token is used to implement idempotency. It ensures that the request
            completes no more than one time. If you retry a request with the same
            token and the same parameters, the request will complete successfully.
            However, if you try to create a new resource using the same token but
            different parameters, an HTTP 409 conflict occurs. If you omit this value,
            AWS SDKs will automatically generate a unique client request. For more
            information about idempotency, see [Ensuring idempotency in Amazon EC2
            API requests](https://docs.aws.amazon.com/ec2/latest/devguide/ec2-api-idempotency.html).
        LoRaWAN:
          $ref: '#/components/schemas/LoRaWANMulticast'
        Tags:
          $ref: '#/components/schemas/TagList'
      required:
      - LoRaWAN
    CreateMulticastGroupResponse:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/MulticastGroupArn'
        Id:
          $ref: '#/components/schemas/MulticastGroupId'
    CreateNetworkAnalyzerConfigurationRequest:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/NetworkAnalyzerConfigurationName'
        TraceContent:
          $ref: '#/components/schemas/TraceContent'
        WirelessDevices:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceList'
          description: Wireless device resources to add to the network analyzer configuration.
            Provide the `WirelessDeviceId` of the resource to add in the input array.
        WirelessGateways:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayList'
          description: Wireless gateway resources to add to the network analyzer configuration.
            Provide the `WirelessGatewayId` of the resource to add in the input array.
        Description:
          $ref: '#/components/schemas/Description'
        Tags:
          $ref: '#/components/schemas/TagList'
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
        MulticastGroups:
          allOf:
          - $ref: '#/components/schemas/NetworkAnalyzerMulticastGroupList'
          description: Multicast Group resources to add to the network analyzer configruation.
            Provide the `MulticastGroupId` of the resource to add in the input array.
      required:
      - Name
    CreateNetworkAnalyzerConfigurationResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NetworkAnalyzerConfigurationArn'
          description: The Amazon Resource Name of the new resource.
        Name:
          $ref: '#/components/schemas/NetworkAnalyzerConfigurationName'
    CreateServiceProfileRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ServiceProfileName'
          description: The name of the new resource.
        LoRaWAN:
          allOf:
          - $ref: '#/components/schemas/LoRaWANServiceProfile'
          description: The service profile information to use to create the service
            profile.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags to attach to the new service profile. Tags are metadata
            that you can use to manage a resource.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: Each resource must have a unique client request token. The
            client token is used to implement idempotency. It ensures that the request
            completes no more than one time. If you retry a request with the same
            token and the same parameters, the request will complete successfully.
            However, if you try to create a new resource using the same token but
            different parameters, an HTTP 409 conflict occurs. If you omit this value,
            AWS SDKs will automatically generate a unique client request. For more
            information about idempotency, see [Ensuring idempotency in Amazon EC2
            API requests](https://docs.aws.amazon.com/ec2/latest/devguide/ec2-api-idempotency.html).
    CreateServiceProfileResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/ServiceProfileArn'
          description: The Amazon Resource Name of the new resource.
        Id:
          allOf:
          - $ref: '#/components/schemas/ServiceProfileId'
          description: The ID of the new service profile.
    CreateWirelessDeviceRequest:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceType'
          description: The wireless device type.
        Name:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceName'
          description: The name of the new resource.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the new resource.
        DestinationName:
          allOf:
          - $ref: '#/components/schemas/DestinationName'
          description: The name of the destination to assign to the new wireless device.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: Each resource must have a unique client request token. The
            client token is used to implement idempotency. It ensures that the request
            completes no more than one time. If you retry a request with the same
            token and the same parameters, the request will complete successfully.
            However, if you try to create a new resource using the same token but
            different parameters, an HTTP 409 conflict occurs. If you omit this value,
            AWS SDKs will automatically generate a unique client request. For more
            information about idempotency, see [Ensuring idempotency in Amazon EC2
            API requests](https://docs.aws.amazon.com/ec2/latest/devguide/ec2-api-idempotency.html).
        LoRaWAN:
          allOf:
          - $ref: '#/components/schemas/LoRaWANDevice'
          description: The device configuration information to use to create the wireless
            device.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags to attach to the new wireless device. Tags are metadata
            that you can use to manage a resource.
        Positioning:
          allOf:
          - $ref: '#/components/schemas/PositioningConfigStatus'
          description: FPort values for the GNSS, stream, and ClockSync functions
            of the positioning information.
        Sidewalk:
          allOf:
          - $ref: '#/components/schemas/SidewalkCreateWirelessDevice'
          description: The device configuration information to use to create the Sidewalk
            device.
      required:
      - Type
      - DestinationName
    CreateWirelessDeviceResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceArn'
          description: The Amazon Resource Name of the new resource.
        Id:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceId'
          description: The ID of the new wireless device.
    CreateWirelessGatewayRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayName'
          description: The name of the new resource.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the new resource.
        LoRaWAN:
          allOf:
          - $ref: '#/components/schemas/LoRaWANGateway'
          description: The gateway configuration information to use to create the
            wireless gateway.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags to attach to the new wireless gateway. Tags are metadata
            that you can use to manage a resource.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: Each resource must have a unique client request token. The
            client token is used to implement idempotency. It ensures that the request
            completes no more than one time. If you retry a request with the same
            token and the same parameters, the request will complete successfully.
            However, if you try to create a new resource using the same token but
            different parameters, an HTTP 409 conflict occurs. If you omit this value,
            AWS SDKs will automatically generate a unique client request. For more
            information about idempotency, see [Ensuring idempotency in Amazon EC2
            API requests](https://docs.aws.amazon.com/ec2/latest/devguide/ec2-api-idempotency.html).
      required:
      - LoRaWAN
    CreateWirelessGatewayResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayArn'
          description: The Amazon Resource Name of the new resource.
        Id:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceId'
          description: The ID of the new wireless gateway.
    CreateWirelessGatewayTaskDefinitionRequest:
      type: object
      properties:
        AutoCreateTasks:
          allOf:
          - $ref: '#/components/schemas/AutoCreateTasks'
          description: Whether to automatically create tasks using this task definition
            for all gateways with the specified current version. If `false`, the task
            must me created by calling `CreateWirelessGatewayTask`.
        Name:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayTaskName'
          description: The name of the new resource.
        Update:
          allOf:
          - $ref: '#/components/schemas/UpdateWirelessGatewayTaskCreate'
          description: Information about the gateways to update.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: Each resource must have a unique client request token. The
            client token is used to implement idempotency. It ensures that the request
            completes no more than one time. If you retry a request with the same
            token and the same parameters, the request will complete successfully.
            However, if you try to create a new resource using the same token but
            different parameters, an HTTP 409 conflict occurs. If you omit this value,
            AWS SDKs will automatically generate a unique client request. For more
            information about idempotency, see [Ensuring idempotency in Amazon EC2
            API requests](https://docs.aws.amazon.com/ec2/latest/devguide/ec2-api-idempotency.html).
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags to attach to the specified resource. Tags are metadata
            that you can use to manage a resource.
      required:
      - AutoCreateTasks
    CreateWirelessGatewayTaskDefinitionResponse:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayTaskDefinitionId'
          description: The ID of the new wireless gateway task definition.
        Arn:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayTaskDefinitionArn'
          description: The Amazon Resource Name of the resource.
    CreateWirelessGatewayTaskRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayId'
          description: The ID of the resource to update.
        WirelessGatewayTaskDefinitionId:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayTaskDefinitionId'
          description: The ID of the WirelessGatewayTaskDefinition.
      required:
      - Id
      - WirelessGatewayTaskDefinitionId
    CreateWirelessGatewayTaskResponse:
      type: object
      properties:
        WirelessGatewayTaskDefinitionId:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayTaskDefinitionId'
          description: The ID of the WirelessGatewayTaskDefinition.
        Status:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayTaskStatus'
          description: The status of the request.
    CreatedAt:
      type: string
      format: date-time
      description: <p>Created at timestamp for the resource.</p>
    CreationDate:
      type: string
      format: date-time
    CreationTime:
      type: string
      format: date-time
    DakCertificateId:
      type: string
      minLength: 0
      maxLength: 256
    DakCertificateMetadata:
      type: object
      properties:
        CertificateId:
          allOf:
          - $ref: '#/components/schemas/DakCertificateId'
          description: The certificate ID for the DAK.
        MaxAllowedSignature:
          allOf:
          - $ref: '#/components/schemas/MaxAllowedSignature'
          description: The maximum number of signatures that the DAK can sign. A value
            of `-1` indicates that there's no device limit.
        FactorySupport:
          allOf:
          - $ref: '#/components/schemas/FactorySupport'
          description: Whether factory support has been enabled.
        ApId:
          allOf:
          - $ref: '#/components/schemas/ApId'
          description: The advertised product ID (APID) that's used for pre-production
            and production applications.
        DeviceTypeId:
          allOf:
          - $ref: '#/components/schemas/DeviceTypeId'
          description: The device type ID that's used for prototyping applications.
      required:
      - CertificateId
      description: The device attestation key (DAK) information.
    DakCertificateMetadataList:
      type: array
      items:
        $ref: '#/components/schemas/DakCertificateMetadata'
    DeleteDestinationRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DestinationName'
          description: The name of the resource to delete.
      required:
      - Name
    DeleteDestinationResponse:
      type: object
      properties: {}
    DeleteDeviceProfileRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/DeviceProfileId'
          description: The ID of the resource to delete.
      required:
      - Id
    DeleteDeviceProfileResponse:
      type: object
      properties: {}
    DeleteFuotaTaskRequest:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/FuotaTaskId'
      required:
      - Id
    DeleteFuotaTaskResponse:
      type: object
      properties: {}
    DeleteMulticastGroupRequest:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/MulticastGroupId'
      required:
      - Id
    DeleteMulticastGroupResponse:
      type: object
      properties: {}
    DeleteNetworkAnalyzerConfigurationRequest:
      type: object
      properties:
        ConfigurationName:
          $ref: '#/components/schemas/NetworkAnalyzerConfigurationName'
      required:
      - ConfigurationName
    DeleteNetworkAnalyzerConfigurationResponse:
      type: object
      properties: {}
    DeleteQueuedMessagesRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceId'
          description: The ID of a given wireless device for which downlink messages
            will be deleted.
        MessageId:
          allOf:
          - $ref: '#/components/schemas/MessageId'
          description: If message ID is `"*"`, it cleares the entire downlink queue
            for a given device, specified by the wireless device ID. Otherwise, the
            downlink message with the specified message ID will be deleted.
        WirelessDeviceType:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceType'
          description: The wireless device type, which can be either Sidewalk or LoRaWAN.
      required:
      - Id
      - MessageId
    DeleteQueuedMessagesResponse:
      type: object
      properties: {}
    DeleteServiceProfileRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ServiceProfileId'
          description: The ID of the resource to delete.
      required:
      - Id
    DeleteServiceProfileResponse:
      type: object
      properties: {}
    DeleteWirelessDeviceImportTaskRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ImportTaskId'
          description: The unique identifier of the import task to be deleted.
      required:
      - Id
    DeleteWirelessDeviceImportTaskResponse:
      type: object
      properties: {}
    DeleteWirelessDeviceRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceId'
          description: The ID of the resource to delete.
      required:
      - Id
    DeleteWirelessDeviceResponse:
      type: object
      properties: {}
    DeleteWirelessGatewayRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayId'
          description: The ID of the resource to delete.
      required:
      - Id
    DeleteWirelessGatewayResponse:
      type: object
      properties: {}
    DeleteWirelessGatewayTaskDefinitionRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayTaskDefinitionId'
          description: The ID of the resource to delete.
      required:
      - Id
    DeleteWirelessGatewayTaskDefinitionResponse:
      type: object
      properties: {}
    DeleteWirelessGatewayTaskRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayId'
          description: The ID of the resource to delete.
      required:
      - Id
    DeleteWirelessGatewayTaskResponse:
      type: object
      properties: {}
    DeregisterWirelessDeviceRequest:
      type: object
      properties:
        Identifier:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The identifier of the wireless device to deregister from AWS
            IoT Wireless.
        WirelessDeviceType:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceType'
          description: The type of wireless device to deregister from AWS IoT Wireless,
            which can be `LoRaWAN` or `Sidewalk`.
      required:
      - Identifier
    DeregisterWirelessDeviceResponse:
      type: object
      properties: {}
    Description:
      type: string
      minLength: 0
      maxLength: 2048
    DestinationArn:
      type: string
    DestinationList:
      type: array
      items:
        $ref: '#/components/schemas/Destinations'
    DestinationName:
      type: string
      pattern: ^[a-zA-Z0-9-_]+$
      minLength: 0
      maxLength: 128
    Destinations:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/DestinationArn'
          description: The Amazon Resource Name of the resource.
        Name:
          allOf:
          - $ref: '#/components/schemas/DestinationName'
          description: The name of the resource.
        ExpressionType:
          allOf:
          - $ref: '#/components/schemas/ExpressionType'
          description: The type of value in `Expression`.
        Expression:
          allOf:
          - $ref: '#/components/schemas/Expression'
          description: The rule name or topic rule to send messages to.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the resource.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The ARN of the IAM Role that authorizes the destination.
      description: Describes a destination.
    DevAddr:
      type: string
      pattern: ^[a-fA-F0-9]{8}$
    DevEui:
      type: string
      pattern: ^[a-fA-F0-9]{16}$
    DevStatusReqFreq:
      type: integer
      minimum: 0
      maximum: 2147483647
    DeviceCertificateList:
      type: array
      items:
        $ref: '#/components/schemas/CertificateList'
      description: <p>List of device certificate chain.</p>
    DeviceCreationFile:
      type: string
      minLength: 0
      maxLength: 1024
    DeviceCreationFileList:
      type: array
      items:
        $ref: '#/components/schemas/DeviceCreationFile'
    DeviceName:
      type: string
    DeviceProfile:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/DeviceProfileArn'
          description: The Amazon Resource Name of the resource.
        Name:
          allOf:
          - $ref: '#/components/schemas/DeviceProfileName'
          description: The name of the resource.
        Id:
          allOf:
          - $ref: '#/components/schemas/DeviceProfileId'
          description: The ID of the device profile.
      description: Describes a device profile.
    DeviceProfileArn:
      type: string
    DeviceProfileId:
      type: string
      minLength: 0
      maxLength: 256
    DeviceProfileList:
      type: array
      items:
        $ref: '#/components/schemas/DeviceProfile'
    DeviceProfileName:
      type: string
      minLength: 0
      maxLength: 256
    DeviceProfileType:
      type: string
      enum:
      - Sidewalk
      - LoRaWAN
    DeviceRegistrationStateEventConfiguration:
      type: object
      properties:
        Sidewalk:
          allOf:
          - $ref: '#/components/schemas/SidewalkEventNotificationConfigurations'
          description: Device registration state event configuration object for enabling
            or disabling Sidewalk related event topics.
        WirelessDeviceIdEventTopic:
          allOf:
          - $ref: '#/components/schemas/EventNotificationTopicStatus'
          description: Denotes whether the wireless device ID device registration
            state event topic is enabled or disabled.
      description: Device registration state event configuration object for enabling
        and disabling relevant topics.
    DeviceRegistrationStateResourceTypeEventConfiguration:
      type: object
      properties:
        Sidewalk:
          allOf:
          - $ref: '#/components/schemas/SidewalkResourceTypeEventConfiguration'
          description: Device registration resource type state event configuration
            object for enabling or disabling Sidewalk related event topics.
      description: Device registration state resource type event configuration object
        for enabling or disabling topic.
    DeviceState:
      type: string
      enum:
      - Provisioned
      - RegisteredNotSeen
      - RegisteredReachable
      - RegisteredUnreachable
      description: <p>Device state defines the device status of sidewalk device.</p>
    DeviceTypeId:
      type: string
      minLength: 0
      maxLength: 2048
    Dimension:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/DimensionName'
          description: The name of the dimension.
        value:
          allOf:
          - $ref: '#/components/schemas/DimensionValue'
          description: The dimension's value.
      description: The required list of dimensions for the metric.
    DimensionName:
      type: string
      enum:
      - DeviceId
      - GatewayId
    DimensionValue:
      type: string
      minLength: 0
      maxLength: 256
    Dimensions:
      type: array
      items:
        $ref: '#/components/schemas/Dimension'
    DisassociateAwsAccountFromPartnerAccountRequest:
      type: object
      properties:
        PartnerAccountId:
          allOf:
          - $ref: '#/components/schemas/PartnerAccountId'
          description: The partner account ID to disassociate from the AWS account.
        PartnerType:
          allOf:
          - $ref: '#/components/schemas/PartnerType'
          description: The partner type.
      required:
      - PartnerAccountId
      - PartnerType
    DisassociateAwsAccountFromPartnerAccountResponse:
      type: object
      properties: {}
    DisassociateMulticastGroupFromFuotaTaskRequest:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/FuotaTaskId'
        MulticastGroupId:
          $ref: '#/components/schemas/MulticastGroupId'
      required:
      - Id
      - MulticastGroupId
    DisassociateMulticastGroupFromFuotaTaskResponse:
      type: object
      properties: {}
    DisassociateWirelessDeviceFromFuotaTaskRequest:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/FuotaTaskId'
        WirelessDeviceId:
          $ref: '#/components/schemas/WirelessDeviceId'
      required:
      - Id
      - WirelessDeviceId
    DisassociateWirelessDeviceFromFuotaTaskResponse:
      type: object
      properties: {}
    DisassociateWirelessDeviceFromMulticastGroupRequest:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/MulticastGroupId'
        WirelessDeviceId:
          $ref: '#/components/schemas/WirelessDeviceId'
      required:
      - Id
      - WirelessDeviceId
    DisassociateWirelessDeviceFromMulticastGroupResponse:
      type: object
      properties: {}
    DisassociateWirelessDeviceFromThingRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceId'
          description: The ID of the resource to update.
      required:
      - Id
    DisassociateWirelessDeviceFromThingResponse:
      type: object
      properties: {}
    DisassociateWirelessGatewayFromCertificateRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayId'
          description: The ID of the resource to update.
      required:
      - Id
    DisassociateWirelessGatewayFromCertificateResponse:
      type: object
      properties: {}
    DisassociateWirelessGatewayFromThingRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayId'
          description: The ID of the resource to update.
      required:
      - Id
    DisassociateWirelessGatewayFromThingResponse:
      type: object
      properties: {}
    DlAllowed:
      type: boolean
    DlBucketSize:
      type: integer
      minimum: 0
      maximum: 2147483647
    DlClass:
      type: string
      enum:
      - ClassB
      - ClassC
      description: <p>DlClass for LoRaWAM, valid values are ClassB and ClassC.</p>
    DlDr:
      type: integer
      minimum: 0
      maximum: 15
      description: <p>Downlink data rate.</p>
    DlFreq:
      type: integer
      minimum: 100000000
      maximum: 1000000000
      description: <p>Downlink frequency.</p>
    DlRate:
      type: integer
      minimum: 0
      maximum: 2147483647
    DlRatePolicy:
      type: string
      minLength: 0
      maxLength: 256
    Double:
      type: number
      format: double
    DownlinkFrequency:
      type: integer
      minimum: 100000000
      maximum: 1000000000
    DownlinkMode:
      type: string
      enum:
      - SEQUENTIAL
      - CONCURRENT
      - USING_UPLINK_GATEWAY
    DownlinkQueueMessage:
      type: object
      properties:
        MessageId:
          allOf:
          - $ref: '#/components/schemas/MessageId'
          description: The message ID assigned by IoT Wireless to each downlink message,
            which helps identify the message.
        TransmitMode:
          allOf:
          - $ref: '#/components/schemas/TransmitMode'
          description: The transmit mode to use for sending data to the wireless device.
            This can be `0` for UM (unacknowledge mode) or `1` for AM (acknowledge
            mode).
        ReceivedAt:
          allOf:
          - $ref: '#/components/schemas/ISODateTimeString'
          description: The time at which Iot Wireless received the downlink message.
        LoRaWAN:
          $ref: '#/components/schemas/LoRaWANSendDataToDevice'
      description: The message in the downlink queue.
    DownlinkQueueMessagesList:
      type: array
      items:
        $ref: '#/components/schemas/DownlinkQueueMessage'
    DrMax:
      type: integer
      default: 0
      minimum: 0
      maximum: 15
    DrMaxBox:
      type: integer
      minimum: 0
      maximum: 15
    DrMin:
      type: integer
      default: 0
      minimum: 0
      maximum: 15
    DrMinBox:
      type: integer
      minimum: 0
      maximum: 15
    EARFCN:
      type: integer
      minimum: 0
      maximum: 262143
    EndPoint:
      type: string
      minLength: 1
      maxLength: 256
    EutranCid:
      type: integer
      minimum: 0
      maximum: 268435455
    Event:
      type: string
      enum:
      - discovered
      - lost
      - ack
      - nack
      - passthrough
      description: <p>Sidewalk device status notification.</p>
    EventConfigurationItem:
      type: object
      properties:
        Identifier:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: Resource identifier opted in for event messaging.
        IdentifierType:
          allOf:
          - $ref: '#/components/schemas/IdentifierType'
          description: Identifier type of the particular resource identifier for event
            configuration.
        PartnerType:
          allOf:
          - $ref: '#/components/schemas/EventNotificationPartnerType'
          description: Partner type of the resource if the identifier type is PartnerAccountId.
        Events:
          $ref: '#/components/schemas/EventNotificationItemConfigurations'
      description: Event configuration object for a single resource.
    EventConfigurationsList:
      type: array
      items:
        $ref: '#/components/schemas/EventConfigurationItem'
    EventNotificationItemConfigurations:
      type: object
      properties:
        DeviceRegistrationState:
          allOf:
          - $ref: '#/components/schemas/DeviceRegistrationStateEventConfiguration'
          description: Device registration state event configuration for an event
            configuration item.
        Proximity:
          allOf:
          - $ref: '#/components/schemas/ProximityEventConfiguration'
          description: Proximity event configuration for an event configuration item.
        Join:
          allOf:
          - $ref: '#/components/schemas/JoinEventConfiguration'
          description: Join event configuration for an event configuration item.
        ConnectionStatus:
          allOf:
          - $ref: '#/components/schemas/ConnectionStatusEventConfiguration'
          description: Connection status event configuration for an event configuration
            item.
        MessageDeliveryStatus:
          allOf:
          - $ref: '#/components/schemas/MessageDeliveryStatusEventConfiguration'
          description: Message delivery status event configuration for an event configuration
            item.
      description: Object of all event configurations and the status of the event
        topics.
    EventNotificationPartnerType:
      type: string
      enum:
      - Sidewalk
    EventNotificationResourceType:
      type: string
      enum:
      - FuotaTask
      - SidewalkAccount
      - WirelessDevice
      - WirelessGateway
    EventNotificationTopicStatus:
      type: string
      enum:
      - Enabled
      - Disabled
    Expression:
      type: string
      minLength: 0
      maxLength: 2048
    ExpressionType:
      type: string
      enum:
      - RuleName
      - MqttTopic
    FCntStart:
      type: integer
      minimum: 0
      maximum: 65535
      description: <p>The FCnt init value.</p>
    FNwkSIntKey:
      type: string
      pattern: ^[a-fA-F0-9]{32}$
    FPort:
      type: integer
      minimum: 1
      maximum: 223
      description: <p>The Fport value.</p>
    FPorts:
      type: object
      properties:
        Fuota:
          $ref: '#/components/schemas/FPort'
        Multicast:
          $ref: '#/components/schemas/FPort'
        ClockSync:
          $ref: '#/components/schemas/FPort'
        Positioning:
          allOf:
          - $ref: '#/components/schemas/Positioning'
          description: FPort values for the GNSS, stream, and ClockSync functions
            of the positioning information.
        Applications:
          allOf:
          - $ref: '#/components/schemas/Applications'
          description: Optional LoRaWAN application information, which can be used
            for geolocation.
      description: List of FPort assigned for different LoRaWAN application packages
        to use
    FactoryPresetFreqsList:
      type: array
      items:
        $ref: '#/components/schemas/PresetFreq'
    FactorySupport:
      type: boolean
    FileDescriptor:
      type: string
      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
      minLength: 0
      maxLength: 332
    Fingerprint:
      type: string
      pattern: ^[a-fA-F0-9]{64}$
      minLength: 64
      maxLength: 64
    FirmwareUpdateImage:
      type: string
      minLength: 1
      maxLength: 4096
    FirmwareUpdateRole:
      type: string
      minLength: 1
      maxLength: 2048
    FragmentIntervalMS:
      type: integer
      minimum: 1
      description: "<p>The interval for sending fragments in milliseconds, rounded\
        \ to the nearest\n            second.</p>\n         <note>\n            <p>This\
        \ interval only determines the timing for when the Cloud sends down the\n\
        \                fragments to yor device. There can be a delay for when your\
        \ device will receive\n                these fragments. This delay depends\
        \ on the device's class and the communication\n                delay with\
        \ the cloud.</p>\n         </note>"
    FragmentSizeBytes:
      type: integer
      minimum: 1
      description: "<p>The size of each fragment in bytes. This parameter is supported\
        \ only for FUOTA tasks\n            with multicast groups.</p>"
    FuotaDeviceStatus:
      type: string
      enum:
      - Initial
      - Package_Not_Supported
      - FragAlgo_unsupported
      - Not_enough_memory
      - FragIndex_unsupported
      - Wrong_descriptor
      - SessionCnt_replay
      - MissingFrag
      - MemoryError
      - MICError
      - Successful
      - Device_exist_in_conflict_fuota_task
      description: <p>The status of a wireless device in a FUOTA task.</p>
    FuotaTask:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/FuotaTaskId'
        Arn:
          $ref: '#/components/schemas/FuotaTaskArn'
        Name:
          $ref: '#/components/schemas/FuotaTaskName'
      description: A FUOTA task.
    FuotaTaskArn:
      type: string
      minLength: 0
      maxLength: 128
    FuotaTaskEvent:
      type: string
      enum:
      - Fuota
      description: <p>The event for a log message, if the log message is tied to a
        FUOTA task.</p>
    FuotaTaskEventLogOption:
      type: object
      properties:
        Event:
          $ref: '#/components/schemas/FuotaTaskEvent'
        LogLevel:
          $ref: '#/components/schemas/LogLevel'
      required:
      - Event
      - LogLevel
      description: 'The log options for a FUOTA task event and can be used to set
        log levels for a specific FUOTA task event.


        For a LoRaWAN FUOTA task, the only possible event for a log message is `Fuota`.'
    FuotaTaskEventLogOptionList:
      type: array
      items:
        $ref: '#/components/schemas/FuotaTaskEventLogOption'
      description: <p>The list of FUOTA task event log options.</p>
    FuotaTaskId:
      type: string
      minLength: 0
      maxLength: 256
    FuotaTaskList:
      type: array
      items:
        $ref: '#/components/schemas/FuotaTask'
      description: <p>Lists the FUOTA tasks registered to your AWS account.</p>
    FuotaTaskLogOption:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/FuotaTaskType'
          description: The FUOTA task type.
        LogLevel:
          $ref: '#/components/schemas/LogLevel'
        Events:
          $ref: '#/components/schemas/FuotaTaskEventLogOptionList'
      required:
      - Type
      - LogLevel
      description: The log options for FUOTA tasks and can be used to set log levels
        for a specific type of FUOTA task.
    FuotaTaskLogOptionList:
      type: array
      items:
        $ref: '#/components/schemas/FuotaTaskLogOption'
      description: <p>The list of FUOTA task log options.</p>
    FuotaTaskName:
      type: string
      minLength: 0
      maxLength: 256
    FuotaTaskStatus:
      type: string
      enum:
      - Pending
      - FuotaSession_Waiting
      - In_FuotaSession
      - FuotaDone
      - Delete_Waiting
      description: <p>The status of a FUOTA task.</p>
    FuotaTaskType:
      type: string
      enum:
      - LoRaWAN
      description: <p>The FUOTA task type.</p>
    GPST:
      type: number
      format: float
    GatewayEui:
      type: string
      pattern: ^(([0-9A-Fa-f]{2}-){7}|([0-9A-Fa-f]{2}:){7}|([0-9A-Fa-f]{2}\s){7}|([0-9A-Fa-f]{2}){7})([0-9A-Fa-f]{2})$
    GatewayList:
      type: array
      items:
        $ref: '#/components/schemas/GatewayListItem'
    GatewayListItem:
      type: object
      properties:
        GatewayId:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayId'
          description: The ID of the wireless gateways that you want to add to the
            list of gateways when sending downlink messages.
        DownlinkFrequency:
          allOf:
          - $ref: '#/components/schemas/DownlinkFrequency'
          description: The frequency to use for the gateways when sending a downlink
            message to the wireless device.
      required:
      - GatewayId
      - DownlinkFrequency
      description: Gateway list item object that specifies the frequency and list
        of gateways for which the downlink message should be sent.
    GatewayListMulticast:
      type: array
      items:
        $ref: '#/components/schemas/WirelessGatewayId'
    GatewayMaxEirp:
      type: number
      format: float
      minimum: 0
      maximum: 30
    GenAppKey:
      type: string
      pattern: ^[a-fA-F0-9]{32}$
    GeoJsonPayload:
      type: string
      format: byte
    GeranCid:
      type: integer
      minimum: 0
      maximum: 65535
    GetDestinationRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DestinationName'
          description: The name of the resource to get.
      required:
      - Name
    GetDestinationResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/DestinationArn'
          description: The Amazon Resource Name of the resource.
        Name:
          allOf:
          - $ref: '#/components/schemas/DestinationName'
          description: The name of the resource.
        Expression:
          allOf:
          - $ref: '#/components/schemas/Expression'
          description: The rule name or topic rule to send messages to.
        ExpressionType:
          allOf:
          - $ref: '#/components/schemas/ExpressionType'
          description: The type of value in `Expression`.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the resource.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The ARN of the IAM Role that authorizes the destination.
    GetDeviceProfileRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/DeviceProfileId'
          description: The ID of the resource to get.
      required:
      - Id
    GetDeviceProfileResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/DeviceProfileArn'
          description: The Amazon Resource Name of the resource.
        Name:
          allOf:
          - $ref: '#/components/schemas/DeviceProfileName'
          description: The name of the resource.
        Id:
          allOf:
          - $ref: '#/components/schemas/DeviceProfileId'
          description: The ID of the device profile.
        LoRaWAN:
          allOf:
          - $ref: '#/components/schemas/LoRaWANDeviceProfile'
          description: Information about the device profile.
        Sidewalk:
          allOf:
          - $ref: '#/components/schemas/SidewalkGetDeviceProfile'
          description: Information about the Sidewalk parameters in the device profile.
    GetEventConfigurationByResourceTypesRequest:
      type: object
      properties: {}
    GetEventConfigurationByResourceTypesResponse:
      type: object
      properties:
        DeviceRegistrationState:
          allOf:
          - $ref: '#/components/schemas/DeviceRegistrationStateResourceTypeEventConfiguration'
          description: Resource type event configuration for the device registration
            state event.
        Proximity:
          allOf:
          - $ref: '#/components/schemas/ProximityResourceTypeEventConfiguration'
          description: Resource type event configuration for the proximity event.
        Join:
          allOf:
          - $ref: '#/components/schemas/JoinResourceTypeEventConfiguration'
          description: Resource type event configuration for the join event.
        ConnectionStatus:
          allOf:
          - $ref: '#/components/schemas/ConnectionStatusResourceTypeEventConfiguration'
          description: Resource type event configuration for the connection status
            event.
        MessageDeliveryStatus:
          allOf:
          - $ref: '#/components/schemas/MessageDeliveryStatusResourceTypeEventConfiguration'
          description: Resource type event configuration object for the message delivery
            status event.
    GetFuotaTaskRequest:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/FuotaTaskId'
      required:
      - Id
    GetFuotaTaskResponse:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/FuotaTaskArn'
        Id:
          $ref: '#/components/schemas/FuotaTaskId'
        Status:
          $ref: '#/components/schemas/FuotaTaskStatus'
        Name:
          $ref: '#/components/schemas/FuotaTaskName'
        Description:
          $ref: '#/components/schemas/Description'
        LoRaWAN:
          $ref: '#/components/schemas/LoRaWANFuotaTaskGetInfo'
        FirmwareUpdateImage:
          $ref: '#/components/schemas/FirmwareUpdateImage'
        FirmwareUpdateRole:
          $ref: '#/components/schemas/FirmwareUpdateRole'
        CreatedAt:
          $ref: '#/components/schemas/CreatedAt'
        RedundancyPercent:
          $ref: '#/components/schemas/RedundancyPercent'
        FragmentSizeBytes:
          $ref: '#/components/schemas/FragmentSizeBytes'
        FragmentIntervalMS:
          $ref: '#/components/schemas/FragmentIntervalMS'
        Descriptor:
          $ref: '#/components/schemas/FileDescriptor'
    GetLogLevelsByResourceTypesRequest:
      type: object
      properties: {}
    GetLogLevelsByResourceTypesResponse:
      type: object
      properties:
        DefaultLogLevel:
          $ref: '#/components/schemas/LogLevel'
        WirelessGatewayLogOptions:
          $ref: '#/components/schemas/WirelessGatewayLogOptionList'
        WirelessDeviceLogOptions:
          $ref: '#/components/schemas/WirelessDeviceLogOptionList'
        FuotaTaskLogOptions:
          $ref: '#/components/schemas/FuotaTaskLogOptionList'
    GetMetricConfigurationRequest:
      type: object
      properties: {}
    GetMetricConfigurationResponse:
      type: object
      properties:
        SummaryMetric:
          allOf:
          - $ref: '#/components/schemas/SummaryMetricConfiguration'
          description: The configuration status of the AWS account for summary metric
            aggregation.
    GetMetricsRequest:
      type: object
      properties:
        SummaryMetricQueries:
          allOf:
          - $ref: '#/components/schemas/SummaryMetricQueries'
          description: The list of queries to retrieve the summary metrics.
    GetMetricsResponse:
      type: object
      properties:
        SummaryMetricQueryResults:
          allOf:
          - $ref: '#/components/schemas/SummaryMetricQueryResults'
          description: The list of summary metrics that were retrieved.
    GetMulticastGroupRequest:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/MulticastGroupId'
      required:
      - Id
    GetMulticastGroupResponse:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/MulticastGroupArn'
        Id:
          $ref: '#/components/schemas/MulticastGroupId'
        Name:
          $ref: '#/components/schemas/MulticastGroupName'
        Description:
          $ref: '#/components/schemas/Description'
        Status:
          $ref: '#/components/schemas/MulticastGroupStatus'
        LoRaWAN:
          $ref: '#/components/schemas/LoRaWANMulticastGet'
        CreatedAt:
          $ref: '#/components/schemas/CreatedAt'
    GetMulticastGroupSessionRequest:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/MulticastGroupId'
      required:
      - Id
    GetMulticastGroupSessionResponse:
      type: object
      properties:
        LoRaWAN:
          $ref: '#/components/schemas/LoRaWANMulticastSession'
    GetNetworkAnalyzerConfigurationRequest:
      type: object
      properties:
        ConfigurationName:
          $ref: '#/components/schemas/NetworkAnalyzerConfigurationName'
      required:
      - ConfigurationName
    GetNetworkAnalyzerConfigurationResponse:
      type: object
      properties:
        TraceContent:
          $ref: '#/components/schemas/TraceContent'
        WirelessDevices:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceList'
          description: List of wireless device resources that have been added to the
            network analyzer configuration.
        WirelessGateways:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayList'
          description: List of wireless gateway resources that have been added to
            the network analyzer configuration.
        Description:
          $ref: '#/components/schemas/Description'
        Arn:
          allOf:
          - $ref: '#/components/schemas/NetworkAnalyzerConfigurationArn'
          description: The Amazon Resource Name of the new resource.
        Name:
          $ref: '#/components/schemas/NetworkAnalyzerConfigurationName'
        MulticastGroups:
          allOf:
          - $ref: '#/components/schemas/NetworkAnalyzerMulticastGroupList'
          description: List of multicast group resources that have been added to the
            network analyzer configuration.
    GetPartnerAccountRequest:
      type: object
      properties:
        PartnerAccountId:
          allOf:
          - $ref: '#/components/schemas/PartnerAccountId'
          description: The partner account ID to disassociate from the AWS account.
        PartnerType:
          allOf:
          - $ref: '#/components/schemas/PartnerType'
          description: The partner type.
      required:
      - PartnerAccountId
      - PartnerType
    GetPartnerAccountResponse:
      type: object
      properties:
        Sidewalk:
          allOf:
          - $ref: '#/components/schemas/SidewalkAccountInfoWithFingerprint'
          description: The Sidewalk account credentials.
        AccountLinked:
          allOf:
          - $ref: '#/components/schemas/AccountLinked'
          description: Whether the partner account is linked to the AWS account.
    GetPositionConfigurationRequest:
      type: object
      properties:
        ResourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/PositionResourceIdentifier'
          description: Resource identifier used in a position configuration.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/PositionResourceType'
          description: Resource type of the resource for which position configuration
            is retrieved.
      required:
      - ResourceIdentifier
      - ResourceType
    GetPositionConfigurationResponse:
      type: object
      properties:
        Solvers:
          allOf:
          - $ref: '#/components/schemas/PositionSolverDetails'
          description: The wrapper for the solver configuration details object.
        Destination:
          allOf:
          - $ref: '#/components/schemas/DestinationName'
          description: The position data destination that describes the AWS IoT rule
            that processes the device's position data for use by AWS IoT Core for
            LoRaWAN.
    GetPositionEstimateRequest:
      type: object
      properties:
        WiFiAccessPoints:
          allOf:
          - $ref: '#/components/schemas/WiFiAccessPoints'
          description: Retrieves an estimated device position by resolving WLAN measurement
            data. The position is resolved using HERE's Wi-Fi based solver.
        CellTowers:
          allOf:
          - $ref: '#/components/schemas/CellTowers'
          description: Retrieves an estimated device position by resolving measurement
            data from cellular radio towers. The position is resolved using HERE's
            cellular-based solver.
        Ip:
          allOf:
          - $ref: '#/components/schemas/Ip'
          description: Retrieves an estimated device position by resolving the IP
            address information from the device. The position is resolved using MaxMind's
            IP-based solver.
        Gnss:
          allOf:
          - $ref: '#/components/schemas/Gnss'
          description: Retrieves an estimated device position by resolving the global
            navigation satellite system (GNSS) scan data. The position is resolved
            using the GNSS solver powered by LoRa Cloud.
        Timestamp:
          allOf:
          - $ref: '#/components/schemas/CreationDate'
          description: Optional information that specifies the time when the position
            information will be resolved. It uses the Unix timestamp format. If not
            specified, the time at which the request was received will be used.
    GetPositionEstimateResponse:
      type: object
      properties:
        GeoJsonPayload:
          allOf:
          - $ref: '#/components/schemas/GeoJsonPayload'
          description: The position information of the resource, displayed as a JSON
            payload. The payload is of type blob and uses the [GeoJSON](https://geojson.org/)
            format, which a format that's used to encode geographic data structures.
            A sample payload contains the timestamp information, the WGS84 coordinates
            of the location, and the accuracy and confidence level. For more information
            and examples, see [Resolve device location (console)](https://docs.aws.amazon.com/iot/latest/developerguide/location-resolve-console.html).
    GetPositionRequest:
      type: object
      properties:
        ResourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/PositionResourceIdentifier'
          description: Resource identifier used to retrieve the position information.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/PositionResourceType'
          description: Resource type of the resource for which position information
            is retrieved.
      required:
      - ResourceIdentifier
      - ResourceType
    GetPositionResponse:
      type: object
      properties:
        Position:
          allOf:
          - $ref: '#/components/schemas/PositionCoordinate'
          description: The position information of the resource.
        Accuracy:
          allOf:
          - $ref: '#/components/schemas/Accuracy'
          description: The accuracy of the estimated position in meters. An empty
            value indicates that no position data is available. A value of ‘0.0’ value
            indicates that position data is available. This data corresponds to the
            position information that you specified instead of the position computed
            by solver.
        SolverType:
          allOf:
          - $ref: '#/components/schemas/PositionSolverType'
          description: The type of solver used to identify the position of the resource.
        SolverProvider:
          allOf:
          - $ref: '#/components/schemas/PositionSolverProvider'
          description: The vendor of the positioning solver.
        SolverVersion:
          allOf:
          - $ref: '#/components/schemas/PositionSolverVersion'
          description: The version of the positioning solver.
        Timestamp:
          allOf:
          - $ref: '#/components/schemas/ISODateTimeString'
          description: The timestamp at which the device's position was determined.
    GetResourceEventConfigurationRequest:
      type: object
      properties:
        Identifier:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: Resource identifier to opt in for event messaging.
        IdentifierType:
          allOf:
          - $ref: '#/components/schemas/IdentifierType'
          description: Identifier type of the particular resource identifier for event
            configuration.
        PartnerType:
          allOf:
          - $ref: '#/components/schemas/EventNotificationPartnerType'
          description: Partner type of the resource if the identifier type is `PartnerAccountId`.
      required:
      - Identifier
      - IdentifierType
    GetResourceEventConfigurationResponse:
      type: object
      properties:
        DeviceRegistrationState:
          allOf:
          - $ref: '#/components/schemas/DeviceRegistrationStateEventConfiguration'
          description: Event configuration for the device registration state event.
        Proximity:
          allOf:
          - $ref: '#/components/schemas/ProximityEventConfiguration'
          description: Event configuration for the proximity event.
        Join:
          allOf:
          - $ref: '#/components/schemas/JoinEventConfiguration'
          description: Event configuration for the join event.
        ConnectionStatus:
          allOf:
          - $ref: '#/components/schemas/ConnectionStatusEventConfiguration'
          description: Event configuration for the connection status event.
        MessageDeliveryStatus:
          allOf:
          - $ref: '#/components/schemas/MessageDeliveryStatusEventConfiguration'
          description: Event configuration for the message delivery status event.
    GetResourceLogLevelRequest:
      type: object
      properties:
        ResourceIdentifier:
          $ref: '#/components/schemas/ResourceIdentifier'
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The type of resource, which can be `WirelessDevice`, `WirelessGateway`,
            or `FuotaTask`.
      required:
      - ResourceIdentifier
      - ResourceType
    GetResourceLogLevelResponse:
      type: object
      properties:
        LogLevel:
          $ref: '#/components/schemas/LogLevel'
    GetResourcePositionRequest:
      type: object
      properties:
        ResourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/PositionResourceIdentifier'
          description: The identifier of the resource for which position information
            is retrieved. It can be the wireless device ID or the wireless gateway
            ID, depending on the resource type.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/PositionResourceType'
          description: The type of resource for which position information is retrieved,
            which can be a wireless device or a wireless gateway.
      required:
      - ResourceIdentifier
      - ResourceType
    GetResourcePositionResponse:
      type: object
      properties:
        GeoJsonPayload:
          allOf:
          - $ref: '#/components/schemas/GeoJsonPayload'
          description: The position information of the resource, displayed as a JSON
            payload. The payload uses the GeoJSON format, which a format that's used
            to encode geographic data structures. For more information, see [GeoJSON](https://geojson.org/).
    GetServiceEndpointRequest:
      type: object
      properties:
        ServiceType:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayServiceType'
          description: The service type for which to get endpoint information about.
            Can be `CUPS` for the Configuration and Update Server endpoint, or `LNS`
            for the LoRaWAN Network Server endpoint.
    GetServiceEndpointResponse:
      type: object
      properties:
        ServiceType:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayServiceType'
          description: The endpoint's service type.
        ServiceEndpoint:
          allOf:
          - $ref: '#/components/schemas/EndPoint'
          description: The service endpoint value.
        ServerTrust:
          allOf:
          - $ref: '#/components/schemas/CertificatePEM'
          description: The Root CA of the server trust certificate.
    GetServiceProfileRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ServiceProfileId'
          description: The ID of the resource to get.
      required:
      - Id
    GetServiceProfileResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/ServiceProfileArn'
          description: The Amazon Resource Name of the resource.
        Name:
          allOf:
          - $ref: '#/components/schemas/ServiceProfileName'
          description: The name of the resource.
        Id:
          allOf:
          - $ref: '#/components/schemas/ServiceProfileId'
          description: The ID of the service profile.
        LoRaWAN:
          allOf:
          - $ref: '#/components/schemas/LoRaWANGetServiceProfileInfo'
          description: Information about the service profile.
    GetWirelessDeviceImportTaskRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ImportTaskId'
          description: The identifier of the import task for which information is
            requested.
      required:
      - Id
    GetWirelessDeviceImportTaskResponse:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ImportTaskId'
          description: The identifier of the import task for which information is
            retrieved.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ImportTaskArn'
          description: The ARN (Amazon Resource Name) of the import task.
        DestinationName:
          allOf:
          - $ref: '#/components/schemas/DestinationName'
          description: The name of the destination that's assigned to the wireless
            devices in the import task.
        Sidewalk:
          allOf:
          - $ref: '#/components/schemas/SidewalkGetStartImportInfo'
          description: The Sidewalk-related information about an import task.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/CreationTime'
          description: The time at which the import task was created.
        Status:
          allOf:
          - $ref: '#/components/schemas/ImportTaskStatus'
          description: The import task status.
        StatusReason:
          allOf:
          - $ref: '#/components/schemas/StatusReason'
          description: The reason for the provided status information, such as a validation
            error that causes the import task to fail.
        InitializedImportedDeviceCount:
          allOf:
          - $ref: '#/components/schemas/ImportedWirelessDeviceCount'
          description: The number of devices in the import task that are waiting for
            the control log to start processing.
        PendingImportedDeviceCount:
          allOf:
          - $ref: '#/components/schemas/ImportedWirelessDeviceCount'
          description: The number of devices in the import task that are waiting in
            the import task queue to be onboarded.
        OnboardedImportedDeviceCount:
          allOf:
          - $ref: '#/components/schemas/ImportedWirelessDeviceCount'
          description: The number of devices in the import task that have been onboarded
            to the import task.
        FailedImportedDeviceCount:
          allOf:
          - $ref: '#/components/schemas/ImportedWirelessDeviceCount'
          description: The number of devices in the import task that failed to onboard
            to the import task.
    GetWirelessDeviceRequest:
      type: object
      properties:
        Identifier:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The identifier of the wireless device to get.
        IdentifierType:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceIdType'
          description: The type of identifier used in `identifier`.
      required:
      - Identifier
      - IdentifierType
    GetWirelessDeviceResponse:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceType'
          description: The wireless device type.
        Name:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceName'
          description: The name of the resource.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the resource.
        DestinationName:
          allOf:
          - $ref: '#/components/schemas/DestinationName'
          description: The name of the destination to which the device is assigned.
        Id:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceId'
          description: The ID of the wireless device.
        Arn:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceArn'
          description: The Amazon Resource Name of the resource.
        ThingName:
          allOf:
          - $ref: '#/components/schemas/ThingName'
          description: The name of the thing associated with the wireless device.
            The value is empty if a thing isn't associated with the device.
        ThingArn:
          allOf:
          - $ref: '#/components/schemas/ThingArn'
          description: The ARN of the thing associated with the wireless device.
        LoRaWAN:
          allOf:
          - $ref: '#/components/schemas/LoRaWANDevice'
          description: Information about the wireless device.
        Sidewalk:
          allOf:
          - $ref: '#/components/schemas/SidewalkDevice'
          description: Sidewalk device object.
        Positioning:
          allOf:
          - $ref: '#/components/schemas/PositioningConfigStatus'
          description: FPort values for the GNSS, stream, and ClockSync functions
            of the positioning information.
    GetWirelessDeviceStatisticsRequest:
      type: object
      properties:
        WirelessDeviceId:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceId'
          description: The ID of the wireless device for which to get the data.
      required:
      - WirelessDeviceId
    GetWirelessDeviceStatisticsResponse:
      type: object
      properties:
        WirelessDeviceId:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceId'
          description: The ID of the wireless device.
        LastUplinkReceivedAt:
          allOf:
          - $ref: '#/components/schemas/ISODateTimeString'
          description: 'The date and time when the most recent uplink was received.


            This value is only valid for 3 months.'
        LoRaWAN:
          allOf:
          - $ref: '#/components/schemas/LoRaWANDeviceMetadata'
          description: Information about the wireless device's operations.
        Sidewalk:
          allOf:
          - $ref: '#/components/schemas/SidewalkDeviceMetadata'
          description: MetaData for Sidewalk device.
    GetWirelessGatewayCertificateRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayId'
          description: The ID of the resource to get.
      required:
      - Id
    GetWirelessGatewayCertificateResponse:
      type: object
      properties:
        IotCertificateId:
          allOf:
          - $ref: '#/components/schemas/IotCertificateId'
          description: The ID of the certificate associated with the wireless gateway.
        LoRaWANNetworkServerCertificateId:
          allOf:
          - $ref: '#/components/schemas/IotCertificateId'
          description: The ID of the certificate that is associated with the wireless
            gateway and used for the LoRaWANNetworkServer endpoint.
    GetWirelessGatewayFirmwareInformationRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayId'
          description: The ID of the resource to get.
      required:
      - Id
    GetWirelessGatewayFirmwareInformationResponse:
      type: object
      properties:
        LoRaWAN:
          allOf:
          - $ref: '#/components/schemas/LoRaWANGatewayCurrentVersion'
          description: Information about the wireless gateway's firmware.
    GetWirelessGatewayRequest:
      type: object
      properties:
        Identifier:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The identifier of the wireless gateway to get.
        IdentifierType:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayIdType'
          description: The type of identifier used in `identifier`.
      required:
      - Identifier
      - IdentifierType
    GetWirelessGatewayResponse:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayName'
          description: The name of the resource.
        Id:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayId'
          description: The ID of the wireless gateway.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the resource.
        LoRaWAN:
          allOf:
          - $ref: '#/components/schemas/LoRaWANGateway'
          description: Information about the wireless gateway.
        Arn:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayArn'
          description: The Amazon Resource Name of the resource.
        ThingName:
          allOf:
          - $ref: '#/components/schemas/ThingName'
          description: The name of the thing associated with the wireless gateway.
            The value is empty if a thing isn't associated with the gateway.
        ThingArn:
          allOf:
          - $ref: '#/components/schemas/ThingArn'
          description: The ARN of the thing associated with the wireless gateway.
    GetWirelessGatewayStatisticsRequest:
      type: object
      properties:
        WirelessGatewayId:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayId'
          description: The ID of the wireless gateway for which to get the data.
      required:
      - WirelessGatewayId
    GetWirelessGatewayStatisticsResponse:
      type: object
      properties:
        WirelessGatewayId:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayId'
          description: The ID of the wireless gateway.
        LastUplinkReceivedAt:
          allOf:
          - $ref: '#/components/schemas/ISODateTimeString'
          description: 'The date and time when the most recent uplink was received.


            This value is only valid for 3 months.'
        ConnectionStatus:
          allOf:
          - $ref: '#/components/schemas/ConnectionStatus'
          description: The connection status of the wireless gateway.
    GetWirelessGatewayTaskDefinitionRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayTaskDefinitionId'
          description: The ID of the resource to get.
      required:
      - Id
    GetWirelessGatewayTaskDefinitionResponse:
      type: object
      properties:
        AutoCreateTasks:
          allOf:
          - $ref: '#/components/schemas/AutoCreateTasks'
          description: Whether to automatically create tasks using this task definition
            for all gateways with the specified current version. If `false`, the task
            must me created by calling `CreateWirelessGatewayTask`.
        Name:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayTaskName'
          description: The name of the resource.
        Update:
          allOf:
          - $ref: '#/components/schemas/UpdateWirelessGatewayTaskCreate'
          description: Information about the gateways to update.
        Arn:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayTaskDefinitionArn'
          description: The Amazon Resource Name of the resource.
    GetWirelessGatewayTaskRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayId'
          description: The ID of the resource to get.
      required:
      - Id
    GetWirelessGatewayTaskResponse:
      type: object
      properties:
        WirelessGatewayId:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayId'
          description: The ID of the wireless gateway.
        WirelessGatewayTaskDefinitionId:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayTaskDefinitionId'
          description: The ID of the WirelessGatewayTask.
        LastUplinkReceivedAt:
          allOf:
          - $ref: '#/components/schemas/ISODateTimeString'
          description: 'The date and time when the most recent uplink was received.


            This value is only valid for 3 months.'
        TaskCreatedAt:
          allOf:
          - $ref: '#/components/schemas/ISODateTimeString'
          description: The date and time when the task was created.
        Status:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayTaskStatus'
          description: The status of the request.
    GlobalIdentity:
      type: object
      properties:
        Lac:
          allOf:
          - $ref: '#/components/schemas/LAC'
          description: Location area code of the global identity.
        GeranCid:
          allOf:
          - $ref: '#/components/schemas/GeranCid'
          description: GERAN (GSM EDGE Radio Access Network) cell global identifier.
      required:
      - Lac
      - GeranCid
      description: Global identity information.
    Gnss:
      type: object
      properties:
        Payload:
          allOf:
          - $ref: '#/components/schemas/GnssNav'
          description: Payload that contains the GNSS scan result, or NAV message,
            in hexadecimal notation.
        CaptureTime:
          allOf:
          - $ref: '#/components/schemas/GPST'
          description: Optional parameter that gives an estimate of the time when
            the GNSS scan information is taken, in seconds GPS time (GPST). If capture
            time is not specified, the local server time is used.
        CaptureTimeAccuracy:
          allOf:
          - $ref: '#/components/schemas/CaptureTimeAccuracy'
          description: Optional value that gives the capture time estimate accuracy,
            in seconds. If capture time accuracy is not specified, default value of
            300 is used.
        AssistPosition:
          allOf:
          - $ref: '#/components/schemas/AssistPosition'
          description: Optional assistance position information, specified using latitude
            and longitude values in degrees. The coordinates are inside the WGS84
            reference frame.
        AssistAltitude:
          allOf:
          - $ref: '#/components/schemas/Coordinate'
          description: Optional assistance altitude, which is the altitude of the
            device at capture time, specified in meters above the WGS84 reference
            ellipsoid.
        Use2DSolver:
          allOf:
          - $ref: '#/components/schemas/Use2DSolver'
          description: Optional parameter that forces 2D solve, which modifies the
            positioning algorithm to a 2D solution problem. When this parameter is
            specified, the assistance altitude should have an accuracy of at least
            10 meters.
      required:
      - Payload
      description: Global navigation satellite system (GNSS) object used for positioning.
    GnssNav:
      type: string
      minLength: 0
      maxLength: 2048
    GsmList:
      type: array
      items:
        $ref: '#/components/schemas/GsmObj'
    GsmLocalId:
      type: object
      properties:
        Bsic:
          allOf:
          - $ref: '#/components/schemas/BSIC'
          description: GSM base station identity code (BSIC).
        Bcch:
          allOf:
          - $ref: '#/components/schemas/BCCH'
          description: GSM broadcast control channel.
      required:
      - Bsic
      - Bcch
      description: GSM local ID information, which corresponds to the local identification
        parameters of a GSM cell.
    GsmNmrList:
      type: array
      items:
        $ref: '#/components/schemas/GsmNmrObj'
    GsmNmrObj:
      type: object
      properties:
        Bsic:
          allOf:
          - $ref: '#/components/schemas/BSIC'
          description: GSM base station identity code (BSIC).
        Bcch:
          allOf:
          - $ref: '#/components/schemas/BCCH'
          description: GSM broadcast control channel.
        RxLevel:
          allOf:
          - $ref: '#/components/schemas/RxLevel'
          description: Rx level, which is the received signal power, measured in dBm
            (decibel-milliwatts).
        GlobalIdentity:
          allOf:
          - $ref: '#/components/schemas/GlobalIdentity'
          description: Global identity information of the GSM object.
      required:
      - Bsic
      - Bcch
      description: GSM object for network measurement reports.
    GsmObj:
      type: object
      properties:
        Mcc:
          allOf:
          - $ref: '#/components/schemas/MCC'
          description: Mobile Country Code.
        Mnc:
          allOf:
          - $ref: '#/components/schemas/MNC'
          description: Mobile Network Code.
        Lac:
          allOf:
          - $ref: '#/components/schemas/LAC'
          description: Location area code.
        GeranCid:
          allOf:
          - $ref: '#/components/schemas/GeranCid'
          description: GERAN (GSM EDGE Radio Access Network) Cell Global Identifier.
        GsmLocalId:
          allOf:
          - $ref: '#/components/schemas/GsmLocalId'
          description: GSM local identification (local ID) information.
        GsmTimingAdvance:
          allOf:
          - $ref: '#/components/schemas/GsmTimingAdvance'
          description: Timing advance value, which corresponds to the length of time
            a signal takes to reach the base station from a mobile phone.
        RxLevel:
          allOf:
          - $ref: '#/components/schemas/RxLevel'
          description: Rx level, which is the received signal power, measured in dBm
            (decibel-milliwatts).
        GsmNmr:
          allOf:
          - $ref: '#/components/schemas/GsmNmrList'
          description: GSM object for network measurement reports.
      required:
      - Mcc
      - Mnc
      - Lac
      - GeranCid
      description: GSM object.
    GsmTimingAdvance:
      type: integer
      minimum: 0
      maximum: 63
    HorizontalAccuracy:
      type: number
      format: float
      minimum: 0
    HrAllowed:
      type: boolean
      default: false
    IPAddress:
      type: string
    ISODateTimeString:
      type: string
      pattern: ^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$
    Id:
      type: string
      minLength: 0
      maxLength: 256
    Identifier:
      type: string
      minLength: 0
      maxLength: 256
    IdentifierType:
      type: string
      enum:
      - PartnerAccountId
      - DevEui
      - FuotaTaskId
      - GatewayEui
      - WirelessDeviceId
      - WirelessGatewayId
    ImportTaskArn:
      type: string
      minLength: 0
      maxLength: 128
    ImportTaskId:
      type: string
      minLength: 0
      maxLength: 256
    ImportTaskStatus:
      type: string
      enum:
      - INITIALIZING
      - INITIALIZED
      - PENDING
      - COMPLETE
      - FAILED
      - DELETING
    ImportedSidewalkDevice:
      type: object
      properties:
        SidewalkManufacturingSn:
          allOf:
          - $ref: '#/components/schemas/SidewalkManufacturingSn'
          description: The Sidewalk manufacturing serial number (SMSN) of the Sidewalk
            device.
        OnboardingStatus:
          allOf:
          - $ref: '#/components/schemas/OnboardStatus'
          description: The onboarding status of the Sidewalk device in the import
            task.
        OnboardingStatusReason:
          allOf:
          - $ref: '#/components/schemas/OnboardStatusReason'
          description: The reason for the onboarding status information for the Sidewalk
            device.
        LastUpdateTime:
          allOf:
          - $ref: '#/components/schemas/LastUpdateTime'
          description: The time at which the status information was last updated.
      description: Information about a Sidewalk device that has been added to an import
        task.
    ImportedWirelessDevice:
      type: object
      properties:
        Sidewalk:
          allOf:
          - $ref: '#/components/schemas/ImportedSidewalkDevice'
          description: The Sidewalk-related information about a device that has been
            added to an import task.
      description: Information about a wireless device that has been added to an import
        task.
    ImportedWirelessDeviceCount:
      type: integer
      format: int64
    ImportedWirelessDeviceList:
      type: array
      items:
        $ref: '#/components/schemas/ImportedWirelessDevice'
    Integer:
      type: integer
    InternalServerException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
      description: An unexpected error occurred while processing a request.
    IotCertificateId:
      type: string
      minLength: 1
      maxLength: 4096
    Ip:
      type: object
      properties:
        IpAddress:
          allOf:
          - $ref: '#/components/schemas/IPAddress'
          description: IP address information.
      required:
      - IpAddress
      description: IP address used for resolving device location.
    JoinEui:
      type: string
      pattern: ^[a-fA-F0-9]{16}$
    JoinEuiFilters:
      type: array
      items:
        $ref: '#/components/schemas/JoinEuiRange'
      description: <p>A list of JoinEuiRange used by LoRa gateways to filter LoRa
        frames.</p>
    JoinEuiRange:
      type: array
      items:
        $ref: '#/components/schemas/JoinEui'
      description: "<p>A pair of join EUI describing a range [BegEui, EndEui], both\
        \ ends are\n            inclusive.</p>"
    JoinEventConfiguration:
      type: object
      properties:
        LoRaWAN:
          allOf:
          - $ref: '#/components/schemas/LoRaWANJoinEventNotificationConfigurations'
          description: Join event configuration object for enabling or disabling LoRaWAN
            related event topics.
        WirelessDeviceIdEventTopic:
          allOf:
          - $ref: '#/components/schemas/EventNotificationTopicStatus'
          description: Denotes whether the wireless device ID join event topic is
            enabled or disabled.
      description: Join event configuration object for enabling or disabling topic.
    JoinResourceTypeEventConfiguration:
      type: object
      properties:
        LoRaWAN:
          allOf:
          - $ref: '#/components/schemas/LoRaWANJoinResourceTypeEventConfiguration'
          description: Join resource type event configuration object for enabling
            or disabling LoRaWAN related event topics.
      description: Join resource type event configuration object for enabling or disabling
        topic.
    LAC:
      type: integer
      minimum: 1
      maximum: 65535
    LastUpdateTime:
      type: string
      format: date-time
    ListDestinationsRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in this operation.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: To retrieve the next set of results, the `nextToken` value
            from a previous response; otherwise **null** to receive the first set
            of results.
    ListDestinationsResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to use to get the next set of results, or **null**
            if there are no additional results.
        DestinationList:
          allOf:
          - $ref: '#/components/schemas/DestinationList'
          description: The list of destinations.
    ListDeviceProfilesRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: To retrieve the next set of results, the `nextToken` value
            from a previous response; otherwise **null** to receive the first set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in this operation.
        DeviceProfileType:
          allOf:
          - $ref: '#/components/schemas/DeviceProfileType'
          description: A filter to list only device profiles that use this type, which
            can be `LoRaWAN` or `Sidewalk`.
    ListDeviceProfilesResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to use to get the next set of results, or **null**
            if there are no additional results.
        DeviceProfileList:
          allOf:
          - $ref: '#/components/schemas/DeviceProfileList'
          description: The list of device profiles.
    ListDevicesForWirelessDeviceImportTaskRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ImportTaskId'
          description: The identifier of the import task for which wireless devices
            are listed.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: To retrieve the next set of results, the `nextToken` value
            from a previous response; otherwise `null` to receive the first set of
            results.
        Status:
          allOf:
          - $ref: '#/components/schemas/OnboardStatus'
          description: The status of the devices in the import task.
      required:
      - Id
    ListDevicesForWirelessDeviceImportTaskResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to use to get the next set of results, or `null`
            if there are no additional results.
        DestinationName:
          allOf:
          - $ref: '#/components/schemas/DestinationName'
          description: The name of the Sidewalk destination that describes the IoT
            rule to route messages received from devices in an import task that are
            onboarded to AWS IoT Wireless.
        ImportedWirelessDeviceList:
          allOf:
          - $ref: '#/components/schemas/ImportedWirelessDeviceList'
          description: List of wireless devices in an import task and their onboarding
            status.
    ListEventConfigurationsRequest:
      type: object
      properties:
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/EventNotificationResourceType'
          description: Resource type to filter event configurations.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: To retrieve the next set of results, the `nextToken` value
            from a previous response; otherwise **null** to receive the first set
            of results.
      required:
      - ResourceType
    ListEventConfigurationsResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: To retrieve the next set of results, the `nextToken` value
            from a previous response; otherwise **null** to receive the first set
            of results.
        EventConfigurationsList:
          allOf:
          - $ref: '#/components/schemas/EventConfigurationsList'
          description: Event configurations of all events for a single resource.
    ListFuotaTasksRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: To retrieve the next set of results, the `nextToken` value
            from a previous response; otherwise **null** to receive the first set
            of results.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
    ListFuotaTasksResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: To retrieve the next set of results, the `nextToken` value
            from a previous response; otherwise **null** to receive the first set
            of results.
        FuotaTaskList:
          $ref: '#/components/schemas/FuotaTaskList'
    ListMulticastGroupsByFuotaTaskRequest:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/FuotaTaskId'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: To retrieve the next set of results, the `nextToken` value
            from a previous response; otherwise **null** to receive the first set
            of results.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
      required:
      - Id
    ListMulticastGroupsByFuotaTaskResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: To retrieve the next set of results, the `nextToken` value
            from a previous response; otherwise **null** to receive the first set
            of results.
        MulticastGroupList:
          $ref: '#/components/schemas/MulticastGroupListByFuotaTask'
    ListMulticastGroupsRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: To retrieve the next set of results, the `nextToken` value
            from a previous response; otherwise **null** to receive the first set
            of results.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
    ListMulticastGroupsResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: To retrieve the next set of results, the `nextToken` value
            from a previous response; otherwise **null** to receive the first set
            of results.
        MulticastGroupList:
          $ref: '#/components/schemas/MulticastGroupList'
    ListNetworkAnalyzerConfigurationsRequest:
      type: object
      properties:
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: To retrieve the next set of results, the `nextToken` value
            from a previous response; otherwise **null** to receive the first set
            of results.
    ListNetworkAnalyzerConfigurationsResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to use to get the next set of results, or **null**
            if there are no additional results.
        NetworkAnalyzerConfigurationList:
          allOf:
          - $ref: '#/components/schemas/NetworkAnalyzerConfigurationList'
          description: The list of network analyzer configurations.
    ListPartnerAccountsRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: To retrieve the next set of results, the `nextToken` value
            from a previous response; otherwise **null** to receive the first set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in this operation.
    ListPartnerAccountsResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to use to get the next set of results, or **null**
            if there are no additional results.
        Sidewalk:
          allOf:
          - $ref: '#/components/schemas/SidewalkAccountList'
          description: The Sidewalk account credentials.
    ListPositionConfigurationsRequest:
      type: object
      properties:
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/PositionResourceType'
          description: Resource type for which position configurations are listed.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: To retrieve the next set of results, the `nextToken` value
            from a previous response; otherwise **null** to receive the first set
            of results.
    ListPositionConfigurationsResponse:
      type: object
      properties:
        PositionConfigurationList:
          allOf:
          - $ref: '#/components/schemas/PositionConfigurationList'
          description: A list of position configurations.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to use to get the next set of results, or **null**
            if there are no additional results.
    ListQueuedMessagesRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceId'
          description: The ID of a given wireless device which the downlink message
            packets are being sent.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: To retrieve the next set of results, the `nextToken` value
            from a previous response; otherwise **null** to receive the first set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in this operation.
        WirelessDeviceType:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceType'
          description: The wireless device type, whic can be either Sidewalk or LoRaWAN.
      required:
      - Id
    ListQueuedMessagesResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: To retrieve the next set of results, the `nextToken` value
            from a previous response; otherwise **null** to receive the first set
            of results.
        DownlinkQueueMessagesList:
          allOf:
          - $ref: '#/components/schemas/DownlinkQueueMessagesList'
          description: The messages in the downlink queue.
    ListServiceProfilesRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: To retrieve the next set of results, the `nextToken` value
            from a previous response; otherwise **null** to receive the first set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in this operation.
    ListServiceProfilesResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to use to get the next set of results, or **null**
            if there are no additional results.
        ServiceProfileList:
          allOf:
          - $ref: '#/components/schemas/ServiceProfileList'
          description: The list of service profiles.
    ListTagsForResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          description: The ARN of the resource for which you want to list tags.
      required:
      - ResourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags to attach to the specified resource. Tags are metadata
            that you can use to manage a resource.
    ListWirelessDeviceImportTasksRequest:
      type: object
      properties:
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: To retrieve the next set of results, the `nextToken` value
            from a previous response; otherwise `null` to receive the first set of
            results.
    ListWirelessDeviceImportTasksResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to use to get the next set of results, or `null`
            if there are no additional results.
        WirelessDeviceImportTaskList:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceImportTaskList'
          description: List of import tasks and summary information of onboarding
            status of devices in each import task.
    ListWirelessDevicesRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in this operation.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: To retrieve the next set of results, the `nextToken` value
            from a previous response; otherwise **null** to receive the first set
            of results.
        DestinationName:
          allOf:
          - $ref: '#/components/schemas/DestinationName'
          description: A filter to list only the wireless devices that use this destination.
        DeviceProfileId:
          allOf:
          - $ref: '#/components/schemas/DeviceProfileId'
          description: A filter to list only the wireless devices that use this device
            profile.
        ServiceProfileId:
          allOf:
          - $ref: '#/components/schemas/ServiceProfileId'
          description: A filter to list only the wireless devices that use this service
            profile.
        WirelessDeviceType:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceType'
          description: A filter to list only the wireless devices that use this wireless
            device type.
        FuotaTaskId:
          $ref: '#/components/schemas/FuotaTaskId'
        MulticastGroupId:
          $ref: '#/components/schemas/MulticastGroupId'
    ListWirelessDevicesResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to use to get the next set of results, or **null**
            if there are no additional results.
        WirelessDeviceList:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceStatisticsList'
          description: The ID of the wireless device.
    ListWirelessGatewayTaskDefinitionsRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in this operation.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: To retrieve the next set of results, the `nextToken` value
            from a previous response; otherwise **null** to receive the first set
            of results.
        TaskDefinitionType:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayTaskDefinitionType'
          description: A filter to list only the wireless gateway task definitions
            that use this task definition type.
    ListWirelessGatewayTaskDefinitionsResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to use to get the next set of results, or **null**
            if there are no additional results.
        TaskDefinitions:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayTaskDefinitionList'
          description: The list of task definitions.
    ListWirelessGatewaysRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: To retrieve the next set of results, the `nextToken` value
            from a previous response; otherwise **null** to receive the first set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in this operation.
    ListWirelessGatewaysResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to use to get the next set of results, or **null**
            if there are no additional results.
        WirelessGatewayList:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayStatisticsList'
          description: The ID of the wireless gateway.
    LoRaWANConnectionStatusEventNotificationConfigurations:
      type: object
      properties:
        GatewayEuiEventTopic:
          allOf:
          - $ref: '#/components/schemas/EventNotificationTopicStatus'
          description: Denotes whether the gateway EUI connection status event topic
            is enabled or disabled.
      description: Object for LoRaWAN connection status resource type event configuration.
    LoRaWANConnectionStatusResourceTypeEventConfiguration:
      type: object
      properties:
        WirelessGatewayEventTopic:
          allOf:
          - $ref: '#/components/schemas/EventNotificationTopicStatus'
          description: Denotes whether the wireless gateway connection status event
            topic is enabled or disabled.
      description: Object for LoRaWAN connection status resource type event configuration.
    LoRaWANDevice:
      type: object
      properties:
        DevEui:
          allOf:
          - $ref: '#/components/schemas/DevEui'
          description: The DevEUI value.
        DeviceProfileId:
          allOf:
          - $ref: '#/components/schemas/DeviceProfileId'
          description: The ID of the device profile for the new wireless device.
        ServiceProfileId:
          allOf:
          - $ref: '#/components/schemas/ServiceProfileId'
          description: The ID of the service profile.
        OtaaV1_1:
          allOf:
          - $ref: '#/components/schemas/OtaaV1_1'
          description: OTAA device object for v1.1 for create APIs
        OtaaV1_0_x:
          allOf:
          - $ref: '#/components/schemas/OtaaV1_0_x'
          description: OTAA device object for create APIs for v1.0.x
        AbpV1_1:
          allOf:
          - $ref: '#/components/schemas/AbpV1_1'
          description: ABP device object for create APIs for v1.1
        AbpV1_0_x:
          allOf:
          - $ref: '#/components/schemas/AbpV1_0_x'
          description: LoRaWAN object for create APIs
        FPorts:
          $ref: '#/components/schemas/FPorts'
      description: LoRaWAN object for create functions.
    LoRaWANDeviceMetadata:
      type: object
      properties:
        DevEui:
          allOf:
          - $ref: '#/components/schemas/DevEui'
          description: The DevEUI value.
        FPort:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The FPort value.
        DataRate:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The DataRate value.
        Frequency:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The device's channel frequency in Hz.
        Timestamp:
          allOf:
          - $ref: '#/components/schemas/ISODateTimeString'
          description: The date and time of the metadata.
        Gateways:
          allOf:
          - $ref: '#/components/schemas/LoRaWANGatewayMetadataList'
          description: Information about the gateways accessed by the device.
        PublicGateways:
          allOf:
          - $ref: '#/components/schemas/LoRaWANPublicGatewayMetadataList'
          description: Information about the LoRaWAN public network accessed by the
            device.
      description: LoRaWAN device metatdata.
    LoRaWANDeviceProfile:
      type: object
      properties:
        SupportsClassB:
          allOf:
          - $ref: '#/components/schemas/SupportsClassB'
          description: The SupportsClassB value.
        ClassBTimeout:
          allOf:
          - $ref: '#/components/schemas/ClassBTimeout'
          description: The ClassBTimeout value.
        PingSlotPeriod:
          allOf:
          - $ref: '#/components/schemas/PingSlotPeriod'
          description: The PingSlotPeriod value.
        PingSlotDr:
          allOf:
          - $ref: '#/components/schemas/PingSlotDr'
          description: The PingSlotDR value.
        PingSlotFreq:
          allOf:
          - $ref: '#/components/schemas/PingSlotFreq'
          description: The PingSlotFreq value.
        SupportsClassC:
          allOf:
          - $ref: '#/components/schemas/SupportsClassC'
          description: The SupportsClassC value.
        ClassCTimeout:
          allOf:
          - $ref: '#/components/schemas/ClassCTimeout'
          description: The ClassCTimeout value.
        MacVersion:
          allOf:
          - $ref: '#/components/schemas/MacVersion'
          description: The MAC version (such as OTAA 1.1 or OTAA 1.0.3) to use with
            this device profile.
        RegParamsRevision:
          allOf:
          - $ref: '#/components/schemas/RegParamsRevision'
          description: The version of regional parameters.
        RxDelay1:
          allOf:
          - $ref: '#/components/schemas/RxDelay1'
          description: The RXDelay1 value.
        RxDrOffset1:
          allOf:
          - $ref: '#/components/schemas/RxDrOffset1'
          description: The RXDROffset1 value.
        RxDataRate2:
          allOf:
          - $ref: '#/components/schemas/RxDataRate2'
          description: The RXDataRate2 value.
        RxFreq2:
          allOf:
          - $ref: '#/components/schemas/RxFreq2'
          description: The RXFreq2 value.
        FactoryPresetFreqsList:
          allOf:
          - $ref: '#/components/schemas/FactoryPresetFreqsList'
          description: The list of values that make up the FactoryPresetFreqs value.
        MaxEirp:
          allOf:
          - $ref: '#/components/schemas/MaxEirp'
          description: The MaxEIRP value.
        MaxDutyCycle:
          allOf:
          - $ref: '#/components/schemas/MaxDutyCycle'
          description: The MaxDutyCycle value. It ranges from 0 to 15.
        RfRegion:
          allOf:
          - $ref: '#/components/schemas/RfRegion'
          description: The frequency band (RFRegion) value.
        SupportsJoin:
          allOf:
          - $ref: '#/components/schemas/SupportsJoin'
          description: The SupportsJoin value.
        Supports32BitFCnt:
          allOf:
          - $ref: '#/components/schemas/Supports32BitFCnt'
          description: The Supports32BitFCnt value.
      description: LoRaWANDeviceProfile object.
    LoRaWANFuotaTask:
      type: object
      properties:
        RfRegion:
          $ref: '#/components/schemas/SupportedRfRegion'
      description: The LoRaWAN information used with a FUOTA task.
    LoRaWANFuotaTaskGetInfo:
      type: object
      properties:
        RfRegion:
          $ref: '#/components/schemas/RfRegion'
        StartTime:
          $ref: '#/components/schemas/StartTime'
      description: The LoRaWAN information returned from getting a FUOTA task.
    LoRaWANGateway:
      type: object
      properties:
        GatewayEui:
          allOf:
          - $ref: '#/components/schemas/GatewayEui'
          description: The gateway's EUI value.
        RfRegion:
          allOf:
          - $ref: '#/components/schemas/RfRegion'
          description: The frequency band (RFRegion) value.
        JoinEuiFilters:
          $ref: '#/components/schemas/JoinEuiFilters'
        NetIdFilters:
          $ref: '#/components/schemas/NetIdFilters'
        SubBands:
          $ref: '#/components/schemas/SubBands'
        Beaconing:
          allOf:
          - $ref: '#/components/schemas/Beaconing'
          description: Beaconing object information, which consists of the data rate
            and frequency parameters.
        MaxEirp:
          allOf:
          - $ref: '#/components/schemas/GatewayMaxEirp'
          description: The MaxEIRP value.
      description: LoRaWANGateway object.
    LoRaWANGatewayCurrentVersion:
      type: object
      properties:
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/LoRaWANGatewayVersion'
          description: The version of the gateways that should receive the update.
      description: LoRaWANGatewayCurrentVersion object.
    LoRaWANGatewayMetadata:
      type: object
      properties:
        GatewayEui:
          allOf:
          - $ref: '#/components/schemas/GatewayEui'
          description: The gateway's EUI value.
        Snr:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The SNR value.
        Rssi:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The RSSI value.
      description: LoRaWAN gateway metatdata.
    LoRaWANGatewayMetadataList:
      type: array
      items:
        $ref: '#/components/schemas/LoRaWANGatewayMetadata'
    LoRaWANGatewayVersion:
      type: object
      properties:
        PackageVersion:
          allOf:
          - $ref: '#/components/schemas/PackageVersion'
          description: The version of the wireless gateway firmware.
        Model:
          allOf:
          - $ref: '#/components/schemas/Model'
          description: The model number of the wireless gateway.
        Station:
          allOf:
          - $ref: '#/components/schemas/Station'
          description: The basic station version of the wireless gateway.
      description: LoRaWANGatewayVersion object.
    LoRaWANGetServiceProfileInfo:
      type: object
      properties:
        UlRate:
          allOf:
          - $ref: '#/components/schemas/UlRate'
          description: The ULRate value.
        UlBucketSize:
          allOf:
          - $ref: '#/components/schemas/UlBucketSize'
          description: The ULBucketSize value.
        UlRatePolicy:
          allOf:
          - $ref: '#/components/schemas/UlRatePolicy'
          description: The ULRatePolicy value.
        DlRate:
          allOf:
          - $ref: '#/components/schemas/DlRate'
          description: The DLRate value.
        DlBucketSize:
          allOf:
          - $ref: '#/components/schemas/DlBucketSize'
          description: The DLBucketSize value.
        DlRatePolicy:
          allOf:
          - $ref: '#/components/schemas/DlRatePolicy'
          description: The DLRatePolicy value.
        AddGwMetadata:
          allOf:
          - $ref: '#/components/schemas/AddGwMetadata'
          description: The AddGWMetaData value.
        DevStatusReqFreq:
          allOf:
          - $ref: '#/components/schemas/DevStatusReqFreq'
          description: The DevStatusReqFreq value.
        ReportDevStatusBattery:
          allOf:
          - $ref: '#/components/schemas/ReportDevStatusBattery'
          description: The ReportDevStatusBattery value.
        ReportDevStatusMargin:
          allOf:
          - $ref: '#/components/schemas/ReportDevStatusMargin'
          description: The ReportDevStatusMargin value.
        DrMin:
          allOf:
          - $ref: '#/components/schemas/DrMin'
          description: The DRMin value.
        DrMax:
          allOf:
          - $ref: '#/components/schemas/DrMax'
          description: The DRMax value.
        ChannelMask:
          allOf:
          - $ref: '#/components/schemas/ChannelMask'
          description: The ChannelMask value.
        PrAllowed:
          allOf:
          - $ref: '#/components/schemas/PrAllowed'
          description: The PRAllowed value that describes whether passive roaming
            is allowed.
        HrAllowed:
          allOf:
          - $ref: '#/components/schemas/HrAllowed'
          description: The HRAllowed value that describes whether handover roaming
            is allowed.
        RaAllowed:
          allOf:
          - $ref: '#/components/schemas/RaAllowed'
          description: The RAAllowed value that describes whether roaming activation
            is allowed.
        NwkGeoLoc:
          allOf:
          - $ref: '#/components/schemas/NwkGeoLoc'
          description: The NwkGeoLoc value.
        TargetPer:
          allOf:
          - $ref: '#/components/schemas/TargetPer'
          description: The TargetPER value.
        MinGwDiversity:
          allOf:
          - $ref: '#/components/schemas/MinGwDiversity'
          description: The MinGwDiversity value.
      description: LoRaWANGetServiceProfileInfo object.
    LoRaWANJoinEventNotificationConfigurations:
      type: object
      properties:
        DevEuiEventTopic:
          allOf:
          - $ref: '#/components/schemas/EventNotificationTopicStatus'
          description: Denotes whether the Dev EUI join event topic is enabled or
            disabled.
      description: Object for LoRaWAN join resource type event configuration.
    LoRaWANJoinResourceTypeEventConfiguration:
      type: object
      properties:
        WirelessDeviceEventTopic:
          allOf:
          - $ref: '#/components/schemas/EventNotificationTopicStatus'
          description: Denotes whether the wireless device join event topic is enabled
            or disabled.
      description: Object for LoRaWAN join resource type event configuration.
    LoRaWANListDevice:
      type: object
      properties:
        DevEui:
          allOf:
          - $ref: '#/components/schemas/DevEui'
          description: The DevEUI value.
      description: LoRaWAN object for list functions.
    LoRaWANMulticast:
      type: object
      properties:
        RfRegion:
          $ref: '#/components/schemas/SupportedRfRegion'
        DlClass:
          $ref: '#/components/schemas/DlClass'
        ParticipatingGateways:
          $ref: '#/components/schemas/ParticipatingGatewaysMulticast'
      description: The LoRaWAN information that is to be used with the multicast group.
    LoRaWANMulticastGet:
      type: object
      properties:
        RfRegion:
          $ref: '#/components/schemas/SupportedRfRegion'
        DlClass:
          $ref: '#/components/schemas/DlClass'
        NumberOfDevicesRequested:
          $ref: '#/components/schemas/NumberOfDevicesRequested'
        NumberOfDevicesInGroup:
          $ref: '#/components/schemas/NumberOfDevicesInGroup'
        ParticipatingGateways:
          $ref: '#/components/schemas/ParticipatingGatewaysMulticast'
      description: The LoRaWAN information that is to be returned from getting multicast
        group information.
    LoRaWANMulticastMetadata:
      type: object
      properties:
        FPort:
          $ref: '#/components/schemas/FPort'
      description: The metadata information of the LoRaWAN multicast group.
    LoRaWANMulticastSession:
      type: object
      properties:
        DlDr:
          $ref: '#/components/schemas/DlDr'
        DlFreq:
          $ref: '#/components/schemas/DlFreq'
        SessionStartTime:
          $ref: '#/components/schemas/SessionStartTimeTimestamp'
        SessionTimeout:
          $ref: '#/components/schemas/SessionTimeout'
        PingSlotPeriod:
          allOf:
          - $ref: '#/components/schemas/PingSlotPeriod'
          description: The PingSlotPeriod value.
      description: The LoRaWAN information used with the multicast session.
    LoRaWANPublicGatewayMetadata:
      type: object
      properties:
        ProviderNetId:
          allOf:
          - $ref: '#/components/schemas/ProviderNetId'
          description: The ID of the LoRaWAN public network provider.
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The ID of the gateways that are operated by the network provider.
        Rssi:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The RSSI (received signal strength indicator) value.
        Snr:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The SNR (signal to noise ratio) value.
        RfRegion:
          $ref: '#/components/schemas/RfRegion'
        DlAllowed:
          allOf:
          - $ref: '#/components/schemas/DlAllowed'
          description: Boolean that indicates whether downlink is allowed using the
            network.
      description: LoRaWAN public gateway metadata.
    LoRaWANPublicGatewayMetadataList:
      type: array
      items:
        $ref: '#/components/schemas/LoRaWANPublicGatewayMetadata'
    LoRaWANSendDataToDevice:
      type: object
      properties:
        FPort:
          $ref: '#/components/schemas/FPort'
        ParticipatingGateways:
          allOf:
          - $ref: '#/components/schemas/ParticipatingGateways'
          description: Choose the gateways that you want to use for the downlink data
            traffic when the wireless device is running in class B or class C mode.
      description: LoRaWAN router info.
    LoRaWANServiceProfile:
      type: object
      properties:
        AddGwMetadata:
          allOf:
          - $ref: '#/components/schemas/AddGwMetadata'
          description: The AddGWMetaData value.
        DrMin:
          allOf:
          - $ref: '#/components/schemas/DrMinBox'
          description: The DrMin value.
        DrMax:
          allOf:
          - $ref: '#/components/schemas/DrMaxBox'
          description: The DrMax value.
        PrAllowed:
          allOf:
          - $ref: '#/components/schemas/PrAllowed'
          description: The PRAllowed value that describes whether passive roaming
            is allowed.
        RaAllowed:
          allOf:
          - $ref: '#/components/schemas/RaAllowed'
          description: The RAAllowed value that describes whether roaming activation
            is allowed.
      description: LoRaWANServiceProfile object.
    LoRaWANStartFuotaTask:
      type: object
      properties:
        StartTime:
          $ref: '#/components/schemas/StartTime'
      description: The LoRaWAN information used to start a FUOTA task.
    LoRaWANUpdateDevice:
      type: object
      properties:
        DeviceProfileId:
          allOf:
          - $ref: '#/components/schemas/DeviceProfileId'
          description: The ID of the device profile for the wireless device.
        ServiceProfileId:
          allOf:
          - $ref: '#/components/schemas/ServiceProfileId'
          description: The ID of the service profile.
        AbpV1_1:
          allOf:
          - $ref: '#/components/schemas/UpdateAbpV1_1'
          description: ABP device object for update APIs for v1.1
        AbpV1_0_x:
          allOf:
          - $ref: '#/components/schemas/UpdateAbpV1_0_x'
          description: ABP device object for update APIs for v1.0.x
        FPorts:
          allOf:
          - $ref: '#/components/schemas/UpdateFPorts'
          description: FPorts object for the positioning information of the device.
      description: LoRaWAN object for update functions.
    LoRaWANUpdateGatewayTaskCreate:
      type: object
      properties:
        UpdateSignature:
          allOf:
          - $ref: '#/components/schemas/UpdateSignature'
          description: The signature used to verify the update firmware.
        SigKeyCrc:
          allOf:
          - $ref: '#/components/schemas/Crc'
          description: The CRC of the signature private key to check.
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/LoRaWANGatewayVersion'
          description: The version of the gateways that should receive the update.
        UpdateVersion:
          allOf:
          - $ref: '#/components/schemas/LoRaWANGatewayVersion'
          description: The firmware version to update the gateway to.
      description: LoRaWANUpdateGatewayTaskCreate object.
    LoRaWANUpdateGatewayTaskEntry:
      type: object
      properties:
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/LoRaWANGatewayVersion'
          description: The version of the gateways that should receive the update.
        UpdateVersion:
          allOf:
          - $ref: '#/components/schemas/LoRaWANGatewayVersion'
          description: The firmware version to update the gateway to.
      description: LoRaWANUpdateGatewayTaskEntry object.
    LogLevel:
      type: string
      enum:
      - INFO
      - ERROR
      - DISABLED
      description: "<p>The log level for a log message. The log levels can be disabled,\
        \ or set to\n                <code>ERROR</code> to display less verbose logs\
        \ containing only error information,\n            or to <code>INFO</code>\
        \ for more detailed logs.</p>"
    LteList:
      type: array
      items:
        $ref: '#/components/schemas/LteObj'
    LteLocalId:
      type: object
      properties:
        Pci:
          allOf:
          - $ref: '#/components/schemas/PCI'
          description: Physical cell ID.
        Earfcn:
          allOf:
          - $ref: '#/components/schemas/EARFCN'
          description: Evolved universal terrestrial radio access (E-UTRA) absolute
            radio frequency channel number (FCN).
      required:
      - Pci
      - Earfcn
      description: LTE local identification (local ID) information.
    LteNmrList:
      type: array
      items:
        $ref: '#/components/schemas/LteNmrObj'
    LteNmrObj:
      type: object
      properties:
        Pci:
          allOf:
          - $ref: '#/components/schemas/PCI'
          description: Physical cell ID.
        Earfcn:
          allOf:
          - $ref: '#/components/schemas/EARFCN'
          description: E-UTRA (Evolved universal terrestrial Radio Access) absolute
            radio frequency channel Number (EARFCN).
        EutranCid:
          allOf:
          - $ref: '#/components/schemas/EutranCid'
          description: E-UTRAN (Evolved Universal Terrestrial Radio Access Network)
            cell global identifier (EUTRANCID).
        Rsrp:
          allOf:
          - $ref: '#/components/schemas/RSRP'
          description: Signal power of the reference signal received, measured in
            dBm (decibel-milliwatts).
        Rsrq:
          allOf:
          - $ref: '#/components/schemas/RSRQ'
          description: Signal quality of the reference Signal received, measured in
            decibels (dB).
      required:
      - Pci
      - Earfcn
      description: LTE object for network measurement reports.
    LteObj:
      type: object
      properties:
        Mcc:
          allOf:
          - $ref: '#/components/schemas/MCC'
          description: Mobile Country Code.
        Mnc:
          allOf:
          - $ref: '#/components/schemas/MNC'
          description: Mobile Network Code.
        EutranCid:
          allOf:
          - $ref: '#/components/schemas/EutranCid'
          description: E-UTRAN (Evolved Universal Terrestrial Radio Access Network)
            Cell Global Identifier.
        Tac:
          allOf:
          - $ref: '#/components/schemas/TAC'
          description: LTE tracking area code.
        LteLocalId:
          allOf:
          - $ref: '#/components/schemas/LteLocalId'
          description: LTE local identification (local ID) information.
        LteTimingAdvance:
          allOf:
          - $ref: '#/components/schemas/LteTimingAdvance'
          description: LTE timing advance.
        Rsrp:
          allOf:
          - $ref: '#/components/schemas/RSRP'
          description: Signal power of the reference signal received, measured in
            dBm (decibel-milliwatts).
        Rsrq:
          allOf:
          - $ref: '#/components/schemas/RSRQ'
          description: Signal quality of the reference Signal received, measured in
            decibels (dB).
        NrCapable:
          allOf:
          - $ref: '#/components/schemas/NRCapable'
          description: Parameter that determines whether the LTE object is capable
            of supporting NR (new radio).
        LteNmr:
          allOf:
          - $ref: '#/components/schemas/LteNmrList'
          description: LTE object for network measurement reports.
      required:
      - Mcc
      - Mnc
      - EutranCid
      description: LTE object.
    LteTimingAdvance:
      type: integer
      minimum: 0
      maximum: 1282
    MCC:
      type: integer
      minimum: 200
      maximum: 999
    MNC:
      type: integer
      minimum: 0
      maximum: 999
    MacAddress:
      type: string
      pattern: ^([0-9A-Fa-f]{2}[:-]?){5}([0-9A-Fa-f]{2})$
      minLength: 12
      maxLength: 17
    MacVersion:
      type: string
      minLength: 0
      maxLength: 64
    Max:
      type: number
      format: double
    MaxAllowedSignature:
      type: integer
    MaxDutyCycle:
      type: integer
      minimum: 0
      maximum: 100
    MaxEirp:
      type: integer
      minimum: 0
      maximum: 15
    MaxResults:
      type: integer
      default: 0
      minimum: 0
      maximum: 250
      description: <p>The maximum number of results to return in this operation.</p>
    McGroupId:
      type: integer
      minimum: 1
      maximum: 256
      description: <p>Id of the multicast group.</p>
    Message:
      type: string
      minLength: 0
      maxLength: 2048
    MessageDeliveryStatusEventConfiguration:
      type: object
      properties:
        Sidewalk:
          $ref: '#/components/schemas/SidewalkEventNotificationConfigurations'
        WirelessDeviceIdEventTopic:
          allOf:
          - $ref: '#/components/schemas/EventNotificationTopicStatus'
          description: Denotes whether the wireless device ID message delivery status
            event topic is enabled or disabled.
      description: Message delivery status event configuration object for enabling
        and disabling relevant topics.
    MessageDeliveryStatusResourceTypeEventConfiguration:
      type: object
      properties:
        Sidewalk:
          $ref: '#/components/schemas/SidewalkResourceTypeEventConfiguration'
      description: Message delivery status resource type event configuration object
        for enabling or disabling relevant topic.
    MessageId:
      type: string
    MessageType:
      type: string
      enum:
      - CUSTOM_COMMAND_ID_NOTIFY
      - CUSTOM_COMMAND_ID_GET
      - CUSTOM_COMMAND_ID_SET
      - CUSTOM_COMMAND_ID_RESP
      description: "<p>Sidewalk device message type. Default value is\n          \
        \  <code>CUSTOM_COMMAND_ID_NOTIFY</code>.</p>"
    MetricName:
      type: string
      enum:
      - DeviceRSSI
      - DeviceSNR
      - DeviceRoamingRSSI
      - DeviceRoamingSNR
      - DeviceUplinkCount
      - DeviceDownlinkCount
      - DeviceUplinkLostCount
      - DeviceUplinkLostRate
      - DeviceJoinRequestCount
      - DeviceJoinAcceptCount
      - DeviceRoamingUplinkCount
      - DeviceRoamingDownlinkCount
      - GatewayUpTime
      - GatewayDownTime
      - GatewayRSSI
      - GatewaySNR
      - GatewayUplinkCount
      - GatewayDownlinkCount
      - GatewayJoinRequestCount
      - GatewayJoinAcceptCount
      - AwsAccountUplinkCount
      - AwsAccountDownlinkCount
      - AwsAccountUplinkLostCount
      - AwsAccountUplinkLostRate
      - AwsAccountJoinRequestCount
      - AwsAccountJoinAcceptCount
      - AwsAccountRoamingUplinkCount
      - AwsAccountRoamingDownlinkCount
      - AwsAccountDeviceCount
      - AwsAccountGatewayCount
      - AwsAccountActiveDeviceCount
      - AwsAccountActiveGatewayCount
    MetricQueryEndTimestamp:
      type: string
      format: date-time
    MetricQueryError:
      type: string
      minLength: 0
      maxLength: 256
    MetricQueryId:
      type: string
      minLength: 0
      maxLength: 256
    MetricQueryStartTimestamp:
      type: string
      format: date-time
    MetricQueryStatus:
      type: string
      enum:
      - Succeeded
      - Failed
    MetricQueryTimestamp:
      type: string
      format: date-time
    MetricQueryTimestamps:
      type: array
      items:
        $ref: '#/components/schemas/MetricQueryTimestamp'
    MetricQueryValue:
      type: object
      properties:
        Min:
          allOf:
          - $ref: '#/components/schemas/Min'
          description: The minimum of the values of all data points collected during
            the aggregation period.
        Max:
          allOf:
          - $ref: '#/components/schemas/Max'
          description: The maximum of the values of all the data points collected
            during the aggregation period.
        Sum:
          allOf:
          - $ref: '#/components/schemas/Sum'
          description: The sum of the values of all data points collected during the
            aggregation period.
        Avg:
          allOf:
          - $ref: '#/components/schemas/Avg'
          description: The average of the values of all data points collected during
            the aggregation period.
        Std:
          allOf:
          - $ref: '#/components/schemas/Std'
          description: The standard deviation of the values of all data points collected
            during the aggregation period.
        P90:
          allOf:
          - $ref: '#/components/schemas/P90'
          description: The 90th percentile of the values of all data points collected
            during the aggregation period.
      description: The aggregated values of the metric.
    MetricQueryValues:
      type: array
      items:
        $ref: '#/components/schemas/MetricQueryValue'
    MetricUnit:
      type: string
      minLength: 0
      maxLength: 256
    Min:
      type: number
      format: double
    MinGwDiversity:
      type: integer
      minimum: 1
      maximum: 100
    Model:
      type: string
      minLength: 1
      maxLength: 4096
    MulticastDeviceStatus:
      type: string
      minLength: 0
      maxLength: 256
    MulticastFrameInfo:
      type: string
      enum:
      - ENABLED
      - DISABLED
      description: "<p>\n            <code>FrameInfo</code> of your multicast group\
        \ resources for the trace content. Use\n            FrameInfo to debug the\
        \ multicast communication between your multicast groups and the\n        \
        \    network server.</p>"
    MulticastGroup:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/MulticastGroupId'
        Arn:
          $ref: '#/components/schemas/MulticastGroupArn'
        Name:
          $ref: '#/components/schemas/MulticastGroupName'
      description: A multicast group.
    MulticastGroupArn:
      type: string
      minLength: 0
      maxLength: 128
    MulticastGroupByFuotaTask:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/MulticastGroupId'
      description: A multicast group that is associated with a FUOTA task.
    MulticastGroupId:
      type: string
      minLength: 0
      maxLength: 256
    MulticastGroupList:
      type: array
      items:
        $ref: '#/components/schemas/MulticastGroup'
      description: <p>List of multicast groups.</p>
    MulticastGroupListByFuotaTask:
      type: array
      items:
        $ref: '#/components/schemas/MulticastGroupByFuotaTask'
      description: <p>List of multicast groups associated with a FUOTA task.</p>
    MulticastGroupMessageId:
      type: string
      minLength: 0
      maxLength: 256
    MulticastGroupName:
      type: string
      minLength: 0
      maxLength: 256
    MulticastGroupStatus:
      type: string
      minLength: 0
      maxLength: 256
    MulticastWirelessMetadata:
      type: object
      properties:
        LoRaWAN:
          $ref: '#/components/schemas/LoRaWANMulticastMetadata'
      description: Wireless metadata that is to be sent to multicast group.
    NRCapable:
      type: boolean
      default: false
    NetId:
      type: string
      pattern: ^[a-fA-F0-9]{6}$
    NetIdFilters:
      type: array
      items:
        $ref: '#/components/schemas/NetId'
      description: "<p>A list of NetId values that are used by LoRa gateways to filter\
        \ the uplink\n            frames.</p>"
    NetworkAnalyzerConfigurationArn:
      type: string
      minLength: 0
      maxLength: 1124
    NetworkAnalyzerConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/NetworkAnalyzerConfigurations'
    NetworkAnalyzerConfigurationName:
      type: string
      pattern: ^[a-zA-Z0-9-_]+$
      minLength: 1
      maxLength: 1024
    NetworkAnalyzerConfigurations:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NetworkAnalyzerConfigurationArn'
          description: The Amazon Resource Name of the new resource.
        Name:
          $ref: '#/components/schemas/NetworkAnalyzerConfigurationName'
      description: Network analyzer configurations.
    NetworkAnalyzerMulticastGroupList:
      type: array
      items:
        $ref: '#/components/schemas/MulticastGroupId'
    NetworkId:
      type: integer
      minimum: 0
      maximum: 65535
    NextToken:
      type: string
      minLength: 0
      maxLength: 4096
    NumberOfDevicesInGroup:
      type: integer
      description: <p>Number of devices that are associated to the multicast group.</p>
    NumberOfDevicesRequested:
      type: integer
      description: <p>Number of devices that are requested to be associated with the
        multicast group.</p>
    NwkGeoLoc:
      type: boolean
      default: false
    NwkKey:
      type: string
      pattern: ^[a-fA-F0-9]{32}$
    NwkSEncKey:
      type: string
      pattern: ^[a-fA-F0-9]{32}$
    NwkSKey:
      type: string
      pattern: ^[a-fA-F0-9]{32}$
    OnboardStatus:
      type: string
      enum:
      - INITIALIZED
      - PENDING
      - ONBOARDED
      - FAILED
    OnboardStatusReason:
      type: string
    OtaaV1_0_x:
      type: object
      properties:
        AppKey:
          allOf:
          - $ref: '#/components/schemas/AppKey'
          description: The AppKey value.
        AppEui:
          allOf:
          - $ref: '#/components/schemas/AppEui'
          description: The AppEUI value. You specify this value when using LoRaWAN
            versions v1.0.2 or v1.0.3.
        JoinEui:
          allOf:
          - $ref: '#/components/schemas/JoinEui'
          description: The JoinEUI value. You specify this value instead of the AppEUI
            when using LoRaWAN version v1.0.4.
        GenAppKey:
          allOf:
          - $ref: '#/components/schemas/GenAppKey'
          description: The GenAppKey value.
      description: OTAA device object for v1.0.x
    OtaaV1_1:
      type: object
      properties:
        AppKey:
          allOf:
          - $ref: '#/components/schemas/AppKey'
          description: The AppKey value.
        NwkKey:
          allOf:
          - $ref: '#/components/schemas/NwkKey'
          description: The NwkKey value.
        JoinEui:
          allOf:
          - $ref: '#/components/schemas/JoinEui'
          description: The JoinEUI value.
      description: OTAA device object for v1.1
    P90:
      type: number
      format: double
    PCI:
      type: integer
      minimum: 0
      maximum: 503
    PSC:
      type: integer
      minimum: 0
      maximum: 511
    PackageVersion:
      type: string
      minLength: 1
      maxLength: 32
    ParticipatingGateways:
      type: object
      properties:
        DownlinkMode:
          allOf:
          - $ref: '#/components/schemas/DownlinkMode'
          description: Indicates whether to send the downlink message in sequential
            mode or concurrent mode, or to use only the chosen gateways from the previous
            uplink message transmission.
        GatewayList:
          allOf:
          - $ref: '#/components/schemas/GatewayList'
          description: The list of gateways that you want to use for sending the downlink
            data traffic.
        TransmissionInterval:
          allOf:
          - $ref: '#/components/schemas/TransmissionInterval'
          description: The duration of time for which AWS IoT Core for LoRaWAN will
            wait before transmitting the payload to the next gateway.
      required:
      - DownlinkMode
      - GatewayList
      - TransmissionInterval
      description: Specify the list of gateways to which you want to send downlink
        data traffic when the wireless device is running in class B or class C mode.
    ParticipatingGatewaysMulticast:
      type: object
      properties:
        GatewayList:
          allOf:
          - $ref: '#/components/schemas/GatewayListMulticast'
          description: The list of gateways that you want to use for sending the multicast
            downlink message. Each downlink message will be sent to all the gateways
            in the list in the order that you provided. If the gateway list is empty,
            then AWS IoT Core for LoRaWAN chooses the gateways that were most recently
            used by the devices to send an uplink message.
        TransmissionInterval:
          allOf:
          - $ref: '#/components/schemas/TransmissionIntervalMulticast'
          description: The duration of time in milliseconds for which AWS IoT Core
            for LoRaWAN will wait before transmitting the multicast payload to the
            next gateway in the list.
      description: Specify the list of gateways to which you want to send the multicast
        downlink messages. The multicast message will be sent to each gateway in the
        list, with the transmission interval as the time interval between each message.
    PartnerAccountArn:
      type: string
    PartnerAccountId:
      type: string
      minLength: 0
      maxLength: 256
    PartnerType:
      type: string
      enum:
      - Sidewalk
    PathLoss:
      type: integer
      minimum: 46
      maximum: 158
    PayloadData:
      type: string
      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
      minLength: 0
      maxLength: 2048
    PilotPower:
      type: integer
      minimum: -142
      maximum: -49
    PingSlotDr:
      type: integer
      minimum: 0
      maximum: 15
    PingSlotFreq:
      type: integer
      minimum: 1000000
      maximum: 16700000
    PingSlotPeriod:
      type: integer
      minimum: 32
      maximum: 4096
    PnOffset:
      type: integer
      minimum: 0
      maximum: 511
    PositionConfigurationFec:
      type: string
      enum:
      - ROSE
      - NONE
    PositionConfigurationItem:
      type: object
      properties:
        ResourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/PositionResourceIdentifier'
          description: Resource identifier for the position configuration.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/PositionResourceType'
          description: Resource type of the resource for the position configuration.
        Solvers:
          allOf:
          - $ref: '#/components/schemas/PositionSolverDetails'
          description: The details of the positioning solver object used to compute
            the location.
        Destination:
          allOf:
          - $ref: '#/components/schemas/DestinationName'
          description: The position data destination that describes the AWS IoT rule
            that processes the device's position data for use by AWS IoT Core for
            LoRaWAN.
      description: The wrapper for a position configuration.
    PositionConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/PositionConfigurationItem'
    PositionConfigurationStatus:
      type: string
      enum:
      - Enabled
      - Disabled
    PositionCoordinate:
      type: array
      items:
        $ref: '#/components/schemas/PositionCoordinateValue'
    PositionCoordinateValue:
      type: number
      format: float
    PositionResourceIdentifier:
      type: string
      pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
    PositionResourceType:
      type: string
      enum:
      - WirelessDevice
      - WirelessGateway
    PositionSolverConfigurations:
      type: object
      properties:
        SemtechGnss:
          allOf:
          - $ref: '#/components/schemas/SemtechGnssConfiguration'
          description: The Semtech GNSS solver configuration object.
      description: The wrapper for position solver configurations.
    PositionSolverDetails:
      type: object
      properties:
        SemtechGnss:
          allOf:
          - $ref: '#/components/schemas/SemtechGnssDetail'
          description: The Semtech GNSS solver object details.
      description: The wrapper for position solver details.
    PositionSolverProvider:
      type: string
      enum:
      - Semtech
    PositionSolverType:
      type: string
      enum:
      - GNSS
    PositionSolverVersion:
      type: string
      minLength: 0
      maxLength: 50
    Positioning:
      type: object
      properties:
        ClockSync:
          $ref: '#/components/schemas/FPort'
        Stream:
          $ref: '#/components/schemas/FPort'
        Gnss:
          $ref: '#/components/schemas/FPort'
      description: The FPorts for the position information.
    PositioningConfigStatus:
      type: string
      enum:
      - Enabled
      - Disabled
    PrAllowed:
      type: boolean
      default: false
    PresetFreq:
      type: integer
      minimum: 1000000
      maximum: 16700000
    PrivateKeysList:
      type: array
      items:
        $ref: '#/components/schemas/CertificateList'
    ProviderNetId:
      type: string
      minLength: 0
      maxLength: 256
    ProximityEventConfiguration:
      type: object
      properties:
        Sidewalk:
          allOf:
          - $ref: '#/components/schemas/SidewalkEventNotificationConfigurations'
          description: Proximity event configuration object for enabling or disabling
            Sidewalk related event topics.
        WirelessDeviceIdEventTopic:
          allOf:
          - $ref: '#/components/schemas/EventNotificationTopicStatus'
          description: Denotes whether the wireless device ID proximity event topic
            is enabled or disabled.
      description: Proximity event configuration object for enabling and disabling
        relevant topics.
    ProximityResourceTypeEventConfiguration:
      type: object
      properties:
        Sidewalk:
          allOf:
          - $ref: '#/components/schemas/SidewalkResourceTypeEventConfiguration'
          description: Proximity resource type event configuration object for enabling
            and disabling wireless device topic.
      description: Proximity resource type event configuration object for enabling
        or disabling topic.
    PutPositionConfigurationRequest:
      type: object
      properties:
        ResourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/PositionResourceIdentifier'
          description: Resource identifier used to update the position configuration.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/PositionResourceType'
          description: Resource type of the resource for which you want to update
            the position configuration.
        Solvers:
          allOf:
          - $ref: '#/components/schemas/PositionSolverConfigurations'
          description: The positioning solvers used to update the position configuration
            of the resource.
        Destination:
          allOf:
          - $ref: '#/components/schemas/DestinationName'
          description: The position data destination that describes the AWS IoT rule
            that processes the device's position data for use by AWS IoT Core for
            LoRaWAN.
      required:
      - ResourceIdentifier
      - ResourceType
    PutPositionConfigurationResponse:
      type: object
      properties: {}
    PutResourceLogLevelRequest:
      type: object
      properties:
        ResourceIdentifier:
          $ref: '#/components/schemas/ResourceIdentifier'
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The type of resource, which can be `WirelessDevice`, `WirelessGateway`,
            or `FuotaTask`.
        LogLevel:
          $ref: '#/components/schemas/LogLevel'
      required:
      - ResourceIdentifier
      - ResourceType
      - LogLevel
    PutResourceLogLevelResponse:
      type: object
      properties: {}
    QualificationStatus:
      type: boolean
    QueryString:
      type: string
      minLength: 0
      maxLength: 4096
    RSCP:
      type: integer
      minimum: -120
      maximum: -25
    RSRP:
      type: integer
      minimum: -140
      maximum: -44
    RSRQ:
      type: number
      format: float
      minimum: -19.5
      maximum: -3
    RSS:
      type: integer
      minimum: -128
      maximum: 0
    RaAllowed:
      type: boolean
      default: false
    RedundancyPercent:
      type: integer
      minimum: 0
      maximum: 100
      description: "<p>The percentage of the added fragments that are redundant. For\
        \ example, if the size of\n            the firmware image file is 100 bytes\
        \ and the fragment size is 10 bytes, with\n                <code>RedundancyPercent</code>\
        \ set to 50(%), the final number of encoded fragments\n            is (100\
        \ / 10) + (100 / 10 * 50%) = 15.</p>"
    RegParamsRevision:
      type: string
      minLength: 0
      maxLength: 64
    RegistrationZone:
      type: integer
      minimum: 0
      maximum: 4095
    ReportDevStatusBattery:
      type: boolean
      default: false
    ReportDevStatusMargin:
      type: boolean
      default: false
    ResetAllResourceLogLevelsRequest:
      type: object
      properties: {}
    ResetAllResourceLogLevelsResponse:
      type: object
      properties: {}
    ResetResourceLogLevelRequest:
      type: object
      properties:
        ResourceIdentifier:
          $ref: '#/components/schemas/ResourceIdentifier'
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The type of resource, which can be `WirelessDevice`, `WirelessGateway`,
            or `FuotaTask`.
      required:
      - ResourceIdentifier
      - ResourceType
    ResetResourceLogLevelResponse:
      type: object
      properties: {}
    ResourceId:
      type: string
    ResourceIdentifier:
      type: string
      minLength: 0
      maxLength: 256
    ResourceNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: Id of the not found resource.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: Type of the font found resource.
      description: Resource does not exist.
    ResourceType:
      type: string
    Result:
      type: string
      minLength: 0
      maxLength: 2048
    RfRegion:
      type: string
      minLength: 0
      maxLength: 64
    Role:
      type: string
      minLength: 0
      maxLength: 2048
    RoleArn:
      type: string
      minLength: 20
      maxLength: 2048
    RxDataRate2:
      type: integer
      minimum: 0
      maximum: 15
    RxDelay1:
      type: integer
      minimum: 0
      maximum: 15
    RxDrOffset1:
      type: integer
      minimum: 0
      maximum: 7
    RxFreq2:
      type: integer
      minimum: 1000000
      maximum: 16700000
    RxLevel:
      type: integer
      minimum: -110
      maximum: -25
    SNwkSIntKey:
      type: string
      pattern: ^[a-fA-F0-9]{32}$
    SemtechGnssConfiguration:
      type: object
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/PositionConfigurationStatus'
          description: The status indicating whether the solver is enabled.
        Fec:
          allOf:
          - $ref: '#/components/schemas/PositionConfigurationFec'
          description: Whether forward error correction is enabled.
      required:
      - Status
      - Fec
      description: Information about the Semtech GNSS solver configuration.
    SemtechGnssDetail:
      type: object
      properties:
        Provider:
          allOf:
          - $ref: '#/components/schemas/PositionSolverProvider'
          description: The vendor of the solver object.
        Type:
          allOf:
          - $ref: '#/components/schemas/PositionSolverType'
          description: The type of positioning solver used.
        Status:
          allOf:
          - $ref: '#/components/schemas/PositionConfigurationStatus'
          description: The status indicating whether the solver is enabled.
        Fec:
          allOf:
          - $ref: '#/components/schemas/PositionConfigurationFec'
          description: Whether forward error correction is enabled.
      description: Details of the Semtech GNSS solver object.
    SendDataToMulticastGroupRequest:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/MulticastGroupId'
        PayloadData:
          $ref: '#/components/schemas/PayloadData'
        WirelessMetadata:
          $ref: '#/components/schemas/MulticastWirelessMetadata'
      required:
      - Id
      - PayloadData
      - WirelessMetadata
    SendDataToMulticastGroupResponse:
      type: object
      properties:
        MessageId:
          $ref: '#/components/schemas/MulticastGroupMessageId'
    SendDataToWirelessDeviceRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceId'
          description: The ID of the wireless device to receive the data.
        TransmitMode:
          allOf:
          - $ref: '#/components/schemas/TransmitMode'
          description: 'The transmit mode to use to send data to the wireless device.
            Can be: `0` for UM (unacknowledge mode) or `1` for AM (acknowledge mode).'
        PayloadData:
          $ref: '#/components/schemas/PayloadData'
        WirelessMetadata:
          allOf:
          - $ref: '#/components/schemas/WirelessMetadata'
          description: Metadata about the message request.
      required:
      - Id
      - TransmitMode
      - PayloadData
    SendDataToWirelessDeviceResponse:
      type: object
      properties:
        MessageId:
          allOf:
          - $ref: '#/components/schemas/MessageId'
          description: The ID of the message sent to the wireless device.
    Seq:
      type: integer
      minimum: 0
      maximum: 16383
    ServiceProfile:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/ServiceProfileArn'
          description: The Amazon Resource Name of the resource.
        Name:
          allOf:
          - $ref: '#/components/schemas/ServiceProfileName'
          description: The name of the resource.
        Id:
          allOf:
          - $ref: '#/components/schemas/ServiceProfileId'
          description: The ID of the service profile.
      description: Information about a service profile.
    ServiceProfileArn:
      type: string
    ServiceProfileId:
      type: string
      minLength: 0
      maxLength: 256
    ServiceProfileList:
      type: array
      items:
        $ref: '#/components/schemas/ServiceProfile'
    ServiceProfileName:
      type: string
      minLength: 0
      maxLength: 256
    SessionKeysAbpV1_0_x:
      type: object
      properties:
        NwkSKey:
          allOf:
          - $ref: '#/components/schemas/NwkSKey'
          description: The NwkSKey value.
        AppSKey:
          allOf:
          - $ref: '#/components/schemas/AppSKey'
          description: The AppSKey value.
      description: Session keys for ABP v1.1
    SessionKeysAbpV1_1:
      type: object
      properties:
        FNwkSIntKey:
          allOf:
          - $ref: '#/components/schemas/FNwkSIntKey'
          description: The FNwkSIntKey value.
        SNwkSIntKey:
          allOf:
          - $ref: '#/components/schemas/SNwkSIntKey'
          description: The SNwkSIntKey value.
        NwkSEncKey:
          allOf:
          - $ref: '#/components/schemas/NwkSEncKey'
          description: The NwkSEncKey value.
        AppSKey:
          allOf:
          - $ref: '#/components/schemas/AppSKey'
          description: The AppSKey value.
      description: Session keys for ABP v1.1
    SessionStartTimeTimestamp:
      type: string
      format: date-time
      description: <p>Timestamp of when the multicast group session is to start.</p>
    SessionTimeout:
      type: integer
      minimum: 60
      maximum: 172800
      description: <p>How long before a multicast group session is to timeout.</p>
    SidewalkAccountInfo:
      type: object
      properties:
        AmazonId:
          allOf:
          - $ref: '#/components/schemas/AmazonId'
          description: The Sidewalk Amazon ID.
        AppServerPrivateKey:
          allOf:
          - $ref: '#/components/schemas/AppServerPrivateKey'
          description: The Sidewalk application server private key.
      description: Information about a Sidewalk account.
    SidewalkAccountInfoWithFingerprint:
      type: object
      properties:
        AmazonId:
          allOf:
          - $ref: '#/components/schemas/AmazonId'
          description: The Sidewalk Amazon ID.
        Fingerprint:
          allOf:
          - $ref: '#/components/schemas/Fingerprint'
          description: The fingerprint of the Sidewalk application server private
            key.
        Arn:
          allOf:
          - $ref: '#/components/schemas/PartnerAccountArn'
          description: The Amazon Resource Name of the resource.
      description: Information about a Sidewalk account.
    SidewalkAccountList:
      type: array
      items:
        $ref: '#/components/schemas/SidewalkAccountInfoWithFingerprint'
    SidewalkCreateDeviceProfile:
      type: object
      properties: {}
      description: Sidewalk object for creating a device profile.
    SidewalkCreateWirelessDevice:
      type: object
      properties:
        DeviceProfileId:
          allOf:
          - $ref: '#/components/schemas/DeviceProfileId'
          description: The ID of the Sidewalk device profile.
      description: Sidewalk object for creating a wireless device.
    SidewalkDevice:
      type: object
      properties:
        AmazonId:
          $ref: '#/components/schemas/AmazonId'
        SidewalkId:
          allOf:
          - $ref: '#/components/schemas/SidewalkId'
          description: The sidewalk device identification.
        SidewalkManufacturingSn:
          allOf:
          - $ref: '#/components/schemas/SidewalkManufacturingSn'
          description: The Sidewalk manufacturing series number.
        DeviceCertificates:
          allOf:
          - $ref: '#/components/schemas/DeviceCertificateList'
          description: The sidewalk device certificates for Ed25519 and P256r1.
        PrivateKeys:
          allOf:
          - $ref: '#/components/schemas/PrivateKeysList'
          description: The Sidewalk device private keys that will be used for onboarding
            the device.
        DeviceProfileId:
          allOf:
          - $ref: '#/components/schemas/DeviceProfileId'
          description: The ID of the Sidewalk device profile.
        CertificateId:
          allOf:
          - $ref: '#/components/schemas/DakCertificateId'
          description: The ID of the Sidewalk device profile.
        Status:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceSidewalkStatus'
          description: The Sidewalk device status, such as provisioned or registered.
      description: Sidewalk device object.
    SidewalkDeviceMetadata:
      type: object
      properties:
        Rssi:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The RSSI value.
        BatteryLevel:
          allOf:
          - $ref: '#/components/schemas/BatteryLevel'
          description: Sidewalk device battery level.
        Event:
          allOf:
          - $ref: '#/components/schemas/Event'
          description: Sidewalk device status notification.
        DeviceState:
          allOf:
          - $ref: '#/components/schemas/DeviceState'
          description: Device state defines the device status of sidewalk device.
      description: MetaData for Sidewalk device.
    SidewalkEventNotificationConfigurations:
      type: object
      properties:
        AmazonIdEventTopic:
          allOf:
          - $ref: '#/components/schemas/EventNotificationTopicStatus'
          description: Denotes whether the Amazon ID event topic is enabled or disabled.
      description: '`SidewalkEventNotificationConfigurations` object, which is the
        event configuration object for Sidewalk-related event topics.'
    SidewalkGetDeviceProfile:
      type: object
      properties:
        ApplicationServerPublicKey:
          allOf:
          - $ref: '#/components/schemas/ApplicationServerPublicKey'
          description: The Sidewalk application server public key.
        QualificationStatus:
          allOf:
          - $ref: '#/components/schemas/QualificationStatus'
          description: Gets information about the certification status of a Sidewalk
            device profile.
        DakCertificateMetadata:
          allOf:
          - $ref: '#/components/schemas/DakCertificateMetadataList'
          description: The DAK certificate information of the Sidewalk device profile.
      description: Gets information about a Sidewalk device profile.
    SidewalkGetStartImportInfo:
      type: object
      properties:
        DeviceCreationFileList:
          allOf:
          - $ref: '#/components/schemas/DeviceCreationFileList'
          description: List of Sidewalk devices that are added to the import task.
        Role:
          allOf:
          - $ref: '#/components/schemas/Role'
          description: The IAM role that allows AWS IoT Wireless to access the CSV
            file in the S3 bucket.
      description: Sidewalk-related information for devices in an import task that
        are being onboarded.
    SidewalkId:
      type: string
      minLength: 0
      maxLength: 256
    SidewalkListDevice:
      type: object
      properties:
        AmazonId:
          allOf:
          - $ref: '#/components/schemas/AmazonId'
          description: The Sidewalk Amazon ID.
        SidewalkId:
          allOf:
          - $ref: '#/components/schemas/SidewalkId'
          description: The sidewalk device identification.
        SidewalkManufacturingSn:
          allOf:
          - $ref: '#/components/schemas/SidewalkManufacturingSn'
          description: The Sidewalk manufacturing series number.
        DeviceCertificates:
          allOf:
          - $ref: '#/components/schemas/DeviceCertificateList'
          description: The sidewalk device certificates for Ed25519 and P256r1.
        DeviceProfileId:
          allOf:
          - $ref: '#/components/schemas/DeviceProfileId'
          description: Sidewalk object used by list functions.
        Status:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceSidewalkStatus'
          description: The status of the Sidewalk devices, such as provisioned or
            registered.
      description: Sidewalk object used by list functions.
    SidewalkManufacturingSn:
      type: string
      minLength: 0
      maxLength: 64
    SidewalkResourceTypeEventConfiguration:
      type: object
      properties:
        WirelessDeviceEventTopic:
          allOf:
          - $ref: '#/components/schemas/EventNotificationTopicStatus'
          description: Denotes whether the wireless device join event topic is enabled
            or disabled.
      description: Sidewalk resource type event configuration object for enabling
        or disabling topic.
    SidewalkSendDataToDevice:
      type: object
      properties:
        Seq:
          allOf:
          - $ref: '#/components/schemas/Seq'
          description: The sequence number.
        MessageType:
          $ref: '#/components/schemas/MessageType'
        AckModeRetryDurationSecs:
          allOf:
          - $ref: '#/components/schemas/AckModeRetryDurationSecs'
          description: The duration of time in seconds to retry sending the ACK.
      description: Information about a Sidewalk router.
    SidewalkSingleStartImportInfo:
      type: object
      properties:
        SidewalkManufacturingSn:
          allOf:
          - $ref: '#/components/schemas/SidewalkManufacturingSn'
          description: The Sidewalk manufacturing serial number (SMSN) of the device
            added to the import task.
      description: Information about an import task created for an individual Sidewalk
        device.
    SidewalkStartImportInfo:
      type: object
      properties:
        DeviceCreationFile:
          allOf:
          - $ref: '#/components/schemas/DeviceCreationFile'
          description: The CSV file contained in an S3 bucket that's used for adding
            devices to an import task.
        Role:
          allOf:
          - $ref: '#/components/schemas/Role'
          description: The IAM role that allows AWS IoT Wireless to access the CSV
            file in the S3 bucket.
      description: Information about an import task created for bulk provisioning.
    SidewalkUpdateAccount:
      type: object
      properties:
        AppServerPrivateKey:
          allOf:
          - $ref: '#/components/schemas/AppServerPrivateKey'
          description: The new Sidewalk application server private key.
      description: Sidewalk update.
    SidewalkUpdateImportInfo:
      type: object
      properties:
        DeviceCreationFile:
          allOf:
          - $ref: '#/components/schemas/DeviceCreationFile'
          description: The CSV file contained in an S3 bucket that's used for appending
            devices to an existing import task.
      description: Sidewalk object information for updating an import task.
    SigningAlg:
      type: string
      enum:
      - Ed25519
      - P256r1
      description: <p>The certificate chain algorithm provided by sidewalk.</p>
    StartBulkAssociateWirelessDeviceWithMulticastGroupRequest:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/MulticastGroupId'
        QueryString:
          $ref: '#/components/schemas/QueryString'
        Tags:
          $ref: '#/components/schemas/TagList'
      required:
      - Id
    StartBulkAssociateWirelessDeviceWithMulticastGroupResponse:
      type: object
      properties: {}
    StartBulkDisassociateWirelessDeviceFromMulticastGroupRequest:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/MulticastGroupId'
        QueryString:
          $ref: '#/components/schemas/QueryString'
        Tags:
          $ref: '#/components/schemas/TagList'
      required:
      - Id
    StartBulkDisassociateWirelessDeviceFromMulticastGroupResponse:
      type: object
      properties: {}
    StartFuotaTaskRequest:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/FuotaTaskId'
        LoRaWAN:
          $ref: '#/components/schemas/LoRaWANStartFuotaTask'
      required:
      - Id
    StartFuotaTaskResponse:
      type: object
      properties: {}
    StartMulticastGroupSessionRequest:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/MulticastGroupId'
        LoRaWAN:
          $ref: '#/components/schemas/LoRaWANMulticastSession'
      required:
      - Id
      - LoRaWAN
    StartMulticastGroupSessionResponse:
      type: object
      properties: {}
    StartSingleWirelessDeviceImportTaskRequest:
      type: object
      properties:
        DestinationName:
          allOf:
          - $ref: '#/components/schemas/DestinationName'
          description: The name of the Sidewalk destination that describes the IoT
            rule to route messages from the device in the import task that will be
            onboarded to AWS IoT Wireless.
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
        DeviceName:
          allOf:
          - $ref: '#/components/schemas/DeviceName'
          description: The name of the wireless device for which an import task is
            being started.
        Tags:
          $ref: '#/components/schemas/TagList'
        Sidewalk:
          allOf:
          - $ref: '#/components/schemas/SidewalkSingleStartImportInfo'
          description: The Sidewalk-related parameters for importing a single wireless
            device.
      required:
      - DestinationName
      - Sidewalk
    StartSingleWirelessDeviceImportTaskResponse:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ImportTaskId'
          description: The import task ID.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ImportTaskArn'
          description: The ARN (Amazon Resource Name) of the import task.
    StartTime:
      type: string
      format: date-time
      description: <p>Start time of a FUOTA task.</p>
    StartWirelessDeviceImportTaskRequest:
      type: object
      properties:
        DestinationName:
          allOf:
          - $ref: '#/components/schemas/DestinationName'
          description: The name of the Sidewalk destination that describes the IoT
            rule to route messages from the devices in the import task that are onboarded
            to AWS IoT Wireless.
        ClientRequestToken:
          $ref: '#/components/schemas/ClientRequestToken'
        Tags:
          $ref: '#/components/schemas/TagList'
        Sidewalk:
          allOf:
          - $ref: '#/components/schemas/SidewalkStartImportInfo'
          description: The Sidewalk-related parameters for importing wireless devices
            that need to be provisioned in bulk.
      required:
      - DestinationName
      - Sidewalk
    StartWirelessDeviceImportTaskResponse:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ImportTaskId'
          description: The import task ID.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ImportTaskArn'
          description: The ARN (Amazon Resource Name) of the import task.
    Station:
      type: string
      minLength: 1
      maxLength: 4096
    StatusReason:
      type: string
    Std:
      type: number
      format: double
    SubBand:
      type: integer
      minimum: 1
      maximum: 8
      description: <p>A subset of supported frequency channels in a certain RFRegion.</p>
    SubBands:
      type: array
      items:
        $ref: '#/components/schemas/SubBand'
      description: <p>A list of integer indicating which sub bands are supported by
        LoRa gateway.</p>
    Sum:
      type: number
      format: double
    SummaryMetricConfiguration:
      type: object
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/SummaryMetricConfigurationStatus'
          description: The status of the configuration of summary metrics.
      description: The configuration of summary metrics.
    SummaryMetricConfigurationStatus:
      type: string
      enum:
      - Enabled
      - Disabled
    SummaryMetricQueries:
      type: array
      items:
        $ref: '#/components/schemas/SummaryMetricQuery'
    SummaryMetricQuery:
      type: object
      properties:
        QueryId:
          allOf:
          - $ref: '#/components/schemas/MetricQueryId'
          description: The id of the summary metric query.
        MetricName:
          allOf:
          - $ref: '#/components/schemas/MetricName'
          description: The name of the metric.
        Dimensions:
          allOf:
          - $ref: '#/components/schemas/Dimensions'
          description: The dimensions of the summary metric.
        AggregationPeriod:
          allOf:
          - $ref: '#/components/schemas/AggregationPeriod'
          description: The aggregation period of the summary metric.
        StartTimestamp:
          allOf:
          - $ref: '#/components/schemas/MetricQueryStartTimestamp'
          description: The start timestamp for the summary metric query.
        EndTimestamp:
          allOf:
          - $ref: '#/components/schemas/MetricQueryEndTimestamp'
          description: The end timestamp for the summary metric query.
      description: The summary metric query object.
    SummaryMetricQueryResult:
      type: object
      properties:
        QueryId:
          allOf:
          - $ref: '#/components/schemas/MetricQueryId'
          description: The ID of the summary metric results query operation.
        QueryStatus:
          allOf:
          - $ref: '#/components/schemas/MetricQueryStatus'
          description: The status of the summary metric query result.
        Error:
          allOf:
          - $ref: '#/components/schemas/MetricQueryError'
          description: The error message for the summary metric query result.
        MetricName:
          allOf:
          - $ref: '#/components/schemas/MetricName'
          description: The name of the summary metric query result.
        Dimensions:
          allOf:
          - $ref: '#/components/schemas/Dimensions'
          description: The dimensions of the metric.
        AggregationPeriod:
          allOf:
          - $ref: '#/components/schemas/AggregationPeriod'
          description: The aggregation period of the metric.
        StartTimestamp:
          allOf:
          - $ref: '#/components/schemas/MetricQueryStartTimestamp'
          description: The start timestamp for the summary metric query.
        EndTimestamp:
          allOf:
          - $ref: '#/components/schemas/MetricQueryEndTimestamp'
          description: The end timestamp for the summary metric query.
        Timestamps:
          allOf:
          - $ref: '#/components/schemas/MetricQueryTimestamps'
          description: The timestamp of each aggregation result.
        Values:
          allOf:
          - $ref: '#/components/schemas/MetricQueryValues'
          description: The list of aggregated summary metric query results.
        Unit:
          allOf:
          - $ref: '#/components/schemas/MetricUnit'
          description: The units of measurement to be used for interpreting the aggregation
            result.
      description: The result of the summary metrics aggregation operation.
    SummaryMetricQueryResults:
      type: array
      items:
        $ref: '#/components/schemas/SummaryMetricQueryResult'
    SupportedRfRegion:
      type: string
      enum:
      - EU868
      - US915
      - AU915
      - AS923-1
      - AS923-2
      - AS923-3
      - AS923-4
      - EU433
      - CN470
      - CN779
      - RU864
      - KR920
      - IN865
      description: <p>Supported RfRegions</p>
    Supports32BitFCnt:
      type: boolean
      default: false
    SupportsClassB:
      type: boolean
      default: false
    SupportsClassC:
      type: boolean
      default: false
    SupportsJoin:
      type: boolean
    SystemId:
      type: integer
      minimum: 1
      maximum: 32767
    TAC:
      type: integer
      minimum: 0
      maximum: 65535
    Tag:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          description: The tag's key value.
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          description: The tag's value.
      required:
      - Key
      - Value
      description: A simple label consisting of a customer-defined key-value pair
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
      description: "<p>The tag to attach to the specified resource. Tags are metadata\
        \ that you can use to\n            manage a resource.</p>"
    TagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          description: The ARN of the resource to add tags to.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: Adds to or modifies the tags of the given resource. Tags are
            metadata that you can use to manage a resource.
      required:
      - ResourceArn
      - Tags
    TagResourceResponse:
      type: object
      properties: {}
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    TargetPer:
      type: integer
      default: 0
      minimum: 0
      maximum: 100
    TdscdmaList:
      type: array
      items:
        $ref: '#/components/schemas/TdscdmaObj'
    TdscdmaLocalId:
      type: object
      properties:
        Uarfcn:
          allOf:
          - $ref: '#/components/schemas/UARFCN'
          description: TD-SCDMA UTRA (Universal Terrestrial Radio Access Network)
            absolute RF channel number (UARFCN).
        CellParams:
          allOf:
          - $ref: '#/components/schemas/CellParams'
          description: Cell parameters for TD-SCDMA.
      required:
      - Uarfcn
      - CellParams
      description: TD-SCDMA local identification (local Id) information.
    TdscdmaNmrList:
      type: array
      items:
        $ref: '#/components/schemas/TdscdmaNmrObj'
    TdscdmaNmrObj:
      type: object
      properties:
        Uarfcn:
          allOf:
          - $ref: '#/components/schemas/UARFCN'
          description: TD-SCDMA UTRA (Universal Terrestrial Radio Access Network)
            absolute RF channel number.
        CellParams:
          allOf:
          - $ref: '#/components/schemas/CellParams'
          description: Cell parameters for TD-SCDMA network measurement reports object.
        UtranCid:
          allOf:
          - $ref: '#/components/schemas/UtranCid'
          description: UTRAN (UMTS Terrestrial Radio Access Network) cell global identifier.
        Rscp:
          allOf:
          - $ref: '#/components/schemas/RSCP'
          description: Code power of the received signal, measured in decibel-milliwatts
            (dBm).
        PathLoss:
          allOf:
          - $ref: '#/components/schemas/PathLoss'
          description: Path loss, or path attenuation, is the reduction in power density
            of an electromagnetic wave as it propagates through space.
      required:
      - Uarfcn
      - CellParams
      description: TD-SCDMA object for network measurement reports.
    TdscdmaObj:
      type: object
      properties:
        Mcc:
          allOf:
          - $ref: '#/components/schemas/MCC'
          description: Mobile Country Code.
        Mnc:
          allOf:
          - $ref: '#/components/schemas/MNC'
          description: Mobile Network Code.
        Lac:
          allOf:
          - $ref: '#/components/schemas/LAC'
          description: Location Area Code.
        UtranCid:
          allOf:
          - $ref: '#/components/schemas/UtranCid'
          description: UTRAN (UMTS Terrestrial Radio Access Network) Cell Global Identifier.
        TdscdmaLocalId:
          allOf:
          - $ref: '#/components/schemas/TdscdmaLocalId'
          description: TD-SCDMA local identification (local ID) information.
        TdscdmaTimingAdvance:
          allOf:
          - $ref: '#/components/schemas/TdscdmaTimingAdvance'
          description: TD-SCDMA Timing advance.
        Rscp:
          allOf:
          - $ref: '#/components/schemas/RSCP'
          description: Signal power of the received signal (Received Signal Code Power),
            measured in decibel-milliwatts (dBm).
        PathLoss:
          allOf:
          - $ref: '#/components/schemas/PathLoss'
          description: Path loss, or path attenuation, is the reduction in power density
            of an electromagnetic wave as it propagates through space.
        TdscdmaNmr:
          allOf:
          - $ref: '#/components/schemas/TdscdmaNmrList'
          description: TD-SCDMA object for network measurement reports.
      required:
      - Mcc
      - Mnc
      - UtranCid
      description: TD-SCDMA object.
    TdscdmaTimingAdvance:
      type: integer
      minimum: 0
      maximum: 1530
    TestWirelessDeviceRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceId'
          description: The ID of the wireless device to test.
      required:
      - Id
    TestWirelessDeviceResponse:
      type: object
      properties:
        Result:
          allOf:
          - $ref: '#/components/schemas/Result'
          description: The result returned by the test.
    ThingArn:
      type: string
    ThingName:
      type: string
    ThrottlingException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
      description: The request was denied because it exceeded the allowed API request
        rate.
    TooManyTagsException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          description: Name of the resource that exceeds maximum number of tags allowed.
      description: The request was denied because the resource can't have any more
        tags.
    TraceContent:
      type: object
      properties:
        WirelessDeviceFrameInfo:
          $ref: '#/components/schemas/WirelessDeviceFrameInfo'
        LogLevel:
          $ref: '#/components/schemas/LogLevel'
        MulticastFrameInfo:
          $ref: '#/components/schemas/MulticastFrameInfo'
      description: Trace content for your wireless devices, gateways, and multicast
        groups.
    TransmissionInterval:
      type: integer
      minimum: 1
      maximum: 604800
    TransmissionIntervalMulticast:
      type: integer
      minimum: 0
      maximum: 60000
    TransmitMode:
      type: integer
      minimum: 0
      maximum: 1
    UARFCN:
      type: integer
      minimum: 0
      maximum: 16383
    UARFCNDL:
      type: integer
      minimum: 0
      maximum: 16383
    UlBucketSize:
      type: integer
      minimum: 0
      maximum: 2147483647
    UlRate:
      type: integer
      minimum: 0
      maximum: 2147483647
    UlRatePolicy:
      type: string
      minLength: 0
      maxLength: 256
    UntagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          description: The ARN of the resource to remove tags from.
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: A list of the keys of the tags to remove from the resource.
      required:
      - ResourceArn
      - TagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateAbpV1_0_x:
      type: object
      properties:
        FCntStart:
          allOf:
          - $ref: '#/components/schemas/FCntStart'
          description: The FCnt init value.
      description: ABP device object for LoRaWAN specification v1.0.x
    UpdateAbpV1_1:
      type: object
      properties:
        FCntStart:
          allOf:
          - $ref: '#/components/schemas/FCntStart'
          description: The FCnt init value.
      description: ABP device object for LoRaWAN specification v1.1
    UpdateDataSource:
      type: string
      minLength: 1
      maxLength: 4096
    UpdateDestinationRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DestinationName'
          description: The new name of the resource.
        ExpressionType:
          allOf:
          - $ref: '#/components/schemas/ExpressionType'
          description: The type of value in `Expression`.
        Expression:
          allOf:
          - $ref: '#/components/schemas/Expression'
          description: The new rule name or topic rule to send messages to.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: A new description of the resource.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The ARN of the IAM Role that authorizes the destination.
      required:
      - Name
    UpdateDestinationResponse:
      type: object
      properties: {}
    UpdateEventConfigurationByResourceTypesRequest:
      type: object
      properties:
        DeviceRegistrationState:
          allOf:
          - $ref: '#/components/schemas/DeviceRegistrationStateResourceTypeEventConfiguration'
          description: Device registration state resource type event configuration
            object for enabling and disabling wireless gateway topic.
        Proximity:
          allOf:
          - $ref: '#/components/schemas/ProximityResourceTypeEventConfiguration'
          description: Proximity resource type event configuration object for enabling
            and disabling wireless gateway topic.
        Join:
          allOf:
          - $ref: '#/components/schemas/JoinResourceTypeEventConfiguration'
          description: Join resource type event configuration object for enabling
            and disabling wireless device topic.
        ConnectionStatus:
          allOf:
          - $ref: '#/components/schemas/ConnectionStatusResourceTypeEventConfiguration'
          description: Connection status resource type event configuration object
            for enabling and disabling wireless gateway topic.
        MessageDeliveryStatus:
          allOf:
          - $ref: '#/components/schemas/MessageDeliveryStatusResourceTypeEventConfiguration'
          description: Message delivery status resource type event configuration object
            for enabling and disabling wireless device topic.
    UpdateEventConfigurationByResourceTypesResponse:
      type: object
      properties: {}
    UpdateFPorts:
      type: object
      properties:
        Positioning:
          allOf:
          - $ref: '#/components/schemas/Positioning'
          description: Positioning FPorts for the ClockSync, Stream, and GNSS functions.
        Applications:
          allOf:
          - $ref: '#/components/schemas/Applications'
          description: LoRaWAN application, which can be used for geolocation by activating
            positioning.
      description: Object for updating the FPorts information.
    UpdateFuotaTaskRequest:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/FuotaTaskId'
        Name:
          $ref: '#/components/schemas/FuotaTaskName'
        Description:
          $ref: '#/components/schemas/Description'
        LoRaWAN:
          $ref: '#/components/schemas/LoRaWANFuotaTask'
        FirmwareUpdateImage:
          $ref: '#/components/schemas/FirmwareUpdateImage'
        FirmwareUpdateRole:
          $ref: '#/components/schemas/FirmwareUpdateRole'
        RedundancyPercent:
          $ref: '#/components/schemas/RedundancyPercent'
        FragmentSizeBytes:
          $ref: '#/components/schemas/FragmentSizeBytes'
        FragmentIntervalMS:
          $ref: '#/components/schemas/FragmentIntervalMS'
        Descriptor:
          $ref: '#/components/schemas/FileDescriptor'
      required:
      - Id
    UpdateFuotaTaskResponse:
      type: object
      properties: {}
    UpdateLogLevelsByResourceTypesRequest:
      type: object
      properties:
        DefaultLogLevel:
          $ref: '#/components/schemas/LogLevel'
        FuotaTaskLogOptions:
          $ref: '#/components/schemas/FuotaTaskLogOptionList'
        WirelessDeviceLogOptions:
          $ref: '#/components/schemas/WirelessDeviceLogOptionList'
        WirelessGatewayLogOptions:
          $ref: '#/components/schemas/WirelessGatewayLogOptionList'
    UpdateLogLevelsByResourceTypesResponse:
      type: object
      properties: {}
    UpdateMetricConfigurationRequest:
      type: object
      properties:
        SummaryMetric:
          allOf:
          - $ref: '#/components/schemas/SummaryMetricConfiguration'
          description: The value to be used to set summary metric configuration.
    UpdateMetricConfigurationResponse:
      type: object
      properties: {}
    UpdateMulticastGroupRequest:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/MulticastGroupId'
        Name:
          $ref: '#/components/schemas/MulticastGroupName'
        Description:
          $ref: '#/components/schemas/Description'
        LoRaWAN:
          $ref: '#/components/schemas/LoRaWANMulticast'
      required:
      - Id
    UpdateMulticastGroupResponse:
      type: object
      properties: {}
    UpdateNetworkAnalyzerConfigurationRequest:
      type: object
      properties:
        ConfigurationName:
          $ref: '#/components/schemas/NetworkAnalyzerConfigurationName'
        TraceContent:
          $ref: '#/components/schemas/TraceContent'
        WirelessDevicesToAdd:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceList'
          description: Wireless device resources to add to the network analyzer configuration.
            Provide the `WirelessDeviceId` of the resource to add in the input array.
        WirelessDevicesToRemove:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceList'
          description: Wireless device resources to remove from the network analyzer
            configuration. Provide the `WirelessDeviceId` of the resources to remove
            in the input array.
        WirelessGatewaysToAdd:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayList'
          description: Wireless gateway resources to add to the network analyzer configuration.
            Provide the `WirelessGatewayId` of the resource to add in the input array.
        WirelessGatewaysToRemove:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayList'
          description: Wireless gateway resources to remove from the network analyzer
            configuration. Provide the `WirelessGatewayId` of the resources to remove
            in the input array.
        Description:
          $ref: '#/components/schemas/Description'
        MulticastGroupsToAdd:
          allOf:
          - $ref: '#/components/schemas/NetworkAnalyzerMulticastGroupList'
          description: Multicast group resources to add to the network analyzer configuration.
            Provide the `MulticastGroupId` of the resource to add in the input array.
        MulticastGroupsToRemove:
          allOf:
          - $ref: '#/components/schemas/NetworkAnalyzerMulticastGroupList'
          description: Multicast group resources to remove from the network analyzer
            configuration. Provide the `MulticastGroupId` of the resources to remove
            in the input array.
      required:
      - ConfigurationName
    UpdateNetworkAnalyzerConfigurationResponse:
      type: object
      properties: {}
    UpdatePartnerAccountRequest:
      type: object
      properties:
        Sidewalk:
          allOf:
          - $ref: '#/components/schemas/SidewalkUpdateAccount'
          description: The Sidewalk account credentials.
        PartnerAccountId:
          allOf:
          - $ref: '#/components/schemas/PartnerAccountId'
          description: The ID of the partner account to update.
        PartnerType:
          allOf:
          - $ref: '#/components/schemas/PartnerType'
          description: The partner type.
      required:
      - Sidewalk
      - PartnerAccountId
      - PartnerType
    UpdatePartnerAccountResponse:
      type: object
      properties: {}
    UpdatePositionRequest:
      type: object
      properties:
        ResourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/PositionResourceIdentifier'
          description: Resource identifier of the resource for which position is updated.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/PositionResourceType'
          description: Resource type of the resource for which position is updated.
        Position:
          allOf:
          - $ref: '#/components/schemas/PositionCoordinate'
          description: The position information of the resource.
      required:
      - ResourceIdentifier
      - ResourceType
      - Position
    UpdatePositionResponse:
      type: object
      properties: {}
    UpdateResourceEventConfigurationRequest:
      type: object
      properties:
        Identifier:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: Resource identifier to opt in for event messaging.
        IdentifierType:
          allOf:
          - $ref: '#/components/schemas/IdentifierType'
          description: Identifier type of the particular resource identifier for event
            configuration.
        PartnerType:
          allOf:
          - $ref: '#/components/schemas/EventNotificationPartnerType'
          description: Partner type of the resource if the identifier type is `PartnerAccountId`
        DeviceRegistrationState:
          allOf:
          - $ref: '#/components/schemas/DeviceRegistrationStateEventConfiguration'
          description: Event configuration for the device registration state event.
        Proximity:
          allOf:
          - $ref: '#/components/schemas/ProximityEventConfiguration'
          description: Event configuration for the proximity event.
        Join:
          allOf:
          - $ref: '#/components/schemas/JoinEventConfiguration'
          description: Event configuration for the join event.
        ConnectionStatus:
          allOf:
          - $ref: '#/components/schemas/ConnectionStatusEventConfiguration'
          description: Event configuration for the connection status event.
        MessageDeliveryStatus:
          allOf:
          - $ref: '#/components/schemas/MessageDeliveryStatusEventConfiguration'
          description: Event configuration for the message delivery status event.
      required:
      - Identifier
      - IdentifierType
    UpdateResourceEventConfigurationResponse:
      type: object
      properties: {}
    UpdateResourcePositionRequest:
      type: object
      properties:
        ResourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/PositionResourceIdentifier'
          description: The identifier of the resource for which position information
            is updated. It can be the wireless device ID or the wireless gateway ID,
            depending on the resource type.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/PositionResourceType'
          description: The type of resource for which position information is updated,
            which can be a wireless device or a wireless gateway.
        GeoJsonPayload:
          allOf:
          - $ref: '#/components/schemas/GeoJsonPayload'
          description: The position information of the resource, displayed as a JSON
            payload. The payload uses the GeoJSON format, which a format that's used
            to encode geographic data structures. For more information, see [GeoJSON](https://geojson.org/).
      required:
      - ResourceIdentifier
      - ResourceType
    UpdateResourcePositionResponse:
      type: object
      properties: {}
    UpdateSignature:
      type: string
      minLength: 1
      maxLength: 4096
    UpdateWirelessDeviceImportTaskRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ImportTaskId'
          description: The identifier of the import task to be updated.
        Sidewalk:
          allOf:
          - $ref: '#/components/schemas/SidewalkUpdateImportInfo'
          description: The Sidewalk-related parameters of the import task to be updated.
      required:
      - Id
      - Sidewalk
    UpdateWirelessDeviceImportTaskResponse:
      type: object
      properties: {}
    UpdateWirelessDeviceRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceId'
          description: The ID of the resource to update.
        DestinationName:
          allOf:
          - $ref: '#/components/schemas/DestinationName'
          description: The name of the new destination for the device.
        Name:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceName'
          description: The new name of the resource.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: A new description of the resource.
        LoRaWAN:
          allOf:
          - $ref: '#/components/schemas/LoRaWANUpdateDevice'
          description: The updated wireless device's configuration.
        Positioning:
          allOf:
          - $ref: '#/components/schemas/PositioningConfigStatus'
          description: FPort values for the GNSS, stream, and ClockSync functions
            of the positioning information.
      required:
      - Id
    UpdateWirelessDeviceResponse:
      type: object
      properties: {}
    UpdateWirelessGatewayRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayId'
          description: The ID of the resource to update.
        Name:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayName'
          description: The new name of the resource.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: A new description of the resource.
        JoinEuiFilters:
          $ref: '#/components/schemas/JoinEuiFilters'
        NetIdFilters:
          $ref: '#/components/schemas/NetIdFilters'
        MaxEirp:
          allOf:
          - $ref: '#/components/schemas/GatewayMaxEirp'
          description: The MaxEIRP value.
      required:
      - Id
    UpdateWirelessGatewayResponse:
      type: object
      properties: {}
    UpdateWirelessGatewayTaskCreate:
      type: object
      properties:
        UpdateDataSource:
          allOf:
          - $ref: '#/components/schemas/UpdateDataSource'
          description: The link to the S3 bucket.
        UpdateDataRole:
          allOf:
          - $ref: '#/components/schemas/UpdateDataSource'
          description: The IAM role used to read data from the S3 bucket.
        LoRaWAN:
          allOf:
          - $ref: '#/components/schemas/LoRaWANUpdateGatewayTaskCreate'
          description: The properties that relate to the LoRaWAN wireless gateway.
      description: UpdateWirelessGatewayTaskCreate object.
    UpdateWirelessGatewayTaskEntry:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayTaskDefinitionId'
          description: The ID of the new wireless gateway task entry.
        LoRaWAN:
          allOf:
          - $ref: '#/components/schemas/LoRaWANUpdateGatewayTaskEntry'
          description: The properties that relate to the LoRaWAN wireless gateway.
        Arn:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayTaskDefinitionArn'
          description: The Amazon Resource Name of the resource.
      description: UpdateWirelessGatewayTaskEntry object.
    Use2DSolver:
      type: boolean
      default: false
    UtranCid:
      type: integer
      minimum: 0
      maximum: 268435455
    ValidationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
      description: The input did not meet the specified constraints.
    VerticalAccuracy:
      type: number
      format: float
      minimum: 0
    WcdmaList:
      type: array
      items:
        $ref: '#/components/schemas/WcdmaObj'
    WcdmaLocalId:
      type: object
      properties:
        Uarfcndl:
          allOf:
          - $ref: '#/components/schemas/UARFCNDL'
          description: WCDMA UTRA Absolute RF Channel Number downlink.
        Psc:
          allOf:
          - $ref: '#/components/schemas/PSC'
          description: Primary Scrambling Code.
      required:
      - Uarfcndl
      - Psc
      description: WCDMA local identification (local ID) information.
    WcdmaNmrList:
      type: array
      items:
        $ref: '#/components/schemas/WcdmaNmrObj'
    WcdmaNmrObj:
      type: object
      properties:
        Uarfcndl:
          allOf:
          - $ref: '#/components/schemas/UARFCNDL'
          description: WCDMA UTRA Absolute RF Channel Number downlink.
        Psc:
          allOf:
          - $ref: '#/components/schemas/PSC'
          description: Primary Scrambling Code.
        UtranCid:
          allOf:
          - $ref: '#/components/schemas/UtranCid'
          description: UTRAN (UMTS Terrestrial Radio Access Network) Cell Global Identifier.
        Rscp:
          allOf:
          - $ref: '#/components/schemas/RSCP'
          description: Received Signal Code Power (signal power) (dBm)
        PathLoss:
          allOf:
          - $ref: '#/components/schemas/PathLoss'
          description: Path loss, or path attenuation, is the reduction in power density
            of an electromagnetic wave as it propagates through space.
      required:
      - Uarfcndl
      - Psc
      - UtranCid
      description: Network Measurement Reports.
    WcdmaObj:
      type: object
      properties:
        Mcc:
          allOf:
          - $ref: '#/components/schemas/MCC'
          description: Mobile Country Code.
        Mnc:
          allOf:
          - $ref: '#/components/schemas/MNC'
          description: Mobile Network Code.
        Lac:
          allOf:
          - $ref: '#/components/schemas/LAC'
          description: Location Area Code.
        UtranCid:
          allOf:
          - $ref: '#/components/schemas/UtranCid'
          description: UTRAN (UMTS Terrestrial Radio Access Network) Cell Global Identifier.
        WcdmaLocalId:
          allOf:
          - $ref: '#/components/schemas/WcdmaLocalId'
          description: WCDMA local ID information.
        Rscp:
          allOf:
          - $ref: '#/components/schemas/RSCP'
          description: Received Signal Code Power (signal power) (dBm).
        PathLoss:
          allOf:
          - $ref: '#/components/schemas/PathLoss'
          description: Path loss, or path attenuation, is the reduction in power density
            of an electromagnetic wave as it propagates through space.
        WcdmaNmr:
          allOf:
          - $ref: '#/components/schemas/WcdmaNmrList'
          description: WCDMA object for network measurement reports.
      required:
      - Mcc
      - Mnc
      - UtranCid
      description: WCDMA.
    WiFiAccessPoint:
      type: object
      properties:
        MacAddress:
          allOf:
          - $ref: '#/components/schemas/MacAddress'
          description: Wi-Fi MAC Address.
        Rss:
          allOf:
          - $ref: '#/components/schemas/RSS'
          description: Received signal strength (dBm) of the WLAN measurement data.
      required:
      - MacAddress
      - Rss
      description: Wi-Fi access point.
    WiFiAccessPoints:
      type: array
      items:
        $ref: '#/components/schemas/WiFiAccessPoint'
    WirelessDeviceArn:
      type: string
    WirelessDeviceEvent:
      type: string
      enum:
      - Join
      - Rejoin
      - Uplink_Data
      - Downlink_Data
      - Registration
      description: <p>The event for a log message, if the log message is tied to a
        wireless device.</p>
    WirelessDeviceEventLogOption:
      type: object
      properties:
        Event:
          $ref: '#/components/schemas/WirelessDeviceEvent'
        LogLevel:
          $ref: '#/components/schemas/LogLevel'
      required:
      - Event
      - LogLevel
      description: 'The log options for a wireless device event and can be used to
        set log levels for a specific wireless device event.


        For a LoRaWAN device, possible events for a log messsage are: `Join`, `Rejoin`,
        `Downlink_Data`, and `Uplink_Data`. For a Sidewalk device, possible events
        for a log message are `Registration`, `Downlink_Data`, and `Uplink_Data`.'
    WirelessDeviceEventLogOptionList:
      type: array
      items:
        $ref: '#/components/schemas/WirelessDeviceEventLogOption'
      description: <p>The list of wireless device event log options.</p>
    WirelessDeviceFrameInfo:
      type: string
      enum:
      - ENABLED
      - DISABLED
      description: "<p>\n            <code>FrameInfo</code> of your wireless device\
        \ resources for the trace content. Use\n            FrameInfo to debug the\
        \ communication between your LoRaWAN end devices and the network\n       \
        \     server.</p>"
    WirelessDeviceId:
      type: string
      minLength: 0
      maxLength: 256
    WirelessDeviceIdType:
      type: string
      enum:
      - WirelessDeviceId
      - DevEui
      - ThingName
      - SidewalkManufacturingSn
    WirelessDeviceImportTask:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ImportTaskId'
          description: The ID of the wireless device import task.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ImportTaskArn'
          description: The ARN (Amazon Resource Name) of the wireless device import
            task.
        DestinationName:
          allOf:
          - $ref: '#/components/schemas/DestinationName'
          description: The name of the Sidewalk destination that that describes the
            IoT rule to route messages from the device in the import task that will
            be onboarded to AWS IoT Wireless
        Sidewalk:
          allOf:
          - $ref: '#/components/schemas/SidewalkGetStartImportInfo'
          description: The Sidewalk-related information of the wireless device import
            task.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/CreationTime'
          description: The time at which the import task was created.
        Status:
          allOf:
          - $ref: '#/components/schemas/ImportTaskStatus'
          description: The status information of the wireless device import task.
        StatusReason:
          allOf:
          - $ref: '#/components/schemas/StatusReason'
          description: The reason that provides additional information about the import
            task status.
        InitializedImportedDeviceCount:
          allOf:
          - $ref: '#/components/schemas/ImportedWirelessDeviceCount'
          description: The summary information of count of wireless devices that are
            waiting for the control log to be added to an import task.
        PendingImportedDeviceCount:
          allOf:
          - $ref: '#/components/schemas/ImportedWirelessDeviceCount'
          description: The summary information of count of wireless devices in an
            import task that are waiting in the queue to be onboarded.
        OnboardedImportedDeviceCount:
          allOf:
          - $ref: '#/components/schemas/ImportedWirelessDeviceCount'
          description: The summary information of count of wireless devices in an
            import task that have been onboarded to the import task.
        FailedImportedDeviceCount:
          allOf:
          - $ref: '#/components/schemas/ImportedWirelessDeviceCount'
          description: The summary information of count of wireless devices in an
            import task that failed to onboarded to the import task.
      description: Information about an import task for wireless devices.
    WirelessDeviceImportTaskList:
      type: array
      items:
        $ref: '#/components/schemas/WirelessDeviceImportTask'
    WirelessDeviceList:
      type: array
      items:
        $ref: '#/components/schemas/WirelessDeviceId'
    WirelessDeviceLogOption:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceType'
          description: The wireless device type.
        LogLevel:
          $ref: '#/components/schemas/LogLevel'
        Events:
          $ref: '#/components/schemas/WirelessDeviceEventLogOptionList'
      required:
      - Type
      - LogLevel
      description: The log options for wireless devices and can be used to set log
        levels for a specific type of wireless device.
    WirelessDeviceLogOptionList:
      type: array
      items:
        $ref: '#/components/schemas/WirelessDeviceLogOption'
      description: <p>The list of wireless device log options.</p>
    WirelessDeviceName:
      type: string
      minLength: 0
      maxLength: 256
    WirelessDeviceSidewalkStatus:
      type: string
      enum:
      - PROVISIONED
      - REGISTERED
      - ACTIVATED
      - UNKNOWN
    WirelessDeviceStatistics:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceArn'
          description: The Amazon Resource Name of the resource.
        Id:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceId'
          description: The ID of the wireless device reporting the data.
        Type:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceType'
          description: The wireless device type.
        Name:
          allOf:
          - $ref: '#/components/schemas/WirelessDeviceName'
          description: The name of the resource.
        DestinationName:
          allOf:
          - $ref: '#/components/schemas/DestinationName'
          description: The name of the destination to which the device is assigned.
        LastUplinkReceivedAt:
          allOf:
          - $ref: '#/components/schemas/ISODateTimeString'
          description: 'The date and time when the most recent uplink was received.


            Theis value is only valid for 3 months.'
        LoRaWAN:
          allOf:
          - $ref: '#/components/schemas/LoRaWANListDevice'
          description: LoRaWAN device info.
        Sidewalk:
          allOf:
          - $ref: '#/components/schemas/SidewalkListDevice'
          description: The Sidewalk account credentials.
        FuotaDeviceStatus:
          $ref: '#/components/schemas/FuotaDeviceStatus'
        MulticastDeviceStatus:
          allOf:
          - $ref: '#/components/schemas/MulticastDeviceStatus'
          description: The status of the wireless device in the multicast group.
        McGroupId:
          $ref: '#/components/schemas/McGroupId'
      description: Information about a wireless device's operation.
    WirelessDeviceStatisticsList:
      type: array
      items:
        $ref: '#/components/schemas/WirelessDeviceStatistics'
    WirelessDeviceType:
      type: string
      enum:
      - Sidewalk
      - LoRaWAN
    WirelessGatewayArn:
      type: string
    WirelessGatewayEvent:
      type: string
      enum:
      - CUPS_Request
      - Certificate
      description: <p>The event for a log message, if the log message is tied to a
        wireless gateway.</p>
    WirelessGatewayEventLogOption:
      type: object
      properties:
        Event:
          $ref: '#/components/schemas/WirelessGatewayEvent'
        LogLevel:
          $ref: '#/components/schemas/LogLevel'
      required:
      - Event
      - LogLevel
      description: 'The log options for a wireless gateway event and can be used to
        set log levels for a specific wireless gateway event.


        For a LoRaWAN gateway, possible events for a log message are `CUPS_Request`
        and `Certificate`.'
    WirelessGatewayEventLogOptionList:
      type: array
      items:
        $ref: '#/components/schemas/WirelessGatewayEventLogOption'
      description: <p>The list of wireless gateway event log options.</p>
    WirelessGatewayId:
      type: string
      minLength: 0
      maxLength: 256
    WirelessGatewayIdType:
      type: string
      enum:
      - GatewayEui
      - WirelessGatewayId
      - ThingName
    WirelessGatewayList:
      type: array
      items:
        $ref: '#/components/schemas/WirelessGatewayId'
    WirelessGatewayLogOption:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/WirelessGatewayType'
        LogLevel:
          $ref: '#/components/schemas/LogLevel'
        Events:
          $ref: '#/components/schemas/WirelessGatewayEventLogOptionList'
      required:
      - Type
      - LogLevel
      description: The log options for wireless gateways and can be used to set log
        levels for a specific type of wireless gateway.
    WirelessGatewayLogOptionList:
      type: array
      items:
        $ref: '#/components/schemas/WirelessGatewayLogOption'
      description: <p>The list of wireless gateway log options.</p>
    WirelessGatewayName:
      type: string
      minLength: 0
      maxLength: 256
    WirelessGatewayServiceType:
      type: string
      enum:
      - CUPS
      - LNS
    WirelessGatewayStatistics:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayArn'
          description: The Amazon Resource Name of the resource.
        Id:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayId'
          description: The ID of the wireless gateway reporting the data.
        Name:
          allOf:
          - $ref: '#/components/schemas/WirelessGatewayName'
          description: The name of the resource.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the resource.
        LoRaWAN:
          allOf:
          - $ref: '#/components/schemas/LoRaWANGateway'
          description: LoRaWAN gateway info.
        LastUplinkReceivedAt:
          allOf:
          - $ref: '#/components/schemas/ISODateTimeString'
          description: 'The date and time when the most recent uplink was received.


            This value is only valid for 3 months.'
      description: Information about a wireless gateway's operation.
    WirelessGatewayStatisticsList:
      type: array
      items:
        $ref: '#/components/schemas/WirelessGatewayStatistics'
    WirelessGatewayTaskDefinitionArn:
      type: string
    WirelessGatewayTaskDefinitionId:
      type: string
      pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      minLength: 0
      maxLength: 36
    WirelessGatewayTaskDefinitionList:
      type: array
      items:
        $ref: '#/components/schemas/UpdateWirelessGatewayTaskEntry'
    WirelessGatewayTaskDefinitionType:
      type: string
      enum:
      - UPDATE
    WirelessGatewayTaskName:
      type: string
      minLength: 1
      maxLength: 2048
    WirelessGatewayTaskStatus:
      type: string
      enum:
      - PENDING
      - IN_PROGRESS
      - FIRST_RETRY
      - SECOND_RETRY
      - COMPLETED
      - FAILED
    WirelessGatewayType:
      type: string
      enum:
      - LoRaWAN
      description: <p>The wireless gateway type.</p>
    WirelessMetadata:
      type: object
      properties:
        LoRaWAN:
          allOf:
          - $ref: '#/components/schemas/LoRaWANSendDataToDevice'
          description: LoRaWAN device info.
        Sidewalk:
          allOf:
          - $ref: '#/components/schemas/SidewalkSendDataToDevice'
          description: The Sidewalk account credentials.
      description: WirelessMetadata object.
