openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: pca_connector_ad
  x-aws-serviceName: pcaconnectorad
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2018-05-10'
  title: PcaConnectorAd
  description: |-
    Amazon Web Services Private CA Connector for Active Directory creates a connector between Amazon Web Services Private CA and Active Directory (AD) that enables you to provision security certificates for AD signed by a private CA that you own. For more information, see [Amazon Web Services Private CA Connector for Active Directory](https://docs.aws.amazon.com/privateca/latest/userguide/ad-connector.html).
servers:
- description: The PcaConnectorAd regional endpoint
  url: https://pca-connector-ad.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /connectors:
    post:
      operationId: CreateConnector
      description: |-
        Creates a connector between Amazon Web Services Private CA and an Active Directory. You must specify the private CA, directory ID, and security groups.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DirectoryId:
                  $ref: '#/components/schemas/DirectoryId'
                CertificateAuthorityArn:
                  $ref: '#/components/schemas/CertificateAuthorityArn'
                VpcInformation:
                  $ref: '#/components/schemas/VpcInformation'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
                Tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '202': {}
        '403':
          description: |-
            You can receive this error if you attempt to create a resource share when you don't have the required permissions. This can be caused by insufficient permissions in policies attached to your Amazon Web Services Identity and Access Management (IAM) principal. It can also happen because of restrictions in place from an Amazon Web Services Organizations service control policy (SCP) that affects your Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This request cannot be completed for one of the following reasons because the requested resource was being concurrently modified by another request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure with an internal server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access a nonexistent resource. The resource might not be specified correctly, or its status might not be ACTIVE.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            Request would cause a service quota to be exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            An input validation error occurred. For example, invalid characters in a template name, or if a pagination token is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListConnectors
      description: |-
        Lists the connectors that you created by using the <https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateConnector> action.
      parameters:
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You can receive this error if you attempt to create a resource share when you don't have the required permissions. This can be caused by insufficient permissions in policies attached to your Amazon Web Services Identity and Access Management (IAM) principal. It can also happen because of restrictions in place from an Amazon Web Services Organizations service control policy (SCP) that affects your Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure with an internal server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            An input validation error occurred. For example, invalid characters in a template name, or if a pagination token is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /directoryRegistrations:
    post:
      operationId: CreateDirectoryRegistration
      description: |-
        Creates a directory registration that authorizes communication between Amazon Web Services Private CA and an Active Directory
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DirectoryId:
                  $ref: '#/components/schemas/DirectoryId'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
                Tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '202': {}
        '403':
          description: |-
            You can receive this error if you attempt to create a resource share when you don't have the required permissions. This can be caused by insufficient permissions in policies attached to your Amazon Web Services Identity and Access Management (IAM) principal. It can also happen because of restrictions in place from an Amazon Web Services Organizations service control policy (SCP) that affects your Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This request cannot be completed for one of the following reasons because the requested resource was being concurrently modified by another request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure with an internal server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access a nonexistent resource. The resource might not be specified correctly, or its status might not be ACTIVE.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            An input validation error occurred. For example, invalid characters in a template name, or if a pagination token is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListDirectoryRegistrations
      description: |-
        Lists the directory registrations that you created by using the <https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateDirectoryRegistration> action.
      parameters:
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You can receive this error if you attempt to create a resource share when you don't have the required permissions. This can be caused by insufficient permissions in policies attached to your Amazon Web Services Identity and Access Management (IAM) principal. It can also happen because of restrictions in place from an Amazon Web Services Organizations service control policy (SCP) that affects your Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure with an internal server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            An input validation error occurred. For example, invalid characters in a template name, or if a pagination token is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /directoryRegistrations/{DirectoryRegistrationArn}/servicePrincipalNames/{ConnectorArn}:
    post:
      operationId: CreateServicePrincipalName
      description: |-
        Creates a service principal name (SPN) for the service account in Active Directory. Kerberos authentication uses SPNs to associate a service instance with a service sign-in account.
      parameters:
      - name: DirectoryRegistrationArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DirectoryRegistrationArn'
      - name: ConnectorArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConnectorArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '202': {}
        '403':
          description: |-
            You can receive this error if you attempt to create a resource share when you don't have the required permissions. This can be caused by insufficient permissions in policies attached to your Amazon Web Services Identity and Access Management (IAM) principal. It can also happen because of restrictions in place from an Amazon Web Services Organizations service control policy (SCP) that affects your Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This request cannot be completed for one of the following reasons because the requested resource was being concurrently modified by another request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure with an internal server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access a nonexistent resource. The resource might not be specified correctly, or its status might not be ACTIVE.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            An input validation error occurred. For example, invalid characters in a template name, or if a pagination token is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: DeleteServicePrincipalName
      description: |-
        Deletes the service principal name (SPN) used by a connector to authenticate with your Active Directory.
      parameters:
      - name: DirectoryRegistrationArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DirectoryRegistrationArn'
      - name: ConnectorArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConnectorArn'
      responses:
        '202': {}
        '403':
          description: |-
            You can receive this error if you attempt to create a resource share when you don't have the required permissions. This can be caused by insufficient permissions in policies attached to your Amazon Web Services Identity and Access Management (IAM) principal. It can also happen because of restrictions in place from an Amazon Web Services Organizations service control policy (SCP) that affects your Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This request cannot be completed for one of the following reasons because the requested resource was being concurrently modified by another request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure with an internal server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            An input validation error occurred. For example, invalid characters in a template name, or if a pagination token is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetServicePrincipalName
      description: |-
        Lists the service principal name that the connector uses to authenticate with Active Directory.
      parameters:
      - name: DirectoryRegistrationArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DirectoryRegistrationArn'
      - name: ConnectorArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConnectorArn'
      responses:
        '200': {}
        '403':
          description: |-
            You can receive this error if you attempt to create a resource share when you don't have the required permissions. This can be caused by insufficient permissions in policies attached to your Amazon Web Services Identity and Access Management (IAM) principal. It can also happen because of restrictions in place from an Amazon Web Services Organizations service control policy (SCP) that affects your Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure with an internal server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access a nonexistent resource. The resource might not be specified correctly, or its status might not be ACTIVE.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            An input validation error occurred. For example, invalid characters in a template name, or if a pagination token is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /templates:
    post:
      operationId: CreateTemplate
      description: |-
        Creates an Active Directory compatible certificate template. The connectors issues certificates using these templates based on the requester’s Active Directory group membership.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ConnectorArn:
                  $ref: '#/components/schemas/ConnectorArn'
                Name:
                  $ref: '#/components/schemas/TemplateName'
                Definition:
                  $ref: '#/components/schemas/TemplateDefinition'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
                Tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '200': {}
        '403':
          description: |-
            You can receive this error if you attempt to create a resource share when you don't have the required permissions. This can be caused by insufficient permissions in policies attached to your Amazon Web Services Identity and Access Management (IAM) principal. It can also happen because of restrictions in place from an Amazon Web Services Organizations service control policy (SCP) that affects your Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This request cannot be completed for one of the following reasons because the requested resource was being concurrently modified by another request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure with an internal server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access a nonexistent resource. The resource might not be specified correctly, or its status might not be ACTIVE.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            Request would cause a service quota to be exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            An input validation error occurred. For example, invalid characters in a template name, or if a pagination token is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListTemplates
      description: |-
        Lists the templates, if any, that are associated with a connector.
      parameters:
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: ConnectorArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ConnectorArn'
      responses:
        '200': {}
        '403':
          description: |-
            You can receive this error if you attempt to create a resource share when you don't have the required permissions. This can be caused by insufficient permissions in policies attached to your Amazon Web Services Identity and Access Management (IAM) principal. It can also happen because of restrictions in place from an Amazon Web Services Organizations service control policy (SCP) that affects your Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure with an internal server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access a nonexistent resource. The resource might not be specified correctly, or its status might not be ACTIVE.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            An input validation error occurred. For example, invalid characters in a template name, or if a pagination token is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /templates/{TemplateArn}/accessControlEntries:
    post:
      operationId: CreateTemplateGroupAccessControlEntry
      description: |-
        Create a group access control entry. Allow or deny Active Directory groups from enrolling and/or autoenrolling with the template based on the group security identifiers (SIDs).
      parameters:
      - name: TemplateArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TemplateArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                GroupSecurityIdentifier:
                  $ref: '#/components/schemas/GroupSecurityIdentifier'
                GroupDisplayName:
                  $ref: '#/components/schemas/DisplayName'
                AccessRights:
                  $ref: '#/components/schemas/AccessRights'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You can receive this error if you attempt to create a resource share when you don't have the required permissions. This can be caused by insufficient permissions in policies attached to your Amazon Web Services Identity and Access Management (IAM) principal. It can also happen because of restrictions in place from an Amazon Web Services Organizations service control policy (SCP) that affects your Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This request cannot be completed for one of the following reasons because the requested resource was being concurrently modified by another request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure with an internal server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access a nonexistent resource. The resource might not be specified correctly, or its status might not be ACTIVE.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            Request would cause a service quota to be exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            An input validation error occurred. For example, invalid characters in a template name, or if a pagination token is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListTemplateGroupAccessControlEntries
      description: |-
        Lists group access control entries you created.
      parameters:
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: TemplateArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TemplateArn'
      responses:
        '200': {}
        '403':
          description: |-
            You can receive this error if you attempt to create a resource share when you don't have the required permissions. This can be caused by insufficient permissions in policies attached to your Amazon Web Services Identity and Access Management (IAM) principal. It can also happen because of restrictions in place from an Amazon Web Services Organizations service control policy (SCP) that affects your Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure with an internal server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access a nonexistent resource. The resource might not be specified correctly, or its status might not be ACTIVE.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            An input validation error occurred. For example, invalid characters in a template name, or if a pagination token is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /connectors/{ConnectorArn}:
    delete:
      operationId: DeleteConnector
      description: |-
        Deletes a connector for Active Directory. You must provide the Amazon Resource Name (ARN) of the connector that you want to delete. You can find the ARN by calling the <https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_ListConnectors> action. Deleting a connector does not deregister your directory with Amazon Web Services Private CA. You can deregister your directory by calling the <https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_DeleteDirectoryRegistration> action.
      parameters:
      - name: ConnectorArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConnectorArn'
      responses:
        '202': {}
        '403':
          description: |-
            You can receive this error if you attempt to create a resource share when you don't have the required permissions. This can be caused by insufficient permissions in policies attached to your Amazon Web Services Identity and Access Management (IAM) principal. It can also happen because of restrictions in place from an Amazon Web Services Organizations service control policy (SCP) that affects your Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This request cannot be completed for one of the following reasons because the requested resource was being concurrently modified by another request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure with an internal server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access a nonexistent resource. The resource might not be specified correctly, or its status might not be ACTIVE.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            An input validation error occurred. For example, invalid characters in a template name, or if a pagination token is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetConnector
      description: |-
        Lists information about your connector. You specify the connector on input by its ARN (Amazon Resource Name).
      parameters:
      - name: ConnectorArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConnectorArn'
      responses:
        '200': {}
        '403':
          description: |-
            You can receive this error if you attempt to create a resource share when you don't have the required permissions. This can be caused by insufficient permissions in policies attached to your Amazon Web Services Identity and Access Management (IAM) principal. It can also happen because of restrictions in place from an Amazon Web Services Organizations service control policy (SCP) that affects your Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure with an internal server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access a nonexistent resource. The resource might not be specified correctly, or its status might not be ACTIVE.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            An input validation error occurred. For example, invalid characters in a template name, or if a pagination token is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /directoryRegistrations/{DirectoryRegistrationArn}:
    delete:
      operationId: DeleteDirectoryRegistration
      description: |-
        Deletes a directory registration. Deleting a directory registration deauthorizes Amazon Web Services Private CA with the directory.
      parameters:
      - name: DirectoryRegistrationArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DirectoryRegistrationArn'
      responses:
        '202': {}
        '403':
          description: |-
            You can receive this error if you attempt to create a resource share when you don't have the required permissions. This can be caused by insufficient permissions in policies attached to your Amazon Web Services Identity and Access Management (IAM) principal. It can also happen because of restrictions in place from an Amazon Web Services Organizations service control policy (SCP) that affects your Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This request cannot be completed for one of the following reasons because the requested resource was being concurrently modified by another request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure with an internal server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            An input validation error occurred. For example, invalid characters in a template name, or if a pagination token is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetDirectoryRegistration
      description: |-
        A structure that contains information about your directory registration.
      parameters:
      - name: DirectoryRegistrationArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DirectoryRegistrationArn'
      responses:
        '200': {}
        '403':
          description: |-
            You can receive this error if you attempt to create a resource share when you don't have the required permissions. This can be caused by insufficient permissions in policies attached to your Amazon Web Services Identity and Access Management (IAM) principal. It can also happen because of restrictions in place from an Amazon Web Services Organizations service control policy (SCP) that affects your Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure with an internal server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access a nonexistent resource. The resource might not be specified correctly, or its status might not be ACTIVE.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            An input validation error occurred. For example, invalid characters in a template name, or if a pagination token is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /templates/{TemplateArn}:
    delete:
      operationId: DeleteTemplate
      description: |-
        Deletes a template. Certificates issued using the template are still valid until they are revoked or expired.
      parameters:
      - name: TemplateArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TemplateArn'
      responses:
        '202': {}
        '403':
          description: |-
            You can receive this error if you attempt to create a resource share when you don't have the required permissions. This can be caused by insufficient permissions in policies attached to your Amazon Web Services Identity and Access Management (IAM) principal. It can also happen because of restrictions in place from an Amazon Web Services Organizations service control policy (SCP) that affects your Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This request cannot be completed for one of the following reasons because the requested resource was being concurrently modified by another request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure with an internal server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access a nonexistent resource. The resource might not be specified correctly, or its status might not be ACTIVE.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            An input validation error occurred. For example, invalid characters in a template name, or if a pagination token is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetTemplate
      description: |-
        Retrieves a certificate template that the connector uses to issue certificates from a private CA.
      parameters:
      - name: TemplateArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TemplateArn'
      responses:
        '200': {}
        '403':
          description: |-
            You can receive this error if you attempt to create a resource share when you don't have the required permissions. This can be caused by insufficient permissions in policies attached to your Amazon Web Services Identity and Access Management (IAM) principal. It can also happen because of restrictions in place from an Amazon Web Services Organizations service control policy (SCP) that affects your Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure with an internal server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access a nonexistent resource. The resource might not be specified correctly, or its status might not be ACTIVE.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            An input validation error occurred. For example, invalid characters in a template name, or if a pagination token is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateTemplate
      description: |-
        Update template configuration to define the information included in certificates.
      parameters:
      - name: TemplateArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TemplateArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Definition:
                  $ref: '#/components/schemas/TemplateDefinition'
                ReenrollAllCertificateHolders:
                  $ref: '#/components/schemas/Boolean'
      responses:
        '200': {}
        '403':
          description: |-
            You can receive this error if you attempt to create a resource share when you don't have the required permissions. This can be caused by insufficient permissions in policies attached to your Amazon Web Services Identity and Access Management (IAM) principal. It can also happen because of restrictions in place from an Amazon Web Services Organizations service control policy (SCP) that affects your Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This request cannot be completed for one of the following reasons because the requested resource was being concurrently modified by another request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure with an internal server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access a nonexistent resource. The resource might not be specified correctly, or its status might not be ACTIVE.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            An input validation error occurred. For example, invalid characters in a template name, or if a pagination token is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /templates/{TemplateArn}/accessControlEntries/{GroupSecurityIdentifier}:
    delete:
      operationId: DeleteTemplateGroupAccessControlEntry
      description: |-
        Deletes a group access control entry.
      parameters:
      - name: TemplateArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TemplateArn'
      - name: GroupSecurityIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GroupSecurityIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            You can receive this error if you attempt to create a resource share when you don't have the required permissions. This can be caused by insufficient permissions in policies attached to your Amazon Web Services Identity and Access Management (IAM) principal. It can also happen because of restrictions in place from an Amazon Web Services Organizations service control policy (SCP) that affects your Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This request cannot be completed for one of the following reasons because the requested resource was being concurrently modified by another request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure with an internal server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access a nonexistent resource. The resource might not be specified correctly, or its status might not be ACTIVE.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            An input validation error occurred. For example, invalid characters in a template name, or if a pagination token is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetTemplateGroupAccessControlEntry
      description: |-
        Retrieves the group access control entries for a template.
      parameters:
      - name: TemplateArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TemplateArn'
      - name: GroupSecurityIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GroupSecurityIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            You can receive this error if you attempt to create a resource share when you don't have the required permissions. This can be caused by insufficient permissions in policies attached to your Amazon Web Services Identity and Access Management (IAM) principal. It can also happen because of restrictions in place from an Amazon Web Services Organizations service control policy (SCP) that affects your Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure with an internal server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access a nonexistent resource. The resource might not be specified correctly, or its status might not be ACTIVE.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            An input validation error occurred. For example, invalid characters in a template name, or if a pagination token is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateTemplateGroupAccessControlEntry
      description: |-
        Update a group access control entry you created using [CreateTemplateGroupAccessControlEntry](https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateTemplateGroupAccessControlEntry.html).
      parameters:
      - name: TemplateArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TemplateArn'
      - name: GroupSecurityIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GroupSecurityIdentifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                GroupDisplayName:
                  $ref: '#/components/schemas/DisplayName'
                AccessRights:
                  $ref: '#/components/schemas/AccessRights'
      responses:
        '200': {}
        '403':
          description: |-
            You can receive this error if you attempt to create a resource share when you don't have the required permissions. This can be caused by insufficient permissions in policies attached to your Amazon Web Services Identity and Access Management (IAM) principal. It can also happen because of restrictions in place from an Amazon Web Services Organizations service control policy (SCP) that affects your Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This request cannot be completed for one of the following reasons because the requested resource was being concurrently modified by another request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure with an internal server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access a nonexistent resource. The resource might not be specified correctly, or its status might not be ACTIVE.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            An input validation error occurred. For example, invalid characters in a template name, or if a pagination token is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /directoryRegistrations/{DirectoryRegistrationArn}/servicePrincipalNames:
    get:
      operationId: ListServicePrincipalNames
      description: |-
        Lists the service principal names that the connector uses to authenticate with Active Directory.
      parameters:
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: DirectoryRegistrationArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DirectoryRegistrationArn'
      responses:
        '200': {}
        '403':
          description: |-
            You can receive this error if you attempt to create a resource share when you don't have the required permissions. This can be caused by insufficient permissions in policies attached to your Amazon Web Services Identity and Access Management (IAM) principal. It can also happen because of restrictions in place from an Amazon Web Services Organizations service control policy (SCP) that affects your Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure with an internal server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access a nonexistent resource. The resource might not be specified correctly, or its status might not be ACTIVE.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            An input validation error occurred. For example, invalid characters in a template name, or if a pagination token is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tags/{ResourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Lists the tags, if any, that are associated with your resource.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            You can receive this error if you attempt to create a resource share when you don't have the required permissions. This can be caused by insufficient permissions in policies attached to your Amazon Web Services Identity and Access Management (IAM) principal. It can also happen because of restrictions in place from an Amazon Web Services Organizations service control policy (SCP) that affects your Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure with an internal server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access a nonexistent resource. The resource might not be specified correctly, or its status might not be ACTIVE.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            An input validation error occurred. For example, invalid characters in a template name, or if a pagination token is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: TagResource
      description: |-
        Adds one or more tags to your resource.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '204': {}
        '403':
          description: |-
            You can receive this error if you attempt to create a resource share when you don't have the required permissions. This can be caused by insufficient permissions in policies attached to your Amazon Web Services Identity and Access Management (IAM) principal. It can also happen because of restrictions in place from an Amazon Web Services Organizations service control policy (SCP) that affects your Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure with an internal server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access a nonexistent resource. The resource might not be specified correctly, or its status might not be ACTIVE.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            An input validation error occurred. For example, invalid characters in a template name, or if a pagination token is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: UntagResource
      description: |-
        Removes one or more tags from your resource.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeyList'
      responses:
        '204': {}
        '403':
          description: |-
            You can receive this error if you attempt to create a resource share when you don't have the required permissions. This can be caused by insufficient permissions in policies attached to your Amazon Web Services Identity and Access Management (IAM) principal. It can also happen because of restrictions in place from an Amazon Web Services Organizations service control policy (SCP) that affects your Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure with an internal server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access a nonexistent resource. The resource might not be specified correctly, or its status might not be ACTIVE.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            An input validation error occurred. For example, invalid characters in a template name, or if a pagination token is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    AccessControlEntry:
      type: object
      properties:
        GroupDisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: Name of the Active Directory group. This name does not need
            to match the group name in Active Directory.
        GroupSecurityIdentifier:
          allOf:
          - $ref: '#/components/schemas/GroupSecurityIdentifier'
          description: Security identifier (SID) of the group object from Active Directory.
            The SID starts with "S-".
        AccessRights:
          allOf:
          - $ref: '#/components/schemas/AccessRights'
          description: Permissions to allow or deny an Active Directory group to enroll
            or autoenroll certificates issued against a template.
        TemplateArn:
          allOf:
          - $ref: '#/components/schemas/TemplateArn'
          description: The Amazon Resource Name (ARN) that was returned when you called
            [CreateTemplate](https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateTemplate.html).
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time that the Access Control Entry was created.
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time that the Access Control Entry was updated.
      description: An access control entry allows or denies Active Directory groups
        based on their security identifiers (SIDs) from enrolling and/or autoenrolling
        with the template.
    AccessControlEntryList:
      type: array
      items:
        $ref: '#/components/schemas/AccessControlEntrySummary'
    AccessControlEntrySummary:
      type: object
      properties:
        GroupDisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: Name of the Active Directory group. This name does not need
            to match the group name in Active Directory.
        GroupSecurityIdentifier:
          allOf:
          - $ref: '#/components/schemas/GroupSecurityIdentifier'
          description: Security identifier (SID) of the group object from Active Directory.
            The SID starts with "S-".
        AccessRights:
          allOf:
          - $ref: '#/components/schemas/AccessRights'
          description: Allow or deny an Active Directory group from enrolling and
            autoenrolling certificates issued against a template.
        TemplateArn:
          allOf:
          - $ref: '#/components/schemas/TemplateArn'
          description: The Amazon Resource Name (ARN) that was returned when you called
            [CreateTemplate](https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateTemplate.html).
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time that the Access Control Entry was created.
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time that the Access Control Entry was updated.
      description: Summary of group access control entries that allow or deny Active
        Directory groups based on their security identifiers (SIDs) from enrolling
        and/or autofenrolling with the template.
    AccessDeniedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      required:
      - Message
      description: You can receive this error if you attempt to create a resource
        share when you don't have the required permissions. This can be caused by
        insufficient permissions in policies attached to your Amazon Web Services
        Identity and Access Management (IAM) principal. It can also happen because
        of restrictions in place from an Amazon Web Services Organizations service
        control policy (SCP) that affects your Amazon Web Services account.
    AccessRight:
      type: string
      enum:
      - ALLOW
      - DENY
    AccessRights:
      type: object
      properties:
        Enroll:
          allOf:
          - $ref: '#/components/schemas/AccessRight'
          description: Allow or deny an Active Directory group from enrolling certificates
            issued against a template.
        AutoEnroll:
          allOf:
          - $ref: '#/components/schemas/AccessRight'
          description: Allow or deny an Active Directory group from autoenrolling
            certificates issued against a template. The Active Directory group must
            be allowed to enroll to allow autoenrollment
      description: Allow or deny permissions for an Active Directory group to enroll
        or autoenroll certificates for a template.
    ApplicationPolicies:
      type: object
      properties:
        Critical:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Marks the application policy extension as critical.
        Policies:
          allOf:
          - $ref: '#/components/schemas/ApplicationPolicyList'
          description: Application policies describe what the certificate can be used
            for.
      required:
      - Policies
      description: Application policies describe what the certificate can be used
        for.
    ApplicationPolicy:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/ApplicationPolicyType'
        description: |-
          The type of application policy
      - allOf:
        - $ref: '#/components/schemas/CustomObjectIdentifier'
        description: |-
          The object identifier (OID) of an application policy.
      description: |-
        Application policies describe what the certificate can be used for.
    ApplicationPolicyList:
      type: array
      items:
        $ref: '#/components/schemas/ApplicationPolicy'
    ApplicationPolicyType:
      type: string
      enum:
      - ALL_APPLICATION_POLICIES
      - ANY_PURPOSE
      - ATTESTATION_IDENTITY_KEY_CERTIFICATE
      - CERTIFICATE_REQUEST_AGENT
      - CLIENT_AUTHENTICATION
      - CODE_SIGNING
      - CTL_USAGE
      - DIGITAL_RIGHTS
      - DIRECTORY_SERVICE_EMAIL_REPLICATION
      - DISALLOWED_LIST
      - DNS_SERVER_TRUST
      - DOCUMENT_ENCRYPTION
      - DOCUMENT_SIGNING
      - DYNAMIC_CODE_GENERATOR
      - EARLY_LAUNCH_ANTIMALWARE_DRIVER
      - EMBEDDED_WINDOWS_SYSTEM_COMPONENT_VERIFICATION
      - ENCLAVE
      - ENCRYPTING_FILE_SYSTEM
      - ENDORSEMENT_KEY_CERTIFICATE
      - FILE_RECOVERY
      - HAL_EXTENSION
      - IP_SECURITY_END_SYSTEM
      - IP_SECURITY_IKE_INTERMEDIATE
      - IP_SECURITY_TUNNEL_TERMINATION
      - IP_SECURITY_USER
      - ISOLATED_USER_MODE
      - KDC_AUTHENTICATION
      - KERNEL_MODE_CODE_SIGNING
      - KEY_PACK_LICENSES
      - KEY_RECOVERY
      - KEY_RECOVERY_AGENT
      - LICENSE_SERVER_VERIFICATION
      - LIFETIME_SIGNING
      - MICROSOFT_PUBLISHER
      - MICROSOFT_TIME_STAMPING
      - MICROSOFT_TRUST_LIST_SIGNING
      - OCSP_SIGNING
      - OEM_WINDOWS_SYSTEM_COMPONENT_VERIFICATION
      - PLATFORM_CERTIFICATE
      - PREVIEW_BUILD_SIGNING
      - PRIVATE_KEY_ARCHIVAL
      - PROTECTED_PROCESS_LIGHT_VERIFICATION
      - PROTECTED_PROCESS_VERIFICATION
      - QUALIFIED_SUBORDINATION
      - REVOKED_LIST_SIGNER
      - ROOT_PROGRAM_AUTO_UPDATE_CA_REVOCATION
      - ROOT_PROGRAM_AUTO_UPDATE_END_REVOCATION
      - ROOT_PROGRAM_NO_OSCP_FAILOVER_TO_CRL
      - ROOT_LIST_SIGNER
      - SECURE_EMAIL
      - SERVER_AUTHENTICATION
      - SMART_CARD_LOGIN
      - SPC_ENCRYPTED_DIGEST_RETRY_COUNT
      - SPC_RELAXED_PE_MARKER_CHECK
      - TIME_STAMPING
      - WINDOWS_HARDWARE_DRIVER_ATTESTED_VERIFICATION
      - WINDOWS_HARDWARE_DRIVER_EXTENDED_VERIFICATION
      - WINDOWS_HARDWARE_DRIVER_VERIFICATION
      - WINDOWS_HELLO_RECOVERY_KEY_ENCRYPTION
      - WINDOWS_KITS_COMPONENT
      - WINDOWS_RT_VERIFICATION
      - WINDOWS_SOFTWARE_EXTENSION_VERIFICATION
      - WINDOWS_STORE
      - WINDOWS_SYSTEM_COMPONENT_VERIFICATION
      - WINDOWS_TCB_COMPONENT
      - WINDOWS_THIRD_PARTY_APPLICATION_COMPONENT
      - WINDOWS_UPDATE
    CertificateAuthorityArn:
      type: string
      pattern: ^arn:[\w-]+:acm-pca:[\w-]+:[0-9]+:certificate-authority\/[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}$
      minLength: 5
      maxLength: 200
    CertificateValidity:
      type: object
      properties:
        ValidityPeriod:
          allOf:
          - $ref: '#/components/schemas/ValidityPeriod'
          description: Information describing the end of the validity period of the
            certificate. This parameter sets the “Not After” date for the certificate.
            Certificate validity is the period of time during which a certificate
            is valid. Validity can be expressed as an explicit date and time when
            the certificate expires, or as a span of time after issuance, stated in
            days, months, or years. For more information, see Validity in RFC 5280.
            This value is unaffected when ValidityNotBefore is also specified. For
            example, if Validity is set to 20 days in the future, the certificate
            will expire 20 days from issuance time regardless of the ValidityNotBefore
            value.
        RenewalPeriod:
          allOf:
          - $ref: '#/components/schemas/ValidityPeriod'
          description: Renewal period is the period of time before certificate expiration
            when a new certificate will be requested.
      required:
      - ValidityPeriod
      - RenewalPeriod
      description: Information describing the end of the validity period of the certificate.
        This parameter sets the “Not After” date for the certificate. Certificate
        validity is the period of time during which a certificate is valid. Validity
        can be expressed as an explicit date and time when the certificate expires,
        or as a span of time after issuance, stated in days, months, or years. For
        more information, see Validity in RFC 5280. This value is unaffected when
        ValidityNotBefore is also specified. For example, if Validity is set to 20
        days in the future, the certificate will expire 20 days from issuance time
        regardless of the ValidityNotBefore value.
    ClientCompatibilityV2:
      type: string
      enum:
      - WINDOWS_SERVER_2003
      - WINDOWS_SERVER_2008
      - WINDOWS_SERVER_2008_R2
      - WINDOWS_SERVER_2012
      - WINDOWS_SERVER_2012_R2
      - WINDOWS_SERVER_2016
    ClientCompatibilityV3:
      type: string
      enum:
      - WINDOWS_SERVER_2008
      - WINDOWS_SERVER_2008_R2
      - WINDOWS_SERVER_2012
      - WINDOWS_SERVER_2012_R2
      - WINDOWS_SERVER_2016
    ClientCompatibilityV4:
      type: string
      enum:
      - WINDOWS_SERVER_2012
      - WINDOWS_SERVER_2012_R2
      - WINDOWS_SERVER_2016
    ClientToken:
      type: string
      pattern: ^[!-~]+$
      minLength: 1
      maxLength: 64
    ConflictException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The identifier of the Amazon Web Services resource.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The resource type, which can be one of `Connector`, `Template`,
            `TemplateGroupAccessControlEntry`, `ServicePrincipalName`, or `DirectoryRegistration`.
      required:
      - Message
      - ResourceId
      - ResourceType
      description: This request cannot be completed for one of the following reasons
        because the requested resource was being concurrently modified by another
        request.
    Connector:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/ConnectorArn'
          description: The Amazon Resource Name (ARN) that was returned when you called
            [CreateConnector](https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateConnector.html).
        CertificateAuthorityArn:
          allOf:
          - $ref: '#/components/schemas/CertificateAuthorityArn'
          description: The Amazon Resource Name (ARN) of the certificate authority
            being used.
        CertificateEnrollmentPolicyServerEndpoint:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Certificate enrollment endpoint for Active Directory domain-joined
            objects reach out to when requesting certificates.
        DirectoryId:
          allOf:
          - $ref: '#/components/schemas/DirectoryId'
          description: The identifier of the Active Directory.
        VpcInformation:
          allOf:
          - $ref: '#/components/schemas/VpcInformation'
          description: Information of the VPC and security group(s) used with the
            connector.
        Status:
          allOf:
          - $ref: '#/components/schemas/ConnectorStatus'
          description: Status of the connector. Status can be creating, active, deleting,
            or failed.
        StatusReason:
          allOf:
          - $ref: '#/components/schemas/ConnectorStatusReason'
          description: Additional information about the connector status if the status
            is failed.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time that the connector was created.
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time that the connector was updated.
      description: Amazon Web Services Private CA Connector for Active Directory is
        a service that links your Active Directory with Amazon Web Services Private
        CA. The connector brokers the exchange of certificates from Amazon Web Services
        Private CA to domain-joined users and machines managed with Active Directory.
    ConnectorArn:
      type: string
      pattern: ^arn:[\w-]+:pca-connector-ad:[\w-]+:[0-9]+:connector\/[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}$
      minLength: 5
      maxLength: 200
    ConnectorList:
      type: array
      items:
        $ref: '#/components/schemas/ConnectorSummary'
    ConnectorStatus:
      type: string
      enum:
      - CREATING
      - ACTIVE
      - DELETING
      - FAILED
    ConnectorStatusReason:
      type: string
      enum:
      - CA_CERTIFICATE_REGISTRATION_FAILED
      - DIRECTORY_ACCESS_DENIED
      - INTERNAL_FAILURE
      - INSUFFICIENT_FREE_ADDRESSES
      - INVALID_SUBNET_IP_PROTOCOL
      - PRIVATECA_ACCESS_DENIED
      - PRIVATECA_RESOURCE_NOT_FOUND
      - SECURITY_GROUP_NOT_IN_VPC
      - VPC_ACCESS_DENIED
      - VPC_ENDPOINT_LIMIT_EXCEEDED
      - VPC_RESOURCE_NOT_FOUND
    ConnectorSummary:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/ConnectorArn'
          description: The Amazon Resource Name (ARN) that was returned when you called
            [CreateConnector](https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateConnector.html).
        CertificateAuthorityArn:
          allOf:
          - $ref: '#/components/schemas/CertificateAuthorityArn'
          description: The Amazon Resource Name (ARN) of the certificate authority
            being used.
        CertificateEnrollmentPolicyServerEndpoint:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Certificate enrollment endpoint for Active Directory domain-joined
            objects to request certificates.
        DirectoryId:
          allOf:
          - $ref: '#/components/schemas/DirectoryId'
          description: The identifier of the Active Directory.
        VpcInformation:
          allOf:
          - $ref: '#/components/schemas/VpcInformation'
          description: Information of the VPC and security group(s) used with the
            connector.
        Status:
          allOf:
          - $ref: '#/components/schemas/ConnectorStatus'
          description: Status of the connector. Status can be creating, active, deleting,
            or failed.
        StatusReason:
          allOf:
          - $ref: '#/components/schemas/ConnectorStatusReason'
          description: Additional information about the connector status if the status
            is failed.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time that the connector was created.
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time that the connector was updated.
      description: Summary description of the Amazon Web Services Private CA AD connectors
        belonging to an Amazon Web Services account.
    CreateConnectorRequest:
      type: object
      properties:
        DirectoryId:
          allOf:
          - $ref: '#/components/schemas/DirectoryId'
          description: The identifier of the Active Directory.
        CertificateAuthorityArn:
          allOf:
          - $ref: '#/components/schemas/CertificateAuthorityArn'
          description: The Amazon Resource Name (ARN) of the certificate authority
            being used.
        VpcInformation:
          allOf:
          - $ref: '#/components/schemas/VpcInformation'
          description: Information about your VPC and security groups used with the
            connector.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: Idempotency token.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: Metadata assigned to a connector consisting of a key-value
            pair.
      required:
      - DirectoryId
      - CertificateAuthorityArn
      - VpcInformation
    CreateConnectorResponse:
      type: object
      properties:
        ConnectorArn:
          allOf:
          - $ref: '#/components/schemas/ConnectorArn'
          description: If successful, the Amazon Resource Name (ARN) of the connector
            for Active Directory.
    CreateDirectoryRegistrationRequest:
      type: object
      properties:
        DirectoryId:
          allOf:
          - $ref: '#/components/schemas/DirectoryId'
          description: The identifier of the Active Directory.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: Idempotency token.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: Metadata assigned to a directory registration consisting of
            a key-value pair.
      required:
      - DirectoryId
    CreateDirectoryRegistrationResponse:
      type: object
      properties:
        DirectoryRegistrationArn:
          allOf:
          - $ref: '#/components/schemas/DirectoryRegistrationArn'
          description: The Amazon Resource Name (ARN) that was returned when you called
            [CreateDirectoryRegistration](https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateDirectoryRegistration.html).
    CreateServicePrincipalNameRequest:
      type: object
      properties:
        DirectoryRegistrationArn:
          allOf:
          - $ref: '#/components/schemas/DirectoryRegistrationArn'
          description: The Amazon Resource Name (ARN) that was returned when you called
            [CreateDirectoryRegistration](https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateDirectoryRegistration.html).
        ConnectorArn:
          allOf:
          - $ref: '#/components/schemas/ConnectorArn'
          description: The Amazon Resource Name (ARN) that was returned when you called
            [CreateConnector](https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateConnector.html).
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: Idempotency token.
      required:
      - DirectoryRegistrationArn
      - ConnectorArn
    CreateTemplateGroupAccessControlEntryRequest:
      type: object
      properties:
        TemplateArn:
          allOf:
          - $ref: '#/components/schemas/TemplateArn'
          description: The Amazon Resource Name (ARN) that was returned when you called
            [CreateTemplate](https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateTemplate.html).
        GroupSecurityIdentifier:
          allOf:
          - $ref: '#/components/schemas/GroupSecurityIdentifier'
          description: Security identifier (SID) of the group object from Active Directory.
            The SID starts with "S-".
        GroupDisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: Name of the Active Directory group. This name does not need
            to match the group name in Active Directory.
        AccessRights:
          allOf:
          - $ref: '#/components/schemas/AccessRights'
          description: Allow or deny permissions for an Active Directory group to
            enroll or autoenroll certificates for a template.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: Idempotency token.
      required:
      - TemplateArn
      - GroupSecurityIdentifier
      - GroupDisplayName
      - AccessRights
    CreateTemplateRequest:
      type: object
      properties:
        ConnectorArn:
          allOf:
          - $ref: '#/components/schemas/ConnectorArn'
          description: The Amazon Resource Name (ARN) that was returned when you called
            [CreateConnector](https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateConnector.html).
        Name:
          allOf:
          - $ref: '#/components/schemas/TemplateName'
          description: Name of the template. The template name must be unique.
        Definition:
          allOf:
          - $ref: '#/components/schemas/TemplateDefinition'
          description: Template configuration to define the information included in
            certificates. Define certificate validity and renewal periods, certificate
            request handling and enrollment options, key usage extensions, application
            policies, and cryptography settings.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: Idempotency token.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: Metadata assigned to a template consisting of a key-value pair.
      required:
      - ConnectorArn
      - Name
      - Definition
    CreateTemplateResponse:
      type: object
      properties:
        TemplateArn:
          allOf:
          - $ref: '#/components/schemas/TemplateArn'
          description: If successful, the Amazon Resource Name (ARN) of the template.
    CryptoProvidersList:
      type: array
      items:
        type: string
    CustomObjectIdentifier:
      type: string
      pattern: ^([0-2])\.([0-9]|([0-3][0-9]))(\.([0-9]+)){0,126}$
      minLength: 1
      maxLength: 64
    DeleteConnectorRequest:
      type: object
      properties:
        ConnectorArn:
          allOf:
          - $ref: '#/components/schemas/ConnectorArn'
          description: The Amazon Resource Name (ARN) that was returned when you called
            [CreateConnector](https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateConnector.html).
      required:
      - ConnectorArn
    DeleteDirectoryRegistrationRequest:
      type: object
      properties:
        DirectoryRegistrationArn:
          allOf:
          - $ref: '#/components/schemas/DirectoryRegistrationArn'
          description: The Amazon Resource Name (ARN) that was returned when you called
            [CreateDirectoryRegistration](https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateDirectoryRegistration.html).
      required:
      - DirectoryRegistrationArn
    DeleteServicePrincipalNameRequest:
      type: object
      properties:
        DirectoryRegistrationArn:
          allOf:
          - $ref: '#/components/schemas/DirectoryRegistrationArn'
          description: The Amazon Resource Name (ARN) that was returned when you called
            [CreateDirectoryRegistration](https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateDirectoryRegistration.html).
        ConnectorArn:
          allOf:
          - $ref: '#/components/schemas/ConnectorArn'
          description: The Amazon Resource Name (ARN) that was returned when you called
            [CreateConnector](https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateConnector.html).
      required:
      - DirectoryRegistrationArn
      - ConnectorArn
    DeleteTemplateGroupAccessControlEntryRequest:
      type: object
      properties:
        TemplateArn:
          allOf:
          - $ref: '#/components/schemas/TemplateArn'
          description: The Amazon Resource Name (ARN) that was returned when you called
            [CreateTemplate](https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateTemplate.html).
        GroupSecurityIdentifier:
          allOf:
          - $ref: '#/components/schemas/GroupSecurityIdentifier'
          description: Security identifier (SID) of the group object from Active Directory.
            The SID starts with "S-".
      required:
      - TemplateArn
      - GroupSecurityIdentifier
    DeleteTemplateRequest:
      type: object
      properties:
        TemplateArn:
          allOf:
          - $ref: '#/components/schemas/TemplateArn'
          description: The Amazon Resource Name (ARN) that was returned when you called
            [CreateTemplate](https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateTemplate.html).
      required:
      - TemplateArn
    DirectoryId:
      type: string
      pattern: ^d-[0-9a-f]{10}$
    DirectoryRegistration:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/DirectoryRegistrationArn'
          description: The Amazon Resource Name (ARN) that was returned when you called
            CreateDirectoryRegistration.
        DirectoryId:
          allOf:
          - $ref: '#/components/schemas/DirectoryId'
          description: The identifier of the Active Directory.
        Status:
          allOf:
          - $ref: '#/components/schemas/DirectoryRegistrationStatus'
          description: Status of the directory registration.
        StatusReason:
          allOf:
          - $ref: '#/components/schemas/DirectoryRegistrationStatusReason'
          description: Additional information about the directory registration status
            if the status is failed.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time that the directory registration was created.
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time that the directory registration was updated.
      description: The directory registration represents the authorization of the
        connector service with a directory.
    DirectoryRegistrationArn:
      type: string
      pattern: ^arn:[\w-]+:pca-connector-ad:[\w-]+:[0-9]+:directory-registration\/d-[0-9a-f]{10}$
      minLength: 5
      maxLength: 200
    DirectoryRegistrationList:
      type: array
      items:
        $ref: '#/components/schemas/DirectoryRegistrationSummary'
    DirectoryRegistrationStatus:
      type: string
      enum:
      - CREATING
      - ACTIVE
      - DELETING
      - FAILED
    DirectoryRegistrationStatusReason:
      type: string
      enum:
      - DIRECTORY_ACCESS_DENIED
      - DIRECTORY_RESOURCE_NOT_FOUND
      - DIRECTORY_NOT_ACTIVE
      - DIRECTORY_NOT_REACHABLE
      - DIRECTORY_TYPE_NOT_SUPPORTED
      - INTERNAL_FAILURE
    DirectoryRegistrationSummary:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/DirectoryRegistrationArn'
          description: The Amazon Resource Name (ARN) that was returned when you called
            [CreateDirectoryRegistration](https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateDirectoryRegistration.html).
        DirectoryId:
          allOf:
          - $ref: '#/components/schemas/DirectoryId'
          description: The identifier of the Active Directory.
        Status:
          allOf:
          - $ref: '#/components/schemas/DirectoryRegistrationStatus'
          description: Status of the directory registration.
        StatusReason:
          allOf:
          - $ref: '#/components/schemas/DirectoryRegistrationStatusReason'
          description: Additional information about the directory registration status
            if the status is failed.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time that the directory registration was created.
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time that the directory registration was updated.
      description: The directory registration represents the authorization of the
        connector service with the Active Directory.
    DisplayName:
      type: string
      pattern: ^[\x20-\x7E]+$
      minLength: 0
      maxLength: 256
    EnrollmentFlagsV2:
      type: object
      properties:
        IncludeSymmetricAlgorithms:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Include symmetric algorithms allowed by the subject.
        UserInteractionRequired:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Require user interaction when the subject is enrolled and the
            private key associated with the certificate is used.
        RemoveInvalidCertificateFromPersonalStore:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Delete expired or revoked certificates instead of archiving
            them.
        NoSecurityExtension:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: This flag instructs the CA to not include the security extension
            szOID_NTDS_CA_SECURITY_EXT (OID:1.3.6.1.4.1.311.25.2), as specified in
            [MS-WCCE] sections 2.2.2.7.7.4 and 3.2.2.6.2.1.4.5.9, in the issued certificate.
            This addresses a Windows Kerberos elevation-of-privilege vulnerability.
        EnableKeyReuseOnNtTokenKeysetStorageFull:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Allow renewal using the same key.
      description: Template configurations for v2 template schema.
    EnrollmentFlagsV3:
      type: object
      properties:
        IncludeSymmetricAlgorithms:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Include symmetric algorithms allowed by the subject.
        UserInteractionRequired:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Require user interaction when the subject is enrolled and the
            private key associated with the certificate is used.
        RemoveInvalidCertificateFromPersonalStore:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Delete expired or revoked certificates instead of archiving
            them.
        NoSecurityExtension:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: This flag instructs the CA to not include the security extension
            szOID_NTDS_CA_SECURITY_EXT (OID:1.3.6.1.4.1.311.25.2), as specified in
            [MS-WCCE] sections 2.2.2.7.7.4 and 3.2.2.6.2.1.4.5.9, in the issued certificate.
            This addresses a Windows Kerberos elevation-of-privilege vulnerability.
        EnableKeyReuseOnNtTokenKeysetStorageFull:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Allow renewal using the same key.
      description: Template configurations for v3 template schema.
    EnrollmentFlagsV4:
      type: object
      properties:
        IncludeSymmetricAlgorithms:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Include symmetric algorithms allowed by the subject.
        UserInteractionRequired:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Require user interaction when the subject is enrolled and the
            private key associated with the certificate is used.
        RemoveInvalidCertificateFromPersonalStore:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Delete expired or revoked certificates instead of archiving
            them.
        NoSecurityExtension:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: This flag instructs the CA to not include the security extension
            szOID_NTDS_CA_SECURITY_EXT (OID:1.3.6.1.4.1.311.25.2), as specified in
            [MS-WCCE] sections 2.2.2.7.7.4 and 3.2.2.6.2.1.4.5.9, in the issued certificate.
            This addresses a Windows Kerberos elevation-of-privilege vulnerability.
        EnableKeyReuseOnNtTokenKeysetStorageFull:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Allow renewal using the same key.
      description: Template configurations for v4 template schema.
    ExtensionsV2:
      type: object
      properties:
        KeyUsage:
          allOf:
          - $ref: '#/components/schemas/KeyUsage'
          description: The key usage extension defines the purpose (e.g., encipherment,
            signature, certificate signing) of the key contained in the certificate.
        ApplicationPolicies:
          allOf:
          - $ref: '#/components/schemas/ApplicationPolicies'
          description: Application policies specify what the certificate is used for
            and its purpose.
      required:
      - KeyUsage
      description: Certificate extensions for v2 template schema
    ExtensionsV3:
      type: object
      properties:
        KeyUsage:
          allOf:
          - $ref: '#/components/schemas/KeyUsage'
          description: The key usage extension defines the purpose (e.g., encipherment,
            signature, certificate signing) of the key contained in the certificate.
        ApplicationPolicies:
          allOf:
          - $ref: '#/components/schemas/ApplicationPolicies'
          description: Application policies specify what the certificate is used for
            and its purpose.
      required:
      - KeyUsage
      description: Certificate extensions for v3 template schema
    ExtensionsV4:
      type: object
      properties:
        KeyUsage:
          allOf:
          - $ref: '#/components/schemas/KeyUsage'
          description: The key usage extension defines the purpose (e.g., encipherment,
            signature) of the key contained in the certificate.
        ApplicationPolicies:
          allOf:
          - $ref: '#/components/schemas/ApplicationPolicies'
          description: Application policies specify what the certificate is used for
            and its purpose.
      required:
      - KeyUsage
      description: Certificate extensions for v4 template schema
    GeneralFlagsV2:
      type: object
      properties:
        AutoEnrollment:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Allows certificate issuance using autoenrollment. Set to TRUE
            to allow autoenrollment.
        MachineType:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Defines if the template is for machines or users. Set to TRUE
            if the template is for machines. Set to FALSE if the template is for users.
      description: General flags for v2 template schema that defines if the template
        is for a machine or a user and if the template can be issued using autoenrollment.
    GeneralFlagsV3:
      type: object
      properties:
        AutoEnrollment:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Allows certificate issuance using autoenrollment. Set to TRUE
            to allow autoenrollment.
        MachineType:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Defines if the template is for machines or users. Set to TRUE
            if the template is for machines. Set to FALSE if the template is for users
      description: General flags for v3 template schema that defines if the template
        is for a machine or a user and if the template can be issued using autoenrollment.
    GeneralFlagsV4:
      type: object
      properties:
        AutoEnrollment:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Allows certificate issuance using autoenrollment. Set to TRUE
            to allow autoenrollment.
        MachineType:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Defines if the template is for machines or users. Set to TRUE
            if the template is for machines. Set to FALSE if the template is for users
      description: General flags for v4 template schema that defines if the template
        is for a machine or a user and if the template can be issued using autoenrollment.
    GetConnectorRequest:
      type: object
      properties:
        ConnectorArn:
          allOf:
          - $ref: '#/components/schemas/ConnectorArn'
          description: The Amazon Resource Name (ARN) that was returned when you called
            [CreateConnector](https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateConnector.html).
      required:
      - ConnectorArn
    GetConnectorResponse:
      type: object
      properties:
        Connector:
          allOf:
          - $ref: '#/components/schemas/Connector'
          description: A structure that contains information about your connector.
    GetDirectoryRegistrationRequest:
      type: object
      properties:
        DirectoryRegistrationArn:
          allOf:
          - $ref: '#/components/schemas/DirectoryRegistrationArn'
          description: The Amazon Resource Name (ARN) that was returned when you called
            [CreateDirectoryRegistration](https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateDirectoryRegistration.html).
      required:
      - DirectoryRegistrationArn
    GetDirectoryRegistrationResponse:
      type: object
      properties:
        DirectoryRegistration:
          allOf:
          - $ref: '#/components/schemas/DirectoryRegistration'
          description: The directory registration represents the authorization of
            the connector service with a directory.
    GetServicePrincipalNameRequest:
      type: object
      properties:
        DirectoryRegistrationArn:
          allOf:
          - $ref: '#/components/schemas/DirectoryRegistrationArn'
          description: The Amazon Resource Name (ARN) that was returned when you called
            [CreateDirectoryRegistration](https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateDirectoryRegistration.html).
        ConnectorArn:
          allOf:
          - $ref: '#/components/schemas/ConnectorArn'
          description: The Amazon Resource Name (ARN) that was returned when you called
            [CreateConnector](https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateConnector.html).
      required:
      - DirectoryRegistrationArn
      - ConnectorArn
    GetServicePrincipalNameResponse:
      type: object
      properties:
        ServicePrincipalName:
          allOf:
          - $ref: '#/components/schemas/ServicePrincipalName'
          description: The service principal name that the connector uses to authenticate
            with Active Directory.
    GetTemplateGroupAccessControlEntryRequest:
      type: object
      properties:
        TemplateArn:
          allOf:
          - $ref: '#/components/schemas/TemplateArn'
          description: The Amazon Resource Name (ARN) that was returned when you called
            [CreateTemplate](https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateTemplate.html).
        GroupSecurityIdentifier:
          allOf:
          - $ref: '#/components/schemas/GroupSecurityIdentifier'
          description: Security identifier (SID) of the group object from Active Directory.
            The SID starts with "S-".
      required:
      - TemplateArn
      - GroupSecurityIdentifier
    GetTemplateGroupAccessControlEntryResponse:
      type: object
      properties:
        AccessControlEntry:
          allOf:
          - $ref: '#/components/schemas/AccessControlEntry'
          description: An access control entry allows or denies an Active Directory
            group from enrolling and/or autoenrolling with a template.
    GetTemplateRequest:
      type: object
      properties:
        TemplateArn:
          allOf:
          - $ref: '#/components/schemas/TemplateArn'
          description: The Amazon Resource Name (ARN) that was returned when you called
            [CreateTemplate](https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateTemplate.html).
      required:
      - TemplateArn
    GetTemplateResponse:
      type: object
      properties:
        Template:
          allOf:
          - $ref: '#/components/schemas/Template'
          description: A certificate template that the connector uses to issue certificates
            from a private CA.
    GroupSecurityIdentifier:
      type: string
      pattern: ^S-[0-9]-([0-9]+-){1,14}[0-9]+$
      minLength: 7
      maxLength: 256
    HashAlgorithm:
      type: string
      enum:
      - SHA256
      - SHA384
      - SHA512
    InternalServerException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      required:
      - Message
      description: The request processing has failed because of an unknown error,
        exception or failure with an internal server.
    IpAddressType:
      type: string
      enum:
      - IPV4
      - DUALSTACK
    KeySpec:
      type: string
      enum:
      - KEY_EXCHANGE
      - SIGNATURE
    KeyUsage:
      type: object
      properties:
        Critical:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Sets the key usage extension to critical.
        UsageFlags:
          allOf:
          - $ref: '#/components/schemas/KeyUsageFlags'
          description: The key usage flags represent the purpose (e.g., encipherment,
            signature) of the key contained in the certificate.
      required:
      - UsageFlags
      description: The key usage extension defines the purpose (e.g., encipherment,
        signature) of the key contained in the certificate.
    KeyUsageFlags:
      type: object
      properties:
        DigitalSignature:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: The digitalSignature is asserted when the subject public key
            is used for verifying digital signatures.
        NonRepudiation:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: NonRepudiation is asserted when the subject public key is used
            to verify digital signatures.
        KeyEncipherment:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: KeyEncipherment is asserted when the subject public key is
            used for enciphering private or secret keys, i.e., for key transport.
        DataEncipherment:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: DataEncipherment is asserted when the subject public key is
            used for directly enciphering raw user data without the use of an intermediate
            symmetric cipher.
        KeyAgreement:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: KeyAgreement is asserted when the subject public key is used
            for key agreement.
      description: The key usage flags represent the purpose (e.g., encipherment,
        signature) of the key contained in the certificate.
    KeyUsageProperty:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/KeyUsagePropertyType'
        description: |-
          You can specify all key usages using property type ALL. You can use property type or property flags but not both.
      - allOf:
        - $ref: '#/components/schemas/KeyUsagePropertyFlags'
        description: |-
          You can specify key usage for encryption, key agreement, and signature. You can use property flags or property type but not both.
      description: |-
        The key usage property defines the purpose of the private key contained in the certificate. You can specify specific purposes using property flags or all by using property type ALL.
    KeyUsagePropertyFlags:
      type: object
      properties:
        Decrypt:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Allows key for encryption and decryption.
        KeyAgreement:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Allows key exchange without encryption.
        Sign:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Allow key use for digital signature.
      description: Specifies key usage.
    KeyUsagePropertyType:
      type: string
      enum:
      - ALL
    ListConnectorsRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Use this parameter when paginating results to specify the maximum
            number of items to return in the response on each page. If additional
            items exist beyond the number you specify, the `NextToken` element is
            sent in the response. Use this `NextToken` value in a subsequent request
            to retrieve additional items.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Use this parameter when paginating results in a subsequent
            request after you receive a response with truncated results. Set it to
            the value of the `NextToken` parameter from the response you just received.
    ListConnectorsResponse:
      type: object
      properties:
        Connectors:
          allOf:
          - $ref: '#/components/schemas/ConnectorList'
          description: Summary information about each connector you have created.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Use this parameter when paginating results in a subsequent
            request after you receive a response with truncated results. Set it to
            the value of the NextToken parameter from the response you just received.
    ListDirectoryRegistrationsRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Use this parameter when paginating results to specify the maximum
            number of items to return in the response on each page. If additional
            items exist beyond the number you specify, the `NextToken` element is
            sent in the response. Use this `NextToken` value in a subsequent request
            to retrieve additional items.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Use this parameter when paginating results in a subsequent
            request after you receive a response with truncated results. Set it to
            the value of the `NextToken` parameter from the response you just received.
    ListDirectoryRegistrationsResponse:
      type: object
      properties:
        DirectoryRegistrations:
          allOf:
          - $ref: '#/components/schemas/DirectoryRegistrationList'
          description: Summary information about each directory registration you have
            created.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Use this parameter when paginating results in a subsequent
            request after you receive a response with truncated results. Set it to
            the value of the `NextToken` parameter from the response you just received.
    ListServicePrincipalNamesRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Use this parameter when paginating results to specify the maximum
            number of items to return in the response on each page. If additional
            items exist beyond the number you specify, the `NextToken` element is
            sent in the response. Use this `NextToken` value in a subsequent request
            to retrieve additional items.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Use this parameter when paginating results in a subsequent
            request after you receive a response with truncated results. Set it to
            the value of the `NextToken` parameter from the response you just received.
        DirectoryRegistrationArn:
          allOf:
          - $ref: '#/components/schemas/DirectoryRegistrationArn'
          description: The Amazon Resource Name (ARN) that was returned when you called
            [CreateDirectoryRegistration](https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateDirectoryRegistration.html).
      required:
      - DirectoryRegistrationArn
    ListServicePrincipalNamesResponse:
      type: object
      properties:
        ServicePrincipalNames:
          allOf:
          - $ref: '#/components/schemas/ServicePrincipalNameList'
          description: The service principal name, if any, that the connector uses
            to authenticate with Active Directory.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Use this parameter when paginating results in a subsequent
            request after you receive a response with truncated results. Set it to
            the value of the `NextToken` parameter from the response you just received.
    ListTagsForResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) that was returned when you created
            the resource.
      required:
      - ResourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags, if any, that are associated with your resource.
    ListTemplateGroupAccessControlEntriesRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Use this parameter when paginating results to specify the maximum
            number of items to return in the response on each page. If additional
            items exist beyond the number you specify, the `NextToken` element is
            sent in the response. Use this `NextToken` value in a subsequent request
            to retrieve additional items.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Use this parameter when paginating results in a subsequent
            request after you receive a response with truncated results. Set it to
            the value of the `NextToken` parameter from the response you just received.
        TemplateArn:
          allOf:
          - $ref: '#/components/schemas/TemplateArn'
          description: The Amazon Resource Name (ARN) that was returned when you called
            [CreateTemplate](https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateTemplate.html).
      required:
      - TemplateArn
    ListTemplateGroupAccessControlEntriesResponse:
      type: object
      properties:
        AccessControlEntries:
          allOf:
          - $ref: '#/components/schemas/AccessControlEntryList'
          description: An access control entry grants or denies permission to an Active
            Directory group to enroll certificates for a template.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Use this parameter when paginating results in a subsequent
            request after you receive a response with truncated results. Set it to
            the value of the `NextToken` parameter from the response you just received.
    ListTemplatesRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Use this parameter when paginating results to specify the maximum
            number of items to return in the response on each page. If additional
            items exist beyond the number you specify, the `NextToken` element is
            sent in the response. Use this `NextToken` value in a subsequent request
            to retrieve additional items.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Use this parameter when paginating results in a subsequent
            request after you receive a response with truncated results. Set it to
            the value of the `NextToken` parameter from the response you just received.
        ConnectorArn:
          allOf:
          - $ref: '#/components/schemas/ConnectorArn'
          description: The Amazon Resource Name (ARN) that was returned when you called
            [CreateConnector](https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateConnector.html).
      required:
      - ConnectorArn
    ListTemplatesResponse:
      type: object
      properties:
        Templates:
          allOf:
          - $ref: '#/components/schemas/TemplateList'
          description: Custom configuration templates used when issuing a certificate.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Use this parameter when paginating results in a subsequent
            request after you receive a response with truncated results. Set it to
            the value of the `NextToken` parameter from the response you just received.
    MaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    NextToken:
      type: string
      pattern: ^(?:[A-Za-z0-9_-]{4})*(?:[A-Za-z0-9_-]{2}==|[A-Za-z0-9_-]{3}=)?$
      minLength: 1
      maxLength: 1000
    PrivateKeyAlgorithm:
      type: string
      enum:
      - RSA
      - ECDH_P256
      - ECDH_P384
      - ECDH_P521
    PrivateKeyAttributesV2:
      type: object
      properties:
        MinimalKeyLength:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Set the minimum key length of the private key.
        KeySpec:
          allOf:
          - $ref: '#/components/schemas/KeySpec'
          description: Defines the purpose of the private key. Set it to "KEY_EXCHANGE"
            or "SIGNATURE" value.
        CryptoProviders:
          allOf:
          - $ref: '#/components/schemas/CryptoProvidersList'
          description: Defines the cryptographic providers used to generate the private
            key.
      required:
      - MinimalKeyLength
      - KeySpec
      description: Defines the attributes of the private key.
    PrivateKeyAttributesV3:
      type: object
      properties:
        MinimalKeyLength:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Set the minimum key length of the private key.
        KeySpec:
          allOf:
          - $ref: '#/components/schemas/KeySpec'
          description: Defines the purpose of the private key. Set it to "KEY_EXCHANGE"
            or "SIGNATURE" value.
        CryptoProviders:
          allOf:
          - $ref: '#/components/schemas/CryptoProvidersList'
          description: Defines the cryptographic providers used to generate the private
            key.
        KeyUsageProperty:
          allOf:
          - $ref: '#/components/schemas/KeyUsageProperty'
          description: The key usage property defines the purpose of the private key
            contained in the certificate. You can specify specific purposes using
            property flags or all by using property type ALL.
        Algorithm:
          allOf:
          - $ref: '#/components/schemas/PrivateKeyAlgorithm'
          description: Defines the algorithm used to generate the private key.
      required:
      - MinimalKeyLength
      - KeySpec
      - KeyUsageProperty
      - Algorithm
      description: Defines the attributes of the private key.
    PrivateKeyAttributesV4:
      type: object
      properties:
        MinimalKeyLength:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Set the minimum key length of the private key.
        KeySpec:
          allOf:
          - $ref: '#/components/schemas/KeySpec'
          description: Defines the purpose of the private key. Set it to "KEY_EXCHANGE"
            or "SIGNATURE" value.
        CryptoProviders:
          allOf:
          - $ref: '#/components/schemas/CryptoProvidersList'
          description: Defines the cryptographic providers used to generate the private
            key.
        KeyUsageProperty:
          allOf:
          - $ref: '#/components/schemas/KeyUsageProperty'
          description: The key usage property defines the purpose of the private key
            contained in the certificate. You can specify specific purposes using
            property flags or all by using property type ALL.
        Algorithm:
          allOf:
          - $ref: '#/components/schemas/PrivateKeyAlgorithm'
          description: Defines the algorithm used to generate the private key.
      required:
      - MinimalKeyLength
      - KeySpec
      description: Defines the attributes of the private key.
    PrivateKeyFlagsV2:
      type: object
      properties:
        ExportableKey:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Allows the private key to be exported.
        StrongKeyProtectionRequired:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Require user input when using the private key for enrollment.
        ClientVersion:
          allOf:
          - $ref: '#/components/schemas/ClientCompatibilityV2'
          description: Defines the minimum client compatibility.
      required:
      - ClientVersion
      description: Private key flags for v2 templates specify the client compatibility,
        if the private key can be exported, and if user input is required when using
        a private key.
    PrivateKeyFlagsV3:
      type: object
      properties:
        ExportableKey:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Allows the private key to be exported.
        StrongKeyProtectionRequired:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Requirer user input when using the private key for enrollment.
        RequireAlternateSignatureAlgorithm:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'Reguires the PKCS #1 v2.1 signature format for certificates.
            You should verify that your CA, objects, and applications can accept this
            signature format.'
        ClientVersion:
          allOf:
          - $ref: '#/components/schemas/ClientCompatibilityV3'
          description: Defines the minimum client compatibility.
      required:
      - ClientVersion
      description: Private key flags for v3 templates specify the client compatibility,
        if the private key can be exported, if user input is required when using a
        private key, and if an alternate signature algorithm should be used.
    PrivateKeyFlagsV4:
      type: object
      properties:
        ExportableKey:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Allows the private key to be exported.
        StrongKeyProtectionRequired:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Require user input when using the private key for enrollment.
        RequireAlternateSignatureAlgorithm:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'Requires the PKCS #1 v2.1 signature format for certificates.
            You should verify that your CA, objects, and applications can accept this
            signature format.'
        RequireSameKeyRenewal:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Renew certificate using the same private key.
        UseLegacyProvider:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies the cryptographic service provider category used
            to generate private keys. Set to TRUE to use Legacy Cryptographic Service
            Providers and FALSE to use Key Storage Providers.
        ClientVersion:
          allOf:
          - $ref: '#/components/schemas/ClientCompatibilityV4'
          description: Defines the minimum client compatibility.
      required:
      - ClientVersion
      description: Private key flags for v4 templates specify the client compatibility,
        if the private key can be exported, if user input is required when using a
        private key, if an alternate signature algorithm should be used, and if certificates
        are renewed using the same private key.
    ResourceNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The identifier of the Amazon Web Services resource.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The resource type, which can be one of `Connector`, `Template`,
            `TemplateGroupAccessControlEntry`, `ServicePrincipalName`, or `DirectoryRegistration`.
      required:
      - Message
      - ResourceId
      - ResourceType
      description: The operation tried to access a nonexistent resource. The resource
        might not be specified correctly, or its status might not be ACTIVE.
    SecurityGroupId:
      type: string
      pattern: ^(?:sg-[0-9a-f]{8}|sg-[0-9a-f]{17})$
      minLength: 11
      maxLength: 20
    SecurityGroupIdList:
      type: array
      items:
        $ref: '#/components/schemas/SecurityGroupId'
    ServicePrincipalName:
      type: object
      properties:
        DirectoryRegistrationArn:
          allOf:
          - $ref: '#/components/schemas/DirectoryRegistrationArn'
          description: The Amazon Resource Name (ARN) that was returned when you called
            [CreateDirectoryRegistration](https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateDirectoryRegistration.html).
        ConnectorArn:
          allOf:
          - $ref: '#/components/schemas/ConnectorArn'
          description: The Amazon Resource Name (ARN) that was returned when you called
            [CreateConnector.html](https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateConnector.html).
        Status:
          allOf:
          - $ref: '#/components/schemas/ServicePrincipalNameStatus'
          description: The status of a service principal name.
        StatusReason:
          allOf:
          - $ref: '#/components/schemas/ServicePrincipalNameStatusReason'
          description: Additional information for the status of a service principal
            name if the status is failed.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time that the service principal name was created.
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time that the service principal name was updated.
      description: The service principal name that the connector uses to authenticate
        with Active Directory.
    ServicePrincipalNameList:
      type: array
      items:
        $ref: '#/components/schemas/ServicePrincipalNameSummary'
    ServicePrincipalNameStatus:
      type: string
      enum:
      - CREATING
      - ACTIVE
      - DELETING
      - FAILED
    ServicePrincipalNameStatusReason:
      type: string
      enum:
      - DIRECTORY_ACCESS_DENIED
      - DIRECTORY_NOT_REACHABLE
      - DIRECTORY_RESOURCE_NOT_FOUND
      - SPN_EXISTS_ON_DIFFERENT_AD_OBJECT
      - SPN_LIMIT_EXCEEDED
      - INTERNAL_FAILURE
    ServicePrincipalNameSummary:
      type: object
      properties:
        DirectoryRegistrationArn:
          allOf:
          - $ref: '#/components/schemas/DirectoryRegistrationArn'
          description: The Amazon Resource Name (ARN) that was returned when you called
            [CreateDirectoryRegistration](https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateDirectoryRegistration.html).
        ConnectorArn:
          allOf:
          - $ref: '#/components/schemas/ConnectorArn'
          description: The Amazon Resource Name (ARN) that was returned when you called
            [CreateConnector](https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateConnector.html).
        Status:
          allOf:
          - $ref: '#/components/schemas/ServicePrincipalNameStatus'
          description: The status of a service principal name.
        StatusReason:
          allOf:
          - $ref: '#/components/schemas/ServicePrincipalNameStatusReason'
          description: Additional information for the status of a service principal
            name if the status is failed.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time that the service principal name was created.
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Time when the service principal name was updated.
      description: The service principal name that the connector uses to authenticate
        with Active Directory.
    ServiceQuotaExceededException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The identifier of the Amazon Web Services resource.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The resource type, which can be one of `Connector`, `Template`,
            `TemplateGroupAccessControlEntry`, `ServicePrincipalName`, or `DirectoryRegistration`.
        ServiceCode:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Identifies the originating service.
        QuotaCode:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The code associated with the service quota.
      required:
      - Message
      - ResourceId
      - ResourceType
      - ServiceCode
      - QuotaCode
      description: Request would cause a service quota to be exceeded.
    SubjectNameFlagsV2:
      type: object
      properties:
        SanRequireDomainDns:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Include the domain DNS in the subject alternate name.
        SanRequireSpn:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Include the service principal name (SPN) in the subject alternate
            name.
        SanRequireDirectoryGuid:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Include the globally unique identifier (GUID) in the subject
            alternate name.
        SanRequireUpn:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Include the user principal name (UPN) in the subject alternate
            name.
        SanRequireEmail:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Include the subject's email in the subject alternate name.
        SanRequireDns:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Include the DNS in the subject alternate name.
        RequireDnsAsCn:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Include the DNS as common name in the subject name.
        RequireEmail:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Include the subject's email in the subject name.
        RequireCommonName:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Include the common name in the subject name.
        RequireDirectoryPath:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Include the directory path in the subject name.
      description: Information to include in the subject name and alternate subject
        name of the certificate. The subject name can be common name, directory path,
        DNS as common name, or left blank. You can optionally include email to the
        subject name for user templates. If you leave the subject name blank then
        you must set a subject alternate name. The subject alternate name (SAN) can
        include globally unique identifier (GUID), DNS, domain DNS, email, service
        principal name (SPN), and user principal name (UPN). You can leave the SAN
        blank. If you leave the SAN blank, then you must set a subject name.
    SubjectNameFlagsV3:
      type: object
      properties:
        SanRequireDomainDns:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Include the domain DNS in the subject alternate name.
        SanRequireSpn:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Include the service principal name (SPN) in the subject alternate
            name.
        SanRequireDirectoryGuid:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Include the globally unique identifier (GUID) in the subject
            alternate name.
        SanRequireUpn:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Include the user principal name (UPN) in the subject alternate
            name.
        SanRequireEmail:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Include the subject's email in the subject alternate name.
        SanRequireDns:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Include the DNS in the subject alternate name.
        RequireDnsAsCn:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Include the DNS as common name in the subject name.
        RequireEmail:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Include the subject's email in the subject name.
        RequireCommonName:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Include the common name in the subject name.
        RequireDirectoryPath:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Include the directory path in the subject name.
      description: Information to include in the subject name and alternate subject
        name of the certificate. The subject name can be common name, directory path,
        DNS as common name, or left blank. You can optionally include email to the
        subject name for user templates. If you leave the subject name blank then
        you must set a subject alternate name. The subject alternate name (SAN) can
        include globally unique identifier (GUID), DNS, domain DNS, email, service
        principal name (SPN), and user principal name (UPN). You can leave the SAN
        blank. If you leave the SAN blank, then you must set a subject name.
    SubjectNameFlagsV4:
      type: object
      properties:
        SanRequireDomainDns:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Include the domain DNS in the subject alternate name.
        SanRequireSpn:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Include the service principal name (SPN) in the subject alternate
            name.
        SanRequireDirectoryGuid:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Include the globally unique identifier (GUID) in the subject
            alternate name.
        SanRequireUpn:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Include the user principal name (UPN) in the subject alternate
            name.
        SanRequireEmail:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Include the subject's email in the subject alternate name.
        SanRequireDns:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Include the DNS in the subject alternate name.
        RequireDnsAsCn:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Include the DNS as common name in the subject name.
        RequireEmail:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Include the subject's email in the subject name.
        RequireCommonName:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Include the common name in the subject name.
        RequireDirectoryPath:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Include the directory path in the subject name.
      description: Information to include in the subject name and alternate subject
        name of the certificate. The subject name can be common name, directory path,
        DNS as common name, or left blank. You can optionally include email to the
        subject name for user templates. If you leave the subject name blank then
        you must set a subject alternate name. The subject alternate name (SAN) can
        include globally unique identifier (GUID), DNS, domain DNS, email, service
        principal name (SPN), and user principal name (UPN). You can leave the SAN
        blank. If you leave the SAN blank, then you must set a subject name.
    TagKeyList:
      type: array
      items:
        type: string
    TagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) that was returned when you created
            the resource.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: Metadata assigned to a directory registration consisting of
            a key-value pair.
      required:
      - ResourceArn
      - Tags
    Tags:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    Template:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/TemplateArn'
          description: The Amazon Resource Name (ARN) that was returned when you called
            [CreateTemplate](https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateTemplate.html).
        ConnectorArn:
          allOf:
          - $ref: '#/components/schemas/ConnectorArn'
          description: The Amazon Resource Name (ARN) that was returned when you called
            [CreateConnector](https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateConnector.html).
        Definition:
          allOf:
          - $ref: '#/components/schemas/TemplateDefinition'
          description: Template configuration to define the information included in
            certificates. Define certificate validity and renewal periods, certificate
            request handling and enrollment options, key usage extensions, application
            policies, and cryptography settings.
        Name:
          allOf:
          - $ref: '#/components/schemas/TemplateName'
          description: Name of the templates. Template names must be unique.
        ObjectIdentifier:
          allOf:
          - $ref: '#/components/schemas/CustomObjectIdentifier'
          description: Object identifier of a template.
        PolicySchema:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The template schema version. Template schema versions can be
            v2, v3, or v4. The template configuration options change based on the
            template schema version.
        Status:
          allOf:
          - $ref: '#/components/schemas/TemplateStatus'
          description: Status of the template. Status can be creating, active, deleting,
            or failed.
        Revision:
          allOf:
          - $ref: '#/components/schemas/TemplateRevision'
          description: The version of the template. Template updates will increment
            the minor revision. Re-enrolling all certificate holders will increment
            the major revision.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time that the template was created.
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time that the template was updated.
      description: An Active Directory compatible certificate template. Connectors
        issue certificates against these templates based on the requestor's Active
        Directory group membership.
    TemplateArn:
      type: string
      pattern: ^arn:[\w-]+:pca-connector-ad:[\w-]+:[0-9]+:connector\/[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}\/template\/[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}$
      minLength: 5
      maxLength: 200
    TemplateDefinition:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/TemplateV2'
        description: |-
          Template configuration to define the information included in certificates. Define certificate validity and renewal periods, certificate request handling and enrollment options, key usage extensions, application policies, and cryptography settings.
      - allOf:
        - $ref: '#/components/schemas/TemplateV3'
        description: |-
          Template configuration to define the information included in certificates. Define certificate validity and renewal periods, certificate request handling and enrollment options, key usage extensions, application policies, and cryptography settings.
      - allOf:
        - $ref: '#/components/schemas/TemplateV4'
        description: |-
          Template configuration to define the information included in certificates. Define certificate validity and renewal periods, certificate request handling and enrollment options, key usage extensions, application policies, and cryptography settings.
      description: |-
        Template configuration to define the information included in certificates. Define certificate validity and renewal periods, certificate request handling and enrollment options, key usage extensions, application policies, and cryptography settings.
    TemplateList:
      type: array
      items:
        $ref: '#/components/schemas/TemplateSummary'
    TemplateName:
      type: string
      pattern: ^(?!^\s+$)((?![\x5c'\x2b,;<=>#\x22])([\x20-\x7E]))+$
      minLength: 1
      maxLength: 64
    TemplateNameList:
      type: array
      items:
        $ref: '#/components/schemas/TemplateName'
    TemplateRevision:
      type: object
      properties:
        MajorRevision:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The revision version of the template. Re-enrolling all certificate
            holders will increment the major revision.
        MinorRevision:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The revision version of the template. Re-enrolling all certificate
            holders will increment the major revision.
      required:
      - MajorRevision
      - MinorRevision
      description: The revision version of the template. Template updates will increment
        the minor revision. Re-enrolling all certificate holders will increment the
        major revision.
    TemplateStatus:
      type: string
      enum:
      - ACTIVE
      - DELETING
    TemplateSummary:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/TemplateArn'
          description: The Amazon Resource Name (ARN) that was returned when you called
            [CreateTemplate](https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateTemplate.html).
        ConnectorArn:
          allOf:
          - $ref: '#/components/schemas/ConnectorArn'
          description: The Amazon Resource Name (ARN) that was returned when you called
            [CreateConnector](https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateConnector.html).
        Definition:
          allOf:
          - $ref: '#/components/schemas/TemplateDefinition'
          description: Template configuration to define the information included in
            certificates. Define certificate validity and renewal periods, certificate
            request handling and enrollment options, key usage extensions, application
            policies, and cryptography settings.
        Name:
          allOf:
          - $ref: '#/components/schemas/TemplateName'
          description: Name of the template. The template name must be unique.
        ObjectIdentifier:
          allOf:
          - $ref: '#/components/schemas/CustomObjectIdentifier'
          description: Object identifier of a template.
        PolicySchema:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The template schema version. Template schema versions can be
            v2, v3, or v4. The template configuration options change based on the
            template schema version.
        Status:
          allOf:
          - $ref: '#/components/schemas/TemplateStatus'
          description: Status of the template. Status can be creating, active, deleting,
            or failed.
        Revision:
          allOf:
          - $ref: '#/components/schemas/TemplateRevision'
          description: The revision version of the template. Template updates will
            increment the minor revision. Re-enrolling all certificate holders will
            increment the major revision.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time that the template was created.
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time that the template was updated.
      description: An Active Directory compatible certificate template. Connectors
        issue certificates against these templates based on the requestor's Active
        Directory group membership.
    TemplateV2:
      type: object
      properties:
        CertificateValidity:
          allOf:
          - $ref: '#/components/schemas/CertificateValidity'
          description: Certificate validity describes the validity and renewal periods
            of a certificate.
        SupersededTemplates:
          allOf:
          - $ref: '#/components/schemas/TemplateNameList'
          description: List of templates in Active Directory that are superseded by
            this template.
        PrivateKeyAttributes:
          allOf:
          - $ref: '#/components/schemas/PrivateKeyAttributesV2'
          description: Private key attributes allow you to specify the minimal key
            length, key spec, and cryptographic providers for the private key of a
            certificate for v2 templates. V2 templates allow you to use Legacy Cryptographic
            Service Providers.
        PrivateKeyFlags:
          allOf:
          - $ref: '#/components/schemas/PrivateKeyFlagsV2'
          description: Private key flags for v2 templates specify the client compatibility,
            if the private key can be exported, and if user input is required when
            using a private key.
        EnrollmentFlags:
          allOf:
          - $ref: '#/components/schemas/EnrollmentFlagsV2'
          description: Enrollment flags describe the enrollment settings for certificates
            such as using the existing private key and deleting expired or revoked
            certificates.
        SubjectNameFlags:
          allOf:
          - $ref: '#/components/schemas/SubjectNameFlagsV2'
          description: Subject name flags describe the subject name and subject alternate
            name that is included in a certificate.
        GeneralFlags:
          allOf:
          - $ref: '#/components/schemas/GeneralFlagsV2'
          description: General flags describe whether the template is used for computers
            or users and if the template can be used with autoenrollment.
        Extensions:
          allOf:
          - $ref: '#/components/schemas/ExtensionsV2'
          description: Extensions describe the key usage extensions and application
            policies for a template.
      required:
      - CertificateValidity
      - PrivateKeyAttributes
      - PrivateKeyFlags
      - EnrollmentFlags
      - SubjectNameFlags
      - GeneralFlags
      - Extensions
      description: v2 template schema that uses Legacy Cryptographic Providers.
    TemplateV3:
      type: object
      properties:
        CertificateValidity:
          allOf:
          - $ref: '#/components/schemas/CertificateValidity'
          description: Certificate validity describes the validity and renewal periods
            of a certificate.
        SupersededTemplates:
          allOf:
          - $ref: '#/components/schemas/TemplateNameList'
          description: List of templates in Active Directory that are superseded by
            this template.
        PrivateKeyAttributes:
          allOf:
          - $ref: '#/components/schemas/PrivateKeyAttributesV3'
          description: Private key attributes allow you to specify the algorithm,
            minimal key length, key spec, key usage, and cryptographic providers for
            the private key of a certificate for v3 templates. V3 templates allow
            you to use Key Storage Providers.
        PrivateKeyFlags:
          allOf:
          - $ref: '#/components/schemas/PrivateKeyFlagsV3'
          description: Private key flags for v3 templates specify the client compatibility,
            if the private key can be exported, if user input is required when using
            a private key, and if an alternate signature algorithm should be used.
        EnrollmentFlags:
          allOf:
          - $ref: '#/components/schemas/EnrollmentFlagsV3'
          description: Enrollment flags describe the enrollment settings for certificates
            such as using the existing private key and deleting expired or revoked
            certificates.
        SubjectNameFlags:
          allOf:
          - $ref: '#/components/schemas/SubjectNameFlagsV3'
          description: Subject name flags describe the subject name and subject alternate
            name that is included in a certificate.
        GeneralFlags:
          allOf:
          - $ref: '#/components/schemas/GeneralFlagsV3'
          description: General flags describe whether the template is used for computers
            or users and if the template can be used with autoenrollment.
        HashAlgorithm:
          allOf:
          - $ref: '#/components/schemas/HashAlgorithm'
          description: Specifies the hash algorithm used to hash the private key.
        Extensions:
          allOf:
          - $ref: '#/components/schemas/ExtensionsV3'
          description: Extensions describe the key usage extensions and application
            policies for a template.
      required:
      - CertificateValidity
      - PrivateKeyAttributes
      - PrivateKeyFlags
      - EnrollmentFlags
      - SubjectNameFlags
      - GeneralFlags
      - HashAlgorithm
      - Extensions
      description: v3 template schema that uses Key Storage Providers.
    TemplateV4:
      type: object
      properties:
        CertificateValidity:
          allOf:
          - $ref: '#/components/schemas/CertificateValidity'
          description: Certificate validity describes the validity and renewal periods
            of a certificate.
        SupersededTemplates:
          allOf:
          - $ref: '#/components/schemas/TemplateNameList'
          description: List of templates in Active Directory that are superseded by
            this template.
        PrivateKeyAttributes:
          allOf:
          - $ref: '#/components/schemas/PrivateKeyAttributesV4'
          description: Private key attributes allow you to specify the minimal key
            length, key spec, key usage, and cryptographic providers for the private
            key of a certificate for v4 templates. V4 templates allow you to use either
            Key Storage Providers or Legacy Cryptographic Service Providers. You specify
            the cryptography provider category in private key flags.
        PrivateKeyFlags:
          allOf:
          - $ref: '#/components/schemas/PrivateKeyFlagsV4'
          description: Private key flags for v4 templates specify the client compatibility,
            if the private key can be exported, if user input is required when using
            a private key, if an alternate signature algorithm should be used, and
            if certificates are renewed using the same private key.
        EnrollmentFlags:
          allOf:
          - $ref: '#/components/schemas/EnrollmentFlagsV4'
          description: Enrollment flags describe the enrollment settings for certificates
            using the existing private key and deleting expired or revoked certificates.
        SubjectNameFlags:
          allOf:
          - $ref: '#/components/schemas/SubjectNameFlagsV4'
          description: Subject name flags describe the subject name and subject alternate
            name that is included in a certificate.
        GeneralFlags:
          allOf:
          - $ref: '#/components/schemas/GeneralFlagsV4'
          description: General flags describe whether the template is used for computers
            or users and if the template can be used with autoenrollment.
        HashAlgorithm:
          allOf:
          - $ref: '#/components/schemas/HashAlgorithm'
          description: Specifies the hash algorithm used to hash the private key.
            Hash algorithm can only be specified when using Key Storage Providers.
        Extensions:
          allOf:
          - $ref: '#/components/schemas/ExtensionsV4'
          description: Extensions describe the key usage extensions and application
            policies for a template.
      required:
      - CertificateValidity
      - PrivateKeyAttributes
      - PrivateKeyFlags
      - EnrollmentFlags
      - SubjectNameFlags
      - GeneralFlags
      - Extensions
      description: v4 template schema that can use either Legacy Cryptographic Providers
        or Key Storage Providers.
    ThrottlingException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
        ServiceCode:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Identifies the originating service.
        QuotaCode:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The code associated with the quota.
      required:
      - Message
      description: The limit on the number of requests per second was exceeded.
    UntagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) that was returned when you created
            the resource.
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: Specifies a list of tag keys that you want to remove from the
            specified resources.
      required:
      - ResourceArn
      - TagKeys
    UpdateTemplateGroupAccessControlEntryRequest:
      type: object
      properties:
        TemplateArn:
          allOf:
          - $ref: '#/components/schemas/TemplateArn'
          description: The Amazon Resource Name (ARN) that was returned when you called
            [CreateTemplate](https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateTemplate.html).
        GroupSecurityIdentifier:
          allOf:
          - $ref: '#/components/schemas/GroupSecurityIdentifier'
          description: Security identifier (SID) of the group object from Active Directory.
            The SID starts with "S-".
        GroupDisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: Name of the Active Directory group. This name does not need
            to match the group name in Active Directory.
        AccessRights:
          allOf:
          - $ref: '#/components/schemas/AccessRights'
          description: Allow or deny permissions for an Active Directory group to
            enroll or autoenroll certificates for a template.
      required:
      - TemplateArn
      - GroupSecurityIdentifier
    UpdateTemplateRequest:
      type: object
      properties:
        TemplateArn:
          allOf:
          - $ref: '#/components/schemas/TemplateArn'
          description: The Amazon Resource Name (ARN) that was returned when you called
            [CreateTemplate](https://docs.aws.amazon.com/pca-connector-ad/latest/APIReference/API_CreateTemplate.html).
        Definition:
          allOf:
          - $ref: '#/components/schemas/TemplateDefinition'
          description: Template configuration to define the information included in
            certificates. Define certificate validity and renewal periods, certificate
            request handling and enrollment options, key usage extensions, application
            policies, and cryptography settings.
        ReenrollAllCertificateHolders:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: This setting allows the major version of a template to be increased
            automatically. All members of Active Directory groups that are allowed
            to enroll with a template will receive a new certificate issued using
            that template.
      required:
      - TemplateArn
    ValidationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
        Reason:
          allOf:
          - $ref: '#/components/schemas/ValidationExceptionReason'
          description: The reason for the validation error. This won't be return for
            every validation exception.
      required:
      - Message
      description: An input validation error occurred. For example, invalid characters
        in a template name, or if a pagination token is invalid.
    ValidationExceptionReason:
      type: string
      enum:
      - FIELD_VALIDATION_FAILED
      - INVALID_CA_SUBJECT
      - INVALID_PERMISSION
      - INVALID_STATE
      - MISMATCHED_CONNECTOR
      - MISMATCHED_VPC
      - NO_CLIENT_TOKEN
      - UNKNOWN_OPERATION
      - OTHER
    ValidityPeriod:
      type: object
      properties:
        PeriodType:
          allOf:
          - $ref: '#/components/schemas/ValidityPeriodType'
          description: The unit of time. You can select hours, days, weeks, months,
            and years.
        Period:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The numeric value for the validity period.
      required:
      - PeriodType
      - Period
      description: Information describing the end of the validity period of the certificate.
        This parameter sets the “Not After” date for the certificate. Certificate
        validity is the period of time during which a certificate is valid. Validity
        can be expressed as an explicit date and time when the certificate expires,
        or as a span of time after issuance, stated in hours, days, months, or years.
        For more information, see Validity in RFC 5280. This value is unaffected when
        ValidityNotBefore is also specified. For example, if Validity is set to 20
        days in the future, the certificate will expire 20 days from issuance time
        regardless of the ValidityNotBefore value.
    ValidityPeriodType:
      type: string
      enum:
      - HOURS
      - DAYS
      - WEEKS
      - MONTHS
      - YEARS
    VpcInformation:
      type: object
      properties:
        IpAddressType:
          allOf:
          - $ref: '#/components/schemas/IpAddressType'
          description: The VPC IP address type.
        SecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupIdList'
          description: The security groups used with the connector. You can use a
            maximum of 4 security groups with a connector.
      required:
      - SecurityGroupIds
      description: Information about your VPC and security groups used with the connector.
