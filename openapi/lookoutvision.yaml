openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: lookoutvision
  x-aws-serviceName: lookoutvision
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-05'
  version: '2020-11-20'
  title: Amazon Lookout for Vision
  description: |-
    This is the Amazon Lookout for Vision API Reference. It provides descriptions of actions, data types, common parameters, and common errors.

    Amazon Lookout for Vision enables you to find visual defects in industrial products, accurately and at scale. It uses computer vision to identify missing components in an industrial product, damage to vehicles or structures, irregularities in production lines, and even minuscule defects in silicon wafers â€” or any other physical item where quality is important such as a missing capacitor on printed circuit boards.
servers:
- description: The Amazon Lookout for Vision regional endpoint
  url: https://lookoutvision.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths: {}
components:
  schemas:
    AnomalyClassFilter:
      type: string
      pattern: ^(normal|anomaly)$
      minLength: 1
      maxLength: 10
    AnomalyList:
      type: array
      items:
        $ref: '#/components/schemas/Anomaly'
    AnomalyMask:
      type: string
      format: byte
      minLength: 1
      maxLength: 5242880
    AnomalyName:
      type: string
      pattern: ^[a-zA-Z0-9]*$
      minLength: 1
      maxLength: 256
    Boolean:
      type: boolean
    ClientToken:
      type: string
      pattern: ^[a-zA-Z0-9-]+$
      minLength: 1
      maxLength: 64
    Color:
      type: string
      pattern: ^\#[a-zA-Z0-9]{6}$
      minLength: 7
      maxLength: 7
    CompilerOptions:
      type: string
      pattern: .*
      minLength: 3
      maxLength: 1024
    ComponentDescription:
      type: string
      pattern: ^[a-zA-Z0-9-_. ()':,;?]+$
      minLength: 1
      maxLength: 256
    ComponentName:
      type: string
      pattern: ^[a-zA-Z0-9-_.]+$
      minLength: 1
      maxLength: 128
    ComponentVersion:
      type: string
      pattern: ^([0-9]{1,6})\.([0-9]{1,6})\.([0-9]{1,6})$
      minLength: 1
      maxLength: 64
    ComponentVersionArn:
      type: string
      pattern: ^arn:[^:]*:greengrass:[^:]*:aws:components:[^:]+$
    ContentType:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 255
    DatasetChanges:
      type: string
      format: byte
      minLength: 1
      maxLength: 10485760
    DatasetEntry:
      type: string
      pattern: ^\{.*\}$
      minLength: 2
      maxLength: 8192
    DatasetEntryList:
      type: array
      items:
        $ref: '#/components/schemas/DatasetEntry'
    DatasetMetadataList:
      type: array
      items:
        $ref: '#/components/schemas/DatasetMetadata'
    DatasetStatus:
      type: string
      enum:
      - CREATE_IN_PROGRESS
      - CREATE_COMPLETE
      - CREATE_FAILED
      - UPDATE_IN_PROGRESS
      - UPDATE_COMPLETE
      - UPDATE_FAILED_ROLLBACK_IN_PROGRESS
      - UPDATE_FAILED_ROLLBACK_COMPLETE
      - DELETE_IN_PROGRESS
      - DELETE_COMPLETE
      - DELETE_FAILED
    DatasetStatusMessage:
      type: string
    DatasetType:
      type: string
      pattern: ^train|test$
      minLength: 1
      maxLength: 10
    DateTime:
      type: string
      format: date-time
    ExceptionString:
      type: string
    Float:
      type: number
      format: float
    ImageSourceType:
      type: string
      pattern: ^direct$
    InferenceUnits:
      type: integer
      minimum: 1
    Integer:
      type: integer
    IsLabeled:
      type: boolean
    KmsKeyId:
      type: string
      pattern: ^[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,2048}$
      minLength: 1
      maxLength: 2048
    ModelArn:
      type: string
    ModelDescriptionMessage:
      type: string
      pattern: ^[0-9A-Za-z\.\-_]*$
      minLength: 1
      maxLength: 500
    ModelHostingStatus:
      type: string
      enum:
      - STARTING_HOSTING
      - HOSTED
      - HOSTING_FAILED
      - STOPPING_HOSTING
      - SYSTEM_UPDATING
    ModelMetadataList:
      type: array
      items:
        $ref: '#/components/schemas/ModelMetadata'
    ModelPackagingJobDescription:
      type: string
      pattern: ^[a-zA-Z0-9-_. ()':,;?]+$
      minLength: 1
      maxLength: 256
    ModelPackagingJobName:
      type: string
      pattern: ^[a-zA-Z0-9-]+$
      minLength: 1
      maxLength: 64
    ModelPackagingJobStatus:
      type: string
      enum:
      - CREATED
      - RUNNING
      - SUCCEEDED
      - FAILED
    ModelPackagingJobsList:
      type: array
      items:
        $ref: '#/components/schemas/ModelPackagingJobMetadata'
    ModelPackagingMethod:
      type: string
      pattern: ^[a-zA-Z0-9]+$
      minLength: 1
      maxLength: 32
    ModelPackagingStatusMessage:
      type: string
    ModelStatus:
      type: string
      enum:
      - TRAINING
      - TRAINED
      - TRAINING_FAILED
      - STARTING_HOSTING
      - HOSTED
      - HOSTING_FAILED
      - STOPPING_HOSTING
      - SYSTEM_UPDATING
      - DELETING
    ModelStatusMessage:
      type: string
    ModelVersion:
      type: string
      pattern: ^([1-9][0-9]*|latest)$
      minLength: 1
      maxLength: 10
    ModelVersionNoLatest:
      type: string
      pattern: ^([1-9][0-9]*)$
      minLength: 1
      maxLength: 10
    PageSize:
      type: integer
      minimum: 1
      maximum: 100
    PaginationToken:
      type: string
      pattern: ^[a-zA-Z0-9\/\+\=]{0,2048}$
      minLength: 0
      maxLength: 2048
    ProjectArn:
      type: string
    ProjectMetadataList:
      type: array
      items:
        $ref: '#/components/schemas/ProjectMetadata'
    ProjectName:
      type: string
      pattern: ^[a-zA-Z0-9][a-zA-Z0-9_\-]*$
      minLength: 1
      maxLength: 255
    QueryString:
      type: string
      pattern: \S
      minLength: 1
      maxLength: 2048
    ResourceType:
      type: string
      enum:
      - PROJECT
      - DATASET
      - MODEL
      - TRIAL
      - MODEL_PACKAGE_JOB
    RetryAfterSeconds:
      type: integer
    S3BucketName:
      type: string
      pattern: ^[0-9A-Za-z\.\-_]*$
      minLength: 3
      maxLength: 63
    S3KeyPrefix:
      type: string
      pattern: ^([a-zA-Z0-9!_.*'()-][/a-zA-Z0-9!_.*'()-]*)?$
      minLength: 0
      maxLength: 1024
    S3ObjectKey:
      type: string
      pattern: ^([a-zA-Z0-9!_.*'()-][/a-zA-Z0-9!_.*'()-]*)?$
      minLength: 1
      maxLength: 1024
    S3ObjectVersion:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 1024
    Stream:
      type: string
      format: byte
    TagArn:
      type: string
      minLength: 1
      maxLength: 1011
    TagKey:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    TagValue:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 0
      maxLength: 256
    TargetDevice:
      type: string
      enum:
      - jetson_xavier
    TargetPlatformAccelerator:
      type: string
      enum:
      - NVIDIA
    TargetPlatformArch:
      type: string
      enum:
      - ARM64
      - X86_64
    TargetPlatformOs:
      type: string
      enum:
      - LINUX
