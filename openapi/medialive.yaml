openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: medialive
  x-aws-serviceName: medialive
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2017-10-14'
  title: AWS Elemental MediaLive
  description: |-
    API for AWS Elemental MediaLive
servers:
- description: The AWS Elemental MediaLive regional endpoint
  url: https://medialive.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /prod/inputDevices/{InputDeviceId}/accept:
    post:
      operationId: AcceptInputDeviceTransfer
      description: |-
        Accept an incoming input device transfer. The ownership of the device will transfer to your AWS account.
      parameters:
      - name: InputDeviceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            Placeholder documentation for UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
  /prod/batch/delete:
    post:
      operationId: BatchDelete
      description: |-
        Starts delete of resources.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ChannelIds:
                  $ref: '#/components/schemas/__listOf__string'
                InputIds:
                  $ref: '#/components/schemas/__listOf__string'
                InputSecurityGroupIds:
                  $ref: '#/components/schemas/__listOf__string'
                MultiplexIds:
                  $ref: '#/components/schemas/__listOf__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/batch/start:
    post:
      operationId: BatchStart
      description: |-
        Starts existing resources
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ChannelIds:
                  $ref: '#/components/schemas/__listOf__string'
                MultiplexIds:
                  $ref: '#/components/schemas/__listOf__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/batch/stop:
    post:
      operationId: BatchStop
      description: |-
        Stops running resources
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ChannelIds:
                  $ref: '#/components/schemas/__listOf__string'
                MultiplexIds:
                  $ref: '#/components/schemas/__listOf__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/channels/{ChannelId}/schedule:
    put:
      operationId: BatchUpdateSchedule
      description: |-
        Update a channel schedule
      parameters:
      - name: ChannelId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Creates:
                  $ref: '#/components/schemas/BatchScheduleActionCreateRequest'
                Deletes:
                  $ref: '#/components/schemas/BatchScheduleActionDeleteRequest'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            Placeholder documentation for UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
    delete:
      operationId: DeleteSchedule
      description: |-
        Delete all schedule actions on a channel.
      parameters:
      - name: ChannelId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: DescribeSchedule
      description: |-
        Get a channel schedule
      parameters:
      - name: ChannelId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/inputDevices/{InputDeviceId}/cancel:
    post:
      operationId: CancelInputDeviceTransfer
      description: |-
        Cancel an input device transfer that you have requested.
      parameters:
      - name: InputDeviceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            Placeholder documentation for UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
  /prod/claimDevice:
    post:
      operationId: ClaimDevice
      description: |-
        Send a request to claim an AWS Elemental device that you have purchased from a third-party vendor. After the request succeeds, you will own the device.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Id:
                  $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            Placeholder documentation for UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
  /prod/channels:
    post:
      operationId: CreateChannel
      description: |-
        Creates a new channel
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                CdiInputSpecification:
                  $ref: '#/components/schemas/CdiInputSpecification'
                ChannelClass:
                  $ref: '#/components/schemas/ChannelClass'
                Destinations:
                  $ref: '#/components/schemas/__listOfOutputDestination'
                EncoderSettings:
                  $ref: '#/components/schemas/EncoderSettings'
                InputAttachments:
                  $ref: '#/components/schemas/__listOfInputAttachment'
                InputSpecification:
                  $ref: '#/components/schemas/InputSpecification'
                LogLevel:
                  $ref: '#/components/schemas/LogLevel'
                Maintenance:
                  $ref: '#/components/schemas/MaintenanceCreateSettings'
                Name:
                  $ref: '#/components/schemas/__string'
                RequestId:
                  $ref: '#/components/schemas/__string'
                Reserved:
                  $ref: '#/components/schemas/__string'
                RoleArn:
                  $ref: '#/components/schemas/__string'
                Tags:
                  $ref: '#/components/schemas/Tags'
                Vpc:
                  $ref: '#/components/schemas/VpcOutputSettings'
                AnywhereSettings:
                  $ref: '#/components/schemas/AnywhereSettings'
                ChannelEngineVersion:
                  $ref: '#/components/schemas/ChannelEngineVersionRequest'
                DryRun:
                  $ref: '#/components/schemas/__boolean'
      responses:
        '201': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            Placeholder documentation for UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
    get:
      operationId: ListChannels
      description: |-
        Produces list of channels that have been created
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/clusters/{ClusterId}/channelplacementgroups:
    post:
      operationId: CreateChannelPlacementGroup
      description: |-
        Create a ChannelPlacementGroup in the specified Cluster. As part of the create operation, you specify the Nodes to attach the group to.After you create a ChannelPlacementGroup, you add Channels to the group (you do this by modifying the Channels to add them to a specific group). You now have an association of Channels to ChannelPlacementGroup, and ChannelPlacementGroup to Nodes. This association means that all the Channels in the group are able to run on any of the Nodes associated with the group.
      parameters:
      - name: ClusterId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/__string'
                Nodes:
                  $ref: '#/components/schemas/__listOf__string'
                RequestId:
                  $ref: '#/components/schemas/__string'
                Tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '201': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            Placeholder documentation for UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
    get:
      operationId: ListChannelPlacementGroups
      description: |-
        Retrieve the list of ChannelPlacementGroups in the specified Cluster.
      parameters:
      - name: ClusterId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/cloudwatch-alarm-templates:
    post:
      operationId: CreateCloudWatchAlarmTemplate
      description: |-
        Creates a cloudwatch alarm template to dynamically generate cloudwatch metric alarms on targeted resource types.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ComparisonOperator:
                  $ref: '#/components/schemas/CloudWatchAlarmTemplateComparisonOperator'
                DatapointsToAlarm:
                  $ref: '#/components/schemas/__integerMin1'
                Description:
                  $ref: '#/components/schemas/__stringMin0Max1024'
                EvaluationPeriods:
                  $ref: '#/components/schemas/__integerMin1'
                GroupIdentifier:
                  $ref: '#/components/schemas/__stringPatternS'
                MetricName:
                  $ref: '#/components/schemas/__stringMax64'
                Name:
                  $ref: '#/components/schemas/__stringMin1Max255PatternS'
                Period:
                  $ref: '#/components/schemas/__integerMin10Max86400'
                Statistic:
                  $ref: '#/components/schemas/CloudWatchAlarmTemplateStatistic'
                Tags:
                  $ref: '#/components/schemas/TagMap'
                TargetResourceType:
                  $ref: '#/components/schemas/CloudWatchAlarmTemplateTargetResourceType'
                Threshold:
                  $ref: '#/components/schemas/__double'
                TreatMissingData:
                  $ref: '#/components/schemas/CloudWatchAlarmTemplateTreatMissingData'
                RequestId:
                  $ref: '#/components/schemas/__stringMin1Max256PatternS'
      responses:
        '201': {}
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: ListCloudWatchAlarmTemplates
      description: |-
        Lists cloudwatch alarm templates.
      parameters:
      - name: groupIdentifier
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: scope
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: signalMapIdentifier
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/cloudwatch-alarm-template-groups:
    post:
      operationId: CreateCloudWatchAlarmTemplateGroup
      description: |-
        Creates a cloudwatch alarm template group to group your cloudwatch alarm templates and to attach to signal maps for dynamically creating alarms.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  $ref: '#/components/schemas/__stringMin0Max1024'
                Name:
                  $ref: '#/components/schemas/__stringMin1Max255PatternS'
                Tags:
                  $ref: '#/components/schemas/TagMap'
                RequestId:
                  $ref: '#/components/schemas/__stringMin1Max256PatternS'
      responses:
        '201': {}
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: ListCloudWatchAlarmTemplateGroups
      description: |-
        Lists cloudwatch alarm template groups.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: scope
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: signalMapIdentifier
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/clusters:
    post:
      operationId: CreateCluster
      description: |-
        Create a new Cluster.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ClusterType:
                  $ref: '#/components/schemas/ClusterType'
                InstanceRoleArn:
                  $ref: '#/components/schemas/__string'
                Name:
                  $ref: '#/components/schemas/__string'
                NetworkSettings:
                  $ref: '#/components/schemas/ClusterNetworkSettingsCreateRequest'
                RequestId:
                  $ref: '#/components/schemas/__string'
                Tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '201': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: ListClusters
      description: |-
        Retrieve the list of Clusters.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/eventbridge-rule-templates:
    post:
      operationId: CreateEventBridgeRuleTemplate
      description: |-
        Creates an eventbridge rule template to monitor events and send notifications to your targeted resources.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  $ref: '#/components/schemas/__stringMin0Max1024'
                EventTargets:
                  $ref: '#/components/schemas/__listOfEventBridgeRuleTemplateTarget'
                EventType:
                  $ref: '#/components/schemas/EventBridgeRuleTemplateEventType'
                GroupIdentifier:
                  $ref: '#/components/schemas/__stringPatternS'
                Name:
                  $ref: '#/components/schemas/__stringMin1Max255PatternS'
                Tags:
                  $ref: '#/components/schemas/TagMap'
                RequestId:
                  $ref: '#/components/schemas/__stringMin1Max256PatternS'
      responses:
        '201': {}
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: ListEventBridgeRuleTemplates
      description: |-
        Lists eventbridge rule templates.
      parameters:
      - name: groupIdentifier
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: signalMapIdentifier
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/eventbridge-rule-template-groups:
    post:
      operationId: CreateEventBridgeRuleTemplateGroup
      description: |-
        Creates an eventbridge rule template group to group your eventbridge rule templates and to attach to signal maps for dynamically creating notification rules.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  $ref: '#/components/schemas/__stringMin0Max1024'
                Name:
                  $ref: '#/components/schemas/__stringMin1Max255PatternS'
                Tags:
                  $ref: '#/components/schemas/TagMap'
                RequestId:
                  $ref: '#/components/schemas/__stringMin1Max256PatternS'
      responses:
        '201': {}
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: ListEventBridgeRuleTemplateGroups
      description: |-
        Lists eventbridge rule template groups.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: signalMapIdentifier
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/inputs:
    post:
      operationId: CreateInput
      description: |-
        Create an input
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Destinations:
                  $ref: '#/components/schemas/__listOfInputDestinationRequest'
                InputDevices:
                  $ref: '#/components/schemas/__listOfInputDeviceSettings'
                InputSecurityGroups:
                  $ref: '#/components/schemas/__listOf__string'
                MediaConnectFlows:
                  $ref: '#/components/schemas/__listOfMediaConnectFlowRequest'
                Name:
                  $ref: '#/components/schemas/__string'
                RequestId:
                  $ref: '#/components/schemas/__string'
                RoleArn:
                  $ref: '#/components/schemas/__string'
                Sources:
                  $ref: '#/components/schemas/__listOfInputSourceRequest'
                Tags:
                  $ref: '#/components/schemas/Tags'
                Type:
                  $ref: '#/components/schemas/InputType'
                Vpc:
                  $ref: '#/components/schemas/InputVpcRequest'
                SrtSettings:
                  $ref: '#/components/schemas/SrtSettingsRequest'
                InputNetworkLocation:
                  $ref: '#/components/schemas/InputNetworkLocation'
                MulticastSettings:
                  $ref: '#/components/schemas/MulticastSettingsCreateRequest'
                Smpte2110ReceiverGroupSettings:
                  $ref: '#/components/schemas/Smpte2110ReceiverGroupSettings'
                SdiSources:
                  $ref: '#/components/schemas/InputSdiSources'
      responses:
        '201': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: ListInputs
      description: |-
        Produces list of inputs that have been created
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/inputSecurityGroups:
    post:
      operationId: CreateInputSecurityGroup
      description: |-
        Creates a Input Security Group
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Tags:
                  $ref: '#/components/schemas/Tags'
                WhitelistRules:
                  $ref: '#/components/schemas/__listOfInputWhitelistRuleCidr'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: ListInputSecurityGroups
      description: |-
        Produces a list of Input Security Groups for an account
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/multiplexes:
    post:
      operationId: CreateMultiplex
      description: |-
        Create a new multiplex.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AvailabilityZones:
                  $ref: '#/components/schemas/__listOf__string'
                MultiplexSettings:
                  $ref: '#/components/schemas/MultiplexSettings'
                Name:
                  $ref: '#/components/schemas/__string'
                RequestId:
                  $ref: '#/components/schemas/__string'
                Tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '201': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            Placeholder documentation for UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
    get:
      operationId: ListMultiplexes
      description: |-
        Retrieve a list of the existing multiplexes.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/multiplexes/{MultiplexId}/programs:
    post:
      operationId: CreateMultiplexProgram
      description: |-
        Create a new program in the multiplex.
      parameters:
      - name: MultiplexId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MultiplexProgramSettings:
                  $ref: '#/components/schemas/MultiplexProgramSettings'
                ProgramName:
                  $ref: '#/components/schemas/__string'
                RequestId:
                  $ref: '#/components/schemas/__string'
      responses:
        '201': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            Placeholder documentation for UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
    get:
      operationId: ListMultiplexPrograms
      description: |-
        List the programs that currently exist for a specific multiplex.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: MultiplexId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/networks:
    post:
      operationId: CreateNetwork
      description: |-
        Create as many Networks as you need. You will associate one or more Clusters with each Network.Each Network provides MediaLive Anywhere with required information about the network in your organization that you are using for video encoding using MediaLive.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                IpPools:
                  $ref: '#/components/schemas/__listOfIpPoolCreateRequest'
                Name:
                  $ref: '#/components/schemas/__string'
                RequestId:
                  $ref: '#/components/schemas/__string'
                Routes:
                  $ref: '#/components/schemas/__listOfRouteCreateRequest'
                Tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '201': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: ListNetworks
      description: |-
        Retrieve the list of Networks.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/clusters/{ClusterId}/nodes:
    post:
      operationId: CreateNode
      description: |-
        Create a Node in the specified Cluster. You can also create Nodes using the CreateNodeRegistrationScript. Note that you can't move a Node to another Cluster.
      parameters:
      - name: ClusterId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/__string'
                NodeInterfaceMappings:
                  $ref: '#/components/schemas/__listOfNodeInterfaceMappingCreateRequest'
                RequestId:
                  $ref: '#/components/schemas/__string'
                Role:
                  $ref: '#/components/schemas/NodeRole'
                Tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '201': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            Placeholder documentation for UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
    get:
      operationId: ListNodes
      description: |-
        Retrieve the list of Nodes.
      parameters:
      - name: ClusterId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/clusters/{ClusterId}/nodeRegistrationScript:
    post:
      operationId: CreateNodeRegistrationScript
      description: |-
        Create the Register Node script for all the nodes intended for a specific Cluster. You will then run the script on each hardware unit that is intended for that Cluster. The script creates a Node in the specified Cluster. It then binds the Node to this hardware unit, and activates the node hardware for use with MediaLive Anywhere.
      parameters:
      - name: ClusterId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Id:
                  $ref: '#/components/schemas/__string'
                Name:
                  $ref: '#/components/schemas/__string'
                NodeInterfaceMappings:
                  $ref: '#/components/schemas/__listOfNodeInterfaceMapping'
                RequestId:
                  $ref: '#/components/schemas/__string'
                Role:
                  $ref: '#/components/schemas/NodeRole'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/inputs/{InputId}/partners:
    post:
      operationId: CreatePartnerInput
      description: |-
        Create a partner input
      parameters:
      - name: InputId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                RequestId:
                  $ref: '#/components/schemas/__string'
                Tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '201': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/sdiSources:
    post:
      operationId: CreateSdiSource
      description: |-
        Create an SdiSource for each video source that uses the SDI protocol. You will reference the SdiSource when you create an SDI input in MediaLive. You will also reference it in an SdiSourceMapping, in order to create a connection between the logical SdiSource and the physical SDI card and port that the physical SDI source uses.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Mode:
                  $ref: '#/components/schemas/SdiSourceMode'
                Name:
                  $ref: '#/components/schemas/__string'
                RequestId:
                  $ref: '#/components/schemas/__string'
                Tags:
                  $ref: '#/components/schemas/Tags'
                Type:
                  $ref: '#/components/schemas/SdiSourceType'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: ListSdiSources
      description: |-
        List all the SdiSources in the AWS account.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/signal-maps:
    post:
      operationId: CreateSignalMap
      description: |-
        Initiates the creation of a new signal map. Will discover a new mediaResourceMap based on the provided discoveryEntryPointArn.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                CloudWatchAlarmTemplateGroupIdentifiers:
                  $ref: '#/components/schemas/__listOf__stringPatternS'
                Description:
                  $ref: '#/components/schemas/__stringMin0Max1024'
                DiscoveryEntryPointArn:
                  $ref: '#/components/schemas/__stringMin1Max2048'
                EventBridgeRuleTemplateGroupIdentifiers:
                  $ref: '#/components/schemas/__listOf__stringPatternS'
                Name:
                  $ref: '#/components/schemas/__stringMin1Max255PatternS'
                Tags:
                  $ref: '#/components/schemas/TagMap'
                RequestId:
                  $ref: '#/components/schemas/__stringMin1Max256PatternS'
      responses:
        '201': {}
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: ListSignalMaps
      description: |-
        Lists signal maps.
      parameters:
      - name: cloudWatchAlarmTemplateGroupIdentifier
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: eventBridgeRuleTemplateGroupIdentifier
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/tags/{ResourceArn}:
    post:
      operationId: CreateTags
      description: |-
        Create tags for a resource
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '204': {}
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
    delete:
      operationId: DeleteTags
      description: |-
        Removes tags for a resource
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/__listOf__string'
      responses:
        '204': {}
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
    get:
      operationId: ListTagsForResource
      description: |-
        Produces list of tags that have been created for a resource
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
  /prod/channels/{ChannelId}:
    delete:
      operationId: DeleteChannel
      description: |-
        Starts deletion of channel. The associated outputs are also deleted.
      parameters:
      - name: ChannelId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: DescribeChannel
      description: |-
        Gets details about a channel
      parameters:
      - name: ChannelId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: UpdateChannel
      description: |-
        Updates a channel.
      parameters:
      - name: ChannelId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                CdiInputSpecification:
                  $ref: '#/components/schemas/CdiInputSpecification'
                Destinations:
                  $ref: '#/components/schemas/__listOfOutputDestination'
                EncoderSettings:
                  $ref: '#/components/schemas/EncoderSettings'
                InputAttachments:
                  $ref: '#/components/schemas/__listOfInputAttachment'
                InputSpecification:
                  $ref: '#/components/schemas/InputSpecification'
                LogLevel:
                  $ref: '#/components/schemas/LogLevel'
                Maintenance:
                  $ref: '#/components/schemas/MaintenanceUpdateSettings'
                Name:
                  $ref: '#/components/schemas/__string'
                RoleArn:
                  $ref: '#/components/schemas/__string'
                ChannelEngineVersion:
                  $ref: '#/components/schemas/ChannelEngineVersionRequest'
                DryRun:
                  $ref: '#/components/schemas/__boolean'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '422':
          description: |-
            Placeholder documentation for UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
  /prod/clusters/{ClusterId}/channelplacementgroups/{ChannelPlacementGroupId}:
    delete:
      operationId: DeleteChannelPlacementGroup
      description: |-
        Delete the specified ChannelPlacementGroup that exists in the specified Cluster.
      parameters:
      - name: ChannelPlacementGroupId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: ClusterId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: DescribeChannelPlacementGroup
      description: |-
        Get details about a ChannelPlacementGroup.
      parameters:
      - name: ChannelPlacementGroupId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: ClusterId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: UpdateChannelPlacementGroup
      description: |-
        Change the settings for a ChannelPlacementGroup.
      parameters:
      - name: ChannelPlacementGroupId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: ClusterId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/__string'
                Nodes:
                  $ref: '#/components/schemas/__listOf__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            Placeholder documentation for UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
  /prod/cloudwatch-alarm-templates/{Identifier}:
    delete:
      operationId: DeleteCloudWatchAlarmTemplate
      description: |-
        Deletes a cloudwatch alarm template.
      parameters:
      - name: Identifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '204': {}
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetCloudWatchAlarmTemplate
      description: |-
        Retrieves the specified cloudwatch alarm template.
      parameters:
      - name: Identifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    patch:
      operationId: UpdateCloudWatchAlarmTemplate
      description: |-
        Updates the specified cloudwatch alarm template.
      parameters:
      - name: Identifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ComparisonOperator:
                  $ref: '#/components/schemas/CloudWatchAlarmTemplateComparisonOperator'
                DatapointsToAlarm:
                  $ref: '#/components/schemas/__integerMin1'
                Description:
                  $ref: '#/components/schemas/__stringMin0Max1024'
                EvaluationPeriods:
                  $ref: '#/components/schemas/__integerMin1'
                GroupIdentifier:
                  $ref: '#/components/schemas/__stringPatternS'
                MetricName:
                  $ref: '#/components/schemas/__stringMax64'
                Name:
                  $ref: '#/components/schemas/__stringMin1Max255PatternS'
                Period:
                  $ref: '#/components/schemas/__integerMin10Max86400'
                Statistic:
                  $ref: '#/components/schemas/CloudWatchAlarmTemplateStatistic'
                TargetResourceType:
                  $ref: '#/components/schemas/CloudWatchAlarmTemplateTargetResourceType'
                Threshold:
                  $ref: '#/components/schemas/__double'
                TreatMissingData:
                  $ref: '#/components/schemas/CloudWatchAlarmTemplateTreatMissingData'
      responses:
        '200': {}
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/cloudwatch-alarm-template-groups/{Identifier}:
    delete:
      operationId: DeleteCloudWatchAlarmTemplateGroup
      description: |-
        Deletes a cloudwatch alarm template group. You must detach this group from all signal maps and ensure its existing templates are moved to another group or deleted.
      parameters:
      - name: Identifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '204': {}
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetCloudWatchAlarmTemplateGroup
      description: |-
        Retrieves the specified cloudwatch alarm template group.
      parameters:
      - name: Identifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    patch:
      operationId: UpdateCloudWatchAlarmTemplateGroup
      description: |-
        Updates the specified cloudwatch alarm template group.
      parameters:
      - name: Identifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  $ref: '#/components/schemas/__stringMin0Max1024'
      responses:
        '200': {}
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/clusters/{ClusterId}:
    delete:
      operationId: DeleteCluster
      description: |-
        Delete a Cluster. The Cluster must be idle.
      parameters:
      - name: ClusterId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '202': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: DescribeCluster
      description: |-
        Get details about a Cluster.
      parameters:
      - name: ClusterId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: UpdateCluster
      description: |-
        Change the settings for a Cluster.
      parameters:
      - name: ClusterId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/__string'
                NetworkSettings:
                  $ref: '#/components/schemas/ClusterNetworkSettingsUpdateRequest'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/eventbridge-rule-templates/{Identifier}:
    delete:
      operationId: DeleteEventBridgeRuleTemplate
      description: |-
        Deletes an eventbridge rule template.
      parameters:
      - name: Identifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '204': {}
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetEventBridgeRuleTemplate
      description: |-
        Retrieves the specified eventbridge rule template.
      parameters:
      - name: Identifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    patch:
      operationId: UpdateEventBridgeRuleTemplate
      description: |-
        Updates the specified eventbridge rule template.
      parameters:
      - name: Identifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  $ref: '#/components/schemas/__stringMin0Max1024'
                EventTargets:
                  $ref: '#/components/schemas/__listOfEventBridgeRuleTemplateTarget'
                EventType:
                  $ref: '#/components/schemas/EventBridgeRuleTemplateEventType'
                GroupIdentifier:
                  $ref: '#/components/schemas/__stringPatternS'
                Name:
                  $ref: '#/components/schemas/__stringMin1Max255PatternS'
      responses:
        '200': {}
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/eventbridge-rule-template-groups/{Identifier}:
    delete:
      operationId: DeleteEventBridgeRuleTemplateGroup
      description: |-
        Deletes an eventbridge rule template group. You must detach this group from all signal maps and ensure its existing templates are moved to another group or deleted.
      parameters:
      - name: Identifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '204': {}
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetEventBridgeRuleTemplateGroup
      description: |-
        Retrieves the specified eventbridge rule template group.
      parameters:
      - name: Identifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    patch:
      operationId: UpdateEventBridgeRuleTemplateGroup
      description: |-
        Updates the specified eventbridge rule template group.
      parameters:
      - name: Identifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  $ref: '#/components/schemas/__stringMin0Max1024'
      responses:
        '200': {}
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/inputs/{InputId}:
    delete:
      operationId: DeleteInput
      description: |-
        Deletes the input end point
      parameters:
      - name: InputId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: DescribeInput
      description: |-
        Produces details about an input
      parameters:
      - name: InputId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: UpdateInput
      description: |-
        Updates an input.
      parameters:
      - name: InputId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Destinations:
                  $ref: '#/components/schemas/__listOfInputDestinationRequest'
                InputDevices:
                  $ref: '#/components/schemas/__listOfInputDeviceRequest'
                InputSecurityGroups:
                  $ref: '#/components/schemas/__listOf__string'
                MediaConnectFlows:
                  $ref: '#/components/schemas/__listOfMediaConnectFlowRequest'
                Name:
                  $ref: '#/components/schemas/__string'
                RoleArn:
                  $ref: '#/components/schemas/__string'
                Sources:
                  $ref: '#/components/schemas/__listOfInputSourceRequest'
                SrtSettings:
                  $ref: '#/components/schemas/SrtSettingsRequest'
                MulticastSettings:
                  $ref: '#/components/schemas/MulticastSettingsUpdateRequest'
                Smpte2110ReceiverGroupSettings:
                  $ref: '#/components/schemas/Smpte2110ReceiverGroupSettings'
                SdiSources:
                  $ref: '#/components/schemas/InputSdiSources'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
  /prod/inputSecurityGroups/{InputSecurityGroupId}:
    delete:
      operationId: DeleteInputSecurityGroup
      description: |-
        Deletes an Input Security Group
      parameters:
      - name: InputSecurityGroupId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: DescribeInputSecurityGroup
      description: |-
        Produces a summary of an Input Security Group
      parameters:
      - name: InputSecurityGroupId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: UpdateInputSecurityGroup
      description: |-
        Update an Input Security Group's Whilelists.
      parameters:
      - name: InputSecurityGroupId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Tags:
                  $ref: '#/components/schemas/Tags'
                WhitelistRules:
                  $ref: '#/components/schemas/__listOfInputWhitelistRuleCidr'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
  /prod/multiplexes/{MultiplexId}:
    delete:
      operationId: DeleteMultiplex
      description: |-
        Delete a multiplex. The multiplex must be idle.
      parameters:
      - name: MultiplexId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '202': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: DescribeMultiplex
      description: |-
        Gets details about a multiplex.
      parameters:
      - name: MultiplexId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: UpdateMultiplex
      description: |-
        Updates a multiplex.
      parameters:
      - name: MultiplexId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MultiplexSettings:
                  $ref: '#/components/schemas/MultiplexSettings'
                Name:
                  $ref: '#/components/schemas/__string'
                PacketIdentifiersMapping:
                  $ref: '#/components/schemas/MultiplexPacketIdentifiersMapping'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '422':
          description: |-
            Placeholder documentation for UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
  /prod/multiplexes/{MultiplexId}/programs/{ProgramName}:
    delete:
      operationId: DeleteMultiplexProgram
      description: |-
        Delete a program from a multiplex.
      parameters:
      - name: MultiplexId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: ProgramName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: DescribeMultiplexProgram
      description: |-
        Get the details for a program in a multiplex.
      parameters:
      - name: MultiplexId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: ProgramName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: UpdateMultiplexProgram
      description: |-
        Update a program in a multiplex.
      parameters:
      - name: MultiplexId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: ProgramName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MultiplexProgramSettings:
                  $ref: '#/components/schemas/MultiplexProgramSettings'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '422':
          description: |-
            Placeholder documentation for UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
  /prod/networks/{NetworkId}:
    delete:
      operationId: DeleteNetwork
      description: |-
        Delete a Network. The Network must have no resources associated with it.
      parameters:
      - name: NetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '202': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: DescribeNetwork
      description: |-
        Get details about a Network.
      parameters:
      - name: NetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: UpdateNetwork
      description: |-
        Change the settings for a Network.
      parameters:
      - name: NetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                IpPools:
                  $ref: '#/components/schemas/__listOfIpPoolUpdateRequest'
                Name:
                  $ref: '#/components/schemas/__string'
                Routes:
                  $ref: '#/components/schemas/__listOfRouteUpdateRequest'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/clusters/{ClusterId}/nodes/{NodeId}:
    delete:
      operationId: DeleteNode
      description: |-
        Delete a Node. The Node must be IDLE.
      parameters:
      - name: ClusterId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: NodeId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '202': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: DescribeNode
      description: |-
        Get details about a Node in the specified Cluster.
      parameters:
      - name: ClusterId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: NodeId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: UpdateNode
      description: |-
        Change the settings for a Node.
      parameters:
      - name: ClusterId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: NodeId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/__string'
                Role:
                  $ref: '#/components/schemas/NodeRole'
                SdiSourceMappings:
                  $ref: '#/components/schemas/SdiSourceMappingsUpdateRequest'
      responses:
        '201': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/reservations/{ReservationId}:
    delete:
      operationId: DeleteReservation
      description: |-
        Delete an expired reservation.
      parameters:
      - name: ReservationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: DescribeReservation
      description: |-
        Get details for a reservation.
      parameters:
      - name: ReservationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: UpdateReservation
      description: |-
        Update reservation.
      parameters:
      - name: ReservationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/__string'
                RenewalSettings:
                  $ref: '#/components/schemas/RenewalSettings'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/sdiSources/{SdiSourceId}:
    delete:
      operationId: DeleteSdiSource
      description: |-
        Delete an SdiSource. The SdiSource must not be part of any SidSourceMapping and must not be attached to any input.
      parameters:
      - name: SdiSourceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '202': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: DescribeSdiSource
      description: |-
        Gets details about a SdiSource.
      parameters:
      - name: SdiSourceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: UpdateSdiSource
      description: |-
        Change some of the settings in an SdiSource.
      parameters:
      - name: SdiSourceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Mode:
                  $ref: '#/components/schemas/SdiSourceMode'
                Name:
                  $ref: '#/components/schemas/__string'
                Type:
                  $ref: '#/components/schemas/SdiSourceType'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/signal-maps/{Identifier}:
    delete:
      operationId: DeleteSignalMap
      description: |-
        Deletes the specified signal map.
      parameters:
      - name: Identifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '204': {}
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetSignalMap
      description: |-
        Retrieves the specified signal map.
      parameters:
      - name: Identifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    patch:
      operationId: StartUpdateSignalMap
      description: |-
        Initiates an update for the specified signal map. Will discover a new signal map if a changed discoveryEntryPointArn is provided.
      parameters:
      - name: Identifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                CloudWatchAlarmTemplateGroupIdentifiers:
                  $ref: '#/components/schemas/__listOf__stringPatternS'
                Description:
                  $ref: '#/components/schemas/__stringMin0Max1024'
                DiscoveryEntryPointArn:
                  $ref: '#/components/schemas/__stringMin1Max2048'
                EventBridgeRuleTemplateGroupIdentifiers:
                  $ref: '#/components/schemas/__listOf__stringPatternS'
                ForceRediscovery:
                  $ref: '#/components/schemas/__boolean'
                Name:
                  $ref: '#/components/schemas/__stringMin1Max255PatternS'
      responses:
        '202': {}
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/accountConfiguration:
    get:
      operationId: DescribeAccountConfiguration
      description: |-
        Describe account configuration
      parameters: []
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: UpdateAccountConfiguration
      description: |-
        Update account configuration
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AccountConfiguration:
                  $ref: '#/components/schemas/AccountConfiguration'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            Placeholder documentation for UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
  /prod/inputDevices/{InputDeviceId}:
    get:
      operationId: DescribeInputDevice
      description: |-
        Gets the details for the input device
      parameters:
      - name: InputDeviceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: UpdateInputDevice
      description: |-
        Updates the parameters for the input device.
      parameters:
      - name: InputDeviceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                HdDeviceSettings:
                  $ref: '#/components/schemas/InputDeviceConfigurableSettings'
                Name:
                  $ref: '#/components/schemas/__string'
                UhdDeviceSettings:
                  $ref: '#/components/schemas/InputDeviceConfigurableSettings'
                AvailabilityZone:
                  $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            Placeholder documentation for UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
  /prod/inputDevices/{InputDeviceId}/thumbnailData:
    get:
      operationId: DescribeInputDeviceThumbnail
      description: |-
        Get the latest thumbnail data for the input device.
      parameters:
      - name: InputDeviceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: accept
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/AcceptHeader'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/offerings/{OfferingId}:
    get:
      operationId: DescribeOffering
      description: |-
        Get details for an offering.
      parameters:
      - name: OfferingId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/channels/{ChannelId}/thumbnails:
    get:
      operationId: DescribeThumbnails
      description: |-
        Describe the latest thumbnails data.
      parameters:
      - name: ChannelId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: pipelineId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: thumbnailType
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/inputDeviceTransfers:
    get:
      operationId: ListInputDeviceTransfers
      description: |-
        List input devices that are currently being transferred. List input devices that you are transferring from your AWS account or input devices that another AWS account is transferring to you.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: transferType
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            Placeholder documentation for UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
  /prod/inputDevices:
    get:
      operationId: ListInputDevices
      description: |-
        List input devices
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/offerings:
    get:
      operationId: ListOfferings
      description: |-
        List offerings available for purchase.
      parameters:
      - name: channelClass
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: channelConfiguration
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: codec
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: duration
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: maximumBitrate
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: maximumFramerate
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: resolution
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: resourceType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: specialFeature
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: videoQuality
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/reservations:
    get:
      operationId: ListReservations
      description: |-
        List purchased reservations.
      parameters:
      - name: channelClass
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: codec
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: maximumBitrate
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: maximumFramerate
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: resolution
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: resourceType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: specialFeature
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: videoQuality
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/versions:
    get:
      operationId: ListVersions
      description: |-
        Retrieves an array of all the encoder engine versions that are available in this AWS account.
      parameters: []
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/offerings/{OfferingId}/purchase:
    post:
      operationId: PurchaseOffering
      description: |-
        Purchase an offering and create a reservation.
      parameters:
      - name: OfferingId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Count:
                  $ref: '#/components/schemas/__integerMin1'
                Name:
                  $ref: '#/components/schemas/__string'
                RenewalSettings:
                  $ref: '#/components/schemas/RenewalSettings'
                RequestId:
                  $ref: '#/components/schemas/__string'
                Start:
                  $ref: '#/components/schemas/__string'
                Tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '201': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/inputDevices/{InputDeviceId}/reboot:
    post:
      operationId: RebootInputDevice
      description: |-
        Send a reboot command to the specified input device. The device will begin rebooting within a few seconds of sending the command. When the reboot is complete, the device’s connection status will change to connected.
      parameters:
      - name: InputDeviceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Force:
                  $ref: '#/components/schemas/RebootInputDeviceForce'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            Placeholder documentation for UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
  /prod/inputDevices/{InputDeviceId}/reject:
    post:
      operationId: RejectInputDeviceTransfer
      description: |-
        Reject the transfer of the specified input device to your AWS account.
      parameters:
      - name: InputDeviceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            Placeholder documentation for UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
  /prod/channels/{ChannelId}/restartChannelPipelines:
    post:
      operationId: RestartChannelPipelines
      description: |-
        Restart pipelines in one channel that is currently running.
      parameters:
      - name: ChannelId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                PipelineIds:
                  $ref: '#/components/schemas/__listOfChannelPipelineIdToRestart'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/channels/{ChannelId}/start:
    post:
      operationId: StartChannel
      description: |-
        Starts an existing channel
      parameters:
      - name: ChannelId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/signal-maps/{Identifier}/monitor-deployment:
    delete:
      operationId: StartDeleteMonitorDeployment
      description: |-
        Initiates a deployment to delete the monitor of the specified signal map.
      parameters:
      - name: Identifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '202': {}
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    post:
      operationId: StartMonitorDeployment
      description: |-
        Initiates a deployment to deploy the latest monitor of the specified signal map.
      parameters:
      - name: Identifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DryRun:
                  $ref: '#/components/schemas/__boolean'
      responses:
        '202': {}
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/inputDevices/{InputDeviceId}/start:
    post:
      operationId: StartInputDevice
      description: |-
        Start an input device that is attached to a MediaConnect flow. (There is no need to start a device that is attached to a MediaLive input; MediaLive starts the device when the channel starts.)
      parameters:
      - name: InputDeviceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            Placeholder documentation for UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
  /prod/inputDevices/{InputDeviceId}/startInputDeviceMaintenanceWindow:
    post:
      operationId: StartInputDeviceMaintenanceWindow
      description: |-
        Start a maintenance window for the specified input device. Starting a maintenance window will give the device up to two hours to install software. If the device was streaming prior to the maintenance, it will resume streaming when the software is fully installed. Devices automatically install updates while they are powered on and their MediaLive channels are stopped. A maintenance window allows you to update a device without having to stop MediaLive channels that use the device. The device must remain powered on and connected to the internet for the duration of the maintenance.
      parameters:
      - name: InputDeviceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            Placeholder documentation for UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
  /prod/multiplexes/{MultiplexId}/start:
    post:
      operationId: StartMultiplex
      description: |-
        Start (run) the multiplex. Starting the multiplex does not start the channels. You must explicitly start each channel.
      parameters:
      - name: MultiplexId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '202': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/channels/{ChannelId}/stop:
    post:
      operationId: StopChannel
      description: |-
        Stops a running channel
      parameters:
      - name: ChannelId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/inputDevices/{InputDeviceId}/stop:
    post:
      operationId: StopInputDevice
      description: |-
        Stop an input device that is attached to a MediaConnect flow. (There is no need to stop a device that is attached to a MediaLive input; MediaLive automatically stops the device when the channel stops.)
      parameters:
      - name: InputDeviceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            Placeholder documentation for UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
  /prod/multiplexes/{MultiplexId}/stop:
    post:
      operationId: StopMultiplex
      description: |-
        Stops a running multiplex. If the multiplex isn't running, this action has no effect.
      parameters:
      - name: MultiplexId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '202': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /prod/inputDevices/{InputDeviceId}/transfer:
    post:
      operationId: TransferInputDevice
      description: |-
        Start an input device transfer to another AWS account. After you make the request, the other account must accept or reject the transfer.
      parameters:
      - name: InputDeviceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TargetCustomerId:
                  $ref: '#/components/schemas/__string'
                TargetRegion:
                  $ref: '#/components/schemas/__string'
                TransferMessage:
                  $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            Placeholder documentation for UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
  /prod/channels/{ChannelId}/channelClass:
    put:
      operationId: UpdateChannelClass
      description: |-
        Changes the class of the channel.
      parameters:
      - name: ChannelId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ChannelClass:
                  $ref: '#/components/schemas/ChannelClass'
                Destinations:
                  $ref: '#/components/schemas/__listOfOutputDestination'
      responses:
        '200': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Placeholder documentation for NotFoundException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            Placeholder documentation for UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
  /prod/clusters/{ClusterId}/nodes/{NodeId}/state:
    put:
      operationId: UpdateNodeState
      description: |-
        Update the state of a node.
      parameters:
      - name: ClusterId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: NodeId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                State:
                  $ref: '#/components/schemas/UpdateNodeStateShape'
      responses:
        '201': {}
        '502':
          description: |-
            Placeholder documentation for BadGatewayException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '400':
          description: |-
            Placeholder documentation for BadRequestException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Placeholder documentation for ConflictException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Placeholder documentation for ForbiddenException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '504':
          description: |-
            Placeholder documentation for GatewayTimeoutException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '500':
          description: |-
            Placeholder documentation for InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '429':
          description: |-
            Placeholder documentation for TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            Placeholder documentation for UnprocessableEntityException
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
components:
  schemas:
    AacCodingMode:
      type: string
      enum:
      - AD_RECEIVER_MIX
      - CODING_MODE_1_0
      - CODING_MODE_1_1
      - CODING_MODE_2_0
      - CODING_MODE_5_1
      description: Aac Coding Mode
    AacInputType:
      type: string
      enum:
      - BROADCASTER_MIXED_AD
      - NORMAL
      description: Aac Input Type
    AacProfile:
      type: string
      enum:
      - HEV1
      - HEV2
      - LC
      description: Aac Profile
    AacRateControlMode:
      type: string
      enum:
      - CBR
      - VBR
      description: Aac Rate Control Mode
    AacRawFormat:
      type: string
      enum:
      - LATM_LOAS
      - NONE
      description: Aac Raw Format
    AacSettings:
      type: object
      properties:
        Bitrate:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: Average bitrate in bits/second. Valid values depend on rate
            control mode and profile.
        CodingMode:
          allOf:
          - $ref: '#/components/schemas/AacCodingMode'
          description: Mono, Stereo, or 5.1 channel layout. Valid values depend on
            rate control mode and profile. The adReceiverMix setting receives a stereo
            description plus control track and emits a mono AAC encode of the description
            track, with control data emitted in the PES header as per ETSI TS 101
            154 Annex E.
        InputType:
          allOf:
          - $ref: '#/components/schemas/AacInputType'
          description: Set to "broadcasterMixedAd" when input contains pre-mixed main
            audio + AD (narration) as a stereo pair. The Audio Type field (audioType)
            will be set to 3, which signals to downstream systems that this stream
            contains "broadcaster mixed AD". Note that the input received by the encoder
            must contain pre-mixed audio; the encoder does not perform the mixing.
            The values in audioTypeControl and audioType (in AudioDescription) are
            ignored when set to broadcasterMixedAd. Leave set to "normal" when input
            does not contain pre-mixed audio + AD.
        Profile:
          allOf:
          - $ref: '#/components/schemas/AacProfile'
          description: AAC Profile.
        RateControlMode:
          allOf:
          - $ref: '#/components/schemas/AacRateControlMode'
          description: Rate Control Mode.
        RawFormat:
          allOf:
          - $ref: '#/components/schemas/AacRawFormat'
          description: Sets LATM / LOAS AAC output for raw containers.
        SampleRate:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: Sample rate in Hz. Valid values depend on rate control mode
            and profile.
        Spec:
          allOf:
          - $ref: '#/components/schemas/AacSpec'
          description: Use MPEG-2 AAC audio instead of MPEG-4 AAC audio for raw or
            MPEG-2 Transport Stream containers.
        VbrQuality:
          allOf:
          - $ref: '#/components/schemas/AacVbrQuality'
          description: VBR Quality Level - Only used if rateControlMode is VBR.
      description: Aac Settings
    AacSpec:
      type: string
      enum:
      - MPEG2
      - MPEG4
      description: Aac Spec
    AacVbrQuality:
      type: string
      enum:
      - HIGH
      - LOW
      - MEDIUM_HIGH
      - MEDIUM_LOW
      description: Aac Vbr Quality
    Ac3AttenuationControl:
      type: string
      enum:
      - ATTENUATE_3_DB
      - NONE
      description: Ac3 Attenuation Control
    Ac3BitstreamMode:
      type: string
      enum:
      - COMMENTARY
      - COMPLETE_MAIN
      - DIALOGUE
      - EMERGENCY
      - HEARING_IMPAIRED
      - MUSIC_AND_EFFECTS
      - VISUALLY_IMPAIRED
      - VOICE_OVER
      description: Ac3 Bitstream Mode
    Ac3CodingMode:
      type: string
      enum:
      - CODING_MODE_1_0
      - CODING_MODE_1_1
      - CODING_MODE_2_0
      - CODING_MODE_3_2_LFE
      description: Ac3 Coding Mode
    Ac3DrcProfile:
      type: string
      enum:
      - FILM_STANDARD
      - NONE
      description: Ac3 Drc Profile
    Ac3LfeFilter:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: Ac3 Lfe Filter
    Ac3MetadataControl:
      type: string
      enum:
      - FOLLOW_INPUT
      - USE_CONFIGURED
      description: Ac3 Metadata Control
    Ac3Settings:
      type: object
      properties:
        Bitrate:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: Average bitrate in bits/second. Valid bitrates depend on the
            coding mode.
        BitstreamMode:
          allOf:
          - $ref: '#/components/schemas/Ac3BitstreamMode'
          description: Specifies the bitstream mode (bsmod) for the emitted AC-3 stream.
            See ATSC A/52-2012 for background on these values.
        CodingMode:
          allOf:
          - $ref: '#/components/schemas/Ac3CodingMode'
          description: Dolby Digital coding mode. Determines number of channels.
        Dialnorm:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max31'
          description: Sets the dialnorm for the output. If excluded and input audio
            is Dolby Digital, dialnorm will be passed through.
        DrcProfile:
          allOf:
          - $ref: '#/components/schemas/Ac3DrcProfile'
          description: If set to filmStandard, adds dynamic range compression signaling
            to the output bitstream as defined in the Dolby Digital specification.
        LfeFilter:
          allOf:
          - $ref: '#/components/schemas/Ac3LfeFilter'
          description: When set to enabled, applies a 120Hz lowpass filter to the
            LFE channel prior to encoding. Only valid in codingMode32Lfe mode.
        MetadataControl:
          allOf:
          - $ref: '#/components/schemas/Ac3MetadataControl'
          description: When set to "followInput", encoder metadata will be sourced
            from the DD, DD+, or DolbyE decoder that supplied this audio data. If
            audio was not supplied from one of these streams, then the static metadata
            settings will be used.
        AttenuationControl:
          allOf:
          - $ref: '#/components/schemas/Ac3AttenuationControl'
          description: Applies a 3 dB attenuation to the surround channels. Applies
            only when the coding mode parameter is CODING_MODE_3_2_LFE.
      description: Ac3 Settings
    AcceptHeader:
      type: string
      enum:
      - image/jpeg
      description: The HTTP Accept header. Indicates the requested type fothe thumbnail.
    AcceptInputDeviceTransferRequest:
      type: object
      properties:
        InputDeviceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique ID of the input device to accept. For example, hd-123456789abcdef.
      required:
      - InputDeviceId
      description: Placeholder documentation for AcceptInputDeviceTransferRequest
    AcceptInputDeviceTransferResponse:
      type: object
      properties: {}
      description: Placeholder documentation for AcceptInputDeviceTransferResponse
    AccessibilityType:
      type: string
      enum:
      - DOES_NOT_IMPLEMENT_ACCESSIBILITY_FEATURES
      - IMPLEMENTS_ACCESSIBILITY_FEATURES
      description: Accessibility Type
    AccountConfiguration:
      type: object
      properties:
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Specifies the KMS key to use for all features that use key
            encryption. Specify the ARN of a KMS key that you have created. Or leave
            blank to use the key that MediaLive creates and manages for you.
      description: Placeholder documentation for AccountConfiguration
    AfdSignaling:
      type: string
      enum:
      - AUTO
      - FIXED
      - NONE
      description: Afd Signaling
    Algorithm:
      type: string
      enum:
      - AES128
      - AES192
      - AES256
      description: Placeholder documentation for Algorithm
    AncillarySourceSettings:
      type: object
      properties:
        SourceAncillaryChannelNumber:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max4'
          description: Specifies the number (1 to 4) of the captions channel you want
            to extract from the ancillary captions. If you plan to convert the ancillary
            captions to another format, complete this field. If you plan to choose
            Embedded as the captions destination in the output (to pass through all
            the channels in the ancillary captions), leave this field blank because
            MediaLive ignores the field.
      description: Ancillary Source Settings
    AnywhereSettings:
      type: object
      properties:
        ChannelPlacementGroupId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the channel placement group for the channel.
        ClusterId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the cluster for the channel.
      description: Elemental anywhere settings
    ArchiveCdnSettings:
      type: object
      properties:
        ArchiveS3Settings:
          $ref: '#/components/schemas/ArchiveS3Settings'
      description: Archive Cdn Settings
    ArchiveContainerSettings:
      type: object
      properties:
        M2tsSettings:
          $ref: '#/components/schemas/M2tsSettings'
        RawSettings:
          $ref: '#/components/schemas/RawSettings'
      description: Archive Container Settings
    ArchiveGroupSettings:
      type: object
      properties:
        ArchiveCdnSettings:
          allOf:
          - $ref: '#/components/schemas/ArchiveCdnSettings'
          description: Parameters that control interactions with the CDN.
        Destination:
          allOf:
          - $ref: '#/components/schemas/OutputLocationRef'
          description: A directory and base filename where archive files should be
            written.
        RolloverInterval:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: Number of seconds to write to archive file before closing and
            starting a new one.
      required:
      - Destination
      description: Archive Group Settings
    ArchiveOutputSettings:
      type: object
      properties:
        ContainerSettings:
          allOf:
          - $ref: '#/components/schemas/ArchiveContainerSettings'
          description: Settings specific to the container type of the file.
        Extension:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Output file extension. If excluded, this will be auto-selected
            from the container type.
        NameModifier:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: String concatenated to the end of the destination filename.
            Required for multiple outputs of the same type.
      required:
      - ContainerSettings
      description: Archive Output Settings
    ArchiveS3Settings:
      type: object
      properties:
        CannedAcl:
          allOf:
          - $ref: '#/components/schemas/S3CannedAcl'
          description: Specify the canned ACL to apply to each S3 request. Defaults
            to none.
      description: Archive S3 Settings
    AribDestinationSettings:
      type: object
      properties: {}
      description: Arib Destination Settings
    AribSourceSettings:
      type: object
      properties: {}
      description: Arib Source Settings
    AudioChannelMapping:
      type: object
      properties:
        InputChannelLevels:
          allOf:
          - $ref: '#/components/schemas/__listOfInputChannelLevel'
          description: Indices and gain values for each input channel that should
            be remixed into this output channel.
        OutputChannel:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max7'
          description: The index of the output channel being produced.
      required:
      - InputChannelLevels
      - OutputChannel
      description: Audio Channel Mapping
    AudioCodecSettings:
      type: object
      properties:
        AacSettings:
          $ref: '#/components/schemas/AacSettings'
        Ac3Settings:
          $ref: '#/components/schemas/Ac3Settings'
        Eac3AtmosSettings:
          $ref: '#/components/schemas/Eac3AtmosSettings'
        Eac3Settings:
          $ref: '#/components/schemas/Eac3Settings'
        Mp2Settings:
          $ref: '#/components/schemas/Mp2Settings'
        PassThroughSettings:
          $ref: '#/components/schemas/PassThroughSettings'
        WavSettings:
          $ref: '#/components/schemas/WavSettings'
      description: Audio Codec Settings
    AudioDescription:
      type: object
      properties:
        AudioNormalizationSettings:
          allOf:
          - $ref: '#/components/schemas/AudioNormalizationSettings'
          description: Advanced audio normalization settings.
        AudioSelectorName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the AudioSelector used as the source for this AudioDescription.
        AudioType:
          allOf:
          - $ref: '#/components/schemas/AudioType'
          description: Applies only if audioTypeControl is useConfigured. The values
            for audioType are defined in ISO-IEC 13818-1.
        AudioTypeControl:
          allOf:
          - $ref: '#/components/schemas/AudioDescriptionAudioTypeControl'
          description: 'Determines how audio type is determined. followInput: If the
            input contains an ISO 639 audioType, then that value is passed through
            to the output. If the input contains no ISO 639 audioType, the value in
            Audio Type is included in the output. useConfigured: The value in Audio
            Type is included in the output. Note that this field and audioType are
            both ignored if inputType is broadcasterMixedAd.'
        AudioWatermarkingSettings:
          allOf:
          - $ref: '#/components/schemas/AudioWatermarkSettings'
          description: Settings to configure one or more solutions that insert audio
            watermarks in the audio encode
        CodecSettings:
          allOf:
          - $ref: '#/components/schemas/AudioCodecSettings'
          description: Audio codec settings.
        LanguageCode:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max35'
          description: RFC 5646 language code representing the language of the audio
            output track. Only used if languageControlMode is useConfigured, or there
            is no ISO 639 language code specified in the input.
        LanguageCodeControl:
          allOf:
          - $ref: '#/components/schemas/AudioDescriptionLanguageCodeControl'
          description: Choosing followInput will cause the ISO 639 language code of
            the output to follow the ISO 639 language code of the input. The languageCode
            will be used when useConfigured is set, or when followInput is selected
            but there is no ISO 639 language code specified by the input.
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMax255'
          description: The name of this AudioDescription. Outputs will use this name
            to uniquely identify this AudioDescription. Description names should be
            unique within this Live Event.
        RemixSettings:
          allOf:
          - $ref: '#/components/schemas/RemixSettings'
          description: Settings that control how input audio channels are remixed
            into the output audio channels.
        StreamName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Used for MS Smooth and Apple HLS outputs. Indicates the name
            displayed by the player (eg. English, or Director Commentary).
        AudioDashRoles:
          allOf:
          - $ref: '#/components/schemas/__listOfDashRoleAudio'
          description: Identifies the DASH roles to assign to this audio output. Applies
            only when the audio output is configured for DVB DASH accessibility signaling.
        DvbDashAccessibility:
          allOf:
          - $ref: '#/components/schemas/DvbDashAccessibility'
          description: Identifies DVB DASH accessibility signaling in this audio output.
            Used in Microsoft Smooth Streaming outputs to signal accessibility information
            to packagers.
      required:
      - AudioSelectorName
      - Name
      description: Audio Description
    AudioDescriptionAudioTypeControl:
      type: string
      enum:
      - FOLLOW_INPUT
      - USE_CONFIGURED
      description: Audio Description Audio Type Control
    AudioDescriptionLanguageCodeControl:
      type: string
      enum:
      - FOLLOW_INPUT
      - USE_CONFIGURED
      description: Audio Description Language Code Control
    AudioDolbyEDecode:
      type: object
      properties:
        ProgramSelection:
          allOf:
          - $ref: '#/components/schemas/DolbyEProgramSelection'
          description: Applies only to Dolby E. Enter the program ID (according to
            the metadata in the audio) of the Dolby E program to extract from the
            specified track. One program extracted per audio selector. To select multiple
            programs, create multiple selectors with the same Track and different
            Program numbers. “All channels” means to ignore the program IDs and include
            all the channels in this selector; useful if metadata is known to be incorrect.
      required:
      - ProgramSelection
      description: Audio Dolby EDecode
    AudioHlsRenditionSelection:
      type: object
      properties:
        GroupId:
          allOf:
          - $ref: '#/components/schemas/__stringMin1'
          description: 'Specifies the GROUP-ID in the #EXT-X-MEDIA tag of the target
            HLS audio rendition.'
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1'
          description: 'Specifies the NAME in the #EXT-X-MEDIA tag of the target HLS
            audio rendition.'
      required:
      - GroupId
      - Name
      description: Audio Hls Rendition Selection
    AudioLanguageSelection:
      type: object
      properties:
        LanguageCode:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Selects a specific three-letter language code from within an
            audio source.
        LanguageSelectionPolicy:
          allOf:
          - $ref: '#/components/schemas/AudioLanguageSelectionPolicy'
          description: When set to "strict", the transport stream demux strictly identifies
            audio streams by their language descriptor. If a PMT update occurs such
            that an audio stream matching the initially selected language is no longer
            present then mute will be encoded until the language returns. If "loose",
            then on a PMT update the demux will choose another audio stream in the
            program with the same stream type if it can't find one with the same language.
      required:
      - LanguageCode
      description: Audio Language Selection
    AudioLanguageSelectionPolicy:
      type: string
      enum:
      - LOOSE
      - STRICT
      description: Audio Language Selection Policy
    AudioNormalizationAlgorithm:
      type: string
      enum:
      - ITU_1770_1
      - ITU_1770_2
      description: Audio Normalization Algorithm
    AudioNormalizationAlgorithmControl:
      type: string
      enum:
      - CORRECT_AUDIO
      description: Audio Normalization Algorithm Control
    AudioNormalizationSettings:
      type: object
      properties:
        Algorithm:
          allOf:
          - $ref: '#/components/schemas/AudioNormalizationAlgorithm'
          description: Audio normalization algorithm to use. itu17701 conforms to
            the CALM Act specification, itu17702 conforms to the EBU R-128 specification.
        AlgorithmControl:
          allOf:
          - $ref: '#/components/schemas/AudioNormalizationAlgorithmControl'
          description: When set to correctAudio the output audio is corrected using
            the chosen algorithm. If set to measureOnly, the audio will be measured
            but not adjusted.
        TargetLkfs:
          allOf:
          - $ref: '#/components/schemas/__doubleMinNegative59Max0'
          description: Target LKFS(loudness) to adjust volume to. If no value is entered,
            a default value will be used according to the chosen algorithm. The CALM
            Act (1770-1) recommends a target of -24 LKFS. The EBU R-128 specification
            (1770-2) recommends a target of -23 LKFS.
      description: Audio Normalization Settings
    AudioOnlyHlsSegmentType:
      type: string
      enum:
      - AAC
      - FMP4
      description: Audio Only Hls Segment Type
    AudioOnlyHlsSettings:
      type: object
      properties:
        AudioGroupId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Specifies the group to which the audio Rendition belongs.
        AudioOnlyImage:
          allOf:
          - $ref: '#/components/schemas/InputLocation'
          description: Optional. Specifies the .jpg or .png image to use as the cover
            art for an audio-only output. We recommend a low bit-size file because
            the image increases the output audio bandwidth. The image is attached
            to the audio as an ID3 tag, frame type APIC, picture type 0x10, as per
            the "ID3 tag version 2.4.0 - Native Frames" standard.
        AudioTrackType:
          allOf:
          - $ref: '#/components/schemas/AudioOnlyHlsTrackType'
          description: 'Four types of audio-only tracks are supported: Audio-Only
            Variant Stream The client can play back this audio-only stream instead
            of video in low-bandwidth scenarios. Represented as an EXT-X-STREAM-INF
            in the HLS manifest. Alternate Audio, Auto Select, Default Alternate rendition
            that the client should try to play back by default. Represented as an
            EXT-X-MEDIA in the HLS manifest with DEFAULT=YES, AUTOSELECT=YES Alternate
            Audio, Auto Select, Not Default Alternate rendition that the client may
            try to play back by default. Represented as an EXT-X-MEDIA in the HLS
            manifest with DEFAULT=NO, AUTOSELECT=YES Alternate Audio, not Auto Select
            Alternate rendition that the client will not try to play back by default.
            Represented as an EXT-X-MEDIA in the HLS manifest with DEFAULT=NO, AUTOSELECT=NO'
        SegmentType:
          allOf:
          - $ref: '#/components/schemas/AudioOnlyHlsSegmentType'
          description: Specifies the segment type.
      description: Audio Only Hls Settings
    AudioOnlyHlsTrackType:
      type: string
      enum:
      - ALTERNATE_AUDIO_AUTO_SELECT
      - ALTERNATE_AUDIO_AUTO_SELECT_DEFAULT
      - ALTERNATE_AUDIO_NOT_AUTO_SELECT
      - AUDIO_ONLY_VARIANT_STREAM
      description: Audio Only Hls Track Type
    AudioPidSelection:
      type: object
      properties:
        Pid:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max8191'
          description: Selects a specific PID from within a source.
      required:
      - Pid
      description: Audio Pid Selection
    AudioSelector:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1'
          description: The name of this AudioSelector. AudioDescriptions will use
            this name to uniquely identify this Selector. Selector names should be
            unique per input.
        SelectorSettings:
          allOf:
          - $ref: '#/components/schemas/AudioSelectorSettings'
          description: The audio selector settings.
      required:
      - Name
      description: Audio Selector
    AudioSelectorSettings:
      type: object
      properties:
        AudioHlsRenditionSelection:
          $ref: '#/components/schemas/AudioHlsRenditionSelection'
        AudioLanguageSelection:
          $ref: '#/components/schemas/AudioLanguageSelection'
        AudioPidSelection:
          $ref: '#/components/schemas/AudioPidSelection'
        AudioTrackSelection:
          $ref: '#/components/schemas/AudioTrackSelection'
      description: Audio Selector Settings
    AudioSilenceFailoverSettings:
      type: object
      properties:
        AudioSelectorName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the audio selector in the input that MediaLive
            should monitor to detect silence. Select your most important rendition.
            If you didn't create an audio selector in this input, leave blank.
        AudioSilenceThresholdMsec:
          allOf:
          - $ref: '#/components/schemas/__integerMin1000'
          description: The amount of time (in milliseconds) that the active input
            must be silent before automatic input failover occurs. Silence is defined
            as audio loss or audio quieter than -50 dBFS.
      required:
      - AudioSelectorName
      description: Placeholder documentation for AudioSilenceFailoverSettings
    AudioTrack:
      type: object
      properties:
        Track:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: 1-based integer value that maps to a specific audio track
      required:
      - Track
      description: Audio Track
    AudioTrackSelection:
      type: object
      properties:
        Tracks:
          allOf:
          - $ref: '#/components/schemas/__listOfAudioTrack'
          description: Selects one or more unique audio tracks from within a source.
        DolbyEDecode:
          allOf:
          - $ref: '#/components/schemas/AudioDolbyEDecode'
          description: Configure decoding options for Dolby E streams - these should
            be Dolby E frames carried in PCM streams tagged with SMPTE-337
      required:
      - Tracks
      description: Audio Track Selection
    AudioType:
      type: string
      enum:
      - CLEAN_EFFECTS
      - HEARING_IMPAIRED
      - UNDEFINED
      - VISUAL_IMPAIRED_COMMENTARY
      description: Audio Type
    AudioWatermarkSettings:
      type: object
      properties:
        NielsenWatermarksSettings:
          allOf:
          - $ref: '#/components/schemas/NielsenWatermarksSettings'
          description: Settings to configure Nielsen Watermarks in the audio encode
      description: Audio Watermark Settings
    AuthenticationScheme:
      type: string
      enum:
      - AKAMAI
      - COMMON
      description: Authentication Scheme
    AutomaticInputFailoverSettings:
      type: object
      properties:
        ErrorClearTimeMsec:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: This clear time defines the requirement a recovered input must
            meet to be considered healthy. The input must have no failover conditions
            for this length of time. Enter a time in milliseconds. This value is particularly
            important if the input_preference for the failover pair is set to PRIMARY_INPUT_PREFERRED,
            because after this time, MediaLive will switch back to the primary input.
        FailoverConditions:
          allOf:
          - $ref: '#/components/schemas/__listOfFailoverCondition'
          description: A list of failover conditions. If any of these conditions occur,
            MediaLive will perform a failover to the other input.
        InputPreference:
          allOf:
          - $ref: '#/components/schemas/InputPreference'
          description: Input preference when deciding which input to make active when
            a previously failed input has recovered.
        SecondaryInputId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The input ID of the secondary input in the automatic input
            failover pair.
      required:
      - SecondaryInputId
      description: The settings for Automatic Input Failover.
    Av1ColorSpaceSettings:
      type: object
      properties:
        ColorSpacePassthroughSettings:
          $ref: '#/components/schemas/ColorSpacePassthroughSettings'
        Hdr10Settings:
          $ref: '#/components/schemas/Hdr10Settings'
        Rec601Settings:
          $ref: '#/components/schemas/Rec601Settings'
        Rec709Settings:
          $ref: '#/components/schemas/Rec709Settings'
      description: Av1 Color Space Settings
    Av1GopSizeUnits:
      type: string
      enum:
      - FRAMES
      - SECONDS
      description: Av1 Gop Size Units
    Av1Level:
      type: string
      enum:
      - AV1_LEVEL_2
      - AV1_LEVEL_2_1
      - AV1_LEVEL_3
      - AV1_LEVEL_3_1
      - AV1_LEVEL_4
      - AV1_LEVEL_4_1
      - AV1_LEVEL_5
      - AV1_LEVEL_5_1
      - AV1_LEVEL_5_2
      - AV1_LEVEL_5_3
      - AV1_LEVEL_6
      - AV1_LEVEL_6_1
      - AV1_LEVEL_6_2
      - AV1_LEVEL_6_3
      - AV1_LEVEL_AUTO
      description: Av1 Level
    Av1LookAheadRateControl:
      type: string
      enum:
      - HIGH
      - LOW
      - MEDIUM
      description: Av1 Look Ahead Rate Control
    Av1SceneChangeDetect:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: Av1 Scene Change Detect
    Av1Settings:
      type: object
      properties:
        AfdSignaling:
          allOf:
          - $ref: '#/components/schemas/AfdSignaling'
          description: 'Configures whether MediaLive will write AFD values into the
            video. AUTO: MediaLive will try to preserve the input AFD value (in cases
            where multiple AFD values are valid). FIXED: the AFD value will be the
            value configured in the fixedAfd parameter. NONE: MediaLive won''t write
            AFD into the video'
        BufSize:
          allOf:
          - $ref: '#/components/schemas/__integerMin50000Max16000000'
          description: The size of the buffer (HRD buffer model) in bits.
        ColorSpaceSettings:
          allOf:
          - $ref: '#/components/schemas/Av1ColorSpaceSettings'
          description: Color Space settings
        FixedAfd:
          allOf:
          - $ref: '#/components/schemas/FixedAfd'
          description: Complete this property only if you set the afdSignaling property
            to FIXED. Choose the AFD value (4 bits) to write on all frames of the
            video encode.
        FramerateDenominator:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max3003'
          description: The denominator for the framerate. Framerate is a fraction,
            for example, 24000 / 1001.
        FramerateNumerator:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: The numerator for the framerate. Framerate is a fraction, for
            example, 24000 / 1001.
        GopSize:
          allOf:
          - $ref: '#/components/schemas/__doubleMin0'
          description: The GOP size (keyframe interval). If GopSizeUnits is frames,
            GopSize must be a whole number and must be greater than or equal to 1.
            If GopSizeUnits is seconds, GopSize must be greater than 0, but it can
            be a decimal.
        GopSizeUnits:
          allOf:
          - $ref: '#/components/schemas/Av1GopSizeUnits'
          description: 'Choose the units for the GOP size: FRAMES or SECONDS. For
            SECONDS, MediaLive converts the size into a frame count at run time.'
        Level:
          allOf:
          - $ref: '#/components/schemas/Av1Level'
          description: Sets the level. This parameter is one of the properties of
            the encoding scheme for AV1.
        LookAheadRateControl:
          allOf:
          - $ref: '#/components/schemas/Av1LookAheadRateControl'
          description: Sets the amount of lookahead. A value of LOW can decrease latency
            and memory usage. A value of HIGH can produce better quality for certain
            content.
        MaxBitrate:
          allOf:
          - $ref: '#/components/schemas/__integerMin50000Max8000000'
          description: The maximum bitrate to assign. For recommendations, see the
            description for qvbrQualityLevel.
        MinIInterval:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max30'
          description: Applies only if you enable SceneChangeDetect. Sets the interval
            between frames. This property ensures a minimum separation between repeated
            (cadence) I-frames and any I-frames inserted by scene change detection
            (SCD frames). Enter a number for the interval, measured in number of frames.
            If an SCD frame and a cadence frame are closer than the specified number
            of frames, MediaLive shrinks or stretches the GOP to include the SCD frame.
            Then normal cadence resumes in the next GOP. For GOP stretch to succeed,
            you must enable LookAheadRateControl. Note that the maximum GOP stretch
            = (GOP size) + (Minimum I-interval) - 1
        ParDenominator:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: The denominator for the output pixel aspect ratio (PAR).
        ParNumerator:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: The numerator for the output pixel aspect ratio (PAR).
        QvbrQualityLevel:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max10'
          description: 'Controls the target quality for the video encode. With QVBR
            rate control mode, the final quality is the target quality, constrained
            by the maxBitrate. Set values for the qvbrQualityLevel property and maxBitrate
            property that suit your most important viewing devices. To let MediaLive
            set the quality level (AUTO mode), leave the qvbrQualityLevel field empty.
            In this case, MediaLive uses the maximum bitrate, and the quality follows
            from that: more complex content might have a lower quality. Or set a target
            quality level and a maximum bitrate. With more complex content, MediaLive
            will try to achieve the target quality, but it won''t exceed the maximum
            bitrate. With less complex content, This option will use only the bitrate
            needed to reach the target quality. Recommended values are: Primary screen:
            qvbrQualityLevel: Leave empty. maxBitrate: 4,000,000 PC or tablet: qvbrQualityLevel:
            Leave empty. maxBitrate: 1,500,000 to 3,000,000 Smartphone: qvbrQualityLevel:
            Leave empty. maxBitrate: 1,000,000 to 1,500,000'
        SceneChangeDetect:
          allOf:
          - $ref: '#/components/schemas/Av1SceneChangeDetect'
          description: Controls whether MediaLive inserts I-frames when it detects
            a scene change. ENABLED or DISABLED.
        TimecodeBurninSettings:
          allOf:
          - $ref: '#/components/schemas/TimecodeBurninSettings'
          description: Configures the timecode burn-in feature. If you enable this
            feature, the timecode will become part of the video.
      required:
      - FramerateDenominator
      - FramerateNumerator
      description: Av1 Settings
    AvailBlanking:
      type: object
      properties:
        AvailBlankingImage:
          allOf:
          - $ref: '#/components/schemas/InputLocation'
          description: Blanking image to be used. Leave empty for solid black. Only
            bmp and png images are supported.
        State:
          allOf:
          - $ref: '#/components/schemas/AvailBlankingState'
          description: When set to enabled, causes video, audio and captions to be
            blanked when insertion metadata is added.
      description: Avail Blanking
    AvailBlankingState:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: Avail Blanking State
    AvailConfiguration:
      type: object
      properties:
        AvailSettings:
          allOf:
          - $ref: '#/components/schemas/AvailSettings'
          description: Controls how SCTE-35 messages create cues. Splice Insert mode
            treats all segmentation signals traditionally. With Time Signal APOS mode
            only Time Signal Placement Opportunity and Break messages create segment
            breaks. With ESAM mode, signals are forwarded to an ESAM server for possible
            update.
        Scte35SegmentationScope:
          allOf:
          - $ref: '#/components/schemas/Scte35SegmentationScope'
          description: 'Configures whether SCTE 35 passthrough triggers segment breaks
            in all output groups that use segmented outputs. Insertion of a SCTE 35
            message typically results in a segment break, in addition to the regular
            cadence of breaks. The segment breaks appear in video outputs, audio outputs,
            and captions outputs (if any). ALL_OUTPUT_GROUPS: Default. Insert the
            segment break in in all output groups that have segmented outputs. This
            is the legacy behavior. SCTE35_ENABLED_OUTPUT_GROUPS: Insert the segment
            break only in output groups that have SCTE 35 passthrough enabled. This
            is the recommended value, because it reduces unnecessary segment breaks.'
      description: Avail Configuration
    AvailSettings:
      type: object
      properties:
        Esam:
          $ref: '#/components/schemas/Esam'
        Scte35SpliceInsert:
          $ref: '#/components/schemas/Scte35SpliceInsert'
        Scte35TimeSignalApos:
          $ref: '#/components/schemas/Scte35TimeSignalApos'
      description: Avail Settings
    BadGatewayException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/__string'
      description: Placeholder documentation for BadGatewayException
    BadRequestException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/__string'
      description: Placeholder documentation for BadRequestException
    BandwidthReductionFilterSettings:
      type: object
      properties:
        PostFilterSharpening:
          allOf:
          - $ref: '#/components/schemas/BandwidthReductionPostFilterSharpening'
          description: Configures the sharpening control, which is available when
            the bandwidth reduction filter is enabled. This control sharpens edges
            and contours, which produces a specific artistic effect that you might
            want. We recommend that you test each of the values (including DISABLED)
            to observe the sharpening effect on the content.
        Strength:
          allOf:
          - $ref: '#/components/schemas/BandwidthReductionFilterStrength'
          description: Enables the bandwidth reduction filter. The filter strengths
            range from 1 to 4. We recommend that you always enable this filter and
            use AUTO, to let MediaLive apply the optimum filtering for the context.
      description: Bandwidth Reduction Filter Settings
    BandwidthReductionFilterStrength:
      type: string
      enum:
      - AUTO
      - STRENGTH_1
      - STRENGTH_2
      - STRENGTH_3
      - STRENGTH_4
      description: Bandwidth Reduction Filter Strength
    BandwidthReductionPostFilterSharpening:
      type: string
      enum:
      - DISABLED
      - SHARPENING_1
      - SHARPENING_2
      - SHARPENING_3
      description: Bandwidth Reduction Post Filter Sharpening
    BatchDeleteRequest:
      type: object
      properties:
        ChannelIds:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: List of channel IDs
        InputIds:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: List of input IDs
        InputSecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: List of input security group IDs
        MultiplexIds:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: List of multiplex IDs
      description: A request to delete resources
    BatchDeleteResponse:
      type: object
      properties:
        Failed:
          allOf:
          - $ref: '#/components/schemas/__listOfBatchFailedResultModel'
          description: List of failed operations
        Successful:
          allOf:
          - $ref: '#/components/schemas/__listOfBatchSuccessfulResultModel'
          description: List of successful operations
      description: Placeholder documentation for BatchDeleteResponse
    BatchFailedResultModel:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: ARN of the resource
        Code:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Error code for the failed operation
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: ID of the resource
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Error message for the failed operation
      description: Details from a failed operation
    BatchScheduleActionCreateRequest:
      type: object
      properties:
        ScheduleActions:
          allOf:
          - $ref: '#/components/schemas/__listOfScheduleAction'
          description: A list of schedule actions to create.
      required:
      - ScheduleActions
      description: A list of schedule actions to create (in a request) or that have
        been created (in a response).
    BatchScheduleActionCreateResult:
      type: object
      properties:
        ScheduleActions:
          allOf:
          - $ref: '#/components/schemas/__listOfScheduleAction'
          description: List of actions that have been created in the schedule.
      required:
      - ScheduleActions
      description: List of actions that have been created in the schedule.
    BatchScheduleActionDeleteRequest:
      type: object
      properties:
        ActionNames:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: A list of schedule actions to delete.
      required:
      - ActionNames
      description: A list of schedule actions to delete.
    BatchScheduleActionDeleteResult:
      type: object
      properties:
        ScheduleActions:
          allOf:
          - $ref: '#/components/schemas/__listOfScheduleAction'
          description: List of actions that have been deleted from the schedule.
      required:
      - ScheduleActions
      description: List of actions that have been deleted from the schedule.
    BatchStartRequest:
      type: object
      properties:
        ChannelIds:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: List of channel IDs
        MultiplexIds:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: List of multiplex IDs
      description: A request to start resources
    BatchStartResponse:
      type: object
      properties:
        Failed:
          allOf:
          - $ref: '#/components/schemas/__listOfBatchFailedResultModel'
          description: List of failed operations
        Successful:
          allOf:
          - $ref: '#/components/schemas/__listOfBatchSuccessfulResultModel'
          description: List of successful operations
      description: Placeholder documentation for BatchStartResponse
    BatchStopRequest:
      type: object
      properties:
        ChannelIds:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: List of channel IDs
        MultiplexIds:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: List of multiplex IDs
      description: A request to stop resources
    BatchStopResponse:
      type: object
      properties:
        Failed:
          allOf:
          - $ref: '#/components/schemas/__listOfBatchFailedResultModel'
          description: List of failed operations
        Successful:
          allOf:
          - $ref: '#/components/schemas/__listOfBatchSuccessfulResultModel'
          description: List of successful operations
      description: Placeholder documentation for BatchStopResponse
    BatchSuccessfulResultModel:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: ARN of the resource
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: ID of the resource
        State:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Current state of the resource
      description: Details from a successful operation
    BatchUpdateScheduleRequest:
      type: object
      properties:
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Id of the channel whose schedule is being updated.
        Creates:
          allOf:
          - $ref: '#/components/schemas/BatchScheduleActionCreateRequest'
          description: Schedule actions to create in the schedule.
        Deletes:
          allOf:
          - $ref: '#/components/schemas/BatchScheduleActionDeleteRequest'
          description: Schedule actions to delete from the schedule.
      required:
      - ChannelId
      description: List of actions to create and list of actions to delete.
    BatchUpdateScheduleResponse:
      type: object
      properties:
        Creates:
          allOf:
          - $ref: '#/components/schemas/BatchScheduleActionCreateResult'
          description: Schedule actions created in the schedule.
        Deletes:
          allOf:
          - $ref: '#/components/schemas/BatchScheduleActionDeleteResult'
          description: Schedule actions deleted from the schedule.
      description: Placeholder documentation for BatchUpdateScheduleResponse
    BlackoutSlate:
      type: object
      properties:
        BlackoutSlateImage:
          allOf:
          - $ref: '#/components/schemas/InputLocation'
          description: Blackout slate image to be used. Leave empty for solid black.
            Only bmp and png images are supported.
        NetworkEndBlackout:
          allOf:
          - $ref: '#/components/schemas/BlackoutSlateNetworkEndBlackout'
          description: Setting to enabled causes the encoder to blackout the video,
            audio, and captions, and raise the "Network Blackout Image" slate when
            an SCTE104/35 Network End Segmentation Descriptor is encountered. The
            blackout will be lifted when the Network Start Segmentation Descriptor
            is encountered. The Network End and Network Start descriptors must contain
            a network ID that matches the value entered in "Network ID".
        NetworkEndBlackoutImage:
          allOf:
          - $ref: '#/components/schemas/InputLocation'
          description: Path to local file to use as Network End Blackout image. Image
            will be scaled to fill the entire output raster.
        NetworkId:
          allOf:
          - $ref: '#/components/schemas/__stringMin34Max34'
          description: Provides Network ID that matches EIDR ID format (e.g., "10.XXXX/XXXX-XXXX-XXXX-XXXX-XXXX-C").
        State:
          allOf:
          - $ref: '#/components/schemas/BlackoutSlateState'
          description: When set to enabled, causes video, audio and captions to be
            blanked when indicated by program metadata.
      description: Blackout Slate
    BlackoutSlateNetworkEndBlackout:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: Blackout Slate Network End Blackout
    BlackoutSlateState:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: Blackout Slate State
    BurnInAlignment:
      type: string
      enum:
      - CENTERED
      - LEFT
      - SMART
      description: Burn In Alignment
    BurnInBackgroundColor:
      type: string
      enum:
      - BLACK
      - NONE
      - WHITE
      description: Burn In Background Color
    BurnInDestinationSettings:
      type: object
      properties:
        Alignment:
          allOf:
          - $ref: '#/components/schemas/BurnInAlignment'
          description: If no explicit xPosition or yPosition is provided, setting
            alignment to centered will place the captions at the bottom center of
            the output. Similarly, setting a left alignment will align captions to
            the bottom left of the output. If x and y positions are given in conjunction
            with the alignment parameter, the font will be justified (either left
            or centered) relative to those coordinates. Selecting "smart" justification
            will left-justify live subtitles and center-justify pre-recorded subtitles.
            All burn-in and DVB-Sub font settings must match.
        BackgroundColor:
          allOf:
          - $ref: '#/components/schemas/BurnInBackgroundColor'
          description: Specifies the color of the rectangle behind the captions. All
            burn-in and DVB-Sub font settings must match.
        BackgroundOpacity:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max255'
          description: Specifies the opacity of the background rectangle. 255 is opaque;
            0 is transparent. Leaving this parameter out is equivalent to setting
            it to 0 (transparent). All burn-in and DVB-Sub font settings must match.
        Font:
          allOf:
          - $ref: '#/components/schemas/InputLocation'
          description: External font file used for caption burn-in. File extension
            must be 'ttf' or 'tte'. Although the user can select output fonts for
            many different types of input captions, embedded, STL and teletext sources
            use a strict grid system. Using external fonts with these caption sources
            could cause unexpected display of proportional fonts. All burn-in and
            DVB-Sub font settings must match.
        FontColor:
          allOf:
          - $ref: '#/components/schemas/BurnInFontColor'
          description: Specifies the color of the burned-in captions. This option
            is not valid for source captions that are STL, 608/embedded or teletext.
            These source settings are already pre-defined by the caption stream. All
            burn-in and DVB-Sub font settings must match.
        FontOpacity:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max255'
          description: Specifies the opacity of the burned-in captions. 255 is opaque;
            0 is transparent. All burn-in and DVB-Sub font settings must match.
        FontResolution:
          allOf:
          - $ref: '#/components/schemas/__integerMin96Max600'
          description: Font resolution in DPI (dots per inch); default is 96 dpi.
            All burn-in and DVB-Sub font settings must match.
        FontSize:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: When set to 'auto' fontSize will scale depending on the size
            of the output. Giving a positive integer will specify the exact font size
            in points. All burn-in and DVB-Sub font settings must match.
        OutlineColor:
          allOf:
          - $ref: '#/components/schemas/BurnInOutlineColor'
          description: Specifies font outline color. This option is not valid for
            source captions that are either 608/embedded or teletext. These source
            settings are already pre-defined by the caption stream. All burn-in and
            DVB-Sub font settings must match.
        OutlineSize:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max10'
          description: Specifies font outline size in pixels. This option is not valid
            for source captions that are either 608/embedded or teletext. These source
            settings are already pre-defined by the caption stream. All burn-in and
            DVB-Sub font settings must match.
        ShadowColor:
          allOf:
          - $ref: '#/components/schemas/BurnInShadowColor'
          description: Specifies the color of the shadow cast by the captions. All
            burn-in and DVB-Sub font settings must match.
        ShadowOpacity:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max255'
          description: Specifies the opacity of the shadow. 255 is opaque; 0 is transparent.
            Leaving this parameter out is equivalent to setting it to 0 (transparent).
            All burn-in and DVB-Sub font settings must match.
        ShadowXOffset:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Specifies the horizontal offset of the shadow relative to the
            captions in pixels. A value of -2 would result in a shadow offset 2 pixels
            to the left. All burn-in and DVB-Sub font settings must match.
        ShadowYOffset:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Specifies the vertical offset of the shadow relative to the
            captions in pixels. A value of -2 would result in a shadow offset 2 pixels
            above the text. All burn-in and DVB-Sub font settings must match.
        TeletextGridControl:
          allOf:
          - $ref: '#/components/schemas/BurnInTeletextGridControl'
          description: Controls whether a fixed grid size will be used to generate
            the output subtitles bitmap. Only applicable for Teletext inputs and DVB-Sub/Burn-in
            outputs.
        XPosition:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: Specifies the horizontal position of the caption relative to
            the left side of the output in pixels. A value of 10 would result in the
            captions starting 10 pixels from the left of the output. If no explicit
            xPosition is provided, the horizontal caption position will be determined
            by the alignment parameter. All burn-in and DVB-Sub font settings must
            match.
        YPosition:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: Specifies the vertical position of the caption relative to
            the top of the output in pixels. A value of 10 would result in the captions
            starting 10 pixels from the top of the output. If no explicit yPosition
            is provided, the caption will be positioned towards the bottom of the
            output. All burn-in and DVB-Sub font settings must match.
      description: Burn In Destination Settings
    BurnInFontColor:
      type: string
      enum:
      - BLACK
      - BLUE
      - GREEN
      - RED
      - WHITE
      - YELLOW
      description: Burn In Font Color
    BurnInOutlineColor:
      type: string
      enum:
      - BLACK
      - BLUE
      - GREEN
      - RED
      - WHITE
      - YELLOW
      description: Burn In Outline Color
    BurnInShadowColor:
      type: string
      enum:
      - BLACK
      - NONE
      - WHITE
      description: Burn In Shadow Color
    BurnInTeletextGridControl:
      type: string
      enum:
      - FIXED
      - SCALED
      description: Burn In Teletext Grid Control
    CancelInputDeviceTransferRequest:
      type: object
      properties:
        InputDeviceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique ID of the input device to cancel. For example, hd-123456789abcdef.
      required:
      - InputDeviceId
      description: Placeholder documentation for CancelInputDeviceTransferRequest
    CancelInputDeviceTransferResponse:
      type: object
      properties: {}
      description: Placeholder documentation for CancelInputDeviceTransferResponse
    CaptionDescription:
      type: object
      properties:
        Accessibility:
          allOf:
          - $ref: '#/components/schemas/AccessibilityType'
          description: Indicates whether the caption track implements accessibility
            features such as written descriptions of spoken dialog, music, and sounds.
            This signaling is added to HLS output group and MediaPackage output group.
        CaptionSelectorName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Specifies which input caption selector to use as a caption
            source when generating output captions. This field should match a captionSelector
            name.
        DestinationSettings:
          allOf:
          - $ref: '#/components/schemas/CaptionDestinationSettings'
          description: Additional settings for captions destination that depend on
            the destination type.
        LanguageCode:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'ISO 639-2 three-digit code: http://www.loc.gov/standards/iso639-2/'
        LanguageDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Human readable information to indicate captions available for
            players (eg. English, or Spanish).
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Name of the caption description. Used to associate a caption
            description with an output. Names must be unique within an event.
        CaptionDashRoles:
          allOf:
          - $ref: '#/components/schemas/__listOfDashRoleCaption'
          description: Identifies the DASH roles to assign to this captions output.
            Applies only when the captions output is configured for DVB DASH accessibility
            signaling.
        DvbDashAccessibility:
          allOf:
          - $ref: '#/components/schemas/DvbDashAccessibility'
          description: Identifies DVB DASH accessibility signaling in this captions
            output. Used in Microsoft Smooth Streaming outputs to signal accessibility
            information to packagers.
      required:
      - CaptionSelectorName
      - Name
      description: Caption Description
    CaptionDestinationSettings:
      type: object
      properties:
        AribDestinationSettings:
          $ref: '#/components/schemas/AribDestinationSettings'
        BurnInDestinationSettings:
          $ref: '#/components/schemas/BurnInDestinationSettings'
        DvbSubDestinationSettings:
          $ref: '#/components/schemas/DvbSubDestinationSettings'
        EbuTtDDestinationSettings:
          $ref: '#/components/schemas/EbuTtDDestinationSettings'
        EmbeddedDestinationSettings:
          $ref: '#/components/schemas/EmbeddedDestinationSettings'
        EmbeddedPlusScte20DestinationSettings:
          $ref: '#/components/schemas/EmbeddedPlusScte20DestinationSettings'
        RtmpCaptionInfoDestinationSettings:
          $ref: '#/components/schemas/RtmpCaptionInfoDestinationSettings'
        Scte20PlusEmbeddedDestinationSettings:
          $ref: '#/components/schemas/Scte20PlusEmbeddedDestinationSettings'
        Scte27DestinationSettings:
          $ref: '#/components/schemas/Scte27DestinationSettings'
        SmpteTtDestinationSettings:
          $ref: '#/components/schemas/SmpteTtDestinationSettings'
        TeletextDestinationSettings:
          $ref: '#/components/schemas/TeletextDestinationSettings'
        TtmlDestinationSettings:
          $ref: '#/components/schemas/TtmlDestinationSettings'
        WebvttDestinationSettings:
          $ref: '#/components/schemas/WebvttDestinationSettings'
      description: Caption Destination Settings
    CaptionLanguageMapping:
      type: object
      properties:
        CaptionChannel:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max4'
          description: The closed caption channel being described by this CaptionLanguageMapping.
            Each channel mapping must have a unique channel number (maximum of 4)
        LanguageCode:
          allOf:
          - $ref: '#/components/schemas/__stringMin3Max3'
          description: Three character ISO 639-2 language code (see http://www.loc.gov/standards/iso639-2)
        LanguageDescription:
          allOf:
          - $ref: '#/components/schemas/__stringMin1'
          description: Textual description of language
      required:
      - CaptionChannel
      - LanguageCode
      - LanguageDescription
      description: Maps a caption channel to an ISO 693-2 language code (http://www.loc.gov/standards/iso639-2),
        with an optional description.
    CaptionRectangle:
      type: object
      properties:
        Height:
          allOf:
          - $ref: '#/components/schemas/__doubleMin0Max100'
          description: See the description in leftOffset. For height, specify the
            entire height of the rectangle as a percentage of the underlying frame
            height. For example, \"80\" means the rectangle height is 80% of the underlying
            frame height. The topOffset and rectangleHeight must add up to 100% or
            less. This field corresponds to tts:extent - Y in the TTML standard.
        LeftOffset:
          allOf:
          - $ref: '#/components/schemas/__doubleMin0Max100'
          description: Applies only if you plan to convert these source captions to
            EBU-TT-D or TTML in an output. (Make sure to leave the default if you
            don't have either of these formats in the output.) You can define a display
            rectangle for the captions that is smaller than the underlying video frame.
            You define the rectangle by specifying the position of the left edge,
            top edge, bottom edge, and right edge of the rectangle, all within the
            underlying video frame. The units for the measurements are percentages.
            If you specify a value for one of these fields, you must specify a value
            for all of them. For leftOffset, specify the position of the left edge
            of the rectangle, as a percentage of the underlying frame width, and relative
            to the left edge of the frame. For example, \"10\" means the measurement
            is 10% of the underlying frame width. The rectangle left edge starts at
            that position from the left edge of the frame. This field corresponds
            to tts:origin - X in the TTML standard.
        TopOffset:
          allOf:
          - $ref: '#/components/schemas/__doubleMin0Max100'
          description: See the description in leftOffset. For topOffset, specify the
            position of the top edge of the rectangle, as a percentage of the underlying
            frame height, and relative to the top edge of the frame. For example,
            \"10\" means the measurement is 10% of the underlying frame height. The
            rectangle top edge starts at that position from the top edge of the frame.
            This field corresponds to tts:origin - Y in the TTML standard.
        Width:
          allOf:
          - $ref: '#/components/schemas/__doubleMin0Max100'
          description: See the description in leftOffset. For width, specify the entire
            width of the rectangle as a percentage of the underlying frame width.
            For example, \"80\" means the rectangle width is 80% of the underlying
            frame width. The leftOffset and rectangleWidth must add up to 100% or
            less. This field corresponds to tts:extent - X in the TTML standard.
      required:
      - Height
      - LeftOffset
      - TopOffset
      - Width
      description: Caption Rectangle
    CaptionSelector:
      type: object
      properties:
        LanguageCode:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: When specified this field indicates the three letter language
            code of the caption track to extract from the source.
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1'
          description: Name identifier for a caption selector. This name is used to
            associate this caption selector with one or more caption descriptions.
            Names must be unique within an event.
        SelectorSettings:
          allOf:
          - $ref: '#/components/schemas/CaptionSelectorSettings'
          description: Caption selector settings.
      required:
      - Name
      description: Caption Selector
    CaptionSelectorSettings:
      type: object
      properties:
        AncillarySourceSettings:
          $ref: '#/components/schemas/AncillarySourceSettings'
        AribSourceSettings:
          $ref: '#/components/schemas/AribSourceSettings'
        DvbSubSourceSettings:
          $ref: '#/components/schemas/DvbSubSourceSettings'
        EmbeddedSourceSettings:
          $ref: '#/components/schemas/EmbeddedSourceSettings'
        Scte20SourceSettings:
          $ref: '#/components/schemas/Scte20SourceSettings'
        Scte27SourceSettings:
          $ref: '#/components/schemas/Scte27SourceSettings'
        TeletextSourceSettings:
          $ref: '#/components/schemas/TeletextSourceSettings'
      description: Caption Selector Settings
    CdiInputResolution:
      type: string
      enum:
      - SD
      - HD
      - FHD
      - UHD
      description: Maximum CDI input resolution; SD is 480i and 576i up to 30 frames-per-second
        (fps), HD is 720p up to 60 fps / 1080i up to 30 fps, FHD is 1080p up to 60
        fps, UHD is 2160p up to 60 fps
    CdiInputSpecification:
      type: object
      properties:
        Resolution:
          allOf:
          - $ref: '#/components/schemas/CdiInputResolution'
          description: Maximum CDI input resolution
      description: Placeholder documentation for CdiInputSpecification
    Channel:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique arn of the channel.
        CdiInputSpecification:
          allOf:
          - $ref: '#/components/schemas/CdiInputSpecification'
          description: Specification of CDI inputs for this channel
        ChannelClass:
          allOf:
          - $ref: '#/components/schemas/ChannelClass'
          description: The class for this channel. STANDARD for a channel with two
            pipelines or SINGLE_PIPELINE for a channel with one pipeline.
        Destinations:
          allOf:
          - $ref: '#/components/schemas/__listOfOutputDestination'
          description: A list of destinations of the channel. For UDP outputs, there
            is one destination per output. For other types (HLS, for example), there
            is one destination per packager.
        EgressEndpoints:
          allOf:
          - $ref: '#/components/schemas/__listOfChannelEgressEndpoint'
          description: The endpoints where outgoing connections initiate from
        EncoderSettings:
          $ref: '#/components/schemas/EncoderSettings'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique id of the channel.
        InputAttachments:
          allOf:
          - $ref: '#/components/schemas/__listOfInputAttachment'
          description: List of input attachments for channel.
        InputSpecification:
          allOf:
          - $ref: '#/components/schemas/InputSpecification'
          description: Specification of network and file inputs for this channel
        LogLevel:
          allOf:
          - $ref: '#/components/schemas/LogLevel'
          description: The log level being written to CloudWatch Logs.
        Maintenance:
          allOf:
          - $ref: '#/components/schemas/MaintenanceStatus'
          description: Maintenance settings for this channel.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the channel. (user-mutable)
        PipelineDetails:
          allOf:
          - $ref: '#/components/schemas/__listOfPipelineDetail'
          description: Runtime details for the pipelines of a running channel.
        PipelinesRunningCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The number of currently healthy pipelines.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the role assumed when running
            the Channel.
        State:
          $ref: '#/components/schemas/ChannelState'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A collection of key-value pairs.
        Vpc:
          allOf:
          - $ref: '#/components/schemas/VpcOutputSettingsDescription'
          description: Settings for VPC output
        AnywhereSettings:
          allOf:
          - $ref: '#/components/schemas/DescribeAnywhereSettings'
          description: Anywhere settings for this channel.
        ChannelEngineVersion:
          allOf:
          - $ref: '#/components/schemas/ChannelEngineVersionResponse'
          description: Requested engine version for this channel.
      description: Placeholder documentation for Channel
    ChannelClass:
      type: string
      enum:
      - STANDARD
      - SINGLE_PIPELINE
      description: A standard channel has two encoding pipelines and a single pipeline
        channel only has one.
    ChannelEgressEndpoint:
      type: object
      properties:
        SourceIp:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Public IP of where a channel's output comes from
      description: Placeholder documentation for ChannelEgressEndpoint
    ChannelEngineVersionRequest:
      type: object
      properties:
        Version:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The build identifier of the engine version to use for this
            channel. Specify 'DEFAULT' to reset to the default version.
      description: Placeholder documentation for ChannelEngineVersionRequest
    ChannelEngineVersionResponse:
      type: object
      properties:
        ExpirationDate:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The UTC time when the version expires.
        Version:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The build identifier for this version of the channel version.
      description: Placeholder documentation for ChannelEngineVersionResponse
    ChannelPipelineIdToRestart:
      type: string
      enum:
      - PIPELINE_0
      - PIPELINE_1
      description: Property of RestartChannelPipelinesRequest
    ChannelPlacementGroupState:
      type: string
      enum:
      - UNASSIGNED
      - ASSIGNING
      - ASSIGNED
      - DELETING
      - DELETE_FAILED
      - DELETED
      - UNASSIGNING
      description: Used in DescribeChannelPlacementGroupResult
    ChannelState:
      type: string
      enum:
      - CREATING
      - CREATE_FAILED
      - IDLE
      - STARTING
      - RUNNING
      - RECOVERING
      - STOPPING
      - DELETING
      - DELETED
      - UPDATING
      - UPDATE_FAILED
      description: Placeholder documentation for ChannelState
    ChannelSummary:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique arn of the channel.
        CdiInputSpecification:
          allOf:
          - $ref: '#/components/schemas/CdiInputSpecification'
          description: Specification of CDI inputs for this channel
        ChannelClass:
          allOf:
          - $ref: '#/components/schemas/ChannelClass'
          description: The class for this channel. STANDARD for a channel with two
            pipelines or SINGLE_PIPELINE for a channel with one pipeline.
        Destinations:
          allOf:
          - $ref: '#/components/schemas/__listOfOutputDestination'
          description: A list of destinations of the channel. For UDP outputs, there
            is one destination per output. For other types (HLS, for example), there
            is one destination per packager.
        EgressEndpoints:
          allOf:
          - $ref: '#/components/schemas/__listOfChannelEgressEndpoint'
          description: The endpoints where outgoing connections initiate from
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique id of the channel.
        InputAttachments:
          allOf:
          - $ref: '#/components/schemas/__listOfInputAttachment'
          description: List of input attachments for channel.
        InputSpecification:
          allOf:
          - $ref: '#/components/schemas/InputSpecification'
          description: Specification of network and file inputs for this channel
        LogLevel:
          allOf:
          - $ref: '#/components/schemas/LogLevel'
          description: The log level being written to CloudWatch Logs.
        Maintenance:
          allOf:
          - $ref: '#/components/schemas/MaintenanceStatus'
          description: Maintenance settings for this channel.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the channel. (user-mutable)
        PipelinesRunningCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The number of currently healthy pipelines.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the role assumed when running
            the Channel.
        State:
          $ref: '#/components/schemas/ChannelState'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A collection of key-value pairs.
        Vpc:
          allOf:
          - $ref: '#/components/schemas/VpcOutputSettingsDescription'
          description: Settings for any VPC outputs.
        AnywhereSettings:
          allOf:
          - $ref: '#/components/schemas/DescribeAnywhereSettings'
          description: AnywhereSettings settings for this channel.
        ChannelEngineVersion:
          allOf:
          - $ref: '#/components/schemas/ChannelEngineVersionResponse'
          description: The engine version that you requested for this channel.
        UsedChannelEngineVersions:
          allOf:
          - $ref: '#/components/schemas/__listOfChannelEngineVersionResponse'
          description: The engine version that the running pipelines are using.
      description: Placeholder documentation for ChannelSummary
    ClaimDeviceRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The id of the device you want to claim.
      description: A request to claim an AWS Elemental device that you have purchased
        from a third-party vendor.
    ClaimDeviceResponse:
      type: object
      properties: {}
      description: Placeholder documentation for ClaimDeviceResponse
    CloudWatchAlarmTemplateComparisonOperator:
      type: string
      enum:
      - GreaterThanOrEqualToThreshold
      - GreaterThanThreshold
      - LessThanThreshold
      - LessThanOrEqualToThreshold
      description: The comparison operator used to compare the specified statistic
        and the threshold.
    CloudWatchAlarmTemplateGroupSummary:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__stringPatternArnMedialiveCloudwatchAlarmTemplateGroup'
          description: A cloudwatch alarm template group's ARN (Amazon Resource Name)
        CreatedAt:
          $ref: '#/components/schemas/__timestampIso8601'
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max1024'
          description: A resource's optional description.
        Id:
          allOf:
          - $ref: '#/components/schemas/__stringMin7Max11PatternAws097'
          description: A cloudwatch alarm template group's id. AWS provided template
            groups have ids that start with `aws-`
        ModifiedAt:
          $ref: '#/components/schemas/__timestampIso8601'
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max255PatternS'
          description: A resource's name. Names must be unique within the scope of
            a resource type in a specific region.
        Tags:
          $ref: '#/components/schemas/TagMap'
        TemplateCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The number of templates in a group.
      required:
      - Arn
      - CreatedAt
      - Id
      - Name
      - TemplateCount
      description: Placeholder documentation for CloudWatchAlarmTemplateGroupSummary
    CloudWatchAlarmTemplateStatistic:
      type: string
      enum:
      - SampleCount
      - Average
      - Sum
      - Minimum
      - Maximum
      description: The statistic to apply to the alarm's metric data.
    CloudWatchAlarmTemplateSummary:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__stringPatternArnMedialiveCloudwatchAlarmTemplate'
          description: A cloudwatch alarm template's ARN (Amazon Resource Name)
        ComparisonOperator:
          $ref: '#/components/schemas/CloudWatchAlarmTemplateComparisonOperator'
        CreatedAt:
          $ref: '#/components/schemas/__timestampIso8601'
        DatapointsToAlarm:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: The number of datapoints within the evaluation period that
            must be breaching to trigger the alarm.
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max1024'
          description: A resource's optional description.
        EvaluationPeriods:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: The number of periods over which data is compared to the specified
            threshold.
        GroupId:
          allOf:
          - $ref: '#/components/schemas/__stringMin7Max11PatternAws097'
          description: A cloudwatch alarm template group's id. AWS provided template
            groups have ids that start with `aws-`
        Id:
          allOf:
          - $ref: '#/components/schemas/__stringMin7Max11PatternAws097'
          description: A cloudwatch alarm template's id. AWS provided templates have
            ids that start with `aws-`
        MetricName:
          allOf:
          - $ref: '#/components/schemas/__stringMax64'
          description: The name of the metric associated with the alarm. Must be compatible
            with targetResourceType.
        ModifiedAt:
          $ref: '#/components/schemas/__timestampIso8601'
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max255PatternS'
          description: A resource's name. Names must be unique within the scope of
            a resource type in a specific region.
        Period:
          allOf:
          - $ref: '#/components/schemas/__integerMin10Max86400'
          description: The period, in seconds, over which the specified statistic
            is applied.
        Statistic:
          $ref: '#/components/schemas/CloudWatchAlarmTemplateStatistic'
        Tags:
          $ref: '#/components/schemas/TagMap'
        TargetResourceType:
          $ref: '#/components/schemas/CloudWatchAlarmTemplateTargetResourceType'
        Threshold:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: The threshold value to compare with the specified statistic.
        TreatMissingData:
          $ref: '#/components/schemas/CloudWatchAlarmTemplateTreatMissingData'
      required:
      - Arn
      - ComparisonOperator
      - CreatedAt
      - EvaluationPeriods
      - GroupId
      - Id
      - MetricName
      - Name
      - Period
      - Statistic
      - TargetResourceType
      - Threshold
      - TreatMissingData
      description: Placeholder documentation for CloudWatchAlarmTemplateSummary
    CloudWatchAlarmTemplateTargetResourceType:
      type: string
      enum:
      - CLOUDFRONT_DISTRIBUTION
      - MEDIALIVE_MULTIPLEX
      - MEDIALIVE_CHANNEL
      - MEDIALIVE_INPUT_DEVICE
      - MEDIAPACKAGE_CHANNEL
      - MEDIAPACKAGE_ORIGIN_ENDPOINT
      - MEDIACONNECT_FLOW
      - S3_BUCKET
      - MEDIATAILOR_PLAYBACK_CONFIGURATION
      description: The resource type this template should dynamically generate cloudwatch
        metric alarms for.
    CloudWatchAlarmTemplateTreatMissingData:
      type: string
      enum:
      - notBreaching
      - breaching
      - ignore
      - missing
      description: Specifies how missing data points are treated when evaluating the
        alarm's condition.
    ClusterNetworkSettings:
      type: object
      properties:
        DefaultRoute:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The network interface that is the default route for traffic
            to and from the node. MediaLive Anywhere uses this default when the destination
            for the traffic isn't covered by the route table for any of the networks.
            Specify the value of the appropriate logicalInterfaceName parameter that
            you create in the interfaceMappings.
        InterfaceMappings:
          allOf:
          - $ref: '#/components/schemas/__listOfInterfaceMapping'
          description: An array of interfaceMapping objects for this Cluster. Each
            mapping logically connects one interface on the nodes with one Network.
            You need only one mapping for each interface because all the Nodes share
            the mapping.
      description: Used in DescribeClusterResult, DescribeClusterSummary, UpdateClusterResult.
    ClusterNetworkSettingsCreateRequest:
      type: object
      properties:
        DefaultRoute:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Specify one network interface as the default route for traffic
            to and from the Node. MediaLive Anywhere uses this default when the destination
            for the traffic isn't covered by the route table for any of the networks.
            Specify the value of the appropriate logicalInterfaceName parameter that
            you create in the interfaceMappings.
        InterfaceMappings:
          allOf:
          - $ref: '#/components/schemas/__listOfInterfaceMappingCreateRequest'
          description: An array of interfaceMapping objects for this Cluster. You
            must create a mapping for node interfaces that you plan to use for encoding
            traffic. You typically don't create a mapping for the management interface.
            You define this mapping in the Cluster so that the mapping can be used
            by all the Nodes. Each mapping logically connects one interface on the
            nodes with one Network. Each mapping consists of a pair of parameters.
            The logicalInterfaceName parameter creates a logical name for the Node
            interface that handles a specific type of traffic. For example, my-Inputs-Interface.
            The networkID parameter refers to the ID of the network. When you create
            the Nodes in this Cluster, you will associate the logicalInterfaceName
            with the appropriate physical interface.
      description: Used in a CreateClusterRequest.
    ClusterNetworkSettingsUpdateRequest:
      type: object
      properties:
        DefaultRoute:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Include this parameter only if you want to change the default
            route for the Cluster. Specify one network interface as the default route
            for traffic to and from the node. MediaLive Anywhere uses this default
            when the destination for the traffic isn't covered by the route table
            for any of the networks. Specify the value of the appropriate logicalInterfaceName
            parameter that you create in the interfaceMappings.
        InterfaceMappings:
          allOf:
          - $ref: '#/components/schemas/__listOfInterfaceMappingUpdateRequest'
          description: An array of interfaceMapping objects for this Cluster. Include
            this parameter only if you want to change the interface mappings for the
            Cluster. Typically, you change the interface mappings only to fix an error
            you made when creating the mapping. In an update request, make sure that
            you enter the entire set of mappings again, not just the mappings that
            you want to add or change. You define this mapping so that the mapping
            can be used by all the Nodes. Each mapping logically connects one interface
            on the nodes with one Network. Each mapping consists of a pair of parameters.
            The logicalInterfaceName parameter creates a logical name for the Node
            interface that handles a specific type of traffic. For example, my-Inputs-Interface.
            The networkID parameter refers to the ID of the network. When you create
            the Nodes in this Cluster, you will associate the logicalInterfaceName
            with the appropriate physical interface.
      description: Placeholder documentation for ClusterNetworkSettingsUpdateRequest
    ClusterState:
      type: string
      enum:
      - CREATING
      - CREATE_FAILED
      - ACTIVE
      - DELETING
      - DELETE_FAILED
      - DELETED
      description: Used in DescribeClusterSummary, DescribeClusterResult, UpdateClusterResult.
    ClusterType:
      type: string
      enum:
      - ON_PREMISES
      description: Used in CreateClusterSummary, DescribeClusterSummary, DescribeClusterResult,
        UpdateClusterResult.
    CmafId3Behavior:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: Cmaf Id3 Behavior
    CmafIngestCaptionLanguageMapping:
      type: object
      properties:
        CaptionChannel:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max4'
          description: A number for the channel for this caption, 1 to 4.
        LanguageCode:
          allOf:
          - $ref: '#/components/schemas/__stringMin3Max3'
          description: Language code for the language of the caption in this channel.
            For example, ger/deu. See http://www.loc.gov/standards/iso639-2
      required:
      - CaptionChannel
      - LanguageCode
      description: Add an array item for each language. Follow the order of the caption
        descriptions. For example, if the first caption description is for German,
        then the first array item must be for German, and its caption channel must
        be set to 1. The second array item must be 2, and so on.
    CmafIngestGroupSettings:
      type: object
      properties:
        Destination:
          allOf:
          - $ref: '#/components/schemas/OutputLocationRef'
          description: A HTTP destination for the tracks
        NielsenId3Behavior:
          allOf:
          - $ref: '#/components/schemas/CmafNielsenId3Behavior'
          description: If set to passthrough, Nielsen inaudible tones for media tracking
            will be detected in the input audio and an equivalent ID3 tag will be
            inserted in the output.
        Scte35Type:
          allOf:
          - $ref: '#/components/schemas/Scte35Type'
          description: Type of scte35 track to add. none or scte35WithoutSegmentation
        SegmentLength:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: The nominal duration of segments. The units are specified in
            SegmentLengthUnits. The segments will end on the next keyframe after the
            specified duration, so the actual segment length might be longer, and
            it might be a fraction of the units.
        SegmentLengthUnits:
          allOf:
          - $ref: '#/components/schemas/CmafIngestSegmentLengthUnits'
          description: Time unit for segment length parameter.
        SendDelayMs:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max2000'
          description: Number of milliseconds to delay the output from the second
            pipeline.
        KlvBehavior:
          allOf:
          - $ref: '#/components/schemas/CmafKLVBehavior'
          description: If set to passthrough, passes any KLV data from the input source
            to this output.
        KlvNameModifier:
          allOf:
          - $ref: '#/components/schemas/__stringMax100'
          description: 'Change the modifier that MediaLive automatically adds to the
            Streams() name that identifies a KLV track. The default is "klv", which
            means the default name will be Streams(klv.cmfm). Any string you enter
            here will replace the "klv" string.\nThe modifier can only contain: numbers,
            letters, plus (+), minus (-), underscore (_) and period (.) and has a
            maximum length of 100 characters.'
        NielsenId3NameModifier:
          allOf:
          - $ref: '#/components/schemas/__stringMax100'
          description: 'Change the modifier that MediaLive automatically adds to the
            Streams() name that identifies a Nielsen ID3 track. The default is "nid3",
            which means the default name will be Streams(nid3.cmfm). Any string you
            enter here will replace the "nid3" string.\nThe modifier can only contain:
            numbers, letters, plus (+), minus (-), underscore (_) and period (.) and
            has a maximum length of 100 characters.'
        Scte35NameModifier:
          allOf:
          - $ref: '#/components/schemas/__stringMax100'
          description: 'Change the modifier that MediaLive automatically adds to the
            Streams() name for a SCTE 35 track. The default is "scte", which means
            the default name will be Streams(scte.cmfm). Any string you enter here
            will replace the "scte" string.\nThe modifier can only contain: numbers,
            letters, plus (+), minus (-), underscore (_) and period (.) and has a
            maximum length of 100 characters.'
        Id3Behavior:
          allOf:
          - $ref: '#/components/schemas/CmafId3Behavior'
          description: Set to ENABLED to enable ID3 metadata insertion. To include
            metadata, you configure other parameters in the output group, or you add
            an ID3 action to the channel schedule.
        Id3NameModifier:
          allOf:
          - $ref: '#/components/schemas/__stringMax100'
          description: 'Change the modifier that MediaLive automatically adds to the
            Streams() name that identifies an ID3 track. The default is "id3", which
            means the default name will be Streams(id3.cmfm). Any string you enter
            here will replace the "id3" string.\nThe modifier can only contain: numbers,
            letters, plus (+), minus (-), underscore (_) and period (.) and has a
            maximum length of 100 characters.'
        CaptionLanguageMappings:
          allOf:
          - $ref: '#/components/schemas/__listOfCmafIngestCaptionLanguageMapping'
          description: An array that identifies the languages in the four caption
            channels in the embedded captions.
        TimedMetadataId3Frame:
          allOf:
          - $ref: '#/components/schemas/CmafTimedMetadataId3Frame'
          description: Set to none if you don't want to insert a timecode in the output.
            Otherwise choose the frame type for the timecode.
        TimedMetadataId3Period:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max10000'
          description: If you set up to insert a timecode in the output, specify the
            frequency for the frame, in seconds.
        TimedMetadataPassthrough:
          allOf:
          - $ref: '#/components/schemas/CmafTimedMetadataPassthrough'
          description: Set to enabled to pass through ID3 metadata from the input
            sources.
      required:
      - Destination
      description: Cmaf Ingest Group Settings
    CmafIngestOutputSettings:
      type: object
      properties:
        NameModifier:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: String concatenated to the end of the destination filename.
            Required for multiple outputs of the same type.
      description: Cmaf Ingest Output Settings
    CmafIngestSegmentLengthUnits:
      type: string
      enum:
      - MILLISECONDS
      - SECONDS
      description: Cmaf Ingest Segment Length Units
    CmafKLVBehavior:
      type: string
      enum:
      - NO_PASSTHROUGH
      - PASSTHROUGH
      description: Cmaf KLVBehavior
    CmafNielsenId3Behavior:
      type: string
      enum:
      - NO_PASSTHROUGH
      - PASSTHROUGH
      description: Cmaf Nielsen Id3 Behavior
    CmafTimedMetadataId3Frame:
      type: string
      enum:
      - NONE
      - PRIV
      - TDRL
      description: Cmaf Timed Metadata Id3 Frame
    CmafTimedMetadataPassthrough:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: Cmaf Timed Metadata Passthrough
    ColorCorrection:
      type: object
      properties:
        InputColorSpace:
          allOf:
          - $ref: '#/components/schemas/ColorSpace'
          description: The color space of the input.
        OutputColorSpace:
          allOf:
          - $ref: '#/components/schemas/ColorSpace'
          description: The color space of the output.
        Uri:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URI of the 3D LUT file. The protocol must be 's3:' or 's3ssl:':.
      required:
      - InputColorSpace
      - OutputColorSpace
      - Uri
      description: Property of ColorCorrectionSettings. Used for custom color space
        conversion. The object identifies one 3D LUT file and specifies the input/output
        color space combination that the file will be used for.
    ColorCorrectionSettings:
      type: object
      properties:
        GlobalColorCorrections:
          allOf:
          - $ref: '#/components/schemas/__listOfColorCorrection'
          description: An array of colorCorrections that applies when you are using
            3D LUT files to perform color conversion on video. Each colorCorrection
            contains one 3D LUT file (that defines the color mapping for converting
            an input color space to an output color space), and the input/output combination
            that this 3D LUT file applies to. MediaLive reads the color space in the
            input metadata, determines the color space that you have specified for
            the output, and finds and uses the LUT file that applies to this combination.
      required:
      - GlobalColorCorrections
      description: Property of encoderSettings. Controls color conversion when you
        are using 3D LUT files to perform color conversion on video.
    ColorSpace:
      type: string
      enum:
      - HDR10
      - HLG_2020
      - REC_601
      - REC_709
      description: Property of colorCorrections. When you are using 3D LUT files to
        perform color conversion on video, these are the supported color spaces.
    ColorSpacePassthroughSettings:
      type: object
      properties: {}
      description: Passthrough applies no color space conversion to the output
    ConflictException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/__string'
      description: Placeholder documentation for ConflictException
    ContentType:
      type: string
      enum:
      - image/jpeg
      description: Specifies the media type of the thumbnail.
    CreateChannelPlacementGroupRequest:
      type: object
      properties:
        ClusterId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the cluster.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Specify a name that is unique in the Cluster. You can't change
            the name. Names are case-sensitive.
        Nodes:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: An array of one ID for the Node that you want to associate
            with the ChannelPlacementGroup. (You can't associate more than one Node
            with the ChannelPlacementGroup.) The Node and the ChannelPlacementGroup
            must be in the same Cluster.
        RequestId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: An ID that you assign to a create request. This ID ensures
            idempotency when creating resources. the request.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A collection of key-value pairs.
      required:
      - ClusterId
      description: A request to create a channel placement group.
    CreateChannelPlacementGroupResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of this ChannelPlacementGroup. It is automatically
            assigned when the ChannelPlacementGroup is created.
        Channels:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: Used in ListChannelPlacementGroupsResult
        ClusterId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the Cluster that the Node belongs to.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the ChannelPlacementGroup. Unique in the AWS account.
            The ID is the resource-id portion of the ARN.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name that you specified for the ChannelPlacementGroup.
        Nodes:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: An array with one item, which is the single Node that is associated
            with the ChannelPlacementGroup.
        State:
          allOf:
          - $ref: '#/components/schemas/ChannelPlacementGroupState'
          description: The current state of the ChannelPlacementGroup.
      description: Placeholder documentation for CreateChannelPlacementGroupResponse
    CreateChannelRequest:
      type: object
      properties:
        CdiInputSpecification:
          allOf:
          - $ref: '#/components/schemas/CdiInputSpecification'
          description: Specification of CDI inputs for this channel
        ChannelClass:
          allOf:
          - $ref: '#/components/schemas/ChannelClass'
          description: The class for this channel. STANDARD for a channel with two
            pipelines or SINGLE_PIPELINE for a channel with one pipeline.
        Destinations:
          $ref: '#/components/schemas/__listOfOutputDestination'
        EncoderSettings:
          $ref: '#/components/schemas/EncoderSettings'
        InputAttachments:
          allOf:
          - $ref: '#/components/schemas/__listOfInputAttachment'
          description: List of input attachments for channel.
        InputSpecification:
          allOf:
          - $ref: '#/components/schemas/InputSpecification'
          description: Specification of network and file inputs for this channel
        LogLevel:
          allOf:
          - $ref: '#/components/schemas/LogLevel'
          description: The log level to write to CloudWatch Logs.
        Maintenance:
          allOf:
          - $ref: '#/components/schemas/MaintenanceCreateSettings'
          description: Maintenance settings for this channel.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Name of channel.
        RequestId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Unique request ID to be specified. This is needed to prevent
            retries from creating multiple resources.
        Reserved:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Deprecated field that's only usable by whitelisted customers.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: An optional Amazon Resource Name (ARN) of the role to assume
            when running the Channel.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A collection of key-value pairs.
        Vpc:
          allOf:
          - $ref: '#/components/schemas/VpcOutputSettings'
          description: Settings for the VPC outputs
        AnywhereSettings:
          allOf:
          - $ref: '#/components/schemas/AnywhereSettings'
          description: The Elemental Anywhere settings for this channel.
        ChannelEngineVersion:
          allOf:
          - $ref: '#/components/schemas/ChannelEngineVersionRequest'
          description: The desired engine version for this channel.
        DryRun:
          $ref: '#/components/schemas/__boolean'
      description: A request to create a channel
    CreateChannelResponse:
      type: object
      properties:
        Channel:
          $ref: '#/components/schemas/Channel'
      description: Placeholder documentation for CreateChannelResponse
    CreateCloudWatchAlarmTemplateGroupRequest:
      type: object
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max1024'
          description: A resource's optional description.
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max255PatternS'
          description: A resource's name. Names must be unique within the scope of
            a resource type in a specific region.
        Tags:
          $ref: '#/components/schemas/TagMap'
        RequestId:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max256PatternS'
          description: An ID that you assign to a create request. This ID ensures
            idempotency when creating resources.
      required:
      - Name
      description: Placeholder documentation for CreateCloudWatchAlarmTemplateGroupRequest
    CreateCloudWatchAlarmTemplateGroupResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__stringPatternArnMedialiveCloudwatchAlarmTemplateGroup'
          description: A cloudwatch alarm template group's ARN (Amazon Resource Name)
        CreatedAt:
          $ref: '#/components/schemas/__timestampIso8601'
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max1024'
          description: A resource's optional description.
        Id:
          allOf:
          - $ref: '#/components/schemas/__stringMin7Max11PatternAws097'
          description: A cloudwatch alarm template group's id. AWS provided template
            groups have ids that start with `aws-`
        ModifiedAt:
          $ref: '#/components/schemas/__timestampIso8601'
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max255PatternS'
          description: A resource's name. Names must be unique within the scope of
            a resource type in a specific region.
        Tags:
          $ref: '#/components/schemas/TagMap'
      description: Placeholder documentation for CreateCloudWatchAlarmTemplateGroupResponse
    CreateCloudWatchAlarmTemplateRequest:
      type: object
      properties:
        ComparisonOperator:
          $ref: '#/components/schemas/CloudWatchAlarmTemplateComparisonOperator'
        DatapointsToAlarm:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: The number of datapoints within the evaluation period that
            must be breaching to trigger the alarm.
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max1024'
          description: A resource's optional description.
        EvaluationPeriods:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: The number of periods over which data is compared to the specified
            threshold.
        GroupIdentifier:
          allOf:
          - $ref: '#/components/schemas/__stringPatternS'
          description: A cloudwatch alarm template group's identifier. Can be either
            be its id or current name.
        MetricName:
          allOf:
          - $ref: '#/components/schemas/__stringMax64'
          description: The name of the metric associated with the alarm. Must be compatible
            with targetResourceType.
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max255PatternS'
          description: A resource's name. Names must be unique within the scope of
            a resource type in a specific region.
        Period:
          allOf:
          - $ref: '#/components/schemas/__integerMin10Max86400'
          description: The period, in seconds, over which the specified statistic
            is applied.
        Statistic:
          $ref: '#/components/schemas/CloudWatchAlarmTemplateStatistic'
        Tags:
          $ref: '#/components/schemas/TagMap'
        TargetResourceType:
          $ref: '#/components/schemas/CloudWatchAlarmTemplateTargetResourceType'
        Threshold:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: The threshold value to compare with the specified statistic.
        TreatMissingData:
          $ref: '#/components/schemas/CloudWatchAlarmTemplateTreatMissingData'
        RequestId:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max256PatternS'
          description: An ID that you assign to a create request. This ID ensures
            idempotency when creating resources.
      required:
      - ComparisonOperator
      - EvaluationPeriods
      - GroupIdentifier
      - MetricName
      - Name
      - Period
      - Statistic
      - TargetResourceType
      - Threshold
      - TreatMissingData
      description: Placeholder documentation for CreateCloudWatchAlarmTemplateRequest
    CreateCloudWatchAlarmTemplateResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__stringPatternArnMedialiveCloudwatchAlarmTemplate'
          description: A cloudwatch alarm template's ARN (Amazon Resource Name)
        ComparisonOperator:
          $ref: '#/components/schemas/CloudWatchAlarmTemplateComparisonOperator'
        CreatedAt:
          $ref: '#/components/schemas/__timestampIso8601'
        DatapointsToAlarm:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: The number of datapoints within the evaluation period that
            must be breaching to trigger the alarm.
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max1024'
          description: A resource's optional description.
        EvaluationPeriods:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: The number of periods over which data is compared to the specified
            threshold.
        GroupId:
          allOf:
          - $ref: '#/components/schemas/__stringMin7Max11PatternAws097'
          description: A cloudwatch alarm template group's id. AWS provided template
            groups have ids that start with `aws-`
        Id:
          allOf:
          - $ref: '#/components/schemas/__stringMin7Max11PatternAws097'
          description: A cloudwatch alarm template's id. AWS provided templates have
            ids that start with `aws-`
        MetricName:
          allOf:
          - $ref: '#/components/schemas/__stringMax64'
          description: The name of the metric associated with the alarm. Must be compatible
            with targetResourceType.
        ModifiedAt:
          $ref: '#/components/schemas/__timestampIso8601'
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max255PatternS'
          description: A resource's name. Names must be unique within the scope of
            a resource type in a specific region.
        Period:
          allOf:
          - $ref: '#/components/schemas/__integerMin10Max86400'
          description: The period, in seconds, over which the specified statistic
            is applied.
        Statistic:
          $ref: '#/components/schemas/CloudWatchAlarmTemplateStatistic'
        Tags:
          $ref: '#/components/schemas/TagMap'
        TargetResourceType:
          $ref: '#/components/schemas/CloudWatchAlarmTemplateTargetResourceType'
        Threshold:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: The threshold value to compare with the specified statistic.
        TreatMissingData:
          $ref: '#/components/schemas/CloudWatchAlarmTemplateTreatMissingData'
      description: Placeholder documentation for CreateCloudWatchAlarmTemplateResponse
    CreateClusterRequest:
      type: object
      properties:
        ClusterType:
          allOf:
          - $ref: '#/components/schemas/ClusterType'
          description: Specify a type. All the Nodes that you later add to this Cluster
            must be this type of hardware. One Cluster instance can't contain different
            hardware types. You won't be able to change this parameter after you create
            the Cluster.
        InstanceRoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the IAM role for the Node in this Cluster. The role
            must include all the operations that you expect these Node to perform.
            If necessary, create a role in IAM, then attach it here.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Specify a name that is unique in the AWS account. We recommend
            that you assign a name that hints at the types of Nodes in the Cluster.
            Names are case-sensitive.
        NetworkSettings:
          allOf:
          - $ref: '#/components/schemas/ClusterNetworkSettingsCreateRequest'
          description: Network settings that connect the Nodes in the Cluster to one
            or more of the Networks that the Cluster is associated with.
        RequestId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique ID of the request.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A collection of key-value pairs.
      description: Create as many Clusters as you want, but create at least one. Each
        Cluster groups together Nodes that you want to treat as a collection. Within
        the Cluster, you will set up some Nodes as active Nodes, and some as backup
        Nodes, for Node failover purposes. Each Node can belong to only one Cluster.
    CreateClusterResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of this Cluster. It is automatically assigned when
            the Cluster is created.
        ChannelIds:
          $ref: '#/components/schemas/__listOf__string'
        ClusterType:
          allOf:
          - $ref: '#/components/schemas/ClusterType'
          description: The hardware type for the Cluster
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the Cluster. Unique in the AWS account. The ID is
            the resource-id portion of the ARN.
        InstanceRoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the IAM role for the Node in this Cluster. Any Nodes
            that are associated with this Cluster assume this role. The role gives
            permissions to the operations that you expect these Node to perform.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name that you specified for the Cluster.
        NetworkSettings:
          allOf:
          - $ref: '#/components/schemas/ClusterNetworkSettings'
          description: Network settings that connect the Nodes in the Cluster to one
            or more of the Networks that the Cluster is associated with.
        State:
          allOf:
          - $ref: '#/components/schemas/ClusterState'
          description: The current state of the Cluster.
      description: Placeholder documentation for CreateClusterResponse
    CreateEventBridgeRuleTemplateGroupRequest:
      type: object
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max1024'
          description: A resource's optional description.
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max255PatternS'
          description: A resource's name. Names must be unique within the scope of
            a resource type in a specific region.
        Tags:
          $ref: '#/components/schemas/TagMap'
        RequestId:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max256PatternS'
          description: An ID that you assign to a create request. This ID ensures
            idempotency when creating resources.
      required:
      - Name
      description: Placeholder documentation for CreateEventBridgeRuleTemplateGroupRequest
    CreateEventBridgeRuleTemplateGroupResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__stringPatternArnMedialiveEventbridgeRuleTemplateGroup'
          description: An eventbridge rule template group's ARN (Amazon Resource Name)
        CreatedAt:
          $ref: '#/components/schemas/__timestampIso8601'
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max1024'
          description: A resource's optional description.
        Id:
          allOf:
          - $ref: '#/components/schemas/__stringMin7Max11PatternAws097'
          description: An eventbridge rule template group's id. AWS provided template
            groups have ids that start with `aws-`
        ModifiedAt:
          $ref: '#/components/schemas/__timestampIso8601'
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max255PatternS'
          description: A resource's name. Names must be unique within the scope of
            a resource type in a specific region.
        Tags:
          $ref: '#/components/schemas/TagMap'
      description: Placeholder documentation for CreateEventBridgeRuleTemplateGroupResponse
    CreateEventBridgeRuleTemplateRequest:
      type: object
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max1024'
          description: A resource's optional description.
        EventTargets:
          $ref: '#/components/schemas/__listOfEventBridgeRuleTemplateTarget'
        EventType:
          $ref: '#/components/schemas/EventBridgeRuleTemplateEventType'
        GroupIdentifier:
          allOf:
          - $ref: '#/components/schemas/__stringPatternS'
          description: An eventbridge rule template group's identifier. Can be either
            be its id or current name.
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max255PatternS'
          description: A resource's name. Names must be unique within the scope of
            a resource type in a specific region.
        Tags:
          $ref: '#/components/schemas/TagMap'
        RequestId:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max256PatternS'
          description: An ID that you assign to a create request. This ID ensures
            idempotency when creating resources.
      required:
      - EventType
      - GroupIdentifier
      - Name
      description: Placeholder documentation for CreateEventBridgeRuleTemplateRequest
    CreateEventBridgeRuleTemplateResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__stringPatternArnMedialiveEventbridgeRuleTemplate'
          description: An eventbridge rule template's ARN (Amazon Resource Name)
        CreatedAt:
          $ref: '#/components/schemas/__timestampIso8601'
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max1024'
          description: A resource's optional description.
        EventTargets:
          $ref: '#/components/schemas/__listOfEventBridgeRuleTemplateTarget'
        EventType:
          $ref: '#/components/schemas/EventBridgeRuleTemplateEventType'
        GroupId:
          allOf:
          - $ref: '#/components/schemas/__stringMin7Max11PatternAws097'
          description: An eventbridge rule template group's id. AWS provided template
            groups have ids that start with `aws-`
        Id:
          allOf:
          - $ref: '#/components/schemas/__stringMin7Max11PatternAws097'
          description: An eventbridge rule template's id. AWS provided templates have
            ids that start with `aws-`
        ModifiedAt:
          $ref: '#/components/schemas/__timestampIso8601'
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max255PatternS'
          description: A resource's name. Names must be unique within the scope of
            a resource type in a specific region.
        Tags:
          $ref: '#/components/schemas/TagMap'
      description: Placeholder documentation for CreateEventBridgeRuleTemplateResponse
    CreateInputRequest:
      type: object
      properties:
        Destinations:
          allOf:
          - $ref: '#/components/schemas/__listOfInputDestinationRequest'
          description: Destination settings for PUSH type inputs.
        InputDevices:
          allOf:
          - $ref: '#/components/schemas/__listOfInputDeviceSettings'
          description: Settings for the devices.
        InputSecurityGroups:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: A list of security groups referenced by IDs to attach to the
            input.
        MediaConnectFlows:
          allOf:
          - $ref: '#/components/schemas/__listOfMediaConnectFlowRequest'
          description: A list of the MediaConnect Flows that you want to use in this
            input. You can specify as few as one Flow and presently, as many as two.
            The only requirement is when you have more than one is that each Flow
            is in a separate Availability Zone as this ensures your EML input is redundant
            to AZ issues.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Name of the input.
        RequestId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Unique identifier of the request to ensure the request is handled
            exactly once in case of retries.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the role this input assumes
            during and after creation.
        Sources:
          allOf:
          - $ref: '#/components/schemas/__listOfInputSourceRequest'
          description: The source URLs for a PULL-type input. Every PULL type input
            needs exactly two source URLs for redundancy. Only specify sources for
            PULL type Inputs. Leave Destinations empty.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A collection of key-value pairs.
        Type:
          $ref: '#/components/schemas/InputType'
        Vpc:
          $ref: '#/components/schemas/InputVpcRequest'
        SrtSettings:
          allOf:
          - $ref: '#/components/schemas/SrtSettingsRequest'
          description: The settings associated with an SRT input.
        InputNetworkLocation:
          allOf:
          - $ref: '#/components/schemas/InputNetworkLocation'
          description: The location of this input. AWS, for an input existing in the
            AWS Cloud, On-Prem for an input in a customer network.
        MulticastSettings:
          allOf:
          - $ref: '#/components/schemas/MulticastSettingsCreateRequest'
          description: Multicast Input settings.
        Smpte2110ReceiverGroupSettings:
          allOf:
          - $ref: '#/components/schemas/Smpte2110ReceiverGroupSettings'
          description: Include this parameter if the input is a SMPTE 2110 input,
            to identify the stream sources for this input.
        SdiSources:
          $ref: '#/components/schemas/InputSdiSources'
      description: The name of the input
    CreateInputResponse:
      type: object
      properties:
        Input:
          $ref: '#/components/schemas/Input'
      description: Placeholder documentation for CreateInputResponse
    CreateInputSecurityGroupRequest:
      type: object
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A collection of key-value pairs.
        WhitelistRules:
          allOf:
          - $ref: '#/components/schemas/__listOfInputWhitelistRuleCidr'
          description: List of IPv4 CIDR addresses to whitelist
      description: The IPv4 CIDRs to whitelist for this Input Security Group
    CreateInputSecurityGroupResponse:
      type: object
      properties:
        SecurityGroup:
          $ref: '#/components/schemas/InputSecurityGroup'
      description: Placeholder documentation for CreateInputSecurityGroupResponse
    CreateMultiplexProgramRequest:
      type: object
      properties:
        MultiplexId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: ID of the multiplex where the program is to be created.
        MultiplexProgramSettings:
          allOf:
          - $ref: '#/components/schemas/MultiplexProgramSettings'
          description: The settings for this multiplex program.
        ProgramName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Name of multiplex program.
        RequestId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Unique request ID. This prevents retries from creating multiple
            resources.
      required:
      - MultiplexId
      - MultiplexProgramSettings
      - ProgramName
      - RequestId
      description: A request to create a program in a multiplex.
    CreateMultiplexProgramResponse:
      type: object
      properties:
        MultiplexProgram:
          allOf:
          - $ref: '#/components/schemas/MultiplexProgram'
          description: The newly created multiplex program.
      description: Placeholder documentation for CreateMultiplexProgramResponse
    CreateMultiplexRequest:
      type: object
      properties:
        AvailabilityZones:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: A list of availability zones for the multiplex. You must specify
            exactly two.
        MultiplexSettings:
          allOf:
          - $ref: '#/components/schemas/MultiplexSettings'
          description: Configuration for a multiplex event.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Name of multiplex.
        RequestId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Unique request ID. This prevents retries from creating multiple
            resources.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A collection of key-value pairs.
      required:
      - AvailabilityZones
      - MultiplexSettings
      - Name
      - RequestId
      description: A request to create a multiplex.
    CreateMultiplexResponse:
      type: object
      properties:
        Multiplex:
          allOf:
          - $ref: '#/components/schemas/Multiplex'
          description: The newly created multiplex.
      description: Placeholder documentation for CreateMultiplexResponse
    CreateNetworkRequest:
      type: object
      properties:
        IpPools:
          allOf:
          - $ref: '#/components/schemas/__listOfIpPoolCreateRequest'
          description: An array of IpPoolCreateRequests that identify a collection
            of IP addresses in your network that you want to reserve for use in MediaLive
            Anywhere. MediaLiveAnywhere uses these IP addresses for Push inputs (in
            both Bridge and NATnetworks) and for output destinations (only in Bridge
            networks). EachIpPoolUpdateRequest specifies one CIDR block.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Specify a name that is unique in the AWS account. We recommend
            that you assign a name that hints at the type of traffic on the network.
            Names are case-sensitive.
        RequestId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: An ID that you assign to a create request. This ID ensures
            idempotency when creating resources.
        Routes:
          allOf:
          - $ref: '#/components/schemas/__listOfRouteCreateRequest'
          description: An array of routes that MediaLive Anywhere needs to know about
            in order to route encoding traffic.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A collection of key-value pairs.
      description: A request to create a Network.
    CreateNetworkResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of this Network. It is automatically assigned when
            the Network is created.
        AssociatedClusterIds:
          $ref: '#/components/schemas/__listOf__string'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the Network. Unique in the AWS account. The ID is
            the resource-id portion of the ARN.
        IpPools:
          allOf:
          - $ref: '#/components/schemas/__listOfIpPool'
          description: An array of IpPools in your organization's network that identify
            a collection of IP addresses in this network that are reserved for use
            in MediaLive Anywhere. MediaLive Anywhere uses these IP addresses for
            Push inputs (in both Bridge and NAT networks) and for output destinations
            (only in Bridge networks). Each IpPool specifies one CIDR block.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name that you specified for the Network.
        Routes:
          allOf:
          - $ref: '#/components/schemas/__listOfRoute'
          description: An array of routes that MediaLive Anywhere needs to know about
            in order to route encoding traffic.
        State:
          allOf:
          - $ref: '#/components/schemas/NetworkState'
          description: The current state of the Network. Only MediaLive Anywhere can
            change the state.
      description: Placeholder documentation for CreateNetworkResponse
    CreateNodeRegistrationScriptRequest:
      type: object
      properties:
        ClusterId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the cluster
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: If you're generating a re-registration script for an already
            existing node, this is where you provide the id.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Specify a pattern for MediaLive Anywhere to use to assign a
            name to each Node in the Cluster. The pattern can include the variables
            $hn (hostname of the node hardware) and $ts for the date and time that
            the Node is created, in UTC (for example, 2024-08-20T23:35:12Z).
        NodeInterfaceMappings:
          allOf:
          - $ref: '#/components/schemas/__listOfNodeInterfaceMapping'
          description: Documentation update needed
        RequestId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: An ID that you assign to a create request. This ID ensures
            idempotency when creating resources.
        Role:
          allOf:
          - $ref: '#/components/schemas/NodeRole'
          description: The initial role of the Node in the Cluster. ACTIVE means the
            Node is available for encoding. BACKUP means the Node is a redundant Node
            and might get used if an ACTIVE Node fails.
      required:
      - ClusterId
      description: A request to create a new node registration script.
    CreateNodeRegistrationScriptResponse:
      type: object
      properties:
        NodeRegistrationScript:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A script that can be run on a Bring Your Own Device Elemental
            Anywhere system to create a node in a cluster.
      description: Placeholder documentation for CreateNodeRegistrationScriptResponse
    CreateNodeRequest:
      type: object
      properties:
        ClusterId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the cluster.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The user-specified name of the Node to be created.
        NodeInterfaceMappings:
          allOf:
          - $ref: '#/components/schemas/__listOfNodeInterfaceMappingCreateRequest'
          description: Documentation update needed
        RequestId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: An ID that you assign to a create request. This ID ensures
            idempotency when creating resources.
        Role:
          allOf:
          - $ref: '#/components/schemas/NodeRole'
          description: The initial role of the Node in the Cluster. ACTIVE means the
            Node is available for encoding. BACKUP means the Node is a redundant Node
            and might get used if an ACTIVE Node fails.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A collection of key-value pairs.
      required:
      - ClusterId
      description: A request to create a node
    CreateNodeResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the Node. It is automatically assigned when the
            Node is created.
        ChannelPlacementGroups:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: An array of IDs. Each ID is one ChannelPlacementGroup that
            is associated with this Node. Empty if the Node is not yet associated
            with any groups.
        ClusterId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the Cluster that the Node belongs to.
        ConnectionState:
          allOf:
          - $ref: '#/components/schemas/NodeConnectionState'
          description: The current connection state of the Node.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique ID of the Node. Unique in the Cluster. The ID is
            the resource-id portion of the ARN.
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the EC2 instance hosting the Node.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name that you specified for the Node.
        NodeInterfaceMappings:
          allOf:
          - $ref: '#/components/schemas/__listOfNodeInterfaceMapping'
          description: Documentation update needed
        Role:
          allOf:
          - $ref: '#/components/schemas/NodeRole'
          description: The initial role current role of the Node in the Cluster. ACTIVE
            means the Node is available for encoding. BACKUP means the Node is a redundant
            Node and might get used if an ACTIVE Node fails.
        State:
          allOf:
          - $ref: '#/components/schemas/NodeState'
          description: The current state of the Node.
        SdiSourceMappings:
          allOf:
          - $ref: '#/components/schemas/SdiSourceMappings'
          description: An array of SDI source mappings. Each mapping connects one
            logical SdiSource to the physical SDI card and port that the physical
            SDI source uses.
      description: Placeholder documentation for CreateNodeResponse
    CreatePartnerInputRequest:
      type: object
      properties:
        InputId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Unique ID of the input.
        RequestId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Unique identifier of the request to ensure the request is handled
            exactly once in case of retries.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A collection of key-value pairs.
      required:
      - InputId
      description: A request to create a partner input
    CreatePartnerInputResponse:
      type: object
      properties:
        Input:
          $ref: '#/components/schemas/Input'
      description: Placeholder documentation for CreatePartnerInputResponse
    CreateSdiSourceRequest:
      type: object
      properties:
        Mode:
          allOf:
          - $ref: '#/components/schemas/SdiSourceMode'
          description: 'Applies only if the type is QUAD. Specify the mode for handling
            the quad-link signal: QUADRANT or INTERLEAVE.'
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Specify a name that is unique in the AWS account. We recommend
            you assign a name that describes the source, for example curling-cameraA.
            Names are case-sensitive.
        RequestId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: An ID that you assign to a create request. This ID ensures
            idempotency when creating resources.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A collection of key-value pairs.
        Type:
          allOf:
          - $ref: '#/components/schemas/SdiSourceType'
          description: 'Specify the type of the SDI source: SINGLE: The source is
            a single-link source. QUAD: The source is one part of a quad-link source.'
      description: A request to create a SdiSource.
    CreateSdiSourceResponse:
      type: object
      properties:
        SdiSource:
          allOf:
          - $ref: '#/components/schemas/SdiSource'
          description: Settings for the SDI source.
      description: Placeholder documentation for CreateSdiSourceResponse
    CreateSignalMapRequest:
      type: object
      properties:
        CloudWatchAlarmTemplateGroupIdentifiers:
          $ref: '#/components/schemas/__listOf__stringPatternS'
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max1024'
          description: A resource's optional description.
        DiscoveryEntryPointArn:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max2048'
          description: A top-level supported AWS resource ARN to discovery a signal
            map from.
        EventBridgeRuleTemplateGroupIdentifiers:
          $ref: '#/components/schemas/__listOf__stringPatternS'
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max255PatternS'
          description: A resource's name. Names must be unique within the scope of
            a resource type in a specific region.
        Tags:
          $ref: '#/components/schemas/TagMap'
        RequestId:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max256PatternS'
          description: An ID that you assign to a create request. This ID ensures
            idempotency when creating resources.
      required:
      - DiscoveryEntryPointArn
      - Name
      description: Placeholder documentation for CreateSignalMapRequest
    CreateSignalMapResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__stringPatternArnMedialiveSignalMap'
          description: A signal map's ARN (Amazon Resource Name)
        CloudWatchAlarmTemplateGroupIds:
          $ref: '#/components/schemas/__listOf__stringMin7Max11PatternAws097'
        CreatedAt:
          $ref: '#/components/schemas/__timestampIso8601'
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max1024'
          description: A resource's optional description.
        DiscoveryEntryPointArn:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max2048'
          description: A top-level supported AWS resource ARN to discovery a signal
            map from.
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max2048'
          description: Error message associated with a failed creation or failed update
            attempt of a signal map.
        EventBridgeRuleTemplateGroupIds:
          $ref: '#/components/schemas/__listOf__stringMin7Max11PatternAws097'
        FailedMediaResourceMap:
          $ref: '#/components/schemas/FailedMediaResourceMap'
        Id:
          allOf:
          - $ref: '#/components/schemas/__stringMin7Max11PatternAws097'
          description: A signal map's id.
        LastDiscoveredAt:
          $ref: '#/components/schemas/__timestampIso8601'
        LastSuccessfulMonitorDeployment:
          $ref: '#/components/schemas/SuccessfulMonitorDeployment'
        MediaResourceMap:
          $ref: '#/components/schemas/MediaResourceMap'
        ModifiedAt:
          $ref: '#/components/schemas/__timestampIso8601'
        MonitorChangesPendingDeployment:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: If true, there are pending monitor changes for this signal
            map that can be deployed.
        MonitorDeployment:
          $ref: '#/components/schemas/MonitorDeployment'
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max255PatternS'
          description: A resource's name. Names must be unique within the scope of
            a resource type in a specific region.
        Status:
          $ref: '#/components/schemas/SignalMapStatus'
        Tags:
          $ref: '#/components/schemas/TagMap'
      description: Placeholder documentation for CreateSignalMapResponse
    CreateTagsRequest:
      type: object
      properties:
        ResourceArn:
          $ref: '#/components/schemas/__string'
        Tags:
          $ref: '#/components/schemas/Tags'
      required:
      - ResourceArn
      description: Placeholder documentation for CreateTagsRequest
    DashRoleAudio:
      type: string
      enum:
      - ALTERNATE
      - COMMENTARY
      - DESCRIPTION
      - DUB
      - EMERGENCY
      - ENHANCED-AUDIO-INTELLIGIBILITY
      - KARAOKE
      - MAIN
      - SUPPLEMENTARY
      description: Dash Role Audio
    DashRoleCaption:
      type: string
      enum:
      - ALTERNATE
      - CAPTION
      - COMMENTARY
      - DESCRIPTION
      - DUB
      - EASYREADER
      - EMERGENCY
      - FORCED-SUBTITLE
      - KARAOKE
      - MAIN
      - METADATA
      - SUBTITLE
      - SUPPLEMENTARY
      description: Dash Role Caption
    DeleteChannelPlacementGroupRequest:
      type: object
      properties:
        ChannelPlacementGroupId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the channel placement group.
        ClusterId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the cluster.
      required:
      - ChannelPlacementGroupId
      - ClusterId
      description: Placeholder documentation for DeleteChannelPlacementGroupRequest
    DeleteChannelPlacementGroupResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of this ChannelPlacementGroup. It is automatically
            assigned when the ChannelPlacementGroup is created.
        Channels:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: Used in ListChannelPlacementGroupsResult
        ClusterId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the Cluster that the Node belongs to.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the ChannelPlacementGroup. Unique in the AWS account.
            The ID is the resource-id portion of the ARN.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name that you specified for the ChannelPlacementGroup.
        Nodes:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: An array with one item, which is the single Node that is associated
            with the ChannelPlacementGroup.
        State:
          allOf:
          - $ref: '#/components/schemas/ChannelPlacementGroupState'
          description: The current state of the ChannelPlacementGroup.
      description: Placeholder documentation for DeleteChannelPlacementGroupResponse
    DeleteChannelRequest:
      type: object
      properties:
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Unique ID of the channel.
      required:
      - ChannelId
      description: Placeholder documentation for DeleteChannelRequest
    DeleteChannelResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique arn of the channel.
        CdiInputSpecification:
          allOf:
          - $ref: '#/components/schemas/CdiInputSpecification'
          description: Specification of CDI inputs for this channel
        ChannelClass:
          allOf:
          - $ref: '#/components/schemas/ChannelClass'
          description: The class for this channel. STANDARD for a channel with two
            pipelines or SINGLE_PIPELINE for a channel with one pipeline.
        Destinations:
          allOf:
          - $ref: '#/components/schemas/__listOfOutputDestination'
          description: A list of destinations of the channel. For UDP outputs, there
            is one destination per output. For other types (HLS, for example), there
            is one destination per packager.
        EgressEndpoints:
          allOf:
          - $ref: '#/components/schemas/__listOfChannelEgressEndpoint'
          description: The endpoints where outgoing connections initiate from
        EncoderSettings:
          $ref: '#/components/schemas/EncoderSettings'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique id of the channel.
        InputAttachments:
          allOf:
          - $ref: '#/components/schemas/__listOfInputAttachment'
          description: List of input attachments for channel.
        InputSpecification:
          allOf:
          - $ref: '#/components/schemas/InputSpecification'
          description: Specification of network and file inputs for this channel
        LogLevel:
          allOf:
          - $ref: '#/components/schemas/LogLevel'
          description: The log level being written to CloudWatch Logs.
        Maintenance:
          allOf:
          - $ref: '#/components/schemas/MaintenanceStatus'
          description: Maintenance settings for this channel.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the channel. (user-mutable)
        PipelineDetails:
          allOf:
          - $ref: '#/components/schemas/__listOfPipelineDetail'
          description: Runtime details for the pipelines of a running channel.
        PipelinesRunningCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The number of currently healthy pipelines.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the role assumed when running
            the Channel.
        State:
          $ref: '#/components/schemas/ChannelState'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A collection of key-value pairs.
        Vpc:
          allOf:
          - $ref: '#/components/schemas/VpcOutputSettingsDescription'
          description: Settings for VPC output
        AnywhereSettings:
          allOf:
          - $ref: '#/components/schemas/DescribeAnywhereSettings'
          description: Anywhere settings for this channel.
        ChannelEngineVersion:
          allOf:
          - $ref: '#/components/schemas/ChannelEngineVersionResponse'
          description: Requested engine version for this channel.
      description: Placeholder documentation for DeleteChannelResponse
    DeleteCloudWatchAlarmTemplateGroupRequest:
      type: object
      properties:
        Identifier:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A cloudwatch alarm template group's identifier. Can be either
            be its id or current name.
      required:
      - Identifier
      description: Placeholder documentation for DeleteCloudWatchAlarmTemplateGroupRequest
    DeleteCloudWatchAlarmTemplateRequest:
      type: object
      properties:
        Identifier:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A cloudwatch alarm template's identifier. Can be either be
            its id or current name.
      required:
      - Identifier
      description: Placeholder documentation for DeleteCloudWatchAlarmTemplateRequest
    DeleteClusterRequest:
      type: object
      properties:
        ClusterId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the cluster.
      required:
      - ClusterId
      description: Placeholder documentation for DeleteClusterRequest
    DeleteClusterResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of this Cluster. It is automatically assigned when
            the Cluster is created.
        ChannelIds:
          $ref: '#/components/schemas/__listOf__string'
        ClusterType:
          allOf:
          - $ref: '#/components/schemas/ClusterType'
          description: The hardware type for the Cluster
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the Cluster. Unique in the AWS account. The ID is
            the resource-id portion of the ARN.
        InstanceRoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the IAM role for the Node in this Cluster. Any Nodes
            that are associated with this Cluster assume this role. The role gives
            permissions to the operations that you expect these Node to perform.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name that you specified for the Cluster.
        NetworkSettings:
          allOf:
          - $ref: '#/components/schemas/ClusterNetworkSettings'
          description: Network settings that connect the Nodes in the Cluster to one
            or more of the Networks that the Cluster is associated with.
        State:
          allOf:
          - $ref: '#/components/schemas/ClusterState'
          description: The current state of the Cluster.
      description: Placeholder documentation for DeleteClusterResponse
    DeleteEventBridgeRuleTemplateGroupRequest:
      type: object
      properties:
        Identifier:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: An eventbridge rule template group's identifier. Can be either
            be its id or current name.
      required:
      - Identifier
      description: Placeholder documentation for DeleteEventBridgeRuleTemplateGroupRequest
    DeleteEventBridgeRuleTemplateRequest:
      type: object
      properties:
        Identifier:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: An eventbridge rule template's identifier. Can be either be
            its id or current name.
      required:
      - Identifier
      description: Placeholder documentation for DeleteEventBridgeRuleTemplateRequest
    DeleteInputRequest:
      type: object
      properties:
        InputId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Unique ID of the input
      required:
      - InputId
      description: Placeholder documentation for DeleteInputRequest
    DeleteInputResponse:
      type: object
      properties: {}
      description: Placeholder documentation for DeleteInputResponse
    DeleteInputSecurityGroupRequest:
      type: object
      properties:
        InputSecurityGroupId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Input Security Group to delete
      required:
      - InputSecurityGroupId
      description: Placeholder documentation for DeleteInputSecurityGroupRequest
    DeleteInputSecurityGroupResponse:
      type: object
      properties: {}
      description: Placeholder documentation for DeleteInputSecurityGroupResponse
    DeleteMultiplexProgramRequest:
      type: object
      properties:
        MultiplexId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the multiplex that the program belongs to.
        ProgramName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The multiplex program name.
      required:
      - MultiplexId
      - ProgramName
      description: Placeholder documentation for DeleteMultiplexProgramRequest
    DeleteMultiplexProgramResponse:
      type: object
      properties:
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The MediaLive channel associated with the program.
        MultiplexProgramSettings:
          allOf:
          - $ref: '#/components/schemas/MultiplexProgramSettings'
          description: The settings for this multiplex program.
        PacketIdentifiersMap:
          allOf:
          - $ref: '#/components/schemas/MultiplexProgramPacketIdentifiersMap'
          description: The packet identifier map for this multiplex program.
        PipelineDetails:
          allOf:
          - $ref: '#/components/schemas/__listOfMultiplexProgramPipelineDetail'
          description: Contains information about the current sources for the specified
            program in the specified multiplex. Keep in mind that each multiplex pipeline
            connects to both pipelines in a given source channel (the channel identified
            by the program). But only one of those channel pipelines is ever active
            at one time.
        ProgramName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the multiplex program.
      description: Placeholder documentation for DeleteMultiplexProgramResponse
    DeleteMultiplexRequest:
      type: object
      properties:
        MultiplexId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the multiplex.
      required:
      - MultiplexId
      description: Placeholder documentation for DeleteMultiplexRequest
    DeleteMultiplexResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique arn of the multiplex.
        AvailabilityZones:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: A list of availability zones for the multiplex.
        Destinations:
          allOf:
          - $ref: '#/components/schemas/__listOfMultiplexOutputDestination'
          description: A list of the multiplex output destinations.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique id of the multiplex.
        MultiplexSettings:
          allOf:
          - $ref: '#/components/schemas/MultiplexSettings'
          description: Configuration for a multiplex event.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the multiplex.
        PipelinesRunningCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The number of currently healthy pipelines.
        ProgramCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The number of programs in the multiplex.
        State:
          allOf:
          - $ref: '#/components/schemas/MultiplexState'
          description: The current state of the multiplex.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A collection of key-value pairs.
      description: Placeholder documentation for DeleteMultiplexResponse
    DeleteNetworkRequest:
      type: object
      properties:
        NetworkId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the network.
      required:
      - NetworkId
      description: Placeholder documentation for DeleteNetworkRequest
    DeleteNetworkResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of this Network. It is automatically assigned when
            the Network is created.
        AssociatedClusterIds:
          $ref: '#/components/schemas/__listOf__string'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the Network. Unique in the AWS account. The ID is
            the resource-id portion of the ARN.
        IpPools:
          allOf:
          - $ref: '#/components/schemas/__listOfIpPool'
          description: An array of IpPools in your organization's network that identify
            a collection of IP addresses in this network that are reserved for use
            in MediaLive Anywhere. MediaLive Anywhere uses these IP addresses for
            Push inputs (in both Bridge and NAT networks) and for output destinations
            (only in Bridge networks). Each IpPool specifies one CIDR block.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name that you specified for the Network.
        Routes:
          allOf:
          - $ref: '#/components/schemas/__listOfRoute'
          description: An array of routes that MediaLive Anywhere needs to know about
            in order to route encoding traffic.
        State:
          allOf:
          - $ref: '#/components/schemas/NetworkState'
          description: The current state of the Network. Only MediaLive Anywhere can
            change the state.
      description: Placeholder documentation for DeleteNetworkResponse
    DeleteNodeRequest:
      type: object
      properties:
        ClusterId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the cluster
        NodeId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the node.
      required:
      - ClusterId
      - NodeId
      description: Placeholder documentation for DeleteNodeRequest
    DeleteNodeResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the Node. It is automatically assigned when the
            Node is created.
        ChannelPlacementGroups:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: An array of IDs. Each ID is one ChannelPlacementGroup that
            is associated with this Node. Empty if the Node is not yet associated
            with any groups.
        ClusterId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the Cluster that the Node belongs to.
        ConnectionState:
          allOf:
          - $ref: '#/components/schemas/NodeConnectionState'
          description: The current connection state of the Node.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique ID of the Node. Unique in the Cluster. The ID is
            the resource-id portion of the ARN.
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the EC2 instance hosting the Node.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name that you specified for the Node.
        NodeInterfaceMappings:
          allOf:
          - $ref: '#/components/schemas/__listOfNodeInterfaceMapping'
          description: Documentation update needed
        Role:
          allOf:
          - $ref: '#/components/schemas/NodeRole'
          description: The initial role current role of the Node in the Cluster. ACTIVE
            means the Node is available for encoding. BACKUP means the Node is a redundant
            Node and might get used if an ACTIVE Node fails.
        State:
          allOf:
          - $ref: '#/components/schemas/NodeState'
          description: The current state of the Node.
        SdiSourceMappings:
          allOf:
          - $ref: '#/components/schemas/SdiSourceMappings'
          description: An array of SDI source mappings. Each mapping connects one
            logical SdiSource to the physical SDI card and port that the physical
            SDI source uses.
      description: Placeholder documentation for DeleteNodeResponse
    DeleteReservationRequest:
      type: object
      properties:
        ReservationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Unique reservation ID, e.g. '1234567'
      required:
      - ReservationId
      description: Placeholder documentation for DeleteReservationRequest
    DeleteReservationResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Unique reservation ARN, e.g. 'arn:aws:medialive:us-west-2:123456789012:reservation:1234567'
        Count:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Number of reserved resources
        CurrencyCode:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Currency code for usagePrice and fixedPrice in ISO-4217 format,
            e.g. 'USD'
        Duration:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Lease duration, e.g. '12'
        DurationUnits:
          allOf:
          - $ref: '#/components/schemas/OfferingDurationUnits'
          description: Units for duration, e.g. 'MONTHS'
        End:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Reservation UTC end date and time in ISO-8601 format, e.g.
            '2019-03-01T00:00:00'
        FixedPrice:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: One-time charge for each reserved resource, e.g. '0.0' for
            a NO_UPFRONT offering
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: User specified reservation name
        OfferingDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Offering description, e.g. 'HD AVC output at 10-20 Mbps, 30
            fps, and standard VQ in US West (Oregon)'
        OfferingId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Unique offering ID, e.g. '87654321'
        OfferingType:
          allOf:
          - $ref: '#/components/schemas/OfferingType'
          description: Offering type, e.g. 'NO_UPFRONT'
        Region:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: AWS region, e.g. 'us-west-2'
        RenewalSettings:
          allOf:
          - $ref: '#/components/schemas/RenewalSettings'
          description: Renewal settings for the reservation
        ReservationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Unique reservation ID, e.g. '1234567'
        ResourceSpecification:
          allOf:
          - $ref: '#/components/schemas/ReservationResourceSpecification'
          description: Resource configuration details
        Start:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Reservation UTC start date and time in ISO-8601 format, e.g.
            '2018-03-01T00:00:00'
        State:
          allOf:
          - $ref: '#/components/schemas/ReservationState'
          description: Current state of reservation, e.g. 'ACTIVE'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A collection of key-value pairs
        UsagePrice:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: Recurring usage charge for each reserved resource, e.g. '157.0'
      description: Placeholder documentation for DeleteReservationResponse
    DeleteScheduleRequest:
      type: object
      properties:
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Id of the channel whose schedule is being deleted.
      required:
      - ChannelId
      description: Placeholder documentation for DeleteScheduleRequest
    DeleteScheduleResponse:
      type: object
      properties: {}
      description: Placeholder documentation for DeleteScheduleResponse
    DeleteSdiSourceRequest:
      type: object
      properties:
        SdiSourceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the SdiSource.
      required:
      - SdiSourceId
      description: Placeholder documentation for DeleteSdiSourceRequest
    DeleteSdiSourceResponse:
      type: object
      properties:
        SdiSource:
          allOf:
          - $ref: '#/components/schemas/SdiSource'
          description: Settings for the SDI source.
      description: Placeholder documentation for DeleteSdiSourceResponse
    DeleteSignalMapRequest:
      type: object
      properties:
        Identifier:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A signal map's identifier. Can be either be its id or current
            name.
      required:
      - Identifier
      description: Placeholder documentation for DeleteSignalMapRequest
    DeleteTagsRequest:
      type: object
      properties:
        ResourceArn:
          $ref: '#/components/schemas/__string'
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: An array of tag keys to delete
      required:
      - ResourceArn
      - TagKeys
      description: Placeholder documentation for DeleteTagsRequest
    DescribeAccountConfigurationRequest:
      type: object
      properties: {}
      description: Placeholder documentation for DescribeAccountConfigurationRequest
    DescribeAccountConfigurationResponse:
      type: object
      properties:
        AccountConfiguration:
          $ref: '#/components/schemas/AccountConfiguration'
      description: Placeholder documentation for DescribeAccountConfigurationResponse
    DescribeAnywhereSettings:
      type: object
      properties:
        ChannelPlacementGroupId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the channel placement group for the channel.
        ClusterId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the cluster for the channel.
      description: Elemental anywhere settings
    DescribeChannelPlacementGroupRequest:
      type: object
      properties:
        ChannelPlacementGroupId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the channel placement group.
        ClusterId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the cluster.
      required:
      - ChannelPlacementGroupId
      - ClusterId
      description: Placeholder documentation for DescribeChannelPlacementGroupRequest
    DescribeChannelPlacementGroupResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of this ChannelPlacementGroup. It is automatically
            assigned when the ChannelPlacementGroup is created.
        Channels:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: Used in ListChannelPlacementGroupsResult
        ClusterId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the Cluster that the Node belongs to.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the ChannelPlacementGroup. Unique in the AWS account.
            The ID is the resource-id portion of the ARN.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name that you specified for the ChannelPlacementGroup.
        Nodes:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: An array with one item, which is the single Node that is associated
            with the ChannelPlacementGroup.
        State:
          allOf:
          - $ref: '#/components/schemas/ChannelPlacementGroupState'
          description: The current state of the ChannelPlacementGroup.
      description: Placeholder documentation for DescribeChannelPlacementGroupResponse
    DescribeChannelPlacementGroupSummary:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of this ChannelPlacementGroup. It is automatically
            assigned when the ChannelPlacementGroup is created.
        Channels:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: Used in ListChannelPlacementGroupsResult
        ClusterId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the Cluster that the Node belongs to.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the ChannelPlacementGroup. Unique in the AWS account.
            The ID is the resource-id portion of the ARN.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name that you specified for the ChannelPlacementGroup.
        Nodes:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: An array with one item, which is the single Node that is associated
            with the ChannelPlacementGroup.
        State:
          allOf:
          - $ref: '#/components/schemas/ChannelPlacementGroupState'
          description: The current state of the ChannelPlacementGroup.
      description: Contains the response for ListChannelPlacementGroups
    DescribeChannelRequest:
      type: object
      properties:
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: channel ID
      required:
      - ChannelId
      description: Placeholder documentation for DescribeChannelRequest
    DescribeChannelResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique arn of the channel.
        CdiInputSpecification:
          allOf:
          - $ref: '#/components/schemas/CdiInputSpecification'
          description: Specification of CDI inputs for this channel
        ChannelClass:
          allOf:
          - $ref: '#/components/schemas/ChannelClass'
          description: The class for this channel. STANDARD for a channel with two
            pipelines or SINGLE_PIPELINE for a channel with one pipeline.
        Destinations:
          allOf:
          - $ref: '#/components/schemas/__listOfOutputDestination'
          description: A list of destinations of the channel. For UDP outputs, there
            is one destination per output. For other types (HLS, for example), there
            is one destination per packager.
        EgressEndpoints:
          allOf:
          - $ref: '#/components/schemas/__listOfChannelEgressEndpoint'
          description: The endpoints where outgoing connections initiate from
        EncoderSettings:
          $ref: '#/components/schemas/EncoderSettings'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique id of the channel.
        InputAttachments:
          allOf:
          - $ref: '#/components/schemas/__listOfInputAttachment'
          description: List of input attachments for channel.
        InputSpecification:
          allOf:
          - $ref: '#/components/schemas/InputSpecification'
          description: Specification of network and file inputs for this channel
        LogLevel:
          allOf:
          - $ref: '#/components/schemas/LogLevel'
          description: The log level being written to CloudWatch Logs.
        Maintenance:
          allOf:
          - $ref: '#/components/schemas/MaintenanceStatus'
          description: Maintenance settings for this channel.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the channel. (user-mutable)
        PipelineDetails:
          allOf:
          - $ref: '#/components/schemas/__listOfPipelineDetail'
          description: Runtime details for the pipelines of a running channel.
        PipelinesRunningCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The number of currently healthy pipelines.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the role assumed when running
            the Channel.
        State:
          $ref: '#/components/schemas/ChannelState'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A collection of key-value pairs.
        Vpc:
          allOf:
          - $ref: '#/components/schemas/VpcOutputSettingsDescription'
          description: Settings for VPC output
        AnywhereSettings:
          allOf:
          - $ref: '#/components/schemas/DescribeAnywhereSettings'
          description: Anywhere settings for this channel.
        ChannelEngineVersion:
          allOf:
          - $ref: '#/components/schemas/ChannelEngineVersionResponse'
          description: Requested engine version for this channel.
      description: Placeholder documentation for DescribeChannelResponse
    DescribeClusterRequest:
      type: object
      properties:
        ClusterId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the cluster.
      required:
      - ClusterId
      description: Placeholder documentation for DescribeClusterRequest
    DescribeClusterResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of this Cluster. It is automatically assigned when
            the Cluster is created.
        ChannelIds:
          $ref: '#/components/schemas/__listOf__string'
        ClusterType:
          allOf:
          - $ref: '#/components/schemas/ClusterType'
          description: The hardware type for the Cluster
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the Cluster. Unique in the AWS account. The ID is
            the resource-id portion of the ARN.
        InstanceRoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the IAM role for the Node in this Cluster. Any Nodes
            that are associated with this Cluster assume this role. The role gives
            permissions to the operations that you expect these Node to perform.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name that you specified for the Cluster.
        NetworkSettings:
          allOf:
          - $ref: '#/components/schemas/ClusterNetworkSettings'
          description: Network settings that connect the Nodes in the Cluster to one
            or more of the Networks that the Cluster is associated with.
        State:
          allOf:
          - $ref: '#/components/schemas/ClusterState'
          description: The current state of the Cluster.
      description: Placeholder documentation for DescribeClusterResponse
    DescribeClusterSummary:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of this Cluster. It is automatically assigned when
            the Cluster is created.
        ChannelIds:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: 'An array of the IDs of the Channels that are associated with
            this Cluster. One Channel is associated with the Cluster as follows: A
            Channel belongs to a ChannelPlacementGroup. A ChannelPlacementGroup is
            attached to a Node. A Node belongs to a Cluster.'
        ClusterType:
          allOf:
          - $ref: '#/components/schemas/ClusterType'
          description: The hardware type for the Cluster.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the Cluster. Unique in the AWS account. The ID is
            the resource-id portion of the ARN.
        InstanceRoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the IAM role for the Node in this Cluster. Any Nodes
            that are associated with this Cluster assume this role. The role gives
            permissions to the operations that you expect these Node to perform.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name that you specified for the Cluster.
        NetworkSettings:
          allOf:
          - $ref: '#/components/schemas/ClusterNetworkSettings'
          description: Network settings that connect the Nodes in the Cluster to one
            or more of the Networks that the Cluster is associated with.
        State:
          allOf:
          - $ref: '#/components/schemas/ClusterState'
          description: The current state of the Cluster.
      description: Used in ListClustersResult.
    DescribeInputDeviceRequest:
      type: object
      properties:
        InputDeviceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique ID of this input device. For example, hd-123456789abcdef.
      required:
      - InputDeviceId
      description: Placeholder documentation for DescribeInputDeviceRequest
    DescribeInputDeviceResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique ARN of the input device.
        ConnectionState:
          allOf:
          - $ref: '#/components/schemas/InputDeviceConnectionState'
          description: The state of the connection between the input device and AWS.
        DeviceSettingsSyncState:
          allOf:
          - $ref: '#/components/schemas/DeviceSettingsSyncState'
          description: The status of the action to synchronize the device configuration.
            If you change the configuration of the input device (for example, the
            maximum bitrate), MediaLive sends the new data to the device. The device
            might not update itself immediately. SYNCED means the device has updated
            its configuration. SYNCING means that it has not updated its configuration.
        DeviceUpdateStatus:
          allOf:
          - $ref: '#/components/schemas/DeviceUpdateStatus'
          description: The status of software on the input device.
        HdDeviceSettings:
          allOf:
          - $ref: '#/components/schemas/InputDeviceHdSettings'
          description: Settings that describe an input device that is type HD.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique ID of the input device.
        MacAddress:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The network MAC address of the input device.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A name that you specify for the input device.
        NetworkSettings:
          allOf:
          - $ref: '#/components/schemas/InputDeviceNetworkSettings'
          description: The network settings for the input device.
        SerialNumber:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique serial number of the input device.
        Type:
          allOf:
          - $ref: '#/components/schemas/InputDeviceType'
          description: The type of the input device.
        UhdDeviceSettings:
          allOf:
          - $ref: '#/components/schemas/InputDeviceUhdSettings'
          description: Settings that describe an input device that is type UHD.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A collection of key-value pairs.
        AvailabilityZone:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Availability Zone associated with this input device.
        MedialiveInputArns:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: An array of the ARNs for the MediaLive inputs attached to the
            device. Returned only if the outputType is MEDIALIVE_INPUT.
        OutputType:
          allOf:
          - $ref: '#/components/schemas/InputDeviceOutputType'
          description: The output attachment type of the input device. Specifies MEDIACONNECT_FLOW
            if this device is the source for a MediaConnect flow. Specifies MEDIALIVE_INPUT
            if this device is the source for a MediaLive input.
      description: Placeholder documentation for DescribeInputDeviceResponse
    DescribeInputDeviceThumbnailRequest:
      type: object
      properties:
        InputDeviceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique ID of this input device. For example, hd-123456789abcdef.
        Accept:
          allOf:
          - $ref: '#/components/schemas/AcceptHeader'
          description: The HTTP Accept header. Indicates the requested type for the
            thumbnail.
      required:
      - InputDeviceId
      - Accept
      description: Placeholder documentation for DescribeInputDeviceThumbnailRequest
    DescribeInputDeviceThumbnailResponse:
      type: object
      properties:
        Body:
          allOf:
          - $ref: '#/components/schemas/InputDeviceThumbnail'
          description: The binary data for the thumbnail that the Link device has
            most recently sent to MediaLive.
        ContentType:
          allOf:
          - $ref: '#/components/schemas/ContentType'
          description: Specifies the media type of the thumbnail.
        ContentLength:
          allOf:
          - $ref: '#/components/schemas/__long'
          description: The length of the content.
        ETag:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique, cacheable version of this thumbnail.
        LastModified:
          allOf:
          - $ref: '#/components/schemas/__timestamp'
          description: The date and time the thumbnail was last updated at the device.
      description: Placeholder documentation for DescribeInputDeviceThumbnailResponse
    DescribeInputRequest:
      type: object
      properties:
        InputId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Unique ID of the input
      required:
      - InputId
      description: Placeholder documentation for DescribeInputRequest
    DescribeInputResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Unique ARN of the input (generated, immutable).
        AttachedChannels:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: A list of channel IDs that that input is attached to (currently
            an input can only be attached to one channel).
        Destinations:
          allOf:
          - $ref: '#/components/schemas/__listOfInputDestination'
          description: A list of the destinations of the input (PUSH-type).
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The generated ID of the input (unique for user account, immutable).
        InputClass:
          allOf:
          - $ref: '#/components/schemas/InputClass'
          description: STANDARD - MediaLive expects two sources to be connected to
            this input. If the channel is also STANDARD, both sources will be ingested.
            If the channel is SINGLE_PIPELINE, only the first source will be ingested;
            the second source will always be ignored, even if the first source fails.
            SINGLE_PIPELINE - You can connect only one source to this input. If the
            ChannelClass is also SINGLE_PIPELINE, this value is valid. If the ChannelClass
            is STANDARD, this value is not valid because the channel requires two
            sources in the input.
        InputDevices:
          allOf:
          - $ref: '#/components/schemas/__listOfInputDeviceSettings'
          description: Settings for the input devices.
        InputPartnerIds:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: A list of IDs for all Inputs which are partners of this one.
        InputSourceType:
          allOf:
          - $ref: '#/components/schemas/InputSourceType'
          description: Certain pull input sources can be dynamic, meaning that they
            can have their URL's dynamically changes during input switch actions.
            Presently, this functionality only works with MP4_FILE and TS_FILE inputs.
        MediaConnectFlows:
          allOf:
          - $ref: '#/components/schemas/__listOfMediaConnectFlow'
          description: A list of MediaConnect Flows for this input.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The user-assigned name (This is a mutable value).
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the role this input assumes
            during and after creation.
        SecurityGroups:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: A list of IDs for all the Input Security Groups attached to
            the input.
        Sources:
          allOf:
          - $ref: '#/components/schemas/__listOfInputSource'
          description: A list of the sources of the input (PULL-type).
        State:
          $ref: '#/components/schemas/InputState'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A collection of key-value pairs.
        Type:
          $ref: '#/components/schemas/InputType'
        SrtSettings:
          allOf:
          - $ref: '#/components/schemas/SrtSettings'
          description: The settings associated with an SRT input.
        InputNetworkLocation:
          allOf:
          - $ref: '#/components/schemas/InputNetworkLocation'
          description: The location of this input. AWS, for an input existing in the
            AWS Cloud, On-Prem for an input in a customer network.
        MulticastSettings:
          allOf:
          - $ref: '#/components/schemas/MulticastSettings'
          description: Multicast Input settings.
        Smpte2110ReceiverGroupSettings:
          allOf:
          - $ref: '#/components/schemas/Smpte2110ReceiverGroupSettings'
          description: Include this parameter if the input is a SMPTE 2110 input,
            to identify the stream sources for this input.
        SdiSources:
          $ref: '#/components/schemas/InputSdiSources'
      description: Placeholder documentation for DescribeInputResponse
    DescribeInputSecurityGroupRequest:
      type: object
      properties:
        InputSecurityGroupId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The id of the Input Security Group to describe
      required:
      - InputSecurityGroupId
      description: Placeholder documentation for DescribeInputSecurityGroupRequest
    DescribeInputSecurityGroupResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Unique ARN of Input Security Group
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Id of the Input Security Group
        Inputs:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: The list of inputs currently using this Input Security Group.
        State:
          allOf:
          - $ref: '#/components/schemas/InputSecurityGroupState'
          description: The current state of the Input Security Group.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A collection of key-value pairs.
        WhitelistRules:
          allOf:
          - $ref: '#/components/schemas/__listOfInputWhitelistRule'
          description: Whitelist rules and their sync status
      description: Placeholder documentation for DescribeInputSecurityGroupResponse
    DescribeMultiplexProgramRequest:
      type: object
      properties:
        MultiplexId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the multiplex that the program belongs to.
        ProgramName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the program.
      required:
      - MultiplexId
      - ProgramName
      description: Placeholder documentation for DescribeMultiplexProgramRequest
    DescribeMultiplexProgramResponse:
      type: object
      properties:
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The MediaLive channel associated with the program.
        MultiplexProgramSettings:
          allOf:
          - $ref: '#/components/schemas/MultiplexProgramSettings'
          description: The settings for this multiplex program.
        PacketIdentifiersMap:
          allOf:
          - $ref: '#/components/schemas/MultiplexProgramPacketIdentifiersMap'
          description: The packet identifier map for this multiplex program.
        PipelineDetails:
          allOf:
          - $ref: '#/components/schemas/__listOfMultiplexProgramPipelineDetail'
          description: Contains information about the current sources for the specified
            program in the specified multiplex. Keep in mind that each multiplex pipeline
            connects to both pipelines in a given source channel (the channel identified
            by the program). But only one of those channel pipelines is ever active
            at one time.
        ProgramName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the multiplex program.
      description: Placeholder documentation for DescribeMultiplexProgramResponse
    DescribeMultiplexRequest:
      type: object
      properties:
        MultiplexId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the multiplex.
      required:
      - MultiplexId
      description: Placeholder documentation for DescribeMultiplexRequest
    DescribeMultiplexResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique arn of the multiplex.
        AvailabilityZones:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: A list of availability zones for the multiplex.
        Destinations:
          allOf:
          - $ref: '#/components/schemas/__listOfMultiplexOutputDestination'
          description: A list of the multiplex output destinations.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique id of the multiplex.
        MultiplexSettings:
          allOf:
          - $ref: '#/components/schemas/MultiplexSettings'
          description: Configuration for a multiplex event.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the multiplex.
        PipelinesRunningCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The number of currently healthy pipelines.
        ProgramCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The number of programs in the multiplex.
        State:
          allOf:
          - $ref: '#/components/schemas/MultiplexState'
          description: The current state of the multiplex.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A collection of key-value pairs.
      description: Placeholder documentation for DescribeMultiplexResponse
    DescribeNetworkRequest:
      type: object
      properties:
        NetworkId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the network.
      required:
      - NetworkId
      description: Placeholder documentation for DescribeNetworkRequest
    DescribeNetworkResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of this Network. It is automatically assigned when
            the Network is created.
        AssociatedClusterIds:
          $ref: '#/components/schemas/__listOf__string'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the Network. Unique in the AWS account. The ID is
            the resource-id portion of the ARN.
        IpPools:
          allOf:
          - $ref: '#/components/schemas/__listOfIpPool'
          description: An array of IpPools in your organization's network that identify
            a collection of IP addresses in this network that are reserved for use
            in MediaLive Anywhere. MediaLive Anywhere uses these IP addresses for
            Push inputs (in both Bridge and NAT networks) and for output destinations
            (only in Bridge networks). Each IpPool specifies one CIDR block.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name that you specified for the Network.
        Routes:
          allOf:
          - $ref: '#/components/schemas/__listOfRoute'
          description: An array of routes that MediaLive Anywhere needs to know about
            in order to route encoding traffic.
        State:
          allOf:
          - $ref: '#/components/schemas/NetworkState'
          description: The current state of the Network. Only MediaLive Anywhere can
            change the state.
      description: Placeholder documentation for DescribeNetworkResponse
    DescribeNetworkSummary:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of this Network. It is automatically assigned when
            the Network is created.
        AssociatedClusterIds:
          $ref: '#/components/schemas/__listOf__string'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the Network. Unique in the AWS account. The ID is
            the resource-id portion of the ARN.
        IpPools:
          allOf:
          - $ref: '#/components/schemas/__listOfIpPool'
          description: An array of IpPools in your organization's network that identify
            a collection of IP addresses in your organization's network that are reserved
            for use in MediaLive Anywhere. MediaLive Anywhere uses these IP addresses
            for Push inputs (in both Bridge and NAT networks) and for output destinations
            (only in Bridge networks). Each IpPool specifies one CIDR block.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name that you specified for this Network.
        Routes:
          allOf:
          - $ref: '#/components/schemas/__listOfRoute'
          description: An array of routes that MediaLive Anywhere needs to know about
            in order to route encoding traffic.
        State:
          allOf:
          - $ref: '#/components/schemas/NetworkState'
          description: The current state of the Network. Only MediaLive Anywhere can
            change the state.
      description: Used in ListNetworksResult.
    DescribeNodeRequest:
      type: object
      properties:
        ClusterId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the cluster
        NodeId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the node.
      required:
      - ClusterId
      - NodeId
      description: Placeholder documentation for DescribeNodeRequest
    DescribeNodeResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the Node. It is automatically assigned when the
            Node is created.
        ChannelPlacementGroups:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: An array of IDs. Each ID is one ChannelPlacementGroup that
            is associated with this Node. Empty if the Node is not yet associated
            with any groups.
        ClusterId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the Cluster that the Node belongs to.
        ConnectionState:
          allOf:
          - $ref: '#/components/schemas/NodeConnectionState'
          description: The current connection state of the Node.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique ID of the Node. Unique in the Cluster. The ID is
            the resource-id portion of the ARN.
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the EC2 instance hosting the Node.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name that you specified for the Node.
        NodeInterfaceMappings:
          allOf:
          - $ref: '#/components/schemas/__listOfNodeInterfaceMapping'
          description: Documentation update needed
        Role:
          allOf:
          - $ref: '#/components/schemas/NodeRole'
          description: The initial role current role of the Node in the Cluster. ACTIVE
            means the Node is available for encoding. BACKUP means the Node is a redundant
            Node and might get used if an ACTIVE Node fails.
        State:
          allOf:
          - $ref: '#/components/schemas/NodeState'
          description: The current state of the Node.
        SdiSourceMappings:
          allOf:
          - $ref: '#/components/schemas/SdiSourceMappings'
          description: An array of SDI source mappings. Each mapping connects one
            logical SdiSource to the physical SDI card and port that the physical
            SDI source uses.
      description: Placeholder documentation for DescribeNodeResponse
    DescribeNodeSummary:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the Node. It is automatically assigned when the
            Node is created.
        ChannelPlacementGroups:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: An array of IDs. Each ID is one ChannelPlacementGroup that
            is associated with this Node. Empty if the Node is not yet associated
            with any groups.
        ClusterId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the Cluster that the Node belongs to.
        ConnectionState:
          allOf:
          - $ref: '#/components/schemas/NodeConnectionState'
          description: The current connection state of the Node.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique ID of the Node. Unique in the Cluster. The ID is
            the resource-id portion of the ARN.
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The EC2 ARN of the Instance associated with the Node.
        ManagedInstanceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: At the routing layer will get it from the callerId/context
            for use with bring your own device.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name that you specified for the Node.
        NodeInterfaceMappings:
          allOf:
          - $ref: '#/components/schemas/__listOfNodeInterfaceMapping'
          description: Documentation update needed
        Role:
          allOf:
          - $ref: '#/components/schemas/NodeRole'
          description: The initial role current role of the Node in the Cluster. ACTIVE
            means the Node is available for encoding. BACKUP means the Node is a redundant
            Node and might get used if an ACTIVE Node fails.
        State:
          allOf:
          - $ref: '#/components/schemas/NodeState'
          description: The current state of the Node.
        SdiSourceMappings:
          allOf:
          - $ref: '#/components/schemas/SdiSourceMappings'
          description: An array of SDI source mappings. Each mapping connects one
            logical SdiSource to the physical SDI card and port that the physical
            SDI source uses.
      description: Placeholder documentation for DescribeNodeSummary
    DescribeOfferingRequest:
      type: object
      properties:
        OfferingId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Unique offering ID, e.g. '87654321'
      required:
      - OfferingId
      description: Placeholder documentation for DescribeOfferingRequest
    DescribeOfferingResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Unique offering ARN, e.g. 'arn:aws:medialive:us-west-2:123456789012:offering:87654321'
        CurrencyCode:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Currency code for usagePrice and fixedPrice in ISO-4217 format,
            e.g. 'USD'
        Duration:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Lease duration, e.g. '12'
        DurationUnits:
          allOf:
          - $ref: '#/components/schemas/OfferingDurationUnits'
          description: Units for duration, e.g. 'MONTHS'
        FixedPrice:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: One-time charge for each reserved resource, e.g. '0.0' for
            a NO_UPFRONT offering
        OfferingDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Offering description, e.g. 'HD AVC output at 10-20 Mbps, 30
            fps, and standard VQ in US West (Oregon)'
        OfferingId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Unique offering ID, e.g. '87654321'
        OfferingType:
          allOf:
          - $ref: '#/components/schemas/OfferingType'
          description: Offering type, e.g. 'NO_UPFRONT'
        Region:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: AWS region, e.g. 'us-west-2'
        ResourceSpecification:
          allOf:
          - $ref: '#/components/schemas/ReservationResourceSpecification'
          description: Resource configuration details
        UsagePrice:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: Recurring usage charge for each reserved resource, e.g. '157.0'
      description: Placeholder documentation for DescribeOfferingResponse
    DescribeReservationRequest:
      type: object
      properties:
        ReservationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Unique reservation ID, e.g. '1234567'
      required:
      - ReservationId
      description: Placeholder documentation for DescribeReservationRequest
    DescribeReservationResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Unique reservation ARN, e.g. 'arn:aws:medialive:us-west-2:123456789012:reservation:1234567'
        Count:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Number of reserved resources
        CurrencyCode:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Currency code for usagePrice and fixedPrice in ISO-4217 format,
            e.g. 'USD'
        Duration:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Lease duration, e.g. '12'
        DurationUnits:
          allOf:
          - $ref: '#/components/schemas/OfferingDurationUnits'
          description: Units for duration, e.g. 'MONTHS'
        End:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Reservation UTC end date and time in ISO-8601 format, e.g.
            '2019-03-01T00:00:00'
        FixedPrice:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: One-time charge for each reserved resource, e.g. '0.0' for
            a NO_UPFRONT offering
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: User specified reservation name
        OfferingDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Offering description, e.g. 'HD AVC output at 10-20 Mbps, 30
            fps, and standard VQ in US West (Oregon)'
        OfferingId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Unique offering ID, e.g. '87654321'
        OfferingType:
          allOf:
          - $ref: '#/components/schemas/OfferingType'
          description: Offering type, e.g. 'NO_UPFRONT'
        Region:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: AWS region, e.g. 'us-west-2'
        RenewalSettings:
          allOf:
          - $ref: '#/components/schemas/RenewalSettings'
          description: Renewal settings for the reservation
        ReservationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Unique reservation ID, e.g. '1234567'
        ResourceSpecification:
          allOf:
          - $ref: '#/components/schemas/ReservationResourceSpecification'
          description: Resource configuration details
        Start:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Reservation UTC start date and time in ISO-8601 format, e.g.
            '2018-03-01T00:00:00'
        State:
          allOf:
          - $ref: '#/components/schemas/ReservationState'
          description: Current state of reservation, e.g. 'ACTIVE'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A collection of key-value pairs
        UsagePrice:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: Recurring usage charge for each reserved resource, e.g. '157.0'
      description: Placeholder documentation for DescribeReservationResponse
    DescribeScheduleRequest:
      type: object
      properties:
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Id of the channel whose schedule is being updated.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
        NextToken:
          $ref: '#/components/schemas/__string'
      required:
      - ChannelId
      description: Placeholder documentation for DescribeScheduleRequest
    DescribeScheduleResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The next token; for use in pagination.
        ScheduleActions:
          allOf:
          - $ref: '#/components/schemas/__listOfScheduleAction'
          description: The list of actions in the schedule.
      description: Placeholder documentation for DescribeScheduleResponse
    DescribeSdiSourceRequest:
      type: object
      properties:
        SdiSourceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Get details about an SdiSource.
      required:
      - SdiSourceId
      description: Placeholder documentation for DescribeSdiSourceRequest
    DescribeSdiSourceResponse:
      type: object
      properties:
        SdiSource:
          allOf:
          - $ref: '#/components/schemas/SdiSource'
          description: Settings for the SDI source.
      description: Placeholder documentation for DescribeSdiSourceResponse
    DescribeThumbnailsRequest:
      type: object
      properties:
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Unique ID of the channel
        PipelineId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Pipeline ID ("0" or "1")
        ThumbnailType:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: thumbnail type
      required:
      - ChannelId
      - PipelineId
      - ThumbnailType
      description: Placeholder documentation for DescribeThumbnailsRequest
    DescribeThumbnailsResponse:
      type: object
      properties:
        ThumbnailDetails:
          $ref: '#/components/schemas/__listOfThumbnailDetail'
      description: Placeholder documentation for DescribeThumbnailsResponse
    DeviceSettingsSyncState:
      type: string
      enum:
      - SYNCED
      - SYNCING
      description: The status of the action to synchronize the device configuration.
        If you change the configuration of the input device (for example, the maximum
        bitrate), MediaLive sends the new data to the device. The device might not
        update itself immediately. SYNCED means the device has updated its configuration.
        SYNCING means that it has not updated its configuration.
    DeviceUpdateStatus:
      type: string
      enum:
      - UP_TO_DATE
      - NOT_UP_TO_DATE
      - UPDATING
      description: The status of software on the input device.
    DolbyEProgramSelection:
      type: string
      enum:
      - ALL_CHANNELS
      - PROGRAM_1
      - PROGRAM_2
      - PROGRAM_3
      - PROGRAM_4
      - PROGRAM_5
      - PROGRAM_6
      - PROGRAM_7
      - PROGRAM_8
      description: Dolby EProgram Selection
    DolbyVision81Settings:
      type: object
      properties: {}
      description: Dolby Vision81 Settings
    DvbDashAccessibility:
      type: string
      enum:
      - DVBDASH_1_VISUALLY_IMPAIRED
      - DVBDASH_2_HARD_OF_HEARING
      - DVBDASH_3_SUPPLEMENTAL_COMMENTARY
      - DVBDASH_4_DIRECTORS_COMMENTARY
      - DVBDASH_5_EDUCATIONAL_NOTES
      - DVBDASH_6_MAIN_PROGRAM
      - DVBDASH_7_CLEAN_FEED
      description: Dvb Dash Accessibility
    DvbNitSettings:
      type: object
      properties:
        NetworkId:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max65536'
          description: The numeric value placed in the Network Information Table (NIT).
        NetworkName:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max256'
          description: The network name text placed in the networkNameDescriptor inside
            the Network Information Table. Maximum length is 256 characters.
        RepInterval:
          allOf:
          - $ref: '#/components/schemas/__integerMin25Max10000'
          description: The number of milliseconds between instances of this table
            in the output transport stream.
      required:
      - NetworkId
      - NetworkName
      description: DVB Network Information Table (NIT)
    DvbSdtOutputSdt:
      type: string
      enum:
      - SDT_FOLLOW
      - SDT_FOLLOW_IF_PRESENT
      - SDT_MANUAL
      - SDT_NONE
      description: Dvb Sdt Output Sdt
    DvbSdtSettings:
      type: object
      properties:
        OutputSdt:
          allOf:
          - $ref: '#/components/schemas/DvbSdtOutputSdt'
          description: Selects method of inserting SDT information into output stream.
            The sdtFollow setting copies SDT information from input stream to output
            stream. The sdtFollowIfPresent setting copies SDT information from input
            stream to output stream if SDT information is present in the input, otherwise
            it will fall back on the user-defined values. The sdtManual setting means
            user will enter the SDT information. The sdtNone setting means output
            stream will not contain SDT information.
        RepInterval:
          allOf:
          - $ref: '#/components/schemas/__integerMin25Max2000'
          description: The number of milliseconds between instances of this table
            in the output transport stream.
        ServiceName:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max256'
          description: The service name placed in the serviceDescriptor in the Service
            Description Table. Maximum length is 256 characters.
        ServiceProviderName:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max256'
          description: The service provider name placed in the serviceDescriptor in
            the Service Description Table. Maximum length is 256 characters.
      description: DVB Service Description Table (SDT)
    DvbSubDestinationAlignment:
      type: string
      enum:
      - CENTERED
      - LEFT
      - SMART
      description: Dvb Sub Destination Alignment
    DvbSubDestinationBackgroundColor:
      type: string
      enum:
      - BLACK
      - NONE
      - WHITE
      description: Dvb Sub Destination Background Color
    DvbSubDestinationFontColor:
      type: string
      enum:
      - BLACK
      - BLUE
      - GREEN
      - RED
      - WHITE
      - YELLOW
      description: Dvb Sub Destination Font Color
    DvbSubDestinationOutlineColor:
      type: string
      enum:
      - BLACK
      - BLUE
      - GREEN
      - RED
      - WHITE
      - YELLOW
      description: Dvb Sub Destination Outline Color
    DvbSubDestinationSettings:
      type: object
      properties:
        Alignment:
          allOf:
          - $ref: '#/components/schemas/DvbSubDestinationAlignment'
          description: If no explicit xPosition or yPosition is provided, setting
            alignment to centered will place the captions at the bottom center of
            the output. Similarly, setting a left alignment will align captions to
            the bottom left of the output. If x and y positions are given in conjunction
            with the alignment parameter, the font will be justified (either left
            or centered) relative to those coordinates. Selecting "smart" justification
            will left-justify live subtitles and center-justify pre-recorded subtitles.
            This option is not valid for source captions that are STL or 608/embedded.
            These source settings are already pre-defined by the caption stream. All
            burn-in and DVB-Sub font settings must match.
        BackgroundColor:
          allOf:
          - $ref: '#/components/schemas/DvbSubDestinationBackgroundColor'
          description: Specifies the color of the rectangle behind the captions. All
            burn-in and DVB-Sub font settings must match.
        BackgroundOpacity:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max255'
          description: Specifies the opacity of the background rectangle. 255 is opaque;
            0 is transparent. Leaving this parameter blank is equivalent to setting
            it to 0 (transparent). All burn-in and DVB-Sub font settings must match.
        Font:
          allOf:
          - $ref: '#/components/schemas/InputLocation'
          description: External font file used for caption burn-in. File extension
            must be 'ttf' or 'tte'. Although the user can select output fonts for
            many different types of input captions, embedded, STL and teletext sources
            use a strict grid system. Using external fonts with these caption sources
            could cause unexpected display of proportional fonts. All burn-in and
            DVB-Sub font settings must match.
        FontColor:
          allOf:
          - $ref: '#/components/schemas/DvbSubDestinationFontColor'
          description: Specifies the color of the burned-in captions. This option
            is not valid for source captions that are STL, 608/embedded or teletext.
            These source settings are already pre-defined by the caption stream. All
            burn-in and DVB-Sub font settings must match.
        FontOpacity:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max255'
          description: Specifies the opacity of the burned-in captions. 255 is opaque;
            0 is transparent. All burn-in and DVB-Sub font settings must match.
        FontResolution:
          allOf:
          - $ref: '#/components/schemas/__integerMin96Max600'
          description: Font resolution in DPI (dots per inch); default is 96 dpi.
            All burn-in and DVB-Sub font settings must match.
        FontSize:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: When set to auto fontSize will scale depending on the size
            of the output. Giving a positive integer will specify the exact font size
            in points. All burn-in and DVB-Sub font settings must match.
        OutlineColor:
          allOf:
          - $ref: '#/components/schemas/DvbSubDestinationOutlineColor'
          description: Specifies font outline color. This option is not valid for
            source captions that are either 608/embedded or teletext. These source
            settings are already pre-defined by the caption stream. All burn-in and
            DVB-Sub font settings must match.
        OutlineSize:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max10'
          description: Specifies font outline size in pixels. This option is not valid
            for source captions that are either 608/embedded or teletext. These source
            settings are already pre-defined by the caption stream. All burn-in and
            DVB-Sub font settings must match.
        ShadowColor:
          allOf:
          - $ref: '#/components/schemas/DvbSubDestinationShadowColor'
          description: Specifies the color of the shadow cast by the captions. All
            burn-in and DVB-Sub font settings must match.
        ShadowOpacity:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max255'
          description: Specifies the opacity of the shadow. 255 is opaque; 0 is transparent.
            Leaving this parameter blank is equivalent to setting it to 0 (transparent).
            All burn-in and DVB-Sub font settings must match.
        ShadowXOffset:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Specifies the horizontal offset of the shadow relative to the
            captions in pixels. A value of -2 would result in a shadow offset 2 pixels
            to the left. All burn-in and DVB-Sub font settings must match.
        ShadowYOffset:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Specifies the vertical offset of the shadow relative to the
            captions in pixels. A value of -2 would result in a shadow offset 2 pixels
            above the text. All burn-in and DVB-Sub font settings must match.
        TeletextGridControl:
          allOf:
          - $ref: '#/components/schemas/DvbSubDestinationTeletextGridControl'
          description: Controls whether a fixed grid size will be used to generate
            the output subtitles bitmap. Only applicable for Teletext inputs and DVB-Sub/Burn-in
            outputs.
        XPosition:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: Specifies the horizontal position of the caption relative to
            the left side of the output in pixels. A value of 10 would result in the
            captions starting 10 pixels from the left of the output. If no explicit
            xPosition is provided, the horizontal caption position will be determined
            by the alignment parameter. This option is not valid for source captions
            that are STL, 608/embedded or teletext. These source settings are already
            pre-defined by the caption stream. All burn-in and DVB-Sub font settings
            must match.
        YPosition:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: Specifies the vertical position of the caption relative to
            the top of the output in pixels. A value of 10 would result in the captions
            starting 10 pixels from the top of the output. If no explicit yPosition
            is provided, the caption will be positioned towards the bottom of the
            output. This option is not valid for source captions that are STL, 608/embedded
            or teletext. These source settings are already pre-defined by the caption
            stream. All burn-in and DVB-Sub font settings must match.
      description: Dvb Sub Destination Settings
    DvbSubDestinationShadowColor:
      type: string
      enum:
      - BLACK
      - NONE
      - WHITE
      description: Dvb Sub Destination Shadow Color
    DvbSubDestinationTeletextGridControl:
      type: string
      enum:
      - FIXED
      - SCALED
      description: Dvb Sub Destination Teletext Grid Control
    DvbSubOcrLanguage:
      type: string
      enum:
      - DEU
      - ENG
      - FRA
      - NLD
      - POR
      - SPA
      description: Dvb Sub Ocr Language
    DvbSubSourceSettings:
      type: object
      properties:
        OcrLanguage:
          allOf:
          - $ref: '#/components/schemas/DvbSubOcrLanguage'
          description: If you will configure a WebVTT caption description that references
            this caption selector, use this field to provide the language to consider
            when translating the image-based source to text.
        Pid:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: When using DVB-Sub with Burn-In or SMPTE-TT, use this PID for
            the source content. Unused for DVB-Sub passthrough. All DVB-Sub content
            is passed through, regardless of selectors.
      description: Dvb Sub Source Settings
    DvbTdtSettings:
      type: object
      properties:
        RepInterval:
          allOf:
          - $ref: '#/components/schemas/__integerMin1000Max30000'
          description: The number of milliseconds between instances of this table
            in the output transport stream.
      description: DVB Time and Date Table (SDT)
    Eac3AtmosCodingMode:
      type: string
      enum:
      - CODING_MODE_5_1_4
      - CODING_MODE_7_1_4
      - CODING_MODE_9_1_6
      description: Eac3 Atmos Coding Mode
    Eac3AtmosDrcLine:
      type: string
      enum:
      - FILM_LIGHT
      - FILM_STANDARD
      - MUSIC_LIGHT
      - MUSIC_STANDARD
      - NONE
      - SPEECH
      description: Eac3 Atmos Drc Line
    Eac3AtmosDrcRf:
      type: string
      enum:
      - FILM_LIGHT
      - FILM_STANDARD
      - MUSIC_LIGHT
      - MUSIC_STANDARD
      - NONE
      - SPEECH
      description: Eac3 Atmos Drc Rf
    Eac3AtmosSettings:
      type: object
      properties:
        Bitrate:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: Average bitrate in bits/second. Valid bitrates depend on the
            coding mode.
        CodingMode:
          allOf:
          - $ref: '#/components/schemas/Eac3AtmosCodingMode'
          description: Dolby Digital Plus with Dolby Atmos coding mode. Determines
            number of channels.
        Dialnorm:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max31'
          description: Sets the dialnorm for the output. Default 23.
        DrcLine:
          allOf:
          - $ref: '#/components/schemas/Eac3AtmosDrcLine'
          description: Sets the Dolby dynamic range compression profile.
        DrcRf:
          allOf:
          - $ref: '#/components/schemas/Eac3AtmosDrcRf'
          description: Sets the profile for heavy Dolby dynamic range compression,
            ensures that the instantaneous signal peaks do not exceed specified levels.
        HeightTrim:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: Height dimensional trim. Sets the maximum amount to attenuate
            the height channels when the downstream player isn??t configured to handle
            Dolby Digital Plus with Dolby Atmos and must remix the channels.
        SurroundTrim:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: Surround dimensional trim. Sets the maximum amount to attenuate
            the surround channels when the downstream player isn't configured to handle
            Dolby Digital Plus with Dolby Atmos and must remix the channels.
      description: Eac3 Atmos Settings
    Eac3AttenuationControl:
      type: string
      enum:
      - ATTENUATE_3_DB
      - NONE
      description: Eac3 Attenuation Control
    Eac3BitstreamMode:
      type: string
      enum:
      - COMMENTARY
      - COMPLETE_MAIN
      - EMERGENCY
      - HEARING_IMPAIRED
      - VISUALLY_IMPAIRED
      description: Eac3 Bitstream Mode
    Eac3CodingMode:
      type: string
      enum:
      - CODING_MODE_1_0
      - CODING_MODE_2_0
      - CODING_MODE_3_2
      description: Eac3 Coding Mode
    Eac3DcFilter:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: Eac3 Dc Filter
    Eac3DrcLine:
      type: string
      enum:
      - FILM_LIGHT
      - FILM_STANDARD
      - MUSIC_LIGHT
      - MUSIC_STANDARD
      - NONE
      - SPEECH
      description: Eac3 Drc Line
    Eac3DrcRf:
      type: string
      enum:
      - FILM_LIGHT
      - FILM_STANDARD
      - MUSIC_LIGHT
      - MUSIC_STANDARD
      - NONE
      - SPEECH
      description: Eac3 Drc Rf
    Eac3LfeControl:
      type: string
      enum:
      - LFE
      - NO_LFE
      description: Eac3 Lfe Control
    Eac3LfeFilter:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: Eac3 Lfe Filter
    Eac3MetadataControl:
      type: string
      enum:
      - FOLLOW_INPUT
      - USE_CONFIGURED
      description: Eac3 Metadata Control
    Eac3PassthroughControl:
      type: string
      enum:
      - NO_PASSTHROUGH
      - WHEN_POSSIBLE
      description: Eac3 Passthrough Control
    Eac3PhaseControl:
      type: string
      enum:
      - NO_SHIFT
      - SHIFT_90_DEGREES
      description: Eac3 Phase Control
    Eac3Settings:
      type: object
      properties:
        AttenuationControl:
          allOf:
          - $ref: '#/components/schemas/Eac3AttenuationControl'
          description: When set to attenuate3Db, applies a 3 dB attenuation to the
            surround channels. Only used for 3/2 coding mode.
        Bitrate:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: Average bitrate in bits/second. Valid bitrates depend on the
            coding mode.
        BitstreamMode:
          allOf:
          - $ref: '#/components/schemas/Eac3BitstreamMode'
          description: Specifies the bitstream mode (bsmod) for the emitted E-AC-3
            stream. See ATSC A/52-2012 (Annex E) for background on these values.
        CodingMode:
          allOf:
          - $ref: '#/components/schemas/Eac3CodingMode'
          description: Dolby Digital Plus coding mode. Determines number of channels.
        DcFilter:
          allOf:
          - $ref: '#/components/schemas/Eac3DcFilter'
          description: When set to enabled, activates a DC highpass filter for all
            input channels.
        Dialnorm:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max31'
          description: Sets the dialnorm for the output. If blank and input audio
            is Dolby Digital Plus, dialnorm will be passed through.
        DrcLine:
          allOf:
          - $ref: '#/components/schemas/Eac3DrcLine'
          description: Sets the Dolby dynamic range compression profile.
        DrcRf:
          allOf:
          - $ref: '#/components/schemas/Eac3DrcRf'
          description: Sets the profile for heavy Dolby dynamic range compression,
            ensures that the instantaneous signal peaks do not exceed specified levels.
        LfeControl:
          allOf:
          - $ref: '#/components/schemas/Eac3LfeControl'
          description: When encoding 3/2 audio, setting to lfe enables the LFE channel
        LfeFilter:
          allOf:
          - $ref: '#/components/schemas/Eac3LfeFilter'
          description: When set to enabled, applies a 120Hz lowpass filter to the
            LFE channel prior to encoding. Only valid with codingMode32 coding mode.
        LoRoCenterMixLevel:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: Left only/Right only center mix level. Only used for 3/2 coding
            mode.
        LoRoSurroundMixLevel:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: Left only/Right only surround mix level. Only used for 3/2
            coding mode.
        LtRtCenterMixLevel:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: Left total/Right total center mix level. Only used for 3/2
            coding mode.
        LtRtSurroundMixLevel:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: Left total/Right total surround mix level. Only used for 3/2
            coding mode.
        MetadataControl:
          allOf:
          - $ref: '#/components/schemas/Eac3MetadataControl'
          description: When set to followInput, encoder metadata will be sourced from
            the DD, DD+, or DolbyE decoder that supplied this audio data. If audio
            was not supplied from one of these streams, then the static metadata settings
            will be used.
        PassthroughControl:
          allOf:
          - $ref: '#/components/schemas/Eac3PassthroughControl'
          description: When set to whenPossible, input DD+ audio will be passed through
            if it is present on the input. This detection is dynamic over the life
            of the transcode. Inputs that alternate between DD+ and non-DD+ content
            will have a consistent DD+ output as the system alternates between passthrough
            and encoding.
        PhaseControl:
          allOf:
          - $ref: '#/components/schemas/Eac3PhaseControl'
          description: When set to shift90Degrees, applies a 90-degree phase shift
            to the surround channels. Only used for 3/2 coding mode.
        StereoDownmix:
          allOf:
          - $ref: '#/components/schemas/Eac3StereoDownmix'
          description: Stereo downmix preference. Only used for 3/2 coding mode.
        SurroundExMode:
          allOf:
          - $ref: '#/components/schemas/Eac3SurroundExMode'
          description: When encoding 3/2 audio, sets whether an extra center back
            surround channel is matrix encoded into the left and right surround channels.
        SurroundMode:
          allOf:
          - $ref: '#/components/schemas/Eac3SurroundMode'
          description: When encoding 2/0 audio, sets whether Dolby Surround is matrix
            encoded into the two channels.
      description: Eac3 Settings
    Eac3StereoDownmix:
      type: string
      enum:
      - DPL2
      - LO_RO
      - LT_RT
      - NOT_INDICATED
      description: Eac3 Stereo Downmix
    Eac3SurroundExMode:
      type: string
      enum:
      - DISABLED
      - ENABLED
      - NOT_INDICATED
      description: Eac3 Surround Ex Mode
    Eac3SurroundMode:
      type: string
      enum:
      - DISABLED
      - ENABLED
      - NOT_INDICATED
      description: Eac3 Surround Mode
    EbuTtDDestinationSettings:
      type: object
      properties:
        CopyrightHolder:
          allOf:
          - $ref: '#/components/schemas/__stringMax1000'
          description: Complete this field if you want to include the name of the
            copyright holder in the copyright tag in the captions metadata.
        FillLineGap:
          allOf:
          - $ref: '#/components/schemas/EbuTtDFillLineGapControl'
          description: 'Specifies how to handle the gap between the lines (in multi-line
            captions). ENABLED: Fill with the captions background color (as specified
            in the input captions). DISABLED: Leave the gap unfilled'
        FontFamily:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Specifies the font family to include in the font data attached
            to the EBU-TT captions. Valid only if style_control is set to include.
            (If style_control is set to exclude, the font family is always set to
            monospaced.) Enter a list of font families, as a comma-separated list
            of font names, in order of preference. The name can be a font family (such
            as Arial), or a generic font family (such as serif), or default (to let
            the downstream player choose the font). Or leave blank to set the family
            to monospace. Note that you can specify only the font family. All other
            style information (color, bold, position and so on) is copied from the
            input captions. The size is always set to 100% to allow the downstream
            player to choose the size.
        StyleControl:
          allOf:
          - $ref: '#/components/schemas/EbuTtDDestinationStyleControl'
          description: 'Specifies the style information to include in the font data
            that is attached to the EBU-TT captions. INCLUDE: Take the style information
            from the source captions and include that information in the font data
            attached to the EBU-TT captions. This option is valid only if the source
            captions are Embedded or Teletext. EXCLUDE: Set the font family to monospaced.
            Do not include any other style information.'
        DefaultFontSize:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max800'
          description: Specifies the default font size as a percentage of the computed
            cell size. Valid only if the defaultLineHeight is also set. If you leave
            this field empty, the default font size is 80% of the cell size.
        DefaultLineHeight:
          allOf:
          - $ref: '#/components/schemas/__integerMin80Max800'
          description: Documentation update needed
      description: Ebu Tt DDestination Settings
    EbuTtDDestinationStyleControl:
      type: string
      enum:
      - EXCLUDE
      - INCLUDE
      description: Ebu Tt DDestination Style Control
    EbuTtDFillLineGapControl:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: Ebu Tt DFill Line Gap Control
    EmbeddedConvert608To708:
      type: string
      enum:
      - DISABLED
      - UPCONVERT
      description: Embedded Convert608 To708
    EmbeddedDestinationSettings:
      type: object
      properties: {}
      description: Embedded Destination Settings
    EmbeddedPlusScte20DestinationSettings:
      type: object
      properties: {}
      description: Embedded Plus Scte20 Destination Settings
    EmbeddedScte20Detection:
      type: string
      enum:
      - AUTO
      - 'OFF'
      description: Embedded Scte20 Detection
    EmbeddedSourceSettings:
      type: object
      properties:
        Convert608To708:
          allOf:
          - $ref: '#/components/schemas/EmbeddedConvert608To708'
          description: If upconvert, 608 data is both passed through via the "608
            compatibility bytes" fields of the 708 wrapper as well as translated into
            708. 708 data present in the source content will be discarded.
        Scte20Detection:
          allOf:
          - $ref: '#/components/schemas/EmbeddedScte20Detection'
          description: Set to "auto" to handle streams with intermittent and/or non-aligned
            SCTE-20 and Embedded captions.
        Source608ChannelNumber:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max4'
          description: Specifies the 608/708 channel number within the video track
            from which to extract captions. Unused for passthrough.
        Source608TrackNumber:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max5'
          description: This field is unused and deprecated.
      description: Embedded Source Settings
    EncoderSettings:
      type: object
      properties:
        AudioDescriptions:
          $ref: '#/components/schemas/__listOfAudioDescription'
        AvailBlanking:
          allOf:
          - $ref: '#/components/schemas/AvailBlanking'
          description: Settings for ad avail blanking.
        AvailConfiguration:
          allOf:
          - $ref: '#/components/schemas/AvailConfiguration'
          description: Event-wide configuration settings for ad avail insertion.
        BlackoutSlate:
          allOf:
          - $ref: '#/components/schemas/BlackoutSlate'
          description: Settings for blackout slate.
        CaptionDescriptions:
          allOf:
          - $ref: '#/components/schemas/__listOfCaptionDescription'
          description: Settings for caption decriptions
        FeatureActivations:
          allOf:
          - $ref: '#/components/schemas/FeatureActivations'
          description: Feature Activations
        GlobalConfiguration:
          allOf:
          - $ref: '#/components/schemas/GlobalConfiguration'
          description: Configuration settings that apply to the event as a whole.
        MotionGraphicsConfiguration:
          allOf:
          - $ref: '#/components/schemas/MotionGraphicsConfiguration'
          description: Settings for motion graphics.
        NielsenConfiguration:
          allOf:
          - $ref: '#/components/schemas/NielsenConfiguration'
          description: Nielsen configuration settings.
        OutputGroups:
          $ref: '#/components/schemas/__listOfOutputGroup'
        TimecodeConfig:
          allOf:
          - $ref: '#/components/schemas/TimecodeConfig'
          description: Contains settings used to acquire and adjust timecode information
            from inputs.
        VideoDescriptions:
          $ref: '#/components/schemas/__listOfVideoDescription'
        ThumbnailConfiguration:
          allOf:
          - $ref: '#/components/schemas/ThumbnailConfiguration'
          description: Thumbnail configuration settings.
        ColorCorrectionSettings:
          allOf:
          - $ref: '#/components/schemas/ColorCorrectionSettings'
          description: Color Correction Settings
      required:
      - AudioDescriptions
      - OutputGroups
      - TimecodeConfig
      - VideoDescriptions
      description: Encoder Settings
    EpochLockingSettings:
      type: object
      properties:
        CustomEpoch:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Optional. Enter a value here to use a custom epoch, instead
            of the standard epoch (which started at 1970-01-01T00:00:00 UTC). Specify
            the start time of the custom epoch, in YYYY-MM-DDTHH:MM:SS in UTC. The
            time must be 2000-01-01T00:00:00 or later. Always set the MM:SS portion
            to 00:00.
        JamSyncTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Optional. Enter a time for the jam sync. The default is midnight
            UTC. When epoch locking is enabled, MediaLive performs a daily jam sync
            on every output encode to ensure timecodes don’t diverge from the wall
            clock. The jam sync applies only to encodes with frame rate of 29.97 or
            59.94 FPS. To override, enter a time in HH:MM:SS in UTC. Always set the
            MM:SS portion to 00:00.
      description: Epoch Locking Settings
    Esam:
      type: object
      properties:
        AcquisitionPointId:
          allOf:
          - $ref: '#/components/schemas/__stringMax256'
          description: Sent as acquisitionPointIdentity to identify the MediaLive
            channel to the POIS.
        AdAvailOffset:
          allOf:
          - $ref: '#/components/schemas/__integerMinNegative1000Max1000'
          description: When specified, this offset (in milliseconds) is added to the
            input Ad Avail PTS time. This only applies to embedded SCTE 104/35 messages
            and does not apply to OOB messages.
        PasswordParam:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Documentation update needed
        PoisEndpoint:
          allOf:
          - $ref: '#/components/schemas/__stringMax2048'
          description: The URL of the signal conditioner endpoint on the Placement
            Opportunity Information System (POIS). MediaLive sends SignalProcessingEvents
            here when SCTE-35 messages are read.
        Username:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Documentation update needed
        ZoneIdentity:
          allOf:
          - $ref: '#/components/schemas/__stringMax256'
          description: Optional data sent as zoneIdentity to identify the MediaLive
            channel to the POIS.
      required:
      - AcquisitionPointId
      - PoisEndpoint
      description: Esam
    EventBridgeRuleTemplateEventType:
      type: string
      enum:
      - MEDIALIVE_MULTIPLEX_ALERT
      - MEDIALIVE_MULTIPLEX_STATE_CHANGE
      - MEDIALIVE_CHANNEL_ALERT
      - MEDIALIVE_CHANNEL_INPUT_CHANGE
      - MEDIALIVE_CHANNEL_STATE_CHANGE
      - MEDIAPACKAGE_INPUT_NOTIFICATION
      - MEDIAPACKAGE_KEY_PROVIDER_NOTIFICATION
      - MEDIAPACKAGE_HARVEST_JOB_NOTIFICATION
      - SIGNAL_MAP_ACTIVE_ALARM
      - MEDIACONNECT_ALERT
      - MEDIACONNECT_SOURCE_HEALTH
      - MEDIACONNECT_OUTPUT_HEALTH
      - MEDIACONNECT_FLOW_STATUS_CHANGE
      description: The type of event to match with the rule.
    EventBridgeRuleTemplateGroupSummary:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__stringPatternArnMedialiveEventbridgeRuleTemplateGroup'
          description: An eventbridge rule template group's ARN (Amazon Resource Name)
        CreatedAt:
          $ref: '#/components/schemas/__timestampIso8601'
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max1024'
          description: A resource's optional description.
        Id:
          allOf:
          - $ref: '#/components/schemas/__stringMin7Max11PatternAws097'
          description: An eventbridge rule template group's id. AWS provided template
            groups have ids that start with `aws-`
        ModifiedAt:
          $ref: '#/components/schemas/__timestampIso8601'
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max255PatternS'
          description: A resource's name. Names must be unique within the scope of
            a resource type in a specific region.
        Tags:
          $ref: '#/components/schemas/TagMap'
        TemplateCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The number of templates in a group.
      required:
      - Arn
      - CreatedAt
      - Id
      - Name
      - TemplateCount
      description: Placeholder documentation for EventBridgeRuleTemplateGroupSummary
    EventBridgeRuleTemplateSummary:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__stringPatternArnMedialiveEventbridgeRuleTemplate'
          description: An eventbridge rule template's ARN (Amazon Resource Name)
        CreatedAt:
          $ref: '#/components/schemas/__timestampIso8601'
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max1024'
          description: A resource's optional description.
        EventTargetCount:
          allOf:
          - $ref: '#/components/schemas/__integerMax5'
          description: The number of targets configured to send matching events.
        EventType:
          $ref: '#/components/schemas/EventBridgeRuleTemplateEventType'
        GroupId:
          allOf:
          - $ref: '#/components/schemas/__stringMin7Max11PatternAws097'
          description: An eventbridge rule template group's id. AWS provided template
            groups have ids that start with `aws-`
        Id:
          allOf:
          - $ref: '#/components/schemas/__stringMin7Max11PatternAws097'
          description: An eventbridge rule template's id. AWS provided templates have
            ids that start with `aws-`
        ModifiedAt:
          $ref: '#/components/schemas/__timestampIso8601'
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max255PatternS'
          description: A resource's name. Names must be unique within the scope of
            a resource type in a specific region.
        Tags:
          $ref: '#/components/schemas/TagMap'
      required:
      - Arn
      - CreatedAt
      - EventTargetCount
      - EventType
      - GroupId
      - Id
      - Name
      description: Placeholder documentation for EventBridgeRuleTemplateSummary
    EventBridgeRuleTemplateTarget:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max2048PatternArn'
          description: Target ARNs must be either an SNS topic or CloudWatch log group.
      required:
      - Arn
      description: The target to which to send matching events.
    FailedMediaResourceMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/MediaResource'
      description: A map representing an incomplete AWS media workflow as a graph.
    FailoverCondition:
      type: object
      properties:
        FailoverConditionSettings:
          allOf:
          - $ref: '#/components/schemas/FailoverConditionSettings'
          description: Failover condition type-specific settings.
      description: Failover Condition settings. There can be multiple failover conditions
        inside AutomaticInputFailoverSettings.
    FailoverConditionSettings:
      type: object
      properties:
        AudioSilenceSettings:
          allOf:
          - $ref: '#/components/schemas/AudioSilenceFailoverSettings'
          description: MediaLive will perform a failover if the specified audio selector
            is silent for the specified period.
        InputLossSettings:
          allOf:
          - $ref: '#/components/schemas/InputLossFailoverSettings'
          description: MediaLive will perform a failover if content is not detected
            in this input for the specified period.
        VideoBlackSettings:
          allOf:
          - $ref: '#/components/schemas/VideoBlackFailoverSettings'
          description: MediaLive will perform a failover if content is considered
            black for the specified period.
      description: Settings for one failover condition.
    FeatureActivations:
      type: object
      properties:
        InputPrepareScheduleActions:
          allOf:
          - $ref: '#/components/schemas/FeatureActivationsInputPrepareScheduleActions'
          description: Enables the Input Prepare feature. You can create Input Prepare
            actions in the schedule only if this feature is enabled. If you disable
            the feature on an existing schedule, make sure that you first delete all
            input prepare actions from the schedule.
        OutputStaticImageOverlayScheduleActions:
          allOf:
          - $ref: '#/components/schemas/FeatureActivationsOutputStaticImageOverlayScheduleActions'
          description: Enables the output static image overlay feature. Enabling this
            feature allows you to send channel schedule updates to display/clear/modify
            image overlays on an output-by-output bases.
      description: Feature Activations
    FeatureActivationsInputPrepareScheduleActions:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: Feature Activations Input Prepare Schedule Actions
    FeatureActivationsOutputStaticImageOverlayScheduleActions:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: Feature Activations Output Static Image Overlay Schedule Actions
    FecOutputIncludeFec:
      type: string
      enum:
      - COLUMN
      - COLUMN_AND_ROW
      description: Fec Output Include Fec
    FecOutputSettings:
      type: object
      properties:
        ColumnDepth:
          allOf:
          - $ref: '#/components/schemas/__integerMin4Max20'
          description: Parameter D from SMPTE 2022-1. The height of the FEC protection
            matrix. The number of transport stream packets per column error correction
            packet. Must be between 4 and 20, inclusive.
        IncludeFec:
          allOf:
          - $ref: '#/components/schemas/FecOutputIncludeFec'
          description: Enables column only or column and row based FEC
        RowLength:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max20'
          description: Parameter L from SMPTE 2022-1. The width of the FEC protection
            matrix. Must be between 1 and 20, inclusive. If only Column FEC is used,
            then larger values increase robustness. If Row FEC is used, then this
            is the number of transport stream packets per row error correction packet,
            and the value must be between 4 and 20, inclusive, if includeFec is columnAndRow.
            If includeFec is column, this value must be 1 to 20, inclusive.
      description: Fec Output Settings
    FixedAfd:
      type: string
      enum:
      - AFD_0000
      - AFD_0010
      - AFD_0011
      - AFD_0100
      - AFD_1000
      - AFD_1001
      - AFD_1010
      - AFD_1011
      - AFD_1101
      - AFD_1110
      - AFD_1111
      description: Fixed Afd
    FixedModeScheduleActionStartSettings:
      type: object
      properties:
        Time:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'Start time for the action to start in the channel. (Not the
            time for the action to be added to the schedule: actions are always added
            to the schedule immediately.) UTC format: yyyy-mm-ddThh:mm:ss.nnnZ. All
            the letters are digits (for example, mm might be 01) except for the two
            constants "T" for time and "Z" for "UTC format".'
      required:
      - Time
      description: Start time for the action.
    Fmp4HlsSettings:
      type: object
      properties:
        AudioRenditionSets:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: List all the audio groups that are used with the video output
            stream. Input all the audio GROUP-IDs that are associated to the video,
            separate by ','.
        NielsenId3Behavior:
          allOf:
          - $ref: '#/components/schemas/Fmp4NielsenId3Behavior'
          description: If set to passthrough, Nielsen inaudible tones for media tracking
            will be detected in the input audio and an equivalent ID3 tag will be
            inserted in the output.
        TimedMetadataBehavior:
          allOf:
          - $ref: '#/components/schemas/Fmp4TimedMetadataBehavior'
          description: Set to PASSTHROUGH to enable ID3 metadata insertion. To include
            metadata, you configure other parameters in the output group or individual
            outputs, or you add an ID3 action to the channel schedule.
      description: Fmp4 Hls Settings
    Fmp4NielsenId3Behavior:
      type: string
      enum:
      - NO_PASSTHROUGH
      - PASSTHROUGH
      description: Fmp4 Nielsen Id3 Behavior
    Fmp4TimedMetadataBehavior:
      type: string
      enum:
      - NO_PASSTHROUGH
      - PASSTHROUGH
      description: Fmp4 Timed Metadata Behavior
    FollowModeScheduleActionStartSettings:
      type: object
      properties:
        FollowPoint:
          allOf:
          - $ref: '#/components/schemas/FollowPoint'
          description: Identifies whether this action starts relative to the start
            or relative to the end of the reference action.
        ReferenceActionName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The action name of another action that this one refers to.
      required:
      - FollowPoint
      - ReferenceActionName
      description: Settings to specify if an action follows another.
    FollowPoint:
      type: string
      enum:
      - END
      - START
      description: Follow reference point.
    ForbiddenException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/__string'
      description: Placeholder documentation for ForbiddenException
    FrameCaptureCdnSettings:
      type: object
      properties:
        FrameCaptureS3Settings:
          $ref: '#/components/schemas/FrameCaptureS3Settings'
      description: Frame Capture Cdn Settings
    FrameCaptureGroupSettings:
      type: object
      properties:
        Destination:
          allOf:
          - $ref: '#/components/schemas/OutputLocationRef'
          description: The destination for the frame capture files. Either the URI
            for an Amazon S3 bucket and object, plus a file name prefix (for example,
            s3ssl://sportsDelivery/highlights/20180820/curling-) or the URI for a
            MediaStore container, plus a file name prefix (for example, mediastoressl://sportsDelivery/20180820/curling-).
            The final file names consist of the prefix from the destination field
            (for example, "curling-") + name modifier + the counter (5 digits, starting
            from 00001) + extension (which is always .jpg). For example, curling-low.00001.jpg
        FrameCaptureCdnSettings:
          allOf:
          - $ref: '#/components/schemas/FrameCaptureCdnSettings'
          description: Parameters that control interactions with the CDN.
      required:
      - Destination
      description: Frame Capture Group Settings
    FrameCaptureHlsSettings:
      type: object
      properties: {}
      description: Frame Capture Hls Settings
    FrameCaptureIntervalUnit:
      type: string
      enum:
      - MILLISECONDS
      - SECONDS
      description: Frame Capture Interval Unit
    FrameCaptureOutputSettings:
      type: object
      properties:
        NameModifier:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Required if the output group contains more than one output.
            This modifier forms part of the output file name.
      description: Frame Capture Output Settings
    FrameCaptureS3Settings:
      type: object
      properties:
        CannedAcl:
          allOf:
          - $ref: '#/components/schemas/S3CannedAcl'
          description: Specify the canned ACL to apply to each S3 request. Defaults
            to none.
      description: Frame Capture S3 Settings
    FrameCaptureSettings:
      type: object
      properties:
        CaptureInterval:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max3600000'
          description: The frequency at which to capture frames for inclusion in the
            output. May be specified in either seconds or milliseconds, as specified
            by captureIntervalUnits.
        CaptureIntervalUnits:
          allOf:
          - $ref: '#/components/schemas/FrameCaptureIntervalUnit'
          description: Unit for the frame capture interval.
        TimecodeBurninSettings:
          allOf:
          - $ref: '#/components/schemas/TimecodeBurninSettings'
          description: Timecode burn-in settings
      description: Frame Capture Settings
    GatewayTimeoutException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/__string'
      description: Placeholder documentation for GatewayTimeoutException
    GetCloudWatchAlarmTemplateGroupRequest:
      type: object
      properties:
        Identifier:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A cloudwatch alarm template group's identifier. Can be either
            be its id or current name.
      required:
      - Identifier
      description: Placeholder documentation for GetCloudWatchAlarmTemplateGroupRequest
    GetCloudWatchAlarmTemplateGroupResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__stringPatternArnMedialiveCloudwatchAlarmTemplateGroup'
          description: A cloudwatch alarm template group's ARN (Amazon Resource Name)
        CreatedAt:
          $ref: '#/components/schemas/__timestampIso8601'
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max1024'
          description: A resource's optional description.
        Id:
          allOf:
          - $ref: '#/components/schemas/__stringMin7Max11PatternAws097'
          description: A cloudwatch alarm template group's id. AWS provided template
            groups have ids that start with `aws-`
        ModifiedAt:
          $ref: '#/components/schemas/__timestampIso8601'
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max255PatternS'
          description: A resource's name. Names must be unique within the scope of
            a resource type in a specific region.
        Tags:
          $ref: '#/components/schemas/TagMap'
      description: Placeholder documentation for GetCloudWatchAlarmTemplateGroupResponse
    GetCloudWatchAlarmTemplateRequest:
      type: object
      properties:
        Identifier:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A cloudwatch alarm template's identifier. Can be either be
            its id or current name.
      required:
      - Identifier
      description: Placeholder documentation for GetCloudWatchAlarmTemplateRequest
    GetCloudWatchAlarmTemplateResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__stringPatternArnMedialiveCloudwatchAlarmTemplate'
          description: A cloudwatch alarm template's ARN (Amazon Resource Name)
        ComparisonOperator:
          $ref: '#/components/schemas/CloudWatchAlarmTemplateComparisonOperator'
        CreatedAt:
          $ref: '#/components/schemas/__timestampIso8601'
        DatapointsToAlarm:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: The number of datapoints within the evaluation period that
            must be breaching to trigger the alarm.
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max1024'
          description: A resource's optional description.
        EvaluationPeriods:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: The number of periods over which data is compared to the specified
            threshold.
        GroupId:
          allOf:
          - $ref: '#/components/schemas/__stringMin7Max11PatternAws097'
          description: A cloudwatch alarm template group's id. AWS provided template
            groups have ids that start with `aws-`
        Id:
          allOf:
          - $ref: '#/components/schemas/__stringMin7Max11PatternAws097'
          description: A cloudwatch alarm template's id. AWS provided templates have
            ids that start with `aws-`
        MetricName:
          allOf:
          - $ref: '#/components/schemas/__stringMax64'
          description: The name of the metric associated with the alarm. Must be compatible
            with targetResourceType.
        ModifiedAt:
          $ref: '#/components/schemas/__timestampIso8601'
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max255PatternS'
          description: A resource's name. Names must be unique within the scope of
            a resource type in a specific region.
        Period:
          allOf:
          - $ref: '#/components/schemas/__integerMin10Max86400'
          description: The period, in seconds, over which the specified statistic
            is applied.
        Statistic:
          $ref: '#/components/schemas/CloudWatchAlarmTemplateStatistic'
        Tags:
          $ref: '#/components/schemas/TagMap'
        TargetResourceType:
          $ref: '#/components/schemas/CloudWatchAlarmTemplateTargetResourceType'
        Threshold:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: The threshold value to compare with the specified statistic.
        TreatMissingData:
          $ref: '#/components/schemas/CloudWatchAlarmTemplateTreatMissingData'
      description: Placeholder documentation for GetCloudWatchAlarmTemplateResponse
    GetEventBridgeRuleTemplateGroupRequest:
      type: object
      properties:
        Identifier:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: An eventbridge rule template group's identifier. Can be either
            be its id or current name.
      required:
      - Identifier
      description: Placeholder documentation for GetEventBridgeRuleTemplateGroupRequest
    GetEventBridgeRuleTemplateGroupResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__stringPatternArnMedialiveEventbridgeRuleTemplateGroup'
          description: An eventbridge rule template group's ARN (Amazon Resource Name)
        CreatedAt:
          $ref: '#/components/schemas/__timestampIso8601'
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max1024'
          description: A resource's optional description.
        Id:
          allOf:
          - $ref: '#/components/schemas/__stringMin7Max11PatternAws097'
          description: An eventbridge rule template group's id. AWS provided template
            groups have ids that start with `aws-`
        ModifiedAt:
          $ref: '#/components/schemas/__timestampIso8601'
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max255PatternS'
          description: A resource's name. Names must be unique within the scope of
            a resource type in a specific region.
        Tags:
          $ref: '#/components/schemas/TagMap'
      description: Placeholder documentation for GetEventBridgeRuleTemplateGroupResponse
    GetEventBridgeRuleTemplateRequest:
      type: object
      properties:
        Identifier:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: An eventbridge rule template's identifier. Can be either be
            its id or current name.
      required:
      - Identifier
      description: Placeholder documentation for GetEventBridgeRuleTemplateRequest
    GetEventBridgeRuleTemplateResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__stringPatternArnMedialiveEventbridgeRuleTemplate'
          description: An eventbridge rule template's ARN (Amazon Resource Name)
        CreatedAt:
          $ref: '#/components/schemas/__timestampIso8601'
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max1024'
          description: A resource's optional description.
        EventTargets:
          $ref: '#/components/schemas/__listOfEventBridgeRuleTemplateTarget'
        EventType:
          $ref: '#/components/schemas/EventBridgeRuleTemplateEventType'
        GroupId:
          allOf:
          - $ref: '#/components/schemas/__stringMin7Max11PatternAws097'
          description: An eventbridge rule template group's id. AWS provided template
            groups have ids that start with `aws-`
        Id:
          allOf:
          - $ref: '#/components/schemas/__stringMin7Max11PatternAws097'
          description: An eventbridge rule template's id. AWS provided templates have
            ids that start with `aws-`
        ModifiedAt:
          $ref: '#/components/schemas/__timestampIso8601'
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max255PatternS'
          description: A resource's name. Names must be unique within the scope of
            a resource type in a specific region.
        Tags:
          $ref: '#/components/schemas/TagMap'
      description: Placeholder documentation for GetEventBridgeRuleTemplateResponse
    GetSignalMapRequest:
      type: object
      properties:
        Identifier:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A signal map's identifier. Can be either be its id or current
            name.
      required:
      - Identifier
      description: Placeholder documentation for GetSignalMapRequest
    GetSignalMapResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__stringPatternArnMedialiveSignalMap'
          description: A signal map's ARN (Amazon Resource Name)
        CloudWatchAlarmTemplateGroupIds:
          $ref: '#/components/schemas/__listOf__stringMin7Max11PatternAws097'
        CreatedAt:
          $ref: '#/components/schemas/__timestampIso8601'
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max1024'
          description: A resource's optional description.
        DiscoveryEntryPointArn:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max2048'
          description: A top-level supported AWS resource ARN to discovery a signal
            map from.
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max2048'
          description: Error message associated with a failed creation or failed update
            attempt of a signal map.
        EventBridgeRuleTemplateGroupIds:
          $ref: '#/components/schemas/__listOf__stringMin7Max11PatternAws097'
        FailedMediaResourceMap:
          $ref: '#/components/schemas/FailedMediaResourceMap'
        Id:
          allOf:
          - $ref: '#/components/schemas/__stringMin7Max11PatternAws097'
          description: A signal map's id.
        LastDiscoveredAt:
          $ref: '#/components/schemas/__timestampIso8601'
        LastSuccessfulMonitorDeployment:
          $ref: '#/components/schemas/SuccessfulMonitorDeployment'
        MediaResourceMap:
          $ref: '#/components/schemas/MediaResourceMap'
        ModifiedAt:
          $ref: '#/components/schemas/__timestampIso8601'
        MonitorChangesPendingDeployment:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: If true, there are pending monitor changes for this signal
            map that can be deployed.
        MonitorDeployment:
          $ref: '#/components/schemas/MonitorDeployment'
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max255PatternS'
          description: A resource's name. Names must be unique within the scope of
            a resource type in a specific region.
        Status:
          $ref: '#/components/schemas/SignalMapStatus'
        Tags:
          $ref: '#/components/schemas/TagMap'
      description: Placeholder documentation for GetSignalMapResponse
    GlobalConfiguration:
      type: object
      properties:
        InitialAudioGain:
          allOf:
          - $ref: '#/components/schemas/__integerMinNegative60Max60'
          description: Value to set the initial audio gain for the Live Event.
        InputEndAction:
          allOf:
          - $ref: '#/components/schemas/GlobalConfigurationInputEndAction'
          description: Indicates the action to take when the current input completes
            (e.g. end-of-file). When switchAndLoopInputs is configured the encoder
            will restart at the beginning of the first input. When "none" is configured
            the encoder will transcode either black, a solid color, or a user specified
            slate images per the "Input Loss Behavior" configuration until the next
            input switch occurs (which is controlled through the Channel Schedule
            API).
        InputLossBehavior:
          allOf:
          - $ref: '#/components/schemas/InputLossBehavior'
          description: Settings for system actions when input is lost.
        OutputLockingMode:
          allOf:
          - $ref: '#/components/schemas/GlobalConfigurationOutputLockingMode'
          description: Indicates how MediaLive pipelines are synchronized. PIPELINE_LOCKING
            - MediaLive will attempt to synchronize the output of each pipeline to
            the other. EPOCH_LOCKING - MediaLive will attempt to synchronize the output
            of each pipeline to the Unix epoch. DISABLED - MediaLive will not attempt
            to synchronize the output of pipelines. We advise against disabling output
            locking because it has negative side effects in most workflows. For more
            information, see the section about output locking (pipeline locking) in
            the Medialive user guide.
        OutputTimingSource:
          allOf:
          - $ref: '#/components/schemas/GlobalConfigurationOutputTimingSource'
          description: Indicates whether the rate of frames emitted by the Live encoder
            should be paced by its system clock (which optionally may be locked to
            another source via NTP) or should be locked to the clock of the source
            that is providing the input stream.
        SupportLowFramerateInputs:
          allOf:
          - $ref: '#/components/schemas/GlobalConfigurationLowFramerateInputs'
          description: Adjusts video input buffer for streams with very low video
            framerates. This is commonly set to enabled for music channels with less
            than one video frame per second.
        OutputLockingSettings:
          allOf:
          - $ref: '#/components/schemas/OutputLockingSettings'
          description: Advanced output locking settings
      description: Global Configuration
    GlobalConfigurationInputEndAction:
      type: string
      enum:
      - NONE
      - SWITCH_AND_LOOP_INPUTS
      description: Global Configuration Input End Action
    GlobalConfigurationLowFramerateInputs:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: Global Configuration Low Framerate Inputs
    GlobalConfigurationOutputLockingMode:
      type: string
      enum:
      - EPOCH_LOCKING
      - PIPELINE_LOCKING
      - DISABLED
      description: Global Configuration Output Locking Mode
    GlobalConfigurationOutputTimingSource:
      type: string
      enum:
      - INPUT_CLOCK
      - SYSTEM_CLOCK
      description: Global Configuration Output Timing Source
    H264AdaptiveQuantization:
      type: string
      enum:
      - AUTO
      - HIGH
      - HIGHER
      - LOW
      - MAX
      - MEDIUM
      - 'OFF'
      description: H264 Adaptive Quantization
    H264ColorMetadata:
      type: string
      enum:
      - IGNORE
      - INSERT
      description: H264 Color Metadata
    H264ColorSpaceSettings:
      type: object
      properties:
        ColorSpacePassthroughSettings:
          $ref: '#/components/schemas/ColorSpacePassthroughSettings'
        Rec601Settings:
          $ref: '#/components/schemas/Rec601Settings'
        Rec709Settings:
          $ref: '#/components/schemas/Rec709Settings'
      description: H264 Color Space Settings
    H264EntropyEncoding:
      type: string
      enum:
      - CABAC
      - CAVLC
      description: H264 Entropy Encoding
    H264FilterSettings:
      type: object
      properties:
        TemporalFilterSettings:
          $ref: '#/components/schemas/TemporalFilterSettings'
        BandwidthReductionFilterSettings:
          $ref: '#/components/schemas/BandwidthReductionFilterSettings'
      description: H264 Filter Settings
    H264FlickerAq:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: H264 Flicker Aq
    H264ForceFieldPictures:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: H264 Force Field Pictures
    H264FramerateControl:
      type: string
      enum:
      - INITIALIZE_FROM_SOURCE
      - SPECIFIED
      description: H264 Framerate Control
    H264GopBReference:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: H264 Gop BReference
    H264GopSizeUnits:
      type: string
      enum:
      - FRAMES
      - SECONDS
      description: H264 Gop Size Units
    H264Level:
      type: string
      enum:
      - H264_LEVEL_1
      - H264_LEVEL_1_1
      - H264_LEVEL_1_2
      - H264_LEVEL_1_3
      - H264_LEVEL_2
      - H264_LEVEL_2_1
      - H264_LEVEL_2_2
      - H264_LEVEL_3
      - H264_LEVEL_3_1
      - H264_LEVEL_3_2
      - H264_LEVEL_4
      - H264_LEVEL_4_1
      - H264_LEVEL_4_2
      - H264_LEVEL_5
      - H264_LEVEL_5_1
      - H264_LEVEL_5_2
      - H264_LEVEL_AUTO
      description: H264 Level
    H264LookAheadRateControl:
      type: string
      enum:
      - HIGH
      - LOW
      - MEDIUM
      description: H264 Look Ahead Rate Control
    H264ParControl:
      type: string
      enum:
      - INITIALIZE_FROM_SOURCE
      - SPECIFIED
      description: H264 Par Control
    H264Profile:
      type: string
      enum:
      - BASELINE
      - HIGH
      - HIGH_10BIT
      - HIGH_422
      - HIGH_422_10BIT
      - MAIN
      description: H264 Profile
    H264QualityLevel:
      type: string
      enum:
      - ENHANCED_QUALITY
      - STANDARD_QUALITY
      description: H264 Quality Level
    H264RateControlMode:
      type: string
      enum:
      - CBR
      - MULTIPLEX
      - QVBR
      - VBR
      description: H264 Rate Control Mode
    H264ScanType:
      type: string
      enum:
      - INTERLACED
      - PROGRESSIVE
      description: H264 Scan Type
    H264SceneChangeDetect:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: H264 Scene Change Detect
    H264Settings:
      type: object
      properties:
        AdaptiveQuantization:
          allOf:
          - $ref: '#/components/schemas/H264AdaptiveQuantization'
          description: 'Enables or disables adaptive quantization, which is a technique
            MediaLive can apply to video on a frame-by-frame basis to produce more
            compression without losing quality. There are three types of adaptive
            quantization: flicker, spatial, and temporal. Set the field in one of
            these ways: Set to Auto. Recommended. For each type of AQ, MediaLive will
            determine if AQ is needed, and if so, the appropriate strength. Set a
            strength (a value other than Auto or Disable). This strength will apply
            to any of the AQ fields that you choose to enable. Set to Disabled to
            disable all types of adaptive quantization.'
        AfdSignaling:
          allOf:
          - $ref: '#/components/schemas/AfdSignaling'
          description: Indicates that AFD values will be written into the output stream.
            If afdSignaling is "auto", the system will try to preserve the input AFD
            value (in cases where multiple AFD values are valid). If set to "fixed",
            the AFD value will be the value configured in the fixedAfd parameter.
        Bitrate:
          allOf:
          - $ref: '#/components/schemas/__integerMin1000'
          description: Average bitrate in bits/second. Required when the rate control
            mode is VBR or CBR. Not used for QVBR. In an MS Smooth output group, each
            output must have a unique value when its bitrate is rounded down to the
            nearest multiple of 1000.
        BufFillPct:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max100'
          description: Percentage of the buffer that should initially be filled (HRD
            buffer model).
        BufSize:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: Size of buffer (HRD buffer model) in bits.
        ColorMetadata:
          allOf:
          - $ref: '#/components/schemas/H264ColorMetadata'
          description: Includes colorspace metadata in the output.
        ColorSpaceSettings:
          allOf:
          - $ref: '#/components/schemas/H264ColorSpaceSettings'
          description: Color Space settings
        EntropyEncoding:
          allOf:
          - $ref: '#/components/schemas/H264EntropyEncoding'
          description: Entropy encoding mode. Use cabac (must be in Main or High profile)
            or cavlc.
        FilterSettings:
          allOf:
          - $ref: '#/components/schemas/H264FilterSettings'
          description: Optional. Both filters reduce bandwidth by removing imperceptible
            details. You can enable one of the filters. We recommend that you try
            both filters and observe the results to decide which one to use. The Temporal
            Filter reduces bandwidth by removing imperceptible details in the content.
            It combines perceptual filtering and motion compensated temporal filtering
            (MCTF). It operates independently of the compression level. The Bandwidth
            Reduction filter is a perceptual filter located within the encoding loop.
            It adapts to the current compression level to filter imperceptible signals.
            This filter works only when the resolution is 1080p or lower.
        FixedAfd:
          allOf:
          - $ref: '#/components/schemas/FixedAfd'
          description: Four bit AFD value to write on all frames of video in the output
            stream. Only valid when afdSignaling is set to 'Fixed'.
        FlickerAq:
          allOf:
          - $ref: '#/components/schemas/H264FlickerAq'
          description: 'Flicker AQ makes adjustments within each frame to reduce flicker
            or ''pop'' on I-frames. The value to enter in this field depends on the
            value in the Adaptive quantization field: If you have set the Adaptive
            quantization field to Auto, MediaLive ignores any value in this field.
            MediaLive will determine if flicker AQ is appropriate and will apply the
            appropriate strength. If you have set the Adaptive quantization field
            to a strength, you can set this field to Enabled or Disabled. Enabled:
            MediaLive will apply flicker AQ using the specified strength. Disabled:
            MediaLive won''t apply flicker AQ. If you have set the Adaptive quantization
            to Disabled, MediaLive ignores any value in this field and doesn''t apply
            flicker AQ.'
        ForceFieldPictures:
          allOf:
          - $ref: '#/components/schemas/H264ForceFieldPictures'
          description: 'This setting applies only when scan type is "interlaced."
            It controls whether coding is performed on a field basis or on a frame
            basis. (When the video is progressive, the coding is always performed
            on a frame basis.) enabled: Force MediaLive to code on a field basis,
            so that odd and even sets of fields are coded separately. disabled: Code
            the two sets of fields separately (on a field basis) or together (on a
            frame basis using PAFF), depending on what is most appropriate for the
            content.'
        FramerateControl:
          allOf:
          - $ref: '#/components/schemas/H264FramerateControl'
          description: This field indicates how the output video frame rate is specified.
            If "specified" is selected then the output video frame rate is determined
            by framerateNumerator and framerateDenominator, else if "initializeFromSource"
            is selected then the output video frame rate will be set equal to the
            input video frame rate of the first input.
        FramerateDenominator:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: Framerate denominator.
        FramerateNumerator:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: Framerate numerator - framerate is a fraction, e.g. 24000 /
            1001 = 23.976 fps.
        GopBReference:
          allOf:
          - $ref: '#/components/schemas/H264GopBReference'
          description: Documentation update needed
        GopClosedCadence:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: Frequency of closed GOPs. In streaming applications, it is
            recommended that this be set to 1 so a decoder joining mid-stream will
            receive an IDR frame as quickly as possible. Setting this value to 0 will
            break output segmenting.
        GopNumBFrames:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max7'
          description: Number of B-frames between reference frames.
        GopSize:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: GOP size (keyframe interval) in units of either frames or seconds
            per gopSizeUnits. If gopSizeUnits is frames, gopSize must be an integer
            and must be greater than or equal to 1. If gopSizeUnits is seconds, gopSize
            must be greater than 0, but need not be an integer.
        GopSizeUnits:
          allOf:
          - $ref: '#/components/schemas/H264GopSizeUnits'
          description: Indicates if the gopSize is specified in frames or seconds.
            If seconds the system will convert the gopSize into a frame count at run
            time.
        Level:
          allOf:
          - $ref: '#/components/schemas/H264Level'
          description: H.264 Level.
        LookAheadRateControl:
          allOf:
          - $ref: '#/components/schemas/H264LookAheadRateControl'
          description: Amount of lookahead. A value of low can decrease latency and
            memory usage, while high can produce better quality for certain content.
        MaxBitrate:
          allOf:
          - $ref: '#/components/schemas/__integerMin1000'
          description: 'For QVBR: See the tooltip for Quality level For VBR: Set the
            maximum bitrate in order to accommodate expected spikes in the complexity
            of the video.'
        MinIInterval:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max30'
          description: 'Only meaningful if sceneChangeDetect is set to enabled. Defaults
            to 5 if multiplex rate control is used. Enforces separation between repeated
            (cadence) I-frames and I-frames inserted by Scene Change Detection. If
            a scene change I-frame is within I-interval frames of a cadence I-frame,
            the GOP is shrunk and/or stretched to the scene change I-frame. GOP stretch
            requires enabling lookahead as well as setting I-interval. The normal
            cadence resumes for the next GOP. Note: Maximum GOP stretch = GOP size
            + Min-I-interval - 1'
        NumRefFrames:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max6'
          description: Number of reference frames to use. The encoder may use more
            than requested if using B-frames and/or interlaced encoding.
        ParControl:
          allOf:
          - $ref: '#/components/schemas/H264ParControl'
          description: This field indicates how the output pixel aspect ratio is specified.
            If "specified" is selected then the output video pixel aspect ratio is
            determined by parNumerator and parDenominator, else if "initializeFromSource"
            is selected then the output pixsel aspect ratio will be set equal to the
            input video pixel aspect ratio of the first input.
        ParDenominator:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: Pixel Aspect Ratio denominator.
        ParNumerator:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: Pixel Aspect Ratio numerator.
        Profile:
          allOf:
          - $ref: '#/components/schemas/H264Profile'
          description: H.264 Profile.
        QualityLevel:
          allOf:
          - $ref: '#/components/schemas/H264QualityLevel'
          description: 'Leave as STANDARD_QUALITY or choose a different value (which
            might result in additional costs to run the channel). \- ENHANCED_QUALITY:
            Produces a slightly better video quality without an increase in the bitrate.
            Has an effect only when the Rate control mode is QVBR or CBR. If this
            channel is in a MediaLive multiplex, the value must be ENHANCED_QUALITY.
            \- STANDARD_QUALITY: Valid for any Rate control mode.'
        QvbrQualityLevel:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max10'
          description: 'Controls the target quality for the video encode. Applies
            only when the rate control mode is QVBR. You can set a target quality
            or you can let MediaLive determine the best quality. To set a target quality,
            enter values in the QVBR quality level field and the Max bitrate field.
            Enter values that suit your most important viewing devices. Recommended
            values are: \- Primary screen: Quality level: 8 to 10. Max bitrate: 4M
            \- PC or tablet: Quality level: 7. Max bitrate: 1.5M to 3M \- Smartphone:
            Quality level: 6. Max bitrate: 1M to 1.5M To let MediaLive decide, leave
            the QVBR quality level field empty, and in Max bitrate enter the maximum
            rate you want in the video. For more information, see the section called
            "Video - rate control mode" in the MediaLive user guide'
        RateControlMode:
          allOf:
          - $ref: '#/components/schemas/H264RateControlMode'
          description: 'Rate control mode. QVBR: Quality will match the specified
            quality level except when it is constrained by the maximum bitrate. Recommended
            if you or your viewers pay for bandwidth. VBR: Quality and bitrate vary,
            depending on the video complexity. Recommended instead of QVBR if you
            want to maintain a specific average bitrate over the duration of the channel.
            CBR: Quality varies, depending on the video complexity. Recommended only
            if you distribute your assets to devices that cannot handle variable bitrates.
            Multiplex: This rate control mode is only supported (and is required)
            when the video is being delivered to a MediaLive Multiplex in which case
            the rate control configuration is controlled by the properties within
            the Multiplex Program.'
        ScanType:
          allOf:
          - $ref: '#/components/schemas/H264ScanType'
          description: Sets the scan type of the output to progressive or top-field-first
            interlaced.
        SceneChangeDetect:
          allOf:
          - $ref: '#/components/schemas/H264SceneChangeDetect'
          description: 'Scene change detection. \- On: inserts I-frames when scene
            change is detected. \- Off: does not force an I-frame when scene change
            is detected.'
        Slices:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max32'
          description: Number of slices per picture. Must be less than or equal to
            the number of macroblock rows for progressive pictures, and less than
            or equal to half the number of macroblock rows for interlaced pictures.
            This field is optional; when no value is specified the encoder will choose
            the number of slices based on encode resolution.
        Softness:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max128'
          description: Softness. Selects quantizer matrix, larger values reduce high-frequency
            content in the encoded image. If not set to zero, must be greater than
            15.
        SpatialAq:
          allOf:
          - $ref: '#/components/schemas/H264SpatialAq'
          description: 'Spatial AQ makes adjustments within each frame based on spatial
            variation of content complexity. The value to enter in this field depends
            on the value in the Adaptive quantization field: If you have set the Adaptive
            quantization field to Auto, MediaLive ignores any value in this field.
            MediaLive will determine if spatial AQ is appropriate and will apply the
            appropriate strength. If you have set the Adaptive quantization field
            to a strength, you can set this field to Enabled or Disabled. Enabled:
            MediaLive will apply spatial AQ using the specified strength. Disabled:
            MediaLive won''t apply spatial AQ. If you have set the Adaptive quantization
            to Disabled, MediaLive ignores any value in this field and doesn''t apply
            spatial AQ.'
        SubgopLength:
          allOf:
          - $ref: '#/components/schemas/H264SubGopLength'
          description: If set to fixed, use gopNumBFrames B-frames per sub-GOP. If
            set to dynamic, optimize the number of B-frames used for each sub-GOP
            to improve visual quality.
        Syntax:
          allOf:
          - $ref: '#/components/schemas/H264Syntax'
          description: Produces a bitstream compliant with SMPTE RP-2027.
        TemporalAq:
          allOf:
          - $ref: '#/components/schemas/H264TemporalAq'
          description: 'Temporal makes adjustments within each frame based on temporal
            variation of content complexity. The value to enter in this field depends
            on the value in the Adaptive quantization field: If you have set the Adaptive
            quantization field to Auto, MediaLive ignores any value in this field.
            MediaLive will determine if temporal AQ is appropriate and will apply
            the appropriate strength. If you have set the Adaptive quantization field
            to a strength, you can set this field to Enabled or Disabled. Enabled:
            MediaLive will apply temporal AQ using the specified strength. Disabled:
            MediaLive won''t apply temporal AQ. If you have set the Adaptive quantization
            to Disabled, MediaLive ignores any value in this field and doesn''t apply
            temporal AQ.'
        TimecodeInsertion:
          allOf:
          - $ref: '#/components/schemas/H264TimecodeInsertionBehavior'
          description: 'Determines how timecodes should be inserted into the video
            elementary stream. \- ''disabled'': Do not include timecodes \- ''picTimingSei'':
            Pass through picture timing SEI messages from the source specified in
            Timecode Config'
        TimecodeBurninSettings:
          allOf:
          - $ref: '#/components/schemas/TimecodeBurninSettings'
          description: Timecode burn-in settings
        MinQp:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max51'
          description: Sets the minimum QP. If you aren't familiar with quantization
            adjustment, leave the field empty. MediaLive will apply an appropriate
            value.
      description: H264 Settings
    H264SpatialAq:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: H264 Spatial Aq
    H264SubGopLength:
      type: string
      enum:
      - DYNAMIC
      - FIXED
      description: H264 Sub Gop Length
    H264Syntax:
      type: string
      enum:
      - DEFAULT
      - RP2027
      description: H264 Syntax
    H264TemporalAq:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: H264 Temporal Aq
    H264TimecodeInsertionBehavior:
      type: string
      enum:
      - DISABLED
      - PIC_TIMING_SEI
      description: H264 Timecode Insertion Behavior
    H265AdaptiveQuantization:
      type: string
      enum:
      - AUTO
      - HIGH
      - HIGHER
      - LOW
      - MAX
      - MEDIUM
      - 'OFF'
      description: H265 Adaptive Quantization
    H265AlternativeTransferFunction:
      type: string
      enum:
      - INSERT
      - OMIT
      description: H265 Alternative Transfer Function
    H265ColorMetadata:
      type: string
      enum:
      - IGNORE
      - INSERT
      description: H265 Color Metadata
    H265ColorSpaceSettings:
      type: object
      properties:
        ColorSpacePassthroughSettings:
          $ref: '#/components/schemas/ColorSpacePassthroughSettings'
        DolbyVision81Settings:
          $ref: '#/components/schemas/DolbyVision81Settings'
        Hdr10Settings:
          $ref: '#/components/schemas/Hdr10Settings'
        Rec601Settings:
          $ref: '#/components/schemas/Rec601Settings'
        Rec709Settings:
          $ref: '#/components/schemas/Rec709Settings'
      description: H265 Color Space Settings
    H265Deblocking:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: H265 Deblocking
    H265FilterSettings:
      type: object
      properties:
        TemporalFilterSettings:
          $ref: '#/components/schemas/TemporalFilterSettings'
        BandwidthReductionFilterSettings:
          $ref: '#/components/schemas/BandwidthReductionFilterSettings'
      description: H265 Filter Settings
    H265FlickerAq:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: H265 Flicker Aq
    H265GopSizeUnits:
      type: string
      enum:
      - FRAMES
      - SECONDS
      description: H265 Gop Size Units
    H265Level:
      type: string
      enum:
      - H265_LEVEL_1
      - H265_LEVEL_2
      - H265_LEVEL_2_1
      - H265_LEVEL_3
      - H265_LEVEL_3_1
      - H265_LEVEL_4
      - H265_LEVEL_4_1
      - H265_LEVEL_5
      - H265_LEVEL_5_1
      - H265_LEVEL_5_2
      - H265_LEVEL_6
      - H265_LEVEL_6_1
      - H265_LEVEL_6_2
      - H265_LEVEL_AUTO
      description: H265 Level
    H265LookAheadRateControl:
      type: string
      enum:
      - HIGH
      - LOW
      - MEDIUM
      description: H265 Look Ahead Rate Control
    H265MvOverPictureBoundaries:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: H265 Mv Over Picture Boundaries
    H265MvTemporalPredictor:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: H265 Mv Temporal Predictor
    H265Profile:
      type: string
      enum:
      - MAIN
      - MAIN_10BIT
      description: H265 Profile
    H265RateControlMode:
      type: string
      enum:
      - CBR
      - MULTIPLEX
      - QVBR
      description: H265 Rate Control Mode
    H265ScanType:
      type: string
      enum:
      - INTERLACED
      - PROGRESSIVE
      description: H265 Scan Type
    H265SceneChangeDetect:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: H265 Scene Change Detect
    H265Settings:
      type: object
      properties:
        AdaptiveQuantization:
          allOf:
          - $ref: '#/components/schemas/H265AdaptiveQuantization'
          description: Adaptive quantization. Allows intra-frame quantizers to vary
            to improve visual quality.
        AfdSignaling:
          allOf:
          - $ref: '#/components/schemas/AfdSignaling'
          description: Indicates that AFD values will be written into the output stream.
            If afdSignaling is "auto", the system will try to preserve the input AFD
            value (in cases where multiple AFD values are valid). If set to "fixed",
            the AFD value will be the value configured in the fixedAfd parameter.
        AlternativeTransferFunction:
          allOf:
          - $ref: '#/components/schemas/H265AlternativeTransferFunction'
          description: Whether or not EML should insert an Alternative Transfer Function
            SEI message to support backwards compatibility with non-HDR decoders and
            displays.
        Bitrate:
          allOf:
          - $ref: '#/components/schemas/__integerMin100000Max40000000'
          description: Average bitrate in bits/second. Required when the rate control
            mode is VBR or CBR. Not used for QVBR. In an MS Smooth output group, each
            output must have a unique value when its bitrate is rounded down to the
            nearest multiple of 1000.
        BufSize:
          allOf:
          - $ref: '#/components/schemas/__integerMin100000Max80000000'
          description: Size of buffer (HRD buffer model) in bits.
        ColorMetadata:
          allOf:
          - $ref: '#/components/schemas/H265ColorMetadata'
          description: Includes colorspace metadata in the output.
        ColorSpaceSettings:
          allOf:
          - $ref: '#/components/schemas/H265ColorSpaceSettings'
          description: Color Space settings
        FilterSettings:
          allOf:
          - $ref: '#/components/schemas/H265FilterSettings'
          description: Optional. Both filters reduce bandwidth by removing imperceptible
            details. You can enable one of the filters. We recommend that you try
            both filters and observe the results to decide which one to use. The Temporal
            Filter reduces bandwidth by removing imperceptible details in the content.
            It combines perceptual filtering and motion compensated temporal filtering
            (MCTF). It operates independently of the compression level. The Bandwidth
            Reduction filter is a perceptual filter located within the encoding loop.
            It adapts to the current compression level to filter imperceptible signals.
            This filter works only when the resolution is 1080p or lower.
        FixedAfd:
          allOf:
          - $ref: '#/components/schemas/FixedAfd'
          description: Four bit AFD value to write on all frames of video in the output
            stream. Only valid when afdSignaling is set to 'Fixed'.
        FlickerAq:
          allOf:
          - $ref: '#/components/schemas/H265FlickerAq'
          description: If set to enabled, adjust quantization within each frame to
            reduce flicker or 'pop' on I-frames.
        FramerateDenominator:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max3003'
          description: Framerate denominator.
        FramerateNumerator:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: Framerate numerator - framerate is a fraction, e.g. 24000 /
            1001 = 23.976 fps.
        GopClosedCadence:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: Frequency of closed GOPs. In streaming applications, it is
            recommended that this be set to 1 so a decoder joining mid-stream will
            receive an IDR frame as quickly as possible. Setting this value to 0 will
            break output segmenting.
        GopSize:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: GOP size (keyframe interval) in units of either frames or seconds
            per gopSizeUnits. If gopSizeUnits is frames, gopSize must be an integer
            and must be greater than or equal to 1. If gopSizeUnits is seconds, gopSize
            must be greater than 0, but need not be an integer.
        GopSizeUnits:
          allOf:
          - $ref: '#/components/schemas/H265GopSizeUnits'
          description: Indicates if the gopSize is specified in frames or seconds.
            If seconds the system will convert the gopSize into a frame count at run
            time.
        Level:
          allOf:
          - $ref: '#/components/schemas/H265Level'
          description: H.265 Level.
        LookAheadRateControl:
          allOf:
          - $ref: '#/components/schemas/H265LookAheadRateControl'
          description: Amount of lookahead. A value of low can decrease latency and
            memory usage, while high can produce better quality for certain content.
        MaxBitrate:
          allOf:
          - $ref: '#/components/schemas/__integerMin100000Max40000000'
          description: 'For QVBR: See the tooltip for Quality level'
        MinIInterval:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max30'
          description: 'Only meaningful if sceneChangeDetect is set to enabled. Defaults
            to 5 if multiplex rate control is used. Enforces separation between repeated
            (cadence) I-frames and I-frames inserted by Scene Change Detection. If
            a scene change I-frame is within I-interval frames of a cadence I-frame,
            the GOP is shrunk and/or stretched to the scene change I-frame. GOP stretch
            requires enabling lookahead as well as setting I-interval. The normal
            cadence resumes for the next GOP. Note: Maximum GOP stretch = GOP size
            + Min-I-interval - 1'
        ParDenominator:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: Pixel Aspect Ratio denominator.
        ParNumerator:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: Pixel Aspect Ratio numerator.
        Profile:
          allOf:
          - $ref: '#/components/schemas/H265Profile'
          description: H.265 Profile.
        QvbrQualityLevel:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max10'
          description: 'Controls the target quality for the video encode. Applies
            only when the rate control mode is QVBR. Set values for the QVBR quality
            level field and Max bitrate field that suit your most important viewing
            devices. Recommended values are: \- Primary screen: Quality level: 8 to
            10. Max bitrate: 4M \- PC or tablet: Quality level: 7. Max bitrate: 1.5M
            to 3M \- Smartphone: Quality level: 6. Max bitrate: 1M to 1.5M'
        RateControlMode:
          allOf:
          - $ref: '#/components/schemas/H265RateControlMode'
          description: 'Rate control mode. QVBR: Quality will match the specified
            quality level except when it is constrained by the maximum bitrate. Recommended
            if you or your viewers pay for bandwidth. CBR: Quality varies, depending
            on the video complexity. Recommended only if you distribute your assets
            to devices that cannot handle variable bitrates. Multiplex: This rate
            control mode is only supported (and is required) when the video is being
            delivered to a MediaLive Multiplex in which case the rate control configuration
            is controlled by the properties within the Multiplex Program.'
        ScanType:
          allOf:
          - $ref: '#/components/schemas/H265ScanType'
          description: Sets the scan type of the output to progressive or top-field-first
            interlaced.
        SceneChangeDetect:
          allOf:
          - $ref: '#/components/schemas/H265SceneChangeDetect'
          description: Scene change detection.
        Slices:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max16'
          description: Number of slices per picture. Must be less than or equal to
            the number of macroblock rows for progressive pictures, and less than
            or equal to half the number of macroblock rows for interlaced pictures.
            This field is optional; when no value is specified the encoder will choose
            the number of slices based on encode resolution.
        Tier:
          allOf:
          - $ref: '#/components/schemas/H265Tier'
          description: H.265 Tier.
        TimecodeInsertion:
          allOf:
          - $ref: '#/components/schemas/H265TimecodeInsertionBehavior'
          description: 'Determines how timecodes should be inserted into the video
            elementary stream. \- ''disabled'': Do not include timecodes \- ''picTimingSei'':
            Pass through picture timing SEI messages from the source specified in
            Timecode Config'
        TimecodeBurninSettings:
          allOf:
          - $ref: '#/components/schemas/TimecodeBurninSettings'
          description: Timecode burn-in settings
        MvOverPictureBoundaries:
          allOf:
          - $ref: '#/components/schemas/H265MvOverPictureBoundaries'
          description: If you are setting up the picture as a tile, you must set this
            to "disabled". In all other configurations, you typically enter "enabled".
        MvTemporalPredictor:
          allOf:
          - $ref: '#/components/schemas/H265MvTemporalPredictor'
          description: If you are setting up the picture as a tile, you must set this
            to "disabled". In other configurations, you typically enter "enabled".
        TileHeight:
          allOf:
          - $ref: '#/components/schemas/__integerMin64Max2160'
          description: Set this field to set up the picture as a tile. You must also
            set tileWidth. The tile height must result in 22 or fewer rows in the
            frame. The tile width must result in 20 or fewer columns in the frame.
            And finally, the product of the column count and row count must be 64
            of less. If the tile width and height are specified, MediaLive will override
            the video codec slices field with a value that MediaLive calculates
        TilePadding:
          allOf:
          - $ref: '#/components/schemas/H265TilePadding'
          description: Set to "padded" to force MediaLive to add padding to the frame,
            to obtain a frame that is a whole multiple of the tile size. If you are
            setting up the picture as a tile, you must enter "padded". In all other
            configurations, you typically enter "none".
        TileWidth:
          allOf:
          - $ref: '#/components/schemas/__integerMin256Max3840'
          description: Set this field to set up the picture as a tile. See tileHeight
            for more information.
        TreeblockSize:
          allOf:
          - $ref: '#/components/schemas/H265TreeblockSize'
          description: Select the tree block size used for encoding. If you enter
            "auto", the encoder will pick the best size. If you are setting up the
            picture as a tile, you must set this to 32x32. In all other configurations,
            you typically enter "auto".
        MinQp:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max51'
          description: Sets the minimum QP. If you aren't familiar with quantization
            adjustment, leave the field empty. MediaLive will apply an appropriate
            value.
        Deblocking:
          allOf:
          - $ref: '#/components/schemas/H265Deblocking'
          description: Enable or disable the deblocking filter for this codec. The
            filter reduces blocking artifacts at block boundaries, which improves
            overall video quality. If the filter is disabled, visible block edges
            might appear in the output, especially at lower bitrates.
      required:
      - FramerateDenominator
      - FramerateNumerator
      description: H265 Settings
    H265Tier:
      type: string
      enum:
      - HIGH
      - MAIN
      description: H265 Tier
    H265TilePadding:
      type: string
      enum:
      - NONE
      - PADDED
      description: H265 Tile Padding
    H265TimecodeInsertionBehavior:
      type: string
      enum:
      - DISABLED
      - PIC_TIMING_SEI
      description: H265 Timecode Insertion Behavior
    H265TreeblockSize:
      type: string
      enum:
      - AUTO
      - TREE_SIZE_32X32
      description: H265 Treeblock Size
    Hdr10Settings:
      type: object
      properties:
        MaxCll:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max32768'
          description: Maximum Content Light Level An integer metadata value defining
            the maximum light level, in nits, of any single pixel within an encoded
            HDR video stream or file.
        MaxFall:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max32768'
          description: Maximum Frame Average Light Level An integer metadata value
            defining the maximum average light level, in nits, for any single frame
            within an encoded HDR video stream or file.
      description: Hdr10 Settings
    HlsAdMarkers:
      type: string
      enum:
      - ADOBE
      - ELEMENTAL
      - ELEMENTAL_SCTE35
      description: Hls Ad Markers
    HlsAkamaiHttpTransferMode:
      type: string
      enum:
      - CHUNKED
      - NON_CHUNKED
      description: Hls Akamai Http Transfer Mode
    HlsAkamaiSettings:
      type: object
      properties:
        ConnectionRetryInterval:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: Number of seconds to wait before retrying connection to the
            CDN if the connection is lost.
        FilecacheDuration:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max600'
          description: Size in seconds of file cache for streaming outputs.
        HttpTransferMode:
          allOf:
          - $ref: '#/components/schemas/HlsAkamaiHttpTransferMode'
          description: Specify whether or not to use chunked transfer encoding to
            Akamai. User should contact Akamai to enable this feature.
        NumRetries:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: Number of retry attempts that will be made before the Live
            Event is put into an error state. Applies only if the CDN destination
            URI begins with "s3" or "mediastore". For other URIs, the value is always
            3.
        RestartDelay:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max15'
          description: If a streaming output fails, number of seconds to wait until
            a restart is initiated. A value of 0 means never restart.
        Salt:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Salt for authenticated Akamai.
        Token:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Token parameter for authenticated akamai. If not specified,
            _gda_ is used.
      description: Hls Akamai Settings
    HlsBasicPutSettings:
      type: object
      properties:
        ConnectionRetryInterval:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: Number of seconds to wait before retrying connection to the
            CDN if the connection is lost.
        FilecacheDuration:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max600'
          description: Size in seconds of file cache for streaming outputs.
        NumRetries:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: Number of retry attempts that will be made before the Live
            Event is put into an error state. Applies only if the CDN destination
            URI begins with "s3" or "mediastore". For other URIs, the value is always
            3.
        RestartDelay:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max15'
          description: If a streaming output fails, number of seconds to wait until
            a restart is initiated. A value of 0 means never restart.
      description: Hls Basic Put Settings
    HlsCaptionLanguageSetting:
      type: string
      enum:
      - INSERT
      - NONE
      - OMIT
      description: Hls Caption Language Setting
    HlsCdnSettings:
      type: object
      properties:
        HlsAkamaiSettings:
          $ref: '#/components/schemas/HlsAkamaiSettings'
        HlsBasicPutSettings:
          $ref: '#/components/schemas/HlsBasicPutSettings'
        HlsMediaStoreSettings:
          $ref: '#/components/schemas/HlsMediaStoreSettings'
        HlsS3Settings:
          $ref: '#/components/schemas/HlsS3Settings'
        HlsWebdavSettings:
          $ref: '#/components/schemas/HlsWebdavSettings'
      description: Hls Cdn Settings
    HlsClientCache:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: Hls Client Cache
    HlsCodecSpecification:
      type: string
      enum:
      - RFC_4281
      - RFC_6381
      description: Hls Codec Specification
    HlsDirectoryStructure:
      type: string
      enum:
      - SINGLE_DIRECTORY
      - SUBDIRECTORY_PER_STREAM
      description: Hls Directory Structure
    HlsDiscontinuityTags:
      type: string
      enum:
      - INSERT
      - NEVER_INSERT
      description: Hls Discontinuity Tags
    HlsEncryptionType:
      type: string
      enum:
      - AES128
      - SAMPLE_AES
      description: Hls Encryption Type
    HlsGroupSettings:
      type: object
      properties:
        AdMarkers:
          allOf:
          - $ref: '#/components/schemas/__listOfHlsAdMarkers'
          description: Choose one or more ad marker types to pass SCTE35 signals through
            to this group of Apple HLS outputs.
        BaseUrlContent:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A partial URI prefix that will be prepended to each output
            in the media .m3u8 file. Can be used if base manifest is delivered from
            a different URL than the main .m3u8 file.
        BaseUrlContent1:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Optional. One value per output group. This field is required
            only if you are completing Base URL content A, and the downstream system
            has notified you that the media files for pipeline 1 of all outputs are
            in a location different from the media files for pipeline 0.
        BaseUrlManifest:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A partial URI prefix that will be prepended to each output
            in the media .m3u8 file. Can be used if base manifest is delivered from
            a different URL than the main .m3u8 file.
        BaseUrlManifest1:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Optional. One value per output group. Complete this field only
            if you are completing Base URL manifest A, and the downstream system has
            notified you that the child manifest files for pipeline 1 of all outputs
            are in a location different from the child manifest files for pipeline
            0.
        CaptionLanguageMappings:
          allOf:
          - $ref: '#/components/schemas/__listOfCaptionLanguageMapping'
          description: Mapping of up to 4 caption channels to caption languages. Is
            only meaningful if captionLanguageSetting is set to "insert".
        CaptionLanguageSetting:
          allOf:
          - $ref: '#/components/schemas/HlsCaptionLanguageSetting'
          description: 'Applies only to 608 Embedded output captions. insert: Include
            CLOSED-CAPTIONS lines in the manifest. Specify at least one language in
            the CC1 Language Code field. One CLOSED-CAPTION line is added for each
            Language Code you specify. Make sure to specify the languages in the order
            in which they appear in the original source (if the source is embedded
            format) or the order of the caption selectors (if the source is other
            than embedded). Otherwise, languages in the manifest will not match up
            properly with the output captions. none: Include CLOSED-CAPTIONS=NONE
            line in the manifest. omit: Omit any CLOSED-CAPTIONS line from the manifest.'
        ClientCache:
          allOf:
          - $ref: '#/components/schemas/HlsClientCache'
          description: 'When set to "disabled", sets the #EXT-X-ALLOW-CACHE:no tag
            in the manifest, which prevents clients from saving media segments for
            later replay.'
        CodecSpecification:
          allOf:
          - $ref: '#/components/schemas/HlsCodecSpecification'
          description: Specification to use (RFC-6381 or the default RFC-4281) during
            m3u8 playlist generation.
        ConstantIv:
          allOf:
          - $ref: '#/components/schemas/__stringMin32Max32'
          description: For use with encryptionType. This is a 128-bit, 16-byte hex
            value represented by a 32-character text string. If ivSource is set to
            "explicit" then this parameter is required and is used as the IV for encryption.
        Destination:
          allOf:
          - $ref: '#/components/schemas/OutputLocationRef'
          description: A directory or HTTP destination for the HLS segments, manifest
            files, and encryption keys (if enabled).
        DirectoryStructure:
          allOf:
          - $ref: '#/components/schemas/HlsDirectoryStructure'
          description: Place segments in subdirectories.
        DiscontinuityTags:
          allOf:
          - $ref: '#/components/schemas/HlsDiscontinuityTags'
          description: Specifies whether to insert EXT-X-DISCONTINUITY tags in the
            HLS child manifests for this output group. Typically, choose Insert because
            these tags are required in the manifest (according to the HLS specification)
            and serve an important purpose. Choose Never Insert only if the downstream
            system is doing real-time failover (without using the MediaLive automatic
            failover feature) and only if that downstream system has advised you to
            exclude the tags.
        EncryptionType:
          allOf:
          - $ref: '#/components/schemas/HlsEncryptionType'
          description: Encrypts the segments with the given encryption scheme. Exclude
            this parameter if no encryption is desired.
        HlsCdnSettings:
          allOf:
          - $ref: '#/components/schemas/HlsCdnSettings'
          description: Parameters that control interactions with the CDN.
        HlsId3SegmentTagging:
          allOf:
          - $ref: '#/components/schemas/HlsId3SegmentTaggingState'
          description: State of HLS ID3 Segment Tagging
        IFrameOnlyPlaylists:
          allOf:
          - $ref: '#/components/schemas/IFrameOnlyPlaylistType'
          description: 'DISABLED: Do not create an I-frame-only manifest, but do create
            the master and media manifests (according to the Output Selection field).
            STANDARD: Create an I-frame-only manifest for each output that contains
            video, as well as the other manifests (according to the Output Selection
            field). The I-frame manifest contains a #EXT-X-I-FRAMES-ONLY tag to indicate
            it is I-frame only, and one or more #EXT-X-BYTERANGE entries identifying
            the I-frame position. For example, #EXT-X-BYTERANGE:160364@1461888"'
        IncompleteSegmentBehavior:
          allOf:
          - $ref: '#/components/schemas/HlsIncompleteSegmentBehavior'
          description: Specifies whether to include the final (incomplete) segment
            in the media output when the pipeline stops producing output because of
            a channel stop, a channel pause or a loss of input to the pipeline. Auto
            means that MediaLive decides whether to include the final segment, depending
            on the channel class and the types of output groups. Suppress means to
            never include the incomplete segment. We recommend you choose Auto and
            let MediaLive control the behavior.
        IndexNSegments:
          allOf:
          - $ref: '#/components/schemas/__integerMin3'
          description: Applies only if Mode field is LIVE. Specifies the maximum number
            of segments in the media manifest file. After this maximum, older segments
            are removed from the media manifest. This number must be smaller than
            the number in the Keep Segments field.
        InputLossAction:
          allOf:
          - $ref: '#/components/schemas/InputLossActionForHlsOut'
          description: Parameter that control output group behavior on input loss.
        IvInManifest:
          allOf:
          - $ref: '#/components/schemas/HlsIvInManifest'
          description: For use with encryptionType. The IV (Initialization Vector)
            is a 128-bit number used in conjunction with the key for encrypting blocks.
            If set to "include", IV is listed in the manifest, otherwise the IV is
            not in the manifest.
        IvSource:
          allOf:
          - $ref: '#/components/schemas/HlsIvSource'
          description: For use with encryptionType. The IV (Initialization Vector)
            is a 128-bit number used in conjunction with the key for encrypting blocks.
            If this setting is "followsSegmentNumber", it will cause the IV to change
            every segment (to match the segment number). If this is set to "explicit",
            you must enter a constantIv value.
        KeepSegments:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: 'Applies only if Mode field is LIVE. Specifies the number of
            media segments to retain in the destination directory. This number should
            be bigger than indexNSegments (Num segments). We recommend (value = (2
            x indexNsegments) + 1). If this "keep segments" number is too low, the
            following might happen: the player is still reading a media manifest file
            that lists this segment, but that segment has been removed from the destination
            directory (as directed by indexNSegments). This situation would result
            in a 404 HTTP error on the player.'
        KeyFormat:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The value specifies how the key is represented in the resource
            identified by the URI. If parameter is absent, an implicit value of "identity"
            is used. A reverse DNS string can also be given.
        KeyFormatVersions:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Either a single positive integer version value or a slash delimited
            list of version values (1/2/3).
        KeyProviderSettings:
          allOf:
          - $ref: '#/components/schemas/KeyProviderSettings'
          description: The key provider settings.
        ManifestCompression:
          allOf:
          - $ref: '#/components/schemas/HlsManifestCompression'
          description: When set to gzip, compresses HLS playlist.
        ManifestDurationFormat:
          allOf:
          - $ref: '#/components/schemas/HlsManifestDurationFormat'
          description: Indicates whether the output manifest should use floating point
            or integer values for segment duration.
        MinSegmentLength:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: Minimum length of MPEG-2 Transport Stream segments in seconds.
            When set, minimum segment length is enforced by looking ahead and back
            within the specified range for a nearby avail and extending the segment
            size if needed.
        Mode:
          allOf:
          - $ref: '#/components/schemas/HlsMode'
          description: If "vod", all segments are indexed and kept permanently in
            the destination and manifest. If "live", only the number segments specified
            in keepSegments and indexNSegments are kept; newer segments replace older
            segments, which may prevent players from rewinding all the way to the
            beginning of the event. VOD mode uses HLS EXT-X-PLAYLIST-TYPE of EVENT
            while the channel is running, converting it to a "VOD" type manifest on
            completion of the stream.
        OutputSelection:
          allOf:
          - $ref: '#/components/schemas/HlsOutputSelection'
          description: 'MANIFESTS_AND_SEGMENTS: Generates manifests (master manifest,
            if applicable, and media manifests) for this output group. VARIANT_MANIFESTS_AND_SEGMENTS:
            Generates media manifests for this output group, but not a master manifest.
            SEGMENTS_ONLY: Does not generate any manifests for this output group.'
        ProgramDateTime:
          allOf:
          - $ref: '#/components/schemas/HlsProgramDateTime'
          description: Includes or excludes EXT-X-PROGRAM-DATE-TIME tag in .m3u8 manifest
            files. The value is calculated using the program date time clock.
        ProgramDateTimeClock:
          allOf:
          - $ref: '#/components/schemas/HlsProgramDateTimeClock'
          description: 'Specifies the algorithm used to drive the HLS EXT-X-PROGRAM-DATE-TIME
            clock. Options include: INITIALIZE_FROM_OUTPUT_TIMECODE: The PDT clock
            is initialized as a function of the first output timecode, then incremented
            by the EXTINF duration of each encoded segment. SYSTEM_CLOCK: The PDT
            clock is initialized as a function of the UTC wall clock, then incremented
            by the EXTINF duration of each encoded segment. If the PDT clock diverges
            from the wall clock by more than 500ms, it is resynchronized to the wall
            clock.'
        ProgramDateTimePeriod:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max3600'
          description: Period of insertion of EXT-X-PROGRAM-DATE-TIME entry, in seconds.
        RedundantManifest:
          allOf:
          - $ref: '#/components/schemas/HlsRedundantManifest'
          description: 'ENABLED: The master manifest (.m3u8 file) for each pipeline
            includes information about both pipelines: first its own media files,
            then the media files of the other pipeline. This feature allows playout
            device that support stale manifest detection to switch from one manifest
            to the other, when the current manifest seems to be stale. There are still
            two destinations and two master manifests, but both master manifests reference
            the media files from both pipelines. DISABLED: The master manifest (.m3u8
            file) for each pipeline includes information about its own pipeline only.
            For an HLS output group with MediaPackage as the destination, the DISABLED
            behavior is always followed. MediaPackage regenerates the manifests it
            serves to players so a redundant manifest from MediaLive is irrelevant.'
        SegmentLength:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: Length of MPEG-2 Transport Stream segments to create in seconds.
            Note that segments will end on the next keyframe after this duration,
            so actual segment length may be longer.
        SegmentationMode:
          allOf:
          - $ref: '#/components/schemas/HlsSegmentationMode'
          description: useInputSegmentation has been deprecated. The configured segment
            size is always used.
        SegmentsPerSubdirectory:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: Number of segments to write to a subdirectory before starting
            a new one. directoryStructure must be subdirectoryPerStream for this setting
            to have an effect.
        StreamInfResolution:
          allOf:
          - $ref: '#/components/schemas/HlsStreamInfResolution'
          description: Include or exclude RESOLUTION attribute for video in EXT-X-STREAM-INF
            tag of variant manifest.
        TimedMetadataId3Frame:
          allOf:
          - $ref: '#/components/schemas/HlsTimedMetadataId3Frame'
          description: Indicates ID3 frame that has the timecode.
        TimedMetadataId3Period:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: Timed Metadata interval in seconds.
        TimestampDeltaMilliseconds:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: Provides an extra millisecond delta offset to fine tune the
            timestamps.
        TsFileMode:
          allOf:
          - $ref: '#/components/schemas/HlsTsFileMode'
          description: 'SEGMENTED_FILES: Emit the program as segments - multiple .ts
            media files. SINGLE_FILE: Applies only if Mode field is VOD. Emit the
            program as a single .ts media file. The media manifest includes #EXT-X-BYTERANGE
            tags to index segments for playback. A typical use for this value is when
            sending the output to AWS Elemental MediaConvert, which can accept only
            a single media file. Playback while the channel is running is not guaranteed
            due to HTTP server caching.'
      required:
      - Destination
      description: Hls Group Settings
    HlsH265PackagingType:
      type: string
      enum:
      - HEV1
      - HVC1
      description: Hls H265 Packaging Type
    HlsId3SegmentTaggingScheduleActionSettings:
      type: object
      properties:
        Tag:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Complete this parameter if you want to specify only the metadata,
            not the entire frame. MediaLive will insert the metadata in a TXXX frame.
            Enter the value as plain text. You can include standard MediaLive variable
            data such as the current segment number.
        Id3:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'Complete this parameter if you want to specify the entire
            ID3 metadata. Enter a base64 string that contains one or more fully formed
            ID3 tags, according to the ID3 specification: http://id3.org/id3v2.4.0-structure'
      description: Settings for the action to insert ID3 metadata in every segment,
        in HLS output groups.
    HlsId3SegmentTaggingState:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: State of HLS ID3 Segment Tagging
    HlsIncompleteSegmentBehavior:
      type: string
      enum:
      - AUTO
      - SUPPRESS
      description: Hls Incomplete Segment Behavior
    HlsInputSettings:
      type: object
      properties:
        Bandwidth:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: When specified the HLS stream with the m3u8 BANDWIDTH that
            most closely matches this value will be chosen, otherwise the highest
            bandwidth stream in the m3u8 will be chosen. The bitrate is specified
            in bits per second, as in an HLS manifest.
        BufferSegments:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: When specified, reading of the HLS input will begin this many
            buffer segments from the end (most recently written segment). When not
            specified, the HLS input will begin with the first segment specified in
            the m3u8.
        Retries:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: The number of consecutive times that attempts to read a manifest
            or segment must fail before the input is considered unavailable.
        RetryInterval:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: The number of seconds between retries when an attempt to read
            a manifest or segment fails.
        Scte35Source:
          allOf:
          - $ref: '#/components/schemas/HlsScte35SourceType'
          description: Identifies the source for the SCTE-35 messages that MediaLive
            will ingest. Messages can be ingested from the content segments (in the
            stream) or from tags in the playlist (the HLS manifest). MediaLive ignores
            SCTE-35 information in the source that is not selected.
      description: Hls Input Settings
    HlsIvInManifest:
      type: string
      enum:
      - EXCLUDE
      - INCLUDE
      description: Hls Iv In Manifest
    HlsIvSource:
      type: string
      enum:
      - EXPLICIT
      - FOLLOWS_SEGMENT_NUMBER
      description: Hls Iv Source
    HlsManifestCompression:
      type: string
      enum:
      - GZIP
      - NONE
      description: Hls Manifest Compression
    HlsManifestDurationFormat:
      type: string
      enum:
      - FLOATING_POINT
      - INTEGER
      description: Hls Manifest Duration Format
    HlsMediaStoreSettings:
      type: object
      properties:
        ConnectionRetryInterval:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: Number of seconds to wait before retrying connection to the
            CDN if the connection is lost.
        FilecacheDuration:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max600'
          description: Size in seconds of file cache for streaming outputs.
        MediaStoreStorageClass:
          allOf:
          - $ref: '#/components/schemas/HlsMediaStoreStorageClass'
          description: When set to temporal, output files are stored in non-persistent
            memory for faster reading and writing.
        NumRetries:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: Number of retry attempts that will be made before the Live
            Event is put into an error state. Applies only if the CDN destination
            URI begins with "s3" or "mediastore". For other URIs, the value is always
            3.
        RestartDelay:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max15'
          description: If a streaming output fails, number of seconds to wait until
            a restart is initiated. A value of 0 means never restart.
      description: Hls Media Store Settings
    HlsMediaStoreStorageClass:
      type: string
      enum:
      - TEMPORAL
      description: Hls Media Store Storage Class
    HlsMode:
      type: string
      enum:
      - LIVE
      - VOD
      description: Hls Mode
    HlsOutputSelection:
      type: string
      enum:
      - MANIFESTS_AND_SEGMENTS
      - SEGMENTS_ONLY
      - VARIANT_MANIFESTS_AND_SEGMENTS
      description: Hls Output Selection
    HlsOutputSettings:
      type: object
      properties:
        H265PackagingType:
          allOf:
          - $ref: '#/components/schemas/HlsH265PackagingType'
          description: Only applicable when this output is referencing an H.265 video
            description. Specifies whether MP4 segments should be packaged as HEV1
            or HVC1.
        HlsSettings:
          allOf:
          - $ref: '#/components/schemas/HlsSettings'
          description: Settings regarding the underlying stream. These settings are
            different for audio-only outputs.
        NameModifier:
          allOf:
          - $ref: '#/components/schemas/__stringMin1'
          description: String concatenated to the end of the destination filename.
            Accepts \"Format Identifiers\":#formatIdentifierParameters.
        SegmentModifier:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: String concatenated to end of segment filenames.
      required:
      - HlsSettings
      description: Hls Output Settings
    HlsProgramDateTime:
      type: string
      enum:
      - EXCLUDE
      - INCLUDE
      description: Hls Program Date Time
    HlsProgramDateTimeClock:
      type: string
      enum:
      - INITIALIZE_FROM_OUTPUT_TIMECODE
      - SYSTEM_CLOCK
      description: Hls Program Date Time Clock
    HlsRedundantManifest:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: Hls Redundant Manifest
    HlsS3Settings:
      type: object
      properties:
        CannedAcl:
          allOf:
          - $ref: '#/components/schemas/S3CannedAcl'
          description: Specify the canned ACL to apply to each S3 request. Defaults
            to none.
      description: Hls S3 Settings
    HlsScte35SourceType:
      type: string
      enum:
      - MANIFEST
      - SEGMENTS
      description: Hls Scte35 Source Type
    HlsSegmentationMode:
      type: string
      enum:
      - USE_INPUT_SEGMENTATION
      - USE_SEGMENT_DURATION
      description: Hls Segmentation Mode
    HlsSettings:
      type: object
      properties:
        AudioOnlyHlsSettings:
          $ref: '#/components/schemas/AudioOnlyHlsSettings'
        Fmp4HlsSettings:
          $ref: '#/components/schemas/Fmp4HlsSettings'
        FrameCaptureHlsSettings:
          $ref: '#/components/schemas/FrameCaptureHlsSettings'
        StandardHlsSettings:
          $ref: '#/components/schemas/StandardHlsSettings'
      description: Hls Settings
    HlsStreamInfResolution:
      type: string
      enum:
      - EXCLUDE
      - INCLUDE
      description: Hls Stream Inf Resolution
    HlsTimedMetadataId3Frame:
      type: string
      enum:
      - NONE
      - PRIV
      - TDRL
      description: Hls Timed Metadata Id3 Frame
    HlsTimedMetadataScheduleActionSettings:
      type: object
      properties:
        Id3:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'Enter a base64 string that contains one or more fully formed
            ID3 tags.See the ID3 specification: http://id3.org/id3v2.4.0-structure'
      required:
      - Id3
      description: Settings for the action to insert ID3 metadata (as a one-time action)
        in HLS output groups.
    HlsTsFileMode:
      type: string
      enum:
      - SEGMENTED_FILES
      - SINGLE_FILE
      description: Hls Ts File Mode
    HlsWebdavHttpTransferMode:
      type: string
      enum:
      - CHUNKED
      - NON_CHUNKED
      description: Hls Webdav Http Transfer Mode
    HlsWebdavSettings:
      type: object
      properties:
        ConnectionRetryInterval:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: Number of seconds to wait before retrying connection to the
            CDN if the connection is lost.
        FilecacheDuration:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max600'
          description: Size in seconds of file cache for streaming outputs.
        HttpTransferMode:
          allOf:
          - $ref: '#/components/schemas/HlsWebdavHttpTransferMode'
          description: Specify whether or not to use chunked transfer encoding to
            WebDAV.
        NumRetries:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: Number of retry attempts that will be made before the Live
            Event is put into an error state. Applies only if the CDN destination
            URI begins with "s3" or "mediastore". For other URIs, the value is always
            3.
        RestartDelay:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max15'
          description: If a streaming output fails, number of seconds to wait until
            a restart is initiated. A value of 0 means never restart.
      description: Hls Webdav Settings
    HtmlMotionGraphicsSettings:
      type: object
      properties: {}
      description: Html Motion Graphics Settings
    IFrameOnlyPlaylistType:
      type: string
      enum:
      - DISABLED
      - STANDARD
      description: When set to "standard", an I-Frame only playlist will be written
        out for each video output in the output group. This I-Frame only playlist
        will contain byte range offsets pointing to the I-frame(s) in each segment.
    Id3SegmentTaggingScheduleActionSettings:
      type: object
      properties:
        Id3:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'Complete this parameter if you want to specify the entire
            ID3 metadata. Enter a base64 string that contains one or more fully formed
            ID3 tags, according to the ID3 specification: http://id3.org/id3v2.4.0-structure'
        Tag:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Complete this parameter if you want to specify only the metadata,
            not the entire frame. MediaLive will insert the metadata in a TXXX frame.
            Enter the value as plain text. You can include standard MediaLive variable
            data such as the current segment number.
      description: Settings for the action to insert ID3 metadata in every segment,
        in applicable output groups.
    ImmediateModeScheduleActionStartSettings:
      type: object
      properties: {}
      description: Settings to configure an action so that it occurs as soon as possible.
    IncludeFillerNalUnits:
      type: string
      enum:
      - AUTO
      - DROP
      - INCLUDE
      description: Include Filler Nal Units
    Input:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Unique ARN of the input (generated, immutable).
        AttachedChannels:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: A list of channel IDs that that input is attached to (currently
            an input can only be attached to one channel).
        Destinations:
          allOf:
          - $ref: '#/components/schemas/__listOfInputDestination'
          description: A list of the destinations of the input (PUSH-type).
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The generated ID of the input (unique for user account, immutable).
        InputClass:
          allOf:
          - $ref: '#/components/schemas/InputClass'
          description: STANDARD - MediaLive expects two sources to be connected to
            this input. If the channel is also STANDARD, both sources will be ingested.
            If the channel is SINGLE_PIPELINE, only the first source will be ingested;
            the second source will always be ignored, even if the first source fails.
            SINGLE_PIPELINE - You can connect only one source to this input. If the
            ChannelClass is also SINGLE_PIPELINE, this value is valid. If the ChannelClass
            is STANDARD, this value is not valid because the channel requires two
            sources in the input.
        InputDevices:
          allOf:
          - $ref: '#/components/schemas/__listOfInputDeviceSettings'
          description: Settings for the input devices.
        InputPartnerIds:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: A list of IDs for all Inputs which are partners of this one.
        InputSourceType:
          allOf:
          - $ref: '#/components/schemas/InputSourceType'
          description: Certain pull input sources can be dynamic, meaning that they
            can have their URL's dynamically changes during input switch actions.
            Presently, this functionality only works with MP4_FILE and TS_FILE inputs.
        MediaConnectFlows:
          allOf:
          - $ref: '#/components/schemas/__listOfMediaConnectFlow'
          description: A list of MediaConnect Flows for this input.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The user-assigned name (This is a mutable value).
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the role this input assumes
            during and after creation.
        SecurityGroups:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: A list of IDs for all the Input Security Groups attached to
            the input.
        Sources:
          allOf:
          - $ref: '#/components/schemas/__listOfInputSource'
          description: A list of the sources of the input (PULL-type).
        State:
          $ref: '#/components/schemas/InputState'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A collection of key-value pairs.
        Type:
          $ref: '#/components/schemas/InputType'
        SrtSettings:
          allOf:
          - $ref: '#/components/schemas/SrtSettings'
          description: The settings associated with an SRT input.
        InputNetworkLocation:
          allOf:
          - $ref: '#/components/schemas/InputNetworkLocation'
          description: The location of this input. AWS, for an input existing in the
            AWS Cloud, On-Prem for an input in a customer network.
        MulticastSettings:
          allOf:
          - $ref: '#/components/schemas/MulticastSettings'
          description: Multicast Input settings.
        Smpte2110ReceiverGroupSettings:
          allOf:
          - $ref: '#/components/schemas/Smpte2110ReceiverGroupSettings'
          description: Include this parameter if the input is a SMPTE 2110 input,
            to identify the stream sources for this input.
        SdiSources:
          $ref: '#/components/schemas/InputSdiSources'
      description: Placeholder documentation for Input
    InputAttachment:
      type: object
      properties:
        AutomaticInputFailoverSettings:
          allOf:
          - $ref: '#/components/schemas/AutomaticInputFailoverSettings'
          description: User-specified settings for defining what the conditions are
            for declaring the input unhealthy and failing over to a different input.
        InputAttachmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: User-specified name for the attachment. This is required if
            the user wants to use this input in an input switch action.
        InputId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the input
        InputSettings:
          allOf:
          - $ref: '#/components/schemas/InputSettings'
          description: Settings of an input (caption selector, etc.)
        LogicalInterfaceNames:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: Optional assignment of an input to a logical interface on the
            Node. Only applies to on premises channels.
      description: Placeholder documentation for InputAttachment
    InputChannelLevel:
      type: object
      properties:
        Gain:
          allOf:
          - $ref: '#/components/schemas/__integerMinNegative60Max6'
          description: Remixing value. Units are in dB and acceptable values are within
            the range from -60 (mute) and 6 dB.
        InputChannel:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max15'
          description: The index of the input channel used as a source.
      required:
      - Gain
      - InputChannel
      description: Input Channel Level
    InputClass:
      type: string
      enum:
      - STANDARD
      - SINGLE_PIPELINE
      description: A standard input has two sources and a single pipeline input only
        has one.
    InputClippingSettings:
      type: object
      properties:
        InputTimecodeSource:
          allOf:
          - $ref: '#/components/schemas/InputTimecodeSource'
          description: The source of the timecodes in the source being clipped.
        StartTimecode:
          allOf:
          - $ref: '#/components/schemas/StartTimecode'
          description: Settings to identify the start of the clip.
        StopTimecode:
          allOf:
          - $ref: '#/components/schemas/StopTimecode'
          description: Settings to identify the end of the clip.
      required:
      - InputTimecodeSource
      description: Settings to let you create a clip of the file input, in order to
        set up the input to ingest only a portion of the file.
    InputCodec:
      type: string
      enum:
      - MPEG2
      - AVC
      - HEVC
      description: codec in increasing order of complexity
    InputDeblockFilter:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: Input Deblock Filter
    InputDenoiseFilter:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: Input Denoise Filter
    InputDestination:
      type: object
      properties:
        Ip:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The system-generated static IP address of endpoint. It remains
            fixed for the lifetime of the input.
        Port:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The port number for the input.
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: This represents the endpoint that the customer stream will
            be pushed to.
        Vpc:
          $ref: '#/components/schemas/InputDestinationVpc'
        Network:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the attached network.
        NetworkRoutes:
          allOf:
          - $ref: '#/components/schemas/__listOfInputDestinationRoute'
          description: If the push input has an input location of ON-PREM it's a requirement
            to specify what the route of the input is going to be on the customer
            local network.
      description: The settings for a PUSH type input.
    InputDestinationRequest:
      type: object
      properties:
        StreamName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A unique name for the location the RTMP stream is being pushed
            to.
        Network:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: If the push input has an input location of ON-PREM, ID the
            ID of the attached network.
        NetworkRoutes:
          allOf:
          - $ref: '#/components/schemas/__listOfInputRequestDestinationRoute'
          description: If the push input has an input location of ON-PREM it's a requirement
            to specify what the route of the input is going to be on the customer
            local network.
        StaticIpAddress:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: If the push input has an input location of ON-PREM it's optional
            to specify what the ip address of the input is going to be on the customer
            local network.
      description: Endpoint settings for a PUSH type input.
    InputDestinationRoute:
      type: object
      properties:
        Cidr:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The CIDR of the route.
        Gateway:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: An optional gateway for the route.
      description: A network route configuration.
    InputDestinationVpc:
      type: object
      properties:
        AvailabilityZone:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The availability zone of the Input destination.
        NetworkInterfaceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The network interface ID of the Input destination in the VPC.
      description: The properties for a VPC type input destination.
    InputDeviceActiveInput:
      type: string
      enum:
      - HDMI
      - SDI
      description: The source at the input device that is currently active.
    InputDeviceCodec:
      type: string
      enum:
      - HEVC
      - AVC
      description: The codec to use on the video that the device produces.
    InputDeviceConfigurableAudioChannelPairConfig:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The ID for one audio pair configuration, a value from 1 to
            8.
        Profile:
          allOf:
          - $ref: '#/components/schemas/InputDeviceConfigurableAudioChannelPairProfile'
          description: The profile to set for one audio pair configuration. Choose
            an enumeration value. Each value describes one audio configuration using
            the format (rate control algorithm)-(codec)_(quality)-(bitrate in bytes).
            For example, CBR-AAC_HQ-192000. Or choose DISABLED, in which case the
            device won't produce audio for this pair.
      description: One audio configuration that specifies the format for one audio
        pair that the device produces as output.
    InputDeviceConfigurableAudioChannelPairProfile:
      type: string
      enum:
      - DISABLED
      - VBR-AAC_HHE-16000
      - VBR-AAC_HE-64000
      - VBR-AAC_LC-128000
      - CBR-AAC_HQ-192000
      - CBR-AAC_HQ-256000
      - CBR-AAC_HQ-384000
      - CBR-AAC_HQ-512000
      description: Property of InputDeviceConfigurableAudioChannelPairConfig, which
        configures one audio channel that the device produces.
    InputDeviceConfigurableSettings:
      type: object
      properties:
        ConfiguredInput:
          allOf:
          - $ref: '#/components/schemas/InputDeviceConfiguredInput'
          description: The input source that you want to use. If the device has a
            source connected to only one of its input ports, or if you don't care
            which source the device sends, specify Auto. If the device has sources
            connected to both its input ports, and you want to use a specific source,
            specify the source.
        MaxBitrate:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The maximum bitrate in bits per second. Set a value here to
            throttle the bitrate of the source video.
        LatencyMs:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The Link device's buffer size (latency) in milliseconds (ms).
        Codec:
          allOf:
          - $ref: '#/components/schemas/InputDeviceCodec'
          description: Choose the codec for the video that the device produces. Only
            UHD devices can specify this parameter.
        MediaconnectSettings:
          allOf:
          - $ref: '#/components/schemas/InputDeviceMediaConnectConfigurableSettings'
          description: To attach this device to a MediaConnect flow, specify these
            parameters. To detach an existing flow, enter {} for the value of mediaconnectSettings.
            Only UHD devices can specify this parameter.
        AudioChannelPairs:
          allOf:
          - $ref: '#/components/schemas/__listOfInputDeviceConfigurableAudioChannelPairConfig'
          description: An array of eight audio configurations, one for each audio
            pair in the source. Set up each audio configuration either to exclude
            the pair, or to format it and include it in the output from the device.
            This parameter applies only to UHD devices, and only when the device is
            configured as the source for a MediaConnect flow. For an HD device, you
            configure the audio by setting up audio selectors in the channel configuration.
        InputResolution:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Choose the resolution of the Link device's source (HD or UHD).
            Make sure the resolution matches the current source from the device. This
            value determines MediaLive resource allocation and billing for this input.
            Only UHD devices can specify this parameter.
      description: Configurable settings for the input device.
    InputDeviceConfiguredInput:
      type: string
      enum:
      - AUTO
      - HDMI
      - SDI
      description: The source to activate (use) from the input device.
    InputDeviceConnectionState:
      type: string
      enum:
      - DISCONNECTED
      - CONNECTED
      description: The state of the connection between the input device and AWS.
    InputDeviceHdSettings:
      type: object
      properties:
        ActiveInput:
          allOf:
          - $ref: '#/components/schemas/InputDeviceActiveInput'
          description: If you specified Auto as the configured input, specifies which
            of the sources is currently active (SDI or HDMI).
        ConfiguredInput:
          allOf:
          - $ref: '#/components/schemas/InputDeviceConfiguredInput'
          description: The source at the input device that is currently active. You
            can specify this source.
        DeviceState:
          allOf:
          - $ref: '#/components/schemas/InputDeviceState'
          description: The state of the input device.
        Framerate:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: The frame rate of the video source.
        Height:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The height of the video source, in pixels.
        MaxBitrate:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The current maximum bitrate for ingesting this source, in bits
            per second. You can specify this maximum.
        ScanType:
          allOf:
          - $ref: '#/components/schemas/InputDeviceScanType'
          description: The scan type of the video source.
        Width:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The width of the video source, in pixels.
        LatencyMs:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The Link device's buffer size (latency) in milliseconds (ms).
            You can specify this value.
      description: Settings that describe the active source from the input device,
        and the video characteristics of that source.
    InputDeviceIpScheme:
      type: string
      enum:
      - STATIC
      - DHCP
      description: Specifies whether the input device has been configured (outside
        of MediaLive) to use a dynamic IP address assignment (DHCP) or a static IP
        address.
    InputDeviceMediaConnectConfigurableSettings:
      type: object
      properties:
        FlowArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the MediaConnect flow to attach this device to.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN for the role that MediaLive assumes to access the attached
            flow and secret. For more information about how to create this role, see
            the MediaLive user guide.
        SecretArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN for the secret that holds the encryption key to encrypt
            the content output by the device.
        SourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the MediaConnect Flow source to stream to.
      description: Parameters required to attach a MediaConnect flow to the device.
    InputDeviceMediaConnectSettings:
      type: object
      properties:
        FlowArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the MediaConnect flow.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN for the role that MediaLive assumes to access the attached
            flow and secret.
        SecretArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the secret used to encrypt the stream.
        SourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the MediaConnect flow source.
      description: Information about the MediaConnect flow attached to the device.
    InputDeviceNetworkSettings:
      type: object
      properties:
        DnsAddresses:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: The DNS addresses of the input device.
        Gateway:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The network gateway IP address.
        IpAddress:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The IP address of the input device.
        IpScheme:
          allOf:
          - $ref: '#/components/schemas/InputDeviceIpScheme'
          description: Specifies whether the input device has been configured (outside
            of MediaLive) to use a dynamic IP address assignment (DHCP) or a static
            IP address.
        SubnetMask:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The subnet mask of the input device.
      description: The network settings for the input device.
    InputDeviceOutputType:
      type: string
      enum:
      - NONE
      - MEDIALIVE_INPUT
      - MEDIACONNECT_FLOW
      description: The output attachment type of the input device.
    InputDeviceRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique ID for the device.
      description: Settings for an input device.
    InputDeviceScanType:
      type: string
      enum:
      - INTERLACED
      - PROGRESSIVE
      description: The scan type of the video source.
    InputDeviceSettings:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique ID for the device.
      description: Settings for an input device.
    InputDeviceState:
      type: string
      enum:
      - IDLE
      - STREAMING
      description: The state of the input device.
    InputDeviceSummary:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique ARN of the input device.
        ConnectionState:
          allOf:
          - $ref: '#/components/schemas/InputDeviceConnectionState'
          description: The state of the connection between the input device and AWS.
        DeviceSettingsSyncState:
          allOf:
          - $ref: '#/components/schemas/DeviceSettingsSyncState'
          description: The status of the action to synchronize the device configuration.
            If you change the configuration of the input device (for example, the
            maximum bitrate), MediaLive sends the new data to the device. The device
            might not update itself immediately. SYNCED means the device has updated
            its configuration. SYNCING means that it has not updated its configuration.
        DeviceUpdateStatus:
          allOf:
          - $ref: '#/components/schemas/DeviceUpdateStatus'
          description: The status of software on the input device.
        HdDeviceSettings:
          allOf:
          - $ref: '#/components/schemas/InputDeviceHdSettings'
          description: Settings that describe an input device that is type HD.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique ID of the input device.
        MacAddress:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The network MAC address of the input device.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A name that you specify for the input device.
        NetworkSettings:
          allOf:
          - $ref: '#/components/schemas/InputDeviceNetworkSettings'
          description: Network settings for the input device.
        SerialNumber:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique serial number of the input device.
        Type:
          allOf:
          - $ref: '#/components/schemas/InputDeviceType'
          description: The type of the input device.
        UhdDeviceSettings:
          allOf:
          - $ref: '#/components/schemas/InputDeviceUhdSettings'
          description: Settings that describe an input device that is type UHD.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A collection of key-value pairs.
        AvailabilityZone:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Availability Zone associated with this input device.
        MedialiveInputArns:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: An array of the ARNs for the MediaLive inputs attached to the
            device. Returned only if the outputType is MEDIALIVE_INPUT.
        OutputType:
          allOf:
          - $ref: '#/components/schemas/InputDeviceOutputType'
          description: The output attachment type of the input device. Specifies MEDIACONNECT_FLOW
            if this device is the source for a MediaConnect flow. Specifies MEDIALIVE_INPUT
            if this device is the source for a MediaLive input.
      description: Details of the input device.
    InputDeviceThumbnail:
      type: string
      format: byte
      description: The binary data for the thumbnail that the Link device has most
        recently sent to MediaLive.
    InputDeviceTransferType:
      type: string
      enum:
      - OUTGOING
      - INCOMING
      description: The type of device transfer. INCOMING for an input device that
        is being transferred to you, OUTGOING for an input device that you are transferring
        to another AWS account.
    InputDeviceType:
      type: string
      enum:
      - HD
      - UHD
      description: The type of the input device. For an AWS Elemental Link device
        that outputs resolutions up to 1080, choose "HD".
    InputDeviceUhdAudioChannelPairConfig:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The ID for one audio pair configuration, a value from 1 to
            8.
        Profile:
          allOf:
          - $ref: '#/components/schemas/InputDeviceUhdAudioChannelPairProfile'
          description: The profile for one audio pair configuration. This property
            describes one audio configuration in the format (rate control algorithm)-(codec)_(quality)-(bitrate
            in bytes). For example, CBR-AAC_HQ-192000. Or DISABLED, in which case
            the device won't produce audio for this pair.
      description: One audio configuration that specifies the format for one audio
        pair that the device produces as output.
    InputDeviceUhdAudioChannelPairProfile:
      type: string
      enum:
      - DISABLED
      - VBR-AAC_HHE-16000
      - VBR-AAC_HE-64000
      - VBR-AAC_LC-128000
      - CBR-AAC_HQ-192000
      - CBR-AAC_HQ-256000
      - CBR-AAC_HQ-384000
      - CBR-AAC_HQ-512000
      description: Property of InputDeviceUhdAudioChannelPairConfig, which describes
        one audio channel that the device is configured to produce.
    InputDeviceUhdSettings:
      type: object
      properties:
        ActiveInput:
          allOf:
          - $ref: '#/components/schemas/InputDeviceActiveInput'
          description: If you specified Auto as the configured input, specifies which
            of the sources is currently active (SDI or HDMI).
        ConfiguredInput:
          allOf:
          - $ref: '#/components/schemas/InputDeviceConfiguredInput'
          description: The source at the input device that is currently active. You
            can specify this source.
        DeviceState:
          allOf:
          - $ref: '#/components/schemas/InputDeviceState'
          description: The state of the input device.
        Framerate:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: The frame rate of the video source.
        Height:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The height of the video source, in pixels.
        MaxBitrate:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The current maximum bitrate for ingesting this source, in bits
            per second. You can specify this maximum.
        ScanType:
          allOf:
          - $ref: '#/components/schemas/InputDeviceScanType'
          description: The scan type of the video source.
        Width:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The width of the video source, in pixels.
        LatencyMs:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The Link device's buffer size (latency) in milliseconds (ms).
            You can specify this value.
        Codec:
          allOf:
          - $ref: '#/components/schemas/InputDeviceCodec'
          description: The codec for the video that the device produces.
        MediaconnectSettings:
          allOf:
          - $ref: '#/components/schemas/InputDeviceMediaConnectSettings'
          description: Information about the MediaConnect flow attached to the device.
            Returned only if the outputType is MEDIACONNECT_FLOW.
        AudioChannelPairs:
          allOf:
          - $ref: '#/components/schemas/__listOfInputDeviceUhdAudioChannelPairConfig'
          description: An array of eight audio configurations, one for each audio
            pair in the source. Each audio configuration specifies either to exclude
            the pair, or to format it and include it in the output from the UHD device.
            Applies only when the device is configured as the source for a MediaConnect
            flow.
        InputResolution:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The resolution of the Link device's source (HD or UHD). This
            value determines MediaLive resource allocation and billing for this input.
      description: Settings that describe the active source from the input device,
        and the video characteristics of that source.
    InputFilter:
      type: string
      enum:
      - AUTO
      - DISABLED
      - FORCED
      description: Input Filter
    InputLocation:
      type: object
      properties:
        PasswordParam:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: key used to extract the password from EC2 Parameter store
        Uri:
          allOf:
          - $ref: '#/components/schemas/__stringMax2048'
          description: 'Uniform Resource Identifier - This should be a path to a file
            accessible to the Live system (eg. a http:// URI) depending on the output
            type. For example, a RTMP destination should have a uri simliar to: "rtmp://fmsserver/live".'
        Username:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Documentation update needed
      required:
      - Uri
      description: Input Location
    InputLossActionForHlsOut:
      type: string
      enum:
      - EMIT_OUTPUT
      - PAUSE_OUTPUT
      description: Input Loss Action For Hls Out
    InputLossActionForMsSmoothOut:
      type: string
      enum:
      - EMIT_OUTPUT
      - PAUSE_OUTPUT
      description: Input Loss Action For Ms Smooth Out
    InputLossActionForRtmpOut:
      type: string
      enum:
      - EMIT_OUTPUT
      - PAUSE_OUTPUT
      description: Input Loss Action For Rtmp Out
    InputLossActionForUdpOut:
      type: string
      enum:
      - DROP_PROGRAM
      - DROP_TS
      - EMIT_PROGRAM
      description: Input Loss Action For Udp Out
    InputLossBehavior:
      type: object
      properties:
        BlackFrameMsec:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max1000000'
          description: Documentation update needed
        InputLossImageColor:
          allOf:
          - $ref: '#/components/schemas/__stringMin6Max6'
          description: 'When input loss image type is "color" this field specifies
            the color to use. Value: 6 hex characters representing the values of RGB.'
        InputLossImageSlate:
          allOf:
          - $ref: '#/components/schemas/InputLocation'
          description: When input loss image type is "slate" these fields specify
            the parameters for accessing the slate.
        InputLossImageType:
          allOf:
          - $ref: '#/components/schemas/InputLossImageType'
          description: Indicates whether to substitute a solid color or a slate into
            the output after input loss exceeds blackFrameMsec.
        RepeatFrameMsec:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max1000000'
          description: Documentation update needed
      description: Input Loss Behavior
    InputLossFailoverSettings:
      type: object
      properties:
        InputLossThresholdMsec:
          allOf:
          - $ref: '#/components/schemas/__integerMin100'
          description: The amount of time (in milliseconds) that no input is detected.
            After that time, an input failover will occur.
      description: MediaLive will perform a failover if content is not detected in
        this input for the specified period.
    InputLossImageType:
      type: string
      enum:
      - COLOR
      - SLATE
      description: Input Loss Image Type
    InputMaximumBitrate:
      type: string
      enum:
      - MAX_10_MBPS
      - MAX_20_MBPS
      - MAX_50_MBPS
      description: Maximum input bitrate in megabits per second. Bitrates up to 50
        Mbps are supported currently.
    InputNetworkLocation:
      type: string
      enum:
      - AWS
      - ON_PREMISES
      description: 'With the introduction of MediaLive Anywhere, a MediaLive input
        can now exist in two different places: AWS or

        inside an on-premises datacenter. By default all inputs will continue to be
        AWS inputs.'
    InputPreference:
      type: string
      enum:
      - EQUAL_INPUT_PREFERENCE
      - PRIMARY_INPUT_PREFERRED
      description: 'Input preference when deciding which input to make active when
        a previously failed input has recovered.

        If \"EQUAL_INPUT_PREFERENCE\", then the active input will stay active as long
        as it is healthy.

        If \"PRIMARY_INPUT_PREFERRED\", then always switch back to the primary input
        when it is healthy.'
    InputPrepareScheduleActionSettings:
      type: object
      properties:
        InputAttachmentNameReference:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the input attachment that should be prepared by
            this action. If no name is provided, the action will stop the most recent
            prepare (if any) when activated.
        InputClippingSettings:
          allOf:
          - $ref: '#/components/schemas/InputClippingSettings'
          description: Settings to let you create a clip of the file input, in order
            to set up the input to ingest only a portion of the file.
        UrlPath:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: The value for the variable portion of the URL for the dynamic
            input, for this instance of the input. Each time you use the same dynamic
            input in an input switch action, you can provide a different value, in
            order to connect the input to a different content source.
      description: Action to prepare an input for a future immediate input switch.
    InputRequestDestinationRoute:
      type: object
      properties:
        Cidr:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The CIDR of the route.
        Gateway:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: An optional gateway for the route.
      description: A network route configuration.
    InputResolution:
      type: string
      enum:
      - SD
      - HD
      - UHD
      description: Input resolution based on lines of vertical resolution in the input;
        SD is less than 720 lines, HD is 720 to 1080 lines, UHD is greater than 1080
        lines
    InputSdiSources:
      type: array
      items:
        $ref: '#/components/schemas/__string'
      description: SDI Sources for this Input.
    InputSdpLocation:
      type: object
      properties:
        MediaIndex:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The index of the media stream in the SDP file for one SMPTE
            2110 stream.
        SdpUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL of the SDP file for one SMPTE 2110 stream.
      description: The location of the SDP file for one of the SMPTE 2110 streams
        in a receiver group.
    InputSecurityGroup:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Unique ARN of Input Security Group
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Id of the Input Security Group
        Inputs:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: The list of inputs currently using this Input Security Group.
        State:
          allOf:
          - $ref: '#/components/schemas/InputSecurityGroupState'
          description: The current state of the Input Security Group.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A collection of key-value pairs.
        WhitelistRules:
          allOf:
          - $ref: '#/components/schemas/__listOfInputWhitelistRule'
          description: Whitelist rules and their sync status
      description: An Input Security Group
    InputSecurityGroupState:
      type: string
      enum:
      - IDLE
      - IN_USE
      - UPDATING
      - DELETED
      description: Placeholder documentation for InputSecurityGroupState
    InputSettings:
      type: object
      properties:
        AudioSelectors:
          allOf:
          - $ref: '#/components/schemas/__listOfAudioSelector'
          description: Used to select the audio stream to decode for inputs that have
            multiple available.
        CaptionSelectors:
          allOf:
          - $ref: '#/components/schemas/__listOfCaptionSelector'
          description: Used to select the caption input to use for inputs that have
            multiple available.
        DeblockFilter:
          allOf:
          - $ref: '#/components/schemas/InputDeblockFilter'
          description: Enable or disable the deblock filter when filtering.
        DenoiseFilter:
          allOf:
          - $ref: '#/components/schemas/InputDenoiseFilter'
          description: Enable or disable the denoise filter when filtering.
        FilterStrength:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max5'
          description: Adjusts the magnitude of filtering from 1 (minimal) to 5 (strongest).
        InputFilter:
          allOf:
          - $ref: '#/components/schemas/InputFilter'
          description: Turns on the filter for this input. MPEG-2 inputs have the
            deblocking filter enabled by default. 1) auto - filtering will be applied
            depending on input type/quality 2) disabled - no filtering will be applied
            to the input 3) forced - filtering will be applied regardless of input
            type
        NetworkInputSettings:
          allOf:
          - $ref: '#/components/schemas/NetworkInputSettings'
          description: Input settings.
        Scte35Pid:
          allOf:
          - $ref: '#/components/schemas/__integerMin32Max8191'
          description: PID from which to read SCTE-35 messages. If left undefined,
            EML will select the first SCTE-35 PID found in the input.
        Smpte2038DataPreference:
          allOf:
          - $ref: '#/components/schemas/Smpte2038DataPreference'
          description: 'Specifies whether to extract applicable ancillary data from
            a SMPTE-2038 source in this input. Applicable data types are captions,
            timecode, AFD, and SCTE-104 messages. \- PREFER: Extract from SMPTE-2038
            if present in this input, otherwise extract from another source (if any).
            \- IGNORE: Never extract any ancillary data from SMPTE-2038.'
        SourceEndBehavior:
          allOf:
          - $ref: '#/components/schemas/InputSourceEndBehavior'
          description: Loop input if it is a file. This allows a file input to be
            streamed indefinitely.
        VideoSelector:
          allOf:
          - $ref: '#/components/schemas/VideoSelector'
          description: Informs which video elementary stream to decode for input types
            that have multiple available.
      description: Live Event input parameters. There can be multiple inputs in a
        single Live Event.
    InputSource:
      type: object
      properties:
        PasswordParam:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The key used to extract the password from EC2 Parameter store.
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: This represents the customer's source URL where stream is pulled
            from.
        Username:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The username for the input source.
      description: The settings for a PULL type input.
    InputSourceEndBehavior:
      type: string
      enum:
      - CONTINUE
      - LOOP
      description: Input Source End Behavior
    InputSourceRequest:
      type: object
      properties:
        PasswordParam:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The key used to extract the password from EC2 Parameter store.
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: This represents the customer's source URL where stream is pulled
            from.
        Username:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The username for the input source.
      description: Settings for for a PULL type input.
    InputSourceType:
      type: string
      enum:
      - STATIC
      - DYNAMIC
      description: 'There are two types of input sources, static and dynamic. If an
        input source is dynamic you can

        change the source url of the input dynamically using an input switch action.
        Currently, two input types

        support a dynamic url at this time, MP4_FILE and TS_FILE. By default all input
        sources are static.'
    InputSpecification:
      type: object
      properties:
        Codec:
          allOf:
          - $ref: '#/components/schemas/InputCodec'
          description: Input codec
        MaximumBitrate:
          allOf:
          - $ref: '#/components/schemas/InputMaximumBitrate'
          description: Maximum input bitrate, categorized coarsely
        Resolution:
          allOf:
          - $ref: '#/components/schemas/InputResolution'
          description: Input resolution, categorized coarsely
      description: Placeholder documentation for InputSpecification
    InputState:
      type: string
      enum:
      - CREATING
      - DETACHED
      - ATTACHED
      - DELETING
      - DELETED
      description: Placeholder documentation for InputState
    InputSwitchScheduleActionSettings:
      type: object
      properties:
        InputAttachmentNameReference:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the input attachment (not the name of the input!)
            to switch to. The name is specified in the channel configuration.
        InputClippingSettings:
          allOf:
          - $ref: '#/components/schemas/InputClippingSettings'
          description: Settings to let you create a clip of the file input, in order
            to set up the input to ingest only a portion of the file.
        UrlPath:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: The value for the variable portion of the URL for the dynamic
            input, for this instance of the input. Each time you use the same dynamic
            input in an input switch action, you can provide a different value, in
            order to connect the input to a different content source.
      required:
      - InputAttachmentNameReference
      description: 'Settings for the "switch input" action: to switch from ingesting
        one input to ingesting another input.'
    InputTimecodeSource:
      type: string
      enum:
      - ZEROBASED
      - EMBEDDED
      description: Documentation update needed
    InputType:
      type: string
      enum:
      - UDP_PUSH
      - RTP_PUSH
      - RTMP_PUSH
      - RTMP_PULL
      - URL_PULL
      - MP4_FILE
      - MEDIACONNECT
      - INPUT_DEVICE
      - AWS_CDI
      - TS_FILE
      - SRT_CALLER
      - MULTICAST
      - SMPTE_2110_RECEIVER_GROUP
      - SDI
      description: The different types of inputs that AWS Elemental MediaLive supports.
    InputVpcRequest:
      type: object
      properties:
        SecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: A list of up to 5 EC2 VPC security group IDs to attach to the
            Input VPC network interfaces. Requires subnetIds. If none are specified
            then the VPC default security group will be used.
        SubnetIds:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: A list of 2 VPC subnet IDs from the same VPC. Subnet IDs must
            be mapped to two unique availability zones (AZ).
      required:
      - SubnetIds
      description: Settings for a private VPC Input. When this property is specified,
        the input destination addresses will be created in a VPC rather than with
        public Internet addresses. This property requires setting the roleArn property
        on Input creation. Not compatible with the inputSecurityGroups property.
    InputWhitelistRule:
      type: object
      properties:
        Cidr:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The IPv4 CIDR that's whitelisted.
      description: Whitelist rule
    InputWhitelistRuleCidr:
      type: object
      properties:
        Cidr:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The IPv4 CIDR to whitelist.
      description: An IPv4 CIDR to whitelist.
    InterfaceMapping:
      type: object
      properties:
        LogicalInterfaceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The logical name for one interface (on every Node) that handles
            a specific type of traffic. We recommend that the name hints at the physical
            interface it applies to. For example, it could refer to the traffic that
            the physical interface handles. For example, my-Inputs-Interface.
        NetworkId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the network that you want to connect to the specified
            logicalInterfaceName.
      description: Used in ClusterNetworkSettings
    InterfaceMappingCreateRequest:
      type: object
      properties:
        LogicalInterfaceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The logical name for one interface (on every Node) that handles
            a specific type of traffic. We recommend that the name hints at the physical
            interface it applies to. For example, it could refer to the traffic that
            the physical interface handles. For example, my-Inputs-Interface.
        NetworkId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the network that you want to connect to the specified
            logicalInterfaceName.
      description: Used in ClusterNetworkSettingsCreateRequest.
    InterfaceMappingUpdateRequest:
      type: object
      properties:
        LogicalInterfaceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The logical name for one interface (on every Node) that handles
            a specific type of traffic. We recommend that the name hints at the physical
            interface it applies to. For example, it could refer to the traffic that
            the physical interface handles. For example, my-Inputs-Interface.
        NetworkId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the network that you want to connect to the specified
            logicalInterfaceName. You can use the ListNetworks operation to discover
            all the IDs.
      description: Placeholder documentation for InterfaceMappingUpdateRequest
    InternalServerErrorException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/__string'
      description: Placeholder documentation for InternalServerErrorException
    IpPool:
      type: object
      properties:
        Cidr:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A CIDR block of IP addresses that are reserved for MediaLive
            Anywhere.
      description: Used in DescribeNetworkResult, DescribeNetworkSummary, UpdateNetworkResult.
    IpPoolCreateRequest:
      type: object
      properties:
        Cidr:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A CIDR block of IP addresses to reserve for MediaLive Anywhere.
      description: Used in CreateNetworkRequest.
    IpPoolUpdateRequest:
      type: object
      properties:
        Cidr:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A CIDR block of IP addresses to reserve for MediaLive Anywhere.
      description: Used in UpdateNetworkRequest.
    KeyProviderSettings:
      type: object
      properties:
        StaticKeySettings:
          $ref: '#/components/schemas/StaticKeySettings'
      description: Key Provider Settings
    LastFrameClippingBehavior:
      type: string
      enum:
      - EXCLUDE_LAST_FRAME
      - INCLUDE_LAST_FRAME
      description: If you specify a StopTimecode in an input (in order to clip the
        file), you can specify if you want the clip to exclude (the default) or include
        the frame specified by the timecode.
    ListChannelPlacementGroupsRequest:
      type: object
      properties:
        ClusterId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the cluster
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of items to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The token to retrieve the next page of results.
      required:
      - ClusterId
      description: Placeholder documentation for ListChannelPlacementGroupsRequest
    ListChannelPlacementGroupsResponse:
      type: object
      properties:
        ChannelPlacementGroups:
          allOf:
          - $ref: '#/components/schemas/__listOfDescribeChannelPlacementGroupSummary'
          description: An array of ChannelPlacementGroups that exist in the Cluster.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Token for the next result.
      description: Placeholder documentation for ListChannelPlacementGroupsResponse
    ListChannelsRequest:
      type: object
      properties:
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
        NextToken:
          $ref: '#/components/schemas/__string'
      description: Placeholder documentation for ListChannelsRequest
    ListChannelsResponse:
      type: object
      properties:
        Channels:
          $ref: '#/components/schemas/__listOfChannelSummary'
        NextToken:
          $ref: '#/components/schemas/__string'
      description: Placeholder documentation for ListChannelsResponse
    ListCloudWatchAlarmTemplateGroupsRequest:
      type: object
      properties:
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A token used to retrieve the next set of results in paginated
            list responses.
        Scope:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Represents the scope of a resource, with options for all scopes,
            AWS provided resources, or local resources.
        SignalMapIdentifier:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A signal map's identifier. Can be either be its id or current
            name.
      description: Placeholder documentation for ListCloudWatchAlarmTemplateGroupsRequest
    ListCloudWatchAlarmTemplateGroupsResponse:
      type: object
      properties:
        CloudWatchAlarmTemplateGroups:
          $ref: '#/components/schemas/__listOfCloudWatchAlarmTemplateGroupSummary'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max2048'
          description: A token used to retrieve the next set of results in paginated
            list responses.
      description: Placeholder documentation for ListCloudWatchAlarmTemplateGroupsResponse
    ListCloudWatchAlarmTemplatesRequest:
      type: object
      properties:
        GroupIdentifier:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A cloudwatch alarm template group's identifier. Can be either
            be its id or current name.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A token used to retrieve the next set of results in paginated
            list responses.
        Scope:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Represents the scope of a resource, with options for all scopes,
            AWS provided resources, or local resources.
        SignalMapIdentifier:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A signal map's identifier. Can be either be its id or current
            name.
      description: Placeholder documentation for ListCloudWatchAlarmTemplatesRequest
    ListCloudWatchAlarmTemplatesResponse:
      type: object
      properties:
        CloudWatchAlarmTemplates:
          $ref: '#/components/schemas/__listOfCloudWatchAlarmTemplateSummary'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max2048'
          description: A token used to retrieve the next set of results in paginated
            list responses.
      description: Placeholder documentation for ListCloudWatchAlarmTemplatesResponse
    ListClustersRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of items to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The token to retrieve the next page of results.
      description: Placeholder documentation for ListClustersRequest
    ListClustersResponse:
      type: object
      properties:
        Clusters:
          allOf:
          - $ref: '#/components/schemas/__listOfDescribeClusterSummary'
          description: A list of the Clusters that exist in your AWS account.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Token for the next result.
      description: Placeholder documentation for ListClustersResponse
    ListEventBridgeRuleTemplateGroupsRequest:
      type: object
      properties:
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A token used to retrieve the next set of results in paginated
            list responses.
        SignalMapIdentifier:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A signal map's identifier. Can be either be its id or current
            name.
      description: Placeholder documentation for ListEventBridgeRuleTemplateGroupsRequest
    ListEventBridgeRuleTemplateGroupsResponse:
      type: object
      properties:
        EventBridgeRuleTemplateGroups:
          $ref: '#/components/schemas/__listOfEventBridgeRuleTemplateGroupSummary'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max2048'
          description: A token used to retrieve the next set of results in paginated
            list responses.
      description: Placeholder documentation for ListEventBridgeRuleTemplateGroupsResponse
    ListEventBridgeRuleTemplatesRequest:
      type: object
      properties:
        GroupIdentifier:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: An eventbridge rule template group's identifier. Can be either
            be its id or current name.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A token used to retrieve the next set of results in paginated
            list responses.
        SignalMapIdentifier:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A signal map's identifier. Can be either be its id or current
            name.
      description: Placeholder documentation for ListEventBridgeRuleTemplatesRequest
    ListEventBridgeRuleTemplatesResponse:
      type: object
      properties:
        EventBridgeRuleTemplates:
          $ref: '#/components/schemas/__listOfEventBridgeRuleTemplateSummary'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max2048'
          description: A token used to retrieve the next set of results in paginated
            list responses.
      description: Placeholder documentation for ListEventBridgeRuleTemplatesResponse
    ListInputDeviceTransfersRequest:
      type: object
      properties:
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
        NextToken:
          $ref: '#/components/schemas/__string'
        TransferType:
          $ref: '#/components/schemas/__string'
      required:
      - TransferType
      description: Placeholder documentation for ListInputDeviceTransfersRequest
    ListInputDeviceTransfersResponse:
      type: object
      properties:
        InputDeviceTransfers:
          allOf:
          - $ref: '#/components/schemas/__listOfTransferringInputDeviceSummary'
          description: The list of devices that you are transferring or are being
            transferred to you.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A token to get additional list results.
      description: Placeholder documentation for ListInputDeviceTransfersResponse
    ListInputDevicesRequest:
      type: object
      properties:
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
        NextToken:
          $ref: '#/components/schemas/__string'
      description: Placeholder documentation for ListInputDevicesRequest
    ListInputDevicesResponse:
      type: object
      properties:
        InputDevices:
          allOf:
          - $ref: '#/components/schemas/__listOfInputDeviceSummary'
          description: The list of input devices.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A token to get additional list results.
      description: Placeholder documentation for ListInputDevicesResponse
    ListInputSecurityGroupsRequest:
      type: object
      properties:
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
        NextToken:
          $ref: '#/components/schemas/__string'
      description: Placeholder documentation for ListInputSecurityGroupsRequest
    ListInputSecurityGroupsResponse:
      type: object
      properties:
        InputSecurityGroups:
          allOf:
          - $ref: '#/components/schemas/__listOfInputSecurityGroup'
          description: List of input security groups
        NextToken:
          $ref: '#/components/schemas/__string'
      description: Placeholder documentation for ListInputSecurityGroupsResponse
    ListInputsRequest:
      type: object
      properties:
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
        NextToken:
          $ref: '#/components/schemas/__string'
      description: Placeholder documentation for ListInputsRequest
    ListInputsResponse:
      type: object
      properties:
        Inputs:
          $ref: '#/components/schemas/__listOfInput'
        NextToken:
          $ref: '#/components/schemas/__string'
      description: Placeholder documentation for ListInputsResponse
    ListMultiplexProgramsRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of items to return.
        MultiplexId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the multiplex that the programs belong to.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The token to retrieve the next page of results.
      required:
      - MultiplexId
      description: Placeholder documentation for ListMultiplexProgramsRequest
    ListMultiplexProgramsResponse:
      type: object
      properties:
        MultiplexPrograms:
          allOf:
          - $ref: '#/components/schemas/__listOfMultiplexProgramSummary'
          description: List of multiplex programs.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Token for the next ListMultiplexProgram request.
      description: Placeholder documentation for ListMultiplexProgramsResponse
    ListMultiplexesRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of items to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The token to retrieve the next page of results.
      description: Placeholder documentation for ListMultiplexesRequest
    ListMultiplexesResponse:
      type: object
      properties:
        Multiplexes:
          allOf:
          - $ref: '#/components/schemas/__listOfMultiplexSummary'
          description: List of multiplexes.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Token for the next ListMultiplexes request.
      description: Placeholder documentation for ListMultiplexesResponse
    ListNetworksRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of items to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The token to retrieve the next page of results.
      description: Placeholder documentation for ListNetworksRequest
    ListNetworksResponse:
      type: object
      properties:
        Networks:
          allOf:
          - $ref: '#/components/schemas/__listOfDescribeNetworkSummary'
          description: An array of networks that you have created.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Token for the next ListNetworks request.
      description: Placeholder documentation for ListNetworksResponse
    ListNodesRequest:
      type: object
      properties:
        ClusterId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the cluster
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of items to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The token to retrieve the next page of results.
      required:
      - ClusterId
      description: Placeholder documentation for ListNodesRequest
    ListNodesResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Token for the next result.
        Nodes:
          allOf:
          - $ref: '#/components/schemas/__listOfDescribeNodeSummary'
          description: An array of Nodes that exist in the Cluster.
      description: Placeholder documentation for ListNodesResponse
    ListOfferingsRequest:
      type: object
      properties:
        ChannelClass:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Filter by channel class, 'STANDARD' or 'SINGLE_PIPELINE'
        ChannelConfiguration:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Filter to offerings that match the configuration of an existing
            channel, e.g. '2345678' (a channel ID)
        Codec:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Filter by codec, 'AVC', 'HEVC', 'MPEG2', 'AUDIO', 'LINK', or
            'AV1'
        Duration:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Filter by offering duration, e.g. '12'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
        MaximumBitrate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Filter by bitrate, 'MAX_10_MBPS', 'MAX_20_MBPS', or 'MAX_50_MBPS'
        MaximumFramerate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Filter by framerate, 'MAX_30_FPS' or 'MAX_60_FPS'
        NextToken:
          $ref: '#/components/schemas/__string'
        Resolution:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Filter by resolution, 'SD', 'HD', 'FHD', or 'UHD'
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Filter by resource type, 'INPUT', 'OUTPUT', 'MULTIPLEX', or
            'CHANNEL'
        SpecialFeature:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Filter by special feature, 'ADVANCED_AUDIO' or 'AUDIO_NORMALIZATION'
        VideoQuality:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Filter by video quality, 'STANDARD', 'ENHANCED', or 'PREMIUM'
      description: Placeholder documentation for ListOfferingsRequest
    ListOfferingsResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Token to retrieve the next page of results
        Offerings:
          allOf:
          - $ref: '#/components/schemas/__listOfOffering'
          description: List of offerings
      description: Placeholder documentation for ListOfferingsResponse
    ListReservationsRequest:
      type: object
      properties:
        ChannelClass:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Filter by channel class, 'STANDARD' or 'SINGLE_PIPELINE'
        Codec:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Filter by codec, 'AVC', 'HEVC', 'MPEG2', 'AUDIO', 'LINK', or
            'AV1'
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
        MaximumBitrate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Filter by bitrate, 'MAX_10_MBPS', 'MAX_20_MBPS', or 'MAX_50_MBPS'
        MaximumFramerate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Filter by framerate, 'MAX_30_FPS' or 'MAX_60_FPS'
        NextToken:
          $ref: '#/components/schemas/__string'
        Resolution:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Filter by resolution, 'SD', 'HD', 'FHD', or 'UHD'
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Filter by resource type, 'INPUT', 'OUTPUT', 'MULTIPLEX', or
            'CHANNEL'
        SpecialFeature:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Filter by special feature, 'ADVANCED_AUDIO' or 'AUDIO_NORMALIZATION'
        VideoQuality:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Filter by video quality, 'STANDARD', 'ENHANCED', or 'PREMIUM'
      description: Placeholder documentation for ListReservationsRequest
    ListReservationsResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Token to retrieve the next page of results
        Reservations:
          allOf:
          - $ref: '#/components/schemas/__listOfReservation'
          description: List of reservations
      description: Placeholder documentation for ListReservationsResponse
    ListSdiSourcesRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of items to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The token to retrieve the next page of results.
      description: Placeholder documentation for ListSdiSourcesRequest
    ListSdiSourcesResponse:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/__string'
        SdiSources:
          $ref: '#/components/schemas/__listOfSdiSourceSummary'
      description: Placeholder documentation for ListSdiSourcesResponse
    ListSignalMapsRequest:
      type: object
      properties:
        CloudWatchAlarmTemplateGroupIdentifier:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A cloudwatch alarm template group's identifier. Can be either
            be its id or current name.
        EventBridgeRuleTemplateGroupIdentifier:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: An eventbridge rule template group's identifier. Can be either
            be its id or current name.
        MaxResults:
          $ref: '#/components/schemas/MaxResults'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A token used to retrieve the next set of results in paginated
            list responses.
      description: Placeholder documentation for ListSignalMapsRequest
    ListSignalMapsResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max2048'
          description: A token used to retrieve the next set of results in paginated
            list responses.
        SignalMaps:
          $ref: '#/components/schemas/__listOfSignalMapSummary'
      description: Placeholder documentation for ListSignalMapsResponse
    ListTagsForResourceRequest:
      type: object
      properties:
        ResourceArn:
          $ref: '#/components/schemas/__string'
      required:
      - ResourceArn
      description: Placeholder documentation for ListTagsForResourceRequest
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          $ref: '#/components/schemas/Tags'
      description: Placeholder documentation for ListTagsForResourceResponse
    ListVersionsRequest:
      type: object
      properties: {}
      description: Placeholder documentation for ListVersionsRequest
    ListVersionsResponse:
      type: object
      properties:
        Versions:
          allOf:
          - $ref: '#/components/schemas/__listOfChannelEngineVersionResponse'
          description: List of engine versions that are available for this AWS account.
      description: Placeholder documentation for ListVersionsResponse
    LogLevel:
      type: string
      enum:
      - ERROR
      - WARNING
      - INFO
      - DEBUG
      - DISABLED
      description: The log level the user wants for their channel.
    M2tsAbsentInputAudioBehavior:
      type: string
      enum:
      - DROP
      - ENCODE_SILENCE
      description: M2ts Absent Input Audio Behavior
    M2tsArib:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: M2ts Arib
    M2tsAribCaptionsPidControl:
      type: string
      enum:
      - AUTO
      - USE_CONFIGURED
      description: M2ts Arib Captions Pid Control
    M2tsAudioBufferModel:
      type: string
      enum:
      - ATSC
      - DVB
      description: M2ts Audio Buffer Model
    M2tsAudioInterval:
      type: string
      enum:
      - VIDEO_AND_FIXED_INTERVALS
      - VIDEO_INTERVAL
      description: M2ts Audio Interval
    M2tsAudioStreamType:
      type: string
      enum:
      - ATSC
      - DVB
      description: M2ts Audio Stream Type
    M2tsBufferModel:
      type: string
      enum:
      - MULTIPLEX
      - NONE
      description: M2ts Buffer Model
    M2tsCcDescriptor:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: M2ts Cc Descriptor
    M2tsEbifControl:
      type: string
      enum:
      - NONE
      - PASSTHROUGH
      description: M2ts Ebif Control
    M2tsEbpPlacement:
      type: string
      enum:
      - VIDEO_AND_AUDIO_PIDS
      - VIDEO_PID
      description: M2ts Ebp Placement
    M2tsEsRateInPes:
      type: string
      enum:
      - EXCLUDE
      - INCLUDE
      description: M2ts Es Rate In Pes
    M2tsKlv:
      type: string
      enum:
      - NONE
      - PASSTHROUGH
      description: M2ts Klv
    M2tsNielsenId3Behavior:
      type: string
      enum:
      - NO_PASSTHROUGH
      - PASSTHROUGH
      description: M2ts Nielsen Id3 Behavior
    M2tsPcrControl:
      type: string
      enum:
      - CONFIGURED_PCR_PERIOD
      - PCR_EVERY_PES_PACKET
      description: M2ts Pcr Control
    M2tsRateMode:
      type: string
      enum:
      - CBR
      - VBR
      description: M2ts Rate Mode
    M2tsScte35Control:
      type: string
      enum:
      - NONE
      - PASSTHROUGH
      description: M2ts Scte35 Control
    M2tsSegmentationMarkers:
      type: string
      enum:
      - EBP
      - EBP_LEGACY
      - NONE
      - PSI_SEGSTART
      - RAI_ADAPT
      - RAI_SEGSTART
      description: M2ts Segmentation Markers
    M2tsSegmentationStyle:
      type: string
      enum:
      - MAINTAIN_CADENCE
      - RESET_CADENCE
      description: M2ts Segmentation Style
    M2tsSettings:
      type: object
      properties:
        AbsentInputAudioBehavior:
          allOf:
          - $ref: '#/components/schemas/M2tsAbsentInputAudioBehavior'
          description: When set to drop, output audio streams will be removed from
            the program if the selected input audio stream is removed from the input.
            This allows the output audio configuration to dynamically change based
            on input configuration. If this is set to encodeSilence, all output audio
            streams will output encoded silence when not connected to an active input
            stream.
        Arib:
          allOf:
          - $ref: '#/components/schemas/M2tsArib'
          description: When set to enabled, uses ARIB-compliant field muxing and removes
            video descriptor.
        AribCaptionsPid:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Packet Identifier (PID) for ARIB Captions in the transport
            stream. Can be entered as a decimal or hexadecimal value. Valid values
            are 32 (or 0x20)..8182 (or 0x1ff6).
        AribCaptionsPidControl:
          allOf:
          - $ref: '#/components/schemas/M2tsAribCaptionsPidControl'
          description: If set to auto, pid number used for ARIB Captions will be auto-selected
            from unused pids. If set to useConfigured, ARIB Captions will be on the
            configured pid number.
        AudioBufferModel:
          allOf:
          - $ref: '#/components/schemas/M2tsAudioBufferModel'
          description: When set to dvb, uses DVB buffer model for Dolby Digital audio.
            When set to atsc, the ATSC model is used.
        AudioFramesPerPes:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: The number of audio frames to insert for each PES packet.
        AudioPids:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Packet Identifier (PID) of the elementary audio stream(s) in
            the transport stream. Multiple values are accepted, and can be entered
            in ranges and/or by comma separation. Can be entered as decimal or hexadecimal
            values. Each PID specified must be in the range of 32 (or 0x20)..8182
            (or 0x1ff6).
        AudioStreamType:
          allOf:
          - $ref: '#/components/schemas/M2tsAudioStreamType'
          description: When set to atsc, uses stream type = 0x81 for AC3 and stream
            type = 0x87 for EAC3. When set to dvb, uses stream type = 0x06.
        Bitrate:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: The output bitrate of the transport stream in bits per second.
            Setting to 0 lets the muxer automatically determine the appropriate bitrate.
        BufferModel:
          allOf:
          - $ref: '#/components/schemas/M2tsBufferModel'
          description: Controls the timing accuracy for output network traffic. Leave
            as MULTIPLEX to ensure accurate network packet timing. Or set to NONE,
            which might result in lower latency but will result in more variability
            in output network packet timing. This variability might cause interruptions,
            jitter, or bursty behavior in your playback or receiving devices.
        CcDescriptor:
          allOf:
          - $ref: '#/components/schemas/M2tsCcDescriptor'
          description: When set to enabled, generates captionServiceDescriptor in
            PMT.
        DvbNitSettings:
          allOf:
          - $ref: '#/components/schemas/DvbNitSettings'
          description: Inserts DVB Network Information Table (NIT) at the specified
            table repetition interval.
        DvbSdtSettings:
          allOf:
          - $ref: '#/components/schemas/DvbSdtSettings'
          description: Inserts DVB Service Description Table (SDT) at the specified
            table repetition interval.
        DvbSubPids:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Packet Identifier (PID) for input source DVB Subtitle data
            to this output. Multiple values are accepted, and can be entered in ranges
            and/or by comma separation. Can be entered as decimal or hexadecimal values.
            Each PID specified must be in the range of 32 (or 0x20)..8182 (or 0x1ff6).
        DvbTdtSettings:
          allOf:
          - $ref: '#/components/schemas/DvbTdtSettings'
          description: Inserts DVB Time and Date Table (TDT) at the specified table
            repetition interval.
        DvbTeletextPid:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Packet Identifier (PID) for input source DVB Teletext data
            to this output. Can be entered as a decimal or hexadecimal value. Valid
            values are 32 (or 0x20)..8182 (or 0x1ff6).
        Ebif:
          allOf:
          - $ref: '#/components/schemas/M2tsEbifControl'
          description: If set to passthrough, passes any EBIF data from the input
            source to this output.
        EbpAudioInterval:
          allOf:
          - $ref: '#/components/schemas/M2tsAudioInterval'
          description: When videoAndFixedIntervals is selected, audio EBP markers
            will be added to partitions 3 and 4. The interval between these additional
            markers will be fixed, and will be slightly shorter than the video EBP
            marker interval. Only available when EBP Cablelabs segmentation markers
            are selected. Partitions 1 and 2 will always follow the video interval.
        EbpLookaheadMs:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max10000'
          description: When set, enforces that Encoder Boundary Points do not come
            within the specified time interval of each other by looking ahead at input
            video. If another EBP is going to come in within the specified time interval,
            the current EBP is not emitted, and the segment is "stretched" to the
            next marker. The lookahead value does not add latency to the system. The
            Live Event must be configured elsewhere to create sufficient latency to
            make the lookahead accurate.
        EbpPlacement:
          allOf:
          - $ref: '#/components/schemas/M2tsEbpPlacement'
          description: Controls placement of EBP on Audio PIDs. If set to videoAndAudioPids,
            EBP markers will be placed on the video PID and all audio PIDs. If set
            to videoPid, EBP markers will be placed on only the video PID.
        EcmPid:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: This field is unused and deprecated.
        EsRateInPes:
          allOf:
          - $ref: '#/components/schemas/M2tsEsRateInPes'
          description: Include or exclude the ES Rate field in the PES header.
        EtvPlatformPid:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Packet Identifier (PID) for input source ETV Platform data
            to this output. Can be entered as a decimal or hexadecimal value. Valid
            values are 32 (or 0x20)..8182 (or 0x1ff6).
        EtvSignalPid:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Packet Identifier (PID) for input source ETV Signal data to
            this output. Can be entered as a decimal or hexadecimal value. Valid values
            are 32 (or 0x20)..8182 (or 0x1ff6).
        FragmentTime:
          allOf:
          - $ref: '#/components/schemas/__doubleMin0'
          description: The length in seconds of each fragment. Only used with EBP
            markers.
        Klv:
          allOf:
          - $ref: '#/components/schemas/M2tsKlv'
          description: If set to passthrough, passes any KLV data from the input source
            to this output.
        KlvDataPids:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Packet Identifier (PID) for input source KLV data to this output.
            Multiple values are accepted, and can be entered in ranges and/or by comma
            separation. Can be entered as decimal or hexadecimal values. Each PID
            specified must be in the range of 32 (or 0x20)..8182 (or 0x1ff6).
        NielsenId3Behavior:
          allOf:
          - $ref: '#/components/schemas/M2tsNielsenId3Behavior'
          description: If set to passthrough, Nielsen inaudible tones for media tracking
            will be detected in the input audio and an equivalent ID3 tag will be
            inserted in the output.
        NullPacketBitrate:
          allOf:
          - $ref: '#/components/schemas/__doubleMin0'
          description: Value in bits per second of extra null packets to insert into
            the transport stream. This can be used if a downstream encryption system
            requires periodic null packets.
        PatInterval:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max1000'
          description: The number of milliseconds between instances of this table
            in the output transport stream. Valid values are 0, 10..1000.
        PcrControl:
          allOf:
          - $ref: '#/components/schemas/M2tsPcrControl'
          description: When set to pcrEveryPesPacket, a Program Clock Reference value
            is inserted for every Packetized Elementary Stream (PES) header. This
            parameter is effective only when the PCR PID is the same as the video
            or audio elementary stream.
        PcrPeriod:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max500'
          description: Maximum time in milliseconds between Program Clock Reference
            (PCRs) inserted into the transport stream.
        PcrPid:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Packet Identifier (PID) of the Program Clock Reference (PCR)
            in the transport stream. When no value is given, the encoder will assign
            the same value as the Video PID. Can be entered as a decimal or hexadecimal
            value. Valid values are 32 (or 0x20)..8182 (or 0x1ff6).
        PmtInterval:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max1000'
          description: The number of milliseconds between instances of this table
            in the output transport stream. Valid values are 0, 10..1000.
        PmtPid:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Packet Identifier (PID) for the Program Map Table (PMT) in
            the transport stream. Can be entered as a decimal or hexadecimal value.
            Valid values are 32 (or 0x20)..8182 (or 0x1ff6).
        ProgramNum:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max65535'
          description: The value of the program number field in the Program Map Table.
        RateMode:
          allOf:
          - $ref: '#/components/schemas/M2tsRateMode'
          description: When vbr, does not insert null packets into transport stream
            to fill specified bitrate. The bitrate setting acts as the maximum bitrate
            when vbr is set.
        Scte27Pids:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Packet Identifier (PID) for input source SCTE-27 data to this
            output. Multiple values are accepted, and can be entered in ranges and/or
            by comma separation. Can be entered as decimal or hexadecimal values.
            Each PID specified must be in the range of 32 (or 0x20)..8182 (or 0x1ff6).
        Scte35Control:
          allOf:
          - $ref: '#/components/schemas/M2tsScte35Control'
          description: Optionally pass SCTE-35 signals from the input source to this
            output.
        Scte35Pid:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Packet Identifier (PID) of the SCTE-35 stream in the transport
            stream. Can be entered as a decimal or hexadecimal value. Valid values
            are 32 (or 0x20)..8182 (or 0x1ff6).
        SegmentationMarkers:
          allOf:
          - $ref: '#/components/schemas/M2tsSegmentationMarkers'
          description: Inserts segmentation markers at each segmentationTime period.
            raiSegstart sets the Random Access Indicator bit in the adaptation field.
            raiAdapt sets the RAI bit and adds the current timecode in the private
            data bytes. psiSegstart inserts PAT and PMT tables at the start of segments.
            ebp adds Encoder Boundary Point information to the adaptation field as
            per OpenCable specification OC-SP-EBP-I01-130118. ebpLegacy adds Encoder
            Boundary Point information to the adaptation field using a legacy proprietary
            format.
        SegmentationStyle:
          allOf:
          - $ref: '#/components/schemas/M2tsSegmentationStyle'
          description: The segmentation style parameter controls how segmentation
            markers are inserted into the transport stream. With avails, it is possible
            that segments may be truncated, which can influence where future segmentation
            markers are inserted. When a segmentation style of "resetCadence" is selected
            and a segment is truncated due to an avail, we will reset the segmentation
            cadence. This means the subsequent segment will have a duration of $segmentationTime
            seconds. When a segmentation style of "maintainCadence" is selected and
            a segment is truncated due to an avail, we will not reset the segmentation
            cadence. This means the subsequent segment will likely be truncated as
            well. However, all segments after that will have a duration of $segmentationTime
            seconds. Note that EBP lookahead is a slight exception to this rule.
        SegmentationTime:
          allOf:
          - $ref: '#/components/schemas/__doubleMin1'
          description: The length in seconds of each segment. Required unless markers
            is set to _none_.
        TimedMetadataBehavior:
          allOf:
          - $ref: '#/components/schemas/M2tsTimedMetadataBehavior'
          description: When set to passthrough, timed metadata will be passed through
            from input to output.
        TimedMetadataPid:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Packet Identifier (PID) of the timed metadata stream in the
            transport stream. Can be entered as a decimal or hexadecimal value. Valid
            values are 32 (or 0x20)..8182 (or 0x1ff6).
        TransportStreamId:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max65535'
          description: The value of the transport stream ID field in the Program Map
            Table.
        VideoPid:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Packet Identifier (PID) of the elementary video stream in the
            transport stream. Can be entered as a decimal or hexadecimal value. Valid
            values are 32 (or 0x20)..8182 (or 0x1ff6).
        Scte35PrerollPullupMilliseconds:
          allOf:
          - $ref: '#/components/schemas/__doubleMin0Max5000'
          description: Defines the amount SCTE-35 preroll will be increased (in milliseconds)
            on the output. Preroll is the amount of time between the presence of a
            SCTE-35 indication in a transport stream and the PTS of the video frame
            it references. Zero means don't add pullup (it doesn't mean set the preroll
            to zero). Negative pullup is not supported, which means that you can't
            make the preroll shorter. Be aware that latency in the output will increase
            by the pullup amount.
      description: M2ts Settings
    M2tsTimedMetadataBehavior:
      type: string
      enum:
      - NO_PASSTHROUGH
      - PASSTHROUGH
      description: M2ts Timed Metadata Behavior
    M3u8KlvBehavior:
      type: string
      enum:
      - NO_PASSTHROUGH
      - PASSTHROUGH
      description: M3u8 Klv Behavior
    M3u8NielsenId3Behavior:
      type: string
      enum:
      - NO_PASSTHROUGH
      - PASSTHROUGH
      description: M3u8 Nielsen Id3 Behavior
    M3u8PcrControl:
      type: string
      enum:
      - CONFIGURED_PCR_PERIOD
      - PCR_EVERY_PES_PACKET
      description: M3u8 Pcr Control
    M3u8Scte35Behavior:
      type: string
      enum:
      - NO_PASSTHROUGH
      - PASSTHROUGH
      description: M3u8 Scte35 Behavior
    M3u8Settings:
      type: object
      properties:
        AudioFramesPerPes:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: The number of audio frames to insert for each PES packet.
        AudioPids:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Packet Identifier (PID) of the elementary audio stream(s) in
            the transport stream. Multiple values are accepted, and can be entered
            in ranges and/or by comma separation. Can be entered as decimal or hexadecimal
            values.
        EcmPid:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: This parameter is unused and deprecated.
        NielsenId3Behavior:
          allOf:
          - $ref: '#/components/schemas/M3u8NielsenId3Behavior'
          description: If set to passthrough, Nielsen inaudible tones for media tracking
            will be detected in the input audio and an equivalent ID3 tag will be
            inserted in the output.
        PatInterval:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max1000'
          description: The number of milliseconds between instances of this table
            in the output transport stream. A value of \"0\" writes out the PMT once
            per segment file.
        PcrControl:
          allOf:
          - $ref: '#/components/schemas/M3u8PcrControl'
          description: When set to pcrEveryPesPacket, a Program Clock Reference value
            is inserted for every Packetized Elementary Stream (PES) header. This
            parameter is effective only when the PCR PID is the same as the video
            or audio elementary stream.
        PcrPeriod:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max500'
          description: Maximum time in milliseconds between Program Clock References
            (PCRs) inserted into the transport stream.
        PcrPid:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Packet Identifier (PID) of the Program Clock Reference (PCR)
            in the transport stream. When no value is given, the encoder will assign
            the same value as the Video PID. Can be entered as a decimal or hexadecimal
            value.
        PmtInterval:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max1000'
          description: The number of milliseconds between instances of this table
            in the output transport stream. A value of \"0\" writes out the PMT once
            per segment file.
        PmtPid:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Packet Identifier (PID) for the Program Map Table (PMT) in
            the transport stream. Can be entered as a decimal or hexadecimal value.
        ProgramNum:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max65535'
          description: The value of the program number field in the Program Map Table.
        Scte35Behavior:
          allOf:
          - $ref: '#/components/schemas/M3u8Scte35Behavior'
          description: If set to passthrough, passes any SCTE-35 signals from the
            input source to this output.
        Scte35Pid:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Packet Identifier (PID) of the SCTE-35 stream in the transport
            stream. Can be entered as a decimal or hexadecimal value.
        TimedMetadataBehavior:
          allOf:
          - $ref: '#/components/schemas/M3u8TimedMetadataBehavior'
          description: Set to PASSTHROUGH to enable ID3 metadata insertion. To include
            metadata, you configure other parameters in the output group or individual
            outputs, or you add an ID3 action to the channel schedule.
        TimedMetadataPid:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Packet Identifier (PID) of the timed metadata stream in the
            transport stream. Can be entered as a decimal or hexadecimal value. Valid
            values are 32 (or 0x20)..8182 (or 0x1ff6).
        TransportStreamId:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max65535'
          description: The value of the transport stream ID field in the Program Map
            Table.
        VideoPid:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Packet Identifier (PID) of the elementary video stream in the
            transport stream. Can be entered as a decimal or hexadecimal value.
        KlvBehavior:
          allOf:
          - $ref: '#/components/schemas/M3u8KlvBehavior'
          description: If set to passthrough, passes any KLV data from the input source
            to this output.
        KlvDataPids:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Packet Identifier (PID) for input source KLV data to this output.
            Multiple values are accepted, and can be entered in ranges and/or by comma
            separation. Can be entered as decimal or hexadecimal values. Each PID
            specified must be in the range of 32 (or 0x20)..8182 (or 0x1ff6).
      description: Settings information for the .m3u8 container
    M3u8TimedMetadataBehavior:
      type: string
      enum:
      - NO_PASSTHROUGH
      - PASSTHROUGH
      description: M3u8 Timed Metadata Behavior
    MaintenanceCreateSettings:
      type: object
      properties:
        MaintenanceDay:
          allOf:
          - $ref: '#/components/schemas/MaintenanceDay'
          description: Choose one day of the week for maintenance. The chosen day
            is used for all future maintenance windows.
        MaintenanceStartTime:
          allOf:
          - $ref: '#/components/schemas/__stringPattern010920300'
          description: Choose the hour that maintenance will start. The chosen time
            is used for all future maintenance windows.
      description: Placeholder documentation for MaintenanceCreateSettings
    MaintenanceDay:
      type: string
      enum:
      - MONDAY
      - TUESDAY
      - WEDNESDAY
      - THURSDAY
      - FRIDAY
      - SATURDAY
      - SUNDAY
      description: The currently selected maintenance day.
    MaintenanceStatus:
      type: object
      properties:
        MaintenanceDay:
          allOf:
          - $ref: '#/components/schemas/MaintenanceDay'
          description: The currently selected maintenance day.
        MaintenanceDeadline:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Maintenance is required by the displayed date and time. Date
            and time is in ISO.
        MaintenanceScheduledDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The currently scheduled maintenance date and time. Date and
            time is in ISO.
        MaintenanceStartTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The currently selected maintenance start time. Time is in UTC.
      description: Placeholder documentation for MaintenanceStatus
    MaintenanceUpdateSettings:
      type: object
      properties:
        MaintenanceDay:
          allOf:
          - $ref: '#/components/schemas/MaintenanceDay'
          description: Choose one day of the week for maintenance. The chosen day
            is used for all future maintenance windows.
        MaintenanceScheduledDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Choose a specific date for maintenance to occur. The chosen
            date is used for the next maintenance window only.
        MaintenanceStartTime:
          allOf:
          - $ref: '#/components/schemas/__stringPattern010920300'
          description: Choose the hour that maintenance will start. The chosen time
            is used for all future maintenance windows.
      description: Placeholder documentation for MaintenanceUpdateSettings
    MaxResults:
      type: integer
      minimum: 1
      maximum: 1000
      description: Placeholder documentation for MaxResults
    MediaConnectFlow:
      type: object
      properties:
        FlowArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique ARN of the MediaConnect Flow being used as a source.
      description: The settings for a MediaConnect Flow.
    MediaConnectFlowRequest:
      type: object
      properties:
        FlowArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the MediaConnect Flow that you want to use as a
            source.
      description: The settings for a MediaConnect Flow.
    MediaPackageGroupSettings:
      type: object
      properties:
        Destination:
          allOf:
          - $ref: '#/components/schemas/OutputLocationRef'
          description: MediaPackage channel destination.
      required:
      - Destination
      description: Media Package Group Settings
    MediaPackageOutputDestinationSettings:
      type: object
      properties:
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/__stringMin1'
          description: ID of the channel in MediaPackage that is the destination for
            this output group. You do not need to specify the individual inputs in
            MediaPackage; MediaLive will handle the connection of the two MediaLive
            pipelines to the two MediaPackage inputs. The MediaPackage channel and
            MediaLive channel must be in the same region.
        ChannelGroup:
          allOf:
          - $ref: '#/components/schemas/__stringMin1'
          description: Name of the channel group in MediaPackageV2. Only use if you
            are sending CMAF Ingest output to a CMAF ingest endpoint on a MediaPackage
            channel that uses MediaPackage v2.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/__stringMin1'
          description: Name of the channel in MediaPackageV2. Only use if you are
            sending CMAF Ingest output to a CMAF ingest endpoint on a MediaPackage
            channel that uses MediaPackage v2.
      description: MediaPackage Output Destination Settings
    MediaPackageOutputSettings:
      type: object
      properties: {}
      description: Media Package Output Settings
    MediaResource:
      type: object
      properties:
        Destinations:
          $ref: '#/components/schemas/__listOfMediaResourceNeighbor'
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max256'
          description: The logical name of an AWS media resource.
        Sources:
          $ref: '#/components/schemas/__listOfMediaResourceNeighbor'
      description: An AWS resource used in media workflows.
    MediaResourceMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/MediaResource'
      description: A map representing an AWS media workflow as a graph.
    MediaResourceNeighbor:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max2048PatternArn'
          description: The ARN of a resource used in AWS media workflows.
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max256'
          description: The logical name of an AWS media resource.
      required:
      - Arn
      description: A direct source or destination neighbor to an AWS media resource.
    MonitorDeployment:
      type: object
      properties:
        DetailsUri:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max2048'
          description: URI associated with a signal map's monitor deployment.
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max2048'
          description: Error message associated with a failed monitor deployment of
            a signal map.
        Status:
          $ref: '#/components/schemas/SignalMapMonitorDeploymentStatus'
      required:
      - Status
      description: Represents the latest monitor deployment of a signal map.
    MotionGraphicsActivateScheduleActionSettings:
      type: object
      properties:
        Duration:
          allOf:
          - $ref: '#/components/schemas/__longMin0Max86400000'
          description: Duration (in milliseconds) that motion graphics should render
            on to the video stream. Leaving out this property or setting to 0 will
            result in rendering continuing until a deactivate action is processed.
        PasswordParam:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Key used to extract the password from EC2 Parameter store
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: URI of the HTML5 content to be rendered into the live stream.
        Username:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Documentation update needed
      description: Settings to specify the rendering of motion graphics into the video
        stream.
    MotionGraphicsConfiguration:
      type: object
      properties:
        MotionGraphicsInsertion:
          $ref: '#/components/schemas/MotionGraphicsInsertion'
        MotionGraphicsSettings:
          allOf:
          - $ref: '#/components/schemas/MotionGraphicsSettings'
          description: Motion Graphics Settings
      required:
      - MotionGraphicsSettings
      description: Motion Graphics Configuration
    MotionGraphicsDeactivateScheduleActionSettings:
      type: object
      properties: {}
      description: Settings to specify the ending of rendering motion graphics into
        the video stream.
    MotionGraphicsInsertion:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: Motion Graphics Insertion
    MotionGraphicsSettings:
      type: object
      properties:
        HtmlMotionGraphicsSettings:
          $ref: '#/components/schemas/HtmlMotionGraphicsSettings'
      description: Motion Graphics Settings
    Mp2CodingMode:
      type: string
      enum:
      - CODING_MODE_1_0
      - CODING_MODE_2_0
      description: Mp2 Coding Mode
    Mp2Settings:
      type: object
      properties:
        Bitrate:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: Average bitrate in bits/second.
        CodingMode:
          allOf:
          - $ref: '#/components/schemas/Mp2CodingMode'
          description: The MPEG2 Audio coding mode. Valid values are codingMode10
            (for mono) or codingMode20 (for stereo).
        SampleRate:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: Sample rate in Hz.
      description: Mp2 Settings
    Mpeg2AdaptiveQuantization:
      type: string
      enum:
      - AUTO
      - HIGH
      - LOW
      - MEDIUM
      - 'OFF'
      description: Mpeg2 Adaptive Quantization
    Mpeg2ColorMetadata:
      type: string
      enum:
      - IGNORE
      - INSERT
      description: Mpeg2 Color Metadata
    Mpeg2ColorSpace:
      type: string
      enum:
      - AUTO
      - PASSTHROUGH
      description: Mpeg2 Color Space
    Mpeg2DisplayRatio:
      type: string
      enum:
      - DISPLAYRATIO16X9
      - DISPLAYRATIO4X3
      description: Mpeg2 Display Ratio
    Mpeg2FilterSettings:
      type: object
      properties:
        TemporalFilterSettings:
          $ref: '#/components/schemas/TemporalFilterSettings'
      description: Mpeg2 Filter Settings
    Mpeg2GopSizeUnits:
      type: string
      enum:
      - FRAMES
      - SECONDS
      description: Mpeg2 Gop Size Units
    Mpeg2ScanType:
      type: string
      enum:
      - INTERLACED
      - PROGRESSIVE
      description: Mpeg2 Scan Type
    Mpeg2Settings:
      type: object
      properties:
        AdaptiveQuantization:
          allOf:
          - $ref: '#/components/schemas/Mpeg2AdaptiveQuantization'
          description: 'Choose Off to disable adaptive quantization. Or choose another
            value to enable the quantizer and set its strength. The strengths are:
            Auto, Off, Low, Medium, High. When you enable this field, MediaLive allows
            intra-frame quantizers to vary, which might improve visual quality.'
        AfdSignaling:
          allOf:
          - $ref: '#/components/schemas/AfdSignaling'
          description: 'Indicates the AFD values that MediaLive will write into the
            video encode. If you do not know what AFD signaling is, or if your downstream
            system has not given you guidance, choose AUTO. AUTO: MediaLive will try
            to preserve the input AFD value (in cases where multiple AFD values are
            valid). FIXED: MediaLive will use the value you specify in fixedAFD.'
        ColorMetadata:
          allOf:
          - $ref: '#/components/schemas/Mpeg2ColorMetadata'
          description: Specifies whether to include the color space metadata. The
            metadata describes the color space that applies to the video (the colorSpace
            field). We recommend that you insert the metadata.
        ColorSpace:
          allOf:
          - $ref: '#/components/schemas/Mpeg2ColorSpace'
          description: 'Choose the type of color space conversion to apply to the
            output. For detailed information on setting up both the input and the
            output to obtain the desired color space in the output, see the section
            on \"MediaLive Features - Video - color space\" in the MediaLive User
            Guide. PASSTHROUGH: Keep the color space of the input content - do not
            convert it. AUTO:Convert all content that is SD to rec 601, and convert
            all content that is HD to rec 709.'
        DisplayAspectRatio:
          allOf:
          - $ref: '#/components/schemas/Mpeg2DisplayRatio'
          description: Sets the pixel aspect ratio for the encode.
        FilterSettings:
          allOf:
          - $ref: '#/components/schemas/Mpeg2FilterSettings'
          description: 'Optionally specify a noise reduction filter, which can improve
            quality of compressed content. If you do not choose a filter, no filter
            will be applied. TEMPORAL: This filter is useful for both source content
            that is noisy (when it has excessive digital artifacts) and source content
            that is clean. When the content is noisy, the filter cleans up the source
            content before the encoding phase, with these two effects: First, it improves
            the output video quality because the content has been cleaned up. Secondly,
            it decreases the bandwidth because MediaLive does not waste bits on encoding
            noise. When the content is reasonably clean, the filter tends to decrease
            the bitrate.'
        FixedAfd:
          allOf:
          - $ref: '#/components/schemas/FixedAfd'
          description: Complete this field only when afdSignaling is set to FIXED.
            Enter the AFD value (4 bits) to write on all frames of the video encode.
        FramerateDenominator:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: 'description": "The framerate denominator. For example, 1001.
            The framerate is the numerator divided by the denominator. For example,
            24000 / 1001 = 23.976 FPS.'
        FramerateNumerator:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: The framerate numerator. For example, 24000. The framerate
            is the numerator divided by the denominator. For example, 24000 / 1001
            = 23.976 FPS.
        GopClosedCadence:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: 'MPEG2: default is open GOP.'
        GopNumBFrames:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max7'
          description: Relates to the GOP structure. The number of B-frames between
            reference frames. If you do not know what a B-frame is, use the default.
        GopSize:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: Relates to the GOP structure. The GOP size (keyframe interval)
            in the units specified in gopSizeUnits. If you do not know what GOP is,
            use the default. If gopSizeUnits is frames, then the gopSize must be an
            integer and must be greater than or equal to 1. If gopSizeUnits is seconds,
            the gopSize must be greater than 0, but does not need to be an integer.
        GopSizeUnits:
          allOf:
          - $ref: '#/components/schemas/Mpeg2GopSizeUnits'
          description: Relates to the GOP structure. Specifies whether the gopSize
            is specified in frames or seconds. If you do not plan to change the default
            gopSize, leave the default. If you specify SECONDS, MediaLive will internally
            convert the gop size to a frame count.
        ScanType:
          allOf:
          - $ref: '#/components/schemas/Mpeg2ScanType'
          description: Set the scan type of the output to PROGRESSIVE or INTERLACED
            (top field first).
        SubgopLength:
          allOf:
          - $ref: '#/components/schemas/Mpeg2SubGopLength'
          description: 'Relates to the GOP structure. If you do not know what GOP
            is, use the default. FIXED: Set the number of B-frames in each sub-GOP
            to the value in gopNumBFrames. DYNAMIC: Let MediaLive optimize the number
            of B-frames in each sub-GOP, to improve visual quality.'
        TimecodeInsertion:
          allOf:
          - $ref: '#/components/schemas/Mpeg2TimecodeInsertionBehavior'
          description: 'Determines how MediaLive inserts timecodes in the output video.
            For detailed information about setting up the input and the output for
            a timecode, see the section on \"MediaLive Features - Timecode configuration\"
            in the MediaLive User Guide. DISABLED: do not include timecodes. GOP_TIMECODE:
            Include timecode metadata in the GOP header.'
        TimecodeBurninSettings:
          allOf:
          - $ref: '#/components/schemas/TimecodeBurninSettings'
          description: Timecode burn-in settings
      required:
      - FramerateDenominator
      - FramerateNumerator
      description: Mpeg2 Settings
    Mpeg2SubGopLength:
      type: string
      enum:
      - DYNAMIC
      - FIXED
      description: Mpeg2 Sub Gop Length
    Mpeg2TimecodeInsertionBehavior:
      type: string
      enum:
      - DISABLED
      - GOP_TIMECODE
      description: Mpeg2 Timecode Insertion Behavior
    MsSmoothGroupSettings:
      type: object
      properties:
        AcquisitionPointId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID to include in each message in the sparse track. Ignored
            if sparseTrackType is NONE.
        AudioOnlyTimecodeControl:
          allOf:
          - $ref: '#/components/schemas/SmoothGroupAudioOnlyTimecodeControl'
          description: If set to passthrough for an audio-only MS Smooth output, the
            fragment absolute time will be set to the current timecode. This option
            does not write timecodes to the audio elementary stream.
        CertificateMode:
          allOf:
          - $ref: '#/components/schemas/SmoothGroupCertificateMode'
          description: If set to verifyAuthenticity, verify the https certificate
            chain to a trusted Certificate Authority (CA). This will cause https outputs
            to self-signed certificates to fail.
        ConnectionRetryInterval:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: Number of seconds to wait before retrying connection to the
            IIS server if the connection is lost. Content will be cached during this
            time and the cache will be be delivered to the IIS server once the connection
            is re-established.
        Destination:
          allOf:
          - $ref: '#/components/schemas/OutputLocationRef'
          description: Smooth Streaming publish point on an IIS server. Elemental
            Live acts as a "Push" encoder to IIS.
        EventId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: MS Smooth event ID to be sent to the IIS server. Should only
            be specified if eventIdMode is set to useConfigured.
        EventIdMode:
          allOf:
          - $ref: '#/components/schemas/SmoothGroupEventIdMode'
          description: 'Specifies whether or not to send an event ID to the IIS server.
            If no event ID is sent and the same Live Event is used without changing
            the publishing point, clients might see cached video from the previous
            run. Options: \- "useConfigured" - use the value provided in eventId \-
            "useTimestamp" - generate and send an event ID based on the current timestamp
            \- "noEventId" - do not send an event ID to the IIS server.'
        EventStopBehavior:
          allOf:
          - $ref: '#/components/schemas/SmoothGroupEventStopBehavior'
          description: When set to sendEos, send EOS signal to IIS server when stopping
            the event
        FilecacheDuration:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: Size in seconds of file cache for streaming outputs.
        FragmentLength:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: Length of mp4 fragments to generate (in seconds). Fragment
            length must be compatible with GOP size and framerate.
        InputLossAction:
          allOf:
          - $ref: '#/components/schemas/InputLossActionForMsSmoothOut'
          description: Parameter that control output group behavior on input loss.
        NumRetries:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: Number of retry attempts.
        RestartDelay:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: Number of seconds before initiating a restart due to output
            failure, due to exhausting the numRetries on one segment, or exceeding
            filecacheDuration.
        SegmentationMode:
          allOf:
          - $ref: '#/components/schemas/SmoothGroupSegmentationMode'
          description: useInputSegmentation has been deprecated. The configured segment
            size is always used.
        SendDelayMs:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max10000'
          description: Number of milliseconds to delay the output from the second
            pipeline.
        SparseTrackType:
          allOf:
          - $ref: '#/components/schemas/SmoothGroupSparseTrackType'
          description: 'Identifies the type of data to place in the sparse track:
            \- SCTE35: Insert SCTE-35 messages from the source content. With each
            message, insert an IDR frame to start a new segment. \- SCTE35_WITHOUT_SEGMENTATION:
            Insert SCTE-35 messages from the source content. With each message, insert
            an IDR frame but don''t start a new segment. \- NONE: Don''t generate
            a sparse track for any outputs in this output group.'
        StreamManifestBehavior:
          allOf:
          - $ref: '#/components/schemas/SmoothGroupStreamManifestBehavior'
          description: When set to send, send stream manifest so publishing point
            doesn't start until all streams start.
        TimestampOffset:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Timestamp offset for the event. Only used if timestampOffsetMode
            is set to useConfiguredOffset.
        TimestampOffsetMode:
          allOf:
          - $ref: '#/components/schemas/SmoothGroupTimestampOffsetMode'
          description: 'Type of timestamp date offset to use. \- useEventStartDate:
            Use the date the event was started as the offset \- useConfiguredOffset:
            Use an explicitly configured date as the offset'
      required:
      - Destination
      description: Ms Smooth Group Settings
    MsSmoothH265PackagingType:
      type: string
      enum:
      - HEV1
      - HVC1
      description: Ms Smooth H265 Packaging Type
    MsSmoothOutputSettings:
      type: object
      properties:
        H265PackagingType:
          allOf:
          - $ref: '#/components/schemas/MsSmoothH265PackagingType'
          description: Only applicable when this output is referencing an H.265 video
            description. Specifies whether MP4 segments should be packaged as HEV1
            or HVC1.
        NameModifier:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: String concatenated to the end of the destination filename.
            Required for multiple outputs of the same type.
      description: Ms Smooth Output Settings
    MulticastInputSettings:
      type: object
      properties:
        SourceIpAddress:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Optionally, a source ip address to filter by for Source-specific
            Multicast (SSM)
      description: Multicast-specific input settings.
    MulticastSettings:
      type: object
      properties:
        Sources:
          $ref: '#/components/schemas/__listOfMulticastSource'
      description: Settings for a Multicast input. Contains a list of multicast Urls
        and optional source ip addresses.
    MulticastSettingsCreateRequest:
      type: object
      properties:
        Sources:
          $ref: '#/components/schemas/__listOfMulticastSourceCreateRequest'
      description: Settings for a Multicast input. Contains a list of multicast Urls
        and optional source ip addresses.
    MulticastSettingsUpdateRequest:
      type: object
      properties:
        Sources:
          $ref: '#/components/schemas/__listOfMulticastSourceUpdateRequest'
      description: Settings for a Multicast input. Contains a list of multicast Urls
        and optional source ip addresses.
    MulticastSource:
      type: object
      properties:
        SourceIp:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: This represents the ip address of the device sending the multicast
            stream.
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: This represents the customer's source URL where multicast stream
            is pulled from.
      required:
      - Url
      description: Pair of multicast url and source ip address (optional) that make
        up a multicast source.
    MulticastSourceCreateRequest:
      type: object
      properties:
        SourceIp:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: This represents the ip address of the device sending the multicast
            stream.
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: This represents the customer's source URL where multicast stream
            is pulled from.
      required:
      - Url
      description: Pair of multicast url and source ip address (optional) that make
        up a multicast source.
    MulticastSourceUpdateRequest:
      type: object
      properties:
        SourceIp:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: This represents the ip address of the device sending the multicast
            stream.
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: This represents the customer's source URL where multicast stream
            is pulled from.
      required:
      - Url
      description: Pair of multicast url and source ip address (optional) that make
        up a multicast source.
    Multiplex:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique arn of the multiplex.
        AvailabilityZones:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: A list of availability zones for the multiplex.
        Destinations:
          allOf:
          - $ref: '#/components/schemas/__listOfMultiplexOutputDestination'
          description: A list of the multiplex output destinations.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique id of the multiplex.
        MultiplexSettings:
          allOf:
          - $ref: '#/components/schemas/MultiplexSettings'
          description: Configuration for a multiplex event.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the multiplex.
        PipelinesRunningCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The number of currently healthy pipelines.
        ProgramCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The number of programs in the multiplex.
        State:
          allOf:
          - $ref: '#/components/schemas/MultiplexState'
          description: The current state of the multiplex.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A collection of key-value pairs.
      description: The multiplex object.
    MultiplexContainerSettings:
      type: object
      properties:
        MultiplexM2tsSettings:
          $ref: '#/components/schemas/MultiplexM2tsSettings'
      description: Multiplex Container Settings
    MultiplexGroupSettings:
      type: object
      properties: {}
      description: Multiplex Group Settings
    MultiplexM2tsSettings:
      type: object
      properties:
        AbsentInputAudioBehavior:
          allOf:
          - $ref: '#/components/schemas/M2tsAbsentInputAudioBehavior'
          description: When set to drop, output audio streams will be removed from
            the program if the selected input audio stream is removed from the input.
            This allows the output audio configuration to dynamically change based
            on input configuration. If this is set to encodeSilence, all output audio
            streams will output encoded silence when not connected to an active input
            stream.
        Arib:
          allOf:
          - $ref: '#/components/schemas/M2tsArib'
          description: When set to enabled, uses ARIB-compliant field muxing and removes
            video descriptor.
        AudioBufferModel:
          allOf:
          - $ref: '#/components/schemas/M2tsAudioBufferModel'
          description: When set to dvb, uses DVB buffer model for Dolby Digital audio.
            When set to atsc, the ATSC model is used.
        AudioFramesPerPes:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: The number of audio frames to insert for each PES packet.
        AudioStreamType:
          allOf:
          - $ref: '#/components/schemas/M2tsAudioStreamType'
          description: When set to atsc, uses stream type = 0x81 for AC3 and stream
            type = 0x87 for EAC3. When set to dvb, uses stream type = 0x06.
        CcDescriptor:
          allOf:
          - $ref: '#/components/schemas/M2tsCcDescriptor'
          description: When set to enabled, generates captionServiceDescriptor in
            PMT.
        Ebif:
          allOf:
          - $ref: '#/components/schemas/M2tsEbifControl'
          description: If set to passthrough, passes any EBIF data from the input
            source to this output.
        EsRateInPes:
          allOf:
          - $ref: '#/components/schemas/M2tsEsRateInPes'
          description: Include or exclude the ES Rate field in the PES header.
        Klv:
          allOf:
          - $ref: '#/components/schemas/M2tsKlv'
          description: If set to passthrough, passes any KLV data from the input source
            to this output.
        NielsenId3Behavior:
          allOf:
          - $ref: '#/components/schemas/M2tsNielsenId3Behavior'
          description: If set to passthrough, Nielsen inaudible tones for media tracking
            will be detected in the input audio and an equivalent ID3 tag will be
            inserted in the output.
        PcrControl:
          allOf:
          - $ref: '#/components/schemas/M2tsPcrControl'
          description: When set to pcrEveryPesPacket, a Program Clock Reference value
            is inserted for every Packetized Elementary Stream (PES) header. This
            parameter is effective only when the PCR PID is the same as the video
            or audio elementary stream.
        PcrPeriod:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max500'
          description: Maximum time in milliseconds between Program Clock Reference
            (PCRs) inserted into the transport stream.
        Scte35Control:
          allOf:
          - $ref: '#/components/schemas/M2tsScte35Control'
          description: Optionally pass SCTE-35 signals from the input source to this
            output.
        Scte35PrerollPullupMilliseconds:
          allOf:
          - $ref: '#/components/schemas/__doubleMin0Max5000'
          description: Defines the amount SCTE-35 preroll will be increased (in milliseconds)
            on the output. Preroll is the amount of time between the presence of a
            SCTE-35 indication in a transport stream and the PTS of the video frame
            it references. Zero means don't add pullup (it doesn't mean set the preroll
            to zero). Negative pullup is not supported, which means that you can't
            make the preroll shorter. Be aware that latency in the output will increase
            by the pullup amount.
      description: Multiplex M2ts Settings
    MultiplexMediaConnectOutputDestinationSettings:
      type: object
      properties:
        EntitlementArn:
          allOf:
          - $ref: '#/components/schemas/__stringMin1'
          description: The MediaConnect entitlement ARN available as a Flow source.
      description: Multiplex MediaConnect output destination settings.
    MultiplexOutputDestination:
      type: object
      properties:
        MediaConnectSettings:
          allOf:
          - $ref: '#/components/schemas/MultiplexMediaConnectOutputDestinationSettings'
          description: Multiplex MediaConnect output destination settings.
      description: Multiplex output destination settings
    MultiplexOutputSettings:
      type: object
      properties:
        Destination:
          allOf:
          - $ref: '#/components/schemas/OutputLocationRef'
          description: Destination is a Multiplex.
        ContainerSettings:
          $ref: '#/components/schemas/MultiplexContainerSettings'
      required:
      - Destination
      description: Multiplex Output Settings
    MultiplexPacketIdentifiersMapping:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/MultiplexProgramPacketIdentifiersMap'
      description: Placeholder documentation for MultiplexPacketIdentifiersMapping
    MultiplexProgram:
      type: object
      properties:
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The MediaLive channel associated with the program.
        MultiplexProgramSettings:
          allOf:
          - $ref: '#/components/schemas/MultiplexProgramSettings'
          description: The settings for this multiplex program.
        PacketIdentifiersMap:
          allOf:
          - $ref: '#/components/schemas/MultiplexProgramPacketIdentifiersMap'
          description: The packet identifier map for this multiplex program.
        PipelineDetails:
          allOf:
          - $ref: '#/components/schemas/__listOfMultiplexProgramPipelineDetail'
          description: Contains information about the current sources for the specified
            program in the specified multiplex. Keep in mind that each multiplex pipeline
            connects to both pipelines in a given source channel (the channel identified
            by the program). But only one of those channel pipelines is ever active
            at one time.
        ProgramName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the multiplex program.
      description: The multiplex program object.
    MultiplexProgramChannelDestinationSettings:
      type: object
      properties:
        MultiplexId:
          allOf:
          - $ref: '#/components/schemas/__stringMin1'
          description: The ID of the Multiplex that the encoder is providing output
            to. You do not need to specify the individual inputs to the Multiplex;
            MediaLive will handle the connection of the two MediaLive pipelines to
            the two Multiplex instances. The Multiplex must be in the same region
            as the Channel.
        ProgramName:
          allOf:
          - $ref: '#/components/schemas/__stringMin1'
          description: The program name of the Multiplex program that the encoder
            is providing output to.
      description: Multiplex Program Input Destination Settings for outputting a Channel
        to a Multiplex
    MultiplexProgramPacketIdentifiersMap:
      type: object
      properties:
        AudioPids:
          $ref: '#/components/schemas/__listOf__integer'
        DvbSubPids:
          $ref: '#/components/schemas/__listOf__integer'
        DvbTeletextPid:
          $ref: '#/components/schemas/__integer'
        EtvPlatformPid:
          $ref: '#/components/schemas/__integer'
        EtvSignalPid:
          $ref: '#/components/schemas/__integer'
        KlvDataPids:
          $ref: '#/components/schemas/__listOf__integer'
        PcrPid:
          $ref: '#/components/schemas/__integer'
        PmtPid:
          $ref: '#/components/schemas/__integer'
        PrivateMetadataPid:
          $ref: '#/components/schemas/__integer'
        Scte27Pids:
          $ref: '#/components/schemas/__listOf__integer'
        Scte35Pid:
          $ref: '#/components/schemas/__integer'
        TimedMetadataPid:
          $ref: '#/components/schemas/__integer'
        VideoPid:
          $ref: '#/components/schemas/__integer'
        AribCaptionsPid:
          $ref: '#/components/schemas/__integer'
        DvbTeletextPids:
          $ref: '#/components/schemas/__listOf__integer'
        EcmPid:
          $ref: '#/components/schemas/__integer'
        Smpte2038Pid:
          $ref: '#/components/schemas/__integer'
      description: Packet identifiers map for a given Multiplex program.
    MultiplexProgramPipelineDetail:
      type: object
      properties:
        ActiveChannelPipeline:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Identifies the channel pipeline that is currently active for
            the pipeline (identified by PipelineId) in the multiplex.
        PipelineId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Identifies a specific pipeline in the multiplex.
      description: The current source for one of the pipelines in the multiplex.
    MultiplexProgramServiceDescriptor:
      type: object
      properties:
        ProviderName:
          allOf:
          - $ref: '#/components/schemas/__stringMax256'
          description: Name of the provider.
        ServiceName:
          allOf:
          - $ref: '#/components/schemas/__stringMax256'
          description: Name of the service.
      required:
      - ProviderName
      - ServiceName
      description: Transport stream service descriptor configuration for the Multiplex
        program.
    MultiplexProgramSettings:
      type: object
      properties:
        PreferredChannelPipeline:
          allOf:
          - $ref: '#/components/schemas/PreferredChannelPipeline'
          description: Indicates which pipeline is preferred by the multiplex for
            program ingest.
        ProgramNumber:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max65535'
          description: Unique program number.
        ServiceDescriptor:
          allOf:
          - $ref: '#/components/schemas/MultiplexProgramServiceDescriptor'
          description: Transport stream service descriptor configuration for the Multiplex
            program.
        VideoSettings:
          allOf:
          - $ref: '#/components/schemas/MultiplexVideoSettings'
          description: Program video settings configuration.
      required:
      - ProgramNumber
      description: Multiplex Program settings configuration.
    MultiplexProgramSummary:
      type: object
      properties:
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The MediaLive Channel associated with the program.
        ProgramName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the multiplex program.
      description: Placeholder documentation for MultiplexProgramSummary
    MultiplexSettings:
      type: object
      properties:
        MaximumVideoBufferDelayMilliseconds:
          allOf:
          - $ref: '#/components/schemas/__integerMin800Max3000'
          description: Maximum video buffer delay in milliseconds.
        TransportStreamBitrate:
          allOf:
          - $ref: '#/components/schemas/__integerMin1000000Max100000000'
          description: Transport stream bit rate.
        TransportStreamId:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max65535'
          description: Transport stream ID.
        TransportStreamReservedBitrate:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max100000000'
          description: Transport stream reserved bit rate.
      required:
      - TransportStreamBitrate
      - TransportStreamId
      description: Contains configuration for a Multiplex event
    MultiplexSettingsSummary:
      type: object
      properties:
        TransportStreamBitrate:
          allOf:
          - $ref: '#/components/schemas/__integerMin1000000Max100000000'
          description: Transport stream bit rate.
      description: Contains summary configuration for a Multiplex event.
    MultiplexState:
      type: string
      enum:
      - CREATING
      - CREATE_FAILED
      - IDLE
      - STARTING
      - RUNNING
      - RECOVERING
      - STOPPING
      - DELETING
      - DELETED
      description: The current state of the multiplex.
    MultiplexStatmuxVideoSettings:
      type: object
      properties:
        MaximumBitrate:
          allOf:
          - $ref: '#/components/schemas/__integerMin100000Max100000000'
          description: Maximum statmux bitrate.
        MinimumBitrate:
          allOf:
          - $ref: '#/components/schemas/__integerMin100000Max100000000'
          description: Minimum statmux bitrate.
        Priority:
          allOf:
          - $ref: '#/components/schemas/__integerMinNegative5Max5'
          description: The purpose of the priority is to use a combination of the\nmultiplex
            rate control algorithm and the QVBR capability of the\nencoder to prioritize
            the video quality of some channels in a\nmultiplex over others. Channels
            that have a higher priority will\nget higher video quality at the expense
            of the video quality of\nother channels in the multiplex with lower priority.
      description: Statmux rate control settings
    MultiplexSummary:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique arn of the multiplex.
        AvailabilityZones:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: A list of availability zones for the multiplex.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique id of the multiplex.
        MultiplexSettings:
          allOf:
          - $ref: '#/components/schemas/MultiplexSettingsSummary'
          description: Configuration for a multiplex event.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the multiplex.
        PipelinesRunningCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The number of currently healthy pipelines.
        ProgramCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The number of programs in the multiplex.
        State:
          allOf:
          - $ref: '#/components/schemas/MultiplexState'
          description: The current state of the multiplex.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A collection of key-value pairs.
      description: Placeholder documentation for MultiplexSummary
    MultiplexVideoSettings:
      type: object
      properties:
        ConstantBitrate:
          allOf:
          - $ref: '#/components/schemas/__integerMin100000Max100000000'
          description: The constant bitrate configuration for the video encode. When
            this field is defined, StatmuxSettings must be undefined.
        StatmuxSettings:
          allOf:
          - $ref: '#/components/schemas/MultiplexStatmuxVideoSettings'
          description: Statmux rate control settings. When this field is defined,
            ConstantBitrate must be undefined.
      description: The video configuration for each program in a multiplex.
    NetworkInputServerValidation:
      type: string
      enum:
      - CHECK_CRYPTOGRAPHY_AND_VALIDATE_NAME
      - CHECK_CRYPTOGRAPHY_ONLY
      description: Network Input Server Validation
    NetworkInputSettings:
      type: object
      properties:
        HlsInputSettings:
          allOf:
          - $ref: '#/components/schemas/HlsInputSettings'
          description: Specifies HLS input settings when the uri is for a HLS manifest.
        ServerValidation:
          allOf:
          - $ref: '#/components/schemas/NetworkInputServerValidation'
          description: Check HTTPS server certificates. When set to checkCryptographyOnly,
            cryptography in the certificate will be checked, but not the server's
            name. Certain subdomains (notably S3 buckets that use dots in the bucket
            name) do not strictly match the corresponding certificate's wildcard pattern
            and would otherwise cause the event to error. This setting is ignored
            for protocols that do not use https.
        MulticastInputSettings:
          allOf:
          - $ref: '#/components/schemas/MulticastInputSettings'
          description: Specifies multicast input settings when the uri is for a multicast
            event.
      description: Network source to transcode. Must be accessible to the Elemental
        Live node that is running the live event through a network connection.
    NetworkInterfaceMode:
      type: string
      enum:
      - NAT
      - BRIDGE
      description: Used in NodeInterfaceMapping and NodeInterfaceMappingCreateRequest
    NetworkState:
      type: string
      enum:
      - CREATING
      - CREATE_FAILED
      - ACTIVE
      - DELETING
      - IDLE
      - IN_USE
      - UPDATING
      - DELETE_FAILED
      - DELETED
      description: Used in DescribeNetworkResult, DescribeNetworkSummary, UpdateNetworkResult.
    NielsenCBET:
      type: object
      properties:
        CbetCheckDigitString:
          allOf:
          - $ref: '#/components/schemas/__stringMin2Max2'
          description: Enter the CBET check digits to use in the watermark.
        CbetStepaside:
          allOf:
          - $ref: '#/components/schemas/NielsenWatermarksCbetStepaside'
          description: Determines the method of CBET insertion mode when prior encoding
            is detected on the same layer.
        Csid:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max7'
          description: Enter the CBET Source ID (CSID) to use in the watermark
      required:
      - CbetCheckDigitString
      - CbetStepaside
      - Csid
      description: Nielsen CBET
    NielsenConfiguration:
      type: object
      properties:
        DistributorId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Enter the Distributor ID assigned to your organization by Nielsen.
        NielsenPcmToId3Tagging:
          allOf:
          - $ref: '#/components/schemas/NielsenPcmToId3TaggingState'
          description: Enables Nielsen PCM to ID3 tagging
      description: Nielsen Configuration
    NielsenNaesIiNw:
      type: object
      properties:
        CheckDigitString:
          allOf:
          - $ref: '#/components/schemas/__stringMin2Max2'
          description: Enter the check digit string for the watermark
        Sid:
          allOf:
          - $ref: '#/components/schemas/__doubleMin1Max65535'
          description: Enter the Nielsen Source ID (SID) to include in the watermark
        Timezone:
          allOf:
          - $ref: '#/components/schemas/NielsenWatermarkTimezones'
          description: Choose the timezone for the time stamps in the watermark. If
            not provided, the timestamps will be in Coordinated Universal Time (UTC)
      required:
      - CheckDigitString
      - Sid
      description: Nielsen Naes Ii Nw
    NielsenPcmToId3TaggingState:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: State of Nielsen PCM to ID3 tagging
    NielsenWatermarkTimezones:
      type: string
      enum:
      - AMERICA_PUERTO_RICO
      - US_ALASKA
      - US_ARIZONA
      - US_CENTRAL
      - US_EASTERN
      - US_HAWAII
      - US_MOUNTAIN
      - US_PACIFIC
      - US_SAMOA
      - UTC
      description: Nielsen Watermark Timezones
    NielsenWatermarksCbetStepaside:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: Nielsen Watermarks Cbet Stepaside
    NielsenWatermarksDistributionTypes:
      type: string
      enum:
      - FINAL_DISTRIBUTOR
      - PROGRAM_CONTENT
      description: Nielsen Watermarks Distribution Types
    NielsenWatermarksSettings:
      type: object
      properties:
        NielsenCbetSettings:
          allOf:
          - $ref: '#/components/schemas/NielsenCBET'
          description: Complete these fields only if you want to insert watermarks
            of type Nielsen CBET
        NielsenDistributionType:
          allOf:
          - $ref: '#/components/schemas/NielsenWatermarksDistributionTypes'
          description: 'Choose the distribution types that you want to assign to the
            watermarks: \- PROGRAM_CONTENT \- FINAL_DISTRIBUTOR'
        NielsenNaesIiNwSettings:
          allOf:
          - $ref: '#/components/schemas/NielsenNaesIiNw'
          description: Complete these fields only if you want to insert watermarks
            of type Nielsen NAES II (N2) and Nielsen NAES VI (NW).
      description: Nielsen Watermarks Settings
    NodeConnectionState:
      type: string
      enum:
      - CONNECTED
      - DISCONNECTED
      description: Used in DescribeNodeSummary.
    NodeInterfaceMapping:
      type: object
      properties:
        LogicalInterfaceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A uniform logical interface name to address in a MediaLive
            channel configuration.
        NetworkInterfaceMode:
          $ref: '#/components/schemas/NetworkInterfaceMode'
        PhysicalInterfaceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the physical interface on the hardware that will
            be running Elemental anywhere.
      description: A mapping that's used to pair a logical network interface name
        on a Node with the physical interface name exposed in the operating system.
    NodeInterfaceMappingCreateRequest:
      type: object
      properties:
        LogicalInterfaceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Specify one of the logicalInterfaceNames that you created in
            the Cluster that this node belongs to. For example, my-Inputs-Interface.
        NetworkInterfaceMode:
          allOf:
          - $ref: '#/components/schemas/NetworkInterfaceMode'
          description: The style of the network -- NAT or BRIDGE.
        PhysicalInterfaceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Specify the physical name that corresponds to the logicalInterfaceName
            that you specified in this interface mapping. For example, Eth1 or ENO1234EXAMPLE.
      description: Used in CreateNodeRequest.
    NodeRole:
      type: string
      enum:
      - BACKUP
      - ACTIVE
      description: Used in CreateNodeRequest, CreateNodeRegistrationScriptRequest,
        DescribeNodeResult, DescribeNodeSummary, UpdateNodeRequest.
    NodeState:
      type: string
      enum:
      - CREATED
      - REGISTERING
      - READY_TO_ACTIVATE
      - REGISTRATION_FAILED
      - ACTIVATION_FAILED
      - ACTIVE
      - READY
      - IN_USE
      - DEREGISTERING
      - DRAINING
      - DEREGISTRATION_FAILED
      - DEREGISTERED
      description: Used in DescribeNodeSummary.
    NotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/__string'
      description: Placeholder documentation for NotFoundException
    Offering:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Unique offering ARN, e.g. 'arn:aws:medialive:us-west-2:123456789012:offering:87654321'
        CurrencyCode:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Currency code for usagePrice and fixedPrice in ISO-4217 format,
            e.g. 'USD'
        Duration:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Lease duration, e.g. '12'
        DurationUnits:
          allOf:
          - $ref: '#/components/schemas/OfferingDurationUnits'
          description: Units for duration, e.g. 'MONTHS'
        FixedPrice:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: One-time charge for each reserved resource, e.g. '0.0' for
            a NO_UPFRONT offering
        OfferingDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Offering description, e.g. 'HD AVC output at 10-20 Mbps, 30
            fps, and standard VQ in US West (Oregon)'
        OfferingId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Unique offering ID, e.g. '87654321'
        OfferingType:
          allOf:
          - $ref: '#/components/schemas/OfferingType'
          description: Offering type, e.g. 'NO_UPFRONT'
        Region:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: AWS region, e.g. 'us-west-2'
        ResourceSpecification:
          allOf:
          - $ref: '#/components/schemas/ReservationResourceSpecification'
          description: Resource configuration details
        UsagePrice:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: Recurring usage charge for each reserved resource, e.g. '157.0'
      description: Reserved resources available for purchase
    OfferingDurationUnits:
      type: string
      enum:
      - MONTHS
      description: Units for duration, e.g. 'MONTHS'
    OfferingType:
      type: string
      enum:
      - NO_UPFRONT
      description: Offering type, e.g. 'NO_UPFRONT'
    Output:
      type: object
      properties:
        AudioDescriptionNames:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: The names of the AudioDescriptions used as audio sources for
            this output.
        CaptionDescriptionNames:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: The names of the CaptionDescriptions used as caption sources
            for this output.
        OutputName:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max255'
          description: The name used to identify an output.
        OutputSettings:
          allOf:
          - $ref: '#/components/schemas/OutputSettings'
          description: Output type-specific settings.
        VideoDescriptionName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the VideoDescription used as the source for this
            output.
      required:
      - OutputSettings
      description: Output settings. There can be multiple outputs within a group.
    OutputDestination:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: User-specified id. This is used in an output group or an output.
        MediaPackageSettings:
          allOf:
          - $ref: '#/components/schemas/__listOfMediaPackageOutputDestinationSettings'
          description: Destination settings for a MediaPackage output; one destination
            for both encoders.
        MultiplexSettings:
          allOf:
          - $ref: '#/components/schemas/MultiplexProgramChannelDestinationSettings'
          description: Destination settings for a Multiplex output; one destination
            for both encoders.
        Settings:
          allOf:
          - $ref: '#/components/schemas/__listOfOutputDestinationSettings'
          description: Destination settings for a standard output; one destination
            for each redundant encoder.
        SrtSettings:
          allOf:
          - $ref: '#/components/schemas/__listOfSrtOutputDestinationSettings'
          description: SRT settings for an SRT output; one destination for each redundant
            encoder.
      description: Placeholder documentation for OutputDestination
    OutputDestinationSettings:
      type: object
      properties:
        PasswordParam:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: key used to extract the password from EC2 Parameter store
        StreamName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Stream name for RTMP destinations (URLs of type rtmp://)
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A URL specifying a destination
        Username:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: username for destination
      description: Placeholder documentation for OutputDestinationSettings
    OutputGroup:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMax32'
          description: Custom output group name optionally defined by the user.
        OutputGroupSettings:
          allOf:
          - $ref: '#/components/schemas/OutputGroupSettings'
          description: Settings associated with the output group.
        Outputs:
          $ref: '#/components/schemas/__listOfOutput'
      required:
      - OutputGroupSettings
      - Outputs
      description: Output groups for this Live Event. Output groups contain information
        about where streams should be distributed.
    OutputGroupSettings:
      type: object
      properties:
        ArchiveGroupSettings:
          $ref: '#/components/schemas/ArchiveGroupSettings'
        FrameCaptureGroupSettings:
          $ref: '#/components/schemas/FrameCaptureGroupSettings'
        HlsGroupSettings:
          $ref: '#/components/schemas/HlsGroupSettings'
        MediaPackageGroupSettings:
          $ref: '#/components/schemas/MediaPackageGroupSettings'
        MsSmoothGroupSettings:
          $ref: '#/components/schemas/MsSmoothGroupSettings'
        MultiplexGroupSettings:
          $ref: '#/components/schemas/MultiplexGroupSettings'
        RtmpGroupSettings:
          $ref: '#/components/schemas/RtmpGroupSettings'
        UdpGroupSettings:
          $ref: '#/components/schemas/UdpGroupSettings'
        CmafIngestGroupSettings:
          $ref: '#/components/schemas/CmafIngestGroupSettings'
        SrtGroupSettings:
          $ref: '#/components/schemas/SrtGroupSettings'
      description: Output Group Settings
    OutputLocationRef:
      type: object
      properties:
        DestinationRefId:
          $ref: '#/components/schemas/__string'
      description: Reference to an OutputDestination ID defined in the channel
    OutputLockingSettings:
      type: object
      properties:
        EpochLockingSettings:
          $ref: '#/components/schemas/EpochLockingSettings'
        PipelineLockingSettings:
          $ref: '#/components/schemas/PipelineLockingSettings'
      description: Output Locking Settings
    OutputSettings:
      type: object
      properties:
        ArchiveOutputSettings:
          $ref: '#/components/schemas/ArchiveOutputSettings'
        FrameCaptureOutputSettings:
          $ref: '#/components/schemas/FrameCaptureOutputSettings'
        HlsOutputSettings:
          $ref: '#/components/schemas/HlsOutputSettings'
        MediaPackageOutputSettings:
          $ref: '#/components/schemas/MediaPackageOutputSettings'
        MsSmoothOutputSettings:
          $ref: '#/components/schemas/MsSmoothOutputSettings'
        MultiplexOutputSettings:
          $ref: '#/components/schemas/MultiplexOutputSettings'
        RtmpOutputSettings:
          $ref: '#/components/schemas/RtmpOutputSettings'
        UdpOutputSettings:
          $ref: '#/components/schemas/UdpOutputSettings'
        CmafIngestOutputSettings:
          $ref: '#/components/schemas/CmafIngestOutputSettings'
        SrtOutputSettings:
          $ref: '#/components/schemas/SrtOutputSettings'
      description: Output Settings
    PassThroughSettings:
      type: object
      properties: {}
      description: Pass Through Settings
    PauseStateScheduleActionSettings:
      type: object
      properties:
        Pipelines:
          $ref: '#/components/schemas/__listOfPipelinePauseStateSettings'
      description: Settings for the action to set pause state of a channel.
    PipelineDetail:
      type: object
      properties:
        ActiveInputAttachmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the active input attachment currently being ingested
            by this pipeline.
        ActiveInputSwitchActionName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the input switch schedule action that occurred
            most recently and that resulted in the switch to the current input attachment
            for this pipeline.
        ActiveMotionGraphicsActionName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the motion graphics activate action that occurred
            most recently and that resulted in the current graphics URI for this pipeline.
        ActiveMotionGraphicsUri:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The current URI being used for HTML5 motion graphics for this
            pipeline.
        PipelineId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Pipeline ID
        ChannelEngineVersion:
          allOf:
          - $ref: '#/components/schemas/ChannelEngineVersionResponse'
          description: Current engine version of the encoder for this pipeline.
      description: Runtime details of a pipeline when a channel is running.
    PipelineId:
      type: string
      enum:
      - PIPELINE_0
      - PIPELINE_1
      description: Pipeline ID
    PipelineLockingSettings:
      type: object
      properties: {}
      description: Pipeline Locking Settings
    PipelinePauseStateSettings:
      type: object
      properties:
        PipelineId:
          allOf:
          - $ref: '#/components/schemas/PipelineId'
          description: Pipeline ID to pause ("PIPELINE_0" or "PIPELINE_1").
      required:
      - PipelineId
      description: Settings for pausing a pipeline.
    PreferredChannelPipeline:
      type: string
      enum:
      - CURRENTLY_ACTIVE
      - PIPELINE_0
      - PIPELINE_1
      description: 'Indicates which pipeline is preferred by the multiplex for program
        ingest.

        If set to \"PIPELINE_0\" or \"PIPELINE_1\" and an unhealthy ingest causes
        the multiplex to switch to the non-preferred pipeline,

        it will switch back once that ingest is healthy again. If set to \"CURRENTLY_ACTIVE\",

        it will not switch back to the other pipeline based on it recovering to a
        healthy state,

        it will only switch if the active pipeline becomes unhealthy.'
    PurchaseOfferingRequest:
      type: object
      properties:
        Count:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: Number of resources
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Name for the new reservation
        OfferingId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Offering to purchase, e.g. '87654321'
        RenewalSettings:
          allOf:
          - $ref: '#/components/schemas/RenewalSettings'
          description: Renewal settings for the reservation
        RequestId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Unique request ID to be specified. This is needed to prevent
            retries from creating multiple resources.
        Start:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Requested reservation start time (UTC) in ISO-8601 format.
            The specified time must be between the first day of the current month
            and one year from now. If no value is given, the default is now.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A collection of key-value pairs
      required:
      - Count
      - OfferingId
      description: Placeholder documentation for PurchaseOfferingRequest
    PurchaseOfferingResponse:
      type: object
      properties:
        Reservation:
          $ref: '#/components/schemas/Reservation'
      description: Placeholder documentation for PurchaseOfferingResponse
    RawSettings:
      type: object
      properties: {}
      description: Raw Settings
    RebootInputDeviceForce:
      type: string
      enum:
      - 'NO'
      - 'YES'
      description: Whether or not to force reboot the input device.
    RebootInputDeviceRequest:
      type: object
      properties:
        Force:
          allOf:
          - $ref: '#/components/schemas/RebootInputDeviceForce'
          description: Force a reboot of an input device. If the device is streaming,
            it will stop streaming and begin rebooting within a few seconds of sending
            the command. If the device was streaming prior to the reboot, the device
            will resume streaming when the reboot completes.
        InputDeviceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique ID of the input device to reboot. For example, hd-123456789abcdef.
      required:
      - InputDeviceId
      description: A request to reboot an AWS Elemental device.
    RebootInputDeviceResponse:
      type: object
      properties: {}
      description: Placeholder documentation for RebootInputDeviceResponse
    Rec601Settings:
      type: object
      properties: {}
      description: Rec601 Settings
    Rec709Settings:
      type: object
      properties: {}
      description: Rec709 Settings
    RejectInputDeviceTransferRequest:
      type: object
      properties:
        InputDeviceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique ID of the input device to reject. For example, hd-123456789abcdef.
      required:
      - InputDeviceId
      description: Placeholder documentation for RejectInputDeviceTransferRequest
    RejectInputDeviceTransferResponse:
      type: object
      properties: {}
      description: Placeholder documentation for RejectInputDeviceTransferResponse
    RemixSettings:
      type: object
      properties:
        ChannelMappings:
          allOf:
          - $ref: '#/components/schemas/__listOfAudioChannelMapping'
          description: Mapping of input channels to output channels, with appropriate
            gain adjustments.
        ChannelsIn:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max16'
          description: Number of input channels to be used.
        ChannelsOut:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max8'
          description: 'Number of output channels to be produced. Valid values: 1,
            2, 4, 6, 8'
      required:
      - ChannelMappings
      description: Remix Settings
    RenewalSettings:
      type: object
      properties:
        AutomaticRenewal:
          allOf:
          - $ref: '#/components/schemas/ReservationAutomaticRenewal'
          description: Automatic renewal status for the reservation
        RenewalCount:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: Count for the reservation renewal
      description: The Renewal settings for Reservations
    Reservation:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Unique reservation ARN, e.g. 'arn:aws:medialive:us-west-2:123456789012:reservation:1234567'
        Count:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Number of reserved resources
        CurrencyCode:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Currency code for usagePrice and fixedPrice in ISO-4217 format,
            e.g. 'USD'
        Duration:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Lease duration, e.g. '12'
        DurationUnits:
          allOf:
          - $ref: '#/components/schemas/OfferingDurationUnits'
          description: Units for duration, e.g. 'MONTHS'
        End:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Reservation UTC end date and time in ISO-8601 format, e.g.
            '2019-03-01T00:00:00'
        FixedPrice:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: One-time charge for each reserved resource, e.g. '0.0' for
            a NO_UPFRONT offering
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: User specified reservation name
        OfferingDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Offering description, e.g. 'HD AVC output at 10-20 Mbps, 30
            fps, and standard VQ in US West (Oregon)'
        OfferingId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Unique offering ID, e.g. '87654321'
        OfferingType:
          allOf:
          - $ref: '#/components/schemas/OfferingType'
          description: Offering type, e.g. 'NO_UPFRONT'
        Region:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: AWS region, e.g. 'us-west-2'
        RenewalSettings:
          allOf:
          - $ref: '#/components/schemas/RenewalSettings'
          description: Renewal settings for the reservation
        ReservationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Unique reservation ID, e.g. '1234567'
        ResourceSpecification:
          allOf:
          - $ref: '#/components/schemas/ReservationResourceSpecification'
          description: Resource configuration details
        Start:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Reservation UTC start date and time in ISO-8601 format, e.g.
            '2018-03-01T00:00:00'
        State:
          allOf:
          - $ref: '#/components/schemas/ReservationState'
          description: Current state of reservation, e.g. 'ACTIVE'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A collection of key-value pairs
        UsagePrice:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: Recurring usage charge for each reserved resource, e.g. '157.0'
      description: Reserved resources available to use
    ReservationAutomaticRenewal:
      type: string
      enum:
      - DISABLED
      - ENABLED
      - UNAVAILABLE
      description: Automatic Renewal Status for Reservation
    ReservationCodec:
      type: string
      enum:
      - MPEG2
      - AVC
      - HEVC
      - AUDIO
      - LINK
      - AV1
      description: Codec, 'MPEG2', 'AVC', 'HEVC', 'AUDIO', 'LINK', or 'AV1'
    ReservationMaximumBitrate:
      type: string
      enum:
      - MAX_10_MBPS
      - MAX_20_MBPS
      - MAX_50_MBPS
      description: Maximum bitrate in megabits per second
    ReservationMaximumFramerate:
      type: string
      enum:
      - MAX_30_FPS
      - MAX_60_FPS
      description: Maximum framerate in frames per second (Outputs only)
    ReservationResolution:
      type: string
      enum:
      - SD
      - HD
      - FHD
      - UHD
      description: Resolution based on lines of vertical resolution; SD is less than
        720 lines, HD is 720 to 1080 lines, FHD is 1080 lines, UHD is greater than
        1080 lines
    ReservationResourceSpecification:
      type: object
      properties:
        ChannelClass:
          allOf:
          - $ref: '#/components/schemas/ChannelClass'
          description: Channel class, e.g. 'STANDARD'
        Codec:
          allOf:
          - $ref: '#/components/schemas/ReservationCodec'
          description: Codec, e.g. 'AVC'
        MaximumBitrate:
          allOf:
          - $ref: '#/components/schemas/ReservationMaximumBitrate'
          description: Maximum bitrate, e.g. 'MAX_20_MBPS'
        MaximumFramerate:
          allOf:
          - $ref: '#/components/schemas/ReservationMaximumFramerate'
          description: Maximum framerate, e.g. 'MAX_30_FPS' (Outputs only)
        Resolution:
          allOf:
          - $ref: '#/components/schemas/ReservationResolution'
          description: Resolution, e.g. 'HD'
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ReservationResourceType'
          description: Resource type, 'INPUT', 'OUTPUT', 'MULTIPLEX', or 'CHANNEL'
        SpecialFeature:
          allOf:
          - $ref: '#/components/schemas/ReservationSpecialFeature'
          description: Special feature, e.g. 'AUDIO_NORMALIZATION' (Channels only)
        VideoQuality:
          allOf:
          - $ref: '#/components/schemas/ReservationVideoQuality'
          description: Video quality, e.g. 'STANDARD' (Outputs only)
      description: Resource configuration (codec, resolution, bitrate, ...)
    ReservationResourceType:
      type: string
      enum:
      - INPUT
      - OUTPUT
      - MULTIPLEX
      - CHANNEL
      description: Resource type, 'INPUT', 'OUTPUT', 'MULTIPLEX', or 'CHANNEL'
    ReservationSpecialFeature:
      type: string
      enum:
      - ADVANCED_AUDIO
      - AUDIO_NORMALIZATION
      - MGHD
      - MGUHD
      description: Special features, 'ADVANCED_AUDIO' 'AUDIO_NORMALIZATION' 'MGHD'
        or 'MGUHD'
    ReservationState:
      type: string
      enum:
      - ACTIVE
      - EXPIRED
      - CANCELED
      - DELETED
      description: Current reservation state
    ReservationVideoQuality:
      type: string
      enum:
      - STANDARD
      - ENHANCED
      - PREMIUM
      description: Video quality, e.g. 'STANDARD' (Outputs only)
    RestartChannelPipelinesRequest:
      type: object
      properties:
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: ID of channel
        PipelineIds:
          allOf:
          - $ref: '#/components/schemas/__listOfChannelPipelineIdToRestart'
          description: An array of pipelines to restart in this channel. Format PIPELINE_0
            or PIPELINE_1.
      required:
      - ChannelId
      description: Pipelines to restart.
    RestartChannelPipelinesResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique arn of the channel.
        CdiInputSpecification:
          allOf:
          - $ref: '#/components/schemas/CdiInputSpecification'
          description: Specification of CDI inputs for this channel
        ChannelClass:
          allOf:
          - $ref: '#/components/schemas/ChannelClass'
          description: The class for this channel. STANDARD for a channel with two
            pipelines or SINGLE_PIPELINE for a channel with one pipeline.
        Destinations:
          allOf:
          - $ref: '#/components/schemas/__listOfOutputDestination'
          description: A list of destinations of the channel. For UDP outputs, there
            is one destination per output. For other types (HLS, for example), there
            is one destination per packager.
        EgressEndpoints:
          allOf:
          - $ref: '#/components/schemas/__listOfChannelEgressEndpoint'
          description: The endpoints where outgoing connections initiate from
        EncoderSettings:
          $ref: '#/components/schemas/EncoderSettings'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique id of the channel.
        InputAttachments:
          allOf:
          - $ref: '#/components/schemas/__listOfInputAttachment'
          description: List of input attachments for channel.
        InputSpecification:
          allOf:
          - $ref: '#/components/schemas/InputSpecification'
          description: Specification of network and file inputs for this channel
        LogLevel:
          allOf:
          - $ref: '#/components/schemas/LogLevel'
          description: The log level being written to CloudWatch Logs.
        Maintenance:
          allOf:
          - $ref: '#/components/schemas/MaintenanceStatus'
          description: Maintenance settings for this channel.
        MaintenanceStatus:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The time in milliseconds by when the PVRE restart must occur.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the channel. (user-mutable)
        PipelineDetails:
          allOf:
          - $ref: '#/components/schemas/__listOfPipelineDetail'
          description: Runtime details for the pipelines of a running channel.
        PipelinesRunningCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The number of currently healthy pipelines.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the role assumed when running
            the Channel.
        State:
          $ref: '#/components/schemas/ChannelState'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A collection of key-value pairs.
        Vpc:
          allOf:
          - $ref: '#/components/schemas/VpcOutputSettingsDescription'
          description: Settings for VPC output
        AnywhereSettings:
          allOf:
          - $ref: '#/components/schemas/DescribeAnywhereSettings'
          description: Anywhere settings for this channel.
        ChannelEngineVersion:
          allOf:
          - $ref: '#/components/schemas/ChannelEngineVersionResponse'
          description: Requested engine version for this channel.
      description: Placeholder documentation for RestartChannelPipelinesResponse
    Route:
      type: object
      properties:
        Cidr:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A CIDR block for one Route.
        Gateway:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The IP address of the Gateway for this route, if applicable.
      description: Used in DescribeNetworkResult, DescribeNetworkSummary, UpdateNetworkResult.
    RouteCreateRequest:
      type: object
      properties:
        Cidr:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A CIDR block for one Route.
        Gateway:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The IP address of the Gateway for this route, if applicable.
      description: Used in CreateNetworkRequest.
    RouteUpdateRequest:
      type: object
      properties:
        Cidr:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A CIDR block for one Route.
        Gateway:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The IP address of the Gateway for this route, if applicable.
      description: Used in UpdateNetworkRequest.
    RtmpAdMarkers:
      type: string
      enum:
      - ON_CUE_POINT_SCTE35
      description: Rtmp Ad Markers
    RtmpCacheFullBehavior:
      type: string
      enum:
      - DISCONNECT_IMMEDIATELY
      - WAIT_FOR_SERVER
      description: Rtmp Cache Full Behavior
    RtmpCaptionData:
      type: string
      enum:
      - ALL
      - FIELD1_608
      - FIELD1_AND_FIELD2_608
      description: Rtmp Caption Data
    RtmpCaptionInfoDestinationSettings:
      type: object
      properties: {}
      description: Rtmp Caption Info Destination Settings
    RtmpGroupSettings:
      type: object
      properties:
        AdMarkers:
          allOf:
          - $ref: '#/components/schemas/__listOfRtmpAdMarkers'
          description: Choose the ad marker type for this output group. MediaLive
            will create a message based on the content of each SCTE-35 message, format
            it for that marker type, and insert it in the datastream.
        AuthenticationScheme:
          allOf:
          - $ref: '#/components/schemas/AuthenticationScheme'
          description: Authentication scheme to use when connecting with CDN
        CacheFullBehavior:
          allOf:
          - $ref: '#/components/schemas/RtmpCacheFullBehavior'
          description: Controls behavior when content cache fills up. If remote origin
            server stalls the RTMP connection and does not accept content fast enough
            the 'Media Cache' will fill up. When the cache reaches the duration specified
            by cacheLength the cache will stop accepting new content. If set to disconnectImmediately,
            the RTMP output will force a disconnect. Clear the media cache, and reconnect
            after restartDelay seconds. If set to waitForServer, the RTMP output will
            wait up to 5 minutes to allow the origin server to begin accepting data
            again.
        CacheLength:
          allOf:
          - $ref: '#/components/schemas/__integerMin30'
          description: Cache length, in seconds, is used to calculate buffer size.
        CaptionData:
          allOf:
          - $ref: '#/components/schemas/RtmpCaptionData'
          description: Controls the types of data that passes to onCaptionInfo outputs.
            If set to 'all' then 608 and 708 carried DTVCC data will be passed. If
            set to 'field1AndField2608' then DTVCC data will be stripped out, but
            608 data from both fields will be passed. If set to 'field1608' then only
            the data carried in 608 from field 1 video will be passed.
        InputLossAction:
          allOf:
          - $ref: '#/components/schemas/InputLossActionForRtmpOut'
          description: 'Controls the behavior of this RTMP group if input becomes
            unavailable. \- emitOutput: Emit a slate until input returns. \- pauseOutput:
            Stop transmitting data until input returns. This does not close the underlying
            RTMP connection.'
        RestartDelay:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: If a streaming output fails, number of seconds to wait until
            a restart is initiated. A value of 0 means never restart.
        IncludeFillerNalUnits:
          allOf:
          - $ref: '#/components/schemas/IncludeFillerNalUnits'
          description: Applies only when the rate control mode (in the codec settings)
            is CBR (constant bit rate). Controls whether the RTMP output stream is
            padded (with FILL NAL units) in order to achieve a constant bit rate that
            is truly constant. When there is no padding, the bandwidth varies (up
            to the bitrate value in the codec settings). We recommend that you choose
            Auto.
      description: Rtmp Group Settings
    RtmpOutputCertificateMode:
      type: string
      enum:
      - SELF_SIGNED
      - VERIFY_AUTHENTICITY
      description: Rtmp Output Certificate Mode
    RtmpOutputSettings:
      type: object
      properties:
        CertificateMode:
          allOf:
          - $ref: '#/components/schemas/RtmpOutputCertificateMode'
          description: If set to verifyAuthenticity, verify the tls certificate chain
            to a trusted Certificate Authority (CA). This will cause rtmps outputs
            with self-signed certificates to fail.
        ConnectionRetryInterval:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: Number of seconds to wait before retrying a connection to the
            Flash Media server if the connection is lost.
        Destination:
          allOf:
          - $ref: '#/components/schemas/OutputLocationRef'
          description: The RTMP endpoint excluding the stream name (eg. rtmp://host/appname).
            For connection to Akamai, a username and password must be supplied. URI
            fields accept format identifiers.
        NumRetries:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: Number of retry attempts.
      required:
      - Destination
      description: Rtmp Output Settings
    S3CannedAcl:
      type: string
      enum:
      - AUTHENTICATED_READ
      - BUCKET_OWNER_FULL_CONTROL
      - BUCKET_OWNER_READ
      - PUBLIC_READ
      description: S3 Canned Acl
    ScheduleAction:
      type: object
      properties:
        ActionName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the action, must be unique within the schedule.
            This name provides the main reference to an action once it is added to
            the schedule. A name is unique if it is no longer in the schedule. The
            schedule is automatically cleaned up to remove actions with a start time
            of more than 1 hour ago (approximately) so at that point a name can be
            reused.
        ScheduleActionSettings:
          allOf:
          - $ref: '#/components/schemas/ScheduleActionSettings'
          description: Settings for this schedule action.
        ScheduleActionStartSettings:
          allOf:
          - $ref: '#/components/schemas/ScheduleActionStartSettings'
          description: The time for the action to start in the channel.
      required:
      - ActionName
      - ScheduleActionSettings
      - ScheduleActionStartSettings
      description: Contains information on a single schedule action.
    ScheduleActionSettings:
      type: object
      properties:
        HlsId3SegmentTaggingSettings:
          allOf:
          - $ref: '#/components/schemas/HlsId3SegmentTaggingScheduleActionSettings'
          description: Action to insert ID3 metadata in every segment, in HLS output
            groups
        HlsTimedMetadataSettings:
          allOf:
          - $ref: '#/components/schemas/HlsTimedMetadataScheduleActionSettings'
          description: Action to insert ID3 metadata once, in HLS output groups
        InputPrepareSettings:
          allOf:
          - $ref: '#/components/schemas/InputPrepareScheduleActionSettings'
          description: Action to prepare an input for a future immediate input switch
        InputSwitchSettings:
          allOf:
          - $ref: '#/components/schemas/InputSwitchScheduleActionSettings'
          description: Action to switch the input
        MotionGraphicsImageActivateSettings:
          allOf:
          - $ref: '#/components/schemas/MotionGraphicsActivateScheduleActionSettings'
          description: Action to activate a motion graphics image overlay
        MotionGraphicsImageDeactivateSettings:
          allOf:
          - $ref: '#/components/schemas/MotionGraphicsDeactivateScheduleActionSettings'
          description: Action to deactivate a motion graphics image overlay
        PauseStateSettings:
          allOf:
          - $ref: '#/components/schemas/PauseStateScheduleActionSettings'
          description: Action to pause or unpause one or both channel pipelines
        Scte35InputSettings:
          allOf:
          - $ref: '#/components/schemas/Scte35InputScheduleActionSettings'
          description: Action to specify scte35 input
        Scte35ReturnToNetworkSettings:
          allOf:
          - $ref: '#/components/schemas/Scte35ReturnToNetworkScheduleActionSettings'
          description: Action to insert SCTE-35 return_to_network message
        Scte35SpliceInsertSettings:
          allOf:
          - $ref: '#/components/schemas/Scte35SpliceInsertScheduleActionSettings'
          description: Action to insert SCTE-35 splice_insert message
        Scte35TimeSignalSettings:
          allOf:
          - $ref: '#/components/schemas/Scte35TimeSignalScheduleActionSettings'
          description: Action to insert SCTE-35 time_signal message
        StaticImageActivateSettings:
          allOf:
          - $ref: '#/components/schemas/StaticImageActivateScheduleActionSettings'
          description: Action to activate a static image overlay
        StaticImageDeactivateSettings:
          allOf:
          - $ref: '#/components/schemas/StaticImageDeactivateScheduleActionSettings'
          description: Action to deactivate a static image overlay
        StaticImageOutputActivateSettings:
          allOf:
          - $ref: '#/components/schemas/StaticImageOutputActivateScheduleActionSettings'
          description: Action to activate a static image overlay in one or more specified
            outputs
        StaticImageOutputDeactivateSettings:
          allOf:
          - $ref: '#/components/schemas/StaticImageOutputDeactivateScheduleActionSettings'
          description: Action to deactivate a static image overlay in one or more
            specified outputs
        Id3SegmentTaggingSettings:
          allOf:
          - $ref: '#/components/schemas/Id3SegmentTaggingScheduleActionSettings'
          description: Action to insert ID3 metadata in every segment, in applicable
            output groups
        TimedMetadataSettings:
          allOf:
          - $ref: '#/components/schemas/TimedMetadataScheduleActionSettings'
          description: Action to insert ID3 metadata once, in applicable output groups
      description: Holds the settings for a single schedule action.
    ScheduleActionStartSettings:
      type: object
      properties:
        FixedModeScheduleActionStartSettings:
          allOf:
          - $ref: '#/components/schemas/FixedModeScheduleActionStartSettings'
          description: Option for specifying the start time for an action.
        FollowModeScheduleActionStartSettings:
          allOf:
          - $ref: '#/components/schemas/FollowModeScheduleActionStartSettings'
          description: Option for specifying an action as relative to another action.
        ImmediateModeScheduleActionStartSettings:
          allOf:
          - $ref: '#/components/schemas/ImmediateModeScheduleActionStartSettings'
          description: Option for specifying an action that should be applied immediately.
      description: Settings to specify when an action should occur. Only one of the
        options must be selected.
    Scte20Convert608To708:
      type: string
      enum:
      - DISABLED
      - UPCONVERT
      description: Scte20 Convert608 To708
    Scte20PlusEmbeddedDestinationSettings:
      type: object
      properties: {}
      description: Scte20 Plus Embedded Destination Settings
    Scte20SourceSettings:
      type: object
      properties:
        Convert608To708:
          allOf:
          - $ref: '#/components/schemas/Scte20Convert608To708'
          description: If upconvert, 608 data is both passed through via the "608
            compatibility bytes" fields of the 708 wrapper as well as translated into
            708. 708 data present in the source content will be discarded.
        Source608ChannelNumber:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max4'
          description: Specifies the 608/708 channel number within the video track
            from which to extract captions. Unused for passthrough.
      description: Scte20 Source Settings
    Scte27DestinationSettings:
      type: object
      properties: {}
      description: Scte27 Destination Settings
    Scte27OcrLanguage:
      type: string
      enum:
      - DEU
      - ENG
      - FRA
      - NLD
      - POR
      - SPA
      description: Scte27 Ocr Language
    Scte27SourceSettings:
      type: object
      properties:
        OcrLanguage:
          allOf:
          - $ref: '#/components/schemas/Scte27OcrLanguage'
          description: If you will configure a WebVTT caption description that references
            this caption selector, use this field to provide the language to consider
            when translating the image-based source to text.
        Pid:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: 'The pid field is used in conjunction with the caption selector
            languageCode field as follows: \- Specify PID and Language: Extracts captions
            from that PID; the language is "informational". \- Specify PID and omit
            Language: Extracts the specified PID. \- Omit PID and specify Language:
            Extracts the specified language, whichever PID that happens to be. \-
            Omit PID and omit Language: Valid only if source is DVB-Sub that is being
            passed through; all languages will be passed through.'
      description: Scte27 Source Settings
    Scte35AposNoRegionalBlackoutBehavior:
      type: string
      enum:
      - FOLLOW
      - IGNORE
      description: Scte35 Apos No Regional Blackout Behavior
    Scte35AposWebDeliveryAllowedBehavior:
      type: string
      enum:
      - FOLLOW
      - IGNORE
      description: Scte35 Apos Web Delivery Allowed Behavior
    Scte35ArchiveAllowedFlag:
      type: string
      enum:
      - ARCHIVE_NOT_ALLOWED
      - ARCHIVE_ALLOWED
      description: Corresponds to the archive_allowed parameter. A value of ARCHIVE_NOT_ALLOWED
        corresponds to 0 (false) in the SCTE-35 specification. If you include one
        of the "restriction" flags then you must include all four of them.
    Scte35DeliveryRestrictions:
      type: object
      properties:
        ArchiveAllowedFlag:
          allOf:
          - $ref: '#/components/schemas/Scte35ArchiveAllowedFlag'
          description: Corresponds to SCTE-35 archive_allowed_flag.
        DeviceRestrictions:
          allOf:
          - $ref: '#/components/schemas/Scte35DeviceRestrictions'
          description: Corresponds to SCTE-35 device_restrictions parameter.
        NoRegionalBlackoutFlag:
          allOf:
          - $ref: '#/components/schemas/Scte35NoRegionalBlackoutFlag'
          description: Corresponds to SCTE-35 no_regional_blackout_flag parameter.
        WebDeliveryAllowedFlag:
          allOf:
          - $ref: '#/components/schemas/Scte35WebDeliveryAllowedFlag'
          description: Corresponds to SCTE-35 web_delivery_allowed_flag parameter.
      required:
      - ArchiveAllowedFlag
      - DeviceRestrictions
      - NoRegionalBlackoutFlag
      - WebDeliveryAllowedFlag
      description: Corresponds to SCTE-35 delivery_not_restricted_flag parameter.
        To declare delivery restrictions, include this element and its four "restriction"
        flags. To declare that there are no restrictions, omit this element.
    Scte35Descriptor:
      type: object
      properties:
        Scte35DescriptorSettings:
          allOf:
          - $ref: '#/components/schemas/Scte35DescriptorSettings'
          description: SCTE-35 Descriptor Settings.
      required:
      - Scte35DescriptorSettings
      description: Holds one set of SCTE-35 Descriptor Settings.
    Scte35DescriptorSettings:
      type: object
      properties:
        SegmentationDescriptorScte35DescriptorSettings:
          allOf:
          - $ref: '#/components/schemas/Scte35SegmentationDescriptor'
          description: SCTE-35 Segmentation Descriptor.
      required:
      - SegmentationDescriptorScte35DescriptorSettings
      description: SCTE-35 Descriptor settings.
    Scte35DeviceRestrictions:
      type: string
      enum:
      - NONE
      - RESTRICT_GROUP0
      - RESTRICT_GROUP1
      - RESTRICT_GROUP2
      description: Corresponds to the device_restrictions parameter in a segmentation_descriptor.
        If you include one of the "restriction" flags then you must include all four
        of them.
    Scte35InputMode:
      type: string
      enum:
      - FIXED
      - FOLLOW_ACTIVE
      description: Whether the SCTE-35 input should be the active input or a fixed
        input.
    Scte35InputScheduleActionSettings:
      type: object
      properties:
        InputAttachmentNameReference:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: In fixed mode, enter the name of the input attachment that
            you want to use as a SCTE-35 input. (Don't enter the ID of the input.)"
        Mode:
          allOf:
          - $ref: '#/components/schemas/Scte35InputMode'
          description: Whether the SCTE-35 input should be the active input or a fixed
            input.
      required:
      - Mode
      description: Scte35Input Schedule Action Settings
    Scte35NoRegionalBlackoutFlag:
      type: string
      enum:
      - REGIONAL_BLACKOUT
      - NO_REGIONAL_BLACKOUT
      description: Corresponds to the no_regional_blackout_flag parameter. A value
        of REGIONAL_BLACKOUT corresponds to 0 (false) in the SCTE-35 specification.
        If you include one of the "restriction" flags then you must include all four
        of them.
    Scte35ReturnToNetworkScheduleActionSettings:
      type: object
      properties:
        SpliceEventId:
          allOf:
          - $ref: '#/components/schemas/__longMin0Max4294967295'
          description: The splice_event_id for the SCTE-35 splice_insert, as defined
            in SCTE-35.
      required:
      - SpliceEventId
      description: Settings for a SCTE-35 return_to_network message.
    Scte35SegmentationCancelIndicator:
      type: string
      enum:
      - SEGMENTATION_EVENT_NOT_CANCELED
      - SEGMENTATION_EVENT_CANCELED
      description: Corresponds to SCTE-35 segmentation_event_cancel_indicator. SEGMENTATION_EVENT_NOT_CANCELED
        corresponds to 0 in the SCTE-35 specification and indicates that this is an
        insertion request. SEGMENTATION_EVENT_CANCELED corresponds to 1 in the SCTE-35
        specification and indicates that this is a cancelation request, in which case
        complete this field and the existing event ID to cancel.
    Scte35SegmentationDescriptor:
      type: object
      properties:
        DeliveryRestrictions:
          allOf:
          - $ref: '#/components/schemas/Scte35DeliveryRestrictions'
          description: Holds the four SCTE-35 delivery restriction parameters.
        SegmentNum:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max255'
          description: Corresponds to SCTE-35 segment_num. A value that is valid for
            the specified segmentation_type_id.
        SegmentationCancelIndicator:
          allOf:
          - $ref: '#/components/schemas/Scte35SegmentationCancelIndicator'
          description: Corresponds to SCTE-35 segmentation_event_cancel_indicator.
        SegmentationDuration:
          allOf:
          - $ref: '#/components/schemas/__longMin0Max1099511627775'
          description: Corresponds to SCTE-35 segmentation_duration. Optional. The
            duration for the time_signal, in 90 KHz ticks. To convert seconds to ticks,
            multiple the seconds by 90,000. Enter time in 90 KHz clock ticks. If you
            do not enter a duration, the time_signal will continue until you insert
            a cancellation message.
        SegmentationEventId:
          allOf:
          - $ref: '#/components/schemas/__longMin0Max4294967295'
          description: Corresponds to SCTE-35 segmentation_event_id.
        SegmentationTypeId:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max255'
          description: Corresponds to SCTE-35 segmentation_type_id. One of the segmentation_type_id
            values listed in the SCTE-35 specification. On the console, enter the
            ID in decimal (for example, "52"). In the CLI, API, or an SDK, enter the
            ID in hex (for example, "0x34") or decimal (for example, "52").
        SegmentationUpid:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Corresponds to SCTE-35 segmentation_upid. Enter a string containing
            the hexadecimal representation of the characters that make up the SCTE-35
            segmentation_upid value. Must contain an even number of hex characters.
            Do not include spaces between each hex pair. For example, the ASCII "ADS
            Information" becomes hex "41445320496e666f726d6174696f6e.
        SegmentationUpidType:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max255'
          description: Corresponds to SCTE-35 segmentation_upid_type. On the console,
            enter one of the types listed in the SCTE-35 specification, converted
            to a decimal. For example, "0x0C" hex from the specification is "12" in
            decimal. In the CLI, API, or an SDK, enter one of the types listed in
            the SCTE-35 specification, in either hex (for example, "0x0C" ) or in
            decimal (for example, "12").
        SegmentsExpected:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max255'
          description: Corresponds to SCTE-35 segments_expected. A value that is valid
            for the specified segmentation_type_id.
        SubSegmentNum:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max255'
          description: Corresponds to SCTE-35 sub_segment_num. A value that is valid
            for the specified segmentation_type_id.
        SubSegmentsExpected:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max255'
          description: Corresponds to SCTE-35 sub_segments_expected. A value that
            is valid for the specified segmentation_type_id.
      required:
      - SegmentationCancelIndicator
      - SegmentationEventId
      description: Corresponds to SCTE-35 segmentation_descriptor.
    Scte35SegmentationScope:
      type: string
      enum:
      - ALL_OUTPUT_GROUPS
      - SCTE35_ENABLED_OUTPUT_GROUPS
      description: Scte35 Segmentation Scope
    Scte35SpliceInsert:
      type: object
      properties:
        AdAvailOffset:
          allOf:
          - $ref: '#/components/schemas/__integerMinNegative1000Max1000'
          description: When specified, this offset (in milliseconds) is added to the
            input Ad Avail PTS time. This only applies to embedded SCTE 104/35 messages
            and does not apply to OOB messages.
        NoRegionalBlackoutFlag:
          allOf:
          - $ref: '#/components/schemas/Scte35SpliceInsertNoRegionalBlackoutBehavior'
          description: When set to ignore, Segment Descriptors with noRegionalBlackoutFlag
            set to 0 will no longer trigger blackouts or Ad Avail slates
        WebDeliveryAllowedFlag:
          allOf:
          - $ref: '#/components/schemas/Scte35SpliceInsertWebDeliveryAllowedBehavior'
          description: When set to ignore, Segment Descriptors with webDeliveryAllowedFlag
            set to 0 will no longer trigger blackouts or Ad Avail slates
      description: Typical configuration that applies breaks on splice inserts in
        addition to time signal placement opportunities, breaks, and advertisements.
    Scte35SpliceInsertNoRegionalBlackoutBehavior:
      type: string
      enum:
      - FOLLOW
      - IGNORE
      description: Scte35 Splice Insert No Regional Blackout Behavior
    Scte35SpliceInsertScheduleActionSettings:
      type: object
      properties:
        Duration:
          allOf:
          - $ref: '#/components/schemas/__longMin0Max8589934591'
          description: Optional, the duration for the splice_insert, in 90 KHz ticks.
            To convert seconds to ticks, multiple the seconds by 90,000. If you enter
            a duration, there is an expectation that the downstream system can read
            the duration and cue in at that time. If you do not enter a duration,
            the splice_insert will continue indefinitely and there is an expectation
            that you will enter a return_to_network to end the splice_insert at the
            appropriate time.
        SpliceEventId:
          allOf:
          - $ref: '#/components/schemas/__longMin0Max4294967295'
          description: The splice_event_id for the SCTE-35 splice_insert, as defined
            in SCTE-35.
      required:
      - SpliceEventId
      description: Settings for a SCTE-35 splice_insert message.
    Scte35SpliceInsertWebDeliveryAllowedBehavior:
      type: string
      enum:
      - FOLLOW
      - IGNORE
      description: Scte35 Splice Insert Web Delivery Allowed Behavior
    Scte35TimeSignalApos:
      type: object
      properties:
        AdAvailOffset:
          allOf:
          - $ref: '#/components/schemas/__integerMinNegative1000Max1000'
          description: When specified, this offset (in milliseconds) is added to the
            input Ad Avail PTS time. This only applies to embedded SCTE 104/35 messages
            and does not apply to OOB messages.
        NoRegionalBlackoutFlag:
          allOf:
          - $ref: '#/components/schemas/Scte35AposNoRegionalBlackoutBehavior'
          description: When set to ignore, Segment Descriptors with noRegionalBlackoutFlag
            set to 0 will no longer trigger blackouts or Ad Avail slates
        WebDeliveryAllowedFlag:
          allOf:
          - $ref: '#/components/schemas/Scte35AposWebDeliveryAllowedBehavior'
          description: When set to ignore, Segment Descriptors with webDeliveryAllowedFlag
            set to 0 will no longer trigger blackouts or Ad Avail slates
      description: Atypical configuration that applies segment breaks only on SCTE-35
        time signal placement opportunities and breaks.
    Scte35TimeSignalScheduleActionSettings:
      type: object
      properties:
        Scte35Descriptors:
          allOf:
          - $ref: '#/components/schemas/__listOfScte35Descriptor'
          description: The list of SCTE-35 descriptors accompanying the SCTE-35 time_signal.
      required:
      - Scte35Descriptors
      description: Settings for a SCTE-35 time_signal.
    Scte35Type:
      type: string
      enum:
      - NONE
      - SCTE_35_WITHOUT_SEGMENTATION
      description: Scte35 Type
    Scte35WebDeliveryAllowedFlag:
      type: string
      enum:
      - WEB_DELIVERY_NOT_ALLOWED
      - WEB_DELIVERY_ALLOWED
      description: Corresponds to the web_delivery_allowed_flag parameter. A value
        of WEB_DELIVERY_NOT_ALLOWED corresponds to 0 (false) in the SCTE-35 specification.
        If you include one of the "restriction" flags then you must include all four
        of them.
    SdiSource:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of this SdiSource. It is automatically assigned when
            the SdiSource is created.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the SdiSource. Unique in the AWS account.The ID is
            the resource-id portion of the ARN.
        Inputs:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: The list of inputs that are currently using this SDI source.
            This list will be empty if the SdiSource has just been deleted.
        Mode:
          allOf:
          - $ref: '#/components/schemas/SdiSourceMode'
          description: Applies only if the type is QUAD. The mode for handling the
            quad-link signal QUADRANT or INTERLEAVE.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the SdiSource.
        State:
          allOf:
          - $ref: '#/components/schemas/SdiSourceState'
          description: Specifies whether the SDI source is attached to an SDI input
            (IN_USE) or not (IDLE).
        Type:
          $ref: '#/components/schemas/SdiSourceType'
      description: Used in CreateSdiSourceResponse, DeleteSdiSourceResponse, DescribeSdiSourceResponse,
        ListSdiSourcesResponse, UpdateSdiSourceResponse
    SdiSourceMapping:
      type: object
      properties:
        CardNumber:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: A number that uniquely identifies the SDI card on the node
            hardware.
        ChannelNumber:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: A number that uniquely identifies a port on the SDI card.
        SdiSource:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the SdiSource to associate with this port on this
            card. You can use the ListSdiSources operation to discover all the IDs.
      description: Used in DescribeNodeSummary, DescribeNodeResult.
    SdiSourceMappingUpdateRequest:
      type: object
      properties:
        CardNumber:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: A number that uniquely identifies the SDI card on the node
            hardware. For information about how physical cards are identified on your
            node hardware, see the documentation for your node hardware. The numbering
            always starts at 1.
        ChannelNumber:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: A number that uniquely identifies a port on the card. This
            must be an SDI port (not a timecode port, for example). For information
            about how ports are identified on physical cards, see the documentation
            for your node hardware.
        SdiSource:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of a SDI source streaming on the given SDI capture card
            port.
      description: Used in SdiSourceMappingsUpdateRequest. One SDI source mapping.
        It connects one logical SdiSource to the physical SDI card and port that the
        physical SDI source uses. You must specify all three parameters in this object.
    SdiSourceMappings:
      type: array
      items:
        $ref: '#/components/schemas/SdiSourceMapping'
      description: Used in SdiSourceMappings.
    SdiSourceMappingsUpdateRequest:
      type: array
      items:
        $ref: '#/components/schemas/SdiSourceMappingUpdateRequest'
      description: Used in the SdiSourceMappingsUpdateRequest, which is a parameter
        of the UpdateNodeRequest, which is used in the UpdateNodeRequest operation.
        This means that you create a mapping for an SDI source by updating a Node.
        You can't create the mapping when you first create the Node.
    SdiSourceMode:
      type: string
      enum:
      - QUADRANT
      - INTERLEAVE
      description: Used in SdiSource, CreateSdiSourceRequest, UpdateSdiSourceRequest.
    SdiSourceState:
      type: string
      enum:
      - IDLE
      - IN_USE
      - DELETED
      description: Used in SdiSource, DescribeNodeRequest, DescribeNodeResult
    SdiSourceSummary:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of this SdiSource. It is automatically assigned when
            the SdiSource is created.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the SdiSource. Unique in the AWS account.The ID is
            the resource-id portion of the ARN.
        Inputs:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: The list of inputs that are currently using this SDI source.
            This list will be empty if the SdiSource has just been deleted.
        Mode:
          allOf:
          - $ref: '#/components/schemas/SdiSourceMode'
          description: Applies only if the type is QUAD. The mode for handling the
            quad-link signal QUADRANT or INTERLEAVE.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the SdiSource.
        State:
          allOf:
          - $ref: '#/components/schemas/SdiSourceState'
          description: Specifies whether the SDI source is attached to an SDI input
            (IN_USE) or not (IDLE).
        Type:
          $ref: '#/components/schemas/SdiSourceType'
      description: Used in CreateSdiSourceResponse, DeleteSdiSourceResponse, DescribeSdiSourceResponse,
        ListSdiSourcesResponse, UpdateSdiSourceResponse
    SdiSourceType:
      type: string
      enum:
      - SINGLE
      - QUAD
      description: Used in SdiSource, CreateSdiSourceRequest, UpdateSdiSourceRequest.
    SignalMapMonitorDeploymentStatus:
      type: string
      enum:
      - NOT_DEPLOYED
      - DRY_RUN_DEPLOYMENT_COMPLETE
      - DRY_RUN_DEPLOYMENT_FAILED
      - DRY_RUN_DEPLOYMENT_IN_PROGRESS
      - DEPLOYMENT_COMPLETE
      - DEPLOYMENT_FAILED
      - DEPLOYMENT_IN_PROGRESS
      - DELETE_COMPLETE
      - DELETE_FAILED
      - DELETE_IN_PROGRESS
      description: A signal map's monitor deployment status.
    SignalMapStatus:
      type: string
      enum:
      - CREATE_IN_PROGRESS
      - CREATE_COMPLETE
      - CREATE_FAILED
      - UPDATE_IN_PROGRESS
      - UPDATE_COMPLETE
      - UPDATE_REVERTED
      - UPDATE_FAILED
      - READY
      - NOT_READY
      description: A signal map's current status which is dependent on its lifecycle
        actions or associated jobs.
    SignalMapSummary:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__stringPatternArnMedialiveSignalMap'
          description: A signal map's ARN (Amazon Resource Name)
        CreatedAt:
          $ref: '#/components/schemas/__timestampIso8601'
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max1024'
          description: A resource's optional description.
        Id:
          allOf:
          - $ref: '#/components/schemas/__stringMin7Max11PatternAws097'
          description: A signal map's id.
        ModifiedAt:
          $ref: '#/components/schemas/__timestampIso8601'
        MonitorDeploymentStatus:
          $ref: '#/components/schemas/SignalMapMonitorDeploymentStatus'
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max255PatternS'
          description: A resource's name. Names must be unique within the scope of
            a resource type in a specific region.
        Status:
          $ref: '#/components/schemas/SignalMapStatus'
        Tags:
          $ref: '#/components/schemas/TagMap'
      required:
      - Arn
      - CreatedAt
      - Id
      - MonitorDeploymentStatus
      - Name
      - Status
      description: Placeholder documentation for SignalMapSummary
    SmoothGroupAudioOnlyTimecodeControl:
      type: string
      enum:
      - PASSTHROUGH
      - USE_CONFIGURED_CLOCK
      description: Smooth Group Audio Only Timecode Control
    SmoothGroupCertificateMode:
      type: string
      enum:
      - SELF_SIGNED
      - VERIFY_AUTHENTICITY
      description: Smooth Group Certificate Mode
    SmoothGroupEventIdMode:
      type: string
      enum:
      - NO_EVENT_ID
      - USE_CONFIGURED
      - USE_TIMESTAMP
      description: Smooth Group Event Id Mode
    SmoothGroupEventStopBehavior:
      type: string
      enum:
      - NONE
      - SEND_EOS
      description: Smooth Group Event Stop Behavior
    SmoothGroupSegmentationMode:
      type: string
      enum:
      - USE_INPUT_SEGMENTATION
      - USE_SEGMENT_DURATION
      description: Smooth Group Segmentation Mode
    SmoothGroupSparseTrackType:
      type: string
      enum:
      - NONE
      - SCTE_35
      - SCTE_35_WITHOUT_SEGMENTATION
      description: Smooth Group Sparse Track Type
    SmoothGroupStreamManifestBehavior:
      type: string
      enum:
      - DO_NOT_SEND
      - SEND
      description: Smooth Group Stream Manifest Behavior
    SmoothGroupTimestampOffsetMode:
      type: string
      enum:
      - USE_CONFIGURED_OFFSET
      - USE_EVENT_START_DATE
      description: Smooth Group Timestamp Offset Mode
    Smpte2038DataPreference:
      type: string
      enum:
      - IGNORE
      - PREFER
      description: Smpte2038 Data Preference
    Smpte2110ReceiverGroup:
      type: object
      properties:
        SdpSettings:
          allOf:
          - $ref: '#/components/schemas/Smpte2110ReceiverGroupSdpSettings'
          description: The single Smpte2110ReceiverGroupSdpSettings that identify
            the video, audio, and ancillary streams for this receiver group.
      description: A receiver group is a collection of video, audio, and ancillary
        streams that you want to group together and attach to one input.
    Smpte2110ReceiverGroupSdpSettings:
      type: object
      properties:
        AncillarySdps:
          allOf:
          - $ref: '#/components/schemas/__listOfInputSdpLocation'
          description: A list of InputSdpLocations. Each item in the list specifies
            the SDP file and index for one ancillary SMPTE 2110 stream. Each stream
            encapsulates one captions stream (out of any number you can include) or
            the single SCTE 35 stream that you can include.
        AudioSdps:
          allOf:
          - $ref: '#/components/schemas/__listOfInputSdpLocation'
          description: A list of InputSdpLocations. Each item in the list specifies
            the SDP file and index for one audio SMPTE 2110 stream.
        VideoSdp:
          allOf:
          - $ref: '#/components/schemas/InputSdpLocation'
          description: The InputSdpLocation that specifies the SDP file and index
            for the single video SMPTE 2110 stream for this 2110 input.
      description: Information about the SDP files that describe the SMPTE 2110 streams
        that go into one SMPTE 2110 receiver group.
    Smpte2110ReceiverGroupSettings:
      type: object
      properties:
        Smpte2110ReceiverGroups:
          $ref: '#/components/schemas/__listOfSmpte2110ReceiverGroup'
      description: Configures the sources for the SMPTE 2110 Receiver Group input.
    SmpteTtDestinationSettings:
      type: object
      properties: {}
      description: Smpte Tt Destination Settings
    SrtCallerDecryption:
      type: object
      properties:
        Algorithm:
          allOf:
          - $ref: '#/components/schemas/Algorithm'
          description: The algorithm used to encrypt content.
        PassphraseSecretArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN for the secret in Secrets Manager. Someone in your
            organization must create a secret and provide you with its ARN. The secret
            holds the passphrase that MediaLive uses to decrypt the source content.
      description: The decryption settings for the SRT caller source. Present only
        if the source has decryption enabled.
    SrtCallerDecryptionRequest:
      type: object
      properties:
        Algorithm:
          allOf:
          - $ref: '#/components/schemas/Algorithm'
          description: The algorithm used to encrypt content.
        PassphraseSecretArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN for the secret in Secrets Manager. Someone in your
            organization must create a secret and provide you with its ARN. This secret
            holds the passphrase that MediaLive will use to decrypt the source content.
      description: Complete these parameters only if the content is encrypted.
    SrtCallerSource:
      type: object
      properties:
        Decryption:
          $ref: '#/components/schemas/SrtCallerDecryption'
        MinimumLatency:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The preferred latency (in milliseconds) for implementing packet
            loss and recovery. Packet recovery is a key feature of SRT.
        SrtListenerAddress:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The IP address at the upstream system (the listener) that MediaLive
            (the caller) connects to.
        SrtListenerPort:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The port at the upstream system (the listener) that MediaLive
            (the caller) connects to.
        StreamId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The stream ID, if the upstream system uses this identifier.
      description: The configuration for a source that uses SRT as the connection
        protocol. In terms of establishing the connection, MediaLive is always caller
        and the upstream system is always the listener. In terms of transmission of
        the source content, MediaLive is always the receiver and the upstream system
        is always the sender.
    SrtCallerSourceRequest:
      type: object
      properties:
        Decryption:
          $ref: '#/components/schemas/SrtCallerDecryptionRequest'
        MinimumLatency:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The preferred latency (in milliseconds) for implementing packet
            loss and recovery. Packet recovery is a key feature of SRT. Obtain this
            value from the operator at the upstream system.
        SrtListenerAddress:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The IP address at the upstream system (the listener) that MediaLive
            (the caller) will connect to.
        SrtListenerPort:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The port at the upstream system (the listener) that MediaLive
            (the caller) will connect to.
        StreamId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: This value is required if the upstream system uses this identifier
            because without it, the SRT handshake between MediaLive (the caller) and
            the upstream system (the listener) might fail.
      description: Configures the connection for a source that uses SRT as the connection
        protocol. In terms of establishing the connection, MediaLive is always the
        caller and the upstream system is always the listener. In terms of transmission
        of the source content, MediaLive is always the receiver and the upstream system
        is always the sender.
    SrtEncryptionType:
      type: string
      enum:
      - AES128
      - AES192
      - AES256
      description: Srt Encryption Type
    SrtGroupSettings:
      type: object
      properties:
        InputLossAction:
          allOf:
          - $ref: '#/components/schemas/InputLossActionForUdpOut'
          description: Specifies behavior of last resort when input video is lost,
            and no more backup inputs are available. When dropTs is selected the entire
            transport stream will stop being emitted. When dropProgram is selected
            the program can be dropped from the transport stream (and replaced with
            null packets to meet the TS bitrate requirement). Or, when emitProgram
            is chosen the transport stream will continue to be produced normally with
            repeat frames, black frames, or slate frames substituted for the absent
            input video.
      description: Srt Group Settings
    SrtOutputDestinationSettings:
      type: object
      properties:
        EncryptionPassphraseSecretArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Arn used to extract the password from Secrets Manager
        StreamId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Stream id for SRT destinations (URLs of type srt://)
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A URL specifying a destination
      description: Placeholder documentation for SrtOutputDestinationSettings
    SrtOutputSettings:
      type: object
      properties:
        BufferMsec:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max10000'
          description: 'SRT output buffering in milliseconds. A higher value increases
            latency through the encoder. But the benefits are that it helps to maintain
            a constant, low-jitter SRT output, and it accommodates clock recovery,
            input switching, input disruptions, picture reordering, and so on. Range:
            0-10000 milliseconds.'
        ContainerSettings:
          $ref: '#/components/schemas/UdpContainerSettings'
        Destination:
          $ref: '#/components/schemas/OutputLocationRef'
        EncryptionType:
          allOf:
          - $ref: '#/components/schemas/SrtEncryptionType'
          description: The encryption level for the content. Valid values are AES128,
            AES192, AES256. You and the downstream system should plan how to set this
            field because the values must not conflict with each other.
        Latency:
          allOf:
          - $ref: '#/components/schemas/__integerMin40Max16000'
          description: 'The latency value, in milliseconds, that is proposed during
            the SRT connection handshake. SRT will choose the maximum of the values
            proposed by the sender and receiver. On the sender side, latency is the
            amount of time a packet is held to give it a chance to be delivered successfully.
            On the receiver side, latency is the amount of time the packet is held
            before delivering to the application, aiding in packet recovery and matching
            as closely as possible the packet timing of the sender. Range: 40-16000
            milliseconds.'
      required:
      - ContainerSettings
      - Destination
      description: Srt Output Settings
    SrtSettings:
      type: object
      properties:
        SrtCallerSources:
          $ref: '#/components/schemas/__listOfSrtCallerSource'
      description: The configured sources for this SRT input.
    SrtSettingsRequest:
      type: object
      properties:
        SrtCallerSources:
          $ref: '#/components/schemas/__listOfSrtCallerSourceRequest'
      description: Configures the sources for this SRT input. For a single-pipeline
        input, include one srtCallerSource in the array. For a standard-pipeline input,
        include two srtCallerSource.
    StandardHlsSettings:
      type: object
      properties:
        AudioRenditionSets:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: List all the audio groups that are used with the video output
            stream. Input all the audio GROUP-IDs that are associated to the video,
            separate by ','.
        M3u8Settings:
          $ref: '#/components/schemas/M3u8Settings'
      required:
      - M3u8Settings
      description: Standard Hls Settings
    StartChannelRequest:
      type: object
      properties:
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A request to start a channel
      required:
      - ChannelId
      description: Placeholder documentation for StartChannelRequest
    StartChannelResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique arn of the channel.
        CdiInputSpecification:
          allOf:
          - $ref: '#/components/schemas/CdiInputSpecification'
          description: Specification of CDI inputs for this channel
        ChannelClass:
          allOf:
          - $ref: '#/components/schemas/ChannelClass'
          description: The class for this channel. STANDARD for a channel with two
            pipelines or SINGLE_PIPELINE for a channel with one pipeline.
        Destinations:
          allOf:
          - $ref: '#/components/schemas/__listOfOutputDestination'
          description: A list of destinations of the channel. For UDP outputs, there
            is one destination per output. For other types (HLS, for example), there
            is one destination per packager.
        EgressEndpoints:
          allOf:
          - $ref: '#/components/schemas/__listOfChannelEgressEndpoint'
          description: The endpoints where outgoing connections initiate from
        EncoderSettings:
          $ref: '#/components/schemas/EncoderSettings'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique id of the channel.
        InputAttachments:
          allOf:
          - $ref: '#/components/schemas/__listOfInputAttachment'
          description: List of input attachments for channel.
        InputSpecification:
          allOf:
          - $ref: '#/components/schemas/InputSpecification'
          description: Specification of network and file inputs for this channel
        LogLevel:
          allOf:
          - $ref: '#/components/schemas/LogLevel'
          description: The log level being written to CloudWatch Logs.
        Maintenance:
          allOf:
          - $ref: '#/components/schemas/MaintenanceStatus'
          description: Maintenance settings for this channel.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the channel. (user-mutable)
        PipelineDetails:
          allOf:
          - $ref: '#/components/schemas/__listOfPipelineDetail'
          description: Runtime details for the pipelines of a running channel.
        PipelinesRunningCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The number of currently healthy pipelines.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the role assumed when running
            the Channel.
        State:
          $ref: '#/components/schemas/ChannelState'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A collection of key-value pairs.
        Vpc:
          allOf:
          - $ref: '#/components/schemas/VpcOutputSettingsDescription'
          description: Settings for VPC output
        AnywhereSettings:
          allOf:
          - $ref: '#/components/schemas/DescribeAnywhereSettings'
          description: Anywhere settings for this channel.
        ChannelEngineVersion:
          allOf:
          - $ref: '#/components/schemas/ChannelEngineVersionResponse'
          description: Requested engine version for this channel.
      description: Placeholder documentation for StartChannelResponse
    StartDeleteMonitorDeploymentRequest:
      type: object
      properties:
        Identifier:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A signal map's identifier. Can be either be its id or current
            name.
      required:
      - Identifier
      description: Placeholder documentation for StartDeleteMonitorDeploymentRequest
    StartDeleteMonitorDeploymentResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__stringPatternArnMedialiveSignalMap'
          description: A signal map's ARN (Amazon Resource Name)
        CloudWatchAlarmTemplateGroupIds:
          $ref: '#/components/schemas/__listOf__stringMin7Max11PatternAws097'
        CreatedAt:
          $ref: '#/components/schemas/__timestampIso8601'
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max1024'
          description: A resource's optional description.
        DiscoveryEntryPointArn:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max2048'
          description: A top-level supported AWS resource ARN to discovery a signal
            map from.
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max2048'
          description: Error message associated with a failed creation or failed update
            attempt of a signal map.
        EventBridgeRuleTemplateGroupIds:
          $ref: '#/components/schemas/__listOf__stringMin7Max11PatternAws097'
        FailedMediaResourceMap:
          $ref: '#/components/schemas/FailedMediaResourceMap'
        Id:
          allOf:
          - $ref: '#/components/schemas/__stringMin7Max11PatternAws097'
          description: A signal map's id.
        LastDiscoveredAt:
          $ref: '#/components/schemas/__timestampIso8601'
        LastSuccessfulMonitorDeployment:
          $ref: '#/components/schemas/SuccessfulMonitorDeployment'
        MediaResourceMap:
          $ref: '#/components/schemas/MediaResourceMap'
        ModifiedAt:
          $ref: '#/components/schemas/__timestampIso8601'
        MonitorChangesPendingDeployment:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: If true, there are pending monitor changes for this signal
            map that can be deployed.
        MonitorDeployment:
          $ref: '#/components/schemas/MonitorDeployment'
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max255PatternS'
          description: A resource's name. Names must be unique within the scope of
            a resource type in a specific region.
        Status:
          $ref: '#/components/schemas/SignalMapStatus'
        Tags:
          $ref: '#/components/schemas/TagMap'
      description: Placeholder documentation for StartDeleteMonitorDeploymentResponse
    StartInputDeviceMaintenanceWindowRequest:
      type: object
      properties:
        InputDeviceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique ID of the input device to start a maintenance window
            for. For example, hd-123456789abcdef.
      required:
      - InputDeviceId
      description: Placeholder documentation for StartInputDeviceMaintenanceWindowRequest
    StartInputDeviceMaintenanceWindowResponse:
      type: object
      properties: {}
      description: Placeholder documentation for StartInputDeviceMaintenanceWindowResponse
    StartInputDeviceRequest:
      type: object
      properties:
        InputDeviceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique ID of the input device to start. For example, hd-123456789abcdef.
      required:
      - InputDeviceId
      description: Placeholder documentation for StartInputDeviceRequest
    StartInputDeviceResponse:
      type: object
      properties: {}
      description: Placeholder documentation for StartInputDeviceResponse
    StartMonitorDeploymentRequest:
      type: object
      properties:
        DryRun:
          $ref: '#/components/schemas/__boolean'
        Identifier:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A signal map's identifier. Can be either be its id or current
            name.
      required:
      - Identifier
      description: Placeholder documentation for StartMonitorDeploymentRequest
    StartMonitorDeploymentResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__stringPatternArnMedialiveSignalMap'
          description: A signal map's ARN (Amazon Resource Name)
        CloudWatchAlarmTemplateGroupIds:
          $ref: '#/components/schemas/__listOf__stringMin7Max11PatternAws097'
        CreatedAt:
          $ref: '#/components/schemas/__timestampIso8601'
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max1024'
          description: A resource's optional description.
        DiscoveryEntryPointArn:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max2048'
          description: A top-level supported AWS resource ARN to discovery a signal
            map from.
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max2048'
          description: Error message associated with a failed creation or failed update
            attempt of a signal map.
        EventBridgeRuleTemplateGroupIds:
          $ref: '#/components/schemas/__listOf__stringMin7Max11PatternAws097'
        FailedMediaResourceMap:
          $ref: '#/components/schemas/FailedMediaResourceMap'
        Id:
          allOf:
          - $ref: '#/components/schemas/__stringMin7Max11PatternAws097'
          description: A signal map's id.
        LastDiscoveredAt:
          $ref: '#/components/schemas/__timestampIso8601'
        LastSuccessfulMonitorDeployment:
          $ref: '#/components/schemas/SuccessfulMonitorDeployment'
        MediaResourceMap:
          $ref: '#/components/schemas/MediaResourceMap'
        ModifiedAt:
          $ref: '#/components/schemas/__timestampIso8601'
        MonitorChangesPendingDeployment:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: If true, there are pending monitor changes for this signal
            map that can be deployed.
        MonitorDeployment:
          $ref: '#/components/schemas/MonitorDeployment'
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max255PatternS'
          description: A resource's name. Names must be unique within the scope of
            a resource type in a specific region.
        Status:
          $ref: '#/components/schemas/SignalMapStatus'
        Tags:
          $ref: '#/components/schemas/TagMap'
      description: Placeholder documentation for StartMonitorDeploymentResponse
    StartMultiplexRequest:
      type: object
      properties:
        MultiplexId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the multiplex.
      required:
      - MultiplexId
      description: Placeholder documentation for StartMultiplexRequest
    StartMultiplexResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique arn of the multiplex.
        AvailabilityZones:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: A list of availability zones for the multiplex.
        Destinations:
          allOf:
          - $ref: '#/components/schemas/__listOfMultiplexOutputDestination'
          description: A list of the multiplex output destinations.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique id of the multiplex.
        MultiplexSettings:
          allOf:
          - $ref: '#/components/schemas/MultiplexSettings'
          description: Configuration for a multiplex event.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the multiplex.
        PipelinesRunningCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The number of currently healthy pipelines.
        ProgramCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The number of programs in the multiplex.
        State:
          allOf:
          - $ref: '#/components/schemas/MultiplexState'
          description: The current state of the multiplex.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A collection of key-value pairs.
      description: Placeholder documentation for StartMultiplexResponse
    StartTimecode:
      type: object
      properties:
        Timecode:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The timecode for the frame where you want to start the clip.
            Optional; if not specified, the clip starts at first frame in the file.
            Enter the timecode as HH:MM:SS:FF or HH:MM:SS;FF.
      description: Settings to identify the start of the clip.
    StartUpdateSignalMapRequest:
      type: object
      properties:
        CloudWatchAlarmTemplateGroupIdentifiers:
          $ref: '#/components/schemas/__listOf__stringPatternS'
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max1024'
          description: A resource's optional description.
        DiscoveryEntryPointArn:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max2048'
          description: A top-level supported AWS resource ARN to discovery a signal
            map from.
        EventBridgeRuleTemplateGroupIdentifiers:
          $ref: '#/components/schemas/__listOf__stringPatternS'
        ForceRediscovery:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: If true, will force a rediscovery of a signal map if an unchanged
            discoveryEntryPointArn is provided.
        Identifier:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A signal map's identifier. Can be either be its id or current
            name.
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max255PatternS'
          description: A resource's name. Names must be unique within the scope of
            a resource type in a specific region.
      required:
      - Identifier
      description: Placeholder documentation for StartUpdateSignalMapRequest
    StartUpdateSignalMapResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__stringPatternArnMedialiveSignalMap'
          description: A signal map's ARN (Amazon Resource Name)
        CloudWatchAlarmTemplateGroupIds:
          $ref: '#/components/schemas/__listOf__stringMin7Max11PatternAws097'
        CreatedAt:
          $ref: '#/components/schemas/__timestampIso8601'
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max1024'
          description: A resource's optional description.
        DiscoveryEntryPointArn:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max2048'
          description: A top-level supported AWS resource ARN to discovery a signal
            map from.
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max2048'
          description: Error message associated with a failed creation or failed update
            attempt of a signal map.
        EventBridgeRuleTemplateGroupIds:
          $ref: '#/components/schemas/__listOf__stringMin7Max11PatternAws097'
        FailedMediaResourceMap:
          $ref: '#/components/schemas/FailedMediaResourceMap'
        Id:
          allOf:
          - $ref: '#/components/schemas/__stringMin7Max11PatternAws097'
          description: A signal map's id.
        LastDiscoveredAt:
          $ref: '#/components/schemas/__timestampIso8601'
        LastSuccessfulMonitorDeployment:
          $ref: '#/components/schemas/SuccessfulMonitorDeployment'
        MediaResourceMap:
          $ref: '#/components/schemas/MediaResourceMap'
        ModifiedAt:
          $ref: '#/components/schemas/__timestampIso8601'
        MonitorChangesPendingDeployment:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: If true, there are pending monitor changes for this signal
            map that can be deployed.
        MonitorDeployment:
          $ref: '#/components/schemas/MonitorDeployment'
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max255PatternS'
          description: A resource's name. Names must be unique within the scope of
            a resource type in a specific region.
        Status:
          $ref: '#/components/schemas/SignalMapStatus'
        Tags:
          $ref: '#/components/schemas/TagMap'
      description: Placeholder documentation for StartUpdateSignalMapResponse
    StaticImageActivateScheduleActionSettings:
      type: object
      properties:
        Duration:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: The duration in milliseconds for the image to remain on the
            video. If omitted or set to 0 the duration is unlimited and the image
            will remain until it is explicitly deactivated.
        FadeIn:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: The time in milliseconds for the image to fade in. The fade-in
            starts at the start time of the overlay. Default is 0 (no fade-in).
        FadeOut:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: Applies only if a duration is specified. The time in milliseconds
            for the image to fade out. The fade-out starts when the duration time
            is hit, so it effectively extends the duration. Default is 0 (no fade-out).
        Height:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: The height of the image when inserted into the video, in pixels.
            The overlay will be scaled up or down to the specified height. Leave blank
            to use the native height of the overlay.
        Image:
          allOf:
          - $ref: '#/components/schemas/InputLocation'
          description: The location and filename of the image file to overlay on the
            video. The file must be a 32-bit BMP, PNG, or TGA file, and must not be
            larger (in pixels) than the input video.
        ImageX:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: Placement of the left edge of the overlay relative to the left
            edge of the video frame, in pixels. 0 (the default) is the left edge of
            the frame. If the placement causes the overlay to extend beyond the right
            edge of the underlying video, then the overlay is cropped on the right.
        ImageY:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: Placement of the top edge of the overlay relative to the top
            edge of the video frame, in pixels. 0 (the default) is the top edge of
            the frame. If the placement causes the overlay to extend beyond the bottom
            edge of the underlying video, then the overlay is cropped on the bottom.
        Layer:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max7'
          description: The number of the layer, 0 to 7. There are 8 layers that can
            be overlaid on the video, each layer with a different image. The layers
            are in Z order, which means that overlays with higher values of layer
            are inserted on top of overlays with lower values of layer. Default is
            0.
        Opacity:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max100'
          description: Opacity of image where 0 is transparent and 100 is fully opaque.
            Default is 100.
        Width:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: The width of the image when inserted into the video, in pixels.
            The overlay will be scaled up or down to the specified width. Leave blank
            to use the native width of the overlay.
      required:
      - Image
      description: Settings for the action to activate a static image.
    StaticImageDeactivateScheduleActionSettings:
      type: object
      properties:
        FadeOut:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: The time in milliseconds for the image to fade out. Default
            is 0 (no fade-out).
        Layer:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max7'
          description: The image overlay layer to deactivate, 0 to 7. Default is 0.
      description: Settings for the action to deactivate the image in a specific layer.
    StaticImageOutputActivateScheduleActionSettings:
      type: object
      properties:
        Duration:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: The duration in milliseconds for the image to remain on the
            video. If omitted or set to 0 the duration is unlimited and the image
            will remain until it is explicitly deactivated.
        FadeIn:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: The time in milliseconds for the image to fade in. The fade-in
            starts at the start time of the overlay. Default is 0 (no fade-in).
        FadeOut:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: Applies only if a duration is specified. The time in milliseconds
            for the image to fade out. The fade-out starts when the duration time
            is hit, so it effectively extends the duration. Default is 0 (no fade-out).
        Height:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: The height of the image when inserted into the video, in pixels.
            The overlay will be scaled up or down to the specified height. Leave blank
            to use the native height of the overlay.
        Image:
          allOf:
          - $ref: '#/components/schemas/InputLocation'
          description: The location and filename of the image file to overlay on the
            video. The file must be a 32-bit BMP, PNG, or TGA file, and must not be
            larger (in pixels) than the input video.
        ImageX:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: Placement of the left edge of the overlay relative to the left
            edge of the video frame, in pixels. 0 (the default) is the left edge of
            the frame. If the placement causes the overlay to extend beyond the right
            edge of the underlying video, then the overlay is cropped on the right.
        ImageY:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: Placement of the top edge of the overlay relative to the top
            edge of the video frame, in pixels. 0 (the default) is the top edge of
            the frame. If the placement causes the overlay to extend beyond the bottom
            edge of the underlying video, then the overlay is cropped on the bottom.
        Layer:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max7'
          description: The number of the layer, 0 to 7. There are 8 layers that can
            be overlaid on the video, each layer with a different image. The layers
            are in Z order, which means that overlays with higher values of layer
            are inserted on top of overlays with lower values of layer. Default is
            0.
        Opacity:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max100'
          description: Opacity of image where 0 is transparent and 100 is fully opaque.
            Default is 100.
        OutputNames:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: The name(s) of the output(s) the activation should apply to.
        Width:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: The width of the image when inserted into the video, in pixels.
            The overlay will be scaled up or down to the specified width. Leave blank
            to use the native width of the overlay.
      required:
      - Image
      - OutputNames
      description: Settings for the action to activate a static image.
    StaticImageOutputDeactivateScheduleActionSettings:
      type: object
      properties:
        FadeOut:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: The time in milliseconds for the image to fade out. Default
            is 0 (no fade-out).
        Layer:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max7'
          description: The image overlay layer to deactivate, 0 to 7. Default is 0.
        OutputNames:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: The name(s) of the output(s) the deactivation should apply
            to.
      required:
      - OutputNames
      description: Settings for the action to deactivate the image in a specific layer.
    StaticKeySettings:
      type: object
      properties:
        KeyProviderServer:
          allOf:
          - $ref: '#/components/schemas/InputLocation'
          description: The URL of the license server used for protecting content.
        StaticKeyValue:
          allOf:
          - $ref: '#/components/schemas/__stringMin32Max32'
          description: Static key value as a 32 character hexadecimal string.
      required:
      - StaticKeyValue
      description: Static Key Settings
    StopChannelRequest:
      type: object
      properties:
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A request to stop a running channel
      required:
      - ChannelId
      description: Placeholder documentation for StopChannelRequest
    StopChannelResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique arn of the channel.
        CdiInputSpecification:
          allOf:
          - $ref: '#/components/schemas/CdiInputSpecification'
          description: Specification of CDI inputs for this channel
        ChannelClass:
          allOf:
          - $ref: '#/components/schemas/ChannelClass'
          description: The class for this channel. STANDARD for a channel with two
            pipelines or SINGLE_PIPELINE for a channel with one pipeline.
        Destinations:
          allOf:
          - $ref: '#/components/schemas/__listOfOutputDestination'
          description: A list of destinations of the channel. For UDP outputs, there
            is one destination per output. For other types (HLS, for example), there
            is one destination per packager.
        EgressEndpoints:
          allOf:
          - $ref: '#/components/schemas/__listOfChannelEgressEndpoint'
          description: The endpoints where outgoing connections initiate from
        EncoderSettings:
          $ref: '#/components/schemas/EncoderSettings'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique id of the channel.
        InputAttachments:
          allOf:
          - $ref: '#/components/schemas/__listOfInputAttachment'
          description: List of input attachments for channel.
        InputSpecification:
          allOf:
          - $ref: '#/components/schemas/InputSpecification'
          description: Specification of network and file inputs for this channel
        LogLevel:
          allOf:
          - $ref: '#/components/schemas/LogLevel'
          description: The log level being written to CloudWatch Logs.
        Maintenance:
          allOf:
          - $ref: '#/components/schemas/MaintenanceStatus'
          description: Maintenance settings for this channel.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the channel. (user-mutable)
        PipelineDetails:
          allOf:
          - $ref: '#/components/schemas/__listOfPipelineDetail'
          description: Runtime details for the pipelines of a running channel.
        PipelinesRunningCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The number of currently healthy pipelines.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the role assumed when running
            the Channel.
        State:
          $ref: '#/components/schemas/ChannelState'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A collection of key-value pairs.
        Vpc:
          allOf:
          - $ref: '#/components/schemas/VpcOutputSettingsDescription'
          description: Settings for VPC output
        AnywhereSettings:
          allOf:
          - $ref: '#/components/schemas/DescribeAnywhereSettings'
          description: Anywhere settings for this channel.
        ChannelEngineVersion:
          allOf:
          - $ref: '#/components/schemas/ChannelEngineVersionResponse'
          description: Requested engine version for this channel.
      description: Placeholder documentation for StopChannelResponse
    StopInputDeviceRequest:
      type: object
      properties:
        InputDeviceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique ID of the input device to stop. For example, hd-123456789abcdef.
      required:
      - InputDeviceId
      description: Placeholder documentation for StopInputDeviceRequest
    StopInputDeviceResponse:
      type: object
      properties: {}
      description: Placeholder documentation for StopInputDeviceResponse
    StopMultiplexRequest:
      type: object
      properties:
        MultiplexId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the multiplex.
      required:
      - MultiplexId
      description: Placeholder documentation for StopMultiplexRequest
    StopMultiplexResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique arn of the multiplex.
        AvailabilityZones:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: A list of availability zones for the multiplex.
        Destinations:
          allOf:
          - $ref: '#/components/schemas/__listOfMultiplexOutputDestination'
          description: A list of the multiplex output destinations.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique id of the multiplex.
        MultiplexSettings:
          allOf:
          - $ref: '#/components/schemas/MultiplexSettings'
          description: Configuration for a multiplex event.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the multiplex.
        PipelinesRunningCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The number of currently healthy pipelines.
        ProgramCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The number of programs in the multiplex.
        State:
          allOf:
          - $ref: '#/components/schemas/MultiplexState'
          description: The current state of the multiplex.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A collection of key-value pairs.
      description: Placeholder documentation for StopMultiplexResponse
    StopTimecode:
      type: object
      properties:
        LastFrameClippingBehavior:
          allOf:
          - $ref: '#/components/schemas/LastFrameClippingBehavior'
          description: If you specify a StopTimecode in an input (in order to clip
            the file), you can specify if you want the clip to exclude (the default)
            or include the frame specified by the timecode.
        Timecode:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The timecode for the frame where you want to stop the clip.
            Optional; if not specified, the clip continues to the end of the file.
            Enter the timecode as HH:MM:SS:FF or HH:MM:SS;FF.
      description: Settings to identify the end of the clip.
    SuccessfulMonitorDeployment:
      type: object
      properties:
        DetailsUri:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max2048'
          description: URI associated with a signal map's monitor deployment.
        Status:
          $ref: '#/components/schemas/SignalMapMonitorDeploymentStatus'
      required:
      - DetailsUri
      - Status
      description: Represents the latest successful monitor deployment of a signal
        map.
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/__string'
      description: Represents the tags associated with a resource.
    Tags:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/__string'
      description: Placeholder documentation for Tags
    TeletextDestinationSettings:
      type: object
      properties: {}
      description: Teletext Destination Settings
    TeletextSourceSettings:
      type: object
      properties:
        OutputRectangle:
          allOf:
          - $ref: '#/components/schemas/CaptionRectangle'
          description: Optionally defines a region where TTML style captions will
            be displayed
        PageNumber:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Specifies the teletext page number within the data stream from
            which to extract captions. Range of 0x100 (256) to 0x8FF (2303). Unused
            for passthrough. Should be specified as a hexadecimal string with no "0x"
            prefix.
      description: Teletext Source Settings
    TemporalFilterPostFilterSharpening:
      type: string
      enum:
      - AUTO
      - DISABLED
      - ENABLED
      description: Temporal Filter Post Filter Sharpening
    TemporalFilterSettings:
      type: object
      properties:
        PostFilterSharpening:
          allOf:
          - $ref: '#/components/schemas/TemporalFilterPostFilterSharpening'
          description: 'If you enable this filter, the results are the following:
            \- If the source content is noisy (it contains excessive digital artifacts),
            the filter cleans up the source. \- If the source content is already clean,
            the filter tends to decrease the bitrate, especially when the rate control
            mode is QVBR.'
        Strength:
          allOf:
          - $ref: '#/components/schemas/TemporalFilterStrength'
          description: Choose a filter strength. We recommend a strength of 1 or 2.
            A higher strength might take out good information, resulting in an image
            that is overly soft.
      description: Temporal Filter Settings
    TemporalFilterStrength:
      type: string
      enum:
      - AUTO
      - STRENGTH_1
      - STRENGTH_2
      - STRENGTH_3
      - STRENGTH_4
      - STRENGTH_5
      - STRENGTH_6
      - STRENGTH_7
      - STRENGTH_8
      - STRENGTH_9
      - STRENGTH_10
      - STRENGTH_11
      - STRENGTH_12
      - STRENGTH_13
      - STRENGTH_14
      - STRENGTH_15
      - STRENGTH_16
      description: Temporal Filter Strength
    Thumbnail:
      type: object
      properties:
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The binary data for the latest thumbnail.
        ContentType:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The content type for the latest thumbnail.
        ThumbnailType:
          allOf:
          - $ref: '#/components/schemas/ThumbnailType'
          description: Thumbnail Type
        TimeStamp:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: Time stamp for the latest thumbnail.
      description: Details of a single thumbnail
    ThumbnailConfiguration:
      type: object
      properties:
        State:
          allOf:
          - $ref: '#/components/schemas/ThumbnailState'
          description: Enables the thumbnail feature. The feature generates thumbnails
            of the incoming video in each pipeline in the channel. AUTO turns the
            feature on, DISABLE turns the feature off.
      required:
      - State
      description: Thumbnail Configuration
    ThumbnailDetail:
      type: object
      properties:
        PipelineId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Pipeline ID
        Thumbnails:
          allOf:
          - $ref: '#/components/schemas/__listOfThumbnail'
          description: thumbnails of a single pipeline
      description: Thumbnail details for one pipeline of a running channel.
    ThumbnailState:
      type: string
      enum:
      - AUTO
      - DISABLED
      description: Thumbnail State
    ThumbnailType:
      type: string
      enum:
      - UNSPECIFIED
      - CURRENT_ACTIVE
      description: Thumbnail type.
    TimecodeBurninFontSize:
      type: string
      enum:
      - EXTRA_SMALL_10
      - LARGE_48
      - MEDIUM_32
      - SMALL_16
      description: Timecode Burnin Font Size
    TimecodeBurninPosition:
      type: string
      enum:
      - BOTTOM_CENTER
      - BOTTOM_LEFT
      - BOTTOM_RIGHT
      - MIDDLE_CENTER
      - MIDDLE_LEFT
      - MIDDLE_RIGHT
      - TOP_CENTER
      - TOP_LEFT
      - TOP_RIGHT
      description: Timecode Burnin Position
    TimecodeBurninSettings:
      type: object
      properties:
        FontSize:
          allOf:
          - $ref: '#/components/schemas/TimecodeBurninFontSize'
          description: Choose a timecode burn-in font size
        Position:
          allOf:
          - $ref: '#/components/schemas/TimecodeBurninPosition'
          description: Choose a timecode burn-in output position
        Prefix:
          allOf:
          - $ref: '#/components/schemas/__stringMax255'
          description: Create a timecode burn-in prefix (optional)
      required:
      - FontSize
      - Position
      description: Timecode Burnin Settings
    TimecodeConfig:
      type: object
      properties:
        Source:
          allOf:
          - $ref: '#/components/schemas/TimecodeConfigSource'
          description: 'Identifies the source for the timecode that will be associated
            with the events outputs. -Embedded (embedded): Initialize the output timecode
            with timecode from the the source. If no embedded timecode is detected
            in the source, the system falls back to using "Start at 0" (zerobased).
            -System Clock (systemclock): Use the UTC time. -Start at 0 (zerobased):
            The time of the first frame of the event will be 00:00:00:00.'
        SyncThreshold:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max1000000'
          description: Threshold in frames beyond which output timecode is resynchronized
            to the input timecode. Discrepancies below this threshold are permitted
            to avoid unnecessary discontinuities in the output timecode. No timecode
            sync when this is not specified.
      required:
      - Source
      description: Timecode Config
    TimecodeConfigSource:
      type: string
      enum:
      - EMBEDDED
      - SYSTEMCLOCK
      - ZEROBASED
      description: Timecode Config Source
    TimedMetadataScheduleActionSettings:
      type: object
      properties:
        Id3:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'Enter a base64 string that contains one or more fully formed
            ID3 tags.See the ID3 specification: http://id3.org/id3v2.4.0-structure'
      required:
      - Id3
      description: Settings for the action to insert ID3 metadata (as a one-time action)
        in applicable output groups.
    TooManyRequestsException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/__string'
      description: Placeholder documentation for TooManyRequestsException
    TransferInputDeviceRequest:
      type: object
      properties:
        InputDeviceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique ID of this input device. For example, hd-123456789abcdef.
        TargetCustomerId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The AWS account ID (12 digits) for the recipient of the device
            transfer.
        TargetRegion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The target AWS region to transfer the device.
        TransferMessage:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: An optional message for the recipient. Maximum 280 characters.
      required:
      - InputDeviceId
      description: A request to transfer an input device.
    TransferInputDeviceResponse:
      type: object
      properties: {}
      description: Placeholder documentation for TransferInputDeviceResponse
    TransferringInputDeviceSummary:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique ID of the input device.
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The optional message that the sender has attached to the transfer.
        TargetCustomerId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The AWS account ID for the recipient of the input device transfer.
        TransferType:
          allOf:
          - $ref: '#/components/schemas/InputDeviceTransferType'
          description: The type (direction) of the input device transfer.
      description: Details about the input device that is being transferred.
    TtmlDestinationSettings:
      type: object
      properties:
        StyleControl:
          allOf:
          - $ref: '#/components/schemas/TtmlDestinationStyleControl'
          description: This field is not currently supported and will not affect the
            output styling. Leave the default value.
      description: Ttml Destination Settings
    TtmlDestinationStyleControl:
      type: string
      enum:
      - PASSTHROUGH
      - USE_CONFIGURED
      description: Ttml Destination Style Control
    UdpContainerSettings:
      type: object
      properties:
        M2tsSettings:
          $ref: '#/components/schemas/M2tsSettings'
      description: Udp Container Settings
    UdpGroupSettings:
      type: object
      properties:
        InputLossAction:
          allOf:
          - $ref: '#/components/schemas/InputLossActionForUdpOut'
          description: Specifies behavior of last resort when input video is lost,
            and no more backup inputs are available. When dropTs is selected the entire
            transport stream will stop being emitted. When dropProgram is selected
            the program can be dropped from the transport stream (and replaced with
            null packets to meet the TS bitrate requirement). Or, when emitProgram
            is chosen the transport stream will continue to be produced normally with
            repeat frames, black frames, or slate frames substituted for the absent
            input video.
        TimedMetadataId3Frame:
          allOf:
          - $ref: '#/components/schemas/UdpTimedMetadataId3Frame'
          description: Indicates ID3 frame that has the timecode.
        TimedMetadataId3Period:
          allOf:
          - $ref: '#/components/schemas/__integerMin0'
          description: Timed Metadata interval in seconds.
      description: Udp Group Settings
    UdpOutputSettings:
      type: object
      properties:
        BufferMsec:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max10000'
          description: UDP output buffering in milliseconds. Larger values increase
            latency through the transcoder but simultaneously assist the transcoder
            in maintaining a constant, low-jitter UDP/RTP output while accommodating
            clock recovery, input switching, input disruptions, picture reordering,
            etc.
        ContainerSettings:
          $ref: '#/components/schemas/UdpContainerSettings'
        Destination:
          allOf:
          - $ref: '#/components/schemas/OutputLocationRef'
          description: Destination address and port number for RTP or UDP packets.
            Can be unicast or multicast RTP or UDP (eg. rtp://239.10.10.10:5001 or
            udp://10.100.100.100:5002).
        FecOutputSettings:
          allOf:
          - $ref: '#/components/schemas/FecOutputSettings'
          description: Settings for enabling and adjusting Forward Error Correction
            on UDP outputs.
      required:
      - ContainerSettings
      - Destination
      description: Udp Output Settings
    UdpTimedMetadataId3Frame:
      type: string
      enum:
      - NONE
      - PRIV
      - TDRL
      description: Udp Timed Metadata Id3 Frame
    UnprocessableEntityException:
      type: object
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The error message.
        ValidationErrors:
          allOf:
          - $ref: '#/components/schemas/__listOfValidationError'
          description: A collection of validation error responses.
      description: Placeholder documentation for UnprocessableEntityException
    UpdateAccountConfigurationRequest:
      type: object
      properties:
        AccountConfiguration:
          $ref: '#/components/schemas/AccountConfiguration'
      description: List of account configuration parameters to update.
    UpdateAccountConfigurationResponse:
      type: object
      properties:
        AccountConfiguration:
          $ref: '#/components/schemas/AccountConfiguration'
      description: Placeholder documentation for UpdateAccountConfigurationResponse
    UpdateChannelClassRequest:
      type: object
      properties:
        ChannelClass:
          allOf:
          - $ref: '#/components/schemas/ChannelClass'
          description: The channel class that you wish to update this channel to use.
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Channel Id of the channel whose class should be updated.
        Destinations:
          allOf:
          - $ref: '#/components/schemas/__listOfOutputDestination'
          description: A list of output destinations for this channel.
      required:
      - ChannelClass
      - ChannelId
      description: Channel class that the channel should be updated to.
    UpdateChannelClassResponse:
      type: object
      properties:
        Channel:
          $ref: '#/components/schemas/Channel'
      description: Placeholder documentation for UpdateChannelClassResponse
    UpdateChannelPlacementGroupRequest:
      type: object
      properties:
        ChannelPlacementGroupId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the channel placement group.
        ClusterId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the cluster.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Include this parameter only if you want to change the current
            name of the ChannelPlacementGroup. Specify a name that is unique in the
            Cluster. You can't change the name. Names are case-sensitive.
        Nodes:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: Include this parameter only if you want to change the list
            of Nodes that are associated with the ChannelPlacementGroup.
      required:
      - ChannelPlacementGroupId
      - ClusterId
      description: A request to update the channel placement group
    UpdateChannelPlacementGroupResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of this ChannelPlacementGroup. It is automatically
            assigned when the ChannelPlacementGroup is created.
        Channels:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: Used in ListChannelPlacementGroupsResult
        ClusterId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the Cluster that the Node belongs to.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the ChannelPlacementGroup. Unique in the AWS account.
            The ID is the resource-id portion of the ARN.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name that you specified for the ChannelPlacementGroup.
        Nodes:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: An array with one item, which is the single Node that is associated
            with the ChannelPlacementGroup.
        State:
          allOf:
          - $ref: '#/components/schemas/ChannelPlacementGroupState'
          description: The current state of the ChannelPlacementGroup.
      description: Placeholder documentation for UpdateChannelPlacementGroupResponse
    UpdateChannelRequest:
      type: object
      properties:
        CdiInputSpecification:
          allOf:
          - $ref: '#/components/schemas/CdiInputSpecification'
          description: Specification of CDI inputs for this channel
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: channel ID
        Destinations:
          allOf:
          - $ref: '#/components/schemas/__listOfOutputDestination'
          description: A list of output destinations for this channel.
        EncoderSettings:
          allOf:
          - $ref: '#/components/schemas/EncoderSettings'
          description: The encoder settings for this channel.
        InputAttachments:
          $ref: '#/components/schemas/__listOfInputAttachment'
        InputSpecification:
          allOf:
          - $ref: '#/components/schemas/InputSpecification'
          description: Specification of network and file inputs for this channel
        LogLevel:
          allOf:
          - $ref: '#/components/schemas/LogLevel'
          description: The log level to write to CloudWatch Logs.
        Maintenance:
          allOf:
          - $ref: '#/components/schemas/MaintenanceUpdateSettings'
          description: Maintenance settings for this channel.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the channel.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: An optional Amazon Resource Name (ARN) of the role to assume
            when running the Channel. If you do not specify this on an update call
            but the role was previously set that role will be removed.
        ChannelEngineVersion:
          allOf:
          - $ref: '#/components/schemas/ChannelEngineVersionRequest'
          description: Channel engine version for this channel
        DryRun:
          $ref: '#/components/schemas/__boolean'
      required:
      - ChannelId
      description: A request to update a channel.
    UpdateChannelResponse:
      type: object
      properties:
        Channel:
          $ref: '#/components/schemas/Channel'
      description: Placeholder documentation for UpdateChannelResponse
    UpdateCloudWatchAlarmTemplateGroupRequest:
      type: object
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max1024'
          description: A resource's optional description.
        Identifier:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A cloudwatch alarm template group's identifier. Can be either
            be its id or current name.
      required:
      - Identifier
      description: Placeholder documentation for UpdateCloudWatchAlarmTemplateGroupRequest
    UpdateCloudWatchAlarmTemplateGroupResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__stringPatternArnMedialiveCloudwatchAlarmTemplateGroup'
          description: A cloudwatch alarm template group's ARN (Amazon Resource Name)
        CreatedAt:
          $ref: '#/components/schemas/__timestampIso8601'
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max1024'
          description: A resource's optional description.
        Id:
          allOf:
          - $ref: '#/components/schemas/__stringMin7Max11PatternAws097'
          description: A cloudwatch alarm template group's id. AWS provided template
            groups have ids that start with `aws-`
        ModifiedAt:
          $ref: '#/components/schemas/__timestampIso8601'
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max255PatternS'
          description: A resource's name. Names must be unique within the scope of
            a resource type in a specific region.
        Tags:
          $ref: '#/components/schemas/TagMap'
      description: Placeholder documentation for UpdateCloudWatchAlarmTemplateGroupResponse
    UpdateCloudWatchAlarmTemplateRequest:
      type: object
      properties:
        ComparisonOperator:
          $ref: '#/components/schemas/CloudWatchAlarmTemplateComparisonOperator'
        DatapointsToAlarm:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: The number of datapoints within the evaluation period that
            must be breaching to trigger the alarm.
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max1024'
          description: A resource's optional description.
        EvaluationPeriods:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: The number of periods over which data is compared to the specified
            threshold.
        GroupIdentifier:
          allOf:
          - $ref: '#/components/schemas/__stringPatternS'
          description: A cloudwatch alarm template group's identifier. Can be either
            be its id or current name.
        Identifier:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A cloudwatch alarm template's identifier. Can be either be
            its id or current name.
        MetricName:
          allOf:
          - $ref: '#/components/schemas/__stringMax64'
          description: The name of the metric associated with the alarm. Must be compatible
            with targetResourceType.
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max255PatternS'
          description: A resource's name. Names must be unique within the scope of
            a resource type in a specific region.
        Period:
          allOf:
          - $ref: '#/components/schemas/__integerMin10Max86400'
          description: The period, in seconds, over which the specified statistic
            is applied.
        Statistic:
          $ref: '#/components/schemas/CloudWatchAlarmTemplateStatistic'
        TargetResourceType:
          $ref: '#/components/schemas/CloudWatchAlarmTemplateTargetResourceType'
        Threshold:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: The threshold value to compare with the specified statistic.
        TreatMissingData:
          $ref: '#/components/schemas/CloudWatchAlarmTemplateTreatMissingData'
      required:
      - Identifier
      description: Placeholder documentation for UpdateCloudWatchAlarmTemplateRequest
    UpdateCloudWatchAlarmTemplateResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__stringPatternArnMedialiveCloudwatchAlarmTemplate'
          description: A cloudwatch alarm template's ARN (Amazon Resource Name)
        ComparisonOperator:
          $ref: '#/components/schemas/CloudWatchAlarmTemplateComparisonOperator'
        CreatedAt:
          $ref: '#/components/schemas/__timestampIso8601'
        DatapointsToAlarm:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: The number of datapoints within the evaluation period that
            must be breaching to trigger the alarm.
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max1024'
          description: A resource's optional description.
        EvaluationPeriods:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: The number of periods over which data is compared to the specified
            threshold.
        GroupId:
          allOf:
          - $ref: '#/components/schemas/__stringMin7Max11PatternAws097'
          description: A cloudwatch alarm template group's id. AWS provided template
            groups have ids that start with `aws-`
        Id:
          allOf:
          - $ref: '#/components/schemas/__stringMin7Max11PatternAws097'
          description: A cloudwatch alarm template's id. AWS provided templates have
            ids that start with `aws-`
        MetricName:
          allOf:
          - $ref: '#/components/schemas/__stringMax64'
          description: The name of the metric associated with the alarm. Must be compatible
            with targetResourceType.
        ModifiedAt:
          $ref: '#/components/schemas/__timestampIso8601'
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max255PatternS'
          description: A resource's name. Names must be unique within the scope of
            a resource type in a specific region.
        Period:
          allOf:
          - $ref: '#/components/schemas/__integerMin10Max86400'
          description: The period, in seconds, over which the specified statistic
            is applied.
        Statistic:
          $ref: '#/components/schemas/CloudWatchAlarmTemplateStatistic'
        Tags:
          $ref: '#/components/schemas/TagMap'
        TargetResourceType:
          $ref: '#/components/schemas/CloudWatchAlarmTemplateTargetResourceType'
        Threshold:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: The threshold value to compare with the specified statistic.
        TreatMissingData:
          $ref: '#/components/schemas/CloudWatchAlarmTemplateTreatMissingData'
      description: Placeholder documentation for UpdateCloudWatchAlarmTemplateResponse
    UpdateClusterRequest:
      type: object
      properties:
        ClusterId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the cluster
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Include this parameter only if you want to change the current
            name of the Cluster. Specify a name that is unique in the AWS account.
            You can't change the name. Names are case-sensitive.
        NetworkSettings:
          allOf:
          - $ref: '#/components/schemas/ClusterNetworkSettingsUpdateRequest'
          description: Include this property only if you want to change the current
            connections between the Nodes in the Cluster and the Networks the Cluster
            is associated with.
      required:
      - ClusterId
      description: A request to update the cluster.
    UpdateClusterResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the Cluster.
        ChannelIds:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: 'An array of the IDs of the Channels that are associated with
            this Cluster. One Channel is associated with the Cluster as follows: A
            Channel belongs to a ChannelPlacementGroup. A ChannelPlacementGroup is
            attached to a Node. A Node belongs to a Cluster.'
        ClusterType:
          allOf:
          - $ref: '#/components/schemas/ClusterType'
          description: The hardware type for the Cluster
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique ID of the Cluster.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The user-specified name of the Cluster.
        NetworkSettings:
          allOf:
          - $ref: '#/components/schemas/ClusterNetworkSettings'
          description: Network settings that connect the Nodes in the Cluster to one
            or more of the Networks that the Cluster is associated with.
        State:
          allOf:
          - $ref: '#/components/schemas/ClusterState'
          description: The current state of the Cluster.
      description: Placeholder documentation for UpdateClusterResponse
    UpdateEventBridgeRuleTemplateGroupRequest:
      type: object
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max1024'
          description: A resource's optional description.
        Identifier:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: An eventbridge rule template group's identifier. Can be either
            be its id or current name.
      required:
      - Identifier
      description: Placeholder documentation for UpdateEventBridgeRuleTemplateGroupRequest
    UpdateEventBridgeRuleTemplateGroupResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__stringPatternArnMedialiveEventbridgeRuleTemplateGroup'
          description: An eventbridge rule template group's ARN (Amazon Resource Name)
        CreatedAt:
          $ref: '#/components/schemas/__timestampIso8601'
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max1024'
          description: A resource's optional description.
        Id:
          allOf:
          - $ref: '#/components/schemas/__stringMin7Max11PatternAws097'
          description: An eventbridge rule template group's id. AWS provided template
            groups have ids that start with `aws-`
        ModifiedAt:
          $ref: '#/components/schemas/__timestampIso8601'
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max255PatternS'
          description: A resource's name. Names must be unique within the scope of
            a resource type in a specific region.
        Tags:
          $ref: '#/components/schemas/TagMap'
      description: Placeholder documentation for UpdateEventBridgeRuleTemplateGroupResponse
    UpdateEventBridgeRuleTemplateRequest:
      type: object
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max1024'
          description: A resource's optional description.
        EventTargets:
          $ref: '#/components/schemas/__listOfEventBridgeRuleTemplateTarget'
        EventType:
          $ref: '#/components/schemas/EventBridgeRuleTemplateEventType'
        GroupIdentifier:
          allOf:
          - $ref: '#/components/schemas/__stringPatternS'
          description: An eventbridge rule template group's identifier. Can be either
            be its id or current name.
        Identifier:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: An eventbridge rule template's identifier. Can be either be
            its id or current name.
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max255PatternS'
          description: A resource's name. Names must be unique within the scope of
            a resource type in a specific region.
      required:
      - Identifier
      description: Placeholder documentation for UpdateEventBridgeRuleTemplateRequest
    UpdateEventBridgeRuleTemplateResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__stringPatternArnMedialiveEventbridgeRuleTemplate'
          description: An eventbridge rule template's ARN (Amazon Resource Name)
        CreatedAt:
          $ref: '#/components/schemas/__timestampIso8601'
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMin0Max1024'
          description: A resource's optional description.
        EventTargets:
          $ref: '#/components/schemas/__listOfEventBridgeRuleTemplateTarget'
        EventType:
          $ref: '#/components/schemas/EventBridgeRuleTemplateEventType'
        GroupId:
          allOf:
          - $ref: '#/components/schemas/__stringMin7Max11PatternAws097'
          description: An eventbridge rule template group's id. AWS provided template
            groups have ids that start with `aws-`
        Id:
          allOf:
          - $ref: '#/components/schemas/__stringMin7Max11PatternAws097'
          description: An eventbridge rule template's id. AWS provided templates have
            ids that start with `aws-`
        ModifiedAt:
          $ref: '#/components/schemas/__timestampIso8601'
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max255PatternS'
          description: A resource's name. Names must be unique within the scope of
            a resource type in a specific region.
        Tags:
          $ref: '#/components/schemas/TagMap'
      description: Placeholder documentation for UpdateEventBridgeRuleTemplateResponse
    UpdateInputDeviceRequest:
      type: object
      properties:
        HdDeviceSettings:
          allOf:
          - $ref: '#/components/schemas/InputDeviceConfigurableSettings'
          description: The settings that you want to apply to the HD input device.
        InputDeviceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique ID of the input device. For example, hd-123456789abcdef.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name that you assigned to this input device (not the unique
            ID).
        UhdDeviceSettings:
          allOf:
          - $ref: '#/components/schemas/InputDeviceConfigurableSettings'
          description: The settings that you want to apply to the UHD input device.
        AvailabilityZone:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Availability Zone you want associated with this input device.
      required:
      - InputDeviceId
      description: A request to update an input device.
    UpdateInputDeviceResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique ARN of the input device.
        ConnectionState:
          allOf:
          - $ref: '#/components/schemas/InputDeviceConnectionState'
          description: The state of the connection between the input device and AWS.
        DeviceSettingsSyncState:
          allOf:
          - $ref: '#/components/schemas/DeviceSettingsSyncState'
          description: The status of the action to synchronize the device configuration.
            If you change the configuration of the input device (for example, the
            maximum bitrate), MediaLive sends the new data to the device. The device
            might not update itself immediately. SYNCED means the device has updated
            its configuration. SYNCING means that it has not updated its configuration.
        DeviceUpdateStatus:
          allOf:
          - $ref: '#/components/schemas/DeviceUpdateStatus'
          description: The status of software on the input device.
        HdDeviceSettings:
          allOf:
          - $ref: '#/components/schemas/InputDeviceHdSettings'
          description: Settings that describe an input device that is type HD.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique ID of the input device.
        MacAddress:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The network MAC address of the input device.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A name that you specify for the input device.
        NetworkSettings:
          allOf:
          - $ref: '#/components/schemas/InputDeviceNetworkSettings'
          description: The network settings for the input device.
        SerialNumber:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique serial number of the input device.
        Type:
          allOf:
          - $ref: '#/components/schemas/InputDeviceType'
          description: The type of the input device.
        UhdDeviceSettings:
          allOf:
          - $ref: '#/components/schemas/InputDeviceUhdSettings'
          description: Settings that describe an input device that is type UHD.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A collection of key-value pairs.
        AvailabilityZone:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Availability Zone associated with this input device.
        MedialiveInputArns:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: An array of the ARNs for the MediaLive inputs attached to the
            device. Returned only if the outputType is MEDIALIVE_INPUT.
        OutputType:
          allOf:
          - $ref: '#/components/schemas/InputDeviceOutputType'
          description: The output attachment type of the input device. Specifies MEDIACONNECT_FLOW
            if this device is the source for a MediaConnect flow. Specifies MEDIALIVE_INPUT
            if this device is the source for a MediaLive input.
      description: Placeholder documentation for UpdateInputDeviceResponse
    UpdateInputRequest:
      type: object
      properties:
        Destinations:
          allOf:
          - $ref: '#/components/schemas/__listOfInputDestinationRequest'
          description: Destination settings for PUSH type inputs.
        InputDevices:
          allOf:
          - $ref: '#/components/schemas/__listOfInputDeviceRequest'
          description: Settings for the devices.
        InputId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Unique ID of the input.
        InputSecurityGroups:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: A list of security groups referenced by IDs to attach to the
            input.
        MediaConnectFlows:
          allOf:
          - $ref: '#/components/schemas/__listOfMediaConnectFlowRequest'
          description: A list of the MediaConnect Flow ARNs that you want to use as
            the source of the input. You can specify as few as one Flow and presently,
            as many as two. The only requirement is when you have more than one is
            that each Flow is in a separate Availability Zone as this ensures your
            EML input is redundant to AZ issues.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Name of the input.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the role this input assumes
            during and after creation.
        Sources:
          allOf:
          - $ref: '#/components/schemas/__listOfInputSourceRequest'
          description: The source URLs for a PULL-type input. Every PULL type input
            needs exactly two source URLs for redundancy. Only specify sources for
            PULL type Inputs. Leave Destinations empty.
        SrtSettings:
          allOf:
          - $ref: '#/components/schemas/SrtSettingsRequest'
          description: The settings associated with an SRT input.
        MulticastSettings:
          allOf:
          - $ref: '#/components/schemas/MulticastSettingsUpdateRequest'
          description: Multicast Input settings.
        Smpte2110ReceiverGroupSettings:
          allOf:
          - $ref: '#/components/schemas/Smpte2110ReceiverGroupSettings'
          description: Include this parameter if the input is a SMPTE 2110 input,
            to identify the stream sources for this input.
        SdiSources:
          $ref: '#/components/schemas/InputSdiSources'
      required:
      - InputId
      description: A request to update an input.
    UpdateInputResponse:
      type: object
      properties:
        Input:
          $ref: '#/components/schemas/Input'
      description: Placeholder documentation for UpdateInputResponse
    UpdateInputSecurityGroupRequest:
      type: object
      properties:
        InputSecurityGroupId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The id of the Input Security Group to update.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A collection of key-value pairs.
        WhitelistRules:
          allOf:
          - $ref: '#/components/schemas/__listOfInputWhitelistRuleCidr'
          description: List of IPv4 CIDR addresses to whitelist
      required:
      - InputSecurityGroupId
      description: The request to update some combination of the Input Security Group
        name and the IPv4 CIDRs the Input Security Group should allow.
    UpdateInputSecurityGroupResponse:
      type: object
      properties:
        SecurityGroup:
          $ref: '#/components/schemas/InputSecurityGroup'
      description: Placeholder documentation for UpdateInputSecurityGroupResponse
    UpdateMultiplexProgramRequest:
      type: object
      properties:
        MultiplexId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the multiplex of the program to update.
        MultiplexProgramSettings:
          allOf:
          - $ref: '#/components/schemas/MultiplexProgramSettings'
          description: The new settings for a multiplex program.
        ProgramName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the program to update.
      required:
      - MultiplexId
      - ProgramName
      description: A request to update a program in a multiplex.
    UpdateMultiplexProgramResponse:
      type: object
      properties:
        MultiplexProgram:
          allOf:
          - $ref: '#/components/schemas/MultiplexProgram'
          description: The updated multiplex program.
      description: Placeholder documentation for UpdateMultiplexProgramResponse
    UpdateMultiplexRequest:
      type: object
      properties:
        MultiplexId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: ID of the multiplex to update.
        MultiplexSettings:
          allOf:
          - $ref: '#/components/schemas/MultiplexSettings'
          description: The new settings for a multiplex.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Name of the multiplex.
        PacketIdentifiersMapping:
          $ref: '#/components/schemas/MultiplexPacketIdentifiersMapping'
      required:
      - MultiplexId
      description: A request to update a multiplex.
    UpdateMultiplexResponse:
      type: object
      properties:
        Multiplex:
          allOf:
          - $ref: '#/components/schemas/Multiplex'
          description: The updated multiplex.
      description: Placeholder documentation for UpdateMultiplexResponse
    UpdateNetworkRequest:
      type: object
      properties:
        IpPools:
          allOf:
          - $ref: '#/components/schemas/__listOfIpPoolUpdateRequest'
          description: Include this parameter only if you want to change the pool
            of IP addresses in the network. An array of IpPoolCreateRequests that
            identify a collection of IP addresses in this network that you want to
            reserve for use in MediaLive Anywhere. MediaLive Anywhere uses these IP
            addresses for Push inputs (in both Bridge and NAT networks) and for output
            destinations (only in Bridge networks). Each IpPoolUpdateRequest specifies
            one CIDR block.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Include this parameter only if you want to change the name
            of the Network. Specify a name that is unique in the AWS account. Names
            are case-sensitive.
        NetworkId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the network
        Routes:
          allOf:
          - $ref: '#/components/schemas/__listOfRouteUpdateRequest'
          description: Include this parameter only if you want to change or add routes
            in the Network. An array of Routes that MediaLive Anywhere needs to know
            about in order to route encoding traffic.
      required:
      - NetworkId
      description: A request to update the network.
    UpdateNetworkResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of this Network. It is automatically assigned when
            the Network is created.
        AssociatedClusterIds:
          $ref: '#/components/schemas/__listOf__string'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the Network. Unique in the AWS account. The ID is
            the resource-id portion of the ARN.
        IpPools:
          allOf:
          - $ref: '#/components/schemas/__listOfIpPool'
          description: An array of IpPools in your organization's network that identify
            a collection of IP addresses in this network that are reserved for use
            in MediaLive Anywhere. MediaLive Anywhere uses these IP addresses for
            Push inputs (in both Bridge and NAT networks) and for output destinations
            (only in Bridge networks). Each IpPool specifies one CIDR block.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name that you specified for the Network.
        Routes:
          allOf:
          - $ref: '#/components/schemas/__listOfRoute'
          description: An array of Routes that MediaLive Anywhere needs to know about
            in order to route encoding traffic.
        State:
          allOf:
          - $ref: '#/components/schemas/NetworkState'
          description: The current state of the Network. Only MediaLive Anywhere can
            change the state.
      description: Placeholder documentation for UpdateNetworkResponse
    UpdateNodeRequest:
      type: object
      properties:
        ClusterId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the cluster
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Include this parameter only if you want to change the current
            name of the Node. Specify a name that is unique in the Cluster. You can't
            change the name. Names are case-sensitive.
        NodeId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the node.
        Role:
          allOf:
          - $ref: '#/components/schemas/NodeRole'
          description: The initial role of the Node in the Cluster. ACTIVE means the
            Node is available for encoding. BACKUP means the Node is a redundant Node
            and might get used if an ACTIVE Node fails.
        SdiSourceMappings:
          allOf:
          - $ref: '#/components/schemas/SdiSourceMappingsUpdateRequest'
          description: The mappings of a SDI capture card port to a logical SDI data
            stream
      required:
      - ClusterId
      - NodeId
      description: A request to update the node.
    UpdateNodeResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the Node. It is automatically assigned when the
            Node is created.
        ChannelPlacementGroups:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: An array of IDs. Each ID is one ChannelPlacementGroup that
            is associated with this Node. Empty if the Node is not yet associated
            with any groups.
        ClusterId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the Cluster that the Node belongs to.
        ConnectionState:
          allOf:
          - $ref: '#/components/schemas/NodeConnectionState'
          description: The current connection state of the Node.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique ID of the Node. Unique in the Cluster. The ID is
            the resource-id portion of the ARN.
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the EC2 instance hosting the Node.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name that you specified for the Node.
        NodeInterfaceMappings:
          allOf:
          - $ref: '#/components/schemas/__listOfNodeInterfaceMapping'
          description: Documentation update needed
        Role:
          allOf:
          - $ref: '#/components/schemas/NodeRole'
          description: The initial role current role of the Node in the Cluster. ACTIVE
            means the Node is available for encoding. BACKUP means the Node is a redundant
            Node and might get used if an ACTIVE Node fails.
        State:
          allOf:
          - $ref: '#/components/schemas/NodeState'
          description: The current state of the Node.
        SdiSourceMappings:
          allOf:
          - $ref: '#/components/schemas/SdiSourceMappings'
          description: An array of SDI source mappings. Each mapping connects one
            logical SdiSource to the physical SDI card and port that the physical
            SDI source uses.
      description: Placeholder documentation for UpdateNodeResponse
    UpdateNodeStateRequest:
      type: object
      properties:
        ClusterId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the cluster
        NodeId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the node.
        State:
          allOf:
          - $ref: '#/components/schemas/UpdateNodeStateShape'
          description: The state to apply to the Node. Set to ACTIVE (COMMISSIONED)
            to indicate that the Node is deployable. MediaLive Anywhere will consider
            this node it needs a Node to run a Channel on, or when it needs a Node
            to promote from a backup node to an active node. Set to DRAINING to isolate
            the Node so that MediaLive Anywhere won't use it.
      required:
      - ClusterId
      - NodeId
      description: A request to update the state of a node.
    UpdateNodeStateResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the Node. It is automatically assigned when the
            Node is created.
        ChannelPlacementGroups:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: An array of IDs. Each ID is one ChannelPlacementGroup that
            is associated with this Node. Empty if the Node is not yet associated
            with any groups.
        ClusterId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the Cluster that the Node belongs to.
        ConnectionState:
          allOf:
          - $ref: '#/components/schemas/NodeConnectionState'
          description: The current connection state of the Node.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique ID of the Node. Unique in the Cluster. The ID is
            the resource-id portion of the ARN.
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the EC2 instance hosting the Node.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name that you specified for the Node.
        NodeInterfaceMappings:
          allOf:
          - $ref: '#/components/schemas/__listOfNodeInterfaceMapping'
          description: Documentation update needed
        Role:
          allOf:
          - $ref: '#/components/schemas/NodeRole'
          description: The initial role current role of the Node in the Cluster. ACTIVE
            means the Node is available for encoding. BACKUP means the Node is a redundant
            Node and might get used if an ACTIVE Node fails.
        State:
          allOf:
          - $ref: '#/components/schemas/NodeState'
          description: The current state of the Node.
        SdiSourceMappings:
          allOf:
          - $ref: '#/components/schemas/SdiSourceMappings'
          description: An array of SDI source mappings. Each mapping connects one
            logical SdiSource to the physical SDI card and port that the physical
            SDI source uses.
      description: Placeholder documentation for UpdateNodeStateResponse
    UpdateNodeStateShape:
      type: string
      enum:
      - ACTIVE
      - DRAINING
      description: Used in UpdateNodeStateRequest.
    UpdateReservationRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Name of the reservation
        RenewalSettings:
          allOf:
          - $ref: '#/components/schemas/RenewalSettings'
          description: Renewal settings for the reservation
        ReservationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Unique reservation ID, e.g. '1234567'
      required:
      - ReservationId
      description: Request to update a reservation
    UpdateReservationResponse:
      type: object
      properties:
        Reservation:
          $ref: '#/components/schemas/Reservation'
      description: Placeholder documentation for UpdateReservationResponse
    UpdateSdiSourceRequest:
      type: object
      properties:
        Mode:
          allOf:
          - $ref: '#/components/schemas/SdiSourceMode'
          description: Include this parameter only if you want to change the name
            of the SdiSource. Specify a name that is unique in the AWS account. We
            recommend you assign a name that describes the source, for example curling-cameraA.
            Names are case-sensitive.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Include this parameter only if you want to change the name
            of the SdiSource. Specify a name that is unique in the AWS account. We
            recommend you assign a name that describes the source, for example curling-cameraA.
            Names are case-sensitive.
        SdiSourceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the SdiSource
        Type:
          allOf:
          - $ref: '#/components/schemas/SdiSourceType'
          description: 'Include this parameter only if you want to change the mode.
            Specify the type of the SDI source: SINGLE: The source is a single-link
            source. QUAD: The source is one part of a quad-link source.'
      required:
      - SdiSourceId
      description: A request to update the SdiSource.
    UpdateSdiSourceResponse:
      type: object
      properties:
        SdiSource:
          allOf:
          - $ref: '#/components/schemas/SdiSource'
          description: Settings for the SDI source.
      description: Placeholder documentation for UpdateSdiSourceResponse
    ValidationError:
      type: object
      properties:
        ElementPath:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Path to the source of the error.
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The error message.
      description: Placeholder documentation for ValidationError
    VideoBlackFailoverSettings:
      type: object
      properties:
        BlackDetectThreshold:
          allOf:
          - $ref: '#/components/schemas/__doubleMin0Max1'
          description: 'A value used in calculating the threshold below which MediaLive
            considers a pixel to be ''black''. For the input to be considered black,
            every pixel in a frame must be below this threshold. The threshold is
            calculated as a percentage (expressed as a decimal) of white. Therefore
            .1 means 10% white (or 90% black). Note how the formula works for any
            color depth. For example, if you set this field to 0.1 in 10-bit color
            depth: (1023*0.1=102.3), which means a pixel value of 102 or less is ''black''.
            If you set this field to .1 in an 8-bit color depth: (255*0.1=25.5), which
            means a pixel value of 25 or less is ''black''. The range is 0.0 to 1.0,
            with any number of decimal places.'
        VideoBlackThresholdMsec:
          allOf:
          - $ref: '#/components/schemas/__integerMin1000'
          description: The amount of time (in milliseconds) that the active input
            must be black before automatic input failover occurs.
      description: Placeholder documentation for VideoBlackFailoverSettings
    VideoCodecSettings:
      type: object
      properties:
        FrameCaptureSettings:
          $ref: '#/components/schemas/FrameCaptureSettings'
        H264Settings:
          $ref: '#/components/schemas/H264Settings'
        H265Settings:
          $ref: '#/components/schemas/H265Settings'
        Mpeg2Settings:
          $ref: '#/components/schemas/Mpeg2Settings'
        Av1Settings:
          $ref: '#/components/schemas/Av1Settings'
      description: Video Codec Settings
    VideoDescription:
      type: object
      properties:
        CodecSettings:
          allOf:
          - $ref: '#/components/schemas/VideoCodecSettings'
          description: Video codec settings.
        Height:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Output video height, in pixels. Must be an even number. For
            most codecs, you can leave this field and width blank in order to use
            the height and width (resolution) from the source. Note, however, that
            leaving blank is not recommended. For the Frame Capture codec, height
            and width are required.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of this VideoDescription. Outputs will use this name
            to uniquely identify this Description. Description names should be unique
            within this Live Event.
        RespondToAfd:
          allOf:
          - $ref: '#/components/schemas/VideoDescriptionRespondToAfd'
          description: 'Indicates how MediaLive will respond to the AFD values that
            might be in the input video. If you do not know what AFD signaling is,
            or if your downstream system has not given you guidance, choose PASSTHROUGH.
            RESPOND: MediaLive clips the input video using a formula that uses the
            AFD values (configured in afdSignaling ), the input display aspect ratio,
            and the output display aspect ratio. MediaLive also includes the AFD values
            in the output, unless the codec for this encode is FRAME_CAPTURE. PASSTHROUGH:
            MediaLive ignores the AFD values and does not clip the video. But MediaLive
            does include the values in the output. NONE: MediaLive does not clip the
            input video and does not include the AFD values in the output'
        ScalingBehavior:
          allOf:
          - $ref: '#/components/schemas/VideoDescriptionScalingBehavior'
          description: STRETCH_TO_OUTPUT configures the output position to stretch
            the video to the specified output resolution (height and width). This
            option will override any position value. DEFAULT may insert black boxes
            (pillar boxes or letter boxes) around the video to provide the specified
            output resolution.
        Sharpness:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max100'
          description: Changes the strength of the anti-alias filter used for scaling.
            0 is the softest setting, 100 is the sharpest. A setting of 50 is recommended
            for most content.
        Width:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Output video width, in pixels. Must be an even number. For
            most codecs, you can leave this field and height blank in order to use
            the height and width (resolution) from the source. Note, however, that
            leaving blank is not recommended. For the Frame Capture codec, height
            and width are required.
      required:
      - Name
      description: Video settings for this stream.
    VideoDescriptionRespondToAfd:
      type: string
      enum:
      - NONE
      - PASSTHROUGH
      - RESPOND
      description: Video Description Respond To Afd
    VideoDescriptionScalingBehavior:
      type: string
      enum:
      - DEFAULT
      - STRETCH_TO_OUTPUT
      description: Video Description Scaling Behavior
    VideoSelector:
      type: object
      properties:
        ColorSpace:
          allOf:
          - $ref: '#/components/schemas/VideoSelectorColorSpace'
          description: Specifies the color space of an input. This setting works in
            tandem with colorSpaceUsage and a video description's colorSpaceSettingsChoice
            to determine if any conversion will be performed.
        ColorSpaceSettings:
          allOf:
          - $ref: '#/components/schemas/VideoSelectorColorSpaceSettings'
          description: Color space settings
        ColorSpaceUsage:
          allOf:
          - $ref: '#/components/schemas/VideoSelectorColorSpaceUsage'
          description: Applies only if colorSpace is a value other than follow. This
            field controls how the value in the colorSpace field will be used. fallback
            means that when the input does include color space data, that data will
            be used, but when the input has no color space data, the value in colorSpace
            will be used. Choose fallback if your input is sometimes missing color
            space data, but when it does have color space data, that data is correct.
            force means to always use the value in colorSpace. Choose force if your
            input usually has no color space data or might have unreliable color space
            data.
        SelectorSettings:
          allOf:
          - $ref: '#/components/schemas/VideoSelectorSettings'
          description: The video selector settings.
      description: Specifies a particular video stream within an input source. An
        input may have only a single video selector.
    VideoSelectorColorSpace:
      type: string
      enum:
      - FOLLOW
      - HDR10
      - HLG_2020
      - REC_601
      - REC_709
      description: Video Selector Color Space
    VideoSelectorColorSpaceSettings:
      type: object
      properties:
        Hdr10Settings:
          $ref: '#/components/schemas/Hdr10Settings'
      description: Video Selector Color Space Settings
    VideoSelectorColorSpaceUsage:
      type: string
      enum:
      - FALLBACK
      - FORCE
      description: Video Selector Color Space Usage
    VideoSelectorPid:
      type: object
      properties:
        Pid:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max8191'
          description: Selects a specific PID from within a video source.
      description: Video Selector Pid
    VideoSelectorProgramId:
      type: object
      properties:
        ProgramId:
          allOf:
          - $ref: '#/components/schemas/__integerMin0Max65536'
          description: Selects a specific program from within a multi-program transport
            stream. If the program doesn't exist, the first program within the transport
            stream will be selected by default.
      description: Video Selector Program Id
    VideoSelectorSettings:
      type: object
      properties:
        VideoSelectorPid:
          $ref: '#/components/schemas/VideoSelectorPid'
        VideoSelectorProgramId:
          $ref: '#/components/schemas/VideoSelectorProgramId'
      description: Video Selector Settings
    VpcOutputSettings:
      type: object
      properties:
        PublicAddressAllocationIds:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: List of public address allocation ids to associate with ENIs
            that will be created in Output VPC. Must specify one for SINGLE_PIPELINE,
            two for STANDARD channels
        SecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: A list of up to 5 EC2 VPC security group IDs to attach to the
            Output VPC network interfaces. If none are specified then the VPC default
            security group will be used
        SubnetIds:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: A list of VPC subnet IDs from the same VPC. If STANDARD channel,
            subnet IDs must be mapped to two unique availability zones (AZ).
      required:
      - SubnetIds
      description: The properties for a private VPC Output When this property is specified,
        the output egress addresses will be created in a user specified VPC
    VpcOutputSettingsDescription:
      type: object
      properties:
        AvailabilityZones:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: The Availability Zones where the vpc subnets are located. The
            first Availability Zone applies to the first subnet in the list of subnets.
            The second Availability Zone applies to the second subnet.
        NetworkInterfaceIds:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: A list of Elastic Network Interfaces created by MediaLive in
            the customer's VPC
        SecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: A list of up EC2 VPC security group IDs attached to the Output
            VPC network interfaces.
        SubnetIds:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: A list of VPC subnet IDs from the same VPC. If STANDARD channel,
            subnet IDs must be mapped to two unique availability zones (AZ).
      description: The properties for a private VPC Output
    WavCodingMode:
      type: string
      enum:
      - CODING_MODE_1_0
      - CODING_MODE_2_0
      - CODING_MODE_4_0
      - CODING_MODE_8_0
      description: Wav Coding Mode
    WavSettings:
      type: object
      properties:
        BitDepth:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: Bits per sample.
        CodingMode:
          allOf:
          - $ref: '#/components/schemas/WavCodingMode'
          description: The audio coding mode for the WAV audio. The mode determines
            the number of channels in the audio.
        SampleRate:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: Sample rate in Hz.
      description: Wav Settings
    WebvttDestinationSettings:
      type: object
      properties:
        StyleControl:
          allOf:
          - $ref: '#/components/schemas/WebvttDestinationStyleControl'
          description: Controls whether the color and position of the source captions
            is passed through to the WebVTT output captions. PASSTHROUGH - Valid only
            if the source captions are EMBEDDED or TELETEXT. NO_STYLE_DATA - Don't
            pass through the style. The output captions will not contain any font
            styling information.
      description: Webvtt Destination Settings
    WebvttDestinationStyleControl:
      type: string
      enum:
      - NO_STYLE_DATA
      - PASSTHROUGH
      description: Webvtt Destination Style Control
    __boolean:
      type: boolean
      description: Placeholder documentation for __boolean
    __double:
      type: number
      format: double
      description: Placeholder documentation for __double
    __doubleMin0:
      type: number
      format: double
      description: Placeholder documentation for __doubleMin0
    __doubleMin0Max1:
      type: number
      format: double
      description: Placeholder documentation for __doubleMin0Max1
    __doubleMin0Max100:
      type: number
      format: double
      description: Placeholder documentation for __doubleMin0Max100
    __doubleMin0Max5000:
      type: number
      format: double
      description: Placeholder documentation for __doubleMin0Max5000
    __doubleMin1:
      type: number
      format: double
      description: Placeholder documentation for __doubleMin1
    __doubleMin1Max65535:
      type: number
      format: double
      description: Placeholder documentation for __doubleMin1Max65535
    __doubleMinNegative59Max0:
      type: number
      format: double
      description: Placeholder documentation for __doubleMinNegative59Max0
    __integer:
      type: integer
      description: Placeholder documentation for __integer
    __integerMax5:
      type: integer
      maximum: 5
      description: Placeholder documentation for __integerMax5
    __integerMin0:
      type: integer
      minimum: 0
      description: Placeholder documentation for __integerMin0
    __integerMin0Max10:
      type: integer
      minimum: 0
      maximum: 10
      description: Placeholder documentation for __integerMin0Max10
    __integerMin0Max100:
      type: integer
      minimum: 0
      maximum: 100
      description: Placeholder documentation for __integerMin0Max100
    __integerMin0Max1000:
      type: integer
      minimum: 0
      maximum: 1000
      description: Placeholder documentation for __integerMin0Max1000
    __integerMin0Max10000:
      type: integer
      minimum: 0
      maximum: 10000
      description: Placeholder documentation for __integerMin0Max10000
    __integerMin0Max1000000:
      type: integer
      minimum: 0
      maximum: 1000000
      description: Placeholder documentation for __integerMin0Max1000000
    __integerMin0Max100000000:
      type: integer
      minimum: 0
      maximum: 100000000
      description: Placeholder documentation for __integerMin0Max100000000
    __integerMin0Max128:
      type: integer
      minimum: 0
      maximum: 128
      description: Placeholder documentation for __integerMin0Max128
    __integerMin0Max15:
      type: integer
      minimum: 0
      maximum: 15
      description: Placeholder documentation for __integerMin0Max15
    __integerMin0Max2000:
      type: integer
      minimum: 0
      maximum: 2000
      description: Placeholder documentation for __integerMin0Max2000
    __integerMin0Max255:
      type: integer
      minimum: 0
      maximum: 255
      description: Placeholder documentation for __integerMin0Max255
    __integerMin0Max30:
      type: integer
      minimum: 0
      maximum: 30
      description: Placeholder documentation for __integerMin0Max30
    __integerMin0Max32768:
      type: integer
      minimum: 0
      maximum: 32768
      description: Placeholder documentation for __integerMin0Max32768
    __integerMin0Max3600:
      type: integer
      minimum: 0
      maximum: 3600
      description: Placeholder documentation for __integerMin0Max3600
    __integerMin0Max500:
      type: integer
      minimum: 0
      maximum: 500
      description: Placeholder documentation for __integerMin0Max500
    __integerMin0Max600:
      type: integer
      minimum: 0
      maximum: 600
      description: Placeholder documentation for __integerMin0Max600
    __integerMin0Max65535:
      type: integer
      minimum: 0
      maximum: 65535
      description: Placeholder documentation for __integerMin0Max65535
    __integerMin0Max65536:
      type: integer
      minimum: 0
      maximum: 65536
      description: Placeholder documentation for __integerMin0Max65536
    __integerMin0Max7:
      type: integer
      minimum: 0
      maximum: 7
      description: Placeholder documentation for __integerMin0Max7
    __integerMin0Max8191:
      type: integer
      minimum: 0
      maximum: 8191
      description: Placeholder documentation for __integerMin0Max8191
    __integerMin1:
      type: integer
      minimum: 1
      description: Placeholder documentation for __integerMin1
    __integerMin100:
      type: integer
      minimum: 100
      description: Placeholder documentation for __integerMin100
    __integerMin1000:
      type: integer
      minimum: 1000
      description: Placeholder documentation for __integerMin1000
    __integerMin1000000Max100000000:
      type: integer
      minimum: 1000000
      maximum: 100000000
      description: Placeholder documentation for __integerMin1000000Max100000000
    __integerMin100000Max100000000:
      type: integer
      minimum: 100000
      maximum: 100000000
      description: Placeholder documentation for __integerMin100000Max100000000
    __integerMin100000Max40000000:
      type: integer
      minimum: 100000
      maximum: 40000000
      description: Placeholder documentation for __integerMin100000Max40000000
    __integerMin100000Max80000000:
      type: integer
      minimum: 100000
      maximum: 80000000
      description: Placeholder documentation for __integerMin100000Max80000000
    __integerMin1000Max30000:
      type: integer
      minimum: 1000
      maximum: 30000
      description: Placeholder documentation for __integerMin1000Max30000
    __integerMin10Max86400:
      type: integer
      minimum: 10
      maximum: 86400
      description: Placeholder documentation for __integerMin10Max86400
    __integerMin1Max10:
      type: integer
      minimum: 1
      maximum: 10
      description: Placeholder documentation for __integerMin1Max10
    __integerMin1Max1000000:
      type: integer
      minimum: 1
      maximum: 1000000
      description: Placeholder documentation for __integerMin1Max1000000
    __integerMin1Max16:
      type: integer
      minimum: 1
      maximum: 16
      description: Placeholder documentation for __integerMin1Max16
    __integerMin1Max20:
      type: integer
      minimum: 1
      maximum: 20
      description: Placeholder documentation for __integerMin1Max20
    __integerMin1Max3003:
      type: integer
      minimum: 1
      maximum: 3003
      description: Placeholder documentation for __integerMin1Max3003
    __integerMin1Max31:
      type: integer
      minimum: 1
      maximum: 31
      description: Placeholder documentation for __integerMin1Max31
    __integerMin1Max32:
      type: integer
      minimum: 1
      maximum: 32
      description: Placeholder documentation for __integerMin1Max32
    __integerMin1Max3600000:
      type: integer
      minimum: 1
      maximum: 3600000
      description: Placeholder documentation for __integerMin1Max3600000
    __integerMin1Max4:
      type: integer
      minimum: 1
      maximum: 4
      description: Placeholder documentation for __integerMin1Max4
    __integerMin1Max5:
      type: integer
      minimum: 1
      maximum: 5
      description: Placeholder documentation for __integerMin1Max5
    __integerMin1Max51:
      type: integer
      minimum: 1
      maximum: 51
      description: Placeholder documentation for __integerMin1Max51
    __integerMin1Max6:
      type: integer
      minimum: 1
      maximum: 6
      description: Placeholder documentation for __integerMin1Max6
    __integerMin1Max8:
      type: integer
      minimum: 1
      maximum: 8
      description: Placeholder documentation for __integerMin1Max8
    __integerMin1Max800:
      type: integer
      minimum: 1
      maximum: 800
      description: Placeholder documentation for __integerMin1Max800
    __integerMin256Max3840:
      type: integer
      minimum: 256
      maximum: 3840
      description: Placeholder documentation for __integerMin256Max3840
    __integerMin25Max10000:
      type: integer
      minimum: 25
      maximum: 10000
      description: Placeholder documentation for __integerMin25Max10000
    __integerMin25Max2000:
      type: integer
      minimum: 25
      maximum: 2000
      description: Placeholder documentation for __integerMin25Max2000
    __integerMin3:
      type: integer
      minimum: 3
      description: Placeholder documentation for __integerMin3
    __integerMin30:
      type: integer
      minimum: 30
      description: Placeholder documentation for __integerMin30
    __integerMin32Max8191:
      type: integer
      minimum: 32
      maximum: 8191
      description: Placeholder documentation for __integerMin32Max8191
    __integerMin40Max16000:
      type: integer
      minimum: 40
      maximum: 16000
      description: Placeholder documentation for __integerMin40Max16000
    __integerMin4Max20:
      type: integer
      minimum: 4
      maximum: 20
      description: Placeholder documentation for __integerMin4Max20
    __integerMin50000Max16000000:
      type: integer
      minimum: 50000
      maximum: 16000000
      description: Placeholder documentation for __integerMin50000Max16000000
    __integerMin50000Max8000000:
      type: integer
      minimum: 50000
      maximum: 8000000
      description: Placeholder documentation for __integerMin50000Max8000000
    __integerMin64Max2160:
      type: integer
      minimum: 64
      maximum: 2160
      description: Placeholder documentation for __integerMin64Max2160
    __integerMin800Max3000:
      type: integer
      minimum: 800
      maximum: 3000
      description: Placeholder documentation for __integerMin800Max3000
    __integerMin80Max800:
      type: integer
      minimum: 80
      maximum: 800
      description: Placeholder documentation for __integerMin80Max800
    __integerMin96Max600:
      type: integer
      minimum: 96
      maximum: 600
      description: Placeholder documentation for __integerMin96Max600
    __integerMinNegative1000Max1000:
      type: integer
      minimum: -1000
      maximum: 1000
      description: Placeholder documentation for __integerMinNegative1000Max1000
    __integerMinNegative5Max5:
      type: integer
      minimum: -5
      maximum: 5
      description: Placeholder documentation for __integerMinNegative5Max5
    __integerMinNegative60Max6:
      type: integer
      minimum: -60
      maximum: 6
      description: Placeholder documentation for __integerMinNegative60Max6
    __integerMinNegative60Max60:
      type: integer
      minimum: -60
      maximum: 60
      description: Placeholder documentation for __integerMinNegative60Max60
    __listOfAudioChannelMapping:
      type: array
      items:
        $ref: '#/components/schemas/AudioChannelMapping'
      description: Placeholder documentation for __listOfAudioChannelMapping
    __listOfAudioDescription:
      type: array
      items:
        $ref: '#/components/schemas/AudioDescription'
      description: Placeholder documentation for __listOfAudioDescription
    __listOfAudioSelector:
      type: array
      items:
        $ref: '#/components/schemas/AudioSelector'
      description: Placeholder documentation for __listOfAudioSelector
    __listOfAudioTrack:
      type: array
      items:
        $ref: '#/components/schemas/AudioTrack'
      description: Placeholder documentation for __listOfAudioTrack
    __listOfBatchFailedResultModel:
      type: array
      items:
        $ref: '#/components/schemas/BatchFailedResultModel'
      description: Placeholder documentation for __listOfBatchFailedResultModel
    __listOfBatchSuccessfulResultModel:
      type: array
      items:
        $ref: '#/components/schemas/BatchSuccessfulResultModel'
      description: Placeholder documentation for __listOfBatchSuccessfulResultModel
    __listOfCaptionDescription:
      type: array
      items:
        $ref: '#/components/schemas/CaptionDescription'
      description: Placeholder documentation for __listOfCaptionDescription
    __listOfCaptionLanguageMapping:
      type: array
      items:
        $ref: '#/components/schemas/CaptionLanguageMapping'
      description: Placeholder documentation for __listOfCaptionLanguageMapping
    __listOfCaptionSelector:
      type: array
      items:
        $ref: '#/components/schemas/CaptionSelector'
      description: Placeholder documentation for __listOfCaptionSelector
    __listOfChannelEgressEndpoint:
      type: array
      items:
        $ref: '#/components/schemas/ChannelEgressEndpoint'
      description: Placeholder documentation for __listOfChannelEgressEndpoint
    __listOfChannelEngineVersionResponse:
      type: array
      items:
        $ref: '#/components/schemas/ChannelEngineVersionResponse'
      description: Placeholder documentation for __listOfChannelEngineVersionResponse
    __listOfChannelPipelineIdToRestart:
      type: array
      items:
        $ref: '#/components/schemas/ChannelPipelineIdToRestart'
      description: Placeholder documentation for __listOfChannelPipelineIdToRestart
    __listOfChannelSummary:
      type: array
      items:
        $ref: '#/components/schemas/ChannelSummary'
      description: Placeholder documentation for __listOfChannelSummary
    __listOfCloudWatchAlarmTemplateGroupSummary:
      type: array
      items:
        $ref: '#/components/schemas/CloudWatchAlarmTemplateGroupSummary'
      description: Placeholder documentation for __listOfCloudWatchAlarmTemplateGroupSummary
    __listOfCloudWatchAlarmTemplateSummary:
      type: array
      items:
        $ref: '#/components/schemas/CloudWatchAlarmTemplateSummary'
      description: Placeholder documentation for __listOfCloudWatchAlarmTemplateSummary
    __listOfCmafIngestCaptionLanguageMapping:
      type: array
      items:
        $ref: '#/components/schemas/CmafIngestCaptionLanguageMapping'
      description: Placeholder documentation for __listOfCmafIngestCaptionLanguageMapping
    __listOfColorCorrection:
      type: array
      items:
        $ref: '#/components/schemas/ColorCorrection'
      description: Placeholder documentation for __listOfColorCorrection
    __listOfDashRoleAudio:
      type: array
      items:
        $ref: '#/components/schemas/DashRoleAudio'
      description: Placeholder documentation for __listOfDashRoleAudio
    __listOfDashRoleCaption:
      type: array
      items:
        $ref: '#/components/schemas/DashRoleCaption'
      description: Placeholder documentation for __listOfDashRoleCaption
    __listOfDescribeChannelPlacementGroupSummary:
      type: array
      items:
        $ref: '#/components/schemas/DescribeChannelPlacementGroupSummary'
      description: Placeholder documentation for __listOfDescribeChannelPlacementGroupSummary
    __listOfDescribeClusterSummary:
      type: array
      items:
        $ref: '#/components/schemas/DescribeClusterSummary'
      description: Placeholder documentation for __listOfDescribeClusterSummary
    __listOfDescribeNetworkSummary:
      type: array
      items:
        $ref: '#/components/schemas/DescribeNetworkSummary'
      description: Placeholder documentation for __listOfDescribeNetworkSummary
    __listOfDescribeNodeSummary:
      type: array
      items:
        $ref: '#/components/schemas/DescribeNodeSummary'
      description: Placeholder documentation for __listOfDescribeNodeSummary
    __listOfEventBridgeRuleTemplateGroupSummary:
      type: array
      items:
        $ref: '#/components/schemas/EventBridgeRuleTemplateGroupSummary'
      description: Placeholder documentation for __listOfEventBridgeRuleTemplateGroupSummary
    __listOfEventBridgeRuleTemplateSummary:
      type: array
      items:
        $ref: '#/components/schemas/EventBridgeRuleTemplateSummary'
      description: Placeholder documentation for __listOfEventBridgeRuleTemplateSummary
    __listOfEventBridgeRuleTemplateTarget:
      type: array
      items:
        $ref: '#/components/schemas/EventBridgeRuleTemplateTarget'
      description: Placeholder documentation for __listOfEventBridgeRuleTemplateTarget
    __listOfFailoverCondition:
      type: array
      items:
        $ref: '#/components/schemas/FailoverCondition'
      description: Placeholder documentation for __listOfFailoverCondition
    __listOfHlsAdMarkers:
      type: array
      items:
        $ref: '#/components/schemas/HlsAdMarkers'
      description: Placeholder documentation for __listOfHlsAdMarkers
    __listOfInput:
      type: array
      items:
        $ref: '#/components/schemas/Input'
      description: Placeholder documentation for __listOfInput
    __listOfInputAttachment:
      type: array
      items:
        $ref: '#/components/schemas/InputAttachment'
      description: Placeholder documentation for __listOfInputAttachment
    __listOfInputChannelLevel:
      type: array
      items:
        $ref: '#/components/schemas/InputChannelLevel'
      description: Placeholder documentation for __listOfInputChannelLevel
    __listOfInputDestination:
      type: array
      items:
        $ref: '#/components/schemas/InputDestination'
      description: Placeholder documentation for __listOfInputDestination
    __listOfInputDestinationRequest:
      type: array
      items:
        $ref: '#/components/schemas/InputDestinationRequest'
      description: Placeholder documentation for __listOfInputDestinationRequest
    __listOfInputDestinationRoute:
      type: array
      items:
        $ref: '#/components/schemas/InputDestinationRoute'
      description: Placeholder documentation for __listOfInputDestinationRoute
    __listOfInputDeviceConfigurableAudioChannelPairConfig:
      type: array
      items:
        $ref: '#/components/schemas/InputDeviceConfigurableAudioChannelPairConfig'
      description: Placeholder documentation for __listOfInputDeviceConfigurableAudioChannelPairConfig
    __listOfInputDeviceRequest:
      type: array
      items:
        $ref: '#/components/schemas/InputDeviceRequest'
      description: Placeholder documentation for __listOfInputDeviceRequest
    __listOfInputDeviceSettings:
      type: array
      items:
        $ref: '#/components/schemas/InputDeviceSettings'
      description: Placeholder documentation for __listOfInputDeviceSettings
    __listOfInputDeviceSummary:
      type: array
      items:
        $ref: '#/components/schemas/InputDeviceSummary'
      description: Placeholder documentation for __listOfInputDeviceSummary
    __listOfInputDeviceUhdAudioChannelPairConfig:
      type: array
      items:
        $ref: '#/components/schemas/InputDeviceUhdAudioChannelPairConfig'
      description: Placeholder documentation for __listOfInputDeviceUhdAudioChannelPairConfig
    __listOfInputRequestDestinationRoute:
      type: array
      items:
        $ref: '#/components/schemas/InputRequestDestinationRoute'
      description: Placeholder documentation for __listOfInputRequestDestinationRoute
    __listOfInputSdpLocation:
      type: array
      items:
        $ref: '#/components/schemas/InputSdpLocation'
      description: Placeholder documentation for __listOfInputSdpLocation
    __listOfInputSecurityGroup:
      type: array
      items:
        $ref: '#/components/schemas/InputSecurityGroup'
      description: Placeholder documentation for __listOfInputSecurityGroup
    __listOfInputSource:
      type: array
      items:
        $ref: '#/components/schemas/InputSource'
      description: Placeholder documentation for __listOfInputSource
    __listOfInputSourceRequest:
      type: array
      items:
        $ref: '#/components/schemas/InputSourceRequest'
      description: Placeholder documentation for __listOfInputSourceRequest
    __listOfInputWhitelistRule:
      type: array
      items:
        $ref: '#/components/schemas/InputWhitelistRule'
      description: Placeholder documentation for __listOfInputWhitelistRule
    __listOfInputWhitelistRuleCidr:
      type: array
      items:
        $ref: '#/components/schemas/InputWhitelistRuleCidr'
      description: Placeholder documentation for __listOfInputWhitelistRuleCidr
    __listOfInterfaceMapping:
      type: array
      items:
        $ref: '#/components/schemas/InterfaceMapping'
      description: Placeholder documentation for __listOfInterfaceMapping
    __listOfInterfaceMappingCreateRequest:
      type: array
      items:
        $ref: '#/components/schemas/InterfaceMappingCreateRequest'
      description: Placeholder documentation for __listOfInterfaceMappingCreateRequest
    __listOfInterfaceMappingUpdateRequest:
      type: array
      items:
        $ref: '#/components/schemas/InterfaceMappingUpdateRequest'
      description: Placeholder documentation for __listOfInterfaceMappingUpdateRequest
    __listOfIpPool:
      type: array
      items:
        $ref: '#/components/schemas/IpPool'
      description: Placeholder documentation for __listOfIpPool
    __listOfIpPoolCreateRequest:
      type: array
      items:
        $ref: '#/components/schemas/IpPoolCreateRequest'
      description: Placeholder documentation for __listOfIpPoolCreateRequest
    __listOfIpPoolUpdateRequest:
      type: array
      items:
        $ref: '#/components/schemas/IpPoolUpdateRequest'
      description: Placeholder documentation for __listOfIpPoolUpdateRequest
    __listOfMediaConnectFlow:
      type: array
      items:
        $ref: '#/components/schemas/MediaConnectFlow'
      description: Placeholder documentation for __listOfMediaConnectFlow
    __listOfMediaConnectFlowRequest:
      type: array
      items:
        $ref: '#/components/schemas/MediaConnectFlowRequest'
      description: Placeholder documentation for __listOfMediaConnectFlowRequest
    __listOfMediaPackageOutputDestinationSettings:
      type: array
      items:
        $ref: '#/components/schemas/MediaPackageOutputDestinationSettings'
      description: Placeholder documentation for __listOfMediaPackageOutputDestinationSettings
    __listOfMediaResourceNeighbor:
      type: array
      items:
        $ref: '#/components/schemas/MediaResourceNeighbor'
      description: Placeholder documentation for __listOfMediaResourceNeighbor
    __listOfMulticastSource:
      type: array
      items:
        $ref: '#/components/schemas/MulticastSource'
      description: Placeholder documentation for __listOfMulticastSource
    __listOfMulticastSourceCreateRequest:
      type: array
      items:
        $ref: '#/components/schemas/MulticastSourceCreateRequest'
      description: Placeholder documentation for __listOfMulticastSourceCreateRequest
    __listOfMulticastSourceUpdateRequest:
      type: array
      items:
        $ref: '#/components/schemas/MulticastSourceUpdateRequest'
      description: Placeholder documentation for __listOfMulticastSourceUpdateRequest
    __listOfMultiplexOutputDestination:
      type: array
      items:
        $ref: '#/components/schemas/MultiplexOutputDestination'
      description: Placeholder documentation for __listOfMultiplexOutputDestination
    __listOfMultiplexProgramPipelineDetail:
      type: array
      items:
        $ref: '#/components/schemas/MultiplexProgramPipelineDetail'
      description: Placeholder documentation for __listOfMultiplexProgramPipelineDetail
    __listOfMultiplexProgramSummary:
      type: array
      items:
        $ref: '#/components/schemas/MultiplexProgramSummary'
      description: Placeholder documentation for __listOfMultiplexProgramSummary
    __listOfMultiplexSummary:
      type: array
      items:
        $ref: '#/components/schemas/MultiplexSummary'
      description: Placeholder documentation for __listOfMultiplexSummary
    __listOfNodeInterfaceMapping:
      type: array
      items:
        $ref: '#/components/schemas/NodeInterfaceMapping'
      description: Placeholder documentation for __listOfNodeInterfaceMapping
    __listOfNodeInterfaceMappingCreateRequest:
      type: array
      items:
        $ref: '#/components/schemas/NodeInterfaceMappingCreateRequest'
      description: Placeholder documentation for __listOfNodeInterfaceMappingCreateRequest
    __listOfOffering:
      type: array
      items:
        $ref: '#/components/schemas/Offering'
      description: Placeholder documentation for __listOfOffering
    __listOfOutput:
      type: array
      items:
        $ref: '#/components/schemas/Output'
      description: Placeholder documentation for __listOfOutput
    __listOfOutputDestination:
      type: array
      items:
        $ref: '#/components/schemas/OutputDestination'
      description: Placeholder documentation for __listOfOutputDestination
    __listOfOutputDestinationSettings:
      type: array
      items:
        $ref: '#/components/schemas/OutputDestinationSettings'
      description: Placeholder documentation for __listOfOutputDestinationSettings
    __listOfOutputGroup:
      type: array
      items:
        $ref: '#/components/schemas/OutputGroup'
      description: Placeholder documentation for __listOfOutputGroup
    __listOfPipelineDetail:
      type: array
      items:
        $ref: '#/components/schemas/PipelineDetail'
      description: Placeholder documentation for __listOfPipelineDetail
    __listOfPipelinePauseStateSettings:
      type: array
      items:
        $ref: '#/components/schemas/PipelinePauseStateSettings'
      description: Placeholder documentation for __listOfPipelinePauseStateSettings
    __listOfReservation:
      type: array
      items:
        $ref: '#/components/schemas/Reservation'
      description: Placeholder documentation for __listOfReservation
    __listOfRoute:
      type: array
      items:
        $ref: '#/components/schemas/Route'
      description: Placeholder documentation for __listOfRoute
    __listOfRouteCreateRequest:
      type: array
      items:
        $ref: '#/components/schemas/RouteCreateRequest'
      description: Placeholder documentation for __listOfRouteCreateRequest
    __listOfRouteUpdateRequest:
      type: array
      items:
        $ref: '#/components/schemas/RouteUpdateRequest'
      description: Placeholder documentation for __listOfRouteUpdateRequest
    __listOfRtmpAdMarkers:
      type: array
      items:
        $ref: '#/components/schemas/RtmpAdMarkers'
      description: Placeholder documentation for __listOfRtmpAdMarkers
    __listOfScheduleAction:
      type: array
      items:
        $ref: '#/components/schemas/ScheduleAction'
      description: Placeholder documentation for __listOfScheduleAction
    __listOfScte35Descriptor:
      type: array
      items:
        $ref: '#/components/schemas/Scte35Descriptor'
      description: Placeholder documentation for __listOfScte35Descriptor
    __listOfSdiSourceSummary:
      type: array
      items:
        $ref: '#/components/schemas/SdiSourceSummary'
      description: Placeholder documentation for __listOfSdiSourceSummary
    __listOfSignalMapSummary:
      type: array
      items:
        $ref: '#/components/schemas/SignalMapSummary'
      description: Placeholder documentation for __listOfSignalMapSummary
    __listOfSmpte2110ReceiverGroup:
      type: array
      items:
        $ref: '#/components/schemas/Smpte2110ReceiverGroup'
      description: Placeholder documentation for __listOfSmpte2110ReceiverGroup
    __listOfSrtCallerSource:
      type: array
      items:
        $ref: '#/components/schemas/SrtCallerSource'
      description: Placeholder documentation for __listOfSrtCallerSource
    __listOfSrtCallerSourceRequest:
      type: array
      items:
        $ref: '#/components/schemas/SrtCallerSourceRequest'
      description: Placeholder documentation for __listOfSrtCallerSourceRequest
    __listOfSrtOutputDestinationSettings:
      type: array
      items:
        $ref: '#/components/schemas/SrtOutputDestinationSettings'
      description: Placeholder documentation for __listOfSrtOutputDestinationSettings
    __listOfThumbnail:
      type: array
      items:
        $ref: '#/components/schemas/Thumbnail'
      description: Placeholder documentation for __listOfThumbnail
    __listOfThumbnailDetail:
      type: array
      items:
        $ref: '#/components/schemas/ThumbnailDetail'
      description: Placeholder documentation for __listOfThumbnailDetail
    __listOfTransferringInputDeviceSummary:
      type: array
      items:
        $ref: '#/components/schemas/TransferringInputDeviceSummary'
      description: Placeholder documentation for __listOfTransferringInputDeviceSummary
    __listOfValidationError:
      type: array
      items:
        $ref: '#/components/schemas/ValidationError'
      description: Placeholder documentation for __listOfValidationError
    __listOfVideoDescription:
      type: array
      items:
        $ref: '#/components/schemas/VideoDescription'
      description: Placeholder documentation for __listOfVideoDescription
    __listOf__integer:
      type: array
      items:
        $ref: '#/components/schemas/__integer'
      description: Placeholder documentation for __listOf__integer
    __listOf__string:
      type: array
      items:
        $ref: '#/components/schemas/__string'
      description: Placeholder documentation for __listOf__string
    __listOf__stringMin7Max11PatternAws097:
      type: array
      items:
        $ref: '#/components/schemas/__stringMin7Max11PatternAws097'
      description: Placeholder documentation for __listOf__stringMin7Max11PatternAws097
    __listOf__stringPatternS:
      type: array
      items:
        $ref: '#/components/schemas/__stringPatternS'
      description: Placeholder documentation for __listOf__stringPatternS
    __long:
      type: integer
      format: int64
      description: Placeholder documentation for __long
    __longMin0Max1099511627775:
      type: integer
      format: int64
      description: Placeholder documentation for __longMin0Max1099511627775
      minimum: 0
      maximum: 1099511627775
    __longMin0Max4294967295:
      type: integer
      format: int64
      description: Placeholder documentation for __longMin0Max4294967295
      minimum: 0
      maximum: 4294967295
    __longMin0Max8589934591:
      type: integer
      format: int64
      description: Placeholder documentation for __longMin0Max8589934591
      minimum: 0
      maximum: 8589934591
    __longMin0Max86400000:
      type: integer
      format: int64
      description: Placeholder documentation for __longMin0Max86400000
      minimum: 0
      maximum: 86400000
    __string:
      type: string
    __stringMax100:
      type: string
      minLength: 0
      maxLength: 100
    __stringMax1000:
      type: string
      minLength: 0
      maxLength: 1000
    __stringMax2048:
      type: string
      minLength: 0
      maxLength: 2048
    __stringMax255:
      type: string
      minLength: 0
      maxLength: 255
    __stringMax256:
      type: string
      minLength: 0
      maxLength: 256
    __stringMax32:
      type: string
      minLength: 0
      maxLength: 32
    __stringMax64:
      type: string
      minLength: 0
      maxLength: 64
    __stringMin0Max1024:
      type: string
      minLength: 0
      maxLength: 1024
    __stringMin1:
      type: string
      minLength: 1
    __stringMin1Max2048:
      type: string
      minLength: 1
      maxLength: 2048
    __stringMin1Max2048PatternArn:
      type: string
      pattern: ^arn.+$
      minLength: 1
      maxLength: 2048
    __stringMin1Max255:
      type: string
      minLength: 1
      maxLength: 255
    __stringMin1Max255PatternS:
      type: string
      pattern: ^[^\s]+$
      minLength: 1
      maxLength: 255
    __stringMin1Max256:
      type: string
      minLength: 1
      maxLength: 256
    __stringMin1Max256PatternS:
      type: string
      pattern: ^[\S]+$
      minLength: 1
      maxLength: 256
    __stringMin1Max35:
      type: string
      minLength: 1
      maxLength: 35
    __stringMin1Max7:
      type: string
      minLength: 1
      maxLength: 7
    __stringMin2Max2:
      type: string
      minLength: 2
      maxLength: 2
    __stringMin32Max32:
      type: string
      minLength: 32
      maxLength: 32
    __stringMin34Max34:
      type: string
      minLength: 34
      maxLength: 34
    __stringMin3Max3:
      type: string
      minLength: 3
      maxLength: 3
    __stringMin6Max6:
      type: string
      minLength: 6
      maxLength: 6
    __stringMin7Max11PatternAws097:
      type: string
      pattern: ^(aws-)?[0-9]{7}$
      minLength: 7
      maxLength: 11
    __stringPattern010920300:
      type: string
      pattern: ^([0,1]?[0-9]|2[0-3]):00$
    __stringPatternArnMedialiveCloudwatchAlarmTemplate:
      type: string
      pattern: ^arn:.+:medialive:.+:cloudwatch-alarm-template:.+$
    __stringPatternArnMedialiveCloudwatchAlarmTemplateGroup:
      type: string
      pattern: ^arn:.+:medialive:.+:cloudwatch-alarm-template-group:.+$
    __stringPatternArnMedialiveEventbridgeRuleTemplate:
      type: string
      pattern: ^arn:.+:medialive:.+:eventbridge-rule-template:.+$
    __stringPatternArnMedialiveEventbridgeRuleTemplateGroup:
      type: string
      pattern: ^arn:.+:medialive:.+:eventbridge-rule-template-group:.+$
    __stringPatternArnMedialiveSignalMap:
      type: string
      pattern: ^arn:.+:medialive:.+:signal-map:.+$
    __stringPatternS:
      type: string
      pattern: ^[^\s]+$
    __timestamp:
      type: string
      format: date-time
      description: Placeholder documentation for __timestamp
    __timestampIso8601:
      type: string
      format: date-time
      description: Placeholder documentation for __timestampIso8601
