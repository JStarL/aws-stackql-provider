openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: chime_sdk_media_pipelines
  x-aws-serviceName: chimesdkmediapipelines
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2021-07-15'
  title: Amazon Chime SDK Media Pipelines
  description: |-
    The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipelines, see [Amazon Chime SDK media pipelines](https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html).
servers:
- description: The Amazon Chime SDK Media Pipelines regional endpoint
  url: https://media-pipelines-chime.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /sdk-media-capture-pipelines:
    post:
      operationId: CreateMediaCapturePipeline
      description: |-
        Creates a media pipeline.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SourceType:
                  $ref: '#/components/schemas/MediaPipelineSourceType'
                SourceArn:
                  $ref: '#/components/schemas/Arn'
                SinkType:
                  $ref: '#/components/schemas/MediaPipelineSinkType'
                SinkArn:
                  $ref: '#/components/schemas/Arn'
                ClientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
                ChimeSdkMeetingConfiguration:
                  $ref: '#/components/schemas/ChimeSdkMeetingConfiguration'
                SseAwsKeyManagementParams:
                  $ref: '#/components/schemas/SseAwsKeyManagementParams'
                SinkIamRoleArn:
                  $ref: '#/components/schemas/Arn'
                Tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '201': {}
        '400':
          description: |-
            The request exceeds the resource limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
    get:
      operationId: ListMediaCapturePipelines
      description: |-
        Returns a list of media pipelines.
      parameters:
      - name: next-token
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: max-results
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ResultMax'
      responses:
        '200': {}
        '400':
          description: |-
            The request exceeds the resource limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /sdk-media-concatenation-pipelines:
    post:
      operationId: CreateMediaConcatenationPipeline
      description: |-
        Creates a media concatenation pipeline.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Sources:
                  $ref: '#/components/schemas/ConcatenationSourceList'
                Sinks:
                  $ref: '#/components/schemas/ConcatenationSinkList'
                ClientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
                Tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '201': {}
        '400':
          description: |-
            The request exceeds the resource limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /media-insights-pipelines:
    post:
      operationId: CreateMediaInsightsPipeline
      description: |-
        Creates a media insights pipeline.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MediaInsightsPipelineConfigurationArn:
                  $ref: '#/components/schemas/Arn'
                KinesisVideoStreamSourceRuntimeConfiguration:
                  $ref: '#/components/schemas/KinesisVideoStreamSourceRuntimeConfiguration'
                MediaInsightsRuntimeMetadata:
                  $ref: '#/components/schemas/MediaInsightsRuntimeMetadata'
                KinesisVideoStreamRecordingSourceRuntimeConfiguration:
                  $ref: '#/components/schemas/KinesisVideoStreamRecordingSourceRuntimeConfiguration'
                S3RecordingSinkRuntimeConfiguration:
                  $ref: '#/components/schemas/S3RecordingSinkRuntimeConfiguration'
                Tags:
                  $ref: '#/components/schemas/TagList'
                ClientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
      responses:
        '201': {}
        '400':
          description: |-
            The request exceeds the resource limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: |-
            One or more of the resources in the request does not exist in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /media-insights-pipeline-configurations:
    post:
      operationId: CreateMediaInsightsPipelineConfiguration
      description: |-
        A structure that contains the static configurations for a media insights pipeline.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MediaInsightsPipelineConfigurationName:
                  $ref: '#/components/schemas/MediaInsightsPipelineConfigurationNameString'
                ResourceAccessRoleArn:
                  $ref: '#/components/schemas/Arn'
                RealTimeAlertConfiguration:
                  $ref: '#/components/schemas/RealTimeAlertConfiguration'
                Elements:
                  $ref: '#/components/schemas/MediaInsightsPipelineConfigurationElements'
                Tags:
                  $ref: '#/components/schemas/TagList'
                ClientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
      responses:
        '201': {}
        '400':
          description: |-
            The request exceeds the resource limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: |-
            One or more of the resources in the request does not exist in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
    get:
      operationId: ListMediaInsightsPipelineConfigurations
      description: |-
        Lists the available media insights pipeline configurations.
      parameters:
      - name: next-token
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: max-results
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ResultMax'
      responses:
        '200': {}
        '400':
          description: |-
            The request exceeds the resource limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /sdk-media-live-connector-pipelines:
    post:
      operationId: CreateMediaLiveConnectorPipeline
      description: |-
        Creates a media live connector pipeline in an Amazon Chime SDK meeting.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Sources:
                  $ref: '#/components/schemas/LiveConnectorSourceList'
                Sinks:
                  $ref: '#/components/schemas/LiveConnectorSinkList'
                ClientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
                Tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '201': {}
        '400':
          description: |-
            The request exceeds the resource limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /media-pipeline-kinesis-video-stream-pools:
    post:
      operationId: CreateMediaPipelineKinesisVideoStreamPool
      description: |-
        Creates an Amazon Kinesis Video Stream pool for use with media stream pipelines.

        If a meeting uses an opt-in Region as its [MediaRegion](https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_meeting-chime_CreateMeeting.html#chimesdk-meeting-chime_CreateMeeting-request-MediaRegion), the KVS stream must be in that same Region. For example, if a meeting uses the `af-south-1` Region, the KVS stream must also be in `af-south-1`. However, if the meeting uses a Region that AWS turns on by default, the KVS stream can be in any available Region, including an opt-in Region. For example, if the meeting uses `ca-central-1`, the KVS stream can be in `eu-west-2`, `us-east-1`, `af-south-1`, or any other Region that the Amazon Chime SDK supports.

        To learn which AWS Region a meeting uses, call the [GetMeeting](https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_meeting-chime_GetMeeting.html) API and use the [MediaRegion](https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_meeting-chime_CreateMeeting.html#chimesdk-meeting-chime_CreateMeeting-request-MediaRegion) parameter from the response.

        For more information about opt-in Regions, refer to [Available Regions](https://docs.aws.amazon.com/chime-sdk/latest/dg/sdk-available-regions.html) in the _Amazon Chime SDK Developer Guide_ , and [Specify which AWS Regions your account can use](https://docs.aws.amazon.com/accounts/latest/reference/manage-acct-regions.html#rande-manage-enable.html), in the _AWS Account Management Reference Guide_.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                StreamConfiguration:
                  $ref: '#/components/schemas/KinesisVideoStreamConfiguration'
                PoolName:
                  $ref: '#/components/schemas/KinesisVideoStreamPoolName'
                ClientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
                Tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '201': {}
        '400':
          description: |-
            The request exceeds the resource limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
    get:
      operationId: ListMediaPipelineKinesisVideoStreamPools
      description: |-
        Lists the video stream pools in the media pipeline.
      parameters:
      - name: next-token
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: max-results
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ResultMax'
      responses:
        '200': {}
        '400':
          description: |-
            The request exceeds the resource limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /sdk-media-stream-pipelines:
    post:
      operationId: CreateMediaStreamPipeline
      description: |-
        Creates a streaming media pipeline.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Sources:
                  $ref: '#/components/schemas/MediaStreamSourceList'
                Sinks:
                  $ref: '#/components/schemas/MediaStreamSinkList'
                ClientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
                Tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '201': {}
        '400':
          description: |-
            The request exceeds the resource limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: |-
            One or more of the resources in the request does not exist in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /sdk-media-capture-pipelines/{MediaPipelineId}:
    delete:
      operationId: DeleteMediaCapturePipeline
      description: |-
        Deletes the media pipeline.
      parameters:
      - name: MediaPipelineId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GuidString'
      responses:
        '204': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: |-
            One or more of the resources in the request does not exist in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
    get:
      operationId: GetMediaCapturePipeline
      description: |-
        Gets an existing media pipeline.
      parameters:
      - name: MediaPipelineId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GuidString'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: |-
            One or more of the resources in the request does not exist in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /media-insights-pipeline-configurations/{Identifier}:
    delete:
      operationId: DeleteMediaInsightsPipelineConfiguration
      description: |-
        Deletes the specified configuration settings.
      parameters:
      - name: Identifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NonEmptyString'
      responses:
        '204': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: |-
            One or more of the resources in the request does not exist in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
    get:
      operationId: GetMediaInsightsPipelineConfiguration
      description: |-
        Gets the configuration settings for a media insights pipeline.
      parameters:
      - name: Identifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NonEmptyString'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: |-
            One or more of the resources in the request does not exist in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
    put:
      operationId: UpdateMediaInsightsPipelineConfiguration
      description: |-
        Updates the media insights pipeline's configuration settings.
      parameters:
      - name: Identifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NonEmptyString'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ResourceAccessRoleArn:
                  $ref: '#/components/schemas/Arn'
                RealTimeAlertConfiguration:
                  $ref: '#/components/schemas/RealTimeAlertConfiguration'
                Elements:
                  $ref: '#/components/schemas/MediaInsightsPipelineConfigurationElements'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: |-
            One or more of the resources in the request does not exist in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /sdk-media-pipelines/{MediaPipelineId}:
    delete:
      operationId: DeleteMediaPipeline
      description: |-
        Deletes the media pipeline.
      parameters:
      - name: MediaPipelineId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GuidString'
      responses:
        '204': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: |-
            One or more of the resources in the request does not exist in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
    get:
      operationId: GetMediaPipeline
      description: |-
        Gets an existing media pipeline.
      parameters:
      - name: MediaPipelineId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GuidString'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: |-
            One or more of the resources in the request does not exist in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /media-pipeline-kinesis-video-stream-pools/{Identifier}:
    delete:
      operationId: DeleteMediaPipelineKinesisVideoStreamPool
      description: |-
        Deletes an Amazon Kinesis Video Stream pool.
      parameters:
      - name: Identifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NonEmptyString'
      responses:
        '204': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: |-
            One or more of the resources in the request does not exist in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
    get:
      operationId: GetMediaPipelineKinesisVideoStreamPool
      description: |-
        Gets an Kinesis video stream pool.
      parameters:
      - name: Identifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NonEmptyString'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: |-
            One or more of the resources in the request does not exist in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
    put:
      operationId: UpdateMediaPipelineKinesisVideoStreamPool
      description: |-
        Updates an Amazon Kinesis Video Stream pool in a media pipeline.
      parameters:
      - name: Identifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NonEmptyString'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                StreamConfiguration:
                  $ref: '#/components/schemas/KinesisVideoStreamConfigurationUpdate'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: |-
            One or more of the resources in the request does not exist in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /media-insights-pipelines/{Identifier}/speaker-search-tasks/{SpeakerSearchTaskId}:
    get:
      operationId: GetSpeakerSearchTask
      description: |-
        Retrieves the details of the specified speaker search task.
      parameters:
      - name: Identifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NonEmptyString'
      - name: SpeakerSearchTaskId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GuidString'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: |-
            One or more of the resources in the request does not exist in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /media-insights-pipelines/{Identifier}/voice-tone-analysis-tasks/{VoiceToneAnalysisTaskId}:
    get:
      operationId: GetVoiceToneAnalysisTask
      description: |-
        Retrieves the details of a voice tone analysis task.
      parameters:
      - name: Identifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NonEmptyString'
      - name: VoiceToneAnalysisTaskId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GuidString'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: |-
            One or more of the resources in the request does not exist in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /sdk-media-pipelines:
    get:
      operationId: ListMediaPipelines
      description: |-
        Returns a list of media pipelines.
      parameters:
      - name: next-token
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: max-results
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ResultMax'
      responses:
        '200': {}
        '400':
          description: |-
            The request exceeds the resource limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /tags:
    get:
      operationId: ListTagsForResource
      description: |-
        Lists the tags available for a media pipeline.
      parameters:
      - name: arn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/AmazonResourceName'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: |-
            One or more of the resources in the request does not exist in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /media-insights-pipelines/{Identifier}/speaker-search-tasks?operation=start:
    post:
      operationId: StartSpeakerSearchTask
      description: |-
        Starts a speaker search task.

        Before starting any speaker search tasks, you must provide all notices and obtain all consents from the speaker as required under applicable privacy and biometrics laws, and as required under the [AWS service terms](https://aws.amazon.com/service-terms/) for the Amazon Chime SDK.
      parameters:
      - name: Identifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NonEmptyString'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                VoiceProfileDomainArn:
                  $ref: '#/components/schemas/Arn'
                KinesisVideoStreamSourceTaskConfiguration:
                  $ref: '#/components/schemas/KinesisVideoStreamSourceTaskConfiguration'
                ClientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
      responses:
        '201': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: |-
            One or more of the resources in the request does not exist in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /media-insights-pipelines/{Identifier}/voice-tone-analysis-tasks?operation=start:
    post:
      operationId: StartVoiceToneAnalysisTask
      description: |-
        Starts a voice tone analysis task. For more information about voice tone analysis, see [Using Amazon Chime SDK voice analytics](https://docs.aws.amazon.com/chime-sdk/latest/dg/voice-analytics.html) in the _Amazon Chime SDK Developer Guide_.

        Before starting any voice tone analysis tasks, you must provide all notices and obtain all consents from the speaker as required under applicable privacy and biometrics laws, and as required under the [AWS service terms](https://aws.amazon.com/service-terms/) for the Amazon Chime SDK.
      parameters:
      - name: Identifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NonEmptyString'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                LanguageCode:
                  $ref: '#/components/schemas/VoiceAnalyticsLanguageCode'
                KinesisVideoStreamSourceTaskConfiguration:
                  $ref: '#/components/schemas/KinesisVideoStreamSourceTaskConfiguration'
                ClientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
      responses:
        '201': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: |-
            One or more of the resources in the request does not exist in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /media-insights-pipelines/{Identifier}/speaker-search-tasks/{SpeakerSearchTaskId}?operation=stop:
    post:
      operationId: StopSpeakerSearchTask
      description: |-
        Stops a speaker search task.
      parameters:
      - name: Identifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NonEmptyString'
      - name: SpeakerSearchTaskId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GuidString'
      responses:
        '204': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: |-
            One or more of the resources in the request does not exist in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /media-insights-pipelines/{Identifier}/voice-tone-analysis-tasks/{VoiceToneAnalysisTaskId}?operation=stop:
    post:
      operationId: StopVoiceToneAnalysisTask
      description: |-
        Stops a voice tone analysis task.
      parameters:
      - name: Identifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NonEmptyString'
      - name: VoiceToneAnalysisTaskId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GuidString'
      responses:
        '204': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: |-
            One or more of the resources in the request does not exist in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /tags?operation=tag-resource:
    post:
      operationId: TagResource
      description: |-
        The ARN of the media pipeline that you want to tag. Consists of the pipeline's endpoint region, resource ID, and pipeline ID.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ResourceARN:
                  $ref: '#/components/schemas/AmazonResourceName'
                Tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '204': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: |-
            One or more of the resources in the request does not exist in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /tags?operation=untag-resource:
    post:
      operationId: UntagResource
      description: |-
        Removes any tags from a media pipeline.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ResourceARN:
                  $ref: '#/components/schemas/AmazonResourceName'
                TagKeys:
                  $ref: '#/components/schemas/TagKeyList'
      responses:
        '204': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: |-
            One or more of the resources in the request does not exist in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /media-insights-pipeline-status/{Identifier}:
    put:
      operationId: UpdateMediaInsightsPipelineStatus
      description: |-
        Updates the status of a media insights pipeline.
      parameters:
      - name: Identifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NonEmptyString'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                UpdateStatus:
                  $ref: '#/components/schemas/MediaPipelineStatusUpdate'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: |-
            One or more of the resources in the request does not exist in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
components:
  schemas:
    ActiveSpeakerOnlyConfiguration:
      type: object
      properties:
        ActiveSpeakerPosition:
          allOf:
          - $ref: '#/components/schemas/ActiveSpeakerPosition'
          description: The position of the `ActiveSpeakerOnly` video tile.
      description: Defines the configuration for an `ActiveSpeakerOnly` video tile.
    ActiveSpeakerPosition:
      type: string
      enum:
      - TopLeft
      - TopRight
      - BottomLeft
      - BottomRight
    AmazonResourceName:
      type: string
      pattern: ^arn[\/\:\-\_\.a-zA-Z0-9]+$
      minLength: 1
      maxLength: 1011
    AmazonTranscribeCallAnalyticsProcessorConfiguration:
      type: object
      properties:
        LanguageCode:
          allOf:
          - $ref: '#/components/schemas/CallAnalyticsLanguageCode'
          description: The language code in the configuration.
        VocabularyName:
          allOf:
          - $ref: '#/components/schemas/VocabularyName'
          description: 'Specifies the name of the custom vocabulary to use when processing
            a transcription. Note that vocabulary names are case sensitive.


            If the language of the specified custom vocabulary doesn''t match the
            language identified in your media, the custom vocabulary is not applied
            to your transcription.


            For more information, see [Custom vocabularies](https://docs.aws.amazon.com/transcribe/latest/dg/custom-vocabulary.html)
            in the _Amazon Transcribe Developer Guide_.


            Length Constraints: Minimum length of 1. Maximum length of 200.'
        VocabularyFilterName:
          allOf:
          - $ref: '#/components/schemas/VocabularyFilterName'
          description: 'Specifies the name of the custom vocabulary filter to use
            when processing a transcription. Note that vocabulary filter names are
            case sensitive.


            If the language of the specified custom vocabulary filter doesn''t match
            the language identified in your media, the vocabulary filter is not applied
            to your transcription.


            For more information, see [Using vocabulary filtering with unwanted words](https://docs.aws.amazon.com/transcribe/latest/dg/vocabulary-filtering.html)
            in the _Amazon Transcribe Developer Guide_.


            Length Constraints: Minimum length of 1. Maximum length of 200.'
        VocabularyFilterMethod:
          allOf:
          - $ref: '#/components/schemas/VocabularyFilterMethod'
          description: 'Specifies how to apply a vocabulary filter to a transcript.


            To replace words with ******* , choose `mask`.


            To delete words, choose `remove`.


            To flag words without changing them, choose `tag`.'
        LanguageModelName:
          allOf:
          - $ref: '#/components/schemas/ModelName'
          description: 'Specifies the name of the custom language model to use when
            processing a transcription. Note that language model names are case sensitive.


            The language of the specified language model must match the language code
            specified in the transcription request. If the languages don''t match,
            the custom language model isn''t applied. Language mismatches don''t generate
            errors or warnings.


            For more information, see [Custom language models](https://docs.aws.amazon.com/transcribe/latest/dg/custom-language-models.html)
            in the _Amazon Transcribe Developer Guide_.'
        EnablePartialResultsStabilization:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Enables partial result stabilization for your transcription.
            Partial result stabilization can reduce latency in your output, but may
            impact accuracy. For more information, see [Partial-result stabilization](https://docs.aws.amazon.com/transcribe/latest/dg/streaming.html#streaming-partial-result-stabilization)
            in the _Amazon Transcribe Developer Guide_.
        PartialResultsStability:
          allOf:
          - $ref: '#/components/schemas/PartialResultsStability'
          description: 'Specifies the level of stability to use when you enable partial
            results stabilization (`EnablePartialResultsStabilization`).


            Low stability provides the highest accuracy. High stability transcribes
            faster, but with slightly lower accuracy.


            For more information, see [Partial-result stabilization](https://docs.aws.amazon.com/transcribe/latest/dg/streaming.html#streaming-partial-result-stabilization)
            in the _Amazon Transcribe Developer Guide_.'
        ContentIdentificationType:
          allOf:
          - $ref: '#/components/schemas/ContentType'
          description: 'Labels all personally identifiable information (PII) identified
            in your transcript.


            Content identification is performed at the segment level; PII specified
            in `PiiEntityTypes` is flagged upon complete transcription of an audio
            segment.


            You can’t set `ContentIdentificationType` and `ContentRedactionType` in
            the same request. If you do, your request returns a `BadRequestException`.


            For more information, see [Redacting or identifying personally identifiable
            information](https://docs.aws.amazon.com/transcribe/latest/dg/pii-redaction.html)
            in the _Amazon Transcribe Developer Guide_.'
        ContentRedactionType:
          allOf:
          - $ref: '#/components/schemas/ContentType'
          description: 'Redacts all personally identifiable information (PII) identified
            in your transcript.


            Content redaction is performed at the segment level; PII specified in
            `PiiEntityTypes` is redacted upon complete transcription of an audio segment.


            You can’t set `ContentRedactionType` and `ContentIdentificationType` in
            the same request. If you do, your request returns a `BadRequestException`.


            For more information, see [Redacting or identifying personally identifiable
            information](https://docs.aws.amazon.com/transcribe/latest/dg/pii-redaction.html)
            in the _Amazon Transcribe Developer Guide_.'
        PiiEntityTypes:
          allOf:
          - $ref: '#/components/schemas/PiiEntityTypes'
          description: 'Specifies the types of personally identifiable information
            (PII) to redact from a transcript. You can include as many types as you''d
            like, or you can select `ALL`.


            To include `PiiEntityTypes` in your Call Analytics request, you must also
            include `ContentIdentificationType` or `ContentRedactionType`, but you
            can''t include both.


            Values must be comma-separated and can include: `ADDRESS`, `BANK_ACCOUNT_NUMBER`,
            `BANK_ROUTING`, `CREDIT_DEBIT_CVV`, `CREDIT_DEBIT_EXPIRY`, `CREDIT_DEBIT_NUMBER`,
            `EMAIL`, `NAME`, `PHONE`, `PIN`, `SSN`, or `ALL`.


            Length Constraints: Minimum length of 1. Maximum length of 300.'
        FilterPartialResults:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'If true, `UtteranceEvents` with `IsPartial: true` are filtered
            out of the insights target.'
        PostCallAnalyticsSettings:
          allOf:
          - $ref: '#/components/schemas/PostCallAnalyticsSettings'
          description: The settings for a post-call analysis task in an analytics
            configuration.
        CallAnalyticsStreamCategories:
          allOf:
          - $ref: '#/components/schemas/CategoryNameList'
          description: By default, all `CategoryEvents` are sent to the insights target.
            If this parameter is specified, only included categories are sent to the
            insights target.
      required:
      - LanguageCode
      description: A structure that contains the configuration settings for an Amazon
        Transcribe call analytics processor.
    AmazonTranscribeProcessorConfiguration:
      type: object
      properties:
        LanguageCode:
          allOf:
          - $ref: '#/components/schemas/CallAnalyticsLanguageCode'
          description: 'The language code that represents the language spoken in your
            audio.


            If you''re unsure of the language spoken in your audio, consider using
            `IdentifyLanguage` to enable automatic language identification.


            For a list of languages that real-time Call Analytics supports, see the
            [Supported languages table](https://docs.aws.amazon.com/transcribe/latest/dg/supported-languages.html)
            in the _Amazon Transcribe Developer Guide_.'
        VocabularyName:
          allOf:
          - $ref: '#/components/schemas/VocabularyName'
          description: 'The name of the custom vocabulary that you specified in your
            Call Analytics request.


            Length Constraints: Minimum length of 1. Maximum length of 200.'
        VocabularyFilterName:
          allOf:
          - $ref: '#/components/schemas/VocabularyFilterName'
          description: 'The name of the custom vocabulary filter that you specified
            in your Call Analytics request.


            Length Constraints: Minimum length of 1. Maximum length of 200.'
        VocabularyFilterMethod:
          allOf:
          - $ref: '#/components/schemas/VocabularyFilterMethod'
          description: The vocabulary filtering method used in your Call Analytics
            transcription.
        ShowSpeakerLabel:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'Enables speaker partitioning (diarization) in your transcription
            output. Speaker partitioning labels the speech from individual speakers
            in your media file.


            For more information, see [Partitioning speakers (diarization)](https://docs.aws.amazon.com/transcribe/latest/dg/diarization.html)
            in the _Amazon Transcribe Developer Guide_.'
        EnablePartialResultsStabilization:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'Enables partial result stabilization for your transcription.
            Partial result stabilization can reduce latency in your output, but may
            impact accuracy.


            For more information, see [Partial-result stabilization](https://docs.aws.amazon.com/transcribe/latest/dg/streaming.html#streaming-partial-result-stabilization)
            in the _Amazon Transcribe Developer Guide_.'
        PartialResultsStability:
          allOf:
          - $ref: '#/components/schemas/PartialResultsStability'
          description: 'The level of stability to use when you enable partial results
            stabilization (`EnablePartialResultsStabilization`).


            Low stability provides the highest accuracy. High stability transcribes
            faster, but with slightly lower accuracy.


            For more information, see [Partial-result stabilization](https://docs.aws.amazon.com/transcribe/latest/dg/streaming.html#streaming-partial-result-stabilization)
            in the _Amazon Transcribe Developer Guide_.'
        ContentIdentificationType:
          allOf:
          - $ref: '#/components/schemas/ContentType'
          description: 'Labels all personally identifiable information (PII) identified
            in your transcript.


            Content identification is performed at the segment level; PII specified
            in `PiiEntityTypes` is flagged upon complete transcription of an audio
            segment.


            You can’t set `ContentIdentificationType` and `ContentRedactionType` in
            the same request. If you set both, your request returns a `BadRequestException`.


            For more information, see [Redacting or identifying personally identifiable
            information](https://docs.aws.amazon.com/transcribe/latest/dg/pii-redaction.html)
            in the _Amazon Transcribe Developer Guide_.'
        ContentRedactionType:
          allOf:
          - $ref: '#/components/schemas/ContentType'
          description: 'Redacts all personally identifiable information (PII) identified
            in your transcript.


            Content redaction is performed at the segment level; PII specified in
            PiiEntityTypes is redacted upon complete transcription of an audio segment.


            You can’t set ContentRedactionType and ContentIdentificationType in the
            same request. If you set both, your request returns a `BadRequestException`.


            For more information, see [Redacting or identifying personally identifiable
            information](https://docs.aws.amazon.com/transcribe/latest/dg/pii-redaction.html)
            in the _Amazon Transcribe Developer Guide_.'
        PiiEntityTypes:
          allOf:
          - $ref: '#/components/schemas/PiiEntityTypes'
          description: 'The types of personally identifiable information (PII) to
            redact from a transcript. You can include as many types as you''d like,
            or you can select `ALL`.


            To include `PiiEntityTypes` in your Call Analytics request, you must also
            include `ContentIdentificationType` or `ContentRedactionType`, but you
            can''t include both.


            Values must be comma-separated and can include: `ADDRESS`, `BANK_ACCOUNT_NUMBER`,
            `BANK_ROUTING`, `CREDIT_DEBIT_CVV`, `CREDIT_DEBIT_EXPIRY`, `CREDIT_DEBIT_NUMBER`,
            `EMAIL`, `NAME`, `PHONE`, `PIN`, `SSN`, or `ALL`.


            If you leave this parameter empty, the default behavior is equivalent
            to `ALL`.'
        LanguageModelName:
          allOf:
          - $ref: '#/components/schemas/ModelName'
          description: 'The name of the custom language model that you want to use
            when processing your transcription. Note that language model names are
            case sensitive.


            The language of the specified language model must match the language code
            you specify in your transcription request. If the languages don''t match,
            the custom language model isn''t applied. There are no errors or warnings
            associated with a language mismatch.


            For more information, see [Custom language models](https://docs.aws.amazon.com/transcribe/latest/dg/custom-language-models.html)
            in the _Amazon Transcribe Developer Guide_.'
        FilterPartialResults:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'If true, `TranscriptEvents` with `IsPartial: true` are filtered
            out of the insights target.'
        IdentifyLanguage:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Turns language identification on or off.
        IdentifyMultipleLanguages:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'Turns language identification on or off for multiple languages.


            Calls to this API must include a `LanguageCode`, `IdentifyLanguage`, or
            `IdentifyMultipleLanguages` parameter. If you include more than one of
            those parameters, your transcription job fails.'
        LanguageOptions:
          allOf:
          - $ref: '#/components/schemas/LanguageOptions'
          description: The language options for the transcription, such as automatic
            language detection.
        PreferredLanguage:
          allOf:
          - $ref: '#/components/schemas/CallAnalyticsLanguageCode'
          description: The preferred language for the transcription.
        VocabularyNames:
          allOf:
          - $ref: '#/components/schemas/VocabularyNames'
          description: The names of the custom vocabulary or vocabularies used during
            transcription.
        VocabularyFilterNames:
          allOf:
          - $ref: '#/components/schemas/VocabularyFilterNames'
          description: The names of the custom vocabulary filter or filters using
            during transcription.
      description: 'A structure that contains the configuration settings for an Amazon
        Transcribe processor.


        Calls to this API must include a `LanguageCode`, `IdentifyLanguage`, or `IdentifyMultipleLanguages`
        parameter. If you include more than one of those parameters, your transcription
        job fails.'
    Arn:
      type: string
      pattern: ^arn[\/\:\-\_\.a-zA-Z0-9]+$
      minLength: 1
      maxLength: 1024
    ArtifactsConcatenationConfiguration:
      type: object
      properties:
        Audio:
          allOf:
          - $ref: '#/components/schemas/AudioConcatenationConfiguration'
          description: The configuration for the audio artifacts concatenation.
        Video:
          allOf:
          - $ref: '#/components/schemas/VideoConcatenationConfiguration'
          description: The configuration for the video artifacts concatenation.
        Content:
          allOf:
          - $ref: '#/components/schemas/ContentConcatenationConfiguration'
          description: The configuration for the content artifacts concatenation.
        DataChannel:
          allOf:
          - $ref: '#/components/schemas/DataChannelConcatenationConfiguration'
          description: The configuration for the data channel artifacts concatenation.
        TranscriptionMessages:
          allOf:
          - $ref: '#/components/schemas/TranscriptionMessagesConcatenationConfiguration'
          description: The configuration for the transcription messages artifacts
            concatenation.
        MeetingEvents:
          allOf:
          - $ref: '#/components/schemas/MeetingEventsConcatenationConfiguration'
          description: The configuration for the meeting events artifacts concatenation.
        CompositedVideo:
          allOf:
          - $ref: '#/components/schemas/CompositedVideoConcatenationConfiguration'
          description: The configuration for the composited video artifacts concatenation.
      required:
      - Audio
      - Video
      - Content
      - DataChannel
      - TranscriptionMessages
      - MeetingEvents
      - CompositedVideo
      description: The configuration for the artifacts concatenation.
    ArtifactsConcatenationState:
      type: string
      enum:
      - Enabled
      - Disabled
    ArtifactsConfiguration:
      type: object
      properties:
        Audio:
          allOf:
          - $ref: '#/components/schemas/AudioArtifactsConfiguration'
          description: The configuration for the audio artifacts.
        Video:
          allOf:
          - $ref: '#/components/schemas/VideoArtifactsConfiguration'
          description: The configuration for the video artifacts.
        Content:
          allOf:
          - $ref: '#/components/schemas/ContentArtifactsConfiguration'
          description: The configuration for the content artifacts.
        CompositedVideo:
          allOf:
          - $ref: '#/components/schemas/CompositedVideoArtifactsConfiguration'
          description: Enables video compositing.
      required:
      - Audio
      - Video
      - Content
      description: The configuration for the artifacts.
    ArtifactsState:
      type: string
      enum:
      - Enabled
      - Disabled
    AttendeeIdList:
      type: array
      items:
        $ref: '#/components/schemas/GuidString'
    AudioArtifactsConcatenationState:
      type: string
      enum:
      - Enabled
    AudioArtifactsConfiguration:
      type: object
      properties:
        MuxType:
          allOf:
          - $ref: '#/components/schemas/AudioMuxType'
          description: The MUX type of the audio artifact configuration object.
      required:
      - MuxType
      description: The audio artifact configuration object.
    AudioChannelsOption:
      type: string
      enum:
      - Stereo
      - Mono
    AudioConcatenationConfiguration:
      type: object
      properties:
        State:
          allOf:
          - $ref: '#/components/schemas/AudioArtifactsConcatenationState'
          description: Enables or disables the configuration object.
      required:
      - State
      description: The audio artifact concatenation configuration object.
    AudioMuxType:
      type: string
      enum:
      - AudioOnly
      - AudioWithActiveSpeakerVideo
      - AudioWithCompositedVideo
    AudioSampleRateOption:
      type: string
      pattern: ^44100|48000$
    AwsRegion:
      type: string
      pattern: ^([a-z]+-){2,}\d+$
      minLength: 1
      maxLength: 32
    BadRequestException:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/String'
        RequestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The request ID associated with the call responsible for the
            exception.
      description: The input parameters don't match the service's restrictions.
    Boolean:
      type: boolean
      default: false
    BorderColor:
      type: string
      enum:
      - Black
      - Blue
      - Red
      - Green
      - White
      - Yellow
    BorderThickness:
      type: integer
      minimum: 1
      maximum: 20
    CallAnalyticsLanguageCode:
      type: string
      enum:
      - en-US
      - en-GB
      - es-US
      - fr-CA
      - fr-FR
      - en-AU
      - it-IT
      - de-DE
      - pt-BR
    CanvasOrientation:
      type: string
      enum:
      - Landscape
      - Portrait
    CategoryName:
      type: string
      pattern: ^[0-9a-zA-Z._-]+$
      minLength: 1
      maxLength: 200
    CategoryNameList:
      type: array
      items:
        $ref: '#/components/schemas/CategoryName'
    ChannelDefinition:
      type: object
      properties:
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/ChannelId'
          description: The channel ID.
        ParticipantRole:
          allOf:
          - $ref: '#/components/schemas/ParticipantRole'
          description: Specifies whether the audio in a channel belongs to the `AGENT`
            or `CUSTOMER`.
      required:
      - ChannelId
      description: Defines an audio channel in a Kinesis video stream.
    ChannelDefinitions:
      type: array
      items:
        $ref: '#/components/schemas/ChannelDefinition'
    ChannelId:
      type: integer
      default: 0
      minimum: 0
      maximum: 1
    ChimeSdkMeetingConcatenationConfiguration:
      type: object
      properties:
        ArtifactsConfiguration:
          allOf:
          - $ref: '#/components/schemas/ArtifactsConcatenationConfiguration'
          description: The configuration for the artifacts in an Amazon Chime SDK
            meeting concatenation.
      required:
      - ArtifactsConfiguration
      description: The configuration object of the Amazon Chime SDK meeting concatenation
        for a specified media pipeline.
    ChimeSdkMeetingConfiguration:
      type: object
      properties:
        SourceConfiguration:
          allOf:
          - $ref: '#/components/schemas/SourceConfiguration'
          description: The source configuration for a specified media pipeline.
        ArtifactsConfiguration:
          allOf:
          - $ref: '#/components/schemas/ArtifactsConfiguration'
          description: The configuration for the artifacts in an Amazon Chime SDK
            meeting.
      description: The configuration object of the Amazon Chime SDK meeting for a
        specified media pipeline. `SourceType` must be `ChimeSdkMeeting`.
    ChimeSdkMeetingLiveConnectorConfiguration:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The configuration object's Chime SDK meeting ARN.
        MuxType:
          allOf:
          - $ref: '#/components/schemas/LiveConnectorMuxType'
          description: The configuration object's multiplex type.
        CompositedVideo:
          allOf:
          - $ref: '#/components/schemas/CompositedVideoArtifactsConfiguration'
          description: The media pipeline's composited video.
        SourceConfiguration:
          allOf:
          - $ref: '#/components/schemas/SourceConfiguration'
          description: The source configuration settings of the media pipeline's configuration
            object.
      required:
      - Arn
      - MuxType
      description: The media pipeline's configuration object.
    ClientRequestToken:
      type: string
      pattern: ^[-_a-zA-Z0-9]*$
      minLength: 2
      maxLength: 64
    CompositedVideoArtifactsConfiguration:
      type: object
      properties:
        Layout:
          allOf:
          - $ref: '#/components/schemas/LayoutOption'
          description: The layout setting, such as `GridView` in the configuration
            object.
        Resolution:
          allOf:
          - $ref: '#/components/schemas/ResolutionOption'
          description: 'The video resolution setting in the configuration object.
            Default: HD at 1280 x 720. FHD resolution: 1920 x 1080.'
        GridViewConfiguration:
          allOf:
          - $ref: '#/components/schemas/GridViewConfiguration'
          description: The `GridView` configuration setting.
      required:
      - GridViewConfiguration
      description: Specifies the configuration for compositing video artifacts.
    CompositedVideoConcatenationConfiguration:
      type: object
      properties:
        State:
          allOf:
          - $ref: '#/components/schemas/ArtifactsConcatenationState'
          description: Enables or disables the configuration object.
      required:
      - State
      description: The composited video configuration object for a specified media
        pipeline. `SourceType` must be `ChimeSdkMeeting`.
    ConcatenationSink:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/ConcatenationSinkType'
          description: The type of data sink in the configuration object.
        S3BucketSinkConfiguration:
          allOf:
          - $ref: '#/components/schemas/S3BucketSinkConfiguration'
          description: The configuration settings for an Amazon S3 bucket sink.
      required:
      - Type
      - S3BucketSinkConfiguration
      description: The data sink of the configuration object.
    ConcatenationSinkList:
      type: array
      items:
        $ref: '#/components/schemas/ConcatenationSink'
    ConcatenationSinkType:
      type: string
      enum:
      - S3Bucket
    ConcatenationSource:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/ConcatenationSourceType'
          description: The type of concatenation source in a configuration object.
        MediaCapturePipelineSourceConfiguration:
          allOf:
          - $ref: '#/components/schemas/MediaCapturePipelineSourceConfiguration'
          description: The concatenation settings for the media pipeline in a configuration
            object.
      required:
      - Type
      - MediaCapturePipelineSourceConfiguration
      description: The source type and media pipeline configuration settings in a
        configuration object.
    ConcatenationSourceList:
      type: array
      items:
        $ref: '#/components/schemas/ConcatenationSource'
    ConcatenationSourceType:
      type: string
      enum:
      - MediaCapturePipeline
    ConflictException:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/String'
        RequestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The request ID associated with the call responsible for the
            exception.
      description: The request could not be processed because of conflict in the current
        state of the resource.
    ContentArtifactsConfiguration:
      type: object
      properties:
        State:
          allOf:
          - $ref: '#/components/schemas/ArtifactsState'
          description: Indicates whether the content artifact is enabled or disabled.
        MuxType:
          allOf:
          - $ref: '#/components/schemas/ContentMuxType'
          description: The MUX type of the artifact configuration.
      required:
      - State
      description: The content artifact object.
    ContentConcatenationConfiguration:
      type: object
      properties:
        State:
          allOf:
          - $ref: '#/components/schemas/ArtifactsConcatenationState'
          description: Enables or disables the configuration object.
      required:
      - State
      description: The composited content configuration object for a specified media
        pipeline.
    ContentMuxType:
      type: string
      enum:
      - ContentOnly
    ContentRedactionOutput:
      type: string
      enum:
      - redacted
      - redacted_and_unredacted
    ContentShareLayoutOption:
      type: string
      enum:
      - PresenterOnly
      - Horizontal
      - Vertical
      - ActiveSpeakerOnly
    ContentType:
      type: string
      enum:
      - PII
    CornerRadius:
      type: integer
      minimum: 1
      maximum: 20
    CreateMediaCapturePipelineRequest:
      type: object
      properties:
        SourceType:
          allOf:
          - $ref: '#/components/schemas/MediaPipelineSourceType'
          description: Source type from which the media artifacts are captured. A
            Chime SDK Meeting is the only supported source.
        SourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: ARN of the source from which the media artifacts are captured.
        SinkType:
          allOf:
          - $ref: '#/components/schemas/MediaPipelineSinkType'
          description: Destination type to which the media artifacts are saved. You
            must use an S3 bucket.
        SinkArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the sink type.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: The unique identifier for the client request. The token makes
            the API request idempotent. Use a unique token for each media pipeline
            request.
        ChimeSdkMeetingConfiguration:
          allOf:
          - $ref: '#/components/schemas/ChimeSdkMeetingConfiguration'
          description: The configuration for a specified media pipeline. `SourceType`
            must be `ChimeSdkMeeting`.
        SseAwsKeyManagementParams:
          allOf:
          - $ref: '#/components/schemas/SseAwsKeyManagementParams'
          description: An object that contains server side encryption parameters to
            be used by media capture pipeline. The parameters can also be used by
            media concatenation pipeline taking media capture pipeline as a media
            source.
        SinkIamRoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'The Amazon Resource Name (ARN) of the sink role to be used
            with `AwsKmsKeyId` in `SseAwsKeyManagementParams`. Can only interact with
            `S3Bucket` sink type. The role must belong to the caller’s account and
            be able to act on behalf of the caller during the API call. All minimum
            policy permissions requirements for the caller to perform sink-related
            actions are the same for `SinkIamRoleArn`.


            Additionally, the role must have permission to `kms:GenerateDataKey` using
            KMS key supplied as `AwsKmsKeyId` in `SseAwsKeyManagementParams`. If media
            concatenation will be required later, the role must also have permission
            to `kms:Decrypt` for the same KMS key.'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tag key-value pairs.
      required:
      - SourceType
      - SourceArn
      - SinkType
      - SinkArn
    CreateMediaCapturePipelineResponse:
      type: object
      properties:
        MediaCapturePipeline:
          allOf:
          - $ref: '#/components/schemas/MediaCapturePipeline'
          description: A media pipeline object, the ID, source type, source ARN, sink
            type, and sink ARN of a media pipeline object.
    CreateMediaConcatenationPipelineRequest:
      type: object
      properties:
        Sources:
          allOf:
          - $ref: '#/components/schemas/ConcatenationSourceList'
          description: An object that specifies the sources for the media concatenation
            pipeline.
        Sinks:
          allOf:
          - $ref: '#/components/schemas/ConcatenationSinkList'
          description: An object that specifies the data sinks for the media concatenation
            pipeline.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: The unique identifier for the client request. The token makes
            the API request idempotent. Use a unique token for each media concatenation
            pipeline request.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags associated with the media concatenation pipeline.
      required:
      - Sources
      - Sinks
    CreateMediaConcatenationPipelineResponse:
      type: object
      properties:
        MediaConcatenationPipeline:
          allOf:
          - $ref: '#/components/schemas/MediaConcatenationPipeline'
          description: A media concatenation pipeline object, the ID, source type,
            `MediaPipelineARN`, and sink of a media concatenation pipeline object.
    CreateMediaInsightsPipelineConfigurationRequest:
      type: object
      properties:
        MediaInsightsPipelineConfigurationName:
          allOf:
          - $ref: '#/components/schemas/MediaInsightsPipelineConfigurationNameString'
          description: The name of the media insights pipeline configuration.
        ResourceAccessRoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the role used by the service to access Amazon Web
            Services resources, including `Transcribe` and `Transcribe Call Analytics`,
            on the caller’s behalf.
        RealTimeAlertConfiguration:
          allOf:
          - $ref: '#/components/schemas/RealTimeAlertConfiguration'
          description: The configuration settings for the real-time alerts in a media
            insights pipeline configuration.
        Elements:
          allOf:
          - $ref: '#/components/schemas/MediaInsightsPipelineConfigurationElements'
          description: The elements in the request, such as a processor for Amazon
            Transcribe or a sink for a Kinesis Data Stream.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags assigned to the media insights pipeline configuration.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: The unique identifier for the media insights pipeline configuration
            request.
      required:
      - MediaInsightsPipelineConfigurationName
      - ResourceAccessRoleArn
      - Elements
    CreateMediaInsightsPipelineConfigurationResponse:
      type: object
      properties:
        MediaInsightsPipelineConfiguration:
          allOf:
          - $ref: '#/components/schemas/MediaInsightsPipelineConfiguration'
          description: The configuration settings for the media insights pipeline.
    CreateMediaInsightsPipelineRequest:
      type: object
      properties:
        MediaInsightsPipelineConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the pipeline's configuration.
        KinesisVideoStreamSourceRuntimeConfiguration:
          allOf:
          - $ref: '#/components/schemas/KinesisVideoStreamSourceRuntimeConfiguration'
          description: The runtime configuration for the Kinesis video stream source
            of the media insights pipeline.
        MediaInsightsRuntimeMetadata:
          allOf:
          - $ref: '#/components/schemas/MediaInsightsRuntimeMetadata'
          description: The runtime metadata for the media insights pipeline. Consists
            of a key-value map of strings.
        KinesisVideoStreamRecordingSourceRuntimeConfiguration:
          allOf:
          - $ref: '#/components/schemas/KinesisVideoStreamRecordingSourceRuntimeConfiguration'
          description: The runtime configuration for the Kinesis video recording stream
            source.
        S3RecordingSinkRuntimeConfiguration:
          allOf:
          - $ref: '#/components/schemas/S3RecordingSinkRuntimeConfiguration'
          description: The runtime configuration for the S3 recording sink. If specified,
            the settings in this structure override any settings in `S3RecordingSinkConfiguration`.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags assigned to the media insights pipeline.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: The unique identifier for the media insights pipeline request.
      required:
      - MediaInsightsPipelineConfigurationArn
    CreateMediaInsightsPipelineResponse:
      type: object
      properties:
        MediaInsightsPipeline:
          allOf:
          - $ref: '#/components/schemas/MediaInsightsPipeline'
          description: The media insights pipeline object.
      required:
      - MediaInsightsPipeline
    CreateMediaLiveConnectorPipelineRequest:
      type: object
      properties:
        Sources:
          allOf:
          - $ref: '#/components/schemas/LiveConnectorSourceList'
          description: The media live connector pipeline's data sources.
        Sinks:
          allOf:
          - $ref: '#/components/schemas/LiveConnectorSinkList'
          description: The media live connector pipeline's data sinks.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: The token assigned to the client making the request.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags associated with the media live connector pipeline.
      required:
      - Sources
      - Sinks
    CreateMediaLiveConnectorPipelineResponse:
      type: object
      properties:
        MediaLiveConnectorPipeline:
          allOf:
          - $ref: '#/components/schemas/MediaLiveConnectorPipeline'
          description: The new media live connector pipeline.
    CreateMediaPipelineKinesisVideoStreamPoolRequest:
      type: object
      properties:
        StreamConfiguration:
          allOf:
          - $ref: '#/components/schemas/KinesisVideoStreamConfiguration'
          description: The configuration settings for the stream.
        PoolName:
          allOf:
          - $ref: '#/components/schemas/KinesisVideoStreamPoolName'
          description: The name of the pool.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: The token assigned to the client making the request.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags assigned to the stream pool.
      required:
      - StreamConfiguration
      - PoolName
    CreateMediaPipelineKinesisVideoStreamPoolResponse:
      type: object
      properties:
        KinesisVideoStreamPoolConfiguration:
          allOf:
          - $ref: '#/components/schemas/KinesisVideoStreamPoolConfiguration'
          description: The configuration for applying the streams to the pool.
    CreateMediaStreamPipelineRequest:
      type: object
      properties:
        Sources:
          allOf:
          - $ref: '#/components/schemas/MediaStreamSourceList'
          description: The data sources for the media pipeline.
        Sinks:
          allOf:
          - $ref: '#/components/schemas/MediaStreamSinkList'
          description: The data sink for the media pipeline.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: The token assigned to the client making the request.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags assigned to the media pipeline.
      required:
      - Sources
      - Sinks
    CreateMediaStreamPipelineResponse:
      type: object
      properties:
        MediaStreamPipeline:
          allOf:
          - $ref: '#/components/schemas/MediaStreamPipeline'
          description: The requested media pipeline.
    DataChannelConcatenationConfiguration:
      type: object
      properties:
        State:
          allOf:
          - $ref: '#/components/schemas/ArtifactsConcatenationState'
          description: Enables or disables the configuration object.
      required:
      - State
      description: The content configuration object's data channel.
    DataRetentionChangeInHours:
      type: integer
      minimum: 1
    DataRetentionInHours:
      type: integer
      minimum: 0
    DeleteMediaCapturePipelineRequest:
      type: object
      properties:
        MediaPipelineId:
          allOf:
          - $ref: '#/components/schemas/GuidString'
          description: The ID of the media pipeline being deleted.
      required:
      - MediaPipelineId
    DeleteMediaInsightsPipelineConfigurationRequest:
      type: object
      properties:
        Identifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The unique identifier of the resource to be deleted. Valid
            values include the name and ARN of the media insights pipeline configuration.
      required:
      - Identifier
    DeleteMediaPipelineKinesisVideoStreamPoolRequest:
      type: object
      properties:
        Identifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The unique identifier of the requested resource. Valid values
            include the name and ARN of the media pipeline Kinesis Video Stream pool.
      required:
      - Identifier
    DeleteMediaPipelineRequest:
      type: object
      properties:
        MediaPipelineId:
          allOf:
          - $ref: '#/components/schemas/GuidString'
          description: The ID of the media pipeline to delete.
      required:
      - MediaPipelineId
    ErrorCode:
      type: string
      enum:
      - BadRequest
      - Forbidden
      - NotFound
      - ResourceLimitExceeded
      - ServiceFailure
      - ServiceUnavailable
      - Throttling
    ExternalUserIdList:
      type: array
      items:
        $ref: '#/components/schemas/ExternalUserIdType'
    ExternalUserIdType:
      type: string
      minLength: 2
      maxLength: 64
    ForbiddenException:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/String'
        RequestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The request id associated with the call responsible for the
            exception.
      description: The client is permanently forbidden from making the request.
    FragmentNumberString:
      type: string
      pattern: ^[0-9]+$
      minLength: 1
      maxLength: 128
    FragmentSelector:
      type: object
      properties:
        FragmentSelectorType:
          allOf:
          - $ref: '#/components/schemas/FragmentSelectorType'
          description: The origin of the timestamps to use, `Server` or `Producer`.
            For more information, see [StartSelectorType](https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/API_dataplane_StartSelector.html)
            in the _Amazon Kinesis Video Streams Developer Guide_.
        TimestampRange:
          allOf:
          - $ref: '#/components/schemas/TimestampRange'
          description: The range of timestamps to return.
      required:
      - FragmentSelectorType
      - TimestampRange
      description: "Describes the timestamp range and timestamp origin of a range\
        \ of fragments.\n\nOnly fragments with a start timestamp greater than or equal\
        \ to the given start time and less than or equal to the end time are returned.\
        \ For example, say a stream contains fragments with the following start timestamps:\n\
        \n  * 00:00:00\n\n  * 00:00:02\n\n  * 00:00:04\n\n  * 00:00:06\n\nA fragment\
        \ selector range with a start time of 00:00:01 and end time of 00:00:04 would\
        \ return the fragments with start times of 00:00:02 and 00:00:04."
    FragmentSelectorType:
      type: string
      enum:
      - ProducerTimestamp
      - ServerTimestamp
    GetMediaCapturePipelineRequest:
      type: object
      properties:
        MediaPipelineId:
          allOf:
          - $ref: '#/components/schemas/GuidString'
          description: The ID of the pipeline that you want to get.
      required:
      - MediaPipelineId
    GetMediaCapturePipelineResponse:
      type: object
      properties:
        MediaCapturePipeline:
          allOf:
          - $ref: '#/components/schemas/MediaCapturePipeline'
          description: The media pipeline object.
    GetMediaInsightsPipelineConfigurationRequest:
      type: object
      properties:
        Identifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The unique identifier of the requested resource. Valid values
            include the name and ARN of the media insights pipeline configuration.
      required:
      - Identifier
    GetMediaInsightsPipelineConfigurationResponse:
      type: object
      properties:
        MediaInsightsPipelineConfiguration:
          allOf:
          - $ref: '#/components/schemas/MediaInsightsPipelineConfiguration'
          description: The requested media insights pipeline configuration.
    GetMediaPipelineKinesisVideoStreamPoolRequest:
      type: object
      properties:
        Identifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The unique identifier of the requested resource. Valid values
            include the name and ARN of the media pipeline Kinesis Video Stream pool.
      required:
      - Identifier
    GetMediaPipelineKinesisVideoStreamPoolResponse:
      type: object
      properties:
        KinesisVideoStreamPoolConfiguration:
          allOf:
          - $ref: '#/components/schemas/KinesisVideoStreamPoolConfiguration'
          description: The video stream pool configuration object.
    GetMediaPipelineRequest:
      type: object
      properties:
        MediaPipelineId:
          allOf:
          - $ref: '#/components/schemas/GuidString'
          description: The ID of the pipeline that you want to get.
      required:
      - MediaPipelineId
    GetMediaPipelineResponse:
      type: object
      properties:
        MediaPipeline:
          allOf:
          - $ref: '#/components/schemas/MediaPipeline'
          description: The media pipeline object.
    GetSpeakerSearchTaskRequest:
      type: object
      properties:
        Identifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The unique identifier of the resource to be updated. Valid
            values include the ID and ARN of the media insights pipeline.
        SpeakerSearchTaskId:
          allOf:
          - $ref: '#/components/schemas/GuidString'
          description: The ID of the speaker search task.
      required:
      - Identifier
      - SpeakerSearchTaskId
    GetSpeakerSearchTaskResponse:
      type: object
      properties:
        SpeakerSearchTask:
          allOf:
          - $ref: '#/components/schemas/SpeakerSearchTask'
          description: The details of the speaker search task.
    GetVoiceToneAnalysisTaskRequest:
      type: object
      properties:
        Identifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The unique identifier of the resource to be updated. Valid
            values include the ID and ARN of the media insights pipeline.
        VoiceToneAnalysisTaskId:
          allOf:
          - $ref: '#/components/schemas/GuidString'
          description: The ID of the voice tone analysis task.
      required:
      - Identifier
      - VoiceToneAnalysisTaskId
    GetVoiceToneAnalysisTaskResponse:
      type: object
      properties:
        VoiceToneAnalysisTask:
          allOf:
          - $ref: '#/components/schemas/VoiceToneAnalysisTask'
          description: The details of the voice tone analysis task.
    GridViewConfiguration:
      type: object
      properties:
        ContentShareLayout:
          allOf:
          - $ref: '#/components/schemas/ContentShareLayoutOption'
          description: Defines the layout of the video tiles when content sharing
            is enabled.
        PresenterOnlyConfiguration:
          allOf:
          - $ref: '#/components/schemas/PresenterOnlyConfiguration'
          description: Defines the configuration options for a presenter only video
            tile.
        ActiveSpeakerOnlyConfiguration:
          allOf:
          - $ref: '#/components/schemas/ActiveSpeakerOnlyConfiguration'
          description: The configuration settings for an `ActiveSpeakerOnly` video
            tile.
        HorizontalLayoutConfiguration:
          allOf:
          - $ref: '#/components/schemas/HorizontalLayoutConfiguration'
          description: The configuration settings for a horizontal layout.
        VerticalLayoutConfiguration:
          allOf:
          - $ref: '#/components/schemas/VerticalLayoutConfiguration'
          description: The configuration settings for a vertical layout.
        VideoAttribute:
          allOf:
          - $ref: '#/components/schemas/VideoAttribute'
          description: The attribute settings for the video tiles.
        CanvasOrientation:
          allOf:
          - $ref: '#/components/schemas/CanvasOrientation'
          description: The orientation setting, horizontal or vertical.
      required:
      - ContentShareLayout
      description: Specifies the type of grid layout.
    GuidString:
      type: string
      pattern: ^[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}$
      minLength: 36
      maxLength: 36
    HighlightColor:
      type: string
      enum:
      - Black
      - Blue
      - Red
      - Green
      - White
      - Yellow
    HorizontalLayoutConfiguration:
      type: object
      properties:
        TileOrder:
          allOf:
          - $ref: '#/components/schemas/TileOrder'
          description: Sets the automatic ordering of the video tiles.
        TilePosition:
          allOf:
          - $ref: '#/components/schemas/HorizontalTilePosition'
          description: Sets the position of horizontal tiles.
        TileCount:
          allOf:
          - $ref: '#/components/schemas/TileCount'
          description: The maximum number of video tiles to display.
        TileAspectRatio:
          allOf:
          - $ref: '#/components/schemas/TileAspectRatio'
          description: Specifies the aspect ratio of all video tiles.
      description: Defines the configuration settings for the horizontal layout.
    HorizontalTilePosition:
      type: string
      enum:
      - Top
      - Bottom
    Iso8601Timestamp:
      type: string
      format: date-time
    IssueDetectionConfiguration:
      type: object
      properties:
        RuleName:
          allOf:
          - $ref: '#/components/schemas/RuleName'
          description: The name of the issue detection rule.
      required:
      - RuleName
      description: A structure that contains the configuration settings for an issue
        detection task.
    Keyword:
      type: string
      pattern: ^[\s0-9a-zA-Z'-]+$
      minLength: 1
      maxLength: 100
    KeywordMatchConfiguration:
      type: object
      properties:
        RuleName:
          allOf:
          - $ref: '#/components/schemas/RuleName'
          description: The name of the keyword match rule.
        Keywords:
          allOf:
          - $ref: '#/components/schemas/KeywordMatchWordList'
          description: The keywords or phrases that you want to match.
        Negate:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'Matches keywords or phrases on their presence or absence.
            If set to `TRUE`, the rule matches when all the specified keywords or
            phrases are absent. Default: `FALSE`.'
      required:
      - RuleName
      - Keywords
      description: A structure that contains the settings for a keyword match task.
    KeywordMatchWordList:
      type: array
      items:
        $ref: '#/components/schemas/Keyword'
    KinesisDataStreamSinkConfiguration:
      type: object
      properties:
        InsightsTarget:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the sink.
      description: A structure that contains the configuration settings for a Kinesis
        Data Stream sink.
    KinesisVideoStreamArn:
      type: string
      pattern: ^arn:[a-z\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+$
      minLength: 1
      maxLength: 1024
    KinesisVideoStreamConfiguration:
      type: object
      properties:
        Region:
          allOf:
          - $ref: '#/components/schemas/AwsRegion'
          description: The Amazon Web Services Region of the video stream.
        DataRetentionInHours:
          allOf:
          - $ref: '#/components/schemas/DataRetentionInHours'
          description: The amount of time that data is retained.
      required:
      - Region
      description: 'The configuration of an Kinesis video stream.


        If a meeting uses an opt-in Region as its [MediaRegion](https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_meeting-chime_CreateMeeting.html#chimesdk-meeting-chime_CreateMeeting-request-MediaRegion),
        the KVS stream must be in that same Region. For example, if a meeting uses
        the `af-south-1` Region, the KVS stream must also be in `af-south-1`. However,
        if the meeting uses a Region that AWS turns on by default, the KVS stream
        can be in any available Region, including an opt-in Region. For example, if
        the meeting uses `ca-central-1`, the KVS stream can be in `eu-west-2`, `us-east-1`,
        `af-south-1`, or any other Region that the Amazon Chime SDK supports.


        To learn which AWS Region a meeting uses, call the [GetMeeting](https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_meeting-chime_GetMeeting.html)
        API and use the [MediaRegion](https://docs.aws.amazon.com/chime-sdk/latest/APIReference/API_meeting-chime_CreateMeeting.html#chimesdk-meeting-chime_CreateMeeting-request-MediaRegion)
        parameter from the response.


        For more information about opt-in Regions, refer to [Available Regions](https://docs.aws.amazon.com/chime-sdk/latest/dg/sdk-available-regions.html)
        in the _Amazon Chime SDK Developer Guide_ , and [Specify which AWS Regions
        your account can use](https://docs.aws.amazon.com/accounts/latest/reference/manage-acct-regions.html#rande-manage-enable.html),
        in the _AWS Account Management Reference Guide_.'
    KinesisVideoStreamConfigurationUpdate:
      type: object
      properties:
        DataRetentionInHours:
          allOf:
          - $ref: '#/components/schemas/DataRetentionChangeInHours'
          description: The updated time that data is retained.
      description: The updated Kinesis video stream configuration object.
    KinesisVideoStreamPoolConfiguration:
      type: object
      properties:
        PoolArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the video stream pool configuration.
        PoolName:
          allOf:
          - $ref: '#/components/schemas/KinesisVideoStreamPoolName'
          description: The name of the video stream pool configuration.
        PoolId:
          allOf:
          - $ref: '#/components/schemas/KinesisVideoStreamPoolId'
          description: The ID of the video stream pool in the configuration.
        PoolStatus:
          allOf:
          - $ref: '#/components/schemas/KinesisVideoStreamPoolStatus'
          description: The status of the video stream pool in the configuration.
        PoolSize:
          allOf:
          - $ref: '#/components/schemas/KinesisVideoStreamPoolSize'
          description: The size of the video stream pool in the configuration.
        StreamConfiguration:
          allOf:
          - $ref: '#/components/schemas/KinesisVideoStreamConfiguration'
          description: The Kinesis video stream pool configuration object.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Iso8601Timestamp'
          description: The time at which the configuration was created.
        UpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Iso8601Timestamp'
          description: The time at which the configuration was updated.
      description: The video stream pool configuration object.
    KinesisVideoStreamPoolId:
      type: string
      pattern: ^[0-9a-zA-Z._-]+$
      minLength: 1
      maxLength: 256
    KinesisVideoStreamPoolName:
      type: string
      pattern: ^[0-9a-zA-Z._-]+$
      minLength: 1
      maxLength: 128
    KinesisVideoStreamPoolSize:
      type: integer
      minimum: 0
    KinesisVideoStreamPoolStatus:
      type: string
      enum:
      - CREATING
      - ACTIVE
      - UPDATING
      - DELETING
      - FAILED
    KinesisVideoStreamPoolSummary:
      type: object
      properties:
        PoolName:
          allOf:
          - $ref: '#/components/schemas/KinesisVideoStreamPoolName'
          description: The name of the video stream pool.
        PoolId:
          allOf:
          - $ref: '#/components/schemas/KinesisVideoStreamPoolId'
          description: The ID of the video stream pool.
        PoolArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the video stream pool.
      description: A summary of the Kinesis video stream pool.
    KinesisVideoStreamPoolSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/KinesisVideoStreamPoolSummary'
    KinesisVideoStreamRecordingSourceRuntimeConfiguration:
      type: object
      properties:
        Streams:
          allOf:
          - $ref: '#/components/schemas/RecordingStreamList'
          description: The stream or streams to be recorded.
        FragmentSelector:
          allOf:
          - $ref: '#/components/schemas/FragmentSelector'
          description: Describes the timestamp range and timestamp origin of a range
            of fragments in the Kinesis video stream.
      required:
      - Streams
      - FragmentSelector
      description: A structure that contains the runtime settings for recording a
        Kinesis video stream.
    KinesisVideoStreamSourceRuntimeConfiguration:
      type: object
      properties:
        Streams:
          allOf:
          - $ref: '#/components/schemas/Streams'
          description: The streams in the source runtime configuration of a Kinesis
            video stream.
        MediaEncoding:
          allOf:
          - $ref: '#/components/schemas/MediaEncoding'
          description: 'Specifies the encoding of your input audio. Supported format:
            PCM (only signed 16-bit little-endian audio formats, which does not include
            WAV)


            For more information, see [Media formats](https://docs.aws.amazon.com/transcribe/latest/dg/how-input.html#how-input-audio)
            in the _Amazon Transcribe Developer Guide_.'
        MediaSampleRate:
          allOf:
          - $ref: '#/components/schemas/MediaSampleRateHertz'
          description: 'The sample rate of the input audio (in hertz). Low-quality
            audio, such as telephone audio, is typically around 8,000 Hz. High-quality
            audio typically ranges from 16,000 Hz to 48,000 Hz. Note that the sample
            rate you specify must match that of your audio.


            Valid Range: Minimum value of 8000. Maximum value of 48000.'
      required:
      - Streams
      - MediaEncoding
      - MediaSampleRate
      description: The runtime configuration settings for the Kinesis video stream
        source.
    KinesisVideoStreamSourceTaskConfiguration:
      type: object
      properties:
        StreamArn:
          allOf:
          - $ref: '#/components/schemas/KinesisVideoStreamArn'
          description: The ARN of the stream.
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/ChannelId'
          description: The channel ID.
        FragmentNumber:
          allOf:
          - $ref: '#/components/schemas/FragmentNumberString'
          description: The unique identifier of the fragment to begin processing.
      required:
      - StreamArn
      - ChannelId
      description: The task configuration settings for the Kinesis video stream source.
    LambdaFunctionSinkConfiguration:
      type: object
      properties:
        InsightsTarget:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the sink.
      description: A structure that contains the configuration settings for an AWS
        Lambda function's data sink.
    LanguageOptions:
      type: string
      pattern: ^[a-zA-Z-,]+$
      minLength: 1
      maxLength: 200
    LayoutOption:
      type: string
      enum:
      - GridView
    ListMediaCapturePipelinesRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token used to retrieve the next page of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ResultMax'
          description: 'The maximum number of results to return in a single call.
            Valid Range: 1 - 99.'
    ListMediaCapturePipelinesResponse:
      type: object
      properties:
        MediaCapturePipelines:
          allOf:
          - $ref: '#/components/schemas/MediaCapturePipelineSummaryList'
          description: The media pipeline objects in the list.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token used to retrieve the next page of results.
    ListMediaInsightsPipelineConfigurationsRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token used to return the next page of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ResultMax'
          description: The maximum number of results to return in a single call.
    ListMediaInsightsPipelineConfigurationsResponse:
      type: object
      properties:
        MediaInsightsPipelineConfigurations:
          allOf:
          - $ref: '#/components/schemas/MediaInsightsPipelineConfigurationSummaryList'
          description: The requested list of media insights pipeline configurations.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token used to return the next page of results.
    ListMediaPipelineKinesisVideoStreamPoolsRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token used to return the next page of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ResultMax'
          description: The maximum number of results to return in a single call.
    ListMediaPipelineKinesisVideoStreamPoolsResponse:
      type: object
      properties:
        KinesisVideoStreamPools:
          allOf:
          - $ref: '#/components/schemas/KinesisVideoStreamPoolSummaryList'
          description: The list of video stream pools.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token used to return the next page of results.
    ListMediaPipelinesRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token used to retrieve the next page of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ResultMax'
          description: 'The maximum number of results to return in a single call.
            Valid Range: 1 - 99.'
    ListMediaPipelinesResponse:
      type: object
      properties:
        MediaPipelines:
          allOf:
          - $ref: '#/components/schemas/MediaPipelineList'
          description: The media pipeline objects in the list.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token used to retrieve the next page of results.
    ListTagsForResourceRequest:
      type: object
      properties:
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          description: The ARN of the media pipeline associated with any tags. The
            ARN consists of the pipeline's region, resource ID, and pipeline ID.
      required:
      - ResourceARN
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags associated with the specified media pipeline.
    LiveConnectorMuxType:
      type: string
      enum:
      - AudioWithCompositedVideo
      - AudioWithActiveSpeakerVideo
    LiveConnectorRTMPConfiguration:
      type: object
      properties:
        Url:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          description: The URL of the RTMP configuration.
        AudioChannels:
          allOf:
          - $ref: '#/components/schemas/AudioChannelsOption'
          description: The audio channels set for the RTMP configuration
        AudioSampleRate:
          allOf:
          - $ref: '#/components/schemas/AudioSampleRateOption'
          description: 'The audio sample rate set for the RTMP configuration. Default:
            48000.'
      required:
      - Url
      description: The media pipeline's RTMP configuration object.
    LiveConnectorSinkConfiguration:
      type: object
      properties:
        SinkType:
          allOf:
          - $ref: '#/components/schemas/LiveConnectorSinkType'
          description: The sink configuration's sink type.
        RTMPConfiguration:
          allOf:
          - $ref: '#/components/schemas/LiveConnectorRTMPConfiguration'
          description: The sink configuration's RTMP configuration settings.
      required:
      - SinkType
      - RTMPConfiguration
      description: The media pipeline's sink configuration settings.
    LiveConnectorSinkList:
      type: array
      items:
        $ref: '#/components/schemas/LiveConnectorSinkConfiguration'
    LiveConnectorSinkType:
      type: string
      enum:
      - RTMP
    LiveConnectorSourceConfiguration:
      type: object
      properties:
        SourceType:
          allOf:
          - $ref: '#/components/schemas/LiveConnectorSourceType'
          description: The source configuration's media source type.
        ChimeSdkMeetingLiveConnectorConfiguration:
          allOf:
          - $ref: '#/components/schemas/ChimeSdkMeetingLiveConnectorConfiguration'
          description: The configuration settings of the connector pipeline.
      required:
      - SourceType
      - ChimeSdkMeetingLiveConnectorConfiguration
      description: The data source configuration object of a streaming media pipeline.
    LiveConnectorSourceList:
      type: array
      items:
        $ref: '#/components/schemas/LiveConnectorSourceConfiguration'
    LiveConnectorSourceType:
      type: string
      enum:
      - ChimeSdkMeeting
    MediaCapturePipeline:
      type: object
      properties:
        MediaPipelineId:
          allOf:
          - $ref: '#/components/schemas/GuidString'
          description: The ID of a media pipeline.
        MediaPipelineArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          description: The ARN of the media capture pipeline
        SourceType:
          allOf:
          - $ref: '#/components/schemas/MediaPipelineSourceType'
          description: Source type from which media artifacts are saved. You must
            use `ChimeMeeting`.
        SourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: ARN of the source from which the media artifacts are saved.
        Status:
          allOf:
          - $ref: '#/components/schemas/MediaPipelineStatus'
          description: The status of the media pipeline.
        SinkType:
          allOf:
          - $ref: '#/components/schemas/MediaPipelineSinkType'
          description: Destination type to which the media artifacts are saved. You
            must use an S3 Bucket.
        SinkArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: ARN of the destination to which the media artifacts are saved.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Iso8601Timestamp'
          description: The time at which the pipeline was created, in ISO 8601 format.
        UpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Iso8601Timestamp'
          description: The time at which the pipeline was updated, in ISO 8601 format.
        ChimeSdkMeetingConfiguration:
          allOf:
          - $ref: '#/components/schemas/ChimeSdkMeetingConfiguration'
          description: The configuration for a specified media pipeline. `SourceType`
            must be `ChimeSdkMeeting`.
        SseAwsKeyManagementParams:
          allOf:
          - $ref: '#/components/schemas/SseAwsKeyManagementParams'
          description: An object that contains server side encryption parameters to
            be used by media capture pipeline. The parameters can also be used by
            media concatenation pipeline taking media capture pipeline as a media
            source.
        SinkIamRoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the sink role to be used
            with `AwsKmsKeyId` in `SseAwsKeyManagementParams`.
      description: A media pipeline object consisting of an ID, source type, source
        ARN, a sink type, a sink ARN, and a configuration object.
    MediaCapturePipelineSourceConfiguration:
      type: object
      properties:
        MediaPipelineArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The media pipeline ARN in the configuration object of a media
            capture pipeline.
        ChimeSdkMeetingConfiguration:
          allOf:
          - $ref: '#/components/schemas/ChimeSdkMeetingConcatenationConfiguration'
          description: The meeting configuration settings in a media capture pipeline
            configuration object.
      required:
      - MediaPipelineArn
      - ChimeSdkMeetingConfiguration
      description: The source configuration object of a media capture pipeline.
    MediaCapturePipelineSummary:
      type: object
      properties:
        MediaPipelineId:
          allOf:
          - $ref: '#/components/schemas/GuidString'
          description: The ID of the media pipeline in the summary.
        MediaPipelineArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          description: The ARN of the media pipeline in the summary.
      description: The summary data of a media capture pipeline.
    MediaCapturePipelineSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/MediaCapturePipelineSummary'
    MediaConcatenationPipeline:
      type: object
      properties:
        MediaPipelineId:
          allOf:
          - $ref: '#/components/schemas/GuidString'
          description: The ID of the media pipeline being concatenated.
        MediaPipelineArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          description: The ARN of the media pipeline that you specify in the `SourceConfiguration`
            object.
        Sources:
          allOf:
          - $ref: '#/components/schemas/ConcatenationSourceList'
          description: The data sources being concatenated.
        Sinks:
          allOf:
          - $ref: '#/components/schemas/ConcatenationSinkList'
          description: The data sinks of the concatenation pipeline.
        Status:
          allOf:
          - $ref: '#/components/schemas/MediaPipelineStatus'
          description: The status of the concatenation pipeline.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Iso8601Timestamp'
          description: The time at which the concatenation pipeline was created.
        UpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Iso8601Timestamp'
          description: The time at which the concatenation pipeline was last updated.
      description: Concatenates audio and video data from one or more data streams.
    MediaEncoding:
      type: string
      enum:
      - pcm
    MediaInsightsPipeline:
      type: object
      properties:
        MediaPipelineId:
          allOf:
          - $ref: '#/components/schemas/GuidString'
          description: The ID of a media insights pipeline.
        MediaPipelineArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of a media insights pipeline.
        MediaInsightsPipelineConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of a media insight pipeline's configuration settings.
        Status:
          allOf:
          - $ref: '#/components/schemas/MediaPipelineStatus'
          description: The status of a media insights pipeline.
        KinesisVideoStreamSourceRuntimeConfiguration:
          allOf:
          - $ref: '#/components/schemas/KinesisVideoStreamSourceRuntimeConfiguration'
          description: The configuration settings for a Kinesis runtime video stream
            in a media insights pipeline.
        MediaInsightsRuntimeMetadata:
          allOf:
          - $ref: '#/components/schemas/MediaInsightsRuntimeMetadata'
          description: The runtime metadata of a media insights pipeline.
        KinesisVideoStreamRecordingSourceRuntimeConfiguration:
          allOf:
          - $ref: '#/components/schemas/KinesisVideoStreamRecordingSourceRuntimeConfiguration'
          description: The runtime configuration settings for a Kinesis recording
            video stream in a media insights pipeline.
        S3RecordingSinkRuntimeConfiguration:
          allOf:
          - $ref: '#/components/schemas/S3RecordingSinkRuntimeConfiguration'
          description: The runtime configuration of the Amazon S3 bucket that stores
            recordings in a media insights pipeline.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Iso8601Timestamp'
          description: The time at which the media insights pipeline was created.
        ElementStatuses:
          allOf:
          - $ref: '#/components/schemas/MediaInsightsPipelineElementStatuses'
          description: The statuses that the elements in a media insights pipeline
            can have during data processing.
      description: A media pipeline that streams call analytics data.
    MediaInsightsPipelineConfiguration:
      type: object
      properties:
        MediaInsightsPipelineConfigurationName:
          allOf:
          - $ref: '#/components/schemas/MediaInsightsPipelineConfigurationNameString'
          description: The name of the configuration.
        MediaInsightsPipelineConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the configuration.
        ResourceAccessRoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the role used by the service to access Amazon Web
            Services resources.
        RealTimeAlertConfiguration:
          allOf:
          - $ref: '#/components/schemas/RealTimeAlertConfiguration'
          description: Lists the rules that trigger a real-time alert.
        Elements:
          allOf:
          - $ref: '#/components/schemas/MediaInsightsPipelineConfigurationElements'
          description: The elements in the configuration.
        MediaInsightsPipelineConfigurationId:
          allOf:
          - $ref: '#/components/schemas/GuidString'
          description: The ID of the configuration.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Iso8601Timestamp'
          description: The time at which the configuration was created.
        UpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Iso8601Timestamp'
          description: The time at which the configuration was last updated.
      description: A structure that contains the configuration settings for a media
        insights pipeline.
    MediaInsightsPipelineConfigurationElement:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/MediaInsightsPipelineConfigurationElementType'
          description: The element type.
        AmazonTranscribeCallAnalyticsProcessorConfiguration:
          allOf:
          - $ref: '#/components/schemas/AmazonTranscribeCallAnalyticsProcessorConfiguration'
          description: The analytics configuration settings for transcribing audio
            in a media insights pipeline configuration element.
        AmazonTranscribeProcessorConfiguration:
          allOf:
          - $ref: '#/components/schemas/AmazonTranscribeProcessorConfiguration'
          description: The transcription processor configuration settings in a media
            insights pipeline configuration element.
        KinesisDataStreamSinkConfiguration:
          allOf:
          - $ref: '#/components/schemas/KinesisDataStreamSinkConfiguration'
          description: The configuration settings for the Kinesis Data Stream Sink
            in a media insights pipeline configuration element.
        S3RecordingSinkConfiguration:
          allOf:
          - $ref: '#/components/schemas/S3RecordingSinkConfiguration'
          description: The configuration settings for the Amazon S3 recording bucket
            in a media insights pipeline configuration element.
        VoiceAnalyticsProcessorConfiguration:
          allOf:
          - $ref: '#/components/schemas/VoiceAnalyticsProcessorConfiguration'
          description: The voice analytics configuration settings in a media insights
            pipeline configuration element.
        LambdaFunctionSinkConfiguration:
          allOf:
          - $ref: '#/components/schemas/LambdaFunctionSinkConfiguration'
          description: The configuration settings for the Amazon Web Services Lambda
            sink in a media insights pipeline configuration element.
        SqsQueueSinkConfiguration:
          allOf:
          - $ref: '#/components/schemas/SqsQueueSinkConfiguration'
          description: The configuration settings for an SQS queue sink in a media
            insights pipeline configuration element.
        SnsTopicSinkConfiguration:
          allOf:
          - $ref: '#/components/schemas/SnsTopicSinkConfiguration'
          description: The configuration settings for an SNS topic sink in a media
            insights pipeline configuration element.
        VoiceEnhancementSinkConfiguration:
          allOf:
          - $ref: '#/components/schemas/VoiceEnhancementSinkConfiguration'
          description: The configuration settings for voice enhancement sink in a
            media insights pipeline configuration element.
      required:
      - Type
      description: An element in a media insights pipeline configuration.
    MediaInsightsPipelineConfigurationElementType:
      type: string
      enum:
      - AmazonTranscribeCallAnalyticsProcessor
      - VoiceAnalyticsProcessor
      - AmazonTranscribeProcessor
      - KinesisDataStreamSink
      - LambdaFunctionSink
      - SqsQueueSink
      - SnsTopicSink
      - S3RecordingSink
      - VoiceEnhancementSink
    MediaInsightsPipelineConfigurationElements:
      type: array
      items:
        $ref: '#/components/schemas/MediaInsightsPipelineConfigurationElement'
    MediaInsightsPipelineConfigurationNameString:
      type: string
      pattern: ^[0-9a-zA-Z._-]+$
      minLength: 2
      maxLength: 64
    MediaInsightsPipelineConfigurationSummary:
      type: object
      properties:
        MediaInsightsPipelineConfigurationName:
          allOf:
          - $ref: '#/components/schemas/MediaInsightsPipelineConfigurationNameString'
          description: The name of the media insights pipeline configuration.
        MediaInsightsPipelineConfigurationId:
          allOf:
          - $ref: '#/components/schemas/GuidString'
          description: The ID of the media insights pipeline configuration.
        MediaInsightsPipelineConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the media insights pipeline configuration.
      description: A summary of the media insights pipeline configuration.
    MediaInsightsPipelineConfigurationSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/MediaInsightsPipelineConfigurationSummary'
    MediaInsightsPipelineElementStatus:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/MediaInsightsPipelineConfigurationElementType'
          description: The type of status.
        Status:
          allOf:
          - $ref: '#/components/schemas/MediaPipelineElementStatus'
          description: The element's status.
      description: The status of the pipeline element.
    MediaInsightsPipelineElementStatuses:
      type: array
      items:
        $ref: '#/components/schemas/MediaInsightsPipelineElementStatus'
    MediaInsightsRuntimeMetadata:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    MediaLiveConnectorPipeline:
      type: object
      properties:
        Sources:
          allOf:
          - $ref: '#/components/schemas/LiveConnectorSourceList'
          description: The connector pipeline's data sources.
        Sinks:
          allOf:
          - $ref: '#/components/schemas/LiveConnectorSinkList'
          description: The connector pipeline's data sinks.
        MediaPipelineId:
          allOf:
          - $ref: '#/components/schemas/GuidString'
          description: The connector pipeline's ID.
        MediaPipelineArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          description: The connector pipeline's ARN.
        Status:
          allOf:
          - $ref: '#/components/schemas/MediaPipelineStatus'
          description: The connector pipeline's status.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Iso8601Timestamp'
          description: The time at which the connector pipeline was created.
        UpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Iso8601Timestamp'
          description: The time at which the connector pipeline was last updated.
      description: The connector pipeline.
    MediaPipeline:
      type: object
      properties:
        MediaCapturePipeline:
          allOf:
          - $ref: '#/components/schemas/MediaCapturePipeline'
          description: A pipeline that enables users to capture audio and video.
        MediaLiveConnectorPipeline:
          allOf:
          - $ref: '#/components/schemas/MediaLiveConnectorPipeline'
          description: The connector pipeline of the media pipeline.
        MediaConcatenationPipeline:
          allOf:
          - $ref: '#/components/schemas/MediaConcatenationPipeline'
          description: The media concatenation pipeline in a media pipeline.
        MediaInsightsPipeline:
          allOf:
          - $ref: '#/components/schemas/MediaInsightsPipeline'
          description: The media insights pipeline of a media pipeline.
        MediaStreamPipeline:
          allOf:
          - $ref: '#/components/schemas/MediaStreamPipeline'
          description: Designates a media pipeline as a media stream pipeline.
      description: A pipeline consisting of a media capture, media concatenation,
        or live-streaming pipeline.
    MediaPipelineElementStatus:
      type: string
      enum:
      - NotStarted
      - NotSupported
      - Initializing
      - InProgress
      - Failed
      - Stopping
      - Stopped
      - Paused
    MediaPipelineList:
      type: array
      items:
        $ref: '#/components/schemas/MediaPipelineSummary'
    MediaPipelineSinkType:
      type: string
      enum:
      - S3Bucket
    MediaPipelineSourceType:
      type: string
      enum:
      - ChimeSdkMeeting
    MediaPipelineStatus:
      type: string
      enum:
      - Initializing
      - InProgress
      - Failed
      - Stopping
      - Stopped
      - Paused
      - NotStarted
    MediaPipelineStatusUpdate:
      type: string
      enum:
      - Pause
      - Resume
    MediaPipelineSummary:
      type: object
      properties:
        MediaPipelineId:
          allOf:
          - $ref: '#/components/schemas/GuidString'
          description: The ID of the media pipeline in the summary.
        MediaPipelineArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          description: The ARN of the media pipeline in the summary.
      description: The summary of the media pipeline.
    MediaPipelineTaskStatus:
      type: string
      enum:
      - NotStarted
      - Initializing
      - InProgress
      - Failed
      - Stopping
      - Stopped
    MediaSampleRateHertz:
      type: integer
      minimum: 8000
      maximum: 48000
    MediaStreamPipeline:
      type: object
      properties:
        MediaPipelineId:
          allOf:
          - $ref: '#/components/schemas/GuidString'
          description: The ID of the media stream pipeline
        MediaPipelineArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          description: The ARN of the media stream pipeline.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Iso8601Timestamp'
          description: The time at which the media stream pipeline was created.
        UpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Iso8601Timestamp'
          description: The time at which the media stream pipeline was updated.
        Status:
          allOf:
          - $ref: '#/components/schemas/MediaPipelineStatus'
          description: The status of the media stream pipeline.
        Sources:
          allOf:
          - $ref: '#/components/schemas/MediaStreamSourceList'
          description: The media stream pipeline's data sources.
        Sinks:
          allOf:
          - $ref: '#/components/schemas/MediaStreamSinkList'
          description: The media stream pipeline's data sinks.
      description: Structure that contains the settings for a media stream pipeline.
    MediaStreamPipelineSinkType:
      type: string
      enum:
      - KinesisVideoStreamPool
    MediaStreamSink:
      type: object
      properties:
        SinkArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the Kinesis Video Stream pool returned by the CreateMediaPipelineKinesisVideoStreamPool
            API.
        SinkType:
          allOf:
          - $ref: '#/components/schemas/MediaStreamPipelineSinkType'
          description: The media stream sink's type.
        ReservedStreamCapacity:
          allOf:
          - $ref: '#/components/schemas/ReservedStreamCapacity'
          description: Specifies the number of streams that the sink can accept.
        MediaStreamType:
          allOf:
          - $ref: '#/components/schemas/MediaStreamType'
          description: The media stream sink's media stream type.
      required:
      - SinkArn
      - SinkType
      - ReservedStreamCapacity
      - MediaStreamType
      description: Structure that contains the settings for a media stream sink.
    MediaStreamSinkList:
      type: array
      items:
        $ref: '#/components/schemas/MediaStreamSink'
    MediaStreamSource:
      type: object
      properties:
        SourceType:
          allOf:
          - $ref: '#/components/schemas/MediaPipelineSourceType'
          description: The type of media stream source.
        SourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the meeting.
      required:
      - SourceType
      - SourceArn
      description: Structure that contains the settings for media stream sources.
    MediaStreamSourceList:
      type: array
      items:
        $ref: '#/components/schemas/MediaStreamSource'
    MediaStreamType:
      type: string
      enum:
      - MixedAudio
      - IndividualAudio
    MeetingEventsConcatenationConfiguration:
      type: object
      properties:
        State:
          allOf:
          - $ref: '#/components/schemas/ArtifactsConcatenationState'
          description: Enables or disables the configuration object.
      required:
      - State
      description: The configuration object for an event concatenation pipeline.
    ModelName:
      type: string
      pattern: ^[0-9a-zA-Z._-]+$
      minLength: 1
      maxLength: 200
    NonEmptyString:
      type: string
      pattern: \S
      minLength: 0
      maxLength: 1024
    NotFoundException:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/String'
        RequestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The request ID associated with the call responsible for the
            exception.
      description: One or more of the resources in the request does not exist in the
        system.
    NumberOfChannels:
      type: integer
      minimum: 1
      maximum: 2
    PartialResultsStability:
      type: string
      enum:
      - high
      - medium
      - low
    ParticipantRole:
      type: string
      enum:
      - AGENT
      - CUSTOMER
    PiiEntityTypes:
      type: string
      pattern: ^[A-Z_, ]+$
      minLength: 1
      maxLength: 300
    PostCallAnalyticsSettings:
      type: object
      properties:
        OutputLocation:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The URL of the Amazon S3 bucket that contains the post-call
            data.
        DataAccessRoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the role used by Amazon Web Services Transcribe
            to upload your post call analysis. For more information, see [Post-call
            analytics with real-time transcriptions](https://docs.aws.amazon.com/transcribe/latest/dg/tca-post-call.html)
            in the _Amazon Transcribe Developer Guide_.
        ContentRedactionOutput:
          allOf:
          - $ref: '#/components/schemas/ContentRedactionOutput'
          description: The content redaction output settings for a post-call analysis
            task.
        OutputEncryptionKMSKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the KMS (Key Management Service) key used to encrypt
            the output.
      required:
      - OutputLocation
      - DataAccessRoleArn
      description: 'Allows you to specify additional settings for your Call Analytics
        post-call request, including output locations for your redacted transcript,
        which IAM role to use, and which encryption key to use.


        `DataAccessRoleArn` and `OutputLocation` are required fields.


        `PostCallAnalyticsSettings` provides the same insights as a Call Analytics
        post-call transcription. For more information, refer to [Post-call analytics
        with real-time transcriptions](https://docs.aws.amazon.com/transcribe/latest/dg/tca-post-call.html)
        in the _Amazon Transcribe Developer Guide_.'
    PresenterOnlyConfiguration:
      type: object
      properties:
        PresenterPosition:
          allOf:
          - $ref: '#/components/schemas/PresenterPosition'
          description: 'Defines the position of the presenter video tile. Default:
            `TopRight`.'
      description: Defines the configuration for a presenter-only video tile.
    PresenterPosition:
      type: string
      enum:
      - TopLeft
      - TopRight
      - BottomLeft
      - BottomRight
    RealTimeAlertConfiguration:
      type: object
      properties:
        Disabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Turns off real-time alerts.
        Rules:
          allOf:
          - $ref: '#/components/schemas/RealTimeAlertRuleList'
          description: The rules in the alert. Rules specify the words or phrases
            that you want to be notified about.
      description: A structure that contains the configuration settings for real-time
        alerts.
    RealTimeAlertRule:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/RealTimeAlertRuleType'
          description: The type of alert rule.
        KeywordMatchConfiguration:
          allOf:
          - $ref: '#/components/schemas/KeywordMatchConfiguration'
          description: Specifies the settings for matching the keywords in a real-time
            alert rule.
        SentimentConfiguration:
          allOf:
          - $ref: '#/components/schemas/SentimentConfiguration'
          description: Specifies the settings for predicting sentiment in a real-time
            alert rule.
        IssueDetectionConfiguration:
          allOf:
          - $ref: '#/components/schemas/IssueDetectionConfiguration'
          description: Specifies the issue detection settings for a real-time alert
            rule.
      required:
      - Type
      description: Specifies the words or phrases that trigger an alert.
    RealTimeAlertRuleList:
      type: array
      items:
        $ref: '#/components/schemas/RealTimeAlertRule'
    RealTimeAlertRuleType:
      type: string
      enum:
      - KeywordMatch
      - Sentiment
      - IssueDetection
    RecordingFileFormat:
      type: string
      enum:
      - Wav
      - Opus
    RecordingStreamConfiguration:
      type: object
      properties:
        StreamArn:
          allOf:
          - $ref: '#/components/schemas/KinesisVideoStreamArn'
          description: The ARN of the recording stream.
      description: A structure that holds the settings for recording media.
    RecordingStreamList:
      type: array
      items:
        $ref: '#/components/schemas/RecordingStreamConfiguration'
    ReservedStreamCapacity:
      type: integer
      minimum: 1
      maximum: 10
    ResolutionOption:
      type: string
      enum:
      - HD
      - FHD
    ResourceLimitExceededException:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/String'
        RequestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The request ID associated with the call responsible for the
            exception.
      description: The request exceeds the resource limit.
    ResultMax:
      type: integer
      minimum: 1
      maximum: 100
    RuleName:
      type: string
      pattern: ^[0-9a-zA-Z._-]+$
      minLength: 2
      maxLength: 64
    S3BucketSinkConfiguration:
      type: object
      properties:
        Destination:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The destination URL of the S3 bucket.
      required:
      - Destination
      description: The configuration settings for the S3 bucket.
    S3RecordingSinkConfiguration:
      type: object
      properties:
        Destination:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The default URI of the Amazon S3 bucket used as the recording
            sink.
        RecordingFileFormat:
          allOf:
          - $ref: '#/components/schemas/RecordingFileFormat'
          description: The default file format for the media files sent to the Amazon
            S3 bucket.
      description: The structure that holds the settings for transmitting media to
        the Amazon S3 bucket. These values are used as defaults if `S3RecordingSinkRuntimeConfiguration`
        is not specified.
    S3RecordingSinkRuntimeConfiguration:
      type: object
      properties:
        Destination:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The URI of the S3 bucket used as the sink.
        RecordingFileFormat:
          allOf:
          - $ref: '#/components/schemas/RecordingFileFormat'
          description: The file format for the media files sent to the Amazon S3 bucket.
      required:
      - Destination
      - RecordingFileFormat
      description: A structure that holds the settings for transmitting media files
        to the Amazon S3 bucket. If specified, the settings in this structure override
        any settings in `S3RecordingSinkConfiguration`.
    SelectedVideoStreams:
      type: object
      properties:
        AttendeeIds:
          allOf:
          - $ref: '#/components/schemas/AttendeeIdList'
          description: The attendee IDs of the streams selected for a media pipeline.
        ExternalUserIds:
          allOf:
          - $ref: '#/components/schemas/ExternalUserIdList'
          description: The external user IDs of the streams selected for a media pipeline.
      description: The video streams for a specified media pipeline. The total number
        of video streams can't exceed 25.
    SensitiveString:
      type: string
      minLength: 1
      maxLength: 1024
    SentimentConfiguration:
      type: object
      properties:
        RuleName:
          allOf:
          - $ref: '#/components/schemas/RuleName'
          description: The name of the rule in the sentiment configuration.
        SentimentType:
          allOf:
          - $ref: '#/components/schemas/SentimentType'
          description: The type of sentiment, `POSITIVE`, `NEGATIVE`, or `NEUTRAL`.
        TimePeriod:
          allOf:
          - $ref: '#/components/schemas/SentimentTimePeriodInSeconds'
          description: Specifies the analysis interval.
      required:
      - RuleName
      - SentimentType
      - TimePeriod
      description: A structure that contains the configuration settings for a sentiment
        analysis task.
    SentimentTimePeriodInSeconds:
      type: integer
      minimum: 60
      maximum: 1800
    SentimentType:
      type: string
      enum:
      - NEGATIVE
    ServiceFailureException:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/String'
        RequestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The request ID associated with the call responsible for the
            exception.
      description: The service encountered an unexpected error.
    ServiceUnavailableException:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/String'
        RequestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The request ID associated with the call responsible for the
            exception.
      description: The service is currently unavailable.
    SnsTopicSinkConfiguration:
      type: object
      properties:
        InsightsTarget:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the SNS sink.
      description: The configuration settings for the SNS topic sink.
    SourceConfiguration:
      type: object
      properties:
        SelectedVideoStreams:
          allOf:
          - $ref: '#/components/schemas/SelectedVideoStreams'
          description: The selected video streams for a specified media pipeline.
            The number of video streams can't exceed 25.
      description: Source configuration for a specified media pipeline.
    SpeakerSearchTask:
      type: object
      properties:
        SpeakerSearchTaskId:
          allOf:
          - $ref: '#/components/schemas/GuidString'
          description: The speaker search task ID.
        SpeakerSearchTaskStatus:
          allOf:
          - $ref: '#/components/schemas/MediaPipelineTaskStatus'
          description: The status of the speaker search task.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Iso8601Timestamp'
          description: The time at which a speaker search task was created.
        UpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Iso8601Timestamp'
          description: The time at which a speaker search task was updated.
      description: A representation of an asynchronous request to perform speaker
        search analysis on a media insights pipeline.
    SqsQueueSinkConfiguration:
      type: object
      properties:
        InsightsTarget:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the SQS sink.
      description: The configuration settings for the SQS sink.
    SseAwsKeyManagementParams:
      type: object
      properties:
        AwsKmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: "The KMS key you want to use to encrypt your media pipeline\
            \ output. Decryption is required for concatenation pipeline. If using\
            \ a key located in the current Amazon Web Services account, you can specify\
            \ your KMS key in one of four ways:\n\n  * Use the KMS key ID itself.\
            \ For example, `1234abcd-12ab-34cd-56ef-1234567890ab`.\n\n  * Use an alias\
            \ for the KMS key ID. For example, `alias/ExampleAlias`.\n\n  * Use the\
            \ Amazon Resource Name (ARN) for the KMS key ID. For example, `arn:aws:kms:region:account-ID:key/1234abcd-12ab-34cd-56ef-1234567890ab`.\n\
            \n  * Use the ARN for the KMS key alias. For example, `arn:aws:kms:region:account-ID:alias/ExampleAlias`.\n\
            \nIf using a key located in a different Amazon Web Services account than\
            \ the current Amazon Web Services account, you can specify your KMS key\
            \ in one of two ways:\n\n  * Use the ARN for the KMS key ID. For example,\
            \ `arn:aws:kms:region:account-ID:key/1234abcd-12ab-34cd-56ef-1234567890ab`.\n\
            \n  * Use the ARN for the KMS key alias. For example, `arn:aws:kms:region:account-ID:alias/ExampleAlias`.\n\
            \nIf you don't specify an encryption key, your output is encrypted with\
            \ the default Amazon S3 key (SSE-S3).\n\nNote that the role specified\
            \ in the `SinkIamRoleArn` request parameter must have permission to use\
            \ the specified KMS key."
        AwsKmsEncryptionContext:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Base64-encoded string of a UTF-8 encoded JSON, which contains
            the encryption context as non-secret key-value pair known as encryption
            context pairs, that provides an added layer of security for your data.
            For more information, see [KMS encryption context](https://docs.aws.amazon.com/kms/latest/developerguide/encrypt_context.html)
            and [Asymmetric keys in KMS](https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html)
            in the _Key Management Service Developer Guide_.
      required:
      - AwsKmsKeyId
      description: Contains server side encryption parameters to be used by media
        capture pipeline. The parameters can also be used by media concatenation pipeline
        taking media capture pipeline as a media source.
    StartSpeakerSearchTaskRequest:
      type: object
      properties:
        Identifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The unique identifier of the resource to be updated. Valid
            values include the ID and ARN of the media insights pipeline.
        VoiceProfileDomainArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the voice profile domain that will store the voice
            profile.
        KinesisVideoStreamSourceTaskConfiguration:
          allOf:
          - $ref: '#/components/schemas/KinesisVideoStreamSourceTaskConfiguration'
          description: The task configuration for the Kinesis video stream source
            of the media insights pipeline.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: The unique identifier for the client request. Use a different
            token for different speaker search tasks.
      required:
      - Identifier
      - VoiceProfileDomainArn
    StartSpeakerSearchTaskResponse:
      type: object
      properties:
        SpeakerSearchTask:
          allOf:
          - $ref: '#/components/schemas/SpeakerSearchTask'
          description: The details of the speaker search task.
    StartVoiceToneAnalysisTaskRequest:
      type: object
      properties:
        Identifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The unique identifier of the resource to be updated. Valid
            values include the ID and ARN of the media insights pipeline.
        LanguageCode:
          allOf:
          - $ref: '#/components/schemas/VoiceAnalyticsLanguageCode'
          description: The language code.
        KinesisVideoStreamSourceTaskConfiguration:
          allOf:
          - $ref: '#/components/schemas/KinesisVideoStreamSourceTaskConfiguration'
          description: The task configuration for the Kinesis video stream source
            of the media insights pipeline.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: The unique identifier for the client request. Use a different
            token for different voice tone analysis tasks.
      required:
      - Identifier
      - LanguageCode
    StartVoiceToneAnalysisTaskResponse:
      type: object
      properties:
        VoiceToneAnalysisTask:
          allOf:
          - $ref: '#/components/schemas/VoiceToneAnalysisTask'
          description: The details of the voice tone analysis task.
    StopSpeakerSearchTaskRequest:
      type: object
      properties:
        Identifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The unique identifier of the resource to be updated. Valid
            values include the ID and ARN of the media insights pipeline.
        SpeakerSearchTaskId:
          allOf:
          - $ref: '#/components/schemas/GuidString'
          description: The speaker search task ID.
      required:
      - Identifier
      - SpeakerSearchTaskId
    StopVoiceToneAnalysisTaskRequest:
      type: object
      properties:
        Identifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The unique identifier of the resource to be updated. Valid
            values include the ID and ARN of the media insights pipeline.
        VoiceToneAnalysisTaskId:
          allOf:
          - $ref: '#/components/schemas/GuidString'
          description: The ID of the voice tone analysis task.
      required:
      - Identifier
      - VoiceToneAnalysisTaskId
    StreamChannelDefinition:
      type: object
      properties:
        NumberOfChannels:
          allOf:
          - $ref: '#/components/schemas/NumberOfChannels'
          description: The number of channels in a streaming channel.
        ChannelDefinitions:
          allOf:
          - $ref: '#/components/schemas/ChannelDefinitions'
          description: The definitions of the channels in a streaming channel.
      required:
      - NumberOfChannels
      description: Defines a streaming channel.
    StreamConfiguration:
      type: object
      properties:
        StreamArn:
          allOf:
          - $ref: '#/components/schemas/KinesisVideoStreamArn'
          description: The ARN of the stream.
        FragmentNumber:
          allOf:
          - $ref: '#/components/schemas/FragmentNumberString'
          description: The unique identifier of the fragment to begin processing.
        StreamChannelDefinition:
          allOf:
          - $ref: '#/components/schemas/StreamChannelDefinition'
          description: The streaming channel definition in the stream configuration.
      required:
      - StreamArn
      - StreamChannelDefinition
      description: The configuration settings for a stream.
    Streams:
      type: array
      items:
        $ref: '#/components/schemas/StreamConfiguration'
    String:
      type: string
      pattern: .*
      minLength: 0
      maxLength: 4096
    Tag:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          description: The key half of a tag.
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          description: The value half of a tag.
      required:
      - Key
      - Value
      description: A key/value pair that grants users access to meeting resources.
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    TagResourceRequest:
      type: object
      properties:
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          description: The ARN of the media pipeline associated with any tags. The
            ARN consists of the pipeline's endpoint region, resource ID, and pipeline
            ID.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags associated with the specified media pipeline.
      required:
      - ResourceARN
      - Tags
    TagResourceResponse:
      type: object
      properties: {}
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    ThrottledClientException:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/String'
        RequestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The request ID associated with the call responsible for the
            exception.
      description: The client exceeded its request rate limit.
    TileAspectRatio:
      type: string
      pattern: ^\d{1,2}\/\d{1,2}$
    TileCount:
      type: integer
      minimum: 1
      maximum: 10
    TileOrder:
      type: string
      enum:
      - JoinSequence
      - SpeakerSequence
    Timestamp:
      type: string
      format: date-time
    TimestampRange:
      type: object
      properties:
        StartTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The starting timestamp for the specified range.
        EndTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The ending timestamp for the specified range.
      required:
      - StartTimestamp
      - EndTimestamp
      description: The range of timestamps to return.
    TranscriptionMessagesConcatenationConfiguration:
      type: object
      properties:
        State:
          allOf:
          - $ref: '#/components/schemas/ArtifactsConcatenationState'
          description: Enables or disables the configuration object.
      required:
      - State
      description: The configuration object for concatenating transcription messages.
    UnauthorizedClientException:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/String'
        RequestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The request ID associated with the call responsible for the
            exception.
      description: The client is not currently authorized to make the request.
    UntagResourceRequest:
      type: object
      properties:
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          description: The ARN of the pipeline that you want to untag.
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: The key/value pairs in the tag that you want to remove.
      required:
      - ResourceARN
      - TagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateMediaInsightsPipelineConfigurationRequest:
      type: object
      properties:
        Identifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The unique identifier for the resource to be updated. Valid
            values include the name and ARN of the media insights pipeline configuration.
        ResourceAccessRoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the role used by the service to access Amazon Web
            Services resources.
        RealTimeAlertConfiguration:
          allOf:
          - $ref: '#/components/schemas/RealTimeAlertConfiguration'
          description: The configuration settings for real-time alerts for the media
            insights pipeline.
        Elements:
          allOf:
          - $ref: '#/components/schemas/MediaInsightsPipelineConfigurationElements'
          description: The elements in the request, such as a processor for Amazon
            Transcribe or a sink for a Kinesis Data Stream..
      required:
      - Identifier
      - ResourceAccessRoleArn
      - Elements
    UpdateMediaInsightsPipelineConfigurationResponse:
      type: object
      properties:
        MediaInsightsPipelineConfiguration:
          allOf:
          - $ref: '#/components/schemas/MediaInsightsPipelineConfiguration'
          description: The updated configuration settings.
    UpdateMediaInsightsPipelineStatusRequest:
      type: object
      properties:
        Identifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The unique identifier of the resource to be updated. Valid
            values include the ID and ARN of the media insights pipeline.
        UpdateStatus:
          allOf:
          - $ref: '#/components/schemas/MediaPipelineStatusUpdate'
          description: The requested status of the media insights pipeline.
      required:
      - Identifier
      - UpdateStatus
    UpdateMediaPipelineKinesisVideoStreamPoolRequest:
      type: object
      properties:
        Identifier:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The unique identifier of the requested resource. Valid values
            include the name and ARN of the media pipeline Kinesis Video Stream pool.
        StreamConfiguration:
          allOf:
          - $ref: '#/components/schemas/KinesisVideoStreamConfigurationUpdate'
          description: The configuration settings for the video stream.
      required:
      - Identifier
    UpdateMediaPipelineKinesisVideoStreamPoolResponse:
      type: object
      properties:
        KinesisVideoStreamPoolConfiguration:
          allOf:
          - $ref: '#/components/schemas/KinesisVideoStreamPoolConfiguration'
          description: The video stream pool configuration object.
    VerticalLayoutConfiguration:
      type: object
      properties:
        TileOrder:
          allOf:
          - $ref: '#/components/schemas/TileOrder'
          description: Sets the automatic ordering of the video tiles.
        TilePosition:
          allOf:
          - $ref: '#/components/schemas/VerticalTilePosition'
          description: Sets the position of vertical tiles.
        TileCount:
          allOf:
          - $ref: '#/components/schemas/TileCount'
          description: The maximum number of tiles to display.
        TileAspectRatio:
          allOf:
          - $ref: '#/components/schemas/TileAspectRatio'
          description: Sets the aspect ratio of the video tiles, such as 16:9.
      description: Defines the configuration settings for a vertical layout.
    VerticalTilePosition:
      type: string
      enum:
      - Left
      - Right
    VideoArtifactsConfiguration:
      type: object
      properties:
        State:
          allOf:
          - $ref: '#/components/schemas/ArtifactsState'
          description: Indicates whether the video artifact is enabled or disabled.
        MuxType:
          allOf:
          - $ref: '#/components/schemas/VideoMuxType'
          description: The MUX type of the video artifact configuration object.
      required:
      - State
      description: The video artifact configuration object.
    VideoAttribute:
      type: object
      properties:
        CornerRadius:
          allOf:
          - $ref: '#/components/schemas/CornerRadius'
          description: Sets the corner radius of all video tiles.
        BorderColor:
          allOf:
          - $ref: '#/components/schemas/BorderColor'
          description: Defines the border color of all video tiles.
        HighlightColor:
          allOf:
          - $ref: '#/components/schemas/HighlightColor'
          description: Defines the highlight color for the active video tile.
        BorderThickness:
          allOf:
          - $ref: '#/components/schemas/BorderThickness'
          description: Defines the border thickness for all video tiles.
      description: Defines the settings for a video tile.
    VideoConcatenationConfiguration:
      type: object
      properties:
        State:
          allOf:
          - $ref: '#/components/schemas/ArtifactsConcatenationState'
          description: Enables or disables the configuration object.
      required:
      - State
      description: The configuration object of a video concatenation pipeline.
    VideoMuxType:
      type: string
      enum:
      - VideoOnly
    VocabularyFilterMethod:
      type: string
      enum:
      - remove
      - mask
      - tag
    VocabularyFilterName:
      type: string
      pattern: ^[0-9a-zA-Z._-]+$
      minLength: 1
      maxLength: 200
    VocabularyFilterNames:
      type: string
      pattern: ^[a-zA-Z0-9,-._]+$
      minLength: 1
      maxLength: 3000
    VocabularyName:
      type: string
      pattern: ^[0-9a-zA-Z._-]+$
      minLength: 1
      maxLength: 200
    VocabularyNames:
      type: string
      pattern: ^[a-zA-Z0-9,-._]+$
      minLength: 1
      maxLength: 3000
    VoiceAnalyticsConfigurationStatus:
      type: string
      enum:
      - Enabled
      - Disabled
    VoiceAnalyticsLanguageCode:
      type: string
      enum:
      - en-US
    VoiceAnalyticsProcessorConfiguration:
      type: object
      properties:
        SpeakerSearchStatus:
          allOf:
          - $ref: '#/components/schemas/VoiceAnalyticsConfigurationStatus'
          description: The status of the speaker search task.
        VoiceToneAnalysisStatus:
          allOf:
          - $ref: '#/components/schemas/VoiceAnalyticsConfigurationStatus'
          description: The status of the voice tone analysis task.
      description: The configuration settings for a voice analytics processor.
    VoiceEnhancementSinkConfiguration:
      type: object
      properties:
        Disabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Disables the `VoiceEnhancementSinkConfiguration` element.
      description: A static structure that contains the configuration data for a `VoiceEnhancementSinkConfiguration`
        element.
    VoiceToneAnalysisTask:
      type: object
      properties:
        VoiceToneAnalysisTaskId:
          allOf:
          - $ref: '#/components/schemas/GuidString'
          description: The ID of the voice tone analysis task.
        VoiceToneAnalysisTaskStatus:
          allOf:
          - $ref: '#/components/schemas/MediaPipelineTaskStatus'
          description: The status of a voice tone analysis task.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Iso8601Timestamp'
          description: The time at which a voice tone analysis task was created.
        UpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Iso8601Timestamp'
          description: The time at which a voice tone analysis task was updated.
      description: A representation of an asynchronous request to perform voice tone
        analysis on a media insights pipeline.
