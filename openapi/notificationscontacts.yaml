openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: notificationscontacts
  x-aws-serviceName: notificationscontacts
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2018-05-10'
  title: AWS User Notifications Contacts
  description: |-
    AWS User Notifications Contacts is a service that allows you to create and manage email contacts for AWS User Notifications. The AWS User Notifications Contacts API Reference provides descriptions, API request parameters, and the JSON response for all email contact related API actions.
servers:
- description: The AWS User Notifications Contacts regional endpoint
  url: https://notifications-contacts.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /emailcontacts/{arn}/activate/{code}:
    put:
      operationId: ActivateEmailContact
      description: |-
        Activates an email contact using an activation code. This code is in the activation email sent to the email address associated with this email contact.
      parameters:
      - name: arn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EmailContactArn'
      - name: code
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Token'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Your request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2022-09-19/emailcontacts:
    post:
      operationId: CreateEmailContact
      description: |-
        Creates an email contact for the provided email address.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/EmailContactName'
                emailAddress:
                  $ref: '#/components/schemas/EmailContactAddress'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '201': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            Request would cause a service quota to be exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /emailcontacts/{arn}:
    delete:
      operationId: DeleteEmailContact
      description: |-
        Deletes an email contact.

        Deleting an email contact removes it from all associated notification configurations.
      parameters:
      - name: arn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EmailContactArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Your request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetEmailContact
      description: |-
        Returns an email contact.
      parameters:
      - name: arn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EmailContactArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Your request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /emailcontacts:
    get:
      operationId: ListEmailContacts
      description: |-
        Lists all email contacts created under the Account.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Integer'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tags/{arn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Lists all of the tags associated with the Amazon Resource Name (ARN) that you specify. The resource can be a user, server, or role.
      parameters:
      - name: arn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EmailContactArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Your request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: TagResource
      description: |-
        Attaches a key-value pair to a resource, as identified by its Amazon Resource Name (ARN). Taggable resources in AWS User Notifications Contacts include email contacts.
      parameters:
      - name: arn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EmailContactArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Your request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: UntagResource
      description: |-
        Detaches a key-value pair from a resource, as identified by its Amazon Resource Name (ARN). Taggable resources in AWS User Notifications Contacts include email contacts..
      parameters:
      - name: arn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EmailContactArn'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeys'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Your request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2022-10-31/emailcontacts/{arn}/activate/send:
    post:
      operationId: SendActivationCode
      description: |-
        Sends an activation email to the email address associated with the specified email contact.

        It might take a few minutes for the activation email to arrive. If it doesn't arrive, check in your spam folder or try sending another activation email.
      parameters:
      - name: arn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EmailContactArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Your request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    AccessDeniedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      required:
      - message
      description: You do not have sufficient access to perform this action.
    ActivateEmailContactRequest:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/EmailContactArn'
          description: The Amazon Resource Name (ARN) of the resource.
        code:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: 'The activation code for this email contact.


            An email contact has a maximum of five activation attempts. Activation
            codes expire after 12 hours and are generated by the [SendActivationCode](https://docs.aws.amazon.com/notificationscontacts/latest/APIReference/API_SendActivationCode.html)
            API action.'
      required:
      - arn
      - code
    ActivateEmailContactResponse:
      type: object
      properties: {}
    ConflictException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
        resourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: The resource ID that prompted the conflict error.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The resource type that prompted the conflict error.
      required:
      - message
      - resourceId
      - resourceType
      description: Updating or deleting a resource can cause an inconsistent state.
    CreateEmailContactRequest:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/EmailContactName'
          description: The name of the email contact.
        emailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailContactAddress'
          description: 'The email address this email contact points to. The activation
            email and any subscribed emails are sent here.


            This email address can''t receive emails until it''s activated.'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A map of tags assigned to a resource. A tag is a string-to-string
            map of key-value pairs.
      required:
      - name
      - emailAddress
    CreateEmailContactResponse:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/EmailContactArn'
          description: The Amazon Resource Name (ARN) of the resource.
      required:
      - arn
    CreationTime:
      type: string
      format: date-time
    DeleteEmailContactRequest:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/EmailContactArn'
          description: The Amazon Resource Name (ARN) of the resource.
      required:
      - arn
    DeleteEmailContactResponse:
      type: object
      properties: {}
    EmailContact:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/EmailContactArn'
          description: The Amazon Resource Name (ARN) of the email contact.
        name:
          allOf:
          - $ref: '#/components/schemas/EmailContactName'
          description: The name of the email contact.
        address:
          allOf:
          - $ref: '#/components/schemas/SensitiveEmailContactAddress'
          description: The email address this email contact points to. The activation
            email and any subscribed emails are sent here.
        status:
          allOf:
          - $ref: '#/components/schemas/EmailContactStatus'
          description: The status of the email contact. Only activated email contacts
            receive emails.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/CreationTime'
          description: The creation time of the resource.
        updateTime:
          allOf:
          - $ref: '#/components/schemas/UpdateTime'
          description: The time the resource was last updated.
      required:
      - arn
      - name
      - address
      - status
      - creationTime
      - updateTime
      description: An email contact.
    EmailContactAddress:
      type: string
      pattern: ^(.+)@(.+)$
      minLength: 6
      maxLength: 254
    EmailContactArn:
      type: string
      pattern: ^arn:aws:notifications-contacts::[0-9]{12}:emailcontact/[a-z0-9]{27}$
    EmailContactName:
      type: string
      pattern: '[\w-.~]+'
      minLength: 1
      maxLength: 64
    EmailContactStatus:
      type: string
      enum:
      - inactive
      - active
    EmailContacts:
      type: array
      items:
        $ref: '#/components/schemas/EmailContact'
    ErrorMessage:
      type: string
    GetEmailContactRequest:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/EmailContactArn'
          description: The Amazon Resource Name (ARN) of the email contact to get.
      required:
      - arn
    GetEmailContactResponse:
      type: object
      properties:
        emailContact:
          allOf:
          - $ref: '#/components/schemas/EmailContact'
          description: The email contact for the provided email address.
      required:
      - emailContact
    InternalServerException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      required:
      - message
      description: Unexpected error during processing of request.
    ListEmailContactsRequest:
      type: object
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of results to include in the response. If
            more results exist than the specified MaxResults value, a token is included
            in the response so that the remaining results can be retrieved.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: An optional token returned from a prior request. Use this token
            for pagination of results from this action. If this parameter is specified,
            the response includes only results beyond the token, up to the value specified
            by MaxResults.
    ListEmailContactsResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: An optional token returned from a prior request. Use this token
            for pagination of results from this action. If this parameter is specified,
            the response includes only results beyond the token, up to the value specified
            by MaxResults.
        emailContacts:
          allOf:
          - $ref: '#/components/schemas/EmailContacts'
          description: A list of email contacts.
      required:
      - emailContacts
    ListTagsForResourceRequest:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/EmailContactArn'
          description: The ARN you specified to list the tags of.
      required:
      - arn
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Key-value pairs that are assigned to a resource, usually for
            the purpose of grouping and searching for items. Tags are metadata that
            you define.
    QuotaCode:
      type: string
    ResourceId:
      type: string
    ResourceNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
        resourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: The ID of the resource that wasn't found.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The type of resource that wasn't found.
      required:
      - message
      - resourceId
      - resourceType
      description: Your request references a resource which does not exist.
    ResourceType:
      type: string
    SendActivationCodeRequest:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/EmailContactArn'
          description: The Amazon Resource Name (ARN) of the resource.
      required:
      - arn
    SendActivationCodeResponse:
      type: object
      properties: {}
    SensitiveEmailContactAddress:
      type: string
      pattern: ^(.+)@(.+)$
      minLength: 6
      maxLength: 254
    ServiceCode:
      type: string
    ServiceQuotaExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
        resourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: The ID of the resource that exceeds the service quota.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The type of the resource that exceeds the service quota.
        serviceCode:
          allOf:
          - $ref: '#/components/schemas/ServiceCode'
          description: The code for the service quota exceeded in [Service Quotas](https://docs.aws.amazon.com/servicequotas/latest/userguide/intro.html).
        quotaCode:
          allOf:
          - $ref: '#/components/schemas/QuotaCode'
          description: The code for the service quota in [Service Quotas](https://docs.aws.amazon.com/servicequotas/latest/userguide/intro.html).
      required:
      - message
      - resourceId
      - resourceType
      - serviceCode
      - quotaCode
      description: Request would cause a service quota to be exceeded.
    TagKey:
      type: string
      pattern: ^(?!aws:).{1,128}$
    TagKeys:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      description: Map of tags assigned to a resource
    TagResourceRequest:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/EmailContactArn'
          description: The ARN of the configuration.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A list of tags to apply to the configuration.
      required:
      - arn
      - tags
    TagResourceResponse:
      type: object
      properties: {}
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    ThrottlingException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
        serviceCode:
          allOf:
          - $ref: '#/components/schemas/ServiceCode'
          description: Identifies the service being throttled.
        quotaCode:
          allOf:
          - $ref: '#/components/schemas/QuotaCode'
          description: Identifies the quota that is being throttled.
        retryAfterSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of seconds a client should wait before retrying
            the request.
      required:
      - message
      description: The request was denied due to request throttling.
    Token:
      type: string
      pattern: ^[a-z0-9]{7}$
      minLength: 7
      maxLength: 7
    UntagResourceRequest:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/EmailContactArn'
          description: The value of the resource that will have the tag removed. An
            Amazon Resource Name (ARN) is an identifier for a specific AWS resource,
            such as a server, user, or role.
        tagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeys'
          description: Specifies a list of tag keys that you want to remove from the
            specified resources.
      required:
      - arn
      - tagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateTime:
      type: string
      format: date-time
    ValidationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
        reason:
          allOf:
          - $ref: '#/components/schemas/ValidationExceptionReason'
          description: The reason why your input is considered invalid.
        fieldList:
          allOf:
          - $ref: '#/components/schemas/ValidationExceptionFieldList'
          description: The list of input fields that are invalid.
      required:
      - message
      - reason
      description: The input fails to satisfy the constraints specified by an AWS
        service.
    ValidationExceptionField:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The field name where the invalid entry was detected.
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A message with the reason for the validation exception error.
      required:
      - name
      - message
      description: Stores information about a field passed inside a request that resulted
        in an exception.
    ValidationExceptionFieldList:
      type: array
      items:
        $ref: '#/components/schemas/ValidationExceptionField'
    ValidationExceptionReason:
      type: string
      enum:
      - fieldValidationFailed
      - other
