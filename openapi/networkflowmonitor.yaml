openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: networkflowmonitor
  x-aws-serviceName: networkflowmonitor
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2023-04-19'
  title: Network Flow Monitor
  description: |-
    Network Flow Monitor is a feature of Amazon CloudWatch Network Monitoring that provides visibility into the performance of network flows for your Amazon Web Services workloads, between instances in subnets, as well as to and from Amazon Web Services. Lightweight agents that you install on the instances capture performance metrics for your network flows, such as packet loss and latency, and send them to the Network Flow Monitor backend. Then, you can view and analyze metrics from the top contributors for each metric type, to help troubleshoot issues.

    In addition, when you create a monitor, Network Flow Monitor provides a network health indicator (NHI) that informs you whether there were Amazon Web Services network issues for one or more of the network flows tracked by a monitor, during a time period that you choose. By using this value, you can independently determine if the Amazon Web Services network is impacting your workload during a specific time frame, to help you focus troubleshooting efforts.

    To learn more about Network Flow Monitor, see the [Network Flow Monitor User Guide](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-NetworkFlowMonitor.html) in the Amazon CloudWatch User Guide.
servers:
- description: The Network Flow Monitor regional endpoint
  url: https://networkflowmonitor.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /monitors:
    post:
      operationId: CreateMonitor
      description: |-
        Create a monitor for specific network flows between local and remote resources, so that you can monitor network performance for one or several of your workloads. For each monitor, Network Flow Monitor publishes detailed end-to-end performance metrics and a network health indicators (NHI) that informs you whether there were Amazon Web Services network issues for one or more of the network flows tracked by a monitor, during a time period that you choose.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                monitorName:
                  $ref: '#/components/schemas/ResourceName'
                localResources:
                  $ref: '#/components/schemas/MonitorLocalResources'
                remoteResources:
                  $ref: '#/components/schemas/MonitorRemoteResources'
                scopeArn:
                  $ref: '#/components/schemas/Arn'
                clientToken:
                  $ref: '#/components/schemas/UuidString'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The requested resource is in use.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            The request exceeded a service quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListMonitors
      description: |-
        List all monitors in an account. Optionally, you can list only monitors that have a specific status, by using the `STATUS` parameter.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: monitorStatus
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MonitorStatus'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /scopes:
    post:
      operationId: CreateScope
      description: |-
        Create a scope of resources that you want to be available for Network Flow Monitor to generate metrics for, when you have active agents on those resources sending metrics reports to the Network Flow Monitor backend. This call returns a scope ID to identify the scope.

        When you create a scope, you enable permissions for Network Flow Monitor. The scope is set to the resources for the Amazon Web Services that enables the feature.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                targets:
                  $ref: '#/components/schemas/TargetResourceList'
                clientToken:
                  $ref: '#/components/schemas/UuidString'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The requested resource is in use.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            The request exceeded a service quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListScopes
      description: |-
        List all the scopes for an account.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            The request exceeded a service quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /monitors/{monitorName}:
    delete:
      operationId: DeleteMonitor
      description: |-
        Deletes a monitor in Network Flow Monitor.
      parameters:
      - name: monitorName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request specifies a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetMonitor
      description: |-
        Gets information about a monitor in Network Flow Monitor based on a monitor name. The information returned includes the Amazon Resource Name (ARN), create time, modified time, resources included in the monitor, and status information.
      parameters:
      - name: monitorName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request specifies a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateMonitor
      description: |-
        Update a monitor to add or remove local or remote resources.
      parameters:
      - name: monitorName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                localResourcesToAdd:
                  $ref: '#/components/schemas/MonitorLocalResources'
                localResourcesToRemove:
                  $ref: '#/components/schemas/MonitorLocalResources'
                remoteResourcesToAdd:
                  $ref: '#/components/schemas/MonitorRemoteResources'
                remoteResourcesToRemove:
                  $ref: '#/components/schemas/MonitorRemoteResources'
                clientToken:
                  $ref: '#/components/schemas/UuidString'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request specifies a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /scopes/{scopeId}:
    delete:
      operationId: DeleteScope
      description: |-
        Deletes a scope that has been defined.
      parameters:
      - name: scopeId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ScopeId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request specifies a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The request exceeded a service quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetScope
      description: |-
        Gets information about a scope, including the name, status, tags, and target details. The scope in Network Flow Monitor is an account.
      parameters:
      - name: scopeId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ScopeId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request specifies a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The request exceeded a service quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateScope
      description: |-
        Update a scope to add or remove resources that you want to be available for Network Flow Monitor to generate metrics for, when you have active agents on those resources sending metrics reports to the Network Flow Monitor backend.
      parameters:
      - name: scopeId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ScopeId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resourcesToAdd:
                  $ref: '#/components/schemas/TargetResourceList'
                resourcesToDelete:
                  $ref: '#/components/schemas/TargetResourceList'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request specifies a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The request exceeded a service quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /monitors/{monitorName}/topContributorsQueries/{queryId}/results:
    get:
      operationId: GetQueryResultsMonitorTopContributors
      description: |-
        Return the data for a query with the Network Flow Monitor query interface. You specify the query that you want to return results for by providing a query ID and a monitor name. This query returns the top contributors for a specific monitor.

        Create a query ID for this call by calling the corresponding API call to start the query, `StartQueryMonitorTopContributors`. Use the scope ID that was returned for your account by `CreateScope`.

        Top contributors in Network Flow Monitor are network flows with the highest values for a specific metric type, related to a scope (for workload insights) or a monitor.
      parameters:
      - name: monitorName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: queryId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request specifies a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The request exceeded a service quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /workloadInsights/{scopeId}/topContributorsQueries/{queryId}/results:
    get:
      operationId: GetQueryResultsWorkloadInsightsTopContributors
      description: |-
        Return the data for a query with the Network Flow Monitor query interface. You specify the query that you want to return results for by providing a query ID and a monitor name.

        This query returns the top contributors for a scope for workload insights. Workload insights provide a high level view of network flow performance data collected by agents. To return the data for the top contributors, see `GetQueryResultsWorkloadInsightsTopContributorsData`.

        Create a query ID for this call by calling the corresponding API call to start the query, `StartQueryWorkloadInsightsTopContributors`. Use the scope ID that was returned for your account by `CreateScope`.

        Top contributors in Network Flow Monitor are network flows with the highest values for a specific metric type, related to a scope (for workload insights) or a monitor.
      parameters:
      - name: scopeId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ScopeId'
      - name: queryId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request specifies a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The request exceeded a service quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /workloadInsights/{scopeId}/topContributorsDataQueries/{queryId}/results:
    get:
      operationId: GetQueryResultsWorkloadInsightsTopContributorsData
      description: |-
        Return the data for a query with the Network Flow Monitor query interface. Specify the query that you want to return results for by providing a query ID and a scope ID.

        This query returns the data for top contributors for workload insights for a specific scope. Workload insights provide a high level view of network flow performance data collected by agents for a scope. To return just the top contributors, see `GetQueryResultsWorkloadInsightsTopContributors`.

        Create a query ID for this call by calling the corresponding API call to start the query, `StartQueryWorkloadInsightsTopContributorsData`. Use the scope ID that was returned for your account by `CreateScope`.

        Top contributors in Network Flow Monitor are network flows with the highest values for a specific metric type, related to a scope (for workload insights) or a monitor.

        The top contributor network flows overall for a specific metric type, for example, the number of retransmissions.
      parameters:
      - name: scopeId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ScopeId'
      - name: queryId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request specifies a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The request exceeded a service quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /monitors/{monitorName}/topContributorsQueries/{queryId}/status:
    get:
      operationId: GetQueryStatusMonitorTopContributors
      description: |-
        Returns the current status of a query for the Network Flow Monitor query interface, for a specified query ID and monitor. This call returns the query status for the top contributors for a monitor.

        When you start a query, use this call to check the status of the query to make sure that it has has `SUCCEEDED` before you reviewStartQueryWorkloadInsightsTopContributorsData the results. Use the same query ID that you used for the corresponding API call to start the query, `StartQueryMonitorTopContributors`.

        When you run a query, use this call to check the status of the query to make sure that the query has `SUCCEEDED` before you review the results.
      parameters:
      - name: monitorName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: queryId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            The request exceeded a service quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /workloadInsights/{scopeId}/topContributorsQueries/{queryId}/status:
    get:
      operationId: GetQueryStatusWorkloadInsightsTopContributors
      description: |-
        Return the data for a query with the Network Flow Monitor query interface. Specify the query that you want to return results for by providing a query ID and a monitor name. This query returns the top contributors for workload insights.

        When you start a query, use this call to check the status of the query to make sure that it has has `SUCCEEDED` before you review the results. Use the same query ID that you used for the corresponding API call to start the query, `StartQueryWorkloadInsightsTopContributors`.

        Top contributors in Network Flow Monitor are network flows with the highest values for a specific metric type, related to a scope (for workload insights) or a monitor.
      parameters:
      - name: scopeId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ScopeId'
      - name: queryId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            The request exceeded a service quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /workloadInsights/{scopeId}/topContributorsDataQueries/{queryId}/status:
    get:
      operationId: GetQueryStatusWorkloadInsightsTopContributorsData
      description: |-
        Returns the current status of a query for the Network Flow Monitor query interface, for a specified query ID and monitor. This call returns the query status for the top contributors data for workload insights.

        When you start a query, use this call to check the status of the query to make sure that it has has `SUCCEEDED` before you review the results. Use the same query ID that you used for the corresponding API call to start the query, `StartQueryWorkloadInsightsTopContributorsData`.

        Top contributors in Network Flow Monitor are network flows with the highest values for a specific metric type, related to a scope (for workload insights) or a monitor.

        The top contributor network flows overall for a specific metric type, for example, the number of retransmissions.
      parameters:
      - name: scopeId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ScopeId'
      - name: queryId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            The request exceeded a service quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tags/{resourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Returns all the tags for a resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The requested resource is in use.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request specifies a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: TagResource
      description: |-
        Adds a tag to a resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The requested resource is in use.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request specifies a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: UntagResource
      description: |-
        Removes a tag from a resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeyList'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The requested resource is in use.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request specifies a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /monitors/{monitorName}/topContributorsQueries:
    post:
      operationId: StartQueryMonitorTopContributors
      description: |-
        Start a query to return the data with the Network Flow Monitor query interface. Specify the query that you want to return results for by providing a query ID and a monitor name. This query returns the top contributors for a specific monitor.

        Top contributors in Network Flow Monitor are network flows with the highest values for a specific metric type, related to a scope (for workload insights) or a monitor.
      parameters:
      - name: monitorName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                startTime:
                  $ref: '#/components/schemas/Timestamp'
                endTime:
                  $ref: '#/components/schemas/Timestamp'
                metricName:
                  $ref: '#/components/schemas/MonitorMetric'
                destinationCategory:
                  $ref: '#/components/schemas/DestinationCategory'
                limit:
                  $ref: '#/components/schemas/Limit'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            The request exceeded a service quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /workloadInsights/{scopeId}/topContributorsQueries:
    post:
      operationId: StartQueryWorkloadInsightsTopContributors
      description: |-
        Start a query to return the data with the Network Flow Monitor query interface. Specify the query that you want to start by providing a query ID and a monitor name. This query returns the top contributors for a specific monitor.

        Top contributors in Network Flow Monitor are network flows with the highest values for a specific metric type, related to a scope (for workload insights) or a monitor.
      parameters:
      - name: scopeId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ScopeId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                startTime:
                  $ref: '#/components/schemas/Timestamp'
                endTime:
                  $ref: '#/components/schemas/Timestamp'
                metricName:
                  $ref: '#/components/schemas/WorkloadInsightsMetric'
                destinationCategory:
                  $ref: '#/components/schemas/DestinationCategory'
                limit:
                  $ref: '#/components/schemas/Limit'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            The request exceeded a service quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /workloadInsights/{scopeId}/topContributorsDataQueries:
    post:
      operationId: StartQueryWorkloadInsightsTopContributorsData
      description: |-
        Start a query to return the with the Network Flow Monitor query interface. Specify the query that you want to start by providing a query ID and a monitor name. This query returns the data for top contributors for workload insights.

        Top contributors in Network Flow Monitor are network flows with the highest values for a specific metric type, related to a scope (for workload insights) or a monitor.
      parameters:
      - name: scopeId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ScopeId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                startTime:
                  $ref: '#/components/schemas/Timestamp'
                endTime:
                  $ref: '#/components/schemas/Timestamp'
                metricName:
                  $ref: '#/components/schemas/WorkloadInsightsMetric'
                destinationCategory:
                  $ref: '#/components/schemas/DestinationCategory'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            The request exceeded a service quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /monitors/{monitorName}/topContributorsQueries/{queryId}:
    delete:
      operationId: StopQueryMonitorTopContributors
      description: |-
        Stop a query with the Network Flow Monitor query interface. Specify the query that you want to stop by providing a query ID and a monitor name. This query returns the top contributors for a specific monitor.

        Top contributors in Network Flow Monitor are network flows with the highest values for a specific metric type, related to a scope (for workload insights) or a monitor.
      parameters:
      - name: monitorName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: queryId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            The request exceeded a service quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /workloadInsights/{scopeId}/topContributorsQueries/{queryId}:
    delete:
      operationId: StopQueryWorkloadInsightsTopContributors
      description: |-
        Stop a query with the Network Flow Monitor query interface. Specify the query that you want to stop by providing a query ID and a monitor name. This query returns the top contributors for a specific monitor.

        Top contributors in Network Flow Monitor are network flows with the highest values for a specific metric type, related to a scope (for workload insights) or a monitor.
      parameters:
      - name: scopeId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ScopeId'
      - name: queryId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            The request exceeded a service quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /workloadInsights/{scopeId}/topContributorsDataQueries/{queryId}:
    delete:
      operationId: StopQueryWorkloadInsightsTopContributorsData
      description: |-
        Return the data for a query with the Network Flow Monitor query interface. Specify the query that you want to return results for by providing a query ID and a scope ID. This query returns data for the top contributors for workload insights. Workload insights provide a high level view of network flow performance data collected by agents for a scope.

        Top contributors in Network Flow Monitor are network flows with the highest values for a specific metric type, related to a scope (for workload insights) or a monitor.

        The top contributor network flows overall for a specific metric type, for example, the number of retransmissions.
      parameters:
      - name: scopeId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ScopeId'
      - name: queryId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            The request exceeded a service quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    AccessDeniedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: You don't have sufficient permission to perform this action.
    AccountId:
      type: string
      pattern: ^[0-9]{12}$
      minLength: 1
      maxLength: 12
    Arn:
      type: string
      pattern: ^arn:.*$
      minLength: 20
      maxLength: 2048
    AvailabilityZone:
      type: string
    AwsRegion:
      type: string
    Component:
      type: string
    ComponentType:
      type: string
    ConflictException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: The requested resource is in use.
    CreateMonitorInput:
      type: object
      properties:
        monitorName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the monitor.
        localResources:
          allOf:
          - $ref: '#/components/schemas/MonitorLocalResources'
          description: The local resources to monitor. A local resource, in a bi-directional
            flow of a workload, is the host where the agent is installed. For example,
            if a workload consists of an interaction between a web service and a backend
            database (for example, Amazon Relational Database Service (RDS)), the
            EC2 instance hosting the web service, which also runs the agent, is the
            local resource.
        remoteResources:
          allOf:
          - $ref: '#/components/schemas/MonitorRemoteResources'
          description: The remote resources to monitor. A remote resource is the other
            endpoint in the bi-directional flow of a workload, with a local resource.
            For example, Amazon Relational Database Service (RDS) can be a remote
            resource.
        scopeArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the scope for the monitor.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/UuidString'
          description: A unique, case-sensitive string of up to 64 ASCII characters
            that you specify to make an idempotent API request. Don't reuse the same
            client token for other API requests.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags for a monitor. You can add a maximum of 200 tags.
      required:
      - monitorName
      - localResources
      - scopeArn
    CreateMonitorOutput:
      type: object
      properties:
        monitorArn:
          allOf:
          - $ref: '#/components/schemas/MonitorArn'
          description: The Amazon Resource Name (ARN) of the monitor.
        monitorName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the monitor.
        monitorStatus:
          allOf:
          - $ref: '#/components/schemas/MonitorStatus'
          description: "The status of a monitor. The status can be one of the following\n\
            \n  * `PENDING`: The monitor is in the process of being created.\n\n \
            \ * `ACTIVE`: The monitor is active.\n\n  * `INACTIVE`: The monitor is\
            \ inactive.\n\n  * `ERROR`: Monitor creation failed due to an error.\n\
            \n  * `DELETING`: The monitor is in the process of being deleted."
        localResources:
          allOf:
          - $ref: '#/components/schemas/MonitorLocalResources'
          description: The local resources to monitor. A local resource, in a bi-directional
            flow of a workload, is the host where the agent is installed.
        remoteResources:
          allOf:
          - $ref: '#/components/schemas/MonitorRemoteResources'
          description: The remote resources to monitor. A remote resource is the other
            endpoint in the bi-directional flow of a workload, with a local resource.
            For example, Amazon Relational Database Service (RDS) can be a remote
            resource. The remote resource is identified by its ARN or an identifier.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Iso8601Timestamp'
          description: The date and time when the monitor was created.
        modifiedAt:
          allOf:
          - $ref: '#/components/schemas/Iso8601Timestamp'
          description: The last date and time that the monitor was modified.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags for a monitor.
      required:
      - monitorArn
      - monitorName
      - monitorStatus
      - localResources
      - remoteResources
      - createdAt
      - modifiedAt
    CreateScopeInput:
      type: object
      properties:
        targets:
          allOf:
          - $ref: '#/components/schemas/TargetResourceList'
          description: The targets to define the scope to be monitored. Currently,
            a target is an Amazon Web Services account.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/UuidString'
          description: A unique, case-sensitive string of up to 64 ASCII characters
            that you specify to make an idempotent API request. Don't reuse the same
            client token for other API requests.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags for a scope. You can add a maximum of 200 tags.
      required:
      - targets
    CreateScopeOutput:
      type: object
      properties:
        scopeId:
          allOf:
          - $ref: '#/components/schemas/ScopeId'
          description: The identifier for the scope that includes the resources you
            want to get metrics for. A scope ID is an internally-generated identifier
            that includes all the resources for a specific root account.
        status:
          allOf:
          - $ref: '#/components/schemas/ScopeStatus'
          description: 'The status for a call to create a scope. The status can be
            one of the following: `SUCCEEDED`, `IN_PROGRESS`, or `FAILED`.'
        scopeArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the scope.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags for a scope.
      required:
      - scopeId
      - status
      - scopeArn
    DeleteMonitorInput:
      type: object
      properties:
        monitorName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the monitor to delete.
      required:
      - monitorName
    DeleteMonitorOutput:
      type: object
      properties: {}
    DeleteScopeInput:
      type: object
      properties:
        scopeId:
          allOf:
          - $ref: '#/components/schemas/ScopeId'
          description: The identifier for the scope that includes the resources you
            want to get data results for. A scope ID is an internally-generated identifier
            that includes all the resources for a specific root account.
      required:
      - scopeId
    DeleteScopeOutput:
      type: object
      properties: {}
    DestinationCategory:
      type: string
      enum:
      - INTRA_AZ
      - INTER_AZ
      - INTER_VPC
      - UNCLASSIFIED
      - AMAZON_S3
      - AMAZON_DYNAMODB
    GetMonitorInput:
      type: object
      properties:
        monitorName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the monitor.
      required:
      - monitorName
    GetMonitorOutput:
      type: object
      properties:
        monitorArn:
          allOf:
          - $ref: '#/components/schemas/MonitorArn'
          description: The Amazon Resource Name (ARN) of the monitor.
        monitorName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the monitor.
        monitorStatus:
          allOf:
          - $ref: '#/components/schemas/MonitorStatus'
          description: "The status of a monitor. The status can be one of the following\n\
            \n  * `PENDING`: The monitor is in the process of being created.\n\n \
            \ * `ACTIVE`: The monitor is active.\n\n  * `INACTIVE`: The monitor is\
            \ inactive.\n\n  * `ERROR`: Monitor creation failed due to an error.\n\
            \n  * `DELETING`: The monitor is in the process of being deleted."
        localResources:
          allOf:
          - $ref: '#/components/schemas/MonitorLocalResources'
          description: The local resources for this monitor.
        remoteResources:
          allOf:
          - $ref: '#/components/schemas/MonitorRemoteResources'
          description: The remote resources for this monitor.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Iso8601Timestamp'
          description: The date and time when the monitor was created.
        modifiedAt:
          allOf:
          - $ref: '#/components/schemas/Iso8601Timestamp'
          description: The date and time when the monitor was last modified.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags for a monitor.
      required:
      - monitorArn
      - monitorName
      - monitorStatus
      - localResources
      - remoteResources
      - createdAt
      - modifiedAt
    GetQueryResultsMonitorTopContributorsInput:
      type: object
      properties:
        monitorName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the monitor.
        queryId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The identifier for the query. A query ID is an internally-generated
            identifier for a specific query returned from an API call to start a query.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results. You receive this token
            from a previous call.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of query results that you want to return with this
            call.
      required:
      - monitorName
      - queryId
    GetQueryResultsMonitorTopContributorsOutput:
      type: object
      properties:
        unit:
          allOf:
          - $ref: '#/components/schemas/MetricUnit'
          description: The units for a metric returned by the query.
        topContributors:
          allOf:
          - $ref: '#/components/schemas/MonitorTopContributorsRowList'
          description: The top contributor network flows overall for a specific metric
            type, for example, the number of retransmissions.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results. You receive this token
            from a previous call.
    GetQueryResultsWorkloadInsightsTopContributorsDataInput:
      type: object
      properties:
        scopeId:
          allOf:
          - $ref: '#/components/schemas/ScopeId'
          description: The identifier for the scope that includes the resources you
            want to get data results for. A scope ID is an internally-generated identifier
            that includes all the resources for a specific root account.
        queryId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The identifier for the query. A query ID is an internally-generated
            identifier for a specific query returned from an API call to start a query.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results. You receive this token
            from a previous call.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of query results that you want to return with this
            call.
      required:
      - scopeId
      - queryId
    GetQueryResultsWorkloadInsightsTopContributorsDataOutput:
      type: object
      properties:
        unit:
          allOf:
          - $ref: '#/components/schemas/MetricUnit'
          description: The units for a metric returned by the query.
        datapoints:
          allOf:
          - $ref: '#/components/schemas/WorkloadInsightsTopContributorsDataPoints'
          description: The datapoints returned by the query.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results. You receive this token
            from a previous call.
      required:
      - unit
      - datapoints
    GetQueryResultsWorkloadInsightsTopContributorsInput:
      type: object
      properties:
        scopeId:
          allOf:
          - $ref: '#/components/schemas/ScopeId'
          description: The identifier for the scope that includes the resources you
            want to get data results for. A scope ID is an internally-generated identifier
            that includes all the resources for a specific root account.
        queryId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The identifier for the query. A query ID is an internally-generated
            identifier for a specific query returned from an API call to start a query.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results. You receive this token
            from a previous call.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of query results that you want to return with this
            call.
      required:
      - scopeId
      - queryId
    GetQueryResultsWorkloadInsightsTopContributorsOutput:
      type: object
      properties:
        topContributors:
          allOf:
          - $ref: '#/components/schemas/WorkloadInsightsTopContributorsRowList'
          description: The top contributor network flows overall for a specific metric
            type, for example, the number of retransmissions.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results. You receive this token
            from a previous call.
    GetQueryStatusMonitorTopContributorsInput:
      type: object
      properties:
        monitorName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the monitor.
        queryId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The identifier for the query. A query ID is an internally-generated
            identifier for a specific query returned from an API call to start a query.
      required:
      - monitorName
      - queryId
    GetQueryStatusMonitorTopContributorsOutput:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/QueryStatus'
          description: "When you run a query, use this call to check the status of\
            \ the query to make sure that the query has `SUCCEEDED` before you review\
            \ the results.\n\n  * `QUEUED`: The query is scheduled to run.\n\n  *\
            \ `RUNNING`: The query is in progress but not complete.\n\n  * `SUCCEEDED`:\
            \ The query completed sucessfully.\n\n  * `FAILED`: The query failed due\
            \ to an error.\n\n  * `CANCELED`: The query was canceled."
      required:
      - status
    GetQueryStatusWorkloadInsightsTopContributorsDataInput:
      type: object
      properties:
        scopeId:
          allOf:
          - $ref: '#/components/schemas/ScopeId'
          description: The identifier for the scope that includes the resources you
            want to get data results for. A scope ID is an internally-generated identifier
            that includes all the resources for a specific root account. A scope ID
            is returned from a `CreateScope` API call.
        queryId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The identifier for the query. A query ID is an internally-generated
            identifier for a specific query returned from an API call to start a query.
      required:
      - scopeId
      - queryId
    GetQueryStatusWorkloadInsightsTopContributorsDataOutput:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/QueryStatus'
          description: "The status of a query for top contributors data.\n\n  * `QUEUED`:\
            \ The query is scheduled to run.\n\n  * `RUNNING`: The query is in progress\
            \ but not complete.\n\n  * `SUCCEEDED`: The query completed sucessfully.\n\
            \n  * `FAILED`: The query failed due to an error.\n\n  * `CANCELED`: The\
            \ query was canceled."
      required:
      - status
    GetQueryStatusWorkloadInsightsTopContributorsInput:
      type: object
      properties:
        scopeId:
          allOf:
          - $ref: '#/components/schemas/ScopeId'
          description: The identifier for the scope that includes the resources you
            want to get data results for. A scope ID is an internally-generated identifier
            that includes all the resources for a specific root account.
        queryId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The identifier for the query. A query ID is an internally-generated
            identifier for a specific query returned from an API call to start a query.
      required:
      - scopeId
      - queryId
    GetQueryStatusWorkloadInsightsTopContributorsOutput:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/QueryStatus'
          description: "When you run a query, use this call to check the status of\
            \ the query to make sure that the query has `SUCCEEDED` before you review\
            \ the results.\n\n  * `QUEUED`: The query is scheduled to run.\n\n  *\
            \ `RUNNING`: The query is in progress but not complete.\n\n  * `SUCCEEDED`:\
            \ The query completed sucessfully.\n\n  * `FAILED`: The query failed due\
            \ to an error.\n\n  * `CANCELED`: The query was canceled."
      required:
      - status
    GetScopeInput:
      type: object
      properties:
        scopeId:
          allOf:
          - $ref: '#/components/schemas/ScopeId'
          description: The identifier for the scope that includes the resources you
            want to get data results for. A scope ID is an internally-generated identifier
            that includes all the resources for a specific root account. A scope ID
            is returned from a `CreateScope` API call.
      required:
      - scopeId
    GetScopeOutput:
      type: object
      properties:
        scopeId:
          allOf:
          - $ref: '#/components/schemas/ScopeId'
          description: The identifier for the scope that includes the resources you
            want to get data results for. A scope ID is an internally-generated identifier
            that includes all the resources for a specific root account. A scope ID
            is returned from a `CreateScope` API call.
        status:
          allOf:
          - $ref: '#/components/schemas/ScopeStatus'
          description: 'The status of a scope. The status can be one of the following:
            `SUCCEEDED`, `IN_PROGRESS`, or `FAILED`.'
        scopeArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the scope.
        targets:
          allOf:
          - $ref: '#/components/schemas/TargetResourceList'
          description: The targets for a scope
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags for a scope.
      required:
      - scopeId
      - status
      - scopeArn
      - targets
    InstanceArn:
      type: string
    InstanceId:
      type: string
      pattern: ^i-[a-zA-Z0-9]{8,32}$
    InternalServerException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: An internal error occurred.
    Iso8601Timestamp:
      type: string
      format: date-time
    KubernetesMetadata:
      type: object
      properties:
        localServiceName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The service name for a local resource.
        localPodName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the pod for a local resource.
        localPodNamespace:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The namespace of the pod for a local resource.
        remoteServiceName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The service name for a remote resource.
        remotePodName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the pod for a remote resource.
        remotePodNamespace:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The namespace of the pod for a remote resource.
      description: Meta data about Kubernetes resources.
    Limit:
      type: integer
      minimum: 1
      maximum: 500
    ListMonitorsInput:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results. You receive this token
            from a previous call.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The number of query results that you want to return with this
            call.
        monitorStatus:
          allOf:
          - $ref: '#/components/schemas/MonitorStatus'
          description: "The status of a monitor. The status can be one of the following\n\
            \n  * `PENDING`: The monitor is in the process of being created.\n\n \
            \ * `ACTIVE`: The monitor is active.\n\n  * `INACTIVE`: The monitor is\
            \ inactive.\n\n  * `ERROR`: Monitor creation failed due to an error.\n\
            \n  * `DELETING`: The monitor is in the process of being deleted."
    ListMonitorsOutput:
      type: object
      properties:
        monitors:
          allOf:
          - $ref: '#/components/schemas/MonitorList'
          description: The monitors that are in an account.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results. You receive this token
            from a previous call.
      required:
      - monitors
    ListScopesInput:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results. You receive this token
            from a previous call.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The number of query results that you want to return with this
            call.
    ListScopesOutput:
      type: object
      properties:
        scopes:
          allOf:
          - $ref: '#/components/schemas/ScopeSummaryList'
          description: The scopes returned by the call.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results. You receive this token
            from a previous call.
      required:
      - scopes
    ListTagsForResourceInput:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource.
      required:
      - resourceArn
    ListTagsForResourceOutput:
      type: object
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags for a resource.
    MaxResults:
      type: integer
      minimum: 1
      maximum: 25
    MetricUnit:
      type: string
      enum:
      - Seconds
      - Microseconds
      - Milliseconds
      - Bytes
      - Kilobytes
      - Megabytes
      - Gigabytes
      - Terabytes
      - Bits
      - Kilobits
      - Megabits
      - Gigabits
      - Terabits
      - Percent
      - Count
      - Bytes/Second
      - Kilobytes/Second
      - Megabytes/Second
      - Gigabytes/Second
      - Terabytes/Second
      - Bits/Second
      - Kilobits/Second
      - Megabits/Second
      - Gigabits/Second
      - Terabits/Second
      - Count/Second
      - None
    MonitorArn:
      type: string
      pattern: ^arn:.*$
      minLength: 20
      maxLength: 512
    MonitorList:
      type: array
      items:
        $ref: '#/components/schemas/MonitorSummary'
    MonitorLocalResource:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/MonitorLocalResourceType'
          description: The type of the local resource. Valid values are `AWS::EC2::VPC`
            `AWS::AvailabilityZone` or `AWS::EC2::Subnet`.
        identifier:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The identifier of the local resource, such as an ARN.
      required:
      - type
      - identifier
      description: A local resource is the host where the agent is installed. Local
        resources can be a a subnet, a VPC, or an Availability Zone.
    MonitorLocalResourceType:
      type: string
      enum:
      - AWS::EC2::VPC
      - AWS::AvailabilityZone
      - AWS::EC2::Subnet
    MonitorLocalResources:
      type: array
      items:
        $ref: '#/components/schemas/MonitorLocalResource'
    MonitorMetric:
      type: string
      enum:
      - ROUND_TRIP_TIME
      - TIMEOUTS
      - RETRANSMISSIONS
      - DATA_TRANSFERRED
    MonitorRemoteResource:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/MonitorRemoteResourceType'
          description: The type of the remote resource. Valid values are `AWS::EC2::VPC`
            `AWS::AvailabilityZone`, `AWS::EC2::Subnet`, or `AWS::AWSService`.
        identifier:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The identifier of the remote resource, such as an ARN.
      required:
      - type
      - identifier
      description: A remote resource is the other endpoint in a network flow. That
        is, one endpoint is the local resource and the other is the remote resource.
        Remote resources can be a a subnet, a VPC, an Availability Zone, or an Amazon
        Web Services service.
    MonitorRemoteResourceType:
      type: string
      enum:
      - AWS::EC2::VPC
      - AWS::AvailabilityZone
      - AWS::EC2::Subnet
      - AWS::AWSService
    MonitorRemoteResources:
      type: array
      items:
        $ref: '#/components/schemas/MonitorRemoteResource'
    MonitorStatus:
      type: string
      enum:
      - PENDING
      - ACTIVE
      - INACTIVE
      - ERROR
      - DELETING
    MonitorSummary:
      type: object
      properties:
        monitorArn:
          allOf:
          - $ref: '#/components/schemas/MonitorArn'
          description: The Amazon Resource Name (ARN) of the monitor.
        monitorName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the monitor.
        monitorStatus:
          allOf:
          - $ref: '#/components/schemas/MonitorStatus'
          description: "The status of a monitor. The status can be one of the following\n\
            \n  * `PENDING`: The monitor is in the process of being created.\n\n \
            \ * `ACTIVE`: The monitor is active.\n\n  * `INACTIVE`: The monitor is\
            \ inactive.\n\n  * `ERROR`: Monitor creation failed due to an error.\n\
            \n  * `DELETING`: The monitor is in the process of being deleted."
      required:
      - monitorArn
      - monitorName
      - monitorStatus
      description: A summary of information about a monitor, includ the ARN, the name,
        and the status.
    MonitorTopContributorsRow:
      type: object
      properties:
        localIp:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The IP address of the local resource for a top contributor
            network flow.
        snatIp:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The secure network address translation (SNAT) IP address for
            a top contributor network flow.
        localInstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The instance identifier for the local resource for a top contributor
            network flow.
        localVpcId:
          allOf:
          - $ref: '#/components/schemas/VpcId'
          description: The VPC ID for a top contributor network flow for the local
            resource.
        localRegion:
          allOf:
          - $ref: '#/components/schemas/AwsRegion'
          description: The Amazon Web Services Region for the local resource for a
            top contributor network flow.
        localAz:
          allOf:
          - $ref: '#/components/schemas/AvailabilityZone'
          description: The Availability Zone for the local resource for a top contributor
            network flow.
        localSubnetId:
          allOf:
          - $ref: '#/components/schemas/SubnetId'
          description: The subnet ID for the local resource for a top contributor
            network flow.
        targetPort:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The target port.
        destinationCategory:
          allOf:
          - $ref: '#/components/schemas/DestinationCategory'
          description: "The destination category for a top contributors row. Destination\
            \ categories can be one of the following:\n\n  * `INTRA_AZ`: Top contributor\
            \ network flows within a single Availability Zone\n\n  * `INTER_AZ`: Top\
            \ contributor network flows between Availability Zones\n\n  * `INTER_VPC`:\
            \ Top contributor network flows between VPCs\n\n  * `AWS_SERVICES`: Top\
            \ contributor network flows to or from Amazon Web Services services\n\n\
            \  * `UNCLASSIFIED`: Top contributor network flows that do not have a\
            \ bucket classification"
        remoteVpcId:
          allOf:
          - $ref: '#/components/schemas/VpcId'
          description: The VPC ID for a top contributor network flow for the remote
            resource.
        remoteRegion:
          allOf:
          - $ref: '#/components/schemas/AwsRegion'
          description: The Amazon Web Services Region for the remote resource for
            a top contributor network flow.
        remoteAz:
          allOf:
          - $ref: '#/components/schemas/AvailabilityZone'
          description: The Availability Zone for the remote resource for a top contributor
            network flow.
        remoteSubnetId:
          allOf:
          - $ref: '#/components/schemas/SubnetId'
          description: The subnet ID for the remote resource for a top contributor
            network flow.
        remoteInstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The instance identifier for the remote resource for a top contributor
            network flow.
        remoteIp:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The IP address of the remote resource for a top contributor
            network flow.
        dnatIp:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The destination network address translation (DNAT) IP address
            for a top contributor network flow.
        value:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The value of the metric for a top contributor network flow.
        traversedConstructs:
          allOf:
          - $ref: '#/components/schemas/TraversedConstructsList'
          description: The constructs traversed by a network flow.
        kubernetesMetadata:
          allOf:
          - $ref: '#/components/schemas/KubernetesMetadata'
          description: Meta data about Kubernetes resources.
        localInstanceArn:
          allOf:
          - $ref: '#/components/schemas/InstanceArn'
          description: The Amazon Resource Name (ARN) of a local resource.
        localSubnetArn:
          allOf:
          - $ref: '#/components/schemas/SubnetArn'
          description: The Amazon Resource Name (ARN) of a local subnet.
        localVpcArn:
          allOf:
          - $ref: '#/components/schemas/VpcArn'
          description: The Amazon Resource Name (ARN) of a local VPC.
        remoteInstanceArn:
          allOf:
          - $ref: '#/components/schemas/InstanceArn'
          description: The Amazon Resource Name (ARN) of a remote resource.
        remoteSubnetArn:
          allOf:
          - $ref: '#/components/schemas/SubnetArn'
          description: The Amazon Resource Name (ARN) of a remote subnet.
        remoteVpcArn:
          allOf:
          - $ref: '#/components/schemas/VpcArn'
          description: The Amazon Resource Name (ARN) of a remote VPC.
      description: A set of information for a top contributor network flow in a monitor.
        In a monitor, Network Flow Monitor returns information about the network flows
        for top contributors for each metric. Top contributors are network flows with
        the top values for each metric type.
    MonitorTopContributorsRowList:
      type: array
      items:
        $ref: '#/components/schemas/MonitorTopContributorsRow'
    QueryStatus:
      type: string
      enum:
      - QUEUED
      - RUNNING
      - SUCCEEDED
      - FAILED
      - CANCELED
    ResourceName:
      type: string
      pattern: ^[a-zA-Z0-9_.-]+$
      minLength: 1
      maxLength: 255
    ResourceNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: The request specifies a resource that doesn't exist.
    ScopeId:
      type: string
    ScopeStatus:
      type: string
      enum:
      - SUCCEEDED
      - IN_PROGRESS
      - FAILED
    ScopeSummary:
      type: object
      properties:
        scopeId:
          allOf:
          - $ref: '#/components/schemas/ScopeId'
          description: The identifier for the scope that includes the resources you
            want to get data results for. A scope ID is an internally-generated identifier
            that includes all the resources for a specific root account.
        status:
          allOf:
          - $ref: '#/components/schemas/ScopeStatus'
          description: 'The status of a scope. The status can be one of the following,
            depending on the state of scope creation: `SUCCEEDED`, `IN_PROGRESS`,
            or `FAILED`.'
        scopeArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the scope.
      required:
      - scopeId
      - status
      - scopeArn
      description: A summary of information about a scope, including the ARN, target
        ID, and Amazon Web Services Region.
    ScopeSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ScopeSummary'
    ServiceQuotaExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: The request exceeded a service quota.
    StartQueryMonitorTopContributorsInput:
      type: object
      properties:
        monitorName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the monitor.
        startTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp that is the date and time beginning of the period
            that you want to retrieve results for with your query.
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp that is the date and time end of the period that
            you want to retrieve results for with your query.
        metricName:
          allOf:
          - $ref: '#/components/schemas/MonitorMetric'
          description: The metric that you want to query top contributors for. That
            is, you can specify this metric to return the top contributor network
            flows, for this type of metric, for a monitor and (optionally) within
            a specific category, such as network flows between Availability Zones.
        destinationCategory:
          allOf:
          - $ref: '#/components/schemas/DestinationCategory'
          description: "The category that you want to query top contributors for,\
            \ for a specific monitor. Destination categories can be one of the following:\n\
            \n  * `INTRA_AZ`: Top contributor network flows within a single Availability\
            \ Zone\n\n  * `INTER_AZ`: Top contributor network flows between Availability\
            \ Zones\n\n  * `INTER_VPC`: Top contributor network flows between VPCs\n\
            \n  * `AMAZON_S3`: Top contributor network flows to or from Amazon S3\n\
            \n  * `AMAZON_DYNAMODB`: Top contributor network flows to or from Amazon\
            \ Dynamo DB\n\n  * `UNCLASSIFIED`: Top contributor network flows that\
            \ do not have a bucket classification"
        limit:
          allOf:
          - $ref: '#/components/schemas/Limit'
          description: The maximum number of top contributors to return.
      required:
      - monitorName
      - startTime
      - endTime
      - metricName
      - destinationCategory
    StartQueryMonitorTopContributorsOutput:
      type: object
      properties:
        queryId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The identifier for the query. A query ID is an internally-generated
            identifier for a specific query returned from an API call to start a query.
      required:
      - queryId
    StartQueryWorkloadInsightsTopContributorsDataInput:
      type: object
      properties:
        scopeId:
          allOf:
          - $ref: '#/components/schemas/ScopeId'
          description: The identifier for the scope that includes the resources you
            want to get data results for. A scope ID is an internally-generated identifier
            that includes all the resources for a specific root account.
        startTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp that is the date and time beginning of the period
            that you want to retrieve results for with your query.
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp that is the date and time end of the period that
            you want to retrieve results for with your query.
        metricName:
          allOf:
          - $ref: '#/components/schemas/WorkloadInsightsMetric'
          description: The metric that you want to query top contributors for. That
            is, you can specify this metric to return the top contributor network
            flows, for this type of metric, for a monitor and (optionally) within
            a specific category, such as network flows between Availability Zones.
        destinationCategory:
          allOf:
          - $ref: '#/components/schemas/DestinationCategory'
          description: "The destination category for a top contributors. Destination\
            \ categories can be one of the following:\n\n  * `INTRA_AZ`: Top contributor\
            \ network flows within a single Availability Zone\n\n  * `INTER_AZ`: Top\
            \ contributor network flows between Availability Zones\n\n  * `INTER_VPC`:\
            \ Top contributor network flows between VPCs\n\n  * `AWS_SERVICES`: Top\
            \ contributor network flows to or from Amazon Web Services services\n\n\
            \  * `UNCLASSIFIED`: Top contributor network flows that do not have a\
            \ bucket classification"
      required:
      - scopeId
      - startTime
      - endTime
      - metricName
      - destinationCategory
    StartQueryWorkloadInsightsTopContributorsDataOutput:
      type: object
      properties:
        queryId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The identifier for the query. A query ID is an internally-generated
            identifier for a specific query returned from an API call to start a query.
      required:
      - queryId
    StartQueryWorkloadInsightsTopContributorsInput:
      type: object
      properties:
        scopeId:
          allOf:
          - $ref: '#/components/schemas/ScopeId'
          description: The identifier for the scope that includes the resources you
            want to get data results for. A scope ID is an internally-generated identifier
            that includes all the resources for a specific root account. A scope ID
            is returned from a `CreateScope` API call.
        startTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp that is the date and time beginning of the period
            that you want to retrieve results for with your query.
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp that is the date and time end of the period that
            you want to retrieve results for with your query.
        metricName:
          allOf:
          - $ref: '#/components/schemas/WorkloadInsightsMetric'
          description: The metric that you want to query top contributors for. That
            is, you can specify this metric to return the top contributor network
            flows, for this type of metric, for a monitor and (optionally) within
            a specific category, such as network flows between Availability Zones.
        destinationCategory:
          allOf:
          - $ref: '#/components/schemas/DestinationCategory'
          description: "The destination category for a top contributors row. Destination\
            \ categories can be one of the following:\n\n  * `INTRA_AZ`: Top contributor\
            \ network flows within a single Availability Zone\n\n  * `INTER_AZ`: Top\
            \ contributor network flows between Availability Zones\n\n  * `INTER_VPC`:\
            \ Top contributor network flows between VPCs\n\n  * `AWS_SERVICES`: Top\
            \ contributor network flows to or from Amazon Web Services services\n\n\
            \  * `UNCLASSIFIED`: Top contributor network flows that do not have a\
            \ bucket classification"
        limit:
          allOf:
          - $ref: '#/components/schemas/Limit'
          description: The maximum number of top contributors to return.
      required:
      - scopeId
      - startTime
      - endTime
      - metricName
      - destinationCategory
    StartQueryWorkloadInsightsTopContributorsOutput:
      type: object
      properties:
        queryId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The identifier for the query. A query ID is an internally-generated
            identifier for a specific query returned from an API call to start a query.
      required:
      - queryId
    StopQueryMonitorTopContributorsInput:
      type: object
      properties:
        monitorName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the monitor.
        queryId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The identifier for the query. A query ID is an internally-generated
            identifier for a specific query returned from an API call to start a query.
      required:
      - monitorName
      - queryId
    StopQueryMonitorTopContributorsOutput:
      type: object
      properties: {}
    StopQueryWorkloadInsightsTopContributorsDataInput:
      type: object
      properties:
        scopeId:
          allOf:
          - $ref: '#/components/schemas/ScopeId'
          description: The identifier for the scope that includes the resources you
            want to get data results for. A scope ID is an internally-generated identifier
            that includes all the resources for a specific root account.
        queryId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The identifier for the query. A query ID is an internally-generated
            identifier for a specific query returned from an API call to start a query.
      required:
      - scopeId
      - queryId
    StopQueryWorkloadInsightsTopContributorsDataOutput:
      type: object
      properties: {}
    StopQueryWorkloadInsightsTopContributorsInput:
      type: object
      properties:
        scopeId:
          allOf:
          - $ref: '#/components/schemas/ScopeId'
          description: The identifier for the scope that includes the resources you
            want to get data results for. A scope ID is an internally-generated identifier
            that includes all the resources for a specific root account.
        queryId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The identifier for the query. A query ID is an internally-generated
            identifier for a specific query returned from an API call to start a query.
      required:
      - scopeId
      - queryId
    StopQueryWorkloadInsightsTopContributorsOutput:
      type: object
      properties: {}
    SubnetArn:
      type: string
    SubnetId:
      type: string
      pattern: ^subnet-[a-zA-Z0-9]{8,32}$
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TagResourceInput:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags for a resource.
      required:
      - resourceArn
      - tags
    TagResourceOutput:
      type: object
      properties: {}
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    TargetId:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/AccountId'
        description: |-
          The identifier for the account for a target.
      description: |-
        A target ID is an internally-generated identifier for a target. A target allows you to identify all the resources in a Network Flow Monitor scope. Currently, a target is always an Amazon Web Services account.
    TargetIdentifier:
      type: object
      properties:
        targetId:
          allOf:
          - $ref: '#/components/schemas/TargetId'
          description: The identifier for a target.
        targetType:
          allOf:
          - $ref: '#/components/schemas/TargetType'
          description: The type of a target. A target type is currently always `ACCOUNT`
            because a target is currently a single Amazon Web Services account.
      required:
      - targetId
      - targetType
      description: A target identifier is a pair of identifying information for a
        resource that is included in a target. A target identifier includes the target
        ID and the target type.
    TargetResource:
      type: object
      properties:
        targetIdentifier:
          allOf:
          - $ref: '#/components/schemas/TargetIdentifier'
          description: A target identifier is a pair of identifying information for
            a resource that is included in a target. A target identifier includes
            the target ID and the target type.
        region:
          allOf:
          - $ref: '#/components/schemas/AwsRegion'
          description: The Amazon Web Services Region where the target resource is
            located.
      required:
      - targetIdentifier
      - region
      description: A target resource in a scope. The resource is identified by a Region
        and a target identifier, which includes a target ID and a target type.
    TargetResourceList:
      type: array
      items:
        $ref: '#/components/schemas/TargetResource'
    TargetType:
      type: string
      enum:
      - ACCOUNT
    ThrottlingException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: The request was denied due to request throttling.
    TraversedComponent:
      type: object
      properties:
        componentId:
          allOf:
          - $ref: '#/components/schemas/Component'
          description: The identifier for the traversed component.
        componentType:
          allOf:
          - $ref: '#/components/schemas/ComponentType'
          description: The type of component that was traversed.
        componentArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of a tranversed component.
        serviceName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The service name for the traversed component.
      description: A section of the network that a network flow has traveled through.
    TraversedConstructsList:
      type: array
      items:
        $ref: '#/components/schemas/TraversedComponent'
    UntagResourceInput:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource.
        tagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: Keys that you specified when you tagged a resource.
      required:
      - resourceArn
      - tagKeys
    UntagResourceOutput:
      type: object
      properties: {}
    UpdateMonitorInput:
      type: object
      properties:
        monitorName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the monitor.
        localResourcesToAdd:
          allOf:
          - $ref: '#/components/schemas/MonitorLocalResources'
          description: The local resources to add, as an array of resources with identifiers
            and types.
        localResourcesToRemove:
          allOf:
          - $ref: '#/components/schemas/MonitorLocalResources'
          description: The local resources to remove, as an array of resources with
            identifiers and types.
        remoteResourcesToAdd:
          allOf:
          - $ref: '#/components/schemas/MonitorRemoteResources'
          description: The remove resources to add, as an array of resources with
            identifiers and types.
        remoteResourcesToRemove:
          allOf:
          - $ref: '#/components/schemas/MonitorRemoteResources'
          description: The remove resources to remove, as an array of resources with
            identifiers and types.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/UuidString'
          description: A unique, case-sensitive string of up to 64 ASCII characters
            that you specify to make an idempotent API request. Don't reuse the same
            client token for other API requests.
      required:
      - monitorName
    UpdateMonitorOutput:
      type: object
      properties:
        monitorArn:
          allOf:
          - $ref: '#/components/schemas/MonitorArn'
          description: The Amazon Resource Name (ARN) of the monitor.
        monitorName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the monitor.
        monitorStatus:
          allOf:
          - $ref: '#/components/schemas/MonitorStatus'
          description: "The status of a monitor. The status can be one of the following\n\
            \n  * `PENDING`: The monitor is in the process of being created.\n\n \
            \ * `ACTIVE`: The monitor is active.\n\n  * `INACTIVE`: The monitor is\
            \ inactive.\n\n  * `ERROR`: Monitor creation failed due to an error.\n\
            \n  * `DELETING`: The monitor is in the process of being deleted."
        localResources:
          allOf:
          - $ref: '#/components/schemas/MonitorLocalResources'
          description: The local resources updated for a monitor, as an array of resources
            with identifiers and types.
        remoteResources:
          allOf:
          - $ref: '#/components/schemas/MonitorRemoteResources'
          description: The remote resources updated for a monitor, as an array of
            resources with identifiers and types.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Iso8601Timestamp'
          description: The date and time when the monitor was created.
        modifiedAt:
          allOf:
          - $ref: '#/components/schemas/Iso8601Timestamp'
          description: The last date and time that the monitor was modified.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags for a monitor.
      required:
      - monitorArn
      - monitorName
      - monitorStatus
      - localResources
      - remoteResources
      - createdAt
      - modifiedAt
    UpdateScopeInput:
      type: object
      properties:
        scopeId:
          allOf:
          - $ref: '#/components/schemas/ScopeId'
          description: The identifier for the scope that includes the resources you
            want to get data results for. A scope ID is an internally-generated identifier
            that includes all the resources for a specific root account.
        resourcesToAdd:
          allOf:
          - $ref: '#/components/schemas/TargetResourceList'
          description: A list of resources to add to a scope.
        resourcesToDelete:
          allOf:
          - $ref: '#/components/schemas/TargetResourceList'
          description: A list of resources to delete from a scope.
      required:
      - scopeId
    UpdateScopeOutput:
      type: object
      properties:
        scopeId:
          allOf:
          - $ref: '#/components/schemas/ScopeId'
          description: The identifier for the scope that includes the resources you
            want to get data results for. A scope ID is an internally-generated identifier
            that includes all the resources for a specific root account.
        status:
          allOf:
          - $ref: '#/components/schemas/ScopeStatus'
          description: 'The status for a call to update a scope. The status can be
            one of the following: `SUCCEEDED`, `IN_PROGRESS`, or `FAILED`.'
        scopeArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the scope.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags for a scope.
      required:
      - scopeId
      - status
      - scopeArn
    UuidString:
      type: string
      pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
      minLength: 36
      maxLength: 36
    ValidationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: Invalid request.
    VpcArn:
      type: string
    VpcId:
      type: string
      pattern: ^vpc-[a-zA-Z0-9]{8,32}$
    WorkloadInsightsMetric:
      type: string
      enum:
      - TIMEOUTS
      - RETRANSMISSIONS
      - DATA_TRANSFERRED
    WorkloadInsightsTopContributorsDataPoint:
      type: object
      properties:
        timestamps:
          allOf:
          - $ref: '#/components/schemas/WorkloadInsightsTopContributorsTimestampsList'
          description: An array of the timestamps for the data point.
        values:
          allOf:
          - $ref: '#/components/schemas/WorkloadInsightsTopContributorsValuesList'
          description: The values for the data point.
        label:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The label identifying the data point.
      required:
      - timestamps
      - values
      - label
      description: A data point for a top contributor network flow in a scope. Network
        Flow Monitor returns information about the network flows with the top values
        for each metric type, which are called top contributors.
    WorkloadInsightsTopContributorsDataPoints:
      type: array
      items:
        $ref: '#/components/schemas/WorkloadInsightsTopContributorsDataPoint'
    WorkloadInsightsTopContributorsRow:
      type: object
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The account ID for a specific row of data.
        localSubnetId:
          allOf:
          - $ref: '#/components/schemas/SubnetId'
          description: The subnet identifier for the local resource.
        localAz:
          allOf:
          - $ref: '#/components/schemas/AvailabilityZone'
          description: The identifier for the Availability Zone where the local resource
            is located.
        localVpcId:
          allOf:
          - $ref: '#/components/schemas/VpcId'
          description: The identifier for the VPC for the local resource.
        localRegion:
          allOf:
          - $ref: '#/components/schemas/AwsRegion'
          description: The Amazon Web Services Region where the local resource is
            located.
        remoteIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The identifier of a remote resource.
        value:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The value for a metric.
        localSubnetArn:
          allOf:
          - $ref: '#/components/schemas/SubnetArn'
          description: The Amazon Resource Name (ARN) of a local subnet.
        localVpcArn:
          allOf:
          - $ref: '#/components/schemas/VpcArn'
          description: The Amazon Resource Name (ARN) of a local VPC.
      description: A row for a top contributor for a scope.
    WorkloadInsightsTopContributorsRowList:
      type: array
      items:
        $ref: '#/components/schemas/WorkloadInsightsTopContributorsRow'
    WorkloadInsightsTopContributorsTimestampsList:
      type: array
      items:
        type: string
        format: date-time
    WorkloadInsightsTopContributorsValuesList:
      type: array
      items:
        type: number
