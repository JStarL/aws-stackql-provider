openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: chatbot
  x-aws-serviceName: chatbot
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2017-10-11'
  title: AWS Chatbot
  description: |-
    The _AWS Chatbot API Reference_ provides descriptions, API request parameters, and the XML response for each of the AWS Chatbot API actions.

    AWS Chatbot APIs are currently available in the following Regions:

      * US East (Ohio) - `us-east-2`

      * US West (Oregon) - `us-west-2`

      * Asia Pacific (Singapore) - `ap-southeast-1`

      * Europe (Ireland) - `eu-west-1`

    The AWS Chatbot console can only be used in US East (Ohio). Your configuration data however, is stored in each of the relevant available Regions.

    Your AWS CloudTrail events are logged in whatever Region you call from, not US East (N. Virginia) by default.
servers:
- description: The AWS Chatbot regional endpoint
  url: https://chatbot.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /associate-to-configuration:
    post:
      operationId: AssociateToConfiguration
      description: |-
        Links a resource (for example, a custom action) to a channel configuration.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Resource:
                  $ref: '#/components/schemas/ResourceIdentifier'
                ChatConfiguration:
                  $ref: '#/components/schemas/ChatConfigurationArn'
      responses:
        '201': {}
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '400':
          description: |-
            Your request input doesn't meet the constraints required by AWS Chatbot.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '403':
          description: |-
            The request was rejected because it doesn't have valid credentials for the target resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /create-chime-webhook-configuration:
    post:
      operationId: CreateChimeWebhookConfiguration
      description: |-
        Creates an AWS Chatbot configuration for Amazon Chime.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                WebhookDescription:
                  $ref: '#/components/schemas/ChimeWebhookDescription'
                WebhookUrl:
                  $ref: '#/components/schemas/ChimeWebhookUrl'
                SnsTopicArns:
                  $ref: '#/components/schemas/SnsTopicArnList'
                IamRoleArn:
                  $ref: '#/components/schemas/Arn'
                ConfigurationName:
                  $ref: '#/components/schemas/ConfigurationName'
                LoggingLevel:
                  $ref: '#/components/schemas/CustomerCwLogLevel'
                Tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '201': {}
        '409':
          description: |-
            There was an issue processing your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            We can’t process your request right now because of a server issue. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateChimeWebhookConfigurationException'
        '400':
          description: |-
            Your request input doesn't meet the constraints required by AWS Chatbot.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '403':
          description: |-
            You have exceeded a service limit for AWS Chatbot.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
  /create-custom-action:
    post:
      operationId: CreateCustomAction
      description: |-
        Creates a custom action that can be invoked as an alias or as a button on a notification.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Definition:
                  $ref: '#/components/schemas/CustomActionDefinition'
                AliasName:
                  $ref: '#/components/schemas/CustomActionAliasName'
                Attachments:
                  $ref: '#/components/schemas/CustomActionAttachmentList'
                Tags:
                  $ref: '#/components/schemas/TagList'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
                ActionName:
                  $ref: '#/components/schemas/CustomActionName'
      responses:
        '201': {}
        '409':
          description: |-
            There was an issue processing your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '400':
          description: |-
            Your request input doesn't meet the constraints required by AWS Chatbot.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '403':
          description: |-
            The request was rejected because it doesn't have valid credentials for the target resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /create-ms-teams-channel-configuration:
    post:
      operationId: CreateMicrosoftTeamsChannelConfiguration
      description: |-
        Creates an AWS Chatbot configuration for Microsoft Teams.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ChannelId:
                  $ref: '#/components/schemas/TeamsChannelId'
                ChannelName:
                  $ref: '#/components/schemas/TeamsChannelName'
                TeamId:
                  $ref: '#/components/schemas/UUID'
                TeamName:
                  $ref: '#/components/schemas/TeamName'
                TenantId:
                  $ref: '#/components/schemas/UUID'
                SnsTopicArns:
                  $ref: '#/components/schemas/SnsTopicArnList'
                IamRoleArn:
                  $ref: '#/components/schemas/Arn'
                ConfigurationName:
                  $ref: '#/components/schemas/ConfigurationName'
                LoggingLevel:
                  $ref: '#/components/schemas/CustomerCwLogLevel'
                GuardrailPolicyArns:
                  $ref: '#/components/schemas/GuardrailPolicyArnList'
                UserAuthorizationRequired:
                  $ref: '#/components/schemas/BooleanAccountPreference'
                Tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '201': {}
        '409':
          description: |-
            There was an issue processing your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            We can’t process your request right now because of a server issue. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTeamsChannelConfigurationException'
        '400':
          description: |-
            Your request input doesn't meet the constraints required by AWS Chatbot.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '403':
          description: |-
            You have exceeded a service limit for AWS Chatbot.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
  /create-slack-channel-configuration:
    post:
      operationId: CreateSlackChannelConfiguration
      description: |-
        Creates an AWS Chatbot confugration for Slack.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SlackTeamId:
                  $ref: '#/components/schemas/SlackTeamId'
                SlackChannelId:
                  $ref: '#/components/schemas/SlackChannelId'
                SlackChannelName:
                  $ref: '#/components/schemas/SlackChannelDisplayName'
                SnsTopicArns:
                  $ref: '#/components/schemas/SnsTopicArnList'
                IamRoleArn:
                  $ref: '#/components/schemas/Arn'
                ConfigurationName:
                  $ref: '#/components/schemas/ConfigurationName'
                LoggingLevel:
                  $ref: '#/components/schemas/CustomerCwLogLevel'
                GuardrailPolicyArns:
                  $ref: '#/components/schemas/GuardrailPolicyArnList'
                UserAuthorizationRequired:
                  $ref: '#/components/schemas/BooleanAccountPreference'
                Tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '201': {}
        '409':
          description: |-
            There was an issue processing your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            We can’t process your request right now because of a server issue. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSlackChannelConfigurationException'
        '400':
          description: |-
            Your request input doesn't meet the constraints required by AWS Chatbot.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '403':
          description: |-
            You have exceeded a service limit for AWS Chatbot.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
  /delete-chime-webhook-configuration:
    post:
      operationId: DeleteChimeWebhookConfiguration
      description: |-
        Deletes a Amazon Chime webhook configuration for AWS Chatbot.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ChatConfigurationArn:
                  $ref: '#/components/schemas/ChatConfigurationArn'
      responses:
        '204': {}
        '500':
          description: |-
            We can’t process your request right now because of a server issue. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteChimeWebhookConfigurationException'
        '400':
          description: |-
            Your request input doesn't meet the constraints required by AWS Chatbot.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            We were unable to find the resource for your request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /delete-custom-action:
    post:
      operationId: DeleteCustomAction
      description: |-
        Deletes a custom action.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                CustomActionArn:
                  $ref: '#/components/schemas/CustomActionArn'
      responses:
        '204': {}
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '400':
          description: |-
            Your request input doesn't meet the constraints required by AWS Chatbot.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            We were unable to find the resource for your request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '403':
          description: |-
            The request was rejected because it doesn't have valid credentials for the target resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /delete-ms-teams-channel-configuration:
    post:
      operationId: DeleteMicrosoftTeamsChannelConfiguration
      description: |-
        Deletes a Microsoft Teams channel configuration for AWS Chatbot
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ChatConfigurationArn:
                  $ref: '#/components/schemas/ChatConfigurationArn'
      responses:
        '204': {}
        '500':
          description: |-
            We can’t process your request right now because of a server issue. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTeamsChannelConfigurationException'
        '400':
          description: |-
            Your request input doesn't meet the constraints required by AWS Chatbot.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            We were unable to find the resource for your request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /delete-ms-teams-configured-teams:
    post:
      operationId: DeleteMicrosoftTeamsConfiguredTeam
      description: |-
        Deletes the Microsoft Teams team authorization allowing for channels to be configured in that Microsoft Teams team. Note that the Microsoft Teams team must have no channels configured to remove it.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TeamId:
                  $ref: '#/components/schemas/UUID'
      responses:
        '204': {}
        '500':
          description: |-
            We can’t process your request right now because of a server issue. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTeamsConfiguredTeamException'
        '400':
          description: |-
            Your request input doesn't meet the constraints required by AWS Chatbot.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
  /delete-ms-teams-user-identity:
    post:
      operationId: DeleteMicrosoftTeamsUserIdentity
      description: |-
        Identifes a user level permission for a channel configuration.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ChatConfigurationArn:
                  $ref: '#/components/schemas/ChatConfigurationArn'
                UserId:
                  $ref: '#/components/schemas/UUID'
      responses:
        '204': {}
        '500':
          description: |-
            We can’t process your request right now because of a server issue. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteMicrosoftTeamsUserIdentityException'
        '400':
          description: |-
            Your request input doesn't meet the constraints required by AWS Chatbot.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '404':
          description: |-
            We were unable to find the resource for your request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /delete-slack-channel-configuration:
    post:
      operationId: DeleteSlackChannelConfiguration
      description: |-
        Deletes a Slack channel configuration for AWS Chatbot
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ChatConfigurationArn:
                  $ref: '#/components/schemas/ChatConfigurationArn'
      responses:
        '204': {}
        '500':
          description: |-
            We can’t process your request right now because of a server issue. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSlackChannelConfigurationException'
        '400':
          description: |-
            Your request input doesn't meet the constraints required by AWS Chatbot.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            We were unable to find the resource for your request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /delete-slack-user-identity:
    post:
      operationId: DeleteSlackUserIdentity
      description: |-
        Deletes a user level permission for a Slack channel configuration.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ChatConfigurationArn:
                  $ref: '#/components/schemas/ChatConfigurationArn'
                SlackTeamId:
                  $ref: '#/components/schemas/SlackTeamId'
                SlackUserId:
                  $ref: '#/components/schemas/SlackUserId'
      responses:
        '204': {}
        '500':
          description: |-
            We can’t process your request right now because of a server issue. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSlackUserIdentityException'
        '400':
          description: |-
            Your request input doesn't meet the constraints required by AWS Chatbot.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '404':
          description: |-
            We were unable to find the resource for your request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /delete-slack-workspace-authorization:
    post:
      operationId: DeleteSlackWorkspaceAuthorization
      description: |-
        Deletes the Slack workspace authorization that allows channels to be configured in that workspace. This requires all configured channels in the workspace to be deleted.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SlackTeamId:
                  $ref: '#/components/schemas/SlackTeamId'
      responses:
        '204': {}
        '500':
          description: |-
            There was an issue deleting your Slack workspace.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSlackWorkspaceAuthorizationFault'
        '400':
          description: |-
            Your request input doesn't meet the constraints required by AWS Chatbot.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
  /describe-chime-webhook-configurations:
    post:
      operationId: DescribeChimeWebhookConfigurations
      description: |-
        Lists Amazon Chime webhook configurations optionally filtered by ChatConfigurationArn
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
                NextToken:
                  $ref: '#/components/schemas/PaginationToken'
                ChatConfigurationArn:
                  $ref: '#/components/schemas/ChatConfigurationArn'
      responses:
        '200': {}
        '500':
          description: |-
            We can’t process your request right now because of a server issue. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeChimeWebhookConfigurationsException'
        '400':
          description: |-
            Your request input doesn't meet the constraints required by AWS Chatbot.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
  /describe-slack-channel-configurations:
    post:
      operationId: DescribeSlackChannelConfigurations
      description: |-
        Lists Slack channel configurations optionally filtered by ChatConfigurationArn
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
                NextToken:
                  $ref: '#/components/schemas/PaginationToken'
                ChatConfigurationArn:
                  $ref: '#/components/schemas/ChatConfigurationArn'
      responses:
        '200': {}
        '500':
          description: |-
            We can’t process your request right now because of a server issue. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeSlackChannelConfigurationsException'
        '400':
          description: |-
            Your request input doesn't meet the constraints required by AWS Chatbot.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
  /describe-slack-user-identities:
    post:
      operationId: DescribeSlackUserIdentities
      description: |-
        Lists all Slack user identities with a mapped role.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ChatConfigurationArn:
                  $ref: '#/components/schemas/ChatConfigurationArn'
                NextToken:
                  $ref: '#/components/schemas/PaginationToken'
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            We can’t process your request right now because of a server issue. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeSlackUserIdentitiesException'
        '400':
          description: |-
            Your request input doesn't meet the constraints required by AWS Chatbot.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
  /describe-slack-workspaces:
    post:
      operationId: DescribeSlackWorkspaces
      description: |-
        List all authorized Slack workspaces connected to the AWS Account onboarded with AWS Chatbot.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
                NextToken:
                  $ref: '#/components/schemas/PaginationToken'
      responses:
        '200': {}
        '500':
          description: |-
            We can’t process your request right now because of a server issue. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeSlackWorkspacesException'
        '400':
          description: |-
            Your request input doesn't meet the constraints required by AWS Chatbot.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
  /disassociate-from-configuration:
    post:
      operationId: DisassociateFromConfiguration
      description: |-
        Unlink a resource, for example a custom action, from a channel configuration.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Resource:
                  $ref: '#/components/schemas/ResourceIdentifier'
                ChatConfiguration:
                  $ref: '#/components/schemas/ChatConfigurationArn'
      responses:
        '204': {}
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '400':
          description: |-
            Your request input doesn't meet the constraints required by AWS Chatbot.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '403':
          description: |-
            The request was rejected because it doesn't have valid credentials for the target resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /get-account-preferences:
    post:
      operationId: GetAccountPreferences
      description: |-
        Returns AWS Chatbot account preferences.
      parameters: []
      responses:
        '200': {}
        '500':
          description: |-
            We can’t process your request right now because of a server issue. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountPreferencesException'
        '400':
          description: |-
            Your request input doesn't meet the constraints required by AWS Chatbot.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
  /get-custom-action:
    post:
      operationId: GetCustomAction
      description: |-
        Returns a custom action.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                CustomActionArn:
                  $ref: '#/components/schemas/CustomActionArn'
      responses:
        '200': {}
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '400':
          description: |-
            Your request input doesn't meet the constraints required by AWS Chatbot.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            We were unable to find the resource for your request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '403':
          description: |-
            The request was rejected because it doesn't have valid credentials for the target resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /get-ms-teams-channel-configuration:
    post:
      operationId: GetMicrosoftTeamsChannelConfiguration
      description: |-
        Returns a Microsoft Teams channel configuration in an AWS account.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ChatConfigurationArn:
                  $ref: '#/components/schemas/ChatConfigurationArn'
      responses:
        '200': {}
        '500':
          description: |-
            We can’t process your request right now because of a server issue. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTeamsChannelConfigurationException'
        '400':
          description: |-
            Your request input doesn't meet the constraints required by AWS Chatbot.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
  /list-associations:
    post:
      operationId: ListAssociations
      description: |-
        Lists resources associated with a channel configuration.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ChatConfiguration:
                  $ref: '#/components/schemas/ChatConfigurationArn'
                MaxResults:
                  $ref: '#/components/schemas/Integer'
                NextToken:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
  /list-custom-actions:
    post:
      operationId: ListCustomActions
      description: |-
        Lists custom actions defined in this account.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MaxResults:
                  $ref: '#/components/schemas/Integer'
                NextToken:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '400':
          description: |-
            Your request input doesn't meet the constraints required by AWS Chatbot.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '403':
          description: |-
            The request was rejected because it doesn't have valid credentials for the target resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /list-ms-teams-channel-configurations:
    post:
      operationId: ListMicrosoftTeamsChannelConfigurations
      description: |-
        Lists all AWS Chatbot Microsoft Teams channel configurations in an AWS account.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
                NextToken:
                  $ref: '#/components/schemas/PaginationToken'
                TeamId:
                  $ref: '#/components/schemas/UUID'
      responses:
        '200': {}
        '400':
          description: |-
            Your request input doesn't meet the constraints required by AWS Chatbot.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '500':
          description: |-
            We can’t process your request right now because of a server issue. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTeamsChannelConfigurationsException'
  /list-ms-teams-configured-teams:
    post:
      operationId: ListMicrosoftTeamsConfiguredTeams
      description: |-
        Lists all authorized Microsoft Teams for an AWS Account
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
                NextToken:
                  $ref: '#/components/schemas/PaginationToken'
      responses:
        '200': {}
        '400':
          description: |-
            Your request input doesn't meet the constraints required by AWS Chatbot.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '500':
          description: |-
            We can’t process your request right now because of a server issue. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMicrosoftTeamsConfiguredTeamsException'
  /list-ms-teams-user-identities:
    post:
      operationId: ListMicrosoftTeamsUserIdentities
      description: |-
        A list all Microsoft Teams user identities with a mapped role.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ChatConfigurationArn:
                  $ref: '#/components/schemas/ChatConfigurationArn'
                NextToken:
                  $ref: '#/components/schemas/PaginationToken'
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '400':
          description: |-
            Your request input doesn't meet the constraints required by AWS Chatbot.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '500':
          description: |-
            We can’t process your request right now because of a server issue. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMicrosoftTeamsUserIdentitiesException'
  /list-tags-for-resource:
    post:
      operationId: ListTagsForResource
      description: |-
        Lists all of the tags associated with the Amazon Resource Name (ARN) that you specify. The resource can be a user, server, or role.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ResourceARN:
                  $ref: '#/components/schemas/AmazonResourceName'
      responses:
        '200': {}
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '404':
          description: |-
            We were unable to find the resource for your request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            We can’t process your request right now because of a server issue. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /tag-resource:
    post:
      operationId: TagResource
      description: |-
        Attaches a key-value pair to a resource, as identified by its Amazon Resource Name (ARN). Resources are users, servers, roles, and other entities.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ResourceARN:
                  $ref: '#/components/schemas/AmazonResourceName'
                Tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '404':
          description: |-
            We were unable to find the resource for your request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            We can’t process your request right now because of a server issue. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '400':
          description: |-
            The supplied list of tags contains too many tags.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
  /untag-resource:
    post:
      operationId: UntagResource
      description: |-
        Detaches a key-value pair from a resource, as identified by its Amazon Resource Name (ARN). Resources are users, servers, roles, and other entities.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ResourceARN:
                  $ref: '#/components/schemas/AmazonResourceName'
                TagKeys:
                  $ref: '#/components/schemas/TagKeyList'
      responses:
        '200': {}
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '404':
          description: |-
            We were unable to find the resource for your request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            We can’t process your request right now because of a server issue. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /update-account-preferences:
    post:
      operationId: UpdateAccountPreferences
      description: |-
        Updates AWS Chatbot account preferences.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                UserAuthorizationRequired:
                  $ref: '#/components/schemas/BooleanAccountPreference'
                TrainingDataCollectionEnabled:
                  $ref: '#/components/schemas/BooleanAccountPreference'
      responses:
        '200': {}
        '400':
          description: |-
            Your request input doesn't meet the constraints required by AWS Chatbot.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '500':
          description: |-
            We can’t process your request right now because of a server issue. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAccountPreferencesException'
  /update-chime-webhook-configuration:
    post:
      operationId: UpdateChimeWebhookConfiguration
      description: |-
        Updates a Amazon Chime webhook configuration.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ChatConfigurationArn:
                  $ref: '#/components/schemas/ChatConfigurationArn'
                WebhookDescription:
                  $ref: '#/components/schemas/ChimeWebhookDescription'
                WebhookUrl:
                  $ref: '#/components/schemas/ChimeWebhookUrl'
                SnsTopicArns:
                  $ref: '#/components/schemas/SnsTopicArnList'
                IamRoleArn:
                  $ref: '#/components/schemas/Arn'
                LoggingLevel:
                  $ref: '#/components/schemas/CustomerCwLogLevel'
      responses:
        '200': {}
        '400':
          description: |-
            Your request input doesn't meet the constraints required by AWS Chatbot.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            We were unable to find the resource for your request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            We can’t process your request right now because of a server issue. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateChimeWebhookConfigurationException'
  /update-custom-action:
    post:
      operationId: UpdateCustomAction
      description: |-
        Updates a custom action.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                CustomActionArn:
                  $ref: '#/components/schemas/CustomActionArn'
                Definition:
                  $ref: '#/components/schemas/CustomActionDefinition'
                AliasName:
                  $ref: '#/components/schemas/CustomActionAliasName'
                Attachments:
                  $ref: '#/components/schemas/CustomActionAttachmentList'
      responses:
        '200': {}
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceError'
        '400':
          description: |-
            Your request input doesn't meet the constraints required by AWS Chatbot.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            We were unable to find the resource for your request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '403':
          description: |-
            The request was rejected because it doesn't have valid credentials for the target resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /update-ms-teams-channel-configuration:
    post:
      operationId: UpdateMicrosoftTeamsChannelConfiguration
      description: |-
        Updates an Microsoft Teams channel configuration.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ChatConfigurationArn:
                  $ref: '#/components/schemas/ChatConfigurationArn'
                ChannelId:
                  $ref: '#/components/schemas/TeamsChannelId'
                ChannelName:
                  $ref: '#/components/schemas/TeamsChannelName'
                SnsTopicArns:
                  $ref: '#/components/schemas/SnsTopicArnList'
                IamRoleArn:
                  $ref: '#/components/schemas/Arn'
                LoggingLevel:
                  $ref: '#/components/schemas/CustomerCwLogLevel'
                GuardrailPolicyArns:
                  $ref: '#/components/schemas/GuardrailPolicyArnList'
                UserAuthorizationRequired:
                  $ref: '#/components/schemas/BooleanAccountPreference'
      responses:
        '200': {}
        '400':
          description: |-
            Your request input doesn't meet the constraints required by AWS Chatbot.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            We were unable to find the resource for your request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            We can’t process your request right now because of a server issue. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTeamsChannelConfigurationException'
  /update-slack-channel-configuration:
    post:
      operationId: UpdateSlackChannelConfiguration
      description: |-
        Updates a Slack channel configuration.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ChatConfigurationArn:
                  $ref: '#/components/schemas/ChatConfigurationArn'
                SlackChannelId:
                  $ref: '#/components/schemas/SlackChannelId'
                SlackChannelName:
                  $ref: '#/components/schemas/SlackChannelDisplayName'
                SnsTopicArns:
                  $ref: '#/components/schemas/SnsTopicArnList'
                IamRoleArn:
                  $ref: '#/components/schemas/Arn'
                LoggingLevel:
                  $ref: '#/components/schemas/CustomerCwLogLevel'
                GuardrailPolicyArns:
                  $ref: '#/components/schemas/GuardrailPolicyArnList'
                UserAuthorizationRequired:
                  $ref: '#/components/schemas/BooleanAccountPreference'
      responses:
        '200': {}
        '400':
          description: |-
            Your request input doesn't meet the constraints required by AWS Chatbot.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            We were unable to find the resource for your request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            We can’t process your request right now because of a server issue. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSlackChannelConfigurationException'
components:
  schemas:
    AccountPreferences:
      type: object
      properties:
        UserAuthorizationRequired:
          allOf:
          - $ref: '#/components/schemas/BooleanAccountPreference'
          description: Enables use of a user role requirement in your chat configuration.
        TrainingDataCollectionEnabled:
          allOf:
          - $ref: '#/components/schemas/BooleanAccountPreference'
          description: 'Turns on training data collection.


            This helps improve the AWS Chatbot experience by allowing AWS Chatbot
            to store and use your customer information, such as AWS Chatbot configurations,
            notifications, user inputs, AWS Chatbot generated responses, and interaction
            data. This data helps us to continuously improve and develop Artificial
            Intelligence (AI) technologies. Your data is not shared with any third
            parties and is protected using sophisticated controls to prevent unauthorized
            access and misuse. AWS Chatbot does not store or use interactions in chat
            channels with Amazon Q for training AI technologies for AWS Chatbot.'
      description: Preferences related to AWS Chatbot usage in the calling AWS account.
    AmazonResourceName:
      type: string
      pattern: ^arn:aws:(wheatley|chatbot):[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$
      minLength: 1
      maxLength: 1011
    Arn:
      type: string
      pattern: ^arn:aws:[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$
      minLength: 12
      maxLength: 1224
    AssociateToConfigurationRequest:
      type: object
      properties:
        Resource:
          allOf:
          - $ref: '#/components/schemas/ResourceIdentifier'
          description: The resource Amazon Resource Name (ARN) to link.
        ChatConfiguration:
          allOf:
          - $ref: '#/components/schemas/ChatConfigurationArn'
          description: The channel configuration to associate with the resource.
      required:
      - Resource
      - ChatConfiguration
    AssociateToConfigurationResult:
      type: object
      properties: {}
    AssociationList:
      type: array
      items:
        $ref: '#/components/schemas/AssociationListing'
    AssociationListing:
      type: object
      properties:
        Resource:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource (for example,
            a custom action).
      required:
      - Resource
      description: A listing of an association with a channel configuration.
    AwsUserIdentity:
      type: string
      pattern: ^arn:aws:(iam|sts)::[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$
      minLength: 15
      maxLength: 1101
    BooleanAccountPreference:
      type: boolean
    ChatConfigurationArn:
      type: string
      pattern: ^arn:aws:(wheatley|chatbot):[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$
      minLength: 19
      maxLength: 1169
    ChimeWebhookConfiguration:
      type: object
      properties:
        WebhookDescription:
          allOf:
          - $ref: '#/components/schemas/ChimeWebhookDescription'
          description: 'A description of the webhook. We recommend using the convention
            `RoomName/WebhookName`.


            For more information, see [Tutorial: Get started with Amazon Chime](https://docs.aws.amazon.com/chatbot/latest/adminguide/chime-setup.html)
            in the _AWS Chatbot Administrator Guide_.'
        ChatConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/ChatConfigurationArn'
          description: The Amazon Resource Name (ARN) of the ChimeWebhookConfiguration.
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'A user-defined role that AWS Chatbot assumes. This is not
            the service-linked role.


            For more information, see [IAM policies for AWS Chatbot](https://docs.aws.amazon.com/chatbot/latest/adminguide/chatbot-iam-policies.html)
            in the _AWS Chatbot Administrator Guide_.'
        SnsTopicArns:
          allOf:
          - $ref: '#/components/schemas/SnsTopicArnList'
          description: The Amazon Resource Names (ARNs) of the SNS topics that deliver
            notifications to AWS Chatbot.
        ConfigurationName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationName'
          description: The name of the configuration.
        LoggingLevel:
          allOf:
          - $ref: '#/components/schemas/CustomerCwLogLevel'
          description: Logging levels include `ERROR`, `INFO`, or `NONE`.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A map of tags assigned to a resource. A tag is a string-to-string
            map of key-value pairs.
        State:
          allOf:
          - $ref: '#/components/schemas/ResourceState'
          description: Either `ENABLED` or `DISABLED`. The resource returns `DISABLED`
            if the organization's AWS Chatbot policy has explicitly denied that configuration.
            For example, if Amazon Chime is disabled.
        StateReason:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Provided if State is `DISABLED`. Provides context as to why
            the resource is disabled.
      required:
      - WebhookDescription
      - ChatConfigurationArn
      - IamRoleArn
      - SnsTopicArns
      description: An AWS Chatbot configuration for Amazon Chime.
    ChimeWebhookConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/ChimeWebhookConfiguration'
    ChimeWebhookDescription:
      type: string
      minLength: 1
      maxLength: 255
    ChimeWebhookUrl:
      type: string
      pattern: ^https://hooks\.chime\.aws/incomingwebhooks/[A-Za-z0-9\-]+?\?token=[A-Za-z0-9\-]+$
      minLength: 1
      maxLength: 255
    ClientToken:
      type: string
      pattern: ^[\x21-\x7F]+$
      minLength: 33
      maxLength: 126
    ConfigurationName:
      type: string
      pattern: ^[A-Za-z0-9-_]+$
      minLength: 1
      maxLength: 128
    ConfiguredTeam:
      type: object
      properties:
        TenantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The ID of the Microsoft Teams tenant.
        TeamId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: 'The ID of the Microsoft Teams authorized with AWS Chatbot.


            To get the team ID, you must perform the initial authorization flow with
            Microsoft Teams in the AWS Chatbot console. Then you can copy and paste
            the team ID from the console. For more information, see [Step 1: Configure
            a Microsoft Teams client](https://docs.aws.amazon.com/chatbot/latest/adminguide/teams-setup.html#teams-client-setup)
            in the _AWS Chatbot Administrator Guide_.'
        TeamName:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The name of the Microsoft Teams Team.
        State:
          allOf:
          - $ref: '#/components/schemas/ResourceState'
          description: Either `ENABLED` or `DISABLED`. The resource returns `DISABLED`
            if the organization's AWS Chatbot policy has explicitly denied that configuration.
            For example, if Amazon Chime is disabled.
        StateReason:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Provided if State is `DISABLED`. Provides context as to why
            the resource is disabled.
      required:
      - TenantId
      - TeamId
      description: A Microsoft Teams team that is authorized with AWS Chatbot.
    ConfiguredTeamsList:
      type: array
      items:
        $ref: '#/components/schemas/ConfiguredTeam'
    ConflictException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: There was an issue processing your request.
    CreateChimeWebhookConfigurationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: We can’t process your request right now because of a server issue.
        Try again later.
    CreateChimeWebhookConfigurationRequest:
      type: object
      properties:
        WebhookDescription:
          allOf:
          - $ref: '#/components/schemas/ChimeWebhookDescription'
          description: 'A description of the webhook. We recommend using the convention
            `RoomName/WebhookName`.


            For more information, see [Tutorial: Get started with Amazon Chime](https://docs.aws.amazon.com/chatbot/latest/adminguide/chime-setup.html)
            in the _AWS Chatbot Administrator Guide_.'
        WebhookUrl:
          allOf:
          - $ref: '#/components/schemas/ChimeWebhookUrl'
          description: The URL for the Amazon Chime webhook.
        SnsTopicArns:
          allOf:
          - $ref: '#/components/schemas/SnsTopicArnList'
          description: The Amazon Resource Names (ARNs) of the SNS topics that deliver
            notifications to AWS Chatbot.
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'A user-defined role that AWS Chatbot assumes. This is not
            the service-linked role.


            For more information, see [IAM policies for AWS Chatbot](https://docs.aws.amazon.com/chatbot/latest/adminguide/chatbot-iam-policies.html)
            in the _AWS Chatbot Administrator Guide_.'
        ConfigurationName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationName'
          description: The name of the configuration.
        LoggingLevel:
          allOf:
          - $ref: '#/components/schemas/CustomerCwLogLevel'
          description: Logging levels include `ERROR`, `INFO`, or `NONE`.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A map of tags assigned to a resource. A tag is a string-to-string
            map of key-value pairs.
      required:
      - WebhookDescription
      - WebhookUrl
      - SnsTopicArns
      - IamRoleArn
      - ConfigurationName
    CreateChimeWebhookConfigurationResult:
      type: object
      properties:
        WebhookConfiguration:
          allOf:
          - $ref: '#/components/schemas/ChimeWebhookConfiguration'
          description: An Amazon Chime webhook configuration.
    CreateCustomActionRequest:
      type: object
      properties:
        Definition:
          allOf:
          - $ref: '#/components/schemas/CustomActionDefinition'
          description: The definition of the command to run when invoked as an alias
            or as an action button.
        AliasName:
          allOf:
          - $ref: '#/components/schemas/CustomActionAliasName'
          description: The name used to invoke this action in a chat channel. For
            example, `@aws run my-alias`.
        Attachments:
          allOf:
          - $ref: '#/components/schemas/CustomActionAttachmentList'
          description: Defines when this custom action button should be attached to
            a notification.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: A map of tags assigned to a resource. A tag is a string-to-string
            map of key-value pairs.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: 'A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. Idempotency ensures that an API request
            completes only once. With an idempotent request, if the original request
            completes successfully, subsequent retries with the same client token
            returns the result from the original successful request.


            If you do not specify a client token, one is automatically generated by
            the SDK.'
        ActionName:
          allOf:
          - $ref: '#/components/schemas/CustomActionName'
          description: The name of the custom action. This name is included in the
            Amazon Resource Name (ARN).
      required:
      - Definition
      - ActionName
    CreateCustomActionResult:
      type: object
      properties:
        CustomActionArn:
          allOf:
          - $ref: '#/components/schemas/CustomActionArn'
          description: The fully defined ARN of the custom action.
      required:
      - CustomActionArn
    CreateSlackChannelConfigurationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: We can’t process your request right now because of a server issue.
        Try again later.
    CreateSlackChannelConfigurationRequest:
      type: object
      properties:
        SlackTeamId:
          allOf:
          - $ref: '#/components/schemas/SlackTeamId'
          description: The ID of the Slack workspace authorized with AWS Chatbot.
        SlackChannelId:
          allOf:
          - $ref: '#/components/schemas/SlackChannelId'
          description: 'The ID of the Slack channel.


            To get this ID, open Slack, right click on the channel name in the left
            pane, then choose Copy Link. The channel ID is the 9-character string
            at the end of the URL. For example, ABCBBLZZZ.'
        SlackChannelName:
          allOf:
          - $ref: '#/components/schemas/SlackChannelDisplayName'
          description: The name of the Slack channel.
        SnsTopicArns:
          allOf:
          - $ref: '#/components/schemas/SnsTopicArnList'
          description: The Amazon Resource Names (ARNs) of the SNS topics that deliver
            notifications to AWS Chatbot.
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'A user-defined role that AWS Chatbot assumes. This is not
            the service-linked role.


            For more information, see [IAM policies for AWS Chatbot](https://docs.aws.amazon.com/chatbot/latest/adminguide/chatbot-iam-policies.html)
            in the _AWS Chatbot Administrator Guide_.'
        ConfigurationName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationName'
          description: The name of the configuration.
        LoggingLevel:
          allOf:
          - $ref: '#/components/schemas/CustomerCwLogLevel'
          description: Logging levels include `ERROR`, `INFO`, or `NONE`.
        GuardrailPolicyArns:
          allOf:
          - $ref: '#/components/schemas/GuardrailPolicyArnList'
          description: The list of IAM policy ARNs that are applied as channel guardrails.
            The AWS managed `AdministratorAccess` policy is applied by default if
            this is not set.
        UserAuthorizationRequired:
          allOf:
          - $ref: '#/components/schemas/BooleanAccountPreference'
          description: Enables use of a user role requirement in your chat configuration.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A map of tags assigned to a resource. A tag is a string-to-string
            map of key-value pairs.
      required:
      - SlackTeamId
      - SlackChannelId
      - IamRoleArn
      - ConfigurationName
    CreateSlackChannelConfigurationResult:
      type: object
      properties:
        ChannelConfiguration:
          allOf:
          - $ref: '#/components/schemas/SlackChannelConfiguration'
          description: The configuration for a Slack channel configured with AWS Chatbot.
    CreateTeamsChannelConfigurationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: We can’t process your request right now because of a server issue.
        Try again later.
    CreateTeamsChannelConfigurationRequest:
      type: object
      properties:
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/TeamsChannelId'
          description: The ID of the Microsoft Teams channel.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/TeamsChannelName'
          description: The name of the Microsoft Teams channel.
        TeamId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: 'The ID of the Microsoft Teams authorized with AWS Chatbot.


            To get the team ID, you must perform the initial authorization flow with
            Microsoft Teams in the AWS Chatbot console. Then you can copy and paste
            the team ID from the console. For more information, see [Step 1: Configure
            a Microsoft Teams client](https://docs.aws.amazon.com/chatbot/latest/adminguide/teams-setup.html#teams-client-setup)
            in the _AWS Chatbot Administrator Guide_.'
        TeamName:
          allOf:
          - $ref: '#/components/schemas/TeamName'
          description: The name of the Microsoft Teams Team.
        TenantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The ID of the Microsoft Teams tenant.
        SnsTopicArns:
          allOf:
          - $ref: '#/components/schemas/SnsTopicArnList'
          description: The Amazon Resource Names (ARNs) of the SNS topics that deliver
            notifications to AWS Chatbot.
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'A user-defined role that AWS Chatbot assumes. This is not
            the service-linked role.


            For more information, see [IAM policies for AWS Chatbot](https://docs.aws.amazon.com/chatbot/latest/adminguide/chatbot-iam-policies.html)
            in the _AWS Chatbot Administrator Guide_.'
        ConfigurationName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationName'
          description: The name of the configuration.
        LoggingLevel:
          allOf:
          - $ref: '#/components/schemas/CustomerCwLogLevel'
          description: Logging levels include `ERROR`, `INFO`, or `NONE`.
        GuardrailPolicyArns:
          allOf:
          - $ref: '#/components/schemas/GuardrailPolicyArnList'
          description: The list of IAM policy ARNs that are applied as channel guardrails.
            The AWS managed `AdministratorAccess` policy is applied by default if
            this is not set.
        UserAuthorizationRequired:
          allOf:
          - $ref: '#/components/schemas/BooleanAccountPreference'
          description: Enables use of a user role requirement in your chat configuration.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A map of tags assigned to a resource. A tag is a string-to-string
            map of key-value pairs.
      required:
      - ChannelId
      - TeamId
      - TenantId
      - IamRoleArn
      - ConfigurationName
    CreateTeamsChannelConfigurationResult:
      type: object
      properties:
        ChannelConfiguration:
          allOf:
          - $ref: '#/components/schemas/TeamsChannelConfiguration'
          description: The configuration for a Microsoft Teams channel configured
            with AWS Chatbot.
    CustomAction:
      type: object
      properties:
        CustomActionArn:
          allOf:
          - $ref: '#/components/schemas/CustomActionArn'
          description: The fully defined Amazon Resource Name (ARN) of the custom
            action.
        Definition:
          allOf:
          - $ref: '#/components/schemas/CustomActionDefinition'
          description: The definition of the command to run when invoked an alias
            or as an action button.
        AliasName:
          allOf:
          - $ref: '#/components/schemas/CustomActionAliasName'
          description: The name used to invoke this action in the chat channel. For
            example, `@aws run my-alias`.
        Attachments:
          allOf:
          - $ref: '#/components/schemas/CustomActionAttachmentList'
          description: Defines when this custom action button should be attached to
            a notification.
        ActionName:
          allOf:
          - $ref: '#/components/schemas/CustomActionName'
          description: The name of the custom action that is included in the ARN.
      required:
      - CustomActionArn
      - Definition
      description: Represents a parameterized command that can be invoked as an alias
        or as a notification button in the chat client.
    CustomActionAliasName:
      type: string
      pattern: ^[A-Za-z0-9-_]+$
      minLength: 1
      maxLength: 30
    CustomActionArn:
      type: string
      pattern: ^arn:aws:chatbot:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9_/.-]{0,63}:custom-action/[a-zA-Z0-9_-]{1,64}$
      minLength: 1
      maxLength: 1011
    CustomActionArnList:
      type: array
      items:
        $ref: '#/components/schemas/CustomActionArn'
    CustomActionAttachment:
      type: object
      properties:
        NotificationType:
          allOf:
          - $ref: '#/components/schemas/CustomActionAttachmentNotificationType'
          description: The type of notification that the custom action should be attached
            to.
        ButtonText:
          allOf:
          - $ref: '#/components/schemas/CustomActionButtonText'
          description: The text of the button that appears on the notification.
        Criteria:
          allOf:
          - $ref: '#/components/schemas/CustomActionAttachmentCriteriaList'
          description: The criteria for when a button should be shown based on values
            in the notification.
        Variables:
          allOf:
          - $ref: '#/components/schemas/CustomActionAttachmentVariables'
          description: The variables to extract from the notification.
      description: Defines when a custom action button should be attached to a notification.
    CustomActionAttachmentCriteria:
      type: object
      properties:
        Operator:
          allOf:
          - $ref: '#/components/schemas/CustomActionAttachmentCriteriaOperator'
          description: The operation to perform on the named variable.
        VariableName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the variable to operate on.
        Value:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A value that is compared with the actual value of the variable
            based on the behavior of the operator.
      required:
      - Operator
      - VariableName
      description: A criteria for when a button should be shown based on values in
        the notification
    CustomActionAttachmentCriteriaList:
      type: array
      items:
        $ref: '#/components/schemas/CustomActionAttachmentCriteria'
    CustomActionAttachmentCriteriaOperator:
      type: string
      enum:
      - HAS_VALUE
      - EQUALS
    CustomActionAttachmentList:
      type: array
      items:
        $ref: '#/components/schemas/CustomActionAttachment'
    CustomActionAttachmentNotificationType:
      type: string
      pattern: ^[a-zA-Z0-9-]+$
      minLength: 1
      maxLength: 100
    CustomActionAttachmentVariables:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    CustomActionButtonText:
      type: string
      pattern: ^[\S\s]+$
      minLength: 1
      maxLength: 50
    CustomActionDefinition:
      type: object
      properties:
        CommandText:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The command string to run which may include variables by prefixing
            with a dollar sign ($).
      required:
      - CommandText
      description: The definition of the command to run when invoked as an alias or
        as an action button.
    CustomActionName:
      type: string
      pattern: ^[a-zA-Z0-9_-]{1,64}$
      minLength: 1
      maxLength: 64
    CustomerCwLogLevel:
      type: string
      pattern: ^(ERROR|INFO|NONE)$
      minLength: 4
      maxLength: 5
    DeleteChimeWebhookConfigurationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: We can’t process your request right now because of a server issue.
        Try again later.
    DeleteChimeWebhookConfigurationRequest:
      type: object
      properties:
        ChatConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/ChatConfigurationArn'
          description: The Amazon Resource Name (ARN) of the ChimeWebhookConfiguration
            to delete.
      required:
      - ChatConfigurationArn
    DeleteChimeWebhookConfigurationResult:
      type: object
      properties: {}
    DeleteCustomActionRequest:
      type: object
      properties:
        CustomActionArn:
          allOf:
          - $ref: '#/components/schemas/CustomActionArn'
          description: The fully defined ARN of the custom action.
      required:
      - CustomActionArn
    DeleteCustomActionResult:
      type: object
      properties: {}
    DeleteMicrosoftTeamsUserIdentityException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: We can’t process your request right now because of a server issue.
        Try again later.
    DeleteMicrosoftTeamsUserIdentityRequest:
      type: object
      properties:
        ChatConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/ChatConfigurationArn'
          description: The ARN of the MicrosoftTeamsChannelConfiguration associated
            with the user identity to delete.
        UserId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The Microsoft Teams user ID.
      required:
      - ChatConfigurationArn
      - UserId
    DeleteMicrosoftTeamsUserIdentityResult:
      type: object
      properties: {}
    DeleteSlackChannelConfigurationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: We can’t process your request right now because of a server issue.
        Try again later.
    DeleteSlackChannelConfigurationRequest:
      type: object
      properties:
        ChatConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/ChatConfigurationArn'
          description: The Amazon Resource Name (ARN) of the SlackChannelConfiguration
            to delete.
      required:
      - ChatConfigurationArn
    DeleteSlackChannelConfigurationResult:
      type: object
      properties: {}
    DeleteSlackUserIdentityException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: We can’t process your request right now because of a server issue.
        Try again later.
    DeleteSlackUserIdentityRequest:
      type: object
      properties:
        ChatConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/ChatConfigurationArn'
          description: The ARN of the SlackChannelConfiguration associated with the
            user identity to delete.
        SlackTeamId:
          allOf:
          - $ref: '#/components/schemas/SlackTeamId'
          description: The ID of the Slack workspace authorized with AWS Chatbot.
        SlackUserId:
          allOf:
          - $ref: '#/components/schemas/SlackUserId'
          description: The ID of the user in Slack
      required:
      - ChatConfigurationArn
      - SlackTeamId
      - SlackUserId
    DeleteSlackUserIdentityResult:
      type: object
      properties: {}
    DeleteSlackWorkspaceAuthorizationFault:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: There was an issue deleting your Slack workspace.
    DeleteSlackWorkspaceAuthorizationRequest:
      type: object
      properties:
        SlackTeamId:
          allOf:
          - $ref: '#/components/schemas/SlackTeamId'
          description: The ID of the Slack workspace authorized with AWS Chatbot.
      required:
      - SlackTeamId
    DeleteSlackWorkspaceAuthorizationResult:
      type: object
      properties: {}
    DeleteTeamsChannelConfigurationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: We can’t process your request right now because of a server issue.
        Try again later.
    DeleteTeamsChannelConfigurationRequest:
      type: object
      properties:
        ChatConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/ChatConfigurationArn'
          description: The Amazon Resource Name (ARN) of the MicrosoftTeamsChannelConfiguration
            associated with the user identity to delete.
      required:
      - ChatConfigurationArn
    DeleteTeamsChannelConfigurationResult:
      type: object
      properties: {}
    DeleteTeamsConfiguredTeamException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: We can’t process your request right now because of a server issue.
        Try again later.
    DeleteTeamsConfiguredTeamRequest:
      type: object
      properties:
        TeamId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: 'The ID of the Microsoft Teams team authorized with AWS Chatbot.


            To get the team ID, you must perform the initial authorization flow with
            Microsoft Teams in the AWS Chatbot console. Then you can copy and paste
            the team ID from the console. For more information, see [Step 1: Configure
            a Microsoft Teams client](https://docs.aws.amazon.com/chatbot/latest/adminguide/teams-setup.html#teams-client-setup)
            in the _AWS Chatbot Administrator Guide_.'
      required:
      - TeamId
    DeleteTeamsConfiguredTeamResult:
      type: object
      properties: {}
    DescribeChimeWebhookConfigurationsException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: We can’t process your request right now because of a server issue.
        Try again later.
    DescribeChimeWebhookConfigurationsRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to include in the response. If
            more results exist than the specified MaxResults value, a token is included
            in the response so that the remaining results can be retrieved.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: An optional token returned from a prior request. Use this token
            for pagination of results from this action. If this parameter is specified,
            the response includes only results beyond the token, up to the value specified
            by MaxResults.
        ChatConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/ChatConfigurationArn'
          description: An optional Amazon Resource Name (ARN) of a ChimeWebhookConfiguration
            to describe.
    DescribeChimeWebhookConfigurationsResult:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: An optional token returned from a prior request. Use this token
            for pagination of results from this action. If this parameter is specified,
            the response includes only results beyond the token, up to the value specified
            by MaxResults.
        WebhookConfigurations:
          allOf:
          - $ref: '#/components/schemas/ChimeWebhookConfigurationList'
          description: A list of Amazon Chime webhooks associated with the account.
    DescribeSlackChannelConfigurationsException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: We can’t process your request right now because of a server issue.
        Try again later.
    DescribeSlackChannelConfigurationsRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to include in the response. If
            more results exist than the specified MaxResults value, a token is included
            in the response so that the remaining results can be retrieved.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: An optional token returned from a prior request. Use this token
            for pagination of results from this action. If this parameter is specified,
            the response includes only results beyond the token, up to the value specified
            by MaxResults.
        ChatConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/ChatConfigurationArn'
          description: An optional Amazon Resource Name (ARN) of a SlackChannelConfiguration
            to describe.
    DescribeSlackChannelConfigurationsResult:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: An optional token returned from a prior request. Use this token
            for pagination of results from this action. If this parameter is specified,
            the response includes only results beyond the token, up to the value specified
            by MaxResults.
        SlackChannelConfigurations:
          allOf:
          - $ref: '#/components/schemas/SlackChannelConfigurationList'
          description: A list of Slack channel configurations.
    DescribeSlackUserIdentitiesException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: We can’t process your request right now because of a server issue.
        Try again later.
    DescribeSlackUserIdentitiesRequest:
      type: object
      properties:
        ChatConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/ChatConfigurationArn'
          description: The Amazon Resource Name (ARN) of the SlackChannelConfiguration
            associated with the user identities to describe.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: An optional token returned from a prior request. Use this token
            for pagination of results from this action. If this parameter is specified,
            the response includes only results beyond the token, up to the value specified
            by MaxResults.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to include in the response. If
            more results exist than the specified MaxResults value, a token is included
            in the response so that the remaining results can be retrieved.
    DescribeSlackUserIdentitiesResult:
      type: object
      properties:
        SlackUserIdentities:
          allOf:
          - $ref: '#/components/schemas/SlackUserIdentitiesList'
          description: A list of Slack User Identities.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: An optional token returned from a prior request. Use this token
            for pagination of results from this action. If this parameter is specified,
            the response includes only results beyond the token, up to the value specified
            by MaxResults.
    DescribeSlackWorkspacesException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: We can’t process your request right now because of a server issue.
        Try again later.
    DescribeSlackWorkspacesRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to include in the response. If
            more results exist than the specified MaxResults value, a token is included
            in the response so that the remaining results can be retrieved.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: An optional token returned from a prior request. Use this token
            for pagination of results from this action. If this parameter is specified,
            the response includes only results beyond the token, up to the value specified
            by MaxResults.
    DescribeSlackWorkspacesResult:
      type: object
      properties:
        SlackWorkspaces:
          allOf:
          - $ref: '#/components/schemas/SlackWorkspacesList'
          description: A list of Slack workspaces registered with AWS Chatbot.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: An optional token returned from a prior request. Use this token
            for pagination of results from this action. If this parameter is specified,
            the response includes only results beyond the token, up to the value specified
            by MaxResults.
    DisassociateFromConfigurationRequest:
      type: object
      properties:
        Resource:
          allOf:
          - $ref: '#/components/schemas/ResourceIdentifier'
          description: The resource (for example, a custom action) Amazon Resource
            Name (ARN) to unlink.
        ChatConfiguration:
          allOf:
          - $ref: '#/components/schemas/ChatConfigurationArn'
          description: The channel configuration the resource is being disassociated
            from.
      required:
      - Resource
      - ChatConfiguration
    DisassociateFromConfigurationResult:
      type: object
      properties: {}
    ErrorMessage:
      type: string
    GetAccountPreferencesException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: We can’t process your request right now because of a server issue.
        Try again later.
    GetAccountPreferencesRequest:
      type: object
      properties: {}
    GetAccountPreferencesResult:
      type: object
      properties:
        AccountPreferences:
          allOf:
          - $ref: '#/components/schemas/AccountPreferences'
          description: The preferences related to AWS Chatbot usage in the calling
            AWS account.
    GetCustomActionRequest:
      type: object
      properties:
        CustomActionArn:
          allOf:
          - $ref: '#/components/schemas/CustomActionArn'
          description: Returns the fully defined Amazon Resource Name (ARN) of the
            custom action.
      required:
      - CustomActionArn
    GetCustomActionResult:
      type: object
      properties:
        CustomAction:
          allOf:
          - $ref: '#/components/schemas/CustomAction'
          description: Returns the custom action.
    GetTeamsChannelConfigurationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: We can’t process your request right now because of a server issue.
        Try again later.
    GetTeamsChannelConfigurationRequest:
      type: object
      properties:
        ChatConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/ChatConfigurationArn'
          description: The Amazon Resource Name (ARN) of the MicrosoftTeamsChannelConfiguration
            to retrieve.
      required:
      - ChatConfigurationArn
    GetTeamsChannelConfigurationResult:
      type: object
      properties:
        ChannelConfiguration:
          allOf:
          - $ref: '#/components/schemas/TeamsChannelConfiguration'
          description: The configuration for a Microsoft Teams channel configured
            with AWS Chatbot.
    GuardrailPolicyArn:
      type: string
      pattern: ^(^$|(?!.*\/aws-service-role\/.*)arn:aws:iam:[A-Za-z0-9_\/.-]{0,63}:[A-Za-z0-9_\/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_\/+=,@.-]{0,1023})$
      minLength: 11
      maxLength: 1163
    GuardrailPolicyArnList:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailPolicyArn'
    InternalServiceError:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Unexpected error during processing of request.
    InvalidParameterException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Your request input doesn't meet the constraints required by AWS
        Chatbot.
    InvalidRequestException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Your request input doesn't meet the constraints required by AWS
        Chatbot.
    LimitExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: You have exceeded a service limit for AWS Chatbot.
    ListAssociationsRequest:
      type: object
      properties:
        ChatConfiguration:
          allOf:
          - $ref: '#/components/schemas/ChatConfigurationArn'
          description: The channel configuration to list associations for.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of results to include in the response. If
            more results exist than the specified MaxResults value, a token is included
            in the response so that the remaining results can be retrieved.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: An optional token returned from a prior request. Use this token
            for pagination of results from this action. If this parameter is specified,
            the response includes only results beyond the token, up to the value specified
            by MaxResults.
      required:
      - ChatConfiguration
    ListAssociationsResult:
      type: object
      properties:
        Associations:
          allOf:
          - $ref: '#/components/schemas/AssociationList'
          description: The resources associated with this channel configuration.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: An optional token returned from a prior request. Use this token
            for pagination of results from this action. If this parameter is specified,
            the response includes only results beyond the token, up to the value specified
            by MaxResults.
      required:
      - Associations
    ListCustomActionsRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of results to include in the response. If
            more results exist than the specified MaxResults value, a token is included
            in the response so that the remaining results can be retrieved.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: An optional token returned from a prior request. Use this token
            for pagination of results from this action. If this parameter is specified,
            the response includes only results beyond the token, up to the value specified
            by MaxResults.
    ListCustomActionsResult:
      type: object
      properties:
        CustomActions:
          allOf:
          - $ref: '#/components/schemas/CustomActionArnList'
          description: A list of custom actions.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: An optional token returned from a prior request. Use this token
            for pagination of results from this action. If this parameter is specified,
            the response includes only results beyond the token, up to the value specified
            by MaxResults.
      required:
      - CustomActions
    ListMicrosoftTeamsConfiguredTeamsException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: We can’t process your request right now because of a server issue.
        Try again later.
    ListMicrosoftTeamsConfiguredTeamsRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to include in the response. If
            more results exist than the specified MaxResults value, a token is included
            in the response so that the remaining results can be retrieved.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: An optional token returned from a prior request. Use this token
            for pagination of results from this action. If this parameter is specified,
            the response includes only results beyond the token, up to the value specified
            by MaxResults.
    ListMicrosoftTeamsConfiguredTeamsResult:
      type: object
      properties:
        ConfiguredTeams:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTeamsList'
          description: A list of teams in Microsoft Teams that are configured with
            AWS Chatbot.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: An optional token returned from a prior request. Use this token
            for pagination of results from this action. If this parameter is specified,
            the response includes only results beyond the token, up to the value specified
            by MaxResults.
    ListMicrosoftTeamsUserIdentitiesException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: We can’t process your request right now because of a server issue.
        Try again later.
    ListMicrosoftTeamsUserIdentitiesRequest:
      type: object
      properties:
        ChatConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/ChatConfigurationArn'
          description: The Amazon Resource Name (ARN) of the MicrosoftTeamsChannelConfiguration
            associated with the user identities to list.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: An optional token returned from a prior request. Use this token
            for pagination of results from this action. If this parameter is specified,
            the response includes only results beyond the token, up to the value specified
            by MaxResults.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to include in the response. If
            more results exist than the specified MaxResults value, a token is included
            in the response so that the remaining results can be retrieved.
    ListMicrosoftTeamsUserIdentitiesResult:
      type: object
      properties:
        TeamsUserIdentities:
          allOf:
          - $ref: '#/components/schemas/TeamsUserIdentitiesList'
          description: User level permissions associated to a channel configuration.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: An optional token returned from a prior request. Use this token
            for pagination of results from this action. If this parameter is specified,
            the response includes only results beyond the token, up to the value specified
            by MaxResults.
    ListTagsForResourceRequest:
      type: object
      properties:
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          description: The ARN of the resource to list tags for.
      required:
      - ResourceARN
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: Key-value pairs that are assigned to a resource, usually for
            the purpose of grouping and searching for items. Tags are metadata that
            you define.
    ListTeamsChannelConfigurationsException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: We can’t process your request right now because of a server issue.
        Try again later.
    ListTeamsChannelConfigurationsRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to include in the response. If
            more results exist than the specified MaxResults value, a token is included
            in the response so that the remaining results can be retrieved.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: An optional token returned from a prior request. Use this token
            for pagination of results from this action. If this parameter is specified,
            the response includes only results beyond the token, up to the value specified
            by MaxResults.
        TeamId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: 'The ID of the Microsoft Teams authorized with AWS Chatbot.


            To get the team ID, you must perform the initial authorization flow with
            Microsoft Teams in the AWS Chatbot console. Then you can copy and paste
            the team ID from the console. For more information, see [Step 1: Configure
            a Microsoft Teams client](https://docs.aws.amazon.com/chatbot/latest/adminguide/teams-setup.html#teams-client-setup)
            in the _AWS Chatbot Administrator Guide_.'
    ListTeamsChannelConfigurationsResult:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: An optional token returned from a prior request. Use this token
            for pagination of results from this action. If this parameter is specified,
            the response includes only results beyond the token, up to the value specified
            by MaxResults.
        TeamChannelConfigurations:
          allOf:
          - $ref: '#/components/schemas/TeamChannelConfigurationsList'
          description: A list of AWS Chatbot channel configurations for Microsoft
            Teams.
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    PaginationToken:
      type: string
      pattern: ^[a-zA-Z0-9=\/+_.\-,#:\\"{}]{4,1276}$
      minLength: 1
      maxLength: 1276
    ResourceIdentifier:
      type: string
      pattern: ^arn:aws:chatbot:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9_/.-]{0,63}:custom-action/[a-zA-Z0-9_-]{1,64}$
      minLength: 1
      maxLength: 1011
    ResourceNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: We were unable to find the resource for your request
    ResourceState:
      type: string
      pattern: ^(ENABLED|DISABLED)$
    ServiceUnavailableException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: We can’t process your request right now because of a server issue.
        Try again later.
    SlackChannelConfiguration:
      type: object
      properties:
        SlackTeamName:
          allOf:
          - $ref: '#/components/schemas/SlackTeamName'
          description: Name of the Slack workspace.
        SlackTeamId:
          allOf:
          - $ref: '#/components/schemas/SlackTeamId'
          description: The ID of the Slack workspace authorized with Amazon Chime.
        SlackChannelId:
          allOf:
          - $ref: '#/components/schemas/SlackChannelId'
          description: 'The ID of the Slack channel.


            To get this ID, open Slack, right click on the channel name in the left
            pane, then choose Copy Link. The channel ID is the 9-character string
            at the end of the URL. For example, ABCBBLZZZ.'
        SlackChannelName:
          allOf:
          - $ref: '#/components/schemas/SlackChannelDisplayName'
          description: The name of the Slack channel.
        ChatConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/ChatConfigurationArn'
          description: The Amazon Resource Name (ARN) of the SlackChannelConfiguration.
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'A user-defined role that AWS Chatbot assumes. This is not
            the service-linked role.


            For more information, see [IAM policies for AWS Chatbot](https://docs.aws.amazon.com/chatbot/latest/adminguide/chatbot-iam-policies.html)
            in the _AWS Chatbot Administrator Guide_.'
        SnsTopicArns:
          allOf:
          - $ref: '#/components/schemas/SnsTopicArnList'
          description: The ARNs of the SNS topics that deliver notifications to AWS
            Chatbot.
        ConfigurationName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationName'
          description: The name of the configuration.
        LoggingLevel:
          allOf:
          - $ref: '#/components/schemas/CustomerCwLogLevel'
          description: Logging levels include `ERROR`, `INFO`, or `NONE`.
        GuardrailPolicyArns:
          allOf:
          - $ref: '#/components/schemas/GuardrailPolicyArnList'
          description: The list of IAM policy ARNs that are applied as channel guardrails.
            The AWS managed `AdministratorAccess` policy is applied by default if
            this is not set.
        UserAuthorizationRequired:
          allOf:
          - $ref: '#/components/schemas/BooleanAccountPreference'
          description: Enables use of a user role requirement in your chat configuration.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A map of tags assigned to a resource. A tag is a string-to-string
            map of key-value pairs.
        State:
          allOf:
          - $ref: '#/components/schemas/ResourceState'
          description: Either `ENABLED` or `DISABLED`. The resource returns `DISABLED`
            if the organization's AWS Chatbot policy has explicitly denied that configuration.
            For example, if Amazon Chime is disabled.
        StateReason:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Provided if State is `DISABLED`. Provides context as to why
            the resource is disabled.
      required:
      - SlackTeamName
      - SlackTeamId
      - SlackChannelId
      - SlackChannelName
      - ChatConfigurationArn
      - IamRoleArn
      - SnsTopicArns
      description: An AWS Chatbot configuration for Slack.
    SlackChannelConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/SlackChannelConfiguration'
    SlackChannelDisplayName:
      type: string
      minLength: 1
      maxLength: 255
    SlackChannelId:
      type: string
      pattern: ^[A-Za-z0-9]+$
      minLength: 1
      maxLength: 255
    SlackTeamId:
      type: string
      pattern: ^[0-9A-Z]{1,255}$
      minLength: 1
      maxLength: 255
    SlackTeamName:
      type: string
      minLength: 1
      maxLength: 255
    SlackUserId:
      type: string
      pattern: ^(.*)$
      minLength: 1
      maxLength: 255
    SlackUserIdentitiesList:
      type: array
      items:
        $ref: '#/components/schemas/SlackUserIdentity'
    SlackUserIdentity:
      type: object
      properties:
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'A user-defined role that AWS Chatbot assumes. This is not
            the service-linked role.


            For more information, see [IAM policies for AWS Chatbot](https://docs.aws.amazon.com/chatbot/latest/adminguide/chatbot-iam-policies.html)
            in the _AWS Chatbot Administrator Guide_.'
        ChatConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/ChatConfigurationArn'
          description: The Amazon Resource Name (ARN) of the SlackChannelConfiguration
            associated with the user identity to delete.
        SlackTeamId:
          allOf:
          - $ref: '#/components/schemas/SlackTeamId'
          description: The ID of the Slack workspace authorized with AWS Chatbot.
        SlackUserId:
          allOf:
          - $ref: '#/components/schemas/SlackUserId'
          description: The ID of the user in Slack
        AwsUserIdentity:
          allOf:
          - $ref: '#/components/schemas/AwsUserIdentity'
          description: The AWS user identity ARN used to associate a Slack user ID
            with an IAM Role.
      required:
      - IamRoleArn
      - ChatConfigurationArn
      - SlackTeamId
      - SlackUserId
      description: Identifes a user level permission for a channel configuration.
    SlackWorkspace:
      type: object
      properties:
        SlackTeamId:
          allOf:
          - $ref: '#/components/schemas/SlackTeamId'
          description: The ID of the Slack workspace authorized with AWS Chatbot.
        SlackTeamName:
          allOf:
          - $ref: '#/components/schemas/SlackTeamName'
          description: The name of the Slack workspace.
        State:
          allOf:
          - $ref: '#/components/schemas/ResourceState'
          description: Either `ENABLED` or `DISABLED`. The resource returns `DISABLED`
            if the organization's AWS Chatbot policy has explicitly denied that configuration.
            For example, if Amazon Chime is disabled.
        StateReason:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Provided if State is `DISABLED`. Provides context as to why
            the resource is disabled.
      required:
      - SlackTeamId
      - SlackTeamName
      description: A Slack workspace.
    SlackWorkspacesList:
      type: array
      items:
        $ref: '#/components/schemas/SlackWorkspace'
    SnsTopicArnList:
      type: array
      items:
        $ref: '#/components/schemas/Arn'
    String:
      type: string
    Tag:
      type: object
      properties:
        TagKey:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          description: The key of the tag.
        TagValue:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          description: The value of the tag.
      required:
      - TagKey
      - TagValue
      description: 'A key-value pair. A tag consists of a tag key and a tag value.
        Tag keys and tag values are both required, but tag values can be empty (null)
        strings.


        Do not include confidential or sensitive information in this field.


        For more information, see [User-Defined Tag Restrictions](https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/allocation-tag-restrictions.html)
        in the _AWS Billing and Cost Management User Guide_.'
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    TagResourceRequest:
      type: object
      properties:
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          description: The ARN of the configuration.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: A list of tags to apply to the configuration.
      required:
      - ResourceARN
      - Tags
    TagResourceResponse:
      type: object
      properties: {}
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    Tags:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    TeamChannelConfigurationsList:
      type: array
      items:
        $ref: '#/components/schemas/TeamsChannelConfiguration'
    TeamName:
      type: string
      pattern: ^(.*)$
      minLength: 1
      maxLength: 255
    TeamsChannelConfiguration:
      type: object
      properties:
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/TeamsChannelId'
          description: The ID of the Microsoft Teams channel.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/TeamsChannelName'
          description: The name of the Microsoft Teams channel.
        TeamId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: 'The ID of the Microsoft Teams authorized with AWS Chatbot.


            To get the team ID, you must perform the initial authorization flow with
            Microsoft Teams in the AWS Chatbot console. Then you can copy and paste
            the team ID from the console. For more information, see [Step 1: Configure
            a Microsoft Teams client](https://docs.aws.amazon.com/chatbot/latest/adminguide/teams-setup.html#teams-client-setup)
            in the _AWS Chatbot Administrator Guide_.'
        TeamName:
          allOf:
          - $ref: '#/components/schemas/TeamName'
          description: The name of the Microsoft Teams Team.
        TenantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The ID of the Microsoft Teams tenant.
        ChatConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/ChatConfigurationArn'
          description: The Amazon Resource Name (ARN) of the MicrosoftTeamsChannelConfiguration
            associated with the user identity to delete.
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'A user-defined role that AWS Chatbot assumes. This is not
            the service-linked role.


            For more information, see [IAM policies for AWS Chatbot](https://docs.aws.amazon.com/chatbot/latest/adminguide/chatbot-iam-policies.html)
            in the _AWS Chatbot Administrator Guide_.'
        SnsTopicArns:
          allOf:
          - $ref: '#/components/schemas/SnsTopicArnList'
          description: The Amazon Resource Names (ARNs) of the SNS topics that deliver
            notifications to AWS Chatbot.
        ConfigurationName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationName'
          description: The name of the configuration.
        LoggingLevel:
          allOf:
          - $ref: '#/components/schemas/CustomerCwLogLevel'
          description: Logging levels include `ERROR`, `INFO`, or `NONE`.
        GuardrailPolicyArns:
          allOf:
          - $ref: '#/components/schemas/GuardrailPolicyArnList'
          description: The list of IAM policy ARNs that are applied as channel guardrails.
            The AWS managed `AdministratorAccess` policy is applied by default if
            this is not set.
        UserAuthorizationRequired:
          allOf:
          - $ref: '#/components/schemas/BooleanAccountPreference'
          description: Enables use of a user role requirement in your chat configuration.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A map of tags assigned to a resource. A tag is a string-to-string
            map of key-value pairs.
        State:
          allOf:
          - $ref: '#/components/schemas/ResourceState'
          description: Either `ENABLED` or `DISABLED`. The resource returns `DISABLED`
            if the organization's AWS Chatbot policy has explicitly denied that configuration.
            For example, if Amazon Chime is disabled.
        StateReason:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Provided if State is `DISABLED`. Provides context as to why
            the resource is disabled.
      required:
      - ChannelId
      - TeamId
      - TenantId
      - ChatConfigurationArn
      - IamRoleArn
      - SnsTopicArns
      description: An AWS Chatbot configuration for Microsoft Teams.
    TeamsChannelId:
      type: string
      pattern: ^([a-zA-Z0-9-_=+\/.,])*%3[aA]([a-zA-Z0-9-_=+\/.,])*%40([a-zA-Z0-9-_=+\/.,])*$
      minLength: 1
      maxLength: 255
    TeamsChannelName:
      type: string
      pattern: ^(.*)$
      minLength: 1
      maxLength: 1000
    TeamsUserIdentitiesList:
      type: array
      items:
        $ref: '#/components/schemas/TeamsUserIdentity'
    TeamsUserIdentity:
      type: object
      properties:
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'A user-defined role that AWS Chatbot assumes. This is not
            the service-linked role.


            For more information, see [IAM policies for AWS Chatbot](https://docs.aws.amazon.com/chatbot/latest/adminguide/chatbot-iam-policies.html)
            in the _AWS Chatbot Administrator Guide_.'
        ChatConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/ChatConfigurationArn'
          description: The Amazon Resource Name (ARN) of the MicrosoftTeamsChannelConfiguration
            associated with the user identity to delete.
        TeamId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: 'The ID of the Microsoft Teams authorized with AWS Chatbot.


            To get the team ID, you must perform the initial authorization flow with
            Microsoft Teams in the AWS Chatbot console. Then you can copy and paste
            the team ID from the console. For more information, see [Step 1: Configure
            a Microsoft Teams client](https://docs.aws.amazon.com/chatbot/latest/adminguide/teams-setup.html#teams-client-setup)
            in the _AWS Chatbot Administrator Guide_.'
        UserId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The Microsoft Teams user ID.
        AwsUserIdentity:
          allOf:
          - $ref: '#/components/schemas/AwsUserIdentity'
          description: The AWS user identity ARN used to associate a Microsoft Teams
            user Identity with an IAM Role.
        TeamsChannelId:
          allOf:
          - $ref: '#/components/schemas/TeamsChannelId'
          description: The ID of the Microsoft Teams channel.
        TeamsTenantId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The ID of the Microsoft Teams tenant.
      required:
      - IamRoleArn
      - ChatConfigurationArn
      - TeamId
      description: Identifes a user level permission for a channel configuration.
    TooManyTagsException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The supplied list of tags contains too many tags.
    UUID:
      type: string
      pattern: ^[0-9A-Fa-f]{8}(?:-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$
      minLength: 36
      maxLength: 36
    UnauthorizedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The request was rejected because it doesn't have valid credentials
        for the target resource.
    UntagResourceRequest:
      type: object
      properties:
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          description: The value of the resource that will have the tag removed. An
            Amazon Resource Name (ARN) is an identifier for a specific AWS resource,
            such as a server, user, or role.
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: TagKeys are key-value pairs assigned to ARNs that can be used
            to group and search for resources by type. This metadata can be attached
            to resources for any purpose.
      required:
      - ResourceARN
      - TagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateAccountPreferencesException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: We can’t process your request right now because of a server issue.
        Try again later.
    UpdateAccountPreferencesRequest:
      type: object
      properties:
        UserAuthorizationRequired:
          allOf:
          - $ref: '#/components/schemas/BooleanAccountPreference'
          description: Enables use of a user role requirement in your chat configuration.
        TrainingDataCollectionEnabled:
          allOf:
          - $ref: '#/components/schemas/BooleanAccountPreference'
          description: 'Turns on training data collection.


            This helps improve the AWS Chatbot experience by allowing AWS Chatbot
            to store and use your customer information, such as AWS Chatbot configurations,
            notifications, user inputs, AWS Chatbot generated responses, and interaction
            data. This data helps us to continuously improve and develop Artificial
            Intelligence (AI) technologies. Your data is not shared with any third
            parties and is protected using sophisticated controls to prevent unauthorized
            access and misuse. AWS Chatbot does not store or use interactions in chat
            channels with Amazon Q for training AI technologies for AWS Chatbot.'
    UpdateAccountPreferencesResult:
      type: object
      properties:
        AccountPreferences:
          allOf:
          - $ref: '#/components/schemas/AccountPreferences'
          description: Preferences related to AWS Chatbot usage in the calling AWS
            account.
    UpdateChimeWebhookConfigurationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: We can’t process your request right now because of a server issue.
        Try again later.
    UpdateChimeWebhookConfigurationRequest:
      type: object
      properties:
        ChatConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/ChatConfigurationArn'
          description: The Amazon Resource Name (ARN) of the ChimeWebhookConfiguration
            to update.
        WebhookDescription:
          allOf:
          - $ref: '#/components/schemas/ChimeWebhookDescription'
          description: 'A description of the webhook. We recommend using the convention
            `RoomName/WebhookName`.


            For more information, see [Tutorial: Get started with Amazon Chime](https://docs.aws.amazon.com/chatbot/latest/adminguide/chime-setup.html)
            in the _AWS Chatbot Administrator Guide_.'
        WebhookUrl:
          allOf:
          - $ref: '#/components/schemas/ChimeWebhookUrl'
          description: The URL for the Amazon Chime webhook.
        SnsTopicArns:
          allOf:
          - $ref: '#/components/schemas/SnsTopicArnList'
          description: The ARNs of the SNS topics that deliver notifications to AWS
            Chatbot.
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'A user-defined role that AWS Chatbot assumes. This is not
            the service-linked role.


            For more information, see [IAM policies for AWS Chatbot](https://docs.aws.amazon.com/chatbot/latest/adminguide/chatbot-iam-policies.html)
            in the _AWS Chatbot Administrator Guide_.'
        LoggingLevel:
          allOf:
          - $ref: '#/components/schemas/CustomerCwLogLevel'
          description: Logging levels include `ERROR`, `INFO`, or `NONE`.
      required:
      - ChatConfigurationArn
    UpdateChimeWebhookConfigurationResult:
      type: object
      properties:
        WebhookConfiguration:
          allOf:
          - $ref: '#/components/schemas/ChimeWebhookConfiguration'
          description: A Amazon Chime webhook configuration.
    UpdateCustomActionRequest:
      type: object
      properties:
        CustomActionArn:
          allOf:
          - $ref: '#/components/schemas/CustomActionArn'
          description: The fully defined Amazon Resource Name (ARN) of the custom
            action.
        Definition:
          allOf:
          - $ref: '#/components/schemas/CustomActionDefinition'
          description: The definition of the command to run when invoked as an alias
            or as an action button.
        AliasName:
          allOf:
          - $ref: '#/components/schemas/CustomActionAliasName'
          description: The name used to invoke this action in the chat channel. For
            example, `@aws run my-alias`.
        Attachments:
          allOf:
          - $ref: '#/components/schemas/CustomActionAttachmentList'
          description: Defines when this custom action button should be attached to
            a notification.
      required:
      - CustomActionArn
      - Definition
    UpdateCustomActionResult:
      type: object
      properties:
        CustomActionArn:
          allOf:
          - $ref: '#/components/schemas/CustomActionArn'
          description: The fully defined ARN of the custom action.
      required:
      - CustomActionArn
    UpdateSlackChannelConfigurationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: We can’t process your request right now because of a server issue.
        Try again later.
    UpdateSlackChannelConfigurationRequest:
      type: object
      properties:
        ChatConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/ChatConfigurationArn'
          description: The Amazon Resource Name (ARN) of the SlackChannelConfiguration
            to update.
        SlackChannelId:
          allOf:
          - $ref: '#/components/schemas/SlackChannelId'
          description: 'The ID of the Slack channel.


            To get this ID, open Slack, right click on the channel name in the left
            pane, then choose Copy Link. The channel ID is the 9-character string
            at the end of the URL. For example, ABCBBLZZZ.'
        SlackChannelName:
          allOf:
          - $ref: '#/components/schemas/SlackChannelDisplayName'
          description: The name of the Slack channel.
        SnsTopicArns:
          allOf:
          - $ref: '#/components/schemas/SnsTopicArnList'
          description: The Amazon Resource Names (ARNs) of the SNS topics that deliver
            notifications to AWS Chatbot.
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'A user-defined role that AWS Chatbot assumes. This is not
            the service-linked role.


            For more information, see [IAM policies for AWS Chatbot](https://docs.aws.amazon.com/chatbot/latest/adminguide/chatbot-iam-policies.html)
            in the _AWS Chatbot Administrator Guide_.'
        LoggingLevel:
          allOf:
          - $ref: '#/components/schemas/CustomerCwLogLevel'
          description: Logging levels include `ERROR`, `INFO`, or `NONE`.
        GuardrailPolicyArns:
          allOf:
          - $ref: '#/components/schemas/GuardrailPolicyArnList'
          description: The list of IAM policy ARNs that are applied as channel guardrails.
            The AWS managed `AdministratorAccess` policy is applied by default if
            this is not set.
        UserAuthorizationRequired:
          allOf:
          - $ref: '#/components/schemas/BooleanAccountPreference'
          description: Enables use of a user role requirement in your chat configuration.
      required:
      - ChatConfigurationArn
      - SlackChannelId
    UpdateSlackChannelConfigurationResult:
      type: object
      properties:
        ChannelConfiguration:
          allOf:
          - $ref: '#/components/schemas/SlackChannelConfiguration'
          description: The configuration for a Slack channel configured with AWS Chatbot.
    UpdateTeamsChannelConfigurationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: We can’t process your request right now because of a server issue.
        Try again later.
    UpdateTeamsChannelConfigurationRequest:
      type: object
      properties:
        ChatConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/ChatConfigurationArn'
          description: The Amazon Resource Name (ARN) of the TeamsChannelConfiguration
            to update.
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/TeamsChannelId'
          description: The ID of the Microsoft Teams channel.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/TeamsChannelName'
          description: The name of the Microsoft Teams channel.
        SnsTopicArns:
          allOf:
          - $ref: '#/components/schemas/SnsTopicArnList'
          description: The Amazon Resource Names (ARNs) of the SNS topics that deliver
            notifications to AWS Chatbot.
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'A user-defined role that AWS Chatbot assumes. This is not
            the service-linked role.


            For more information, see [IAM policies for AWS Chatbot](https://docs.aws.amazon.com/chatbot/latest/adminguide/chatbot-iam-policies.html)
            in the _AWS Chatbot Administrator Guide_.'
        LoggingLevel:
          allOf:
          - $ref: '#/components/schemas/CustomerCwLogLevel'
          description: Logging levels include `ERROR`, `INFO`, or `NONE`.
        GuardrailPolicyArns:
          allOf:
          - $ref: '#/components/schemas/GuardrailPolicyArnList'
          description: The list of IAM policy ARNs that are applied as channel guardrails.
            The AWS managed `AdministratorAccess` policy is applied by default if
            this is not set.
        UserAuthorizationRequired:
          allOf:
          - $ref: '#/components/schemas/BooleanAccountPreference'
          description: Enables use of a user role requirement in your chat configuration.
      required:
      - ChatConfigurationArn
      - ChannelId
    UpdateTeamsChannelConfigurationResult:
      type: object
      properties:
        ChannelConfiguration:
          allOf:
          - $ref: '#/components/schemas/TeamsChannelConfiguration'
          description: The configuration for a Microsoft Teams channel configured
            with AWS Chatbot.
