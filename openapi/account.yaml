openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: account
  x-aws-serviceName: account
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2021-02-01'
  title: AWS Account
  description: |-
    Operations for Amazon Web Services Account Management
servers:
- description: The AWS Account regional endpoint
  url: https://account.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /acceptPrimaryEmailUpdate:
    post:
      operationId: AcceptPrimaryEmailUpdate
      description: |-
        Accepts the request that originated from StartPrimaryEmailUpdate to update the primary email address (also known as the root user email address) for the specified account.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AccountId:
                  $ref: '#/components/schemas/AccountId'
                PrimaryEmail:
                  $ref: '#/components/schemas/PrimaryEmailAddress'
                Otp:
                  $ref: '#/components/schemas/Otp'
      responses:
        '200': {}
        '403':
          description: |-
            The operation failed because the calling identity doesn't have the minimum required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of a conflict in the current status of the resource. For example, this happens if you try to enable a Region that is currently being disabled (in a status of DISABLING) or if you try to change an account’s root user email to an email address which is already in use.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The operation failed because of an error internal to Amazon Web Services. Try your operation again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation failed because it specified a resource that can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The operation failed because it was called too frequently and exceeded a throttle limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '400':
          description: |-
            The operation failed because one of the input parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /deleteAlternateContact:
    post:
      operationId: DeleteAlternateContact
      description: |-
        Deletes the specified alternate contact from an Amazon Web Services account.

        For complete details about how to use the alternate contact operations, see [Access or updating the alternate contacts](https://docs.aws.amazon.com/accounts/latest/reference/manage-acct-update-contact.html).

        Before you can update the alternate contact information for an Amazon Web Services account that is managed by Organizations, you must first enable integration between Amazon Web Services Account Management and Organizations. For more information, see [Enabling trusted access for Amazon Web Services Account Management](https://docs.aws.amazon.com/accounts/latest/reference/using-orgs-trusted-access.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AlternateContactType:
                  $ref: '#/components/schemas/AlternateContactType'
                AccountId:
                  $ref: '#/components/schemas/AccountId'
      responses:
        '200': {}
        '403':
          description: |-
            The operation failed because the calling identity doesn't have the minimum required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The operation failed because of an error internal to Amazon Web Services. Try your operation again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation failed because it specified a resource that can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The operation failed because it was called too frequently and exceeded a throttle limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '400':
          description: |-
            The operation failed because one of the input parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /disableRegion:
    post:
      operationId: DisableRegion
      description: |-
        Disables (opts-out) a particular Region for an account.

        The act of disabling a Region will remove all IAM access to any resources that reside in that Region.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AccountId:
                  $ref: '#/components/schemas/AccountId'
                RegionName:
                  $ref: '#/components/schemas/RegionName'
      responses:
        '200': {}
        '403':
          description: |-
            The operation failed because the calling identity doesn't have the minimum required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of a conflict in the current status of the resource. For example, this happens if you try to enable a Region that is currently being disabled (in a status of DISABLING) or if you try to change an account’s root user email to an email address which is already in use.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The operation failed because of an error internal to Amazon Web Services. Try your operation again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The operation failed because it was called too frequently and exceeded a throttle limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '400':
          description: |-
            The operation failed because one of the input parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /enableRegion:
    post:
      operationId: EnableRegion
      description: |-
        Enables (opts-in) a particular Region for an account.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AccountId:
                  $ref: '#/components/schemas/AccountId'
                RegionName:
                  $ref: '#/components/schemas/RegionName'
      responses:
        '200': {}
        '403':
          description: |-
            The operation failed because the calling identity doesn't have the minimum required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of a conflict in the current status of the resource. For example, this happens if you try to enable a Region that is currently being disabled (in a status of DISABLING) or if you try to change an account’s root user email to an email address which is already in use.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The operation failed because of an error internal to Amazon Web Services. Try your operation again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The operation failed because it was called too frequently and exceeded a throttle limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '400':
          description: |-
            The operation failed because one of the input parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /getAccountInformation:
    post:
      operationId: GetAccountInformation
      description: |-
        Retrieves information about the specified account including its account name, account ID, and account creation date and time. To use this API, an IAM user or role must have the `account:GetAccountInformation` IAM permission.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AccountId:
                  $ref: '#/components/schemas/AccountId'
      responses:
        '200': {}
        '403':
          description: |-
            The operation failed because the calling identity doesn't have the minimum required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The operation failed because of an error internal to Amazon Web Services. Try your operation again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The operation failed because it was called too frequently and exceeded a throttle limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '400':
          description: |-
            The operation failed because one of the input parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /getAlternateContact:
    post:
      operationId: GetAlternateContact
      description: |-
        Retrieves the specified alternate contact attached to an Amazon Web Services account.

        For complete details about how to use the alternate contact operations, see [Access or updating the alternate contacts](https://docs.aws.amazon.com/accounts/latest/reference/manage-acct-update-contact.html).

        Before you can update the alternate contact information for an Amazon Web Services account that is managed by Organizations, you must first enable integration between Amazon Web Services Account Management and Organizations. For more information, see [Enabling trusted access for Amazon Web Services Account Management](https://docs.aws.amazon.com/accounts/latest/reference/using-orgs-trusted-access.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AlternateContactType:
                  $ref: '#/components/schemas/AlternateContactType'
                AccountId:
                  $ref: '#/components/schemas/AccountId'
      responses:
        '200': {}
        '403':
          description: |-
            The operation failed because the calling identity doesn't have the minimum required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The operation failed because of an error internal to Amazon Web Services. Try your operation again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation failed because it specified a resource that can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The operation failed because it was called too frequently and exceeded a throttle limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '400':
          description: |-
            The operation failed because one of the input parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /getContactInformation:
    post:
      operationId: GetContactInformation
      description: |-
        Retrieves the primary contact information of an Amazon Web Services account.

        For complete details about how to use the primary contact operations, see [Update the primary and alternate contact information](https://docs.aws.amazon.com/accounts/latest/reference/manage-acct-update-contact.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AccountId:
                  $ref: '#/components/schemas/AccountId'
      responses:
        '200': {}
        '403':
          description: |-
            The operation failed because the calling identity doesn't have the minimum required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The operation failed because of an error internal to Amazon Web Services. Try your operation again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation failed because it specified a resource that can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The operation failed because it was called too frequently and exceeded a throttle limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '400':
          description: |-
            The operation failed because one of the input parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /getPrimaryEmail:
    post:
      operationId: GetPrimaryEmail
      description: |-
        Retrieves the primary email address for the specified account.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AccountId:
                  $ref: '#/components/schemas/AccountId'
      responses:
        '200': {}
        '403':
          description: |-
            The operation failed because the calling identity doesn't have the minimum required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The operation failed because of an error internal to Amazon Web Services. Try your operation again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation failed because it specified a resource that can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The operation failed because it was called too frequently and exceeded a throttle limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '400':
          description: |-
            The operation failed because one of the input parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /getRegionOptStatus:
    post:
      operationId: GetRegionOptStatus
      description: |-
        Retrieves the opt-in status of a particular Region.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AccountId:
                  $ref: '#/components/schemas/AccountId'
                RegionName:
                  $ref: '#/components/schemas/RegionName'
      responses:
        '200': {}
        '403':
          description: |-
            The operation failed because the calling identity doesn't have the minimum required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The operation failed because of an error internal to Amazon Web Services. Try your operation again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The operation failed because it was called too frequently and exceeded a throttle limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '400':
          description: |-
            The operation failed because one of the input parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /listRegions:
    post:
      operationId: ListRegions
      description: |-
        Lists all the Regions for a given account and their respective opt-in statuses. Optionally, this list can be filtered by the `region-opt-status-contains` parameter.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AccountId:
                  $ref: '#/components/schemas/AccountId'
                MaxResults:
                  $ref: '#/components/schemas/Integer'
                NextToken:
                  $ref: '#/components/schemas/String'
                RegionOptStatusContains:
                  $ref: '#/components/schemas/RegionOptStatusList'
      responses:
        '200': {}
        '403':
          description: |-
            The operation failed because the calling identity doesn't have the minimum required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The operation failed because of an error internal to Amazon Web Services. Try your operation again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The operation failed because it was called too frequently and exceeded a throttle limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '400':
          description: |-
            The operation failed because one of the input parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /putAccountName:
    post:
      operationId: PutAccountName
      description: |-
        Updates the account name of the specified account. To use this API, IAM principals must have the `account:PutAccountName` IAM permission.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AccountName:
                  $ref: '#/components/schemas/AccountName'
                AccountId:
                  $ref: '#/components/schemas/AccountId'
      responses:
        '200': {}
        '403':
          description: |-
            The operation failed because the calling identity doesn't have the minimum required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The operation failed because of an error internal to Amazon Web Services. Try your operation again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The operation failed because it was called too frequently and exceeded a throttle limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '400':
          description: |-
            The operation failed because one of the input parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /putAlternateContact:
    post:
      operationId: PutAlternateContact
      description: |-
        Modifies the specified alternate contact attached to an Amazon Web Services account.

        For complete details about how to use the alternate contact operations, see [Access or updating the alternate contacts](https://docs.aws.amazon.com/accounts/latest/reference/manage-acct-update-contact.html).

        Before you can update the alternate contact information for an Amazon Web Services account that is managed by Organizations, you must first enable integration between Amazon Web Services Account Management and Organizations. For more information, see [Enabling trusted access for Amazon Web Services Account Management](https://docs.aws.amazon.com/accounts/latest/reference/using-orgs-trusted-access.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/Name'
                Title:
                  $ref: '#/components/schemas/Title'
                EmailAddress:
                  $ref: '#/components/schemas/EmailAddress'
                PhoneNumber:
                  $ref: '#/components/schemas/PhoneNumber'
                AlternateContactType:
                  $ref: '#/components/schemas/AlternateContactType'
                AccountId:
                  $ref: '#/components/schemas/AccountId'
      responses:
        '200': {}
        '403':
          description: |-
            The operation failed because the calling identity doesn't have the minimum required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The operation failed because of an error internal to Amazon Web Services. Try your operation again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The operation failed because it was called too frequently and exceeded a throttle limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '400':
          description: |-
            The operation failed because one of the input parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /putContactInformation:
    post:
      operationId: PutContactInformation
      description: |-
        Updates the primary contact information of an Amazon Web Services account.

        For complete details about how to use the primary contact operations, see [Update the primary and alternate contact information](https://docs.aws.amazon.com/accounts/latest/reference/manage-acct-update-contact.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ContactInformation:
                  $ref: '#/components/schemas/ContactInformation'
                AccountId:
                  $ref: '#/components/schemas/AccountId'
      responses:
        '200': {}
        '403':
          description: |-
            The operation failed because the calling identity doesn't have the minimum required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The operation failed because of an error internal to Amazon Web Services. Try your operation again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The operation failed because it was called too frequently and exceeded a throttle limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '400':
          description: |-
            The operation failed because one of the input parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /startPrimaryEmailUpdate:
    post:
      operationId: StartPrimaryEmailUpdate
      description: |-
        Starts the process to update the primary email address for the specified account.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AccountId:
                  $ref: '#/components/schemas/AccountId'
                PrimaryEmail:
                  $ref: '#/components/schemas/PrimaryEmailAddress'
      responses:
        '200': {}
        '403':
          description: |-
            The operation failed because the calling identity doesn't have the minimum required permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of a conflict in the current status of the resource. For example, this happens if you try to enable a Region that is currently being disabled (in a status of DISABLING) or if you try to change an account’s root user email to an email address which is already in use.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The operation failed because of an error internal to Amazon Web Services. Try your operation again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation failed because it specified a resource that can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The operation failed because it was called too frequently and exceeded a throttle limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '400':
          description: |-
            The operation failed because one of the input parameters was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    AcceptPrimaryEmailUpdateRequest:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: 'Specifies the 12-digit account ID number of the Amazon Web
            Services account that you want to access or modify with this operation.
            To use this parameter, the caller must be an identity in the [organization''s
            management account](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#account)
            or a delegated administrator account. The specified account ID must be
            a member account in the same organization. The organization must have
            [all features enabled](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html),
            and the organization must have [trusted access](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html)
            enabled for the Account Management service, and optionally a [delegated
            admin](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#delegated-admin)
            account assigned.


            This operation can only be called from the management account or the delegated
            administrator account of an organization for a member account.


            The management account can''t specify its own `AccountId`.'
        PrimaryEmail:
          allOf:
          - $ref: '#/components/schemas/PrimaryEmailAddress'
          description: The new primary email address for use with the specified account.
            This must match the `PrimaryEmail` from the `StartPrimaryEmailUpdate`
            API call.
        Otp:
          allOf:
          - $ref: '#/components/schemas/Otp'
          description: The OTP code sent to the `PrimaryEmail` specified on the `StartPrimaryEmailUpdate`
            API call.
      required:
      - AccountId
      - PrimaryEmail
      - Otp
    AcceptPrimaryEmailUpdateResponse:
      type: object
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/PrimaryEmailUpdateStatus'
          description: Retrieves the status of the accepted primary email update request.
    AccessDeniedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        errorType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The value populated to the `x-amzn-ErrorType` response header
            by API Gateway.
      required:
      - message
      description: The operation failed because the calling identity doesn't have
        the minimum required permissions.
    AccountCreatedDate:
      type: string
      format: date-time
    AccountId:
      type: string
      pattern: ^\d{12}$
    AccountName:
      type: string
      pattern: ^[ -;=?-~]+$
      minLength: 1
      maxLength: 50
    AddressLine:
      type: string
      minLength: 1
      maxLength: 60
    AlternateContact:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name associated with this alternate contact.
        Title:
          allOf:
          - $ref: '#/components/schemas/Title'
          description: The title associated with this alternate contact.
        EmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          description: The email address associated with this alternate contact.
        PhoneNumber:
          allOf:
          - $ref: '#/components/schemas/PhoneNumber'
          description: The phone number associated with this alternate contact.
        AlternateContactType:
          allOf:
          - $ref: '#/components/schemas/AlternateContactType'
          description: The type of alternate contact.
      description: A structure that contains the details of an alternate contact associated
        with an Amazon Web Services account
    AlternateContactType:
      type: string
      enum:
      - BILLING
      - OPERATIONS
      - SECURITY
    City:
      type: string
      minLength: 1
      maxLength: 50
    CompanyName:
      type: string
      minLength: 1
      maxLength: 50
    ConflictException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        errorType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The value populated to the `x-amzn-ErrorType` response header
            by API Gateway.
      required:
      - message
      description: The request could not be processed because of a conflict in the
        current status of the resource. For example, this happens if you try to enable
        a Region that is currently being disabled (in a status of DISABLING) or if
        you try to change an account’s root user email to an email address which is
        already in use.
    ContactInformation:
      type: object
      properties:
        FullName:
          allOf:
          - $ref: '#/components/schemas/FullName'
          description: The full name of the primary contact address.
        AddressLine1:
          allOf:
          - $ref: '#/components/schemas/AddressLine'
          description: The first line of the primary contact address.
        AddressLine2:
          allOf:
          - $ref: '#/components/schemas/AddressLine'
          description: The second line of the primary contact address, if any.
        AddressLine3:
          allOf:
          - $ref: '#/components/schemas/AddressLine'
          description: The third line of the primary contact address, if any.
        City:
          allOf:
          - $ref: '#/components/schemas/City'
          description: The city of the primary contact address.
        StateOrRegion:
          allOf:
          - $ref: '#/components/schemas/StateOrRegion'
          description: 'The state or region of the primary contact address. If the
            mailing address is within the United States (US), the value in this field
            can be either a two character state code (for example, `NJ`) or the full
            state name (for example, `New Jersey`). This field is required in the
            following countries: `US`, `CA`, `GB`, `DE`, `JP`, `IN`, and `BR`.'
        DistrictOrCounty:
          allOf:
          - $ref: '#/components/schemas/DistrictOrCounty'
          description: The district or county of the primary contact address, if any.
        PostalCode:
          allOf:
          - $ref: '#/components/schemas/PostalCode'
          description: The postal code of the primary contact address.
        CountryCode:
          allOf:
          - $ref: '#/components/schemas/CountryCode'
          description: The ISO-3166 two-letter country code for the primary contact
            address.
        PhoneNumber:
          allOf:
          - $ref: '#/components/schemas/ContactInformationPhoneNumber'
          description: The phone number of the primary contact information. The number
            will be validated and, in some countries, checked for activation.
        CompanyName:
          allOf:
          - $ref: '#/components/schemas/CompanyName'
          description: The name of the company associated with the primary contact
            information, if any.
        WebsiteUrl:
          allOf:
          - $ref: '#/components/schemas/WebsiteUrl'
          description: The URL of the website associated with the primary contact
            information, if any.
      required:
      - FullName
      - AddressLine1
      - City
      - PostalCode
      - CountryCode
      - PhoneNumber
      description: Contains the details of the primary contact information associated
        with an Amazon Web Services account.
    ContactInformationPhoneNumber:
      type: string
      pattern: ^[+][\s0-9()-]+$
      minLength: 1
      maxLength: 20
    CountryCode:
      type: string
      minLength: 2
      maxLength: 2
    DeleteAlternateContactRequest:
      type: object
      properties:
        AlternateContactType:
          allOf:
          - $ref: '#/components/schemas/AlternateContactType'
          description: Specifies which of the alternate contacts to delete.
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: 'Specifies the 12 digit account ID number of the Amazon Web
            Services account that you want to access or modify with this operation.


            If you do not specify this parameter, it defaults to the Amazon Web Services
            account of the identity used to call the operation.


            To use this parameter, the caller must be an identity in the [organization''s
            management account](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#account)
            or a delegated administrator account, and the specified account ID must
            be a member account in the same organization. The organization must have
            [all features enabled](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html),
            and the organization must have [trusted access](https://docs.aws.amazon.com/organizations/latest/userguide/using-orgs-trusted-access.html)
            enabled for the Account Management service, and optionally a [delegated
            admin](https://docs.aws.amazon.com/organizations/latest/userguide/using-orgs-delegated-admin.html)
            account assigned.


            The management account can''t specify its own `AccountId`; it must call
            the operation in standalone context by not including the `AccountId` parameter.


            To call this operation on an account that is not a member of an organization,
            then don''t specify this parameter, and call the operation using an identity
            belonging to the account whose contacts you wish to retrieve or modify.'
      required:
      - AlternateContactType
    DisableRegionRequest:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: 'Specifies the 12-digit account ID number of the Amazon Web
            Services account that you want to access or modify with this operation.
            If you don''t specify this parameter, it defaults to the Amazon Web Services
            account of the identity used to call the operation. To use this parameter,
            the caller must be an identity in the [organization''s management account](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#account)
            or a delegated administrator account. The specified account ID must be
            a member account in the same organization. The organization must have
            [all features enabled](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html),
            and the organization must have [trusted access](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html)
            enabled for the Account Management service, and optionally a [delegated
            admin](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#delegated-admin)
            account assigned.


            The management account can''t specify its own `AccountId`. It must call
            the operation in standalone context by not including the `AccountId` parameter.


            To call this operation on an account that is not a member of an organization,
            don''t specify this parameter. Instead, call the operation using an identity
            belonging to the account whose contacts you wish to retrieve or modify.'
        RegionName:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          description: Specifies the Region-code for a given Region name (for example,
            `af-south-1`). When you disable a Region, Amazon Web Services performs
            actions to deactivate that Region in your account, such as destroying
            IAM resources in the Region. This process takes a few minutes for most
            accounts, but this can take several hours. You cannot enable the Region
            until the disabling process is fully completed.
      required:
      - RegionName
    DistrictOrCounty:
      type: string
      minLength: 1
      maxLength: 50
    EmailAddress:
      type: string
      pattern: ^[\s]*[\w+=.#|!&-]+@[\w.-]+\.[\w]+[\s]*$
      minLength: 1
      maxLength: 254
    EnableRegionRequest:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: 'Specifies the 12-digit account ID number of the Amazon Web
            Services account that you want to access or modify with this operation.
            If you don''t specify this parameter, it defaults to the Amazon Web Services
            account of the identity used to call the operation. To use this parameter,
            the caller must be an identity in the [organization''s management account](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#account)
            or a delegated administrator account. The specified account ID must be
            a member account in the same organization. The organization must have
            [all features enabled](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html),
            and the organization must have [trusted access](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html)
            enabled for the Account Management service, and optionally a [delegated
            admin](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#delegated-admin)
            account assigned.


            The management account can''t specify its own `AccountId`. It must call
            the operation in standalone context by not including the `AccountId` parameter.


            To call this operation on an account that is not a member of an organization,
            don''t specify this parameter. Instead, call the operation using an identity
            belonging to the account whose contacts you wish to retrieve or modify.'
        RegionName:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          description: Specifies the Region-code for a given Region name (for example,
            `af-south-1`). When you enable a Region, Amazon Web Services performs
            actions to prepare your account in that Region, such as distributing your
            IAM resources to the Region. This process takes a few minutes for most
            accounts, but it can take several hours. You cannot use the Region until
            this process is complete. Furthermore, you cannot disable the Region until
            the enabling process is fully completed.
      required:
      - RegionName
    FullName:
      type: string
      minLength: 1
      maxLength: 50
    GetAccountInformationRequest:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: 'Specifies the 12 digit account ID number of the Amazon Web
            Services account that you want to access or modify with this operation.


            If you do not specify this parameter, it defaults to the Amazon Web Services
            account of the identity used to call the operation.


            To use this parameter, the caller must be an identity in the [organization''s
            management account](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#account)
            or a delegated administrator account, and the specified account ID must
            be a member account in the same organization. The organization must have
            [all features enabled](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html),
            and the organization must have [trusted access](https://docs.aws.amazon.com/organizations/latest/userguide/using-orgs-trusted-access.html)
            enabled for the Account Management service, and optionally a [delegated
            admin](https://docs.aws.amazon.com/organizations/latest/userguide/using-orgs-delegated-admin.html)
            account assigned.


            The management account can''t specify its own `AccountId`; it must call
            the operation in standalone context by not including the `AccountId` parameter.


            To call this operation on an account that is not a member of an organization,
            then don''t specify this parameter, and call the operation using an identity
            belonging to the account whose contacts you wish to retrieve or modify.'
    GetAccountInformationResponse:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: 'Specifies the 12-digit account ID number of the Amazon Web
            Services account that you want to access or modify with this operation.
            To use this parameter, the caller must be an identity in the [organization''s
            management account](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#account)
            or a delegated administrator account. The specified account ID must be
            a member account in the same organization. The organization must have
            [all features enabled](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html),
            and the organization must have [trusted access](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html)
            enabled for the Account Management service, and optionally a [delegated
            admin](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#delegated-admin)
            account assigned.


            This operation can only be called from the management account or the delegated
            administrator account of an organization for a member account.


            The management account can''t specify its own `AccountId`.'
        AccountName:
          allOf:
          - $ref: '#/components/schemas/AccountName'
          description: The name of the account.
        AccountCreatedDate:
          allOf:
          - $ref: '#/components/schemas/AccountCreatedDate'
          description: The date and time the account was created.
    GetAlternateContactRequest:
      type: object
      properties:
        AlternateContactType:
          allOf:
          - $ref: '#/components/schemas/AlternateContactType'
          description: Specifies which alternate contact you want to retrieve.
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: 'Specifies the 12 digit account ID number of the Amazon Web
            Services account that you want to access or modify with this operation.


            If you do not specify this parameter, it defaults to the Amazon Web Services
            account of the identity used to call the operation.


            To use this parameter, the caller must be an identity in the [organization''s
            management account](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#account)
            or a delegated administrator account, and the specified account ID must
            be a member account in the same organization. The organization must have
            [all features enabled](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html),
            and the organization must have [trusted access](https://docs.aws.amazon.com/organizations/latest/userguide/using-orgs-trusted-access.html)
            enabled for the Account Management service, and optionally a [delegated
            admin](https://docs.aws.amazon.com/organizations/latest/userguide/using-orgs-delegated-admin.html)
            account assigned.


            The management account can''t specify its own `AccountId`; it must call
            the operation in standalone context by not including the `AccountId` parameter.


            To call this operation on an account that is not a member of an organization,
            then don''t specify this parameter, and call the operation using an identity
            belonging to the account whose contacts you wish to retrieve or modify.'
      required:
      - AlternateContactType
    GetAlternateContactResponse:
      type: object
      properties:
        AlternateContact:
          allOf:
          - $ref: '#/components/schemas/AlternateContact'
          description: A structure that contains the details for the specified alternate
            contact.
    GetContactInformationRequest:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: 'Specifies the 12-digit account ID number of the Amazon Web
            Services account that you want to access or modify with this operation.
            If you don''t specify this parameter, it defaults to the Amazon Web Services
            account of the identity used to call the operation. To use this parameter,
            the caller must be an identity in the [organization''s management account](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#account)
            or a delegated administrator account. The specified account ID must be
            a member account in the same organization. The organization must have
            [all features enabled](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html),
            and the organization must have [trusted access](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html)
            enabled for the Account Management service, and optionally a [delegated
            admin](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#delegated-admin)
            account assigned.


            The management account can''t specify its own `AccountId`. It must call
            the operation in standalone context by not including the `AccountId` parameter.


            To call this operation on an account that is not a member of an organization,
            don''t specify this parameter. Instead, call the operation using an identity
            belonging to the account whose contacts you wish to retrieve or modify.'
    GetContactInformationResponse:
      type: object
      properties:
        ContactInformation:
          allOf:
          - $ref: '#/components/schemas/ContactInformation'
          description: Contains the details of the primary contact information associated
            with an Amazon Web Services account.
    GetPrimaryEmailRequest:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: 'Specifies the 12-digit account ID number of the Amazon Web
            Services account that you want to access or modify with this operation.
            To use this parameter, the caller must be an identity in the [organization''s
            management account](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#account)
            or a delegated administrator account. The specified account ID must be
            a member account in the same organization. The organization must have
            [all features enabled](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html),
            and the organization must have [trusted access](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html)
            enabled for the Account Management service, and optionally a [delegated
            admin](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#delegated-admin)
            account assigned.


            This operation can only be called from the management account or the delegated
            administrator account of an organization for a member account.


            The management account can''t specify its own `AccountId`.'
      required:
      - AccountId
    GetPrimaryEmailResponse:
      type: object
      properties:
        PrimaryEmail:
          allOf:
          - $ref: '#/components/schemas/PrimaryEmailAddress'
          description: Retrieves the primary email address associated with the specified
            account.
    GetRegionOptStatusRequest:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: 'Specifies the 12-digit account ID number of the Amazon Web
            Services account that you want to access or modify with this operation.
            If you don''t specify this parameter, it defaults to the Amazon Web Services
            account of the identity used to call the operation. To use this parameter,
            the caller must be an identity in the [organization''s management account](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#account)
            or a delegated administrator account. The specified account ID must be
            a member account in the same organization. The organization must have
            [all features enabled](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html),
            and the organization must have [trusted access](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html)
            enabled for the Account Management service, and optionally a [delegated
            admin](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#delegated-admin)
            account assigned.


            The management account can''t specify its own `AccountId`. It must call
            the operation in standalone context by not including the `AccountId` parameter.


            To call this operation on an account that is not a member of an organization,
            don''t specify this parameter. Instead, call the operation using an identity
            belonging to the account whose contacts you wish to retrieve or modify.'
        RegionName:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          description: Specifies the Region-code for a given Region name (for example,
            `af-south-1`). This function will return the status of whatever Region
            you pass into this parameter.
      required:
      - RegionName
    GetRegionOptStatusResponse:
      type: object
      properties:
        RegionName:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          description: The Region code that was passed in.
        RegionOptStatus:
          allOf:
          - $ref: '#/components/schemas/RegionOptStatus'
          description: One of the potential statuses a Region can undergo (Enabled,
            Enabling, Disabled, Disabling, Enabled_By_Default).
    InternalServerException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        errorType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The value populated to the `x-amzn-ErrorType` response header
            by API Gateway.
      required:
      - message
      description: The operation failed because of an error internal to Amazon Web
        Services. Try your operation again later.
    ListRegionsRequest:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: 'Specifies the 12-digit account ID number of the Amazon Web
            Services account that you want to access or modify with this operation.
            If you don''t specify this parameter, it defaults to the Amazon Web Services
            account of the identity used to call the operation. To use this parameter,
            the caller must be an identity in the [organization''s management account](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#account)
            or a delegated administrator account. The specified account ID must be
            a member account in the same organization. The organization must have
            [all features enabled](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html),
            and the organization must have [trusted access](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html)
            enabled for the Account Management service, and optionally a [delegated
            admin](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#delegated-admin)
            account assigned.


            The management account can''t specify its own `AccountId`. It must call
            the operation in standalone context by not including the `AccountId` parameter.


            To call this operation on an account that is not a member of an organization,
            don''t specify this parameter. Instead, call the operation using an identity
            belonging to the account whose contacts you wish to retrieve or modify.'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The total number of items to return in the command’s output.
            If the total number of items available is more than the value specified,
            a `NextToken` is provided in the command’s output. To resume pagination,
            provide the `NextToken` value in the `starting-token` argument of a subsequent
            command. Do not use the `NextToken` response element directly outside
            of the Amazon Web Services CLI. For usage examples, see [Pagination](http://docs.aws.amazon.com/cli/latest/userguide/pagination.html)
            in the _Amazon Web Services Command Line Interface User Guide_.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A token used to specify where to start paginating. This is
            the `NextToken` from a previously truncated response. For usage examples,
            see [Pagination](http://docs.aws.amazon.com/cli/latest/userguide/pagination.html)
            in the _Amazon Web Services Command Line Interface User Guide_.
        RegionOptStatusContains:
          allOf:
          - $ref: '#/components/schemas/RegionOptStatusList'
          description: A list of Region statuses (Enabling, Enabled, Disabling, Disabled,
            Enabled_by_default) to use to filter the list of Regions for a given account.
            For example, passing in a value of ENABLING will only return a list of
            Regions with a Region status of ENABLING.
    ListRegionsResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If there is more data to be returned, this will be populated.
            It should be passed into the `next-token` request parameter of `list-regions`.
        Regions:
          allOf:
          - $ref: '#/components/schemas/RegionOptList'
          description: This is a list of Regions for a given account, or if the filtered
            parameter was used, a list of Regions that match the filter criteria set
            in the `filter` parameter.
    Name:
      type: string
      minLength: 1
      maxLength: 64
    Otp:
      type: string
      pattern: ^[a-zA-Z0-9]{6}$
    PhoneNumber:
      type: string
      pattern: ^[\s0-9()+-]+$
      minLength: 1
      maxLength: 25
    PostalCode:
      type: string
      minLength: 1
      maxLength: 20
    PrimaryEmailAddress:
      type: string
      minLength: 5
      maxLength: 64
    PrimaryEmailUpdateStatus:
      type: string
      enum:
      - PENDING
      - ACCEPTED
    PutAccountNameRequest:
      type: object
      properties:
        AccountName:
          allOf:
          - $ref: '#/components/schemas/AccountName'
          description: The name of the account.
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: 'Specifies the 12 digit account ID number of the Amazon Web
            Services account that you want to access or modify with this operation.


            If you do not specify this parameter, it defaults to the Amazon Web Services
            account of the identity used to call the operation.


            To use this parameter, the caller must be an identity in the [organization''s
            management account](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#account)
            or a delegated administrator account, and the specified account ID must
            be a member account in the same organization. The organization must have
            [all features enabled](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html),
            and the organization must have [trusted access](https://docs.aws.amazon.com/organizations/latest/userguide/using-orgs-trusted-access.html)
            enabled for the Account Management service, and optionally a [delegated
            admin](https://docs.aws.amazon.com/organizations/latest/userguide/using-orgs-delegated-admin.html)
            account assigned.


            The management account can''t specify its own `AccountId`; it must call
            the operation in standalone context by not including the `AccountId` parameter.


            To call this operation on an account that is not a member of an organization,
            then don''t specify this parameter, and call the operation using an identity
            belonging to the account whose contacts you wish to retrieve or modify.'
      required:
      - AccountName
    PutAlternateContactRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: Specifies a name for the alternate contact.
        Title:
          allOf:
          - $ref: '#/components/schemas/Title'
          description: Specifies a title for the alternate contact.
        EmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          description: Specifies an email address for the alternate contact.
        PhoneNumber:
          allOf:
          - $ref: '#/components/schemas/PhoneNumber'
          description: Specifies a phone number for the alternate contact.
        AlternateContactType:
          allOf:
          - $ref: '#/components/schemas/AlternateContactType'
          description: Specifies which alternate contact you want to create or update.
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: 'Specifies the 12 digit account ID number of the Amazon Web
            Services account that you want to access or modify with this operation.


            If you do not specify this parameter, it defaults to the Amazon Web Services
            account of the identity used to call the operation.


            To use this parameter, the caller must be an identity in the [organization''s
            management account](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#account)
            or a delegated administrator account, and the specified account ID must
            be a member account in the same organization. The organization must have
            [all features enabled](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html),
            and the organization must have [trusted access](https://docs.aws.amazon.com/organizations/latest/userguide/using-orgs-trusted-access.html)
            enabled for the Account Management service, and optionally a [delegated
            admin](https://docs.aws.amazon.com/organizations/latest/userguide/using-orgs-delegated-admin.html)
            account assigned.


            The management account can''t specify its own `AccountId`; it must call
            the operation in standalone context by not including the `AccountId` parameter.


            To call this operation on an account that is not a member of an organization,
            then don''t specify this parameter, and call the operation using an identity
            belonging to the account whose contacts you wish to retrieve or modify.'
      required:
      - Name
      - Title
      - EmailAddress
      - PhoneNumber
      - AlternateContactType
    PutContactInformationRequest:
      type: object
      properties:
        ContactInformation:
          allOf:
          - $ref: '#/components/schemas/ContactInformation'
          description: Contains the details of the primary contact information associated
            with an Amazon Web Services account.
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: 'Specifies the 12-digit account ID number of the Amazon Web
            Services account that you want to access or modify with this operation.
            If you don''t specify this parameter, it defaults to the Amazon Web Services
            account of the identity used to call the operation. To use this parameter,
            the caller must be an identity in the [organization''s management account](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#account)
            or a delegated administrator account. The specified account ID must be
            a member account in the same organization. The organization must have
            [all features enabled](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html),
            and the organization must have [trusted access](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html)
            enabled for the Account Management service, and optionally a [delegated
            admin](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#delegated-admin)
            account assigned.


            The management account can''t specify its own `AccountId`. It must call
            the operation in standalone context by not including the `AccountId` parameter.


            To call this operation on an account that is not a member of an organization,
            don''t specify this parameter. Instead, call the operation using an identity
            belonging to the account whose contacts you wish to retrieve or modify.'
      required:
      - ContactInformation
    Region:
      type: object
      properties:
        RegionName:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          description: The Region code of a given Region (for example, `us-east-1`).
        RegionOptStatus:
          allOf:
          - $ref: '#/components/schemas/RegionOptStatus'
          description: One of potential statuses a Region can undergo (Enabled, Enabling,
            Disabled, Disabling, Enabled_By_Default).
      description: This is a structure that expresses the Region for a given account,
        consisting of a name and opt-in status.
    RegionName:
      type: string
      minLength: 1
      maxLength: 50
    RegionOptList:
      type: array
      items:
        $ref: '#/components/schemas/Region'
    RegionOptStatus:
      type: string
      enum:
      - ENABLED
      - ENABLING
      - DISABLING
      - DISABLED
      - ENABLED_BY_DEFAULT
    RegionOptStatusList:
      type: array
      items:
        $ref: '#/components/schemas/RegionOptStatus'
    ResourceNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        errorType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The value populated to the `x-amzn-ErrorType` response header
            by API Gateway.
      required:
      - message
      description: The operation failed because it specified a resource that can't
        be found.
    SensitiveString:
      type: string
    StartPrimaryEmailUpdateRequest:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: 'Specifies the 12-digit account ID number of the Amazon Web
            Services account that you want to access or modify with this operation.
            To use this parameter, the caller must be an identity in the [organization''s
            management account](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#account)
            or a delegated administrator account. The specified account ID must be
            a member account in the same organization. The organization must have
            [all features enabled](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html),
            and the organization must have [trusted access](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html)
            enabled for the Account Management service, and optionally a [delegated
            admin](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#delegated-admin)
            account assigned.


            This operation can only be called from the management account or the delegated
            administrator account of an organization for a member account.


            The management account can''t specify its own `AccountId`.'
        PrimaryEmail:
          allOf:
          - $ref: '#/components/schemas/PrimaryEmailAddress'
          description: The new primary email address (also known as the root user
            email address) to use in the specified account.
      required:
      - AccountId
      - PrimaryEmail
    StartPrimaryEmailUpdateResponse:
      type: object
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/PrimaryEmailUpdateStatus'
          description: The status of the primary email update request.
    StateOrRegion:
      type: string
      minLength: 1
      maxLength: 50
    Title:
      type: string
      minLength: 1
      maxLength: 50
    TooManyRequestsException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        errorType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The value populated to the `x-amzn-ErrorType` response header
            by API Gateway.
      required:
      - message
      description: The operation failed because it was called too frequently and exceeded
        a throttle limit.
    ValidationException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          description: The message that informs you about what was invalid about the
            request.
        reason:
          allOf:
          - $ref: '#/components/schemas/ValidationExceptionReason'
          description: The reason that validation failed.
        fieldList:
          allOf:
          - $ref: '#/components/schemas/ValidationExceptionFieldList'
          description: The field where the invalid entry was detected.
      required:
      - message
      description: The operation failed because one of the input parameters was invalid.
    ValidationExceptionField:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The field name where the invalid entry was detected.
        message:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          description: A message about the validation exception.
      required:
      - name
      - message
      description: The input failed to meet the constraints specified by the Amazon
        Web Services service in a specified field.
    ValidationExceptionFieldList:
      type: array
      items:
        $ref: '#/components/schemas/ValidationExceptionField'
    ValidationExceptionReason:
      type: string
      enum:
      - invalidRegionOptTarget
      - fieldValidationFailed
    WebsiteUrl:
      type: string
      minLength: 1
      maxLength: 256
