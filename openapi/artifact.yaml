openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: artifact
  x-aws-serviceName: artifact
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2018-05-10'
  title: AWS Artifact
  description: |-
    This reference provides descriptions of the low-level AWS Artifact Service API.
servers:
- description: The AWS Artifact regional endpoint
  url: https://artifact.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /v1/account-settings/get:
    get:
      operationId: GetAccountSettings
      description: |-
        Get the account settings for Artifact.
      parameters: []
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Request to create/modify content would result in a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unknown server exception has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            Request would cause a service quota to be exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Request fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v1/report/get:
    get:
      operationId: GetReport
      description: |-
        Get the content for a single report.
      parameters:
      - name: reportId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ReportId'
      - name: reportVersion
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/VersionAttribute'
      - name: termToken
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ShortStringAttribute'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Request to create/modify content would result in a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unknown server exception has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            Request would cause a service quota to be exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Request fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v1/report/getMetadata:
    get:
      operationId: GetReportMetadata
      description: |-
        Get the metadata for a single report.
      parameters:
      - name: reportId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ReportId'
      - name: reportVersion
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/VersionAttribute'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unknown server exception has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            Request would cause a service quota to be exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Request fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v1/report/getTermForReport:
    get:
      operationId: GetTermForReport
      description: |-
        Get the Term content associated with a single report.
      parameters:
      - name: reportId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ReportId'
      - name: reportVersion
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/VersionAttribute'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Request to create/modify content would result in a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unknown server exception has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            Request would cause a service quota to be exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Request fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v1/customer-agreement/list:
    get:
      operationId: ListCustomerAgreements
      description: |-
        List active customer-agreements applicable to calling identity.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResultsAttribute'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextTokenAttribute'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unknown server exception has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Request fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v1/report/list:
    get:
      operationId: ListReports
      description: |-
        List available reports.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResultsAttribute'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextTokenAttribute'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unknown server exception has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            Request would cause a service quota to be exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Request fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v1/account-settings/put:
    put:
      operationId: PutAccountSettings
      description: |-
        Put the account settings for Artifact.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                notificationSubscriptionStatus:
                  $ref: '#/components/schemas/NotificationSubscriptionStatus'
      responses:
        '200': {}
        '403':
          description: |-
            User does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Request to create/modify content would result in a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unknown server exception has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            Request would cause a service quota to be exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Request fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    AcceptanceType:
      type: string
      enum:
      - PASSTHROUGH
      - EXPLICIT
    AccessDeniedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: User does not have sufficient access to perform this action.
    AccountSettings:
      type: object
      properties:
        notificationSubscriptionStatus:
          allOf:
          - $ref: '#/components/schemas/NotificationSubscriptionStatus'
          description: Notification subscription status of the customer.
      description: Account settings for the customer.
    AgreementTerms:
      type: array
      items:
        $ref: '#/components/schemas/LongStringAttribute'
    AgreementType:
      type: string
      enum:
      - CUSTOM
      - DEFAULT
      - MODIFIED
    ConflictException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        resourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Identifier of the affected resource.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Type of the affected resource.
      required:
      - message
      - resourceId
      - resourceType
      description: Request to create/modify content would result in a conflict.
    CustomerAgreementIdAttribute:
      type: string
      pattern: ^customer-agreement-[a-zA-Z0-9]{16}$
    CustomerAgreementList:
      type: array
      items:
        $ref: '#/components/schemas/CustomerAgreementSummary'
    CustomerAgreementState:
      type: string
      enum:
      - ACTIVE
      - CUSTOMER_TERMINATED
      - AWS_TERMINATED
    CustomerAgreementSummary:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/LongStringAttribute'
          description: Name of the customer-agreement resource.
        arn:
          allOf:
          - $ref: '#/components/schemas/LongStringAttribute'
          description: ARN of the customer-agreement resource.
        id:
          allOf:
          - $ref: '#/components/schemas/CustomerAgreementIdAttribute'
          description: Identifier of the customer-agreement resource.
        agreementArn:
          allOf:
          - $ref: '#/components/schemas/LongStringAttribute'
          description: ARN of the agreement resource the customer-agreement resource
            represents.
        awsAccountId:
          allOf:
          - $ref: '#/components/schemas/ShortStringAttribute'
          description: AWS account Id that owns the resource.
        organizationArn:
          allOf:
          - $ref: '#/components/schemas/LongStringAttribute'
          description: ARN of the organization that owns the resource.
        effectiveStart:
          allOf:
          - $ref: '#/components/schemas/TimestampAttribute'
          description: Timestamp indicating when the agreement became effective.
        effectiveEnd:
          allOf:
          - $ref: '#/components/schemas/TimestampAttribute'
          description: Timestamp indicating when the agreement was terminated.
        state:
          allOf:
          - $ref: '#/components/schemas/CustomerAgreementState'
          description: State of the resource.
        description:
          allOf:
          - $ref: '#/components/schemas/LongStringAttribute'
          description: Description of the resource.
        acceptanceTerms:
          allOf:
          - $ref: '#/components/schemas/AgreementTerms'
          description: Terms required to accept the agreement resource.
        terminateTerms:
          allOf:
          - $ref: '#/components/schemas/AgreementTerms'
          description: Terms required to terminate the customer-agreement resource.
        type:
          allOf:
          - $ref: '#/components/schemas/AgreementType'
          description: Type of the customer-agreement resource.
      description: Summary for customer-agreement resource.
    GetAccountSettingsRequest:
      type: object
      properties: {}
    GetAccountSettingsResponse:
      type: object
      properties:
        accountSettings:
          $ref: '#/components/schemas/AccountSettings'
    GetReportMetadataRequest:
      type: object
      properties:
        reportId:
          allOf:
          - $ref: '#/components/schemas/ReportId'
          description: Unique resource ID for the report resource.
        reportVersion:
          allOf:
          - $ref: '#/components/schemas/VersionAttribute'
          description: Version for the report resource.
      required:
      - reportId
    GetReportMetadataResponse:
      type: object
      properties:
        reportDetails:
          allOf:
          - $ref: '#/components/schemas/ReportDetail'
          description: Report resource detail.
    GetReportRequest:
      type: object
      properties:
        reportId:
          allOf:
          - $ref: '#/components/schemas/ReportId'
          description: Unique resource ID for the report resource.
        reportVersion:
          allOf:
          - $ref: '#/components/schemas/VersionAttribute'
          description: Version for the report resource.
        termToken:
          allOf:
          - $ref: '#/components/schemas/ShortStringAttribute'
          description: Unique download token provided by GetTermForReport API.
      required:
      - reportId
      - termToken
    GetReportResponse:
      type: object
      properties:
        documentPresignedUrl:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Presigned S3 url to access the report content.
    GetTermForReportRequest:
      type: object
      properties:
        reportId:
          allOf:
          - $ref: '#/components/schemas/ReportId'
          description: Unique resource ID for the report resource.
        reportVersion:
          allOf:
          - $ref: '#/components/schemas/VersionAttribute'
          description: Version for the report resource.
      required:
      - reportId
    GetTermForReportResponse:
      type: object
      properties:
        documentPresignedUrl:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Presigned S3 url to access the term content.
        termToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Unique token representing this request event.
    InternalServerException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        retryAfterSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Number of seconds in which the caller can retry the request.
      required:
      - message
      description: An unknown server exception has occurred.
    ListCustomerAgreementsRequest:
      type: object
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResultsAttribute'
          description: Maximum number of resources to return in the paginated response.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextTokenAttribute'
          description: Pagination token to request the next page of resources.
    ListCustomerAgreementsResponse:
      type: object
      properties:
        customerAgreements:
          allOf:
          - $ref: '#/components/schemas/CustomerAgreementList'
          description: List of customer-agreement resources.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextTokenAttribute'
          description: Pagination token to request the next page of resources.
      required:
      - customerAgreements
    ListReportsRequest:
      type: object
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResultsAttribute'
          description: Maximum number of resources to return in the paginated response.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextTokenAttribute'
          description: Pagination token to request the next page of resources.
    ListReportsResponse:
      type: object
      properties:
        reports:
          allOf:
          - $ref: '#/components/schemas/ReportsList'
          description: List of report resources.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextTokenAttribute'
          description: Pagination token to request the next page of resources.
    LongStringAttribute:
      type: string
      pattern: ^[^<>]*$
      minLength: 1
      maxLength: 1024
    MaxResultsAttribute:
      type: integer
      minimum: 1
      maximum: 300
    NextTokenAttribute:
      type: string
      minLength: 1
      maxLength: 2048
    NotificationSubscriptionStatus:
      type: string
      enum:
      - SUBSCRIBED
      - NOT_SUBSCRIBED
    PublishedState:
      type: string
      enum:
      - PUBLISHED
      - UNPUBLISHED
    PutAccountSettingsRequest:
      type: object
      properties:
        notificationSubscriptionStatus:
          allOf:
          - $ref: '#/components/schemas/NotificationSubscriptionStatus'
          description: Desired notification subscription status.
    PutAccountSettingsResponse:
      type: object
      properties:
        accountSettings:
          $ref: '#/components/schemas/AccountSettings'
    ReportDetail:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ReportId'
          description: Unique resource ID for the report resource.
        name:
          allOf:
          - $ref: '#/components/schemas/ShortStringAttribute'
          description: Name for the report resource.
        description:
          allOf:
          - $ref: '#/components/schemas/LongStringAttribute'
          description: Description for the report resource.
        periodStart:
          allOf:
          - $ref: '#/components/schemas/TimestampAttribute'
          description: Timestamp indicating the report resource effective start.
        periodEnd:
          allOf:
          - $ref: '#/components/schemas/TimestampAttribute'
          description: Timestamp indicating the report resource effective end.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/TimestampAttribute'
          description: Timestamp indicating when the report resource was created.
        lastModifiedAt:
          allOf:
          - $ref: '#/components/schemas/TimestampAttribute'
          description: Timestamp indicating when the report resource was last modified.
        deletedAt:
          allOf:
          - $ref: '#/components/schemas/TimestampAttribute'
          description: Timestamp indicating when the report resource was deleted.
        state:
          allOf:
          - $ref: '#/components/schemas/PublishedState'
          description: Current state of the report resource
        arn:
          allOf:
          - $ref: '#/components/schemas/LongStringAttribute'
          description: ARN for the report resource.
        series:
          allOf:
          - $ref: '#/components/schemas/ShortStringAttribute'
          description: Series for the report resource.
        category:
          allOf:
          - $ref: '#/components/schemas/ShortStringAttribute'
          description: Category for the report resource.
        companyName:
          allOf:
          - $ref: '#/components/schemas/ShortStringAttribute'
          description: Associated company name for the report resource.
        productName:
          allOf:
          - $ref: '#/components/schemas/ShortStringAttribute'
          description: Associated product name for the report resource.
        termArn:
          allOf:
          - $ref: '#/components/schemas/LongStringAttribute'
          description: Unique resource ARN for term resource.
        version:
          allOf:
          - $ref: '#/components/schemas/VersionAttribute'
          description: Version for the report resource.
        acceptanceType:
          allOf:
          - $ref: '#/components/schemas/AcceptanceType'
          description: Acceptance type for report.
        sequenceNumber:
          allOf:
          - $ref: '#/components/schemas/SequenceNumberAttribute'
          description: Sequence number to enforce optimistic locking.
        uploadState:
          allOf:
          - $ref: '#/components/schemas/UploadState'
          description: The current state of the document upload.
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          description: The message associated with the current upload state.
      description: Full detail for report resource metadata.
    ReportId:
      type: string
      pattern: ^report-[a-zA-Z0-9]{16}$
    ReportSummary:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ReportId'
          description: Unique resource ID for the report resource.
        name:
          allOf:
          - $ref: '#/components/schemas/ShortStringAttribute'
          description: Name for the report resource.
        state:
          allOf:
          - $ref: '#/components/schemas/PublishedState'
          description: Current state of the report resource.
        arn:
          allOf:
          - $ref: '#/components/schemas/LongStringAttribute'
          description: ARN for the report resource.
        version:
          allOf:
          - $ref: '#/components/schemas/VersionAttribute'
          description: Version for the report resource.
        uploadState:
          allOf:
          - $ref: '#/components/schemas/UploadState'
          description: The current state of the document upload.
        description:
          allOf:
          - $ref: '#/components/schemas/LongStringAttribute'
          description: Description for the report resource.
        periodStart:
          allOf:
          - $ref: '#/components/schemas/TimestampAttribute'
          description: Timestamp indicating the report resource effective start.
        periodEnd:
          allOf:
          - $ref: '#/components/schemas/TimestampAttribute'
          description: Timestamp indicating the report resource effective end.
        series:
          allOf:
          - $ref: '#/components/schemas/ShortStringAttribute'
          description: Series for the report resource.
        category:
          allOf:
          - $ref: '#/components/schemas/ShortStringAttribute'
          description: Category for the report resource.
        companyName:
          allOf:
          - $ref: '#/components/schemas/ShortStringAttribute'
          description: Associated company name for the report resource.
        productName:
          allOf:
          - $ref: '#/components/schemas/ShortStringAttribute'
          description: Associated product name for the report resource.
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          description: The message associated with the current upload state.
        acceptanceType:
          allOf:
          - $ref: '#/components/schemas/AcceptanceType'
          description: Acceptance type for report.
      description: Summary for report resource.
    ReportsList:
      type: array
      items:
        $ref: '#/components/schemas/ReportSummary'
    ResourceNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        resourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Identifier of the affected resource.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Type of the affected resource.
      required:
      - message
      - resourceId
      - resourceType
      description: Request references a resource which does not exist.
    SequenceNumberAttribute:
      type: integer
      format: int64
      minimum: 1
    ServiceQuotaExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        resourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Identifier of the affected resource.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Type of the affected resource.
        serviceCode:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Code for the affected service.
        quotaCode:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Code for the affected quota.
      required:
      - message
      - resourceId
      - resourceType
      - serviceCode
      - quotaCode
      description: Request would cause a service quota to be exceeded.
    ShortStringAttribute:
      type: string
      pattern: ^[a-zA-Z0-9_\-\s]*$
      minLength: 1
      maxLength: 256
    StatusMessage:
      type: string
    TermId:
      type: string
      pattern: ^term-[a-zA-Z0-9]{16}$
    ThrottlingException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        serviceCode:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Code for the affected service.
        quotaCode:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Code for the affected quota.
        retryAfterSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Number of seconds in which the caller can retry the request.
      required:
      - message
      description: Request was denied due to request throttling.
    TimestampAttribute:
      type: string
      format: date-time
    UploadState:
      type: string
      enum:
      - PROCESSING
      - COMPLETE
      - FAILED
      - FAULT
    ValidationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        reason:
          allOf:
          - $ref: '#/components/schemas/ValidationExceptionReason'
          description: Reason the request failed validation.
        fieldList:
          allOf:
          - $ref: '#/components/schemas/ValidationExceptionFieldList'
          description: The field that caused the error, if applicable.
      required:
      - message
      - reason
      description: Request fails to satisfy the constraints specified by an AWS service.
    ValidationExceptionField:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Name of validation exception.
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Message describing why the field failed validation.
      required:
      - name
      - message
      description: Validation exception message and name.
    ValidationExceptionFieldList:
      type: array
      items:
        $ref: '#/components/schemas/ValidationExceptionField'
    ValidationExceptionReason:
      type: string
      enum:
      - unknownOperation
      - cannotParse
      - fieldValidationFailed
      - invalidToken
      - other
    VersionAttribute:
      type: integer
      format: int64
      minimum: 1
