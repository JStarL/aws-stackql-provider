openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: lookoutmetrics
  x-aws-serviceName: lookoutmetrics
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2017-07-25'
  title: Amazon Lookout for Metrics
  description: |-
    This is the _Amazon Lookout for Metrics API Reference_. For an introduction to the service with tutorials for getting started, visit [Amazon Lookout for Metrics Developer Guide](https://docs.aws.amazon.com/lookoutmetrics/latest/dev).
servers:
- description: The Amazon Lookout for Metrics regional endpoint
  url: https://lookoutmetrics.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /ActivateAnomalyDetector:
    post:
      operationId: ActivateAnomalyDetector
      description: |-
        Activates an anomaly detector.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AnomalyDetectorArn:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service. Check your input values and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            The request was denied due to too many requests being submitted at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /BackTestAnomalyDetector:
    post:
      operationId: BackTestAnomalyDetector
      description: |-
        Runs a backtest for anomaly detection for the specified resource.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AnomalyDetectorArn:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service. Check your input values and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            The request was denied due to too many requests being submitted at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /CreateAlert:
    post:
      operationId: CreateAlert
      description: |-
        Creates an alert for an anomaly detector.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AlertName:
                  $ref: '#/components/schemas/AlertName'
                AlertSensitivityThreshold:
                  $ref: '#/components/schemas/SensitivityThreshold'
                AlertDescription:
                  $ref: '#/components/schemas/AlertDescription'
                AnomalyDetectorArn:
                  $ref: '#/components/schemas/Arn'
                Action:
                  $ref: '#/components/schemas/Action'
                Tags:
                  $ref: '#/components/schemas/TagMap'
                AlertFilters:
                  $ref: '#/components/schemas/AlertFilters'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service. Check your input values and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '402':
          description: |-
            The request exceeded the service's quotas. Check the service quotas and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to too many requests being submitted at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /CreateAnomalyDetector:
    post:
      operationId: CreateAnomalyDetector
      description: |-
        Creates an anomaly detector.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AnomalyDetectorName:
                  $ref: '#/components/schemas/AnomalyDetectorName'
                AnomalyDetectorDescription:
                  $ref: '#/components/schemas/AnomalyDetectorDescription'
                AnomalyDetectorConfig:
                  $ref: '#/components/schemas/AnomalyDetectorConfig'
                KmsKeyArn:
                  $ref: '#/components/schemas/KmsKeyArn'
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            The request exceeded the service's quotas. Check the service quotas and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to too many requests being submitted at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service. Check your input values and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /CreateMetricSet:
    post:
      operationId: CreateMetricSet
      description: |-
        Creates a dataset.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AnomalyDetectorArn:
                  $ref: '#/components/schemas/Arn'
                MetricSetName:
                  $ref: '#/components/schemas/MetricSetName'
                MetricSetDescription:
                  $ref: '#/components/schemas/MetricSetDescription'
                MetricList:
                  $ref: '#/components/schemas/MetricList'
                Offset:
                  $ref: '#/components/schemas/Offset'
                TimestampColumn:
                  $ref: '#/components/schemas/TimestampColumn'
                DimensionList:
                  $ref: '#/components/schemas/DimensionList'
                MetricSetFrequency:
                  $ref: '#/components/schemas/Frequency'
                MetricSource:
                  $ref: '#/components/schemas/MetricSource'
                Timezone:
                  $ref: '#/components/schemas/Timezone'
                Tags:
                  $ref: '#/components/schemas/TagMap'
                DimensionFilterList:
                  $ref: '#/components/schemas/MetricSetDimensionFilterList'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service. Check your input values and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '402':
          description: |-
            The request exceeded the service's quotas. Check the service quotas and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to too many requests being submitted at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /DeactivateAnomalyDetector:
    post:
      operationId: DeactivateAnomalyDetector
      description: |-
        Deactivates an anomaly detector.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AnomalyDetectorArn:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service. Check your input values and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            The request was denied due to too many requests being submitted at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /DeleteAlert:
    post:
      operationId: DeleteAlert
      description: |-
        Deletes an alert.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AlertArn:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service. Check your input values and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            The request was denied due to too many requests being submitted at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /DeleteAnomalyDetector:
    post:
      operationId: DeleteAnomalyDetector
      description: |-
        Deletes a detector. Deleting an anomaly detector will delete all of its corresponding resources including any configured datasets and alerts.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AnomalyDetectorArn:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service. Check your input values and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            The request was denied due to too many requests being submitted at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /DescribeAlert:
    post:
      operationId: DescribeAlert
      description: |-
        Describes an alert.

        Amazon Lookout for Metrics API actions are eventually consistent. If you do a read operation on a resource immediately after creating or modifying it, use retries to allow time for the write operation to complete.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AlertArn:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service. Check your input values and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            The request was denied due to too many requests being submitted at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /DescribeAnomalyDetectionExecutions:
    post:
      operationId: DescribeAnomalyDetectionExecutions
      description: |-
        Returns information about the status of the specified anomaly detection jobs.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AnomalyDetectorArn:
                  $ref: '#/components/schemas/Arn'
                Timestamp:
                  $ref: '#/components/schemas/TimestampString'
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service. Check your input values and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            The request was denied due to too many requests being submitted at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /DescribeAnomalyDetector:
    post:
      operationId: DescribeAnomalyDetector
      description: |-
        Describes a detector.

        Amazon Lookout for Metrics API actions are eventually consistent. If you do a read operation on a resource immediately after creating or modifying it, use retries to allow time for the write operation to complete.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AnomalyDetectorArn:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service. Check your input values and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            The request was denied due to too many requests being submitted at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /DescribeMetricSet:
    post:
      operationId: DescribeMetricSet
      description: |-
        Describes a dataset.

        Amazon Lookout for Metrics API actions are eventually consistent. If you do a read operation on a resource immediately after creating or modifying it, use retries to allow time for the write operation to complete.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MetricSetArn:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service. Check your input values and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            The request was denied due to too many requests being submitted at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /DetectMetricSetConfig:
    post:
      operationId: DetectMetricSetConfig
      description: |-
        Detects an Amazon S3 dataset's file format, interval, and offset.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AnomalyDetectorArn:
                  $ref: '#/components/schemas/Arn'
                AutoDetectionMetricSource:
                  $ref: '#/components/schemas/AutoDetectionMetricSource'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service. Check your input values and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            The request was denied due to too many requests being submitted at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /GetAnomalyGroup:
    post:
      operationId: GetAnomalyGroup
      description: |-
        Returns details about a group of anomalous metrics.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AnomalyGroupId:
                  $ref: '#/components/schemas/UUID'
                AnomalyDetectorArn:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service. Check your input values and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            The request was denied due to too many requests being submitted at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /GetDataQualityMetrics:
    post:
      operationId: GetDataQualityMetrics
      description: |-
        Returns details about the requested data quality metrics.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AnomalyDetectorArn:
                  $ref: '#/components/schemas/Arn'
                MetricSetArn:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service. Check your input values and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            The request was denied due to too many requests being submitted at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /GetFeedback:
    post:
      operationId: GetFeedback
      description: |-
        Get feedback for an anomaly group.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AnomalyDetectorArn:
                  $ref: '#/components/schemas/Arn'
                AnomalyGroupTimeSeriesFeedback:
                  $ref: '#/components/schemas/AnomalyGroupTimeSeries'
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service. Check your input values and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            The request was denied due to too many requests being submitted at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /GetSampleData:
    post:
      operationId: GetSampleData
      description: |-
        Returns a selection of sample records from an Amazon S3 datasource.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                S3SourceConfig:
                  $ref: '#/components/schemas/SampleDataS3SourceConfig'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service. Check your input values and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            The request was denied due to too many requests being submitted at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /ListAlerts:
    post:
      operationId: ListAlerts
      description: |-
        Lists the alerts attached to a detector.

        Amazon Lookout for Metrics API actions are eventually consistent. If you do a read operation on a resource immediately after creating or modifying it, use retries to allow time for the write operation to complete.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AnomalyDetectorArn:
                  $ref: '#/components/schemas/Arn'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service. Check your input values and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            The request was denied due to too many requests being submitted at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /ListAnomalyDetectors:
    post:
      operationId: ListAnomalyDetectors
      description: |-
        Lists the detectors in the current AWS Region.

        Amazon Lookout for Metrics API actions are eventually consistent. If you do a read operation on a resource immediately after creating or modifying it, use retries to allow time for the write operation to complete.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service. Check your input values and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            The request was denied due to too many requests being submitted at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /ListAnomalyGroupRelatedMetrics:
    post:
      operationId: ListAnomalyGroupRelatedMetrics
      description: |-
        Returns a list of measures that are potential causes or effects of an anomaly group.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AnomalyDetectorArn:
                  $ref: '#/components/schemas/Arn'
                AnomalyGroupId:
                  $ref: '#/components/schemas/UUID'
                RelationshipTypeFilter:
                  $ref: '#/components/schemas/RelationshipType'
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service. Check your input values and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            The request was denied due to too many requests being submitted at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /ListAnomalyGroupSummaries:
    post:
      operationId: ListAnomalyGroupSummaries
      description: |-
        Returns a list of anomaly groups.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AnomalyDetectorArn:
                  $ref: '#/components/schemas/Arn'
                SensitivityThreshold:
                  $ref: '#/components/schemas/SensitivityThreshold'
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service. Check your input values and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            The request was denied due to too many requests being submitted at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /ListAnomalyGroupTimeSeries:
    post:
      operationId: ListAnomalyGroupTimeSeries
      description: |-
        Gets a list of anomalous metrics for a measure in an anomaly group.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AnomalyDetectorArn:
                  $ref: '#/components/schemas/Arn'
                AnomalyGroupId:
                  $ref: '#/components/schemas/UUID'
                MetricName:
                  $ref: '#/components/schemas/MetricName'
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service. Check your input values and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            The request was denied due to too many requests being submitted at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /ListMetricSets:
    post:
      operationId: ListMetricSets
      description: |-
        Lists the datasets in the current AWS Region.

        Amazon Lookout for Metrics API actions are eventually consistent. If you do a read operation on a resource immediately after creating or modifying it, use retries to allow time for the write operation to complete.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AnomalyDetectorArn:
                  $ref: '#/components/schemas/Arn'
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service. Check your input values and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            The request was denied due to too many requests being submitted at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /tags/{ResourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Gets a list of [tags](https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html) for a detector, dataset, or alert.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service. Check your input values and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: TagResource
      description: |-
        Adds [tags](https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html) to a detector, dataset, or alert.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '204': {}
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service. Check your input values and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: UntagResource
      description: |-
        Removes [tags](https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html) from a detector, dataset, or alert.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeyList'
      responses:
        '204': {}
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service. Check your input values and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /PutFeedback:
    post:
      operationId: PutFeedback
      description: |-
        Add feedback for an anomalous metric.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AnomalyDetectorArn:
                  $ref: '#/components/schemas/Arn'
                AnomalyGroupTimeSeriesFeedback:
                  $ref: '#/components/schemas/AnomalyGroupTimeSeriesFeedback'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service. Check your input values and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            The request was denied due to too many requests being submitted at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /UpdateAlert:
    post:
      operationId: UpdateAlert
      description: |-
        Make changes to an existing alert.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AlertArn:
                  $ref: '#/components/schemas/Arn'
                AlertDescription:
                  $ref: '#/components/schemas/AlertDescription'
                AlertSensitivityThreshold:
                  $ref: '#/components/schemas/SensitivityThreshold'
                Action:
                  $ref: '#/components/schemas/Action'
                AlertFilters:
                  $ref: '#/components/schemas/AlertFilters'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service. Check your input values and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            The request was denied due to too many requests being submitted at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /UpdateAnomalyDetector:
    post:
      operationId: UpdateAnomalyDetector
      description: |-
        Updates a detector. After activation, you can only change a detector's ingestion delay and description.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AnomalyDetectorArn:
                  $ref: '#/components/schemas/Arn'
                KmsKeyArn:
                  $ref: '#/components/schemas/KmsKeyArn'
                AnomalyDetectorDescription:
                  $ref: '#/components/schemas/AnomalyDetectorDescription'
                AnomalyDetectorConfig:
                  $ref: '#/components/schemas/AnomalyDetectorConfig'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service. Check your input values and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            The request was denied due to too many requests being submitted at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /UpdateMetricSet:
    post:
      operationId: UpdateMetricSet
      description: |-
        Updates a dataset.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MetricSetArn:
                  $ref: '#/components/schemas/Arn'
                MetricSetDescription:
                  $ref: '#/components/schemas/MetricSetDescription'
                MetricList:
                  $ref: '#/components/schemas/MetricList'
                Offset:
                  $ref: '#/components/schemas/Offset'
                TimestampColumn:
                  $ref: '#/components/schemas/TimestampColumn'
                DimensionList:
                  $ref: '#/components/schemas/DimensionList'
                MetricSetFrequency:
                  $ref: '#/components/schemas/Frequency'
                MetricSource:
                  $ref: '#/components/schemas/MetricSource'
                DimensionFilterList:
                  $ref: '#/components/schemas/MetricSetDimensionFilterList'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service. Check your input values and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '402':
          description: |-
            The request exceeded the service's quotas. Check the service quotas and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to too many requests being submitted at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
components:
  schemas:
    AccessDeniedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
      required:
      - Message
      description: You do not have sufficient permissions to perform this action.
    Action:
      type: object
      properties:
        SNSConfiguration:
          allOf:
          - $ref: '#/components/schemas/SNSConfiguration'
          description: A configuration for an Amazon SNS channel.
        LambdaConfiguration:
          allOf:
          - $ref: '#/components/schemas/LambdaConfiguration'
          description: A configuration for an AWS Lambda channel.
      description: A configuration that specifies the action to perform when anomalies
        are detected.
    ActivateAnomalyDetectorRequest:
      type: object
      properties:
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the anomaly detector.
      required:
      - AnomalyDetectorArn
    ActivateAnomalyDetectorResponse:
      type: object
      properties: {}
    AggregationFunction:
      type: string
      enum:
      - AVG
      - SUM
    Alert:
      type: object
      properties:
        Action:
          allOf:
          - $ref: '#/components/schemas/Action'
          description: Action that will be triggered when there is an alert.
        AlertDescription:
          allOf:
          - $ref: '#/components/schemas/AlertDescription'
          description: A description of the alert.
        AlertArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the alert.
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the detector to which the alert is attached.
        AlertName:
          allOf:
          - $ref: '#/components/schemas/AlertName'
          description: The name of the alert.
        AlertSensitivityThreshold:
          allOf:
          - $ref: '#/components/schemas/SensitivityThreshold'
          description: The minimum severity for an anomaly to trigger the alert.
        AlertType:
          allOf:
          - $ref: '#/components/schemas/AlertType'
          description: The type of the alert.
        AlertStatus:
          allOf:
          - $ref: '#/components/schemas/AlertStatus'
          description: The status of the alert.
        LastModificationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the alert was last modified.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the alert was created.
        AlertFilters:
          allOf:
          - $ref: '#/components/schemas/AlertFilters'
          description: The configuration of the alert filters, containing MetricList
            and DimensionFilter.
      description: A configuration for Amazon SNS-integrated notifications.
    AlertDescription:
      type: string
      pattern: \S
      minLength: 0
      maxLength: 256
    AlertFilters:
      type: object
      properties:
        MetricList:
          allOf:
          - $ref: '#/components/schemas/MetricNameList'
          description: The list of measures that you want to get alerts for.
        DimensionFilterList:
          allOf:
          - $ref: '#/components/schemas/DimensionFilterList'
          description: The list of DimensionFilter objects that are used for dimension-based
            filtering.
      description: The configuration of the alert filters.
    AlertName:
      type: string
      pattern: ^[a-zA-Z0-9][a-zA-Z0-9\-_]*$
      minLength: 1
      maxLength: 63
    AlertStatus:
      type: string
      enum:
      - ACTIVE
      - INACTIVE
    AlertSummary:
      type: object
      properties:
        AlertArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the alert.
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the detector to which the alert is attached.
        AlertName:
          allOf:
          - $ref: '#/components/schemas/AlertName'
          description: The name of the alert.
        AlertSensitivityThreshold:
          allOf:
          - $ref: '#/components/schemas/SensitivityThreshold'
          description: The minimum severity for an anomaly to trigger the alert.
        AlertType:
          allOf:
          - $ref: '#/components/schemas/AlertType'
          description: The type of the alert.
        AlertStatus:
          allOf:
          - $ref: '#/components/schemas/AlertStatus'
          description: The status of the alert.
        LastModificationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the alert was last modified.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the alert was created.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The alert's [tags](https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html).
      description: Provides a summary of an alert's configuration.
    AlertSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/AlertSummary'
    AlertType:
      type: string
      enum:
      - SNS
      - LAMBDA
    AnomalyDetectionTaskStatus:
      type: string
      enum:
      - PENDING
      - IN_PROGRESS
      - COMPLETED
      - FAILED
      - FAILED_TO_SCHEDULE
    AnomalyDetectionTaskStatusMessage:
      type: string
      pattern: \S
      minLength: 1
      maxLength: 256
    AnomalyDetectorConfig:
      type: object
      properties:
        AnomalyDetectorFrequency:
          allOf:
          - $ref: '#/components/schemas/Frequency'
          description: The frequency at which the detector analyzes its source data.
      description: Contains information about a detector's configuration.
    AnomalyDetectorConfigSummary:
      type: object
      properties:
        AnomalyDetectorFrequency:
          allOf:
          - $ref: '#/components/schemas/Frequency'
          description: The interval at which the detector analyzes its source data.
      description: Contains information about a detector's configuration.
    AnomalyDetectorDataQualityMetric:
      type: object
      properties:
        StartTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The start time for the data quality metrics collection.
        MetricSetDataQualityMetricList:
          allOf:
          - $ref: '#/components/schemas/MetricSetDataQualityMetricList'
          description: An array of `DataQualityMetricList` objects. Each object in
            the array contains information about a data quality metric.
      description: Aggregated details about the data quality metrics collected for
        the `AnomalyDetectorArn` provided in the GetDataQualityMetrics object.
    AnomalyDetectorDataQualityMetricList:
      type: array
      items:
        $ref: '#/components/schemas/AnomalyDetectorDataQualityMetric'
    AnomalyDetectorDescription:
      type: string
      pattern: \S
      minLength: 1
      maxLength: 256
    AnomalyDetectorFailureType:
      type: string
      enum:
      - ACTIVATION_FAILURE
      - BACK_TEST_ACTIVATION_FAILURE
      - DELETION_FAILURE
      - DEACTIVATION_FAILURE
    AnomalyDetectorName:
      type: string
      pattern: ^[a-zA-Z0-9][a-zA-Z0-9\-_]*$
      minLength: 1
      maxLength: 63
    AnomalyDetectorStatus:
      type: string
      enum:
      - ACTIVE
      - ACTIVATING
      - DELETING
      - FAILED
      - INACTIVE
      - LEARNING
      - BACK_TEST_ACTIVATING
      - BACK_TEST_ACTIVE
      - BACK_TEST_COMPLETE
      - DEACTIVATED
      - DEACTIVATING
    AnomalyDetectorSummary:
      type: object
      properties:
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the detector.
        AnomalyDetectorName:
          allOf:
          - $ref: '#/components/schemas/AnomalyDetectorName'
          description: The name of the detector.
        AnomalyDetectorDescription:
          allOf:
          - $ref: '#/components/schemas/AnomalyDetectorDescription'
          description: A description of the detector.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the detector was created.
        LastModificationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the detector was last modified.
        Status:
          allOf:
          - $ref: '#/components/schemas/AnomalyDetectorStatus'
          description: The status of detector.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The detector's [tags](https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html).
      description: Contains information about an an anomaly detector.
    AnomalyDetectorSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/AnomalyDetectorSummary'
    AnomalyGroup:
      type: object
      properties:
        StartTime:
          allOf:
          - $ref: '#/components/schemas/TimestampString'
          description: The start time for the group.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/TimestampString'
          description: The end time for the group.
        AnomalyGroupId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The ID of the anomaly group.
        AnomalyGroupScore:
          allOf:
          - $ref: '#/components/schemas/Score'
          description: The severity score of the group.
        PrimaryMetricName:
          allOf:
          - $ref: '#/components/schemas/MetricName'
          description: The name of the primary affected measure for the group.
        MetricLevelImpactList:
          allOf:
          - $ref: '#/components/schemas/MetricLevelImpactList'
          description: A list of measures affected by the anomaly.
      description: A group of anomalous metrics
    AnomalyGroupStatistics:
      type: object
      properties:
        EvaluationStartDate:
          allOf:
          - $ref: '#/components/schemas/TimestampString'
          description: The start of the time range that was searched.
        TotalCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of groups found.
        ItemizedMetricStatsList:
          allOf:
          - $ref: '#/components/schemas/ItemizedMetricStatsList'
          description: Statistics for individual metrics within the group.
      description: Aggregated statistics for a group of anomalous metrics.
    AnomalyGroupSummary:
      type: object
      properties:
        StartTime:
          allOf:
          - $ref: '#/components/schemas/TimestampString'
          description: The start time for the group.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/TimestampString'
          description: The end time for the group.
        AnomalyGroupId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The ID of the anomaly group.
        AnomalyGroupScore:
          allOf:
          - $ref: '#/components/schemas/Score'
          description: The severity score of the group.
        PrimaryMetricName:
          allOf:
          - $ref: '#/components/schemas/MetricName'
          description: The name of the primary affected measure for the group.
      description: Details about a group of anomalous metrics.
    AnomalyGroupSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/AnomalyGroupSummary'
    AnomalyGroupTimeSeries:
      type: object
      properties:
        AnomalyGroupId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The ID of the anomaly group.
        TimeSeriesId:
          allOf:
          - $ref: '#/components/schemas/TimeSeriesId'
          description: The ID of the metric.
      required:
      - AnomalyGroupId
      description: An anomalous metric in an anomaly group.
    AnomalyGroupTimeSeriesFeedback:
      type: object
      properties:
        AnomalyGroupId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The ID of the anomaly group.
        TimeSeriesId:
          allOf:
          - $ref: '#/components/schemas/TimeSeriesId'
          description: The ID of the metric.
        IsAnomaly:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Feedback on whether the metric is a legitimate anomaly.
      required:
      - AnomalyGroupId
      - TimeSeriesId
      - IsAnomaly
      description: Feedback for an anomalous metric.
    AppFlowConfig:
      type: object
      properties:
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: An IAM role that gives Amazon Lookout for Metrics permission
            to access the flow.
        FlowName:
          allOf:
          - $ref: '#/components/schemas/FlowName'
          description: name of the flow.
      description: Details about an Amazon AppFlow flow datasource.
    Arn:
      type: string
      pattern: ^arn:([a-z\d-]+):.*:.*:.*:.+$
      minLength: 0
      maxLength: 256
    AthenaDataCatalog:
      type: string
      pattern: ^[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*$
      minLength: 1
      maxLength: 256
    AthenaDatabaseName:
      type: string
      pattern: ^[a-zA-Z0-9_]+$
      minLength: 1
      maxLength: 255
    AthenaS3ResultsPath:
      type: string
      pattern: ^s3://[a-z0-9].+$
      minLength: 0
      maxLength: 1024
    AthenaSourceConfig:
      type: object
      properties:
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: An IAM role that gives Amazon Lookout for Metrics permission
            to access the data.
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/AthenaDatabaseName'
          description: The database's name.
        DataCatalog:
          allOf:
          - $ref: '#/components/schemas/AthenaDataCatalog'
          description: The database's data catalog.
        TableName:
          allOf:
          - $ref: '#/components/schemas/AthenaTableName'
          description: The database's table name.
        WorkGroupName:
          allOf:
          - $ref: '#/components/schemas/AthenaWorkGroupName'
          description: The database's work group name.
        S3ResultsPath:
          allOf:
          - $ref: '#/components/schemas/AthenaS3ResultsPath'
          description: The database's results path.
        BackTestConfiguration:
          allOf:
          - $ref: '#/components/schemas/BackTestConfiguration'
          description: Settings for backtest mode.
      description: Details about an Amazon Athena datasource.
    AthenaTableName:
      type: string
      pattern: ^[a-zA-Z0-9_]+$
      minLength: 1
      maxLength: 128
    AthenaWorkGroupName:
      type: string
      pattern: ^[a-zA-Z0-9._-]{1,128}$
      minLength: 1
      maxLength: 128
    AttributeValue:
      type: object
      properties:
        S:
          allOf:
          - $ref: '#/components/schemas/StringAttributeValue'
          description: A string.
        N:
          allOf:
          - $ref: '#/components/schemas/NumberAttributeValue'
          description: A number.
        B:
          allOf:
          - $ref: '#/components/schemas/BinaryAttributeValue'
          description: A binary value.
        SS:
          allOf:
          - $ref: '#/components/schemas/StringListAttributeValue'
          description: A list of strings.
        NS:
          allOf:
          - $ref: '#/components/schemas/NumberListAttributeValue'
          description: A list of numbers.
        BS:
          allOf:
          - $ref: '#/components/schemas/BinaryListAttributeValue'
          description: A list of binary values.
      description: An attribute value.
    AutoDetectionMetricSource:
      type: object
      properties:
        S3SourceConfig:
          allOf:
          - $ref: '#/components/schemas/AutoDetectionS3SourceConfig'
          description: The source's source config.
      description: An auto detection metric source.
    AutoDetectionS3SourceConfig:
      type: object
      properties:
        TemplatedPathList:
          allOf:
          - $ref: '#/components/schemas/TemplatedPathList'
          description: The config's templated path list.
        HistoricalDataPathList:
          allOf:
          - $ref: '#/components/schemas/HistoricalDataPathList'
          description: The config's historical data path list.
      description: An auto detection source config.
    BackTestAnomalyDetectorRequest:
      type: object
      properties:
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the anomaly detector.
      required:
      - AnomalyDetectorArn
    BackTestAnomalyDetectorResponse:
      type: object
      properties: {}
    BackTestConfiguration:
      type: object
      properties:
        RunBackTestMode:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Run a backtest instead of monitoring new data.
      required:
      - RunBackTestMode
      description: Settings for backtest mode.
    BinaryAttributeValue:
      type: string
    BinaryListAttributeValue:
      type: array
      items:
        $ref: '#/components/schemas/BinaryAttributeValue'
    Boolean:
      type: boolean
    CSVFileCompression:
      type: string
      enum:
      - NONE
      - GZIP
    Charset:
      type: string
      pattern: ^[a-zA-Z0-9][a-zA-Z0-9\-_]*$
      minLength: 0
      maxLength: 63
    CloudWatchConfig:
      type: object
      properties:
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: An IAM role that gives Amazon Lookout for Metrics permission
            to access data in Amazon CloudWatch.
        BackTestConfiguration:
          allOf:
          - $ref: '#/components/schemas/BackTestConfiguration'
          description: Settings for backtest mode.
      description: Details about an Amazon CloudWatch datasource.
    ColumnName:
      type: string
      pattern: ^[a-zA-Z0-9][a-zA-Z0-9\-_]*$
      minLength: 1
      maxLength: 63
    Confidence:
      type: string
      enum:
      - HIGH
      - LOW
      - NONE
    ConflictException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: The ID of the resource.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The type of the resource.
      required:
      - Message
      description: There was a conflict processing the request. Try your request again.
    ContributionMatrix:
      type: object
      properties:
        DimensionContributionList:
          allOf:
          - $ref: '#/components/schemas/DimensionContributionList'
          description: A list of contributing dimensions.
      description: Details about dimensions that contributed to an anomaly.
    CreateAlertRequest:
      type: object
      properties:
        AlertName:
          allOf:
          - $ref: '#/components/schemas/AlertName'
          description: The name of the alert.
        AlertSensitivityThreshold:
          allOf:
          - $ref: '#/components/schemas/SensitivityThreshold'
          description: An integer from 0 to 100 specifying the alert sensitivity threshold.
        AlertDescription:
          allOf:
          - $ref: '#/components/schemas/AlertDescription'
          description: A description of the alert.
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the detector to which the alert is attached.
        Action:
          allOf:
          - $ref: '#/components/schemas/Action'
          description: Action that will be triggered when there is an alert.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A list of [tags](https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html)
            to apply to the alert.
        AlertFilters:
          allOf:
          - $ref: '#/components/schemas/AlertFilters'
          description: The configuration of the alert filters, containing MetricList
            and DimensionFilterList.
      required:
      - AlertName
      - AnomalyDetectorArn
      - Action
    CreateAlertResponse:
      type: object
      properties:
        AlertArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the alert.
    CreateAnomalyDetectorRequest:
      type: object
      properties:
        AnomalyDetectorName:
          allOf:
          - $ref: '#/components/schemas/AnomalyDetectorName'
          description: The name of the detector.
        AnomalyDetectorDescription:
          allOf:
          - $ref: '#/components/schemas/AnomalyDetectorDescription'
          description: A description of the detector.
        AnomalyDetectorConfig:
          allOf:
          - $ref: '#/components/schemas/AnomalyDetectorConfig'
          description: Contains information about the configuration of the anomaly
            detector.
        KmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          description: The ARN of the KMS key to use to encrypt your data.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A list of [tags](https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html)
            to apply to the anomaly detector.
      required:
      - AnomalyDetectorName
      - AnomalyDetectorConfig
    CreateAnomalyDetectorResponse:
      type: object
      properties:
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the detector.
    CreateMetricSetRequest:
      type: object
      properties:
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the anomaly detector that will use the dataset.
        MetricSetName:
          allOf:
          - $ref: '#/components/schemas/MetricSetName'
          description: The name of the dataset.
        MetricSetDescription:
          allOf:
          - $ref: '#/components/schemas/MetricSetDescription'
          description: A description of the dataset you are creating.
        MetricList:
          allOf:
          - $ref: '#/components/schemas/MetricList'
          description: A list of metrics that the dataset will contain.
        Offset:
          allOf:
          - $ref: '#/components/schemas/Offset'
          description: After an interval ends, the amount of seconds that the detector
            waits before importing data. Offset is only supported for S3, Redshift,
            Athena and datasources.
        TimestampColumn:
          allOf:
          - $ref: '#/components/schemas/TimestampColumn'
          description: Contains information about the column used for tracking time
            in your source data.
        DimensionList:
          allOf:
          - $ref: '#/components/schemas/DimensionList'
          description: A list of the fields you want to treat as dimensions.
        MetricSetFrequency:
          allOf:
          - $ref: '#/components/schemas/Frequency'
          description: The frequency with which the source data will be analyzed for
            anomalies.
        MetricSource:
          allOf:
          - $ref: '#/components/schemas/MetricSource'
          description: Contains information about how the source data should be interpreted.
        Timezone:
          allOf:
          - $ref: '#/components/schemas/Timezone'
          description: The time zone in which your source data was recorded.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A list of [tags](https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html)
            to apply to the dataset.
        DimensionFilterList:
          allOf:
          - $ref: '#/components/schemas/MetricSetDimensionFilterList'
          description: A list of filters that specify which data is kept for anomaly
            detection.
      required:
      - AnomalyDetectorArn
      - MetricSetName
      - MetricList
      - MetricSource
    CreateMetricSetResponse:
      type: object
      properties:
        MetricSetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the dataset.
    CsvFormatDescriptor:
      type: object
      properties:
        FileCompression:
          allOf:
          - $ref: '#/components/schemas/CSVFileCompression'
          description: The level of compression of the source CSV file.
        Charset:
          allOf:
          - $ref: '#/components/schemas/Charset'
          description: The character set in which the source CSV file is written.
        ContainsHeader:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether or not the source CSV file contains a header.
        Delimiter:
          allOf:
          - $ref: '#/components/schemas/Delimiter'
          description: The character used to delimit the source CSV file.
        HeaderList:
          allOf:
          - $ref: '#/components/schemas/HeaderList'
          description: A list of the source CSV file's headers, if any.
        QuoteSymbol:
          allOf:
          - $ref: '#/components/schemas/QuoteSymbol'
          description: The character used as a quote character.
      description: Contains information about how a source CSV data file should be
        analyzed.
    DataItem:
      type: string
    DataQualityMetric:
      type: object
      properties:
        MetricType:
          allOf:
          - $ref: '#/components/schemas/DataQualityMetricType'
          description: The name of the data quality metric.
        MetricDescription:
          allOf:
          - $ref: '#/components/schemas/DataQualityMetricDescription'
          description: A description of the data quality metric.
        RelatedColumnName:
          allOf:
          - $ref: '#/components/schemas/RelatedColumnName'
          description: The column that is being monitored.
        MetricValue:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The value of the data quality metric.
      description: An array that describes a data quality metric. Each `DataQualityMetric`
        object contains the data quality metric name, its value, a description of
        the metric, and the affected column.
    DataQualityMetricDescription:
      type: string
      pattern: \S
      minLength: 1
      maxLength: 256
    DataQualityMetricList:
      type: array
      items:
        $ref: '#/components/schemas/DataQualityMetric'
    DataQualityMetricType:
      type: string
      enum:
      - COLUMN_COMPLETENESS
      - DIMENSION_UNIQUENESS
      - TIME_SERIES_COUNT
      - ROWS_PROCESSED
      - ROWS_PARTIAL_COMPLIANCE
      - INVALID_ROWS_COMPLIANCE
      - BACKTEST_TRAINING_DATA_START_TIME_STAMP
      - BACKTEST_TRAINING_DATA_END_TIME_STAMP
      - BACKTEST_INFERENCE_DATA_START_TIME_STAMP
      - BACKTEST_INFERENCE_DATA_END_TIME_STAMP
    DatabaseHost:
      type: string
      pattern: \S
      minLength: 1
      maxLength: 253
    DatabasePort:
      type: integer
      minimum: 1
      maximum: 65535
    DateTimeFormat:
      type: string
      pattern: \S
      minLength: 0
      maxLength: 63
    DeactivateAnomalyDetectorRequest:
      type: object
      properties:
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the anomaly detector.
      required:
      - AnomalyDetectorArn
    DeactivateAnomalyDetectorResponse:
      type: object
      properties: {}
    DeleteAlertRequest:
      type: object
      properties:
        AlertArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the alert to delete.
      required:
      - AlertArn
    DeleteAlertResponse:
      type: object
      properties: {}
    DeleteAnomalyDetectorRequest:
      type: object
      properties:
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the detector to delete.
      required:
      - AnomalyDetectorArn
    DeleteAnomalyDetectorResponse:
      type: object
      properties: {}
    Delimiter:
      type: string
      pattern: ^[^\r\n]$
      minLength: 0
      maxLength: 1
    DescribeAlertRequest:
      type: object
      properties:
        AlertArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the alert to describe.
      required:
      - AlertArn
    DescribeAlertResponse:
      type: object
      properties:
        Alert:
          allOf:
          - $ref: '#/components/schemas/Alert'
          description: Contains information about an alert.
    DescribeAnomalyDetectionExecutionsRequest:
      type: object
      properties:
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the anomaly detector.
        Timestamp:
          allOf:
          - $ref: '#/components/schemas/TimestampString'
          description: The timestamp of the anomaly detection job.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The number of items to return in the response.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Specify the pagination token that's returned by a previous
            request to retrieve the next page of results.
      required:
      - AnomalyDetectorArn
    DescribeAnomalyDetectionExecutionsResponse:
      type: object
      properties:
        ExecutionList:
          allOf:
          - $ref: '#/components/schemas/ExecutionList'
          description: A list of detection jobs.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token that's included if more results are available.
    DescribeAnomalyDetectorRequest:
      type: object
      properties:
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the detector to describe.
      required:
      - AnomalyDetectorArn
    DescribeAnomalyDetectorResponse:
      type: object
      properties:
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the detector.
        AnomalyDetectorName:
          allOf:
          - $ref: '#/components/schemas/AnomalyDetectorName'
          description: The name of the detector.
        AnomalyDetectorDescription:
          allOf:
          - $ref: '#/components/schemas/AnomalyDetectorDescription'
          description: A description of the detector.
        AnomalyDetectorConfig:
          allOf:
          - $ref: '#/components/schemas/AnomalyDetectorConfigSummary'
          description: Contains information about the detector's configuration.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the detector was created.
        LastModificationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the detector was last modified.
        Status:
          allOf:
          - $ref: '#/components/schemas/AnomalyDetectorStatus'
          description: The status of the detector.
        FailureReason:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: The reason that the detector failed.
        KmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          description: The ARN of the KMS key to use to encrypt your data.
        FailureType:
          allOf:
          - $ref: '#/components/schemas/AnomalyDetectorFailureType'
          description: The process that caused the detector to fail.
    DescribeMetricSetRequest:
      type: object
      properties:
        MetricSetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the dataset.
      required:
      - MetricSetArn
    DescribeMetricSetResponse:
      type: object
      properties:
        MetricSetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the dataset.
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the detector that contains the dataset.
        MetricSetName:
          allOf:
          - $ref: '#/components/schemas/MetricSetName'
          description: The name of the dataset.
        MetricSetDescription:
          allOf:
          - $ref: '#/components/schemas/MetricSetDescription'
          description: The dataset's description.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the dataset was created.
        LastModificationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the dataset was last modified.
        Offset:
          allOf:
          - $ref: '#/components/schemas/Offset'
          description: After an interval ends, the amount of seconds that the detector
            waits before importing data. Offset is only supported for S3, Redshift,
            Athena and datasources.
        MetricList:
          allOf:
          - $ref: '#/components/schemas/MetricList'
          description: A list of the metrics defined by the dataset.
        TimestampColumn:
          allOf:
          - $ref: '#/components/schemas/TimestampColumn'
          description: Contains information about the column used for tracking time
            in your source data.
        DimensionList:
          allOf:
          - $ref: '#/components/schemas/DimensionList'
          description: A list of the dimensions chosen for analysis.
        MetricSetFrequency:
          allOf:
          - $ref: '#/components/schemas/Frequency'
          description: The interval at which the data will be analyzed for anomalies.
        Timezone:
          allOf:
          - $ref: '#/components/schemas/Timezone'
          description: The time zone in which the dataset's data was recorded.
        MetricSource:
          allOf:
          - $ref: '#/components/schemas/MetricSource'
          description: Contains information about the dataset's source data.
        DimensionFilterList:
          allOf:
          - $ref: '#/components/schemas/MetricSetDimensionFilterList'
          description: The dimensions and their values that were used to filter the
            dataset.
    DetectMetricSetConfigRequest:
      type: object
      properties:
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: An anomaly detector ARN.
        AutoDetectionMetricSource:
          allOf:
          - $ref: '#/components/schemas/AutoDetectionMetricSource'
          description: A data source.
      required:
      - AnomalyDetectorArn
      - AutoDetectionMetricSource
    DetectMetricSetConfigResponse:
      type: object
      properties:
        DetectedMetricSetConfig:
          allOf:
          - $ref: '#/components/schemas/DetectedMetricSetConfig'
          description: The inferred dataset configuration for the datasource.
    DetectedCsvFormatDescriptor:
      type: object
      properties:
        FileCompression:
          allOf:
          - $ref: '#/components/schemas/DetectedField'
          description: The format's file compression.
        Charset:
          allOf:
          - $ref: '#/components/schemas/DetectedField'
          description: The format's charset.
        ContainsHeader:
          allOf:
          - $ref: '#/components/schemas/DetectedField'
          description: Whether the format includes a header.
        Delimiter:
          allOf:
          - $ref: '#/components/schemas/DetectedField'
          description: The format's delimiter.
        HeaderList:
          allOf:
          - $ref: '#/components/schemas/DetectedField'
          description: The format's header list.
        QuoteSymbol:
          allOf:
          - $ref: '#/components/schemas/DetectedField'
          description: The format's quote symbol.
      description: Properties of an inferred CSV format.
    DetectedField:
      type: object
      properties:
        Value:
          allOf:
          - $ref: '#/components/schemas/AttributeValue'
          description: The field's value.
        Confidence:
          allOf:
          - $ref: '#/components/schemas/Confidence'
          description: The field's confidence.
        Message:
          allOf:
          - $ref: '#/components/schemas/Message'
          description: The field's message.
      description: An inferred field.
    DetectedFileFormatDescriptor:
      type: object
      properties:
        CsvFormatDescriptor:
          allOf:
          - $ref: '#/components/schemas/DetectedCsvFormatDescriptor'
          description: Details about a CSV format.
        JsonFormatDescriptor:
          allOf:
          - $ref: '#/components/schemas/DetectedJsonFormatDescriptor'
          description: Details about a JSON format.
      description: Properties of an inferred data format.
    DetectedJsonFormatDescriptor:
      type: object
      properties:
        FileCompression:
          allOf:
          - $ref: '#/components/schemas/DetectedField'
          description: The format's file compression.
        Charset:
          allOf:
          - $ref: '#/components/schemas/DetectedField'
          description: The format's character set.
      description: A detected JSON format descriptor.
    DetectedMetricSetConfig:
      type: object
      properties:
        Offset:
          allOf:
          - $ref: '#/components/schemas/DetectedField'
          description: The dataset's offset.
        MetricSetFrequency:
          allOf:
          - $ref: '#/components/schemas/DetectedField'
          description: The dataset's interval.
        MetricSource:
          allOf:
          - $ref: '#/components/schemas/DetectedMetricSource'
          description: The dataset's data source.
      description: An inferred dataset configuration.
    DetectedMetricSource:
      type: object
      properties:
        S3SourceConfig:
          allOf:
          - $ref: '#/components/schemas/DetectedS3SourceConfig'
          description: The data source's source configuration.
      description: An inferred data source.
    DetectedS3SourceConfig:
      type: object
      properties:
        FileFormatDescriptor:
          allOf:
          - $ref: '#/components/schemas/DetectedFileFormatDescriptor'
          description: The source's file format descriptor.
      description: An inferred source configuration.
    DimensionContribution:
      type: object
      properties:
        DimensionName:
          allOf:
          - $ref: '#/components/schemas/ColumnName'
          description: The name of the dimension.
        DimensionValueContributionList:
          allOf:
          - $ref: '#/components/schemas/DimensionValueContributionList'
          description: A list of dimension values that contributed to the anomaly.
      description: Details about a dimension that contributed to an anomaly.
    DimensionContributionList:
      type: array
      items:
        $ref: '#/components/schemas/DimensionContribution'
    DimensionFilter:
      type: object
      properties:
        DimensionName:
          allOf:
          - $ref: '#/components/schemas/ColumnName'
          description: The name of the dimension to filter on.
        DimensionValueList:
          allOf:
          - $ref: '#/components/schemas/DimensionValueList'
          description: The list of values for the dimension specified in DimensionName
            that you want to filter on.
      description: The dimension filter, containing DimensionName and DimensionValueList.
    DimensionFilterList:
      type: array
      items:
        $ref: '#/components/schemas/DimensionFilter'
    DimensionList:
      type: array
      items:
        $ref: '#/components/schemas/ColumnName'
    DimensionNameValue:
      type: object
      properties:
        DimensionName:
          allOf:
          - $ref: '#/components/schemas/ColumnName'
          description: The name of the dimension.
        DimensionValue:
          allOf:
          - $ref: '#/components/schemas/DimensionValue'
          description: The value of the dimension.
      required:
      - DimensionName
      - DimensionValue
      description: A dimension name and value.
    DimensionNameValueList:
      type: array
      items:
        $ref: '#/components/schemas/DimensionNameValue'
    DimensionValue:
      type: string
    DimensionValueContribution:
      type: object
      properties:
        DimensionValue:
          allOf:
          - $ref: '#/components/schemas/DimensionValue'
          description: The value of the dimension.
        ContributionScore:
          allOf:
          - $ref: '#/components/schemas/Score'
          description: The severity score of the value.
      description: The severity of a value of a dimension that contributed to an anomaly.
    DimensionValueContributionList:
      type: array
      items:
        $ref: '#/components/schemas/DimensionValueContribution'
    DimensionValueList:
      type: array
      items:
        $ref: '#/components/schemas/DimensionValue'
    Double:
      type: number
      format: double
    ErrorMessage:
      type: string
      minLength: 0
      maxLength: 256
    ExecutionList:
      type: array
      items:
        $ref: '#/components/schemas/ExecutionStatus'
    ExecutionStatus:
      type: object
      properties:
        Timestamp:
          allOf:
          - $ref: '#/components/schemas/TimestampString'
          description: The run's timestamp.
        Status:
          allOf:
          - $ref: '#/components/schemas/AnomalyDetectionTaskStatus'
          description: The run's status.
        FailureReason:
          allOf:
          - $ref: '#/components/schemas/AnomalyDetectionTaskStatusMessage'
          description: The reason that the run failed, if applicable.
      description: The status of an anomaly detector run.
    FieldName:
      type: string
    FileFormatDescriptor:
      type: object
      properties:
        CsvFormatDescriptor:
          allOf:
          - $ref: '#/components/schemas/CsvFormatDescriptor'
          description: Contains information about how a source CSV data file should
            be analyzed.
        JsonFormatDescriptor:
          allOf:
          - $ref: '#/components/schemas/JsonFormatDescriptor'
          description: Contains information about how a source JSON data file should
            be analyzed.
      description: Contains information about a source file's formatting.
    Filter:
      type: object
      properties:
        DimensionValue:
          allOf:
          - $ref: '#/components/schemas/DimensionValue'
          description: The value that you want to include in the filter.
        FilterOperation:
          allOf:
          - $ref: '#/components/schemas/FilterOperation'
          description: The condition to apply.
      description: Describes a filter for choosing a subset of dimension values. Each
        filter consists of the dimension that you want to include and the condition
        statement. The condition statement is specified in the `FilterOperation` object.
    FilterList:
      type: array
      items:
        $ref: '#/components/schemas/Filter'
    FilterOperation:
      type: string
      enum:
      - EQUALS
    FlowName:
      type: string
      pattern: ^[a-zA-Z0-9][\w!@#.-]+$
      minLength: 0
      maxLength: 256
    Frequency:
      type: string
      enum:
      - P1D
      - PT1H
      - PT10M
      - PT5M
    GetAnomalyGroupRequest:
      type: object
      properties:
        AnomalyGroupId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The ID of the anomaly group.
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the anomaly detector.
      required:
      - AnomalyGroupId
      - AnomalyDetectorArn
    GetAnomalyGroupResponse:
      type: object
      properties:
        AnomalyGroup:
          allOf:
          - $ref: '#/components/schemas/AnomalyGroup'
          description: Details about the anomaly group.
    GetDataQualityMetricsRequest:
      type: object
      properties:
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the anomaly detector that
            you want to investigate.
        MetricSetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of a specific data quality metric
            set.
      required:
      - AnomalyDetectorArn
    GetDataQualityMetricsResponse:
      type: object
      properties:
        AnomalyDetectorDataQualityMetricList:
          allOf:
          - $ref: '#/components/schemas/AnomalyDetectorDataQualityMetricList'
          description: A list of the data quality metrics for the `AnomalyDetectorArn`
            that you requested.
    GetFeedbackRequest:
      type: object
      properties:
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the anomaly detector.
        AnomalyGroupTimeSeriesFeedback:
          allOf:
          - $ref: '#/components/schemas/AnomalyGroupTimeSeries'
          description: The anomalous metric and group ID.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Specify the pagination token that's returned by a previous
            request to retrieve the next page of results.
      required:
      - AnomalyDetectorArn
      - AnomalyGroupTimeSeriesFeedback
    GetFeedbackResponse:
      type: object
      properties:
        AnomalyGroupTimeSeriesFeedback:
          allOf:
          - $ref: '#/components/schemas/TimeSeriesFeedbackList'
          description: Feedback for an anomalous metric.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token that's included if more results are available.
    GetSampleDataRequest:
      type: object
      properties:
        S3SourceConfig:
          allOf:
          - $ref: '#/components/schemas/SampleDataS3SourceConfig'
          description: A datasource bucket in Amazon S3.
    GetSampleDataResponse:
      type: object
      properties:
        HeaderValues:
          allOf:
          - $ref: '#/components/schemas/HeaderValueList'
          description: A list of header labels for the records.
        SampleRows:
          allOf:
          - $ref: '#/components/schemas/SampleRows'
          description: A list of records.
    HeaderList:
      type: array
      items:
        $ref: '#/components/schemas/ColumnName'
    HeaderValue:
      type: string
    HeaderValueList:
      type: array
      items:
        $ref: '#/components/schemas/HeaderValue'
    HistoricalDataPath:
      type: string
      pattern: ^s3://[a-z0-9].+$
      minLength: 0
      maxLength: 1024
    HistoricalDataPathList:
      type: array
      items:
        $ref: '#/components/schemas/HistoricalDataPath'
    Integer:
      type: integer
      default: 0
    InterMetricImpactDetails:
      type: object
      properties:
        MetricName:
          allOf:
          - $ref: '#/components/schemas/MetricName'
          description: The name of the measure.
        AnomalyGroupId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The ID of the anomaly group.
        RelationshipType:
          allOf:
          - $ref: '#/components/schemas/RelationshipType'
          description: Whether a measure is a potential cause of the anomaly group
            (`CAUSE_OF_INPUT_ANOMALY_GROUP`), or whether the measure is impacted by
            the anomaly group (`EFFECT_OF_INPUT_ANOMALY_GROUP`).
        ContributionPercentage:
          allOf:
          - $ref: '#/components/schemas/MetricChangePercentage'
          description: For potential causes (`CAUSE_OF_INPUT_ANOMALY_GROUP`), the
            percentage contribution the measure has in causing the anomalies.
      description: Aggregated details about the measures contributing to the anomaly
        group, and the measures potentially impacted by the anomaly group.
    InterMetricImpactList:
      type: array
      items:
        $ref: '#/components/schemas/InterMetricImpactDetails'
    InternalServerException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
      required:
      - Message
      description: The request processing has failed because of an unknown error,
        exception, or failure.
    ItemizedMetricStats:
      type: object
      properties:
        MetricName:
          allOf:
          - $ref: '#/components/schemas/ColumnName'
          description: The name of the measure.
        OccurrenceCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of times that the measure appears.
      description: Aggregated statistics about a measure affected by an anomaly.
    ItemizedMetricStatsList:
      type: array
      items:
        $ref: '#/components/schemas/ItemizedMetricStats'
    JsonFileCompression:
      type: string
      enum:
      - NONE
      - GZIP
    JsonFormatDescriptor:
      type: object
      properties:
        FileCompression:
          allOf:
          - $ref: '#/components/schemas/JsonFileCompression'
          description: The level of compression of the source CSV file.
        Charset:
          allOf:
          - $ref: '#/components/schemas/Charset'
          description: The character set in which the source JSON file is written.
      description: Contains information about how a source JSON data file should be
        analyzed.
    KmsKeyArn:
      type: string
      pattern: ^arn:aws.*:kms:.*:[0-9]{12}:key/[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$
      minLength: 20
      maxLength: 2048
    LambdaConfiguration:
      type: object
      properties:
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of an IAM role that has permission to invoke the Lambda
            function.
        LambdaArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the Lambda function.
      required:
      - RoleArn
      - LambdaArn
      description: Contains information about a Lambda configuration.
    ListAlertsRequest:
      type: object
      properties:
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the alert's detector.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If the result of the previous request is truncated, the response
            includes a `NextToken`. To retrieve the next set of results, use the token
            in the next request. Tokens expire after 24 hours.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results that will be displayed by the
            request.
    ListAlertsResponse:
      type: object
      properties:
        AlertSummaryList:
          allOf:
          - $ref: '#/components/schemas/AlertSummaryList'
          description: Contains information about an alert.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If the response is truncated, the service returns this token.
            To retrieve the next set of results, use this token in the next request.
    ListAnomalyDetectorsRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If the result of the previous request was truncated, the response
            includes a `NextToken`. To retrieve the next set of results, use the token
            in the next request. Tokens expire after 24 hours.
    ListAnomalyDetectorsResponse:
      type: object
      properties:
        AnomalyDetectorSummaryList:
          allOf:
          - $ref: '#/components/schemas/AnomalyDetectorSummaryList'
          description: A list of anomaly detectors in the account in the current region.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If the response is truncated, the service returns this token.
            To retrieve the next set of results, use the token in the next request.
    ListAnomalyGroupRelatedMetricsRequest:
      type: object
      properties:
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the anomaly detector.
        AnomalyGroupId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The ID of the anomaly group.
        RelationshipTypeFilter:
          allOf:
          - $ref: '#/components/schemas/RelationshipType'
          description: Filter for potential causes (`CAUSE_OF_INPUT_ANOMALY_GROUP`)
            or downstream effects (`EFFECT_OF_INPUT_ANOMALY_GROUP`) of the anomaly
            group.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Specify the pagination token that's returned by a previous
            request to retrieve the next page of results.
      required:
      - AnomalyDetectorArn
      - AnomalyGroupId
    ListAnomalyGroupRelatedMetricsResponse:
      type: object
      properties:
        InterMetricImpactList:
          allOf:
          - $ref: '#/components/schemas/InterMetricImpactList'
          description: Aggregated details about the measures contributing to the anomaly
            group, and the measures potentially impacted by the anomaly group.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token that's included if more results are available.
    ListAnomalyGroupSummariesRequest:
      type: object
      properties:
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the anomaly detector.
        SensitivityThreshold:
          allOf:
          - $ref: '#/components/schemas/SensitivityThreshold'
          description: The minimum severity score for inclusion in the output.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Specify the pagination token that's returned by a previous
            request to retrieve the next page of results.
      required:
      - AnomalyDetectorArn
      - SensitivityThreshold
    ListAnomalyGroupSummariesResponse:
      type: object
      properties:
        AnomalyGroupSummaryList:
          allOf:
          - $ref: '#/components/schemas/AnomalyGroupSummaryList'
          description: A list of anomaly group summaries.
        AnomalyGroupStatistics:
          allOf:
          - $ref: '#/components/schemas/AnomalyGroupStatistics'
          description: Aggregated details about the anomaly groups.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token that's included if more results are available.
    ListAnomalyGroupTimeSeriesRequest:
      type: object
      properties:
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the anomaly detector.
        AnomalyGroupId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The ID of the anomaly group.
        MetricName:
          allOf:
          - $ref: '#/components/schemas/MetricName'
          description: The name of the measure field.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Specify the pagination token that's returned by a previous
            request to retrieve the next page of results.
      required:
      - AnomalyDetectorArn
      - AnomalyGroupId
      - MetricName
    ListAnomalyGroupTimeSeriesResponse:
      type: object
      properties:
        AnomalyGroupId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The ID of the anomaly group.
        MetricName:
          allOf:
          - $ref: '#/components/schemas/MetricName'
          description: The name of the measure field.
        TimestampList:
          allOf:
          - $ref: '#/components/schemas/TimestampList'
          description: Timestamps for the anomalous metrics.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token that's included if more results are available.
        TimeSeriesList:
          allOf:
          - $ref: '#/components/schemas/TimeSeriesList'
          description: A list of anomalous metrics.
    ListMetricSetsRequest:
      type: object
      properties:
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the anomaly detector containing the metrics sets
            to list.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If the result of the previous request was truncated, the response
            includes a `NextToken`. To retrieve the next set of results, use the token
            in the next request. Tokens expire after 24 hours.
    ListMetricSetsResponse:
      type: object
      properties:
        MetricSetSummaryList:
          allOf:
          - $ref: '#/components/schemas/MetricSetSummaryList'
          description: A list of the datasets in the AWS Region, with configuration
            details for each.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If the response is truncated, the list call returns this token.
            To retrieve the next set of results, use the token in the next list request.
    ListTagsForResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The resource's Amazon Resource Name (ARN).
      required:
      - ResourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The resource's tags.
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    Message:
      type: string
    Metric:
      type: object
      properties:
        MetricName:
          allOf:
          - $ref: '#/components/schemas/ColumnName'
          description: The name of the metric.
        AggregationFunction:
          allOf:
          - $ref: '#/components/schemas/AggregationFunction'
          description: The function with which the metric is calculated.
        Namespace:
          allOf:
          - $ref: '#/components/schemas/Namespace'
          description: The namespace for the metric.
      required:
      - MetricName
      - AggregationFunction
      description: A calculation made by contrasting a measure and a dimension from
        your source data.
    MetricChangePercentage:
      type: number
      format: double
      minimum: 0.0
      maximum: 100.0
    MetricLevelImpact:
      type: object
      properties:
        MetricName:
          allOf:
          - $ref: '#/components/schemas/MetricName'
          description: The name of the measure.
        NumTimeSeries:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of anomalous metrics for the measure.
        ContributionMatrix:
          allOf:
          - $ref: '#/components/schemas/ContributionMatrix'
          description: Details about the dimensions that contributed to the anomaly.
      description: Details about a measure affected by an anomaly.
    MetricLevelImpactList:
      type: array
      items:
        $ref: '#/components/schemas/MetricLevelImpact'
    MetricList:
      type: array
      items:
        $ref: '#/components/schemas/Metric'
    MetricName:
      type: string
      pattern: ^[a-zA-Z0-9][a-zA-Z0-9\-_]*$
      minLength: 0
      maxLength: 256
    MetricNameList:
      type: array
      items:
        $ref: '#/components/schemas/MetricName'
    MetricSetDataQualityMetric:
      type: object
      properties:
        MetricSetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the data quality metric array.
        DataQualityMetricList:
          allOf:
          - $ref: '#/components/schemas/DataQualityMetricList'
          description: The array of data quality metrics contained in the data quality
            metric set.
      description: An array of `DataQualityMetric` objects that describes one or more
        data quality metrics.
    MetricSetDataQualityMetricList:
      type: array
      items:
        $ref: '#/components/schemas/MetricSetDataQualityMetric'
    MetricSetDescription:
      type: string
      pattern: \S
      minLength: 1
      maxLength: 256
    MetricSetDimensionFilter:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ColumnName'
          description: The dimension that you want to filter on.
        FilterList:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          description: The list of filters that you are applying.
      description: Describes a list of filters for choosing a subset of dimension
        values. Each filter consists of the dimension and one of its values that you
        want to include. When multiple dimensions or values are specified, the dimensions
        are joined with an AND operation and the values are joined with an OR operation.
    MetricSetDimensionFilterList:
      type: array
      items:
        $ref: '#/components/schemas/MetricSetDimensionFilter'
    MetricSetName:
      type: string
      pattern: ^[a-zA-Z0-9][a-zA-Z0-9\-_]*$
      minLength: 1
      maxLength: 63
    MetricSetSummary:
      type: object
      properties:
        MetricSetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the dataset.
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the detector to which the dataset belongs.
        MetricSetDescription:
          allOf:
          - $ref: '#/components/schemas/MetricSetDescription'
          description: The description of the dataset.
        MetricSetName:
          allOf:
          - $ref: '#/components/schemas/MetricSetName'
          description: The name of the dataset.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the dataset was created.
        LastModificationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the dataset was last modified.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The dataset's [tags](https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html).
      description: Contains information about a dataset.
    MetricSetSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/MetricSetSummary'
    MetricSource:
      type: object
      properties:
        S3SourceConfig:
          $ref: '#/components/schemas/S3SourceConfig'
        AppFlowConfig:
          allOf:
          - $ref: '#/components/schemas/AppFlowConfig'
          description: Details about an AppFlow datasource.
        CloudWatchConfig:
          allOf:
          - $ref: '#/components/schemas/CloudWatchConfig'
          description: Details about an Amazon CloudWatch monitoring datasource.
        RDSSourceConfig:
          allOf:
          - $ref: '#/components/schemas/RDSSourceConfig'
          description: Details about an Amazon Relational Database Service (RDS) datasource.
        RedshiftSourceConfig:
          allOf:
          - $ref: '#/components/schemas/RedshiftSourceConfig'
          description: Details about an Amazon Redshift database datasource.
        AthenaSourceConfig:
          allOf:
          - $ref: '#/components/schemas/AthenaSourceConfig'
          description: Details about an Amazon Athena datasource.
      description: Contains information about source data used to generate metrics.
    MetricValue:
      type: number
      format: double
    MetricValueList:
      type: array
      items:
        $ref: '#/components/schemas/MetricValue'
    Namespace:
      type: string
      pattern: ^[^:]
      minLength: 1
      maxLength: 255
    NextToken:
      type: string
      pattern: \S
      minLength: 1
      maxLength: 3000
    NumberAttributeValue:
      type: string
    NumberListAttributeValue:
      type: array
      items:
        $ref: '#/components/schemas/NumberAttributeValue'
    Offset:
      type: integer
      default: 0
      minimum: 0
      maximum: 432000
    PoirotSecretManagerArn:
      type: string
      pattern: ^arn:([a-z\d-]+):.*:.*:secret:AmazonLookoutMetrics-.+$
      minLength: 0
      maxLength: 256
    PutFeedbackRequest:
      type: object
      properties:
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the anomaly detector.
        AnomalyGroupTimeSeriesFeedback:
          allOf:
          - $ref: '#/components/schemas/AnomalyGroupTimeSeriesFeedback'
          description: Feedback for an anomalous metric.
      required:
      - AnomalyDetectorArn
      - AnomalyGroupTimeSeriesFeedback
    PutFeedbackResponse:
      type: object
      properties: {}
    QuotaCode:
      type: string
    QuoteSymbol:
      type: string
      pattern: ^[^\r\n]|^$
      minLength: 0
      maxLength: 1
    RDSDatabaseIdentifier:
      type: string
      pattern: ^[a-zA-Z](?!.*--)(?!.*-$)[0-9a-zA-Z\-]*$
      minLength: 1
      maxLength: 63
    RDSDatabaseName:
      type: string
      pattern: ^[a-zA-Z0-9_.]+$
      minLength: 1
      maxLength: 64
    RDSSourceConfig:
      type: object
      properties:
        DBInstanceIdentifier:
          allOf:
          - $ref: '#/components/schemas/RDSDatabaseIdentifier'
          description: A string identifying the database instance.
        DatabaseHost:
          allOf:
          - $ref: '#/components/schemas/DatabaseHost'
          description: The host name of the database.
        DatabasePort:
          allOf:
          - $ref: '#/components/schemas/DatabasePort'
          description: The port number where the database can be accessed.
        SecretManagerArn:
          allOf:
          - $ref: '#/components/schemas/PoirotSecretManagerArn'
          description: The Amazon Resource Name (ARN) of the AWS Secrets Manager role.
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/RDSDatabaseName'
          description: The name of the RDS database.
        TableName:
          allOf:
          - $ref: '#/components/schemas/TableName'
          description: The name of the table in the database.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the role.
        VpcConfiguration:
          allOf:
          - $ref: '#/components/schemas/VpcConfiguration'
          description: An object containing information about the Amazon Virtual Private
            Cloud (VPC) configuration.
      description: Contains information about the Amazon Relational Database Service
        (RDS) configuration.
    RedshiftClusterIdentifier:
      type: string
      pattern: ^[a-z](?!.*--)(?!.*-$)[0-9a-z\-]*$
      minLength: 1
      maxLength: 63
    RedshiftDatabaseName:
      type: string
      pattern: ^[a-zA-Z0-9_.]+$
      minLength: 1
      maxLength: 100
    RedshiftSourceConfig:
      type: object
      properties:
        ClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/RedshiftClusterIdentifier'
          description: A string identifying the Redshift cluster.
        DatabaseHost:
          allOf:
          - $ref: '#/components/schemas/DatabaseHost'
          description: The name of the database host.
        DatabasePort:
          allOf:
          - $ref: '#/components/schemas/DatabasePort'
          description: The port number where the database can be accessed.
        SecretManagerArn:
          allOf:
          - $ref: '#/components/schemas/PoirotSecretManagerArn'
          description: The Amazon Resource Name (ARN) of the AWS Secrets Manager role.
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/RedshiftDatabaseName'
          description: The Redshift database name.
        TableName:
          allOf:
          - $ref: '#/components/schemas/TableName'
          description: The table name of the Redshift database.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the role providing access
            to the database.
        VpcConfiguration:
          allOf:
          - $ref: '#/components/schemas/VpcConfiguration'
          description: Contains information about the Amazon Virtual Private Cloud
            (VPC) configuration.
      description: Provides information about the Amazon Redshift database configuration.
    RelatedColumnName:
      type: string
      pattern: \S
      minLength: 1
      maxLength: 256
    RelationshipType:
      type: string
      enum:
      - CAUSE_OF_INPUT_ANOMALY_GROUP
      - EFFECT_OF_INPUT_ANOMALY_GROUP
    ResourceId:
      type: string
    ResourceNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: The ID of the resource.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The type of the resource.
      required:
      - Message
      description: The specified resource cannot be found. Check the ARN of the resource
        and try again.
    ResourceType:
      type: string
    S3SourceConfig:
      type: object
      properties:
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of an IAM role that has read and write access permissions
            to the source S3 bucket.
        TemplatedPathList:
          allOf:
          - $ref: '#/components/schemas/TemplatedPathList'
          description: A list of templated paths to the source files.
        HistoricalDataPathList:
          allOf:
          - $ref: '#/components/schemas/HistoricalDataPathList'
          description: A list of paths to the historical data files.
        FileFormatDescriptor:
          allOf:
          - $ref: '#/components/schemas/FileFormatDescriptor'
          description: Contains information about a source file's formatting.
      description: Contains information about the configuration of the S3 bucket that
        contains source files.
    SNSConfiguration:
      type: object
      properties:
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the IAM role that has access to the target SNS topic.
        SnsTopicArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the target SNS topic.
        SnsFormat:
          allOf:
          - $ref: '#/components/schemas/SnsFormat'
          description: "The format of the SNS topic.\n\n  * `JSON` – Send JSON alerts\
            \ with an anomaly ID and a link to the anomaly detail page. This is the\
            \ default.\n\n  * `LONG_TEXT` – Send human-readable alerts with information\
            \ about the impacted timeseries and a link to the anomaly detail page.\
            \ We recommend this for email.\n\n  * `SHORT_TEXT` – Send human-readable\
            \ alerts with a link to the anomaly detail page. We recommend this for\
            \ SMS."
      required:
      - RoleArn
      - SnsTopicArn
      description: Contains information about the SNS topic to which you want to send
        your alerts and the IAM role that has access to that topic.
    SampleDataS3SourceConfig:
      type: object
      properties:
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the role.
        TemplatedPathList:
          allOf:
          - $ref: '#/components/schemas/TemplatedPathList'
          description: An array of strings containing the list of templated paths.
        HistoricalDataPathList:
          allOf:
          - $ref: '#/components/schemas/HistoricalDataPathList'
          description: An array of strings containing the historical set of data paths.
        FileFormatDescriptor:
          $ref: '#/components/schemas/FileFormatDescriptor'
      required:
      - RoleArn
      - FileFormatDescriptor
      description: Contains information about the source configuration in Amazon S3.
    SampleRow:
      type: array
      items:
        $ref: '#/components/schemas/DataItem'
    SampleRows:
      type: array
      items:
        $ref: '#/components/schemas/SampleRow'
    Score:
      type: number
      format: double
      minimum: 0.0
      maximum: 100.0
    SecurityGroupId:
      type: string
      pattern: ^[-0-9a-zA-Z]+$
      minLength: 1
      maxLength: 255
    SecurityGroupIdList:
      type: array
      items:
        $ref: '#/components/schemas/SecurityGroupId'
    SensitivityThreshold:
      type: integer
      default: 0
      minimum: 0
      maximum: 100
    ServiceCode:
      type: string
    ServiceQuotaExceededException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: The ID of the resource.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The type of the resource.
        QuotaCode:
          allOf:
          - $ref: '#/components/schemas/QuotaCode'
          description: The quota code.
        ServiceCode:
          allOf:
          - $ref: '#/components/schemas/ServiceCode'
          description: The service code.
      required:
      - Message
      description: The request exceeded the service's quotas. Check the service quotas
        and try again.
    SnsFormat:
      type: string
      enum:
      - LONG_TEXT
      - SHORT_TEXT
      - JSON
    StringAttributeValue:
      type: string
    StringListAttributeValue:
      type: array
      items:
        $ref: '#/components/schemas/StringAttributeValue'
    SubnetId:
      type: string
      pattern: ^[\-0-9a-zA-Z]+$
      minLength: 0
      maxLength: 255
    SubnetIdList:
      type: array
      items:
        $ref: '#/components/schemas/SubnetId'
    TableName:
      type: string
      pattern: ^[a-zA-Z][a-zA-Z0-9_.]*$
      minLength: 1
      maxLength: 100
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The resource's Amazon Resource Name (ARN).
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'Tags to apply to the resource. Tag keys and values can contain
            letters, numbers, spaces, and the following symbols: `_.:/=+@-`'
      required:
      - ResourceArn
      - Tags
    TagResourceResponse:
      type: object
      properties: {}
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    TemplatedPath:
      type: string
      pattern: ^s3://[a-zA-Z0-9_\-\/ {}=]+$
      minLength: 0
      maxLength: 1024
    TemplatedPathList:
      type: array
      items:
        $ref: '#/components/schemas/TemplatedPath'
    TimeSeries:
      type: object
      properties:
        TimeSeriesId:
          allOf:
          - $ref: '#/components/schemas/TimeSeriesId'
          description: The ID of the metric.
        DimensionList:
          allOf:
          - $ref: '#/components/schemas/DimensionNameValueList'
          description: The dimensions of the metric.
        MetricValueList:
          allOf:
          - $ref: '#/components/schemas/MetricValueList'
          description: The values for the metric.
      required:
      - TimeSeriesId
      - DimensionList
      - MetricValueList
      description: Details about a metric. A metric is an aggregation of the values
        of a measure for a dimension value, such as _availability_ in the _us-east-1_
        Region.
    TimeSeriesFeedback:
      type: object
      properties:
        TimeSeriesId:
          allOf:
          - $ref: '#/components/schemas/TimeSeriesId'
          description: The ID of the metric.
        IsAnomaly:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Feedback on whether the metric is a legitimate anomaly.
      description: Details about feedback submitted for an anomalous metric.
    TimeSeriesFeedbackList:
      type: array
      items:
        $ref: '#/components/schemas/TimeSeriesFeedback'
    TimeSeriesId:
      type: string
      pattern: \S
      minLength: 0
      maxLength: 520
    TimeSeriesList:
      type: array
      items:
        $ref: '#/components/schemas/TimeSeries'
    Timestamp:
      type: string
      format: date-time
    TimestampColumn:
      type: object
      properties:
        ColumnName:
          allOf:
          - $ref: '#/components/schemas/ColumnName'
          description: The name of the timestamp column.
        ColumnFormat:
          allOf:
          - $ref: '#/components/schemas/DateTimeFormat'
          description: The format of the timestamp column.
      description: Contains information about the column used to track time in a source
        data file.
    TimestampList:
      type: array
      items:
        $ref: '#/components/schemas/TimestampString'
    TimestampString:
      type: string
      pattern: ^([12]\d{3})-(1[0-2]|0[1-9])-(0[1-9]|[12]\d|3[01])T([01]\d|2[0-3]):([0-5]\d):([0-5]\d)(Z|(\+|\-)(0\d|1[0-2]):([0-5]\d)(\[[[:alnum:]\/\_]+\])?)$
      minLength: 0
      maxLength: 60
    Timezone:
      type: string
      pattern: \S
      minLength: 0
      maxLength: 60
    TooManyRequestsException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
      required:
      - Message
      description: The request was denied due to too many requests being submitted
        at the same time.
    UUID:
      type: string
      pattern: ^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$
      minLength: 0
      maxLength: 63
    UntagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The resource's Amazon Resource Name (ARN).
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: Keys to remove from the resource's tags.
      required:
      - ResourceArn
      - TagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateAlertRequest:
      type: object
      properties:
        AlertArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the alert to update.
        AlertDescription:
          allOf:
          - $ref: '#/components/schemas/AlertDescription'
          description: A description of the alert.
        AlertSensitivityThreshold:
          allOf:
          - $ref: '#/components/schemas/SensitivityThreshold'
          description: An integer from 0 to 100 specifying the alert sensitivity threshold.
        Action:
          allOf:
          - $ref: '#/components/schemas/Action'
          description: Action that will be triggered when there is an alert.
        AlertFilters:
          allOf:
          - $ref: '#/components/schemas/AlertFilters'
          description: The configuration of the alert filters, containing MetricList
            and DimensionFilterList.
      required:
      - AlertArn
    UpdateAlertResponse:
      type: object
      properties:
        AlertArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the updated alert.
    UpdateAnomalyDetectorRequest:
      type: object
      properties:
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the detector to update.
        KmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          description: The Amazon Resource Name (ARN) of an AWS KMS encryption key.
        AnomalyDetectorDescription:
          allOf:
          - $ref: '#/components/schemas/AnomalyDetectorDescription'
          description: The updated detector description.
        AnomalyDetectorConfig:
          allOf:
          - $ref: '#/components/schemas/AnomalyDetectorConfig'
          description: Contains information about the configuration to which the detector
            will be updated.
      required:
      - AnomalyDetectorArn
    UpdateAnomalyDetectorResponse:
      type: object
      properties:
        AnomalyDetectorArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the updated detector.
    UpdateMetricSetRequest:
      type: object
      properties:
        MetricSetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the dataset to update.
        MetricSetDescription:
          allOf:
          - $ref: '#/components/schemas/MetricSetDescription'
          description: The dataset's description.
        MetricList:
          allOf:
          - $ref: '#/components/schemas/MetricList'
          description: The metric list.
        Offset:
          allOf:
          - $ref: '#/components/schemas/Offset'
          description: After an interval ends, the amount of seconds that the detector
            waits before importing data. Offset is only supported for S3, Redshift,
            Athena and datasources.
        TimestampColumn:
          allOf:
          - $ref: '#/components/schemas/TimestampColumn'
          description: The timestamp column.
        DimensionList:
          allOf:
          - $ref: '#/components/schemas/DimensionList'
          description: The dimension list.
        MetricSetFrequency:
          allOf:
          - $ref: '#/components/schemas/Frequency'
          description: The dataset's interval.
        MetricSource:
          $ref: '#/components/schemas/MetricSource'
        DimensionFilterList:
          allOf:
          - $ref: '#/components/schemas/MetricSetDimensionFilterList'
          description: Describes a list of filters for choosing specific dimensions
            and specific values. Each filter consists of the dimension and one of
            its values that you want to include. When multiple dimensions or values
            are specified, the dimensions are joined with an AND operation and the
            values are joined with an OR operation.
      required:
      - MetricSetArn
    UpdateMetricSetResponse:
      type: object
      properties:
        MetricSetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the dataset.
    ValidationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
        Reason:
          allOf:
          - $ref: '#/components/schemas/ValidationExceptionReason'
          description: The reason that validation failed.
        Fields:
          allOf:
          - $ref: '#/components/schemas/ValidationExceptionFieldList'
          description: Fields that failed validation.
      required:
      - Message
      description: The input fails to satisfy the constraints specified by the AWS
        service. Check your input values and try again.
    ValidationExceptionField:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/FieldName'
          description: The name of the field.
        Message:
          allOf:
          - $ref: '#/components/schemas/Message'
          description: The message with more information about the validation exception.
      required:
      - Name
      - Message
      description: Contains information about a a field in a validation exception.
    ValidationExceptionFieldList:
      type: array
      items:
        $ref: '#/components/schemas/ValidationExceptionField'
    ValidationExceptionReason:
      type: string
      enum:
      - UNKNOWN_OPERATION
      - CANNOT_PARSE
      - FIELD_VALIDATION_FAILED
      - OTHER
    VpcConfiguration:
      type: object
      properties:
        SubnetIdList:
          allOf:
          - $ref: '#/components/schemas/SubnetIdList'
          description: An array of strings containing the Amazon VPC subnet IDs (e.g.,
            `subnet-0bb1c79de3EXAMPLE`.
        SecurityGroupIdList:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupIdList'
          description: An array of strings containing the list of security groups.
      required:
      - SubnetIdList
      - SecurityGroupIdList
      description: Contains configuration information about the Amazon Virtual Private
        Cloud (VPC).
