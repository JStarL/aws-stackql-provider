openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: appconfig
  x-aws-serviceName: appconfig
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-05'
  version: '2019-10-09'
  title: Amazon AppConfig
  description: "AppConfig feature flags and dynamic configurations help software builders\
    \ quickly and securely adjust application behavior in production environments\
    \ without full code deployments. AppConfig speeds up software release frequency,\
    \ improves application resiliency, and helps you address emergent issues more\
    \ quickly. With feature flags, you can gradually release new capabilities to users\
    \ and measure the impact of those changes before fully deploying the new capabilities\
    \ to all users. With operational flags and dynamic configurations, you can update\
    \ block lists, allow lists, throttling limits, logging verbosity, and perform\
    \ other operational tuning to quickly respond to issues in production environments.\n\
    \nAppConfig is a capability of Amazon Web Services Systems Manager.\n\nDespite\
    \ the fact that application configuration content can vary greatly from application\
    \ to application, AppConfig supports the following use cases, which cover a broad\
    \ spectrum of customer needs:\n\n  * **Feature flags and toggles** \\- Safely\
    \ release new capabilities to your customers in a controlled environment. Instantly\
    \ roll back changes if you experience a problem.\n\n  * **Application tuning**\
    \ \\- Carefully introduce application changes while testing the impact of those\
    \ changes with users in production environments.\n\n  * **Allow list or block\
    \ list** \\- Control access to premium features or instantly block specific users\
    \ without deploying new code. \n\n  * **Centralized configuration storage** \\\
    - Keep your configuration data organized and consistent across all of your workloads.\
    \ You can use AppConfig to deploy configuration data stored in the AppConfig hosted\
    \ configuration store, Secrets Manager, Systems Manager, Parameter Store, or Amazon\
    \ S3.\n\n**How AppConfig works**\n\nThis section provides a high-level description\
    \ of how AppConfig works and how you get started.\n\n1\\. Identify configuration\
    \ values in code you want to manage in the cloud\n\n    \n\nBefore you start creating\
    \ AppConfig artifacts, we recommend you identify configuration data in your code\
    \ that you want to dynamically manage using AppConfig. Good examples include feature\
    \ flags or toggles, allow and block lists, logging verbosity, service limits,\
    \ and throttling rules, to name a few.\n\nIf your configuration data already exists\
    \ in the cloud, you can take advantage of AppConfig validation, deployment, and\
    \ extension features to further streamline configuration data management.\n\n\
    2\\. Create an application namespace\n\n    \n\nTo create a namespace, you create\
    \ an AppConfig artifact called an application. An application is simply an organizational\
    \ construct like a folder.\n\n3\\. Create environments\n\n    \n\nFor each AppConfig\
    \ application, you define one or more environments. An environment is a logical\
    \ grouping of targets, such as applications in a `Beta` or `Production` environment,\
    \ Lambda functions, or containers. You can also define environments for application\
    \ subcomponents, such as the `Web`, `Mobile`, and `Back-end`.\n\nYou can configure\
    \ Amazon CloudWatch alarms for each environment. The system monitors alarms during\
    \ a configuration deployment. If an alarm is triggered, the system rolls back\
    \ the configuration.\n\n4\\. Create a configuration profile\n\n    \n\nA configuration\
    \ profile includes, among other things, a URI that enables AppConfig to locate\
    \ your configuration data in its stored location and a profile type. AppConfig\
    \ supports two configuration profile types: feature flags and freeform configurations.\
    \ Feature flag configuration profiles store their data in the AppConfig hosted\
    \ configuration store and the URI is simply `hosted`. For freeform configuration\
    \ profiles, you can store your data in the AppConfig hosted configuration store\
    \ or any Amazon Web Services service that integrates with AppConfig, as described\
    \ in [Creating a free form configuration profile](http://docs.aws.amazon.com/appconfig/latest/userguide/appconfig-free-form-configurations-creating.html)\
    \ in the the _AppConfig User Guide_.\n\nA configuration profile can also include\
    \ optional validators to ensure your configuration data is syntactically and semantically\
    \ correct. AppConfig performs a check using the validators when you start a deployment.\
    \ If any errors are detected, the deployment rolls back to the previous configuration\
    \ data.\n\n5\\. Deploy configuration data\n\n    \n\nWhen you create a new deployment,\
    \ you specify the following:\n\n  * An application ID\n\n  * A configuration profile\
    \ ID\n\n  * A configuration version\n\n  * An environment ID where you want to\
    \ deploy the configuration data\n\n  * A deployment strategy ID that defines how\
    \ fast you want the changes to take effect\n\nWhen you call the [StartDeployment](https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/API_StartDeployment.html)\
    \ API action, AppConfig performs the following tasks:\n\n  1. Retrieves the configuration\
    \ data from the underlying data store by using the location URI in the configuration\
    \ profile.\n\n  2. Verifies the configuration data is syntactically and semantically\
    \ correct by using the validators you specified when you created your configuration\
    \ profile.\n\n  3. Caches a copy of the data so it is ready to be retrieved by\
    \ your application. This cached copy is called the _deployed data_.\n\n6\\. Retrieve\
    \ the configuration\n\n    \n\nYou can configure AppConfig Agent as a local host\
    \ and have the agent poll AppConfig for configuration updates. The agent calls\
    \ the [StartConfigurationSession](https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/API_appconfigdata_StartConfigurationSession.html)\
    \ and [GetLatestConfiguration](https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/API_appconfigdata_GetLatestConfiguration.html)\
    \ API actions and caches your configuration data locally. To retrieve the data,\
    \ your application makes an HTTP call to the localhost server. AppConfig Agent\
    \ supports several use cases, as described in [Simplified retrieval methods](http://docs.aws.amazon.com/appconfig/latest/userguide/appconfig-retrieving-simplified-methods.html)\
    \ in the the _AppConfig User Guide_.\n\nIf AppConfig Agent isn't supported for\
    \ your use case, you can configure your application to poll AppConfig for configuration\
    \ updates by directly calling the [StartConfigurationSession](https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/API_appconfigdata_StartConfigurationSession.html)\
    \ and [GetLatestConfiguration](https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/API_appconfigdata_GetLatestConfiguration.html)\
    \ API actions.\n\nThis reference is intended to be used with the [AppConfig User\
    \ Guide](http://docs.aws.amazon.com/appconfig/latest/userguide/what-is-appconfig.html)."
servers:
- description: The Amazon AppConfig regional endpoint
  url: https://appconfig.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths: {}
components:
  schemas:
    ActionInvocations:
      type: array
      items:
        $ref: '#/components/schemas/ActionInvocation'
    ActionList:
      type: array
      items:
        $ref: '#/components/schemas/Action'
    ActionPoint:
      type: string
      enum:
      - PRE_CREATE_HOSTED_CONFIGURATION_VERSION
      - PRE_START_DEPLOYMENT
      - AT_DEPLOYMENT_TICK
      - ON_DEPLOYMENT_START
      - ON_DEPLOYMENT_STEP
      - ON_DEPLOYMENT_BAKING
      - ON_DEPLOYMENT_COMPLETE
      - ON_DEPLOYMENT_ROLLED_BACK
    ActionsMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ActionList'
    ApplicationList:
      type: array
      items:
        $ref: '#/components/schemas/Application'
    AppliedExtensions:
      type: array
      items:
        $ref: '#/components/schemas/AppliedExtension'
    Arn:
      type: string
      pattern: ^arn:(aws[a-zA-Z-]*)?:[a-z]+:([a-z]{2}((-gov)|(-iso([a-z]?)))?-[a-z]+-\d{1})?:(\d{12})?:[a-zA-Z0-9-_/:.]+$
      minLength: 20
      maxLength: 2048
    BadRequestDetails:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/InvalidConfigurationDetailList'
        description: |-
          Detailed information about the bad request exception error when creating a hosted configuration version.
      description: |-
        Detailed information about the input that failed to satisfy the constraints specified by a call.
    BadRequestReason:
      type: string
      enum:
      - InvalidConfiguration
    Blob:
      type: string
      format: byte
      x-sensitive: true
    Boolean:
      type: boolean
      default: false
    BytesMeasure:
      type: string
      enum:
      - KILOBYTES
    ConfigurationProfileSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ConfigurationProfileSummary'
    ConfigurationProfileType:
      type: string
      pattern: ^[a-zA-Z\.]+$
    DeletionProtectionCheck:
      type: string
      enum:
      - ACCOUNT_DEFAULT
      - APPLY
      - BYPASS
    DeletionProtectionDuration:
      type: integer
      minimum: 15
      maximum: 1440
    DeploymentEventType:
      type: string
      enum:
      - PERCENTAGE_UPDATED
      - ROLLBACK_STARTED
      - ROLLBACK_COMPLETED
      - BAKE_TIME_STARTED
      - DEPLOYMENT_STARTED
      - DEPLOYMENT_COMPLETED
      - REVERT_COMPLETED
    DeploymentEvents:
      type: array
      items:
        $ref: '#/components/schemas/DeploymentEvent'
    DeploymentList:
      type: array
      items:
        $ref: '#/components/schemas/DeploymentSummary'
    DeploymentState:
      type: string
      enum:
      - BAKING
      - VALIDATING
      - DEPLOYING
      - COMPLETE
      - ROLLING_BACK
      - ROLLED_BACK
      - REVERTED
    DeploymentStrategyId:
      type: string
      pattern: ^(^[a-z0-9]{4,7}$|^AppConfig\.[A-Za-z0-9]{9,40}$)$
    DeploymentStrategyList:
      type: array
      items:
        $ref: '#/components/schemas/DeploymentStrategy'
    Description:
      type: string
      minLength: 0
      maxLength: 1024
    DynamicParameterKey:
      type: string
      pattern: ^([^#\n]{1,96})#([^\/#\n]{1,64})$
    DynamicParameterMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/StringWithLengthBetween1And2048'
    EnvironmentList:
      type: array
      items:
        $ref: '#/components/schemas/Environment'
    EnvironmentState:
      type: string
      enum:
      - READY_FOR_DEPLOYMENT
      - DEPLOYING
      - ROLLING_BACK
      - ROLLED_BACK
      - REVERTED
    ExtensionAssociationSummaries:
      type: array
      items:
        $ref: '#/components/schemas/ExtensionAssociationSummary'
    ExtensionOrParameterName:
      type: string
      pattern: ^[^\/#:\n]{1,64}$
    ExtensionSummaries:
      type: array
      items:
        $ref: '#/components/schemas/ExtensionSummary'
    Float:
      type: number
      format: float
      default: 0
    GrowthFactor:
      type: number
      format: float
      minimum: 1.0
      maximum: 100.0
    GrowthType:
      type: string
      enum:
      - LINEAR
      - EXPONENTIAL
    HostedConfigurationVersionSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/HostedConfigurationVersionSummary'
    Id:
      type: string
      pattern: ^[a-z0-9]{4,7}$
    Identifier:
      type: string
      minLength: 1
      maxLength: 2048
    Integer:
      type: integer
      default: 0
    InvalidConfigurationDetailList:
      type: array
      items:
        $ref: '#/components/schemas/InvalidConfigurationDetail'
    Iso8601DateTime:
      type: string
      format: date-time
    KmsKeyIdentifier:
      type: string
      minLength: 1
      maxLength: 2048
    KmsKeyIdentifierOrEmpty:
      type: string
      minLength: 0
      maxLength: 2048
    LongName:
      type: string
      minLength: 1
      maxLength: 128
    MaxResults:
      type: integer
      minimum: 1
      maximum: 50
    MinutesBetween0And24Hours:
      type: integer
      default: 0
      minimum: 0
      maximum: 1440
    MonitorList:
      type: array
      items:
        $ref: '#/components/schemas/Monitor'
    Name:
      type: string
      minLength: 1
      maxLength: 64
    NextToken:
      type: string
      minLength: 1
      maxLength: 2048
    ParameterMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Parameter'
    ParameterValueMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/StringWithLengthBetween1And2048'
    Percentage:
      type: number
      format: float
      minimum: 1.0
      maximum: 100.0
    QueryName:
      type: string
      minLength: 1
      maxLength: 64
    ReplicateTo:
      type: string
      enum:
      - NONE
      - SSM_DOCUMENT
    RoleArn:
      type: string
      pattern: ^((arn):(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):(iam)::\d{12}:role[/].*)$
      minLength: 20
      maxLength: 2048
    String:
      type: string
    StringWithLengthBetween0And32768:
      type: string
      minLength: 0
      maxLength: 32768
    StringWithLengthBetween1And2048:
      type: string
      minLength: 1
      maxLength: 2048
    StringWithLengthBetween1And255:
      type: string
      minLength: 1
      maxLength: 255
    StringWithLengthBetween1And64:
      type: string
      minLength: 1
      maxLength: 64
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    TriggeredBy:
      type: string
      enum:
      - USER
      - APPCONFIG
      - CLOUDWATCH_ALARM
      - INTERNAL_ERROR
    Uri:
      type: string
      minLength: 1
      maxLength: 2048
    ValidatorList:
      type: array
      items:
        $ref: '#/components/schemas/Validator'
    ValidatorType:
      type: string
      enum:
      - JSON_SCHEMA
      - LAMBDA
    ValidatorTypeList:
      type: array
      items:
        $ref: '#/components/schemas/ValidatorType'
    Version:
      type: string
      minLength: 1
      maxLength: 1024
    VersionLabel:
      type: string
      pattern: '[^0-9]'
      minLength: 1
      maxLength: 64
