openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: inspector2
  x-aws-serviceName: inspector2
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2020-06-08'
  title: Inspector2
  description: |-
    Amazon Inspector is a vulnerability discovery service that automates continuous scanning for security vulnerabilities within your Amazon EC2, Amazon ECR, and Amazon Web Services Lambda environments.
servers:
- description: The Inspector2 regional endpoint
  url: https://inspector2.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /members/associate:
    post:
      operationId: AssociateMember
      description: |-
        Associates an Amazon Web Services account with an Amazon Inspector delegated administrator. An HTTP 200 response indicates the association was successfully started, but doesnâ€™t indicate whether it was completed. You can check if the association completed by using [ListMembers](https://docs.aws.amazon.com/inspector/v2/APIReference/API_ListMembers.html) for multiple accounts or [GetMembers](https://docs.aws.amazon.com/inspector/v2/APIReference/API_GetMember.html) for a single account.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accountId:
                  $ref: '#/components/schemas/AccountId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            You have exceeded your service quota. To perform the requested action, remove some of the relevant resources, or use Service Quotas to request a service quota increase.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /status/batch/get:
    post:
      operationId: BatchGetAccountStatus
      description: |-
        Retrieves the Amazon Inspector status of multiple Amazon Web Services accounts within your environment.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accountIds:
                  $ref: '#/components/schemas/AccountIdSet'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access an invalid resource. Make sure the resource is specified correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /codesnippet/batchget:
    post:
      operationId: BatchGetCodeSnippet
      description: |-
        Retrieves code snippets from findings that Amazon Inspector detected code vulnerabilities in.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                findingArns:
                  $ref: '#/components/schemas/FindingArns'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /findings/details/batch/get:
    post:
      operationId: BatchGetFindingDetails
      description: |-
        Gets vulnerability details for findings.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                findingArns:
                  $ref: '#/components/schemas/FindingArnList'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /freetrialinfo/batchget:
    post:
      operationId: BatchGetFreeTrialInfo
      description: |-
        Gets free trial status for multiple Amazon Web Services accounts.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accountIds:
                  $ref: '#/components/schemas/MeteringAccountIdList'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /ec2deepinspectionstatus/member/batch/get:
    post:
      operationId: BatchGetMemberEc2DeepInspectionStatus
      description: |-
        Retrieves Amazon Inspector deep inspection activation status of multiple member accounts within your organization. You must be the delegated administrator of an organization in Amazon Inspector to use this API.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accountIds:
                  $ref: '#/components/schemas/AccountIdSet'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /ec2deepinspectionstatus/member/batch/update:
    post:
      operationId: BatchUpdateMemberEc2DeepInspectionStatus
      description: |-
        Activates or deactivates Amazon Inspector deep inspection for the provided member accounts in your organization. You must be the delegated administrator of an organization in Amazon Inspector to use this API.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accountIds:
                  $ref: '#/components/schemas/MemberAccountEc2DeepInspectionStatusList'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /reporting/cancel:
    post:
      operationId: CancelFindingsReport
      description: |-
        Cancels the given findings report.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reportId:
                  $ref: '#/components/schemas/ReportId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access an invalid resource. Make sure the resource is specified correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /sbomexport/cancel:
    post:
      operationId: CancelSbomExport
      description: |-
        Cancels a software bill of materials (SBOM) report.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reportId:
                  $ref: '#/components/schemas/ReportId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access an invalid resource. Make sure the resource is specified correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /cis/scan-configuration/create:
    post:
      operationId: CreateCisScanConfiguration
      description: |-
        Creates a CIS scan configuration.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                scanName:
                  $ref: '#/components/schemas/CisScanName'
                securityLevel:
                  $ref: '#/components/schemas/CisSecurityLevel'
                schedule:
                  $ref: '#/components/schemas/Schedule'
                targets:
                  $ref: '#/components/schemas/CreateCisTargets'
                tags:
                  $ref: '#/components/schemas/CisTagMap'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /filters/create:
    post:
      operationId: CreateFilter
      description: |-
        Creates a filter resource using specified filter criteria. When the filter action is set to `SUPPRESS` this action creates a suppression rule.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  $ref: '#/components/schemas/FilterAction'
                description:
                  $ref: '#/components/schemas/FilterDescription'
                filterCriteria:
                  $ref: '#/components/schemas/FilterCriteria'
                name:
                  $ref: '#/components/schemas/FilterName'
                tags:
                  $ref: '#/components/schemas/TagMap'
                reason:
                  $ref: '#/components/schemas/FilterReason'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            You have exceeded your service quota. To perform the requested action, remove some of the relevant resources, or use Service Quotas to request a service quota increase.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /reporting/create:
    post:
      operationId: CreateFindingsReport
      description: |-
        Creates a finding report. By default only `ACTIVE` findings are returned in the report. To see `SUPRESSED` or `CLOSED` findings you must specify a value for the `findingStatus` filter criteria.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filterCriteria:
                  $ref: '#/components/schemas/FilterCriteria'
                reportFormat:
                  $ref: '#/components/schemas/ReportFormat'
                s3Destination:
                  $ref: '#/components/schemas/Destination'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access an invalid resource. Make sure the resource is specified correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /sbomexport/create:
    post:
      operationId: CreateSbomExport
      description: |-
        Creates a software bill of materials (SBOM) report.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resourceFilterCriteria:
                  $ref: '#/components/schemas/ResourceFilterCriteria'
                reportFormat:
                  $ref: '#/components/schemas/SbomReportFormat'
                s3Destination:
                  $ref: '#/components/schemas/Destination'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access an invalid resource. Make sure the resource is specified correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /cis/scan-configuration/delete:
    post:
      operationId: DeleteCisScanConfiguration
      description: |-
        Deletes a CIS scan configuration.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                scanConfigurationArn:
                  $ref: '#/components/schemas/CisScanConfigurationArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access an invalid resource. Make sure the resource is specified correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /filters/delete:
    post:
      operationId: DeleteFilter
      description: |-
        Deletes a filter resource.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                arn:
                  $ref: '#/components/schemas/FilterArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access an invalid resource. Make sure the resource is specified correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /organizationconfiguration/describe:
    post:
      operationId: DescribeOrganizationConfiguration
      description: |-
        Describe Amazon Inspector configuration settings for an Amazon Web Services organization.
      parameters: []
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /disable:
    post:
      operationId: Disable
      description: |-
        Disables Amazon Inspector scans for one or more Amazon Web Services accounts. Disabling all scan types in an account disables the Amazon Inspector service.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accountIds:
                  $ref: '#/components/schemas/AccountIdSet'
                resourceTypes:
                  $ref: '#/components/schemas/DisableResourceTypeList'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access an invalid resource. Make sure the resource is specified correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /delegatedadminaccounts/disable:
    post:
      operationId: DisableDelegatedAdminAccount
      description: |-
        Disables the Amazon Inspector delegated administrator for your organization.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                delegatedAdminAccountId:
                  $ref: '#/components/schemas/AccountId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            A conflict occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access an invalid resource. Make sure the resource is specified correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /members/disassociate:
    post:
      operationId: DisassociateMember
      description: |-
        Disassociates a member account from an Amazon Inspector delegated administrator.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accountId:
                  $ref: '#/components/schemas/AccountId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /enable:
    post:
      operationId: Enable
      description: |-
        Enables Amazon Inspector scans for one or more Amazon Web Services accounts.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accountIds:
                  $ref: '#/components/schemas/AccountIdSet'
                resourceTypes:
                  $ref: '#/components/schemas/EnableResourceTypeList'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access an invalid resource. Make sure the resource is specified correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /delegatedadminaccounts/enable:
    post:
      operationId: EnableDelegatedAdminAccount
      description: |-
        Enables the Amazon Inspector delegated administrator for your Organizations organization.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                delegatedAdminAccountId:
                  $ref: '#/components/schemas/AccountId'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            A conflict occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access an invalid resource. Make sure the resource is specified correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /cis/scan/report/get:
    post:
      operationId: GetCisScanReport
      description: |-
        Retrieves a CIS scan report.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                scanArn:
                  $ref: '#/components/schemas/CisScanArn'
                targetAccounts:
                  $ref: '#/components/schemas/ReportTargetAccounts'
                reportFormat:
                  $ref: '#/components/schemas/CisReportFormat'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access an invalid resource. Make sure the resource is specified correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /cis/scan-result/details/get:
    post:
      operationId: GetCisScanResultDetails
      description: |-
        Retrieves CIS scan result details.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                scanArn:
                  $ref: '#/components/schemas/CisScanArn'
                targetResourceId:
                  $ref: '#/components/schemas/ResourceId'
                accountId:
                  $ref: '#/components/schemas/AccountId'
                filterCriteria:
                  $ref: '#/components/schemas/CisScanResultDetailsFilterCriteria'
                sortBy:
                  $ref: '#/components/schemas/CisScanResultDetailsSortBy'
                sortOrder:
                  $ref: '#/components/schemas/CisSortOrder'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
                maxResults:
                  $ref: '#/components/schemas/GetCisScanResultDetailsMaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /configuration/get:
    post:
      operationId: GetConfiguration
      description: |-
        Retrieves setting configurations for Inspector scans.
      parameters: []
      responses:
        '200': {}
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access an invalid resource. Make sure the resource is specified correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /delegatedadminaccounts/get:
    post:
      operationId: GetDelegatedAdminAccount
      description: |-
        Retrieves information about the Amazon Inspector delegated administrator for your organization.
      parameters: []
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access an invalid resource. Make sure the resource is specified correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /ec2deepinspectionconfiguration/get:
    post:
      operationId: GetEc2DeepInspectionConfiguration
      description: |-
        Retrieves the activation status of Amazon Inspector deep inspection and custom paths associated with your account.
      parameters: []
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access an invalid resource. Make sure the resource is specified correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /encryptionkey/get:
    get:
      operationId: GetEncryptionKey
      description: |-
        Gets an encryption key.
      parameters:
      - name: scanType
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ScanType'
      - name: resourceType
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ResourceType'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access an invalid resource. Make sure the resource is specified correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /reporting/status/get:
    post:
      operationId: GetFindingsReportStatus
      description: |-
        Gets the status of a findings report.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reportId:
                  $ref: '#/components/schemas/ReportId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access an invalid resource. Make sure the resource is specified correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /members/get:
    post:
      operationId: GetMember
      description: |-
        Gets member information for your organization.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accountId:
                  $ref: '#/components/schemas/AccountId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access an invalid resource. Make sure the resource is specified correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /sbomexport/get:
    post:
      operationId: GetSbomExport
      description: |-
        Gets details of a software bill of materials (SBOM) report.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reportId:
                  $ref: '#/components/schemas/ReportId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access an invalid resource. Make sure the resource is specified correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /accountpermissions/list:
    post:
      operationId: ListAccountPermissions
      description: |-
        Lists the permissions an account has to configure Amazon Inspector.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                service:
                  $ref: '#/components/schemas/Service'
                maxResults:
                  $ref: '#/components/schemas/ListAccountPermissionsMaxResults'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /cis/scan-configuration/list:
    post:
      operationId: ListCisScanConfigurations
      description: |-
        Lists CIS scan configurations.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filterCriteria:
                  $ref: '#/components/schemas/ListCisScanConfigurationsFilterCriteria'
                sortBy:
                  $ref: '#/components/schemas/CisScanConfigurationsSortBy'
                sortOrder:
                  $ref: '#/components/schemas/CisSortOrder'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
                maxResults:
                  $ref: '#/components/schemas/ListCisScanConfigurationsMaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /cis/scan-result/check/list:
    post:
      operationId: ListCisScanResultsAggregatedByChecks
      description: |-
        Lists scan results aggregated by checks.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                scanArn:
                  $ref: '#/components/schemas/CisScanArn'
                filterCriteria:
                  $ref: '#/components/schemas/CisScanResultsAggregatedByChecksFilterCriteria'
                sortBy:
                  $ref: '#/components/schemas/CisScanResultsAggregatedByChecksSortBy'
                sortOrder:
                  $ref: '#/components/schemas/CisSortOrder'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
                maxResults:
                  $ref: '#/components/schemas/CisScanResultsMaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /cis/scan-result/resource/list:
    post:
      operationId: ListCisScanResultsAggregatedByTargetResource
      description: |-
        Lists scan results aggregated by a target resource.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                scanArn:
                  $ref: '#/components/schemas/CisScanArn'
                filterCriteria:
                  $ref: '#/components/schemas/CisScanResultsAggregatedByTargetResourceFilterCriteria'
                sortBy:
                  $ref: '#/components/schemas/CisScanResultsAggregatedByTargetResourceSortBy'
                sortOrder:
                  $ref: '#/components/schemas/CisSortOrder'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
                maxResults:
                  $ref: '#/components/schemas/CisScanResultsMaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /cis/scan/list:
    post:
      operationId: ListCisScans
      description: |-
        Returns a CIS scan list.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filterCriteria:
                  $ref: '#/components/schemas/ListCisScansFilterCriteria'
                detailLevel:
                  $ref: '#/components/schemas/ListCisScansDetailLevel'
                sortBy:
                  $ref: '#/components/schemas/ListCisScansSortBy'
                sortOrder:
                  $ref: '#/components/schemas/CisSortOrder'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
                maxResults:
                  $ref: '#/components/schemas/ListCisScansMaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /coverage/list:
    post:
      operationId: ListCoverage
      description: |-
        Lists coverage details for your environment.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                maxResults:
                  $ref: '#/components/schemas/ListCoverageMaxResults'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
                filterCriteria:
                  $ref: '#/components/schemas/CoverageFilterCriteria'
      responses:
        '200': {}
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /coverage/statistics/list:
    post:
      operationId: ListCoverageStatistics
      description: |-
        Lists Amazon Inspector coverage statistics for your environment.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filterCriteria:
                  $ref: '#/components/schemas/CoverageFilterCriteria'
                groupBy:
                  $ref: '#/components/schemas/GroupKey'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /delegatedadminaccounts/list:
    post:
      operationId: ListDelegatedAdminAccounts
      description: |-
        Lists information about the Amazon Inspector delegated administrator of your organization.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                maxResults:
                  $ref: '#/components/schemas/ListDelegatedAdminMaxResults'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /filters/list:
    post:
      operationId: ListFilters
      description: |-
        Lists the filters associated with your account.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                arns:
                  $ref: '#/components/schemas/FilterArnList'
                action:
                  $ref: '#/components/schemas/FilterAction'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
                maxResults:
                  $ref: '#/components/schemas/ListFilterMaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /findings/aggregation/list:
    post:
      operationId: ListFindingAggregations
      description: |-
        Lists aggregated finding data for your environment based on specific criteria.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                aggregationType:
                  $ref: '#/components/schemas/AggregationType'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
                maxResults:
                  $ref: '#/components/schemas/ListFindingAggregationsMaxResults'
                accountIds:
                  $ref: '#/components/schemas/StringFilterList'
                aggregationRequest:
                  $ref: '#/components/schemas/AggregationRequest'
      responses:
        '200': {}
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /findings/list:
    post:
      operationId: ListFindings
      description: |-
        Lists findings for your environment.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                maxResults:
                  $ref: '#/components/schemas/ListFindingsMaxResults'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
                filterCriteria:
                  $ref: '#/components/schemas/FilterCriteria'
                sortCriteria:
                  $ref: '#/components/schemas/SortCriteria'
      responses:
        '200': {}
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /members/list:
    post:
      operationId: ListMembers
      description: |-
        List members associated with the Amazon Inspector delegated administrator for your organization.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                onlyAssociated:
                  $ref: '#/components/schemas/Boolean'
                maxResults:
                  $ref: '#/components/schemas/ListMembersMaxResults'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tags/{resourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Lists all tags attached to a given resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access an invalid resource. Make sure the resource is specified correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: TagResource
      description: |-
        Adds tags to a resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access an invalid resource. Make sure the resource is specified correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    delete:
      operationId: UntagResource
      description: |-
        Removes tags from a resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeyList'
      responses:
        '200': {}
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access an invalid resource. Make sure the resource is specified correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /usage/list:
    post:
      operationId: ListUsageTotals
      description: |-
        Lists the Amazon Inspector usage totals over the last 30 days.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                maxResults:
                  $ref: '#/components/schemas/ListUsageTotalsMaxResults'
                nextToken:
                  $ref: '#/components/schemas/ListUsageTotalsNextToken'
                accountIds:
                  $ref: '#/components/schemas/UsageAccountIdList'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /encryptionkey/reset:
    put:
      operationId: ResetEncryptionKey
      description: |-
        Resets an encryption key. After the key is reset your resources will be encrypted by an Amazon Web Services owned key.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                scanType:
                  $ref: '#/components/schemas/ScanType'
                resourceType:
                  $ref: '#/components/schemas/ResourceType'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access an invalid resource. Make sure the resource is specified correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /vulnerabilities/search:
    post:
      operationId: SearchVulnerabilities
      description: |-
        Lists Amazon Inspector coverage details for a specific vulnerability.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filterCriteria:
                  $ref: '#/components/schemas/SearchVulnerabilitiesFilterCriteria'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /cissession/health/send:
    put:
      operationId: SendCisSessionHealth
      description: |-
        Sends a CIS session health. This API is used by the Amazon Inspector SSM plugin to communicate with the Amazon Inspector service. The Amazon Inspector SSM plugin calls this API to start a CIS scan session for the scan ID supplied by the service.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                scanJobId:
                  $ref: '#/components/schemas/UUID'
                sessionToken:
                  $ref: '#/components/schemas/UUID'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            A conflict occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /cissession/telemetry/send:
    put:
      operationId: SendCisSessionTelemetry
      description: |-
        Sends a CIS session telemetry. This API is used by the Amazon Inspector SSM plugin to communicate with the Amazon Inspector service. The Amazon Inspector SSM plugin calls this API to start a CIS scan session for the scan ID supplied by the service.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                scanJobId:
                  $ref: '#/components/schemas/UUID'
                sessionToken:
                  $ref: '#/components/schemas/UUID'
                messages:
                  $ref: '#/components/schemas/CisSessionMessages'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            A conflict occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /cissession/start:
    put:
      operationId: StartCisSession
      description: |-
        Starts a CIS session. This API is used by the Amazon Inspector SSM plugin to communicate with the Amazon Inspector service. The Amazon Inspector SSM plugin calls this API to start a CIS scan session for the scan ID supplied by the service.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                scanJobId:
                  $ref: '#/components/schemas/UUID'
                message:
                  $ref: '#/components/schemas/StartCisSessionMessage'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            A conflict occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /cissession/stop:
    put:
      operationId: StopCisSession
      description: |-
        Stops a CIS session. This API is used by the Amazon Inspector SSM plugin to communicate with the Amazon Inspector service. The Amazon Inspector SSM plugin calls this API to stop a CIS scan session for the scan ID supplied by the service.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                scanJobId:
                  $ref: '#/components/schemas/UUID'
                sessionToken:
                  $ref: '#/components/schemas/UUID'
                message:
                  $ref: '#/components/schemas/StopCisSessionMessage'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            A conflict occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /cis/scan-configuration/update:
    post:
      operationId: UpdateCisScanConfiguration
      description: |-
        Updates a CIS scan configuration.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                scanConfigurationArn:
                  $ref: '#/components/schemas/CisScanConfigurationArn'
                scanName:
                  $ref: '#/components/schemas/CisScanName'
                securityLevel:
                  $ref: '#/components/schemas/CisSecurityLevel'
                schedule:
                  $ref: '#/components/schemas/Schedule'
                targets:
                  $ref: '#/components/schemas/UpdateCisTargets'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access an invalid resource. Make sure the resource is specified correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /configuration/update:
    post:
      operationId: UpdateConfiguration
      description: |-
        Updates setting configurations for your Amazon Inspector account. When you use this API as an Amazon Inspector delegated administrator this updates the setting for all accounts you manage. Member accounts in an organization cannot update this setting.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ecrConfiguration:
                  $ref: '#/components/schemas/EcrConfiguration'
                ec2Configuration:
                  $ref: '#/components/schemas/Ec2Configuration'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /ec2deepinspectionconfiguration/update:
    post:
      operationId: UpdateEc2DeepInspectionConfiguration
      description: |-
        Activates, deactivates Amazon Inspector deep inspection, or updates custom paths for your account.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                activateDeepInspection:
                  $ref: '#/components/schemas/Boolean'
                packagePaths:
                  $ref: '#/components/schemas/PathList'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /encryptionkey/update:
    put:
      operationId: UpdateEncryptionKey
      description: |-
        Updates an encryption key. A `ResourceNotFoundException` means that an Amazon Web Services owned key is being used for encryption.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                kmsKeyId:
                  $ref: '#/components/schemas/KmsKeyArn'
                scanType:
                  $ref: '#/components/schemas/ScanType'
                resourceType:
                  $ref: '#/components/schemas/ResourceType'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access an invalid resource. Make sure the resource is specified correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /filters/update:
    post:
      operationId: UpdateFilter
      description: |-
        Specifies the action that is to be applied to the findings that match the filter.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  $ref: '#/components/schemas/FilterAction'
                description:
                  $ref: '#/components/schemas/FilterDescription'
                filterCriteria:
                  $ref: '#/components/schemas/FilterCriteria'
                name:
                  $ref: '#/components/schemas/FilterName'
                filterArn:
                  $ref: '#/components/schemas/FilterArn'
                reason:
                  $ref: '#/components/schemas/FilterReason'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The operation tried to access an invalid resource. Make sure the resource is specified correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /ec2deepinspectionconfiguration/org/update:
    post:
      operationId: UpdateOrgEc2DeepInspectionConfiguration
      description: |-
        Updates the Amazon Inspector deep inspection custom paths for your organization. You must be an Amazon Inspector delegated administrator to use this API.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                orgPackagePaths:
                  $ref: '#/components/schemas/PathList'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /organizationconfiguration/update:
    post:
      operationId: UpdateOrganizationConfiguration
      description: |-
        Updates the configurations for your Amazon Inspector organization.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                autoEnable:
                  $ref: '#/components/schemas/AutoEnable'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal failure of the Amazon Inspector service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The limit on the number of requests per second was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has failed validation due to missing required fields or having invalid inputs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    AccessDeniedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: You do not have sufficient access to perform this action.
    Account:
      type: object
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The ID of the Amazon Web Services account.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: The status of Amazon Inspector for the account.
        resourceStatus:
          allOf:
          - $ref: '#/components/schemas/ResourceStatus'
          description: Details of the status of Amazon Inspector scans by resource
            type.
      required:
      - accountId
      - status
      - resourceStatus
      description: An Amazon Web Services account within your environment that Amazon
        Inspector has been enabled for.
    AccountAggregation:
      type: object
      properties:
        findingType:
          allOf:
          - $ref: '#/components/schemas/AggregationFindingType'
          description: The type of finding.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/AggregationResourceType'
          description: The type of resource.
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          description: The sort order (ascending or descending).
        sortBy:
          allOf:
          - $ref: '#/components/schemas/AccountSortBy'
          description: The value to sort by.
      description: An object that contains details about an aggregation response based
        on Amazon Web Services accounts.
    AccountAggregationResponse:
      type: object
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The Amazon Web Services account ID.
        severityCounts:
          allOf:
          - $ref: '#/components/schemas/SeverityCounts'
          description: The number of findings by severity.
        exploitAvailableCount:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The number of findings that have an exploit available.
        fixAvailableCount:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: Details about the number of fixes.
      description: An aggregation of findings by Amazon Web Services account ID.
    AccountId:
      type: string
      pattern: ^\d{12}$
      minLength: 12
      maxLength: 12
    AccountIdFilterList:
      type: array
      items:
        $ref: '#/components/schemas/CisStringFilter'
    AccountIdSet:
      type: array
      items:
        $ref: '#/components/schemas/AccountId'
    AccountList:
      type: array
      items:
        $ref: '#/components/schemas/Account'
    AccountSortBy:
      type: string
      enum:
      - CRITICAL
      - HIGH
      - ALL
    AccountState:
      type: object
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The Amazon Web Services account ID.
        state:
          allOf:
          - $ref: '#/components/schemas/State'
          description: An object detailing the status of Amazon Inspector for the
            account.
        resourceState:
          allOf:
          - $ref: '#/components/schemas/ResourceState'
          description: An object detailing which resources Amazon Inspector is enabled
            to scan for the account.
      required:
      - accountId
      - state
      - resourceState
      description: An object with details the status of an Amazon Web Services account
        within your Amazon Inspector environment.
    AccountStateList:
      type: array
      items:
        $ref: '#/components/schemas/AccountState'
    AggCounts:
      type: integer
      format: int64
      default: 0
    AggregationFindingType:
      type: string
      enum:
      - NETWORK_REACHABILITY
      - PACKAGE_VULNERABILITY
      - CODE_VULNERABILITY
    AggregationRequest:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/AccountAggregation'
        description: |-
          An object that contains details about an aggregation request based on Amazon Web Services account IDs.
      - allOf:
        - $ref: '#/components/schemas/AmiAggregation'
        description: |-
          An object that contains details about an aggregation request based on Amazon Machine Images (AMIs).
      - allOf:
        - $ref: '#/components/schemas/AwsEcrContainerAggregation'
        description: |-
          An object that contains details about an aggregation request based on Amazon ECR container images.
      - allOf:
        - $ref: '#/components/schemas/Ec2InstanceAggregation'
        description: |-
          An object that contains details about an aggregation request based on Amazon EC2 instances.
      - allOf:
        - $ref: '#/components/schemas/FindingTypeAggregation'
        description: |-
          An object that contains details about an aggregation request based on finding types.
      - allOf:
        - $ref: '#/components/schemas/ImageLayerAggregation'
        description: |-
          An object that contains details about an aggregation request based on container image layers.
      - allOf:
        - $ref: '#/components/schemas/PackageAggregation'
        description: |-
          An object that contains details about an aggregation request based on operating system package type.
      - allOf:
        - $ref: '#/components/schemas/RepositoryAggregation'
        description: |-
          An object that contains details about an aggregation request based on Amazon ECR repositories.
      - allOf:
        - $ref: '#/components/schemas/TitleAggregation'
        description: |-
          An object that contains details about an aggregation request based on finding title.
      - allOf:
        - $ref: '#/components/schemas/LambdaLayerAggregation'
        description: |-
          Returns an object with findings aggregated by Amazon Web Services Lambda layer.
      - allOf:
        - $ref: '#/components/schemas/LambdaFunctionAggregation'
        description: |-
          Returns an object with findings aggregated by Amazon Web Services Lambda function.
      description: |-
        Contains details about an aggregation request.
    AggregationResourceType:
      type: string
      enum:
      - AWS_EC2_INSTANCE
      - AWS_ECR_CONTAINER_IMAGE
      - AWS_LAMBDA_FUNCTION
    AggregationResponse:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/AccountAggregationResponse'
        description: |-
          An object that contains details about an aggregation response based on Amazon Web Services account IDs.
      - allOf:
        - $ref: '#/components/schemas/AmiAggregationResponse'
        description: |-
          An object that contains details about an aggregation response based on Amazon Machine Images (AMIs).
      - allOf:
        - $ref: '#/components/schemas/AwsEcrContainerAggregationResponse'
        description: |-
          An object that contains details about an aggregation response based on Amazon ECR container images.
      - allOf:
        - $ref: '#/components/schemas/Ec2InstanceAggregationResponse'
        description: |-
          An object that contains details about an aggregation response based on Amazon EC2 instances.
      - allOf:
        - $ref: '#/components/schemas/FindingTypeAggregationResponse'
        description: |-
          An object that contains details about an aggregation response based on finding types.
      - allOf:
        - $ref: '#/components/schemas/ImageLayerAggregationResponse'
        description: |-
          An object that contains details about an aggregation response based on container image layers.
      - allOf:
        - $ref: '#/components/schemas/PackageAggregationResponse'
        description: |-
          An object that contains details about an aggregation response based on operating system package type.
      - allOf:
        - $ref: '#/components/schemas/RepositoryAggregationResponse'
        description: |-
          An object that contains details about an aggregation response based on Amazon ECR repositories.
      - allOf:
        - $ref: '#/components/schemas/TitleAggregationResponse'
        description: |-
          An object that contains details about an aggregation response based on finding title.
      - allOf:
        - $ref: '#/components/schemas/LambdaLayerAggregationResponse'
        description: |-
          An aggregation of findings by Amazon Web Services Lambda layer.
      - allOf:
        - $ref: '#/components/schemas/LambdaFunctionAggregationResponse'
        description: |-
          An aggregation of findings by Amazon Web Services Lambda function.
      description: |-
        A structure that contains details about the results of an aggregation type.
    AggregationResponseList:
      type: array
      items:
        $ref: '#/components/schemas/AggregationResponse'
    AggregationType:
      type: string
      enum:
      - FINDING_TYPE
      - PACKAGE
      - TITLE
      - REPOSITORY
      - AMI
      - AWS_EC2_INSTANCE
      - AWS_ECR_CONTAINER
      - IMAGE_LAYER
      - ACCOUNT
      - AWS_LAMBDA_FUNCTION
      - LAMBDA_LAYER
    AmiAggregation:
      type: object
      properties:
        amis:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The IDs of AMIs to aggregate findings for.
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          description: The order to sort results by.
        sortBy:
          allOf:
          - $ref: '#/components/schemas/AmiSortBy'
          description: The value to sort results by.
      description: The details that define an aggregation based on Amazon machine
        images (AMIs).
    AmiAggregationResponse:
      type: object
      properties:
        ami:
          allOf:
          - $ref: '#/components/schemas/AmiId'
          description: The ID of the AMI that findings were aggregated for.
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The Amazon Web Services account ID for the AMI.
        severityCounts:
          allOf:
          - $ref: '#/components/schemas/SeverityCounts'
          description: An object that contains the count of matched findings per severity.
        affectedInstances:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The IDs of Amazon EC2 instances using this AMI.
      required:
      - ami
      description: A response that contains the results of a finding aggregation by
        AMI.
    AmiId:
      type: string
      pattern: ^ami-([a-z0-9]{8}|[a-z0-9]{17}|\*)$
    AmiSortBy:
      type: string
      enum:
      - CRITICAL
      - HIGH
      - ALL
      - AFFECTED_INSTANCES
    Architecture:
      type: string
      enum:
      - X86_64
      - ARM64
    ArchitectureList:
      type: array
      items:
        $ref: '#/components/schemas/Architecture'
    Arn:
      type: string
      minLength: 1
      maxLength: 1011
    AssociateMemberRequest:
      type: object
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The Amazon Web Services account ID of the member account to
            be associated.
      required:
      - accountId
    AssociateMemberResponse:
      type: object
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The Amazon Web Services account ID of the successfully associated
            member account.
      required:
      - accountId
    AtigData:
      type: object
      properties:
        firstSeen:
          allOf:
          - $ref: '#/components/schemas/FirstSeen'
          description: The date and time this vulnerability was first observed.
        lastSeen:
          allOf:
          - $ref: '#/components/schemas/LastSeen'
          description: The date and time this vulnerability was last observed.
        targets:
          allOf:
          - $ref: '#/components/schemas/Targets'
          description: The commercial sectors this vulnerability targets.
        ttps:
          allOf:
          - $ref: '#/components/schemas/Ttps'
          description: The [MITRE ATT&CK](https://attack.mitre.org/) tactics, techniques,
            and procedures (TTPs) associated with vulnerability.
      description: The Amazon Web Services Threat Intel Group (ATIG) details for a
        specific vulnerability.
    AutoEnable:
      type: object
      properties:
        ec2:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Represents whether Amazon EC2 scans are automatically enabled
            for new members of your Amazon Inspector organization.
        ecr:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Represents whether Amazon ECR scans are automatically enabled
            for new members of your Amazon Inspector organization.
        lambda:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Represents whether Amazon Web Services Lambda standard scans
            are automatically enabled for new members of your Amazon Inspector organization.
        lambdaCode:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Represents whether Lambda code scans are automatically enabled
            for new members of your Amazon Inspector organization.
      required:
      - ec2
      - ecr
      description: Represents which scan types are automatically enabled for new members
        of your Amazon Inspector organization.
    AwsEc2InstanceDetails:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The type of the Amazon EC2 instance.
        imageId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The image ID of the Amazon EC2 instance.
        ipV4Addresses:
          allOf:
          - $ref: '#/components/schemas/IpV4AddressList'
          description: The IPv4 addresses of the Amazon EC2 instance.
        ipV6Addresses:
          allOf:
          - $ref: '#/components/schemas/IpV6AddressList'
          description: The IPv6 addresses of the Amazon EC2 instance.
        keyName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the key pair used to launch the Amazon EC2 instance.
        iamInstanceProfileArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The IAM instance profile ARN of the Amazon EC2 instance.
        vpcId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The VPC ID of the Amazon EC2 instance.
        subnetId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The subnet ID of the Amazon EC2 instance.
        launchedAt:
          allOf:
          - $ref: '#/components/schemas/DateTimeTimestamp'
          description: The date and time the Amazon EC2 instance was launched at.
        platform:
          allOf:
          - $ref: '#/components/schemas/Platform'
          description: The platform of the Amazon EC2 instance.
      description: Details of the Amazon EC2 instance involved in a finding.
    AwsEcrContainerAggregation:
      type: object
      properties:
        resourceIds:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The container resource IDs.
        imageShas:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The image SHA values.
        repositories:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The container repositories.
        architectures:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The architecture of the containers.
        imageTags:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The image tags.
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          description: The sort order (ascending or descending).
        sortBy:
          allOf:
          - $ref: '#/components/schemas/AwsEcrContainerSortBy'
          description: The value to sort by.
      description: An aggregation of information about Amazon ECR containers.
    AwsEcrContainerAggregationResponse:
      type: object
      properties:
        resourceId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The resource ID of the container.
        imageSha:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The SHA value of the container image.
        repository:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The container repository.
        architecture:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The architecture of the container.
        imageTags:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The container image stags.
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The Amazon Web Services account ID of the account that owns
            the container.
        severityCounts:
          allOf:
          - $ref: '#/components/schemas/SeverityCounts'
          description: The number of finding by severity.
      required:
      - resourceId
      description: An aggregation of information about Amazon ECR containers.
    AwsEcrContainerImageDetails:
      type: object
      properties:
        repositoryName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the repository the Amazon ECR container image resides
            in.
        imageTags:
          allOf:
          - $ref: '#/components/schemas/ImageTagList'
          description: The image tags attached to the Amazon ECR container image.
        pushedAt:
          allOf:
          - $ref: '#/components/schemas/DateTimeTimestamp'
          description: The date and time the Amazon ECR container image was pushed.
        author:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The image author of the Amazon ECR container image.
        architecture:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The architecture of the Amazon ECR container image.
        imageHash:
          allOf:
          - $ref: '#/components/schemas/ImageHash'
          description: The image hash of the Amazon ECR container image.
        registry:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The registry for the Amazon ECR container image.
        platform:
          allOf:
          - $ref: '#/components/schemas/Platform'
          description: The platform of the Amazon ECR container image.
      required:
      - repositoryName
      - imageHash
      - registry
      description: The image details of the Amazon ECR container image.
    AwsEcrContainerSortBy:
      type: string
      enum:
      - CRITICAL
      - HIGH
      - ALL
    AwsLambdaFunctionDetails:
      type: object
      properties:
        functionName:
          allOf:
          - $ref: '#/components/schemas/FunctionName'
          description: The name of the Amazon Web Services Lambda function.
        runtime:
          allOf:
          - $ref: '#/components/schemas/Runtime'
          description: The runtime environment for the Amazon Web Services Lambda
            function.
        codeSha256:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The SHA256 hash of the Amazon Web Services Lambda function's
            deployment package.
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version of the Amazon Web Services Lambda function.
        executionRoleArn:
          allOf:
          - $ref: '#/components/schemas/ExecutionRoleArn'
          description: The Amazon Web Services Lambda function's execution role.
        layers:
          allOf:
          - $ref: '#/components/schemas/LayerList'
          description: The Amazon Web Services Lambda function's [ layers](https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html).
            A Lambda function can have up to five layers.
        vpcConfig:
          allOf:
          - $ref: '#/components/schemas/LambdaVpcConfig'
          description: The Amazon Web Services Lambda function's networking configuration.
        packageType:
          allOf:
          - $ref: '#/components/schemas/PackageType'
          description: The type of deployment package. Set to `Image` for container
            image and set `Zip` for .zip file archive.
        architectures:
          allOf:
          - $ref: '#/components/schemas/ArchitectureList'
          description: The instruction set architecture that the Amazon Web Services
            Lambda function supports. Architecture is a string array with one of the
            valid values. The default architecture value is `x86_64`.
        lastModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time that a user last updated the configuration,
            in [ISO 8601 format](https://www.iso.org/iso-8601-date-and-time-format.html)
      required:
      - functionName
      - runtime
      - codeSha256
      - version
      - executionRoleArn
      description: A summary of information about the Amazon Web Services Lambda function.
    BadRequestException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: One or more tags submitted as part of the request is not valid.
    BatchGetAccountStatusRequest:
      type: object
      properties:
        accountIds:
          allOf:
          - $ref: '#/components/schemas/AccountIdSet'
          description: The 12-digit Amazon Web Services account IDs of the accounts
            to retrieve Amazon Inspector status for.
    BatchGetAccountStatusResponse:
      type: object
      properties:
        accounts:
          allOf:
          - $ref: '#/components/schemas/AccountStateList'
          description: An array of objects that provide details on the status of Amazon
            Inspector for each of the requested accounts.
        failedAccounts:
          allOf:
          - $ref: '#/components/schemas/FailedAccountList'
          description: An array of objects detailing any accounts that failed to enable
            Amazon Inspector and why.
      required:
      - accounts
    BatchGetCodeSnippetRequest:
      type: object
      properties:
        findingArns:
          allOf:
          - $ref: '#/components/schemas/FindingArns'
          description: An array of finding ARNs for the findings you want to retrieve
            code snippets from.
      required:
      - findingArns
    BatchGetCodeSnippetResponse:
      type: object
      properties:
        codeSnippetResults:
          allOf:
          - $ref: '#/components/schemas/CodeSnippetResultList'
          description: The retrieved code snippets associated with the provided finding
            ARNs.
        errors:
          allOf:
          - $ref: '#/components/schemas/CodeSnippetErrorList'
          description: Any errors Amazon Inspector encountered while trying to retrieve
            the requested code snippets.
    BatchGetFindingDetailsRequest:
      type: object
      properties:
        findingArns:
          allOf:
          - $ref: '#/components/schemas/FindingArnList'
          description: A list of finding ARNs.
      required:
      - findingArns
    BatchGetFindingDetailsResponse:
      type: object
      properties:
        findingDetails:
          allOf:
          - $ref: '#/components/schemas/FindingDetails'
          description: A finding's vulnerability details.
        errors:
          allOf:
          - $ref: '#/components/schemas/FindingDetailsErrorList'
          description: Error information for findings that details could not be returned
            for.
    BatchGetFreeTrialInfoRequest:
      type: object
      properties:
        accountIds:
          allOf:
          - $ref: '#/components/schemas/MeteringAccountIdList'
          description: The account IDs to get free trial status for.
      required:
      - accountIds
    BatchGetFreeTrialInfoResponse:
      type: object
      properties:
        accounts:
          allOf:
          - $ref: '#/components/schemas/FreeTrialAccountInfoList'
          description: An array of objects that provide Amazon Inspector free trial
            details for each of the requested accounts.
        failedAccounts:
          allOf:
          - $ref: '#/components/schemas/FreeTrialInfoErrorList'
          description: An array of objects detailing any accounts that free trial
            data could not be returned for.
      required:
      - accounts
      - failedAccounts
    BatchGetMemberEc2DeepInspectionStatusRequest:
      type: object
      properties:
        accountIds:
          allOf:
          - $ref: '#/components/schemas/AccountIdSet'
          description: The unique identifiers for the Amazon Web Services accounts
            to retrieve Amazon Inspector deep inspection activation status for.
    BatchGetMemberEc2DeepInspectionStatusResponse:
      type: object
      properties:
        accountIds:
          allOf:
          - $ref: '#/components/schemas/MemberAccountEc2DeepInspectionStatusStateList'
          description: An array of objects that provide details on the activation
            status of Amazon Inspector deep inspection for each of the requested accounts.
        failedAccountIds:
          allOf:
          - $ref: '#/components/schemas/FailedMemberAccountEc2DeepInspectionStatusStateList'
          description: An array of objects that provide details on any accounts that
            failed to activate Amazon Inspector deep inspection and why.
    BatchUpdateMemberEc2DeepInspectionStatusRequest:
      type: object
      properties:
        accountIds:
          allOf:
          - $ref: '#/components/schemas/MemberAccountEc2DeepInspectionStatusList'
          description: The unique identifiers for the Amazon Web Services accounts
            to change Amazon Inspector deep inspection status for.
      required:
      - accountIds
    BatchUpdateMemberEc2DeepInspectionStatusResponse:
      type: object
      properties:
        accountIds:
          allOf:
          - $ref: '#/components/schemas/MemberAccountEc2DeepInspectionStatusStateList'
          description: An array of objects that provide details for each of the accounts
            that Amazon Inspector deep inspection status was successfully changed
            for.
        failedAccountIds:
          allOf:
          - $ref: '#/components/schemas/FailedMemberAccountEc2DeepInspectionStatusStateList'
          description: An array of objects that provide details for each of the accounts
            that Amazon Inspector deep inspection status could not be successfully
            changed for.
    BenchmarkProfile:
      type: string
      maxLength: 128
    BenchmarkVersion:
      type: string
      maxLength: 8
    CancelFindingsReportRequest:
      type: object
      properties:
        reportId:
          allOf:
          - $ref: '#/components/schemas/ReportId'
          description: The ID of the report to be canceled.
      required:
      - reportId
    CancelFindingsReportResponse:
      type: object
      properties:
        reportId:
          allOf:
          - $ref: '#/components/schemas/ReportId'
          description: The ID of the canceled report.
      required:
      - reportId
    CancelSbomExportRequest:
      type: object
      properties:
        reportId:
          allOf:
          - $ref: '#/components/schemas/ReportId'
          description: The report ID of the SBOM export to cancel.
      required:
      - reportId
    CancelSbomExportResponse:
      type: object
      properties:
        reportId:
          allOf:
          - $ref: '#/components/schemas/ReportId'
          description: The report ID of the canceled SBOM export.
    CheckCount:
      type: integer
      default: 0
      minimum: 0
      maximum: 65536
    CheckIdFilterList:
      type: array
      items:
        $ref: '#/components/schemas/CisStringFilter'
    CisAccountIdList:
      type: array
      items:
        $ref: '#/components/schemas/AccountId'
    CisCheckAggregation:
      type: object
      properties:
        scanArn:
          allOf:
          - $ref: '#/components/schemas/CisScanArn'
          description: The scan ARN for the CIS check scan ARN.
        checkId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The check ID for the CIS check.
        title:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The CIS check title.
        checkDescription:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The description for the CIS check.
        level:
          allOf:
          - $ref: '#/components/schemas/CisSecurityLevel'
          description: The CIS check level.
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The account ID for the CIS check.
        statusCounts:
          allOf:
          - $ref: '#/components/schemas/StatusCounts'
          description: The CIS check status counts.
        platform:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The CIS check platform.
      required:
      - scanArn
      description: A CIS check.
    CisCheckAggregationList:
      type: array
      items:
        $ref: '#/components/schemas/CisCheckAggregation'
    CisDateFilter:
      type: object
      properties:
        earliestScanStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The CIS date filter's earliest scan start time.
        latestScanStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The CIS date filter's latest scan start time.
      description: The CIS date filter.
    CisFindingArn:
      type: string
      pattern: ^arn:aws(-gov|-cn)?:inspector2:[-.a-z0-9]{0,20}:\d{12}:owner/\d{12}/cis-finding/[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
    CisFindingArnFilterList:
      type: array
      items:
        $ref: '#/components/schemas/CisStringFilter'
    CisFindingStatus:
      type: string
      enum:
      - PASSED
      - FAILED
      - SKIPPED
    CisFindingStatusComparison:
      type: string
      enum:
      - EQUALS
    CisFindingStatusFilter:
      type: object
      properties:
        comparison:
          allOf:
          - $ref: '#/components/schemas/CisFindingStatusComparison'
          description: The comparison value of the CIS finding status filter.
        value:
          allOf:
          - $ref: '#/components/schemas/CisFindingStatus'
          description: The value of the CIS finding status filter.
      required:
      - comparison
      - value
      description: The CIS finding status filter.
    CisFindingStatusFilterList:
      type: array
      items:
        $ref: '#/components/schemas/CisFindingStatusFilter'
    CisNumberFilter:
      type: object
      properties:
        upperInclusive:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The CIS number filter's upper inclusive.
        lowerInclusive:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The CIS number filter's lower inclusive.
      description: The CIS number filter.
    CisNumberFilterList:
      type: array
      items:
        $ref: '#/components/schemas/CisNumberFilter'
    CisOwnerId:
      type: string
      pattern: ^\d{12}|o-[a-z0-9]{10,32}$
    CisReportFormat:
      type: string
      enum:
      - PDF
      - CSV
    CisReportStatus:
      type: string
      enum:
      - SUCCEEDED
      - FAILED
      - IN_PROGRESS
    CisResultStatus:
      type: string
      enum:
      - PASSED
      - FAILED
      - SKIPPED
    CisResultStatusComparison:
      type: string
      enum:
      - EQUALS
    CisResultStatusFilter:
      type: object
      properties:
        comparison:
          allOf:
          - $ref: '#/components/schemas/CisResultStatusComparison'
          description: The comparison value of the CIS result status filter.
        value:
          allOf:
          - $ref: '#/components/schemas/CisResultStatus'
          description: The value of the CIS result status filter.
      required:
      - comparison
      - value
      description: The CIS result status filter.
    CisResultStatusFilterList:
      type: array
      items:
        $ref: '#/components/schemas/CisResultStatusFilter'
    CisRuleDetails:
      type: string
      format: byte
      minLength: 0
      maxLength: 1000
    CisRuleStatus:
      type: string
      enum:
      - FAILED
      - PASSED
      - NOT_EVALUATED
      - INFORMATIONAL
      - UNKNOWN
      - NOT_APPLICABLE
      - ERROR
    CisScan:
      type: object
      properties:
        scanArn:
          allOf:
          - $ref: '#/components/schemas/CisScanArn'
          description: The CIS scan's ARN.
        scanConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/CisScanConfigurationArn'
          description: The CIS scan's configuration ARN.
        status:
          allOf:
          - $ref: '#/components/schemas/CisScanStatus'
          description: The CIS scan's status.
        scanName:
          allOf:
          - $ref: '#/components/schemas/CisScanName'
          description: The the name of the scan configuration that's associated with
            this scan.
        scanDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The CIS scan's date.
        failedChecks:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The CIS scan's failed checks.
        totalChecks:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The CIS scan's total checks.
        targets:
          allOf:
          - $ref: '#/components/schemas/CisTargets'
          description: The CIS scan's targets.
        scheduledBy:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The account or organization that schedules the CIS scan.
        securityLevel:
          allOf:
          - $ref: '#/components/schemas/CisSecurityLevel'
          description: The security level for the CIS scan. Security level refers
            to the Benchmark levels that CIS assigns to a profile.
      required:
      - scanArn
      - scanConfigurationArn
      description: The CIS scan.
    CisScanArn:
      type: string
      pattern: ^arn:aws(-us-gov|-cn)?:inspector2:[-.a-z0-9]{0,20}:\d{12}:owner/(\d{12}|o-[a-z0-9]{10,32})/cis-scan/[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
    CisScanArnFilterList:
      type: array
      items:
        $ref: '#/components/schemas/CisStringFilter'
    CisScanConfiguration:
      type: object
      properties:
        scanConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/CisScanConfigurationArn'
          description: The CIS scan configuration's scan configuration ARN.
        ownerId:
          allOf:
          - $ref: '#/components/schemas/CisOwnerId'
          description: The CIS scan configuration's owner ID.
        scanName:
          allOf:
          - $ref: '#/components/schemas/CisScanName'
          description: The name of the CIS scan configuration.
        securityLevel:
          allOf:
          - $ref: '#/components/schemas/CisSecurityLevel'
          description: The CIS scan configuration's security level.
        schedule:
          allOf:
          - $ref: '#/components/schemas/Schedule'
          description: The CIS scan configuration's schedule.
        targets:
          allOf:
          - $ref: '#/components/schemas/CisTargets'
          description: The CIS scan configuration's targets.
        tags:
          allOf:
          - $ref: '#/components/schemas/CisTagMap'
          description: The CIS scan configuration's tags.
      required:
      - scanConfigurationArn
      description: The CIS scan configuration.
    CisScanConfigurationArn:
      type: string
      pattern: ^arn:aws(-us-gov|-cn)?:inspector2:[a-z]{2}(-gov)?-[a-z]+-[0-9]{1}:[0-9]{12}:owner/(o-[a-z0-9]+|[0-9]{12})/cis-configuration/[0-9a-fA-F-]+$
    CisScanConfigurationArnFilterList:
      type: array
      items:
        $ref: '#/components/schemas/CisStringFilter'
    CisScanConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/CisScanConfiguration'
    CisScanConfigurationsSortBy:
      type: string
      enum:
      - SCAN_NAME
      - SCAN_CONFIGURATION_ARN
    CisScanDateFilterList:
      type: array
      items:
        $ref: '#/components/schemas/CisDateFilter'
    CisScanList:
      type: array
      items:
        $ref: '#/components/schemas/CisScan'
    CisScanName:
      type: string
      minLength: 1
      maxLength: 128
    CisScanNameFilterList:
      type: array
      items:
        $ref: '#/components/schemas/CisStringFilter'
    CisScanResultDetails:
      type: object
      properties:
        scanArn:
          allOf:
          - $ref: '#/components/schemas/CisScanArn'
          description: The CIS scan result details' scan ARN.
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The CIS scan result details' account ID.
        targetResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: The CIS scan result details' target resource ID.
        platform:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The CIS scan result details' platform.
        status:
          allOf:
          - $ref: '#/components/schemas/CisFindingStatus'
          description: The CIS scan result details' status.
        statusReason:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The CIS scan result details' status reason.
        checkId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The CIS scan result details' check ID.
        title:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The CIS scan result details' title.
        checkDescription:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The account ID that's associated with the CIS scan result details.
        remediation:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The CIS scan result details' remediation.
        level:
          allOf:
          - $ref: '#/components/schemas/CisSecurityLevel'
          description: The CIS scan result details' level.
        findingArn:
          allOf:
          - $ref: '#/components/schemas/CisFindingArn'
          description: The CIS scan result details' finding ARN.
      required:
      - scanArn
      description: The CIS scan result details.
    CisScanResultDetailsFilterCriteria:
      type: object
      properties:
        findingStatusFilters:
          allOf:
          - $ref: '#/components/schemas/CisFindingStatusFilterList'
          description: The criteria's finding status filters.
        checkIdFilters:
          allOf:
          - $ref: '#/components/schemas/CheckIdFilterList'
          description: The criteria's check ID filters.
        titleFilters:
          allOf:
          - $ref: '#/components/schemas/TitleFilterList'
          description: The criteria's title filters.
        securityLevelFilters:
          allOf:
          - $ref: '#/components/schemas/CisSecurityLevelFilterList'
          description: The criteria's security level filters. . Security level refers
            to the Benchmark levels that CIS assigns to a profile.
        findingArnFilters:
          allOf:
          - $ref: '#/components/schemas/CisFindingArnFilterList'
          description: The criteria's finding ARN filters.
      description: The CIS scan result details filter criteria.
    CisScanResultDetailsList:
      type: array
      items:
        $ref: '#/components/schemas/CisScanResultDetails'
    CisScanResultDetailsSortBy:
      type: string
      enum:
      - CHECK_ID
      - STATUS
    CisScanResultsAggregatedByChecksFilterCriteria:
      type: object
      properties:
        accountIdFilters:
          allOf:
          - $ref: '#/components/schemas/OneAccountIdFilterList'
          description: The criteria's account ID filters.
        checkIdFilters:
          allOf:
          - $ref: '#/components/schemas/CheckIdFilterList'
          description: The criteria's check ID filters.
        titleFilters:
          allOf:
          - $ref: '#/components/schemas/TitleFilterList'
          description: The criteria's title filters.
        platformFilters:
          allOf:
          - $ref: '#/components/schemas/PlatformFilterList'
          description: The criteria's platform filters.
        failedResourcesFilters:
          allOf:
          - $ref: '#/components/schemas/CisNumberFilterList'
          description: The criteria's failed resources filters.
        securityLevelFilters:
          allOf:
          - $ref: '#/components/schemas/CisSecurityLevelFilterList'
          description: The criteria's security level filters.
      description: The scan results aggregated by checks filter criteria.
    CisScanResultsAggregatedByChecksSortBy:
      type: string
      enum:
      - CHECK_ID
      - TITLE
      - PLATFORM
      - FAILED_COUNTS
      - SECURITY_LEVEL
    CisScanResultsAggregatedByTargetResourceFilterCriteria:
      type: object
      properties:
        accountIdFilters:
          allOf:
          - $ref: '#/components/schemas/AccountIdFilterList'
          description: The criteria's account ID filters.
        statusFilters:
          allOf:
          - $ref: '#/components/schemas/CisResultStatusFilterList'
          description: The criteria's status filter.
        checkIdFilters:
          allOf:
          - $ref: '#/components/schemas/CheckIdFilterList'
          description: The criteria's check ID filters.
        targetResourceIdFilters:
          allOf:
          - $ref: '#/components/schemas/ResourceIdFilterList'
          description: The criteria's target resource ID filters.
        targetResourceTagFilters:
          allOf:
          - $ref: '#/components/schemas/ResourceTagFilterList'
          description: The criteria's target resource tag filters.
        platformFilters:
          allOf:
          - $ref: '#/components/schemas/PlatformFilterList'
          description: The criteria's platform filters.
        targetStatusFilters:
          allOf:
          - $ref: '#/components/schemas/TargetStatusFilterList'
          description: The criteria's target status filters.
        targetStatusReasonFilters:
          allOf:
          - $ref: '#/components/schemas/TargetStatusReasonFilterList'
          description: The criteria's target status reason filters.
        failedChecksFilters:
          allOf:
          - $ref: '#/components/schemas/CisNumberFilterList'
          description: The criteria's failed checks filters.
      description: The scan results aggregated by target resource filter criteria.
    CisScanResultsAggregatedByTargetResourceSortBy:
      type: string
      enum:
      - RESOURCE_ID
      - FAILED_COUNTS
      - ACCOUNT_ID
      - PLATFORM
      - TARGET_STATUS
      - TARGET_STATUS_REASON
    CisScanResultsMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    CisScanStatus:
      type: string
      enum:
      - FAILED
      - COMPLETED
      - CANCELLED
      - IN_PROGRESS
    CisScanStatusComparison:
      type: string
      enum:
      - EQUALS
    CisScanStatusFilter:
      type: object
      properties:
        comparison:
          allOf:
          - $ref: '#/components/schemas/CisScanStatusComparison'
          description: The filter comparison value.
        value:
          allOf:
          - $ref: '#/components/schemas/CisScanStatus'
          description: The filter value.
      required:
      - comparison
      - value
      description: The CIS scan status filter.
    CisScanStatusFilterList:
      type: array
      items:
        $ref: '#/components/schemas/CisScanStatusFilter'
    CisScheduledByFilterList:
      type: array
      items:
        $ref: '#/components/schemas/CisStringFilter'
    CisSecurityLevel:
      type: string
      enum:
      - LEVEL_1
      - LEVEL_2
    CisSecurityLevelComparison:
      type: string
      enum:
      - EQUALS
    CisSecurityLevelFilter:
      type: object
      properties:
        comparison:
          allOf:
          - $ref: '#/components/schemas/CisSecurityLevelComparison'
          description: The CIS security filter comparison value.
        value:
          allOf:
          - $ref: '#/components/schemas/CisSecurityLevel'
          description: The CIS security filter value.
      required:
      - comparison
      - value
      description: The CIS security level filter. Security level refers to the Benchmark
        levels that CIS assigns to a profile.
    CisSecurityLevelFilterList:
      type: array
      items:
        $ref: '#/components/schemas/CisSecurityLevelFilter'
    CisSessionMessage:
      type: object
      properties:
        ruleId:
          allOf:
          - $ref: '#/components/schemas/RuleId'
          description: The rule ID for the CIS session message.
        status:
          allOf:
          - $ref: '#/components/schemas/CisRuleStatus'
          description: The status of the CIS session message.
        cisRuleDetails:
          allOf:
          - $ref: '#/components/schemas/CisRuleDetails'
          description: The CIS rule details for the CIS session message.
      required:
      - ruleId
      - status
      - cisRuleDetails
      description: The CIS session message.
    CisSessionMessages:
      type: array
      items:
        $ref: '#/components/schemas/CisSessionMessage'
    CisSortOrder:
      type: string
      enum:
      - ASC
      - DESC
    CisStringComparison:
      type: string
      enum:
      - EQUALS
      - PREFIX
      - NOT_EQUALS
    CisStringFilter:
      type: object
      properties:
        comparison:
          allOf:
          - $ref: '#/components/schemas/CisStringComparison'
          description: The comparison value of the CIS string filter.
        value:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The value of the CIS string filter.
      required:
      - comparison
      - value
      description: The CIS string filter.
    CisTagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/MapValue'
    CisTargetResourceAggregation:
      type: object
      properties:
        scanArn:
          allOf:
          - $ref: '#/components/schemas/CisScanArn'
          description: The scan ARN for the CIS target resource.
        targetResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: The ID of the target resource.
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The account ID for the CIS target resource.
        targetResourceTags:
          allOf:
          - $ref: '#/components/schemas/TargetResourceTags'
          description: The tag for the target resource.
        statusCounts:
          allOf:
          - $ref: '#/components/schemas/StatusCounts'
          description: The target resource status counts.
        platform:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The platform for the CIS target resource.
        targetStatus:
          allOf:
          - $ref: '#/components/schemas/CisTargetStatus'
          description: The status of the target resource.
        targetStatusReason:
          allOf:
          - $ref: '#/components/schemas/CisTargetStatusReason'
          description: The reason for the target resource.
      required:
      - scanArn
      description: The CIS target resource aggregation.
    CisTargetResourceAggregationList:
      type: array
      items:
        $ref: '#/components/schemas/CisTargetResourceAggregation'
    CisTargetStatus:
      type: string
      enum:
      - TIMED_OUT
      - CANCELLED
      - COMPLETED
    CisTargetStatusComparison:
      type: string
      enum:
      - EQUALS
    CisTargetStatusFilter:
      type: object
      properties:
        comparison:
          allOf:
          - $ref: '#/components/schemas/CisTargetStatusComparison'
          description: The comparison value of the CIS target status filter.
        value:
          allOf:
          - $ref: '#/components/schemas/CisTargetStatus'
          description: The value of the CIS target status filter.
      required:
      - comparison
      - value
      description: The CIS target status filter.
    CisTargetStatusReason:
      type: string
      enum:
      - SCAN_IN_PROGRESS
      - UNSUPPORTED_OS
      - SSM_UNMANAGED
    CisTargetStatusReasonFilter:
      type: object
      properties:
        comparison:
          allOf:
          - $ref: '#/components/schemas/CisTargetStatusComparison'
          description: The comparison value of the CIS target status reason filter.
        value:
          allOf:
          - $ref: '#/components/schemas/CisTargetStatusReason'
          description: The value of the CIS target status reason filter.
      required:
      - comparison
      - value
      description: The CIS target status reason filter.
    CisTargets:
      type: object
      properties:
        accountIds:
          allOf:
          - $ref: '#/components/schemas/CisAccountIdList'
          description: The CIS target account ids.
        targetResourceTags:
          allOf:
          - $ref: '#/components/schemas/TargetResourceTags'
          description: The CIS target resource tags.
      description: The CIS targets.
    CisaAction:
      type: string
      minLength: 0
    CisaData:
      type: object
      properties:
        dateAdded:
          allOf:
          - $ref: '#/components/schemas/CisaDateAdded'
          description: The date and time CISA added this vulnerability to their catalogue.
        dateDue:
          allOf:
          - $ref: '#/components/schemas/CisaDateDue'
          description: The date and time CISA expects a fix to have been provided
            vulnerability.
        action:
          allOf:
          - $ref: '#/components/schemas/CisaAction'
          description: The remediation action recommended by CISA for this vulnerability.
      description: The Cybersecurity and Infrastructure Security Agency (CISA) details
        for a specific vulnerability.
    CisaDateAdded:
      type: string
      format: date-time
    CisaDateDue:
      type: string
      format: date-time
    ClientToken:
      type: string
      minLength: 1
      maxLength: 64
    CodeFilePath:
      type: object
      properties:
        fileName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the file the code vulnerability was found in.
        filePath:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The file path to the code that a vulnerability was found in.
        startLine:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The line number of the first line of code that a vulnerability
            was found in.
        endLine:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The line number of the last line of code that a vulnerability
            was found in.
      required:
      - fileName
      - filePath
      - startLine
      - endLine
      description: Contains information on where a code vulnerability is located in
        your Lambda function.
    CodeLine:
      type: object
      properties:
        content:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The content of a line of code
        lineNumber:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The line number that a section of code is located at.
      required:
      - content
      - lineNumber
      description: Contains information on the lines of code associated with a code
        snippet.
    CodeLineList:
      type: array
      items:
        $ref: '#/components/schemas/CodeLine'
    CodeSnippetError:
      type: object
      properties:
        findingArn:
          allOf:
          - $ref: '#/components/schemas/FindingArn'
          description: The ARN of the finding that a code snippet couldn't be retrieved
            for.
        errorCode:
          allOf:
          - $ref: '#/components/schemas/CodeSnippetErrorCode'
          description: The error code for the error that prevented a code snippet
            from being retrieved.
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The error message received when Amazon Inspector failed to
            retrieve a code snippet.
      required:
      - findingArn
      - errorCode
      - errorMessage
      description: Contains information about any errors encountered while trying
        to retrieve a code snippet.
    CodeSnippetErrorCode:
      type: string
      enum:
      - INTERNAL_ERROR
      - ACCESS_DENIED
      - CODE_SNIPPET_NOT_FOUND
      - INVALID_INPUT
    CodeSnippetErrorList:
      type: array
      items:
        $ref: '#/components/schemas/CodeSnippetError'
    CodeSnippetResult:
      type: object
      properties:
        findingArn:
          allOf:
          - $ref: '#/components/schemas/FindingArn'
          description: The ARN of a finding that the code snippet is associated with.
        startLine:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The line number of the first line of a code snippet.
        endLine:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The line number of the last line of a code snippet.
        codeSnippet:
          allOf:
          - $ref: '#/components/schemas/CodeLineList'
          description: Contains information on the retrieved code snippet.
        suggestedFixes:
          allOf:
          - $ref: '#/components/schemas/SuggestedFixes'
          description: Details of a suggested code fix.
      description: Contains information on a code snippet retrieved by Amazon Inspector
        from a code vulnerability finding.
    CodeSnippetResultList:
      type: array
      items:
        $ref: '#/components/schemas/CodeSnippetResult'
    CodeVulnerabilityDetails:
      type: object
      properties:
        filePath:
          allOf:
          - $ref: '#/components/schemas/CodeFilePath'
          description: Contains information on where the code vulnerability is located
            in your code.
        detectorTags:
          allOf:
          - $ref: '#/components/schemas/DetectorTagList'
          description: The detector tag associated with the vulnerability. Detector
            tags group related vulnerabilities by common themes or tactics. For a
            list of available tags by programming language, see [Java tags](https://docs.aws.amazon.com/codeguru/detector-library/java/tags/),
            or [Python tags](https://docs.aws.amazon.com/codeguru/detector-library/python/tags/).
        referenceUrls:
          allOf:
          - $ref: '#/components/schemas/ReferenceUrls'
          description: A URL containing supporting documentation about the code vulnerability
            detected.
        ruleId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier for a rule that was used to detect the code
            vulnerability.
        sourceLambdaLayerArn:
          allOf:
          - $ref: '#/components/schemas/LambdaLayerArn'
          description: The Amazon Resource Name (ARN) of the Lambda layer that the
            code vulnerability was detected in.
        detectorId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID for the Amazon CodeGuru detector associated with the
            finding. For more information on detectors see [Amazon CodeGuru Detector
            Library](https://docs.aws.amazon.com/codeguru/detector-library).
        detectorName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the detector used to identify the code vulnerability.
            For more information on detectors see [CodeGuru Detector Library](https://docs.aws.amazon.com/codeguru/detector-library).
        cwes:
          allOf:
          - $ref: '#/components/schemas/CweList'
          description: The Common Weakness Enumeration (CWE) item associated with
            the detected vulnerability.
      required:
      - filePath
      - detectorId
      - detectorName
      - cwes
      description: Contains information on the code vulnerability identified in your
        Lambda function.
    Component:
      type: string
    ComponentArn:
      type: string
    ComponentType:
      type: string
    ComputePlatform:
      type: object
      properties:
        vendor:
          allOf:
          - $ref: '#/components/schemas/Vendor'
          description: The compute platform vendor.
        product:
          allOf:
          - $ref: '#/components/schemas/Product'
          description: The compute platform product.
        version:
          allOf:
          - $ref: '#/components/schemas/PlatformVersion'
          description: The compute platform version.
      description: A compute platform.
    ConflictException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        resourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the conflicting resource.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of the conflicting resource.
      required:
      - message
      - resourceId
      - resourceType
      description: A conflict occurred.
    Counts:
      type: object
      properties:
        count:
          allOf:
          - $ref: '#/components/schemas/AggCounts'
          description: The number of resources.
        groupKey:
          allOf:
          - $ref: '#/components/schemas/GroupKey'
          description: The key associated with this group
      description: a structure that contains information on the count of resources
        within a group.
    CountsList:
      type: array
      items:
        $ref: '#/components/schemas/Counts'
    CoverageDateFilter:
      type: object
      properties:
        startInclusive:
          allOf:
          - $ref: '#/components/schemas/DateTimeTimestamp'
          description: A timestamp representing the start of the time period to filter
            results by.
        endInclusive:
          allOf:
          - $ref: '#/components/schemas/DateTimeTimestamp'
          description: A timestamp representing the end of the time period to filter
            results by.
      description: Contains details of a coverage date filter.
    CoverageDateFilterList:
      type: array
      items:
        $ref: '#/components/schemas/CoverageDateFilter'
    CoverageFilterCriteria:
      type: object
      properties:
        scanStatusCode:
          allOf:
          - $ref: '#/components/schemas/CoverageStringFilterList'
          description: 'The scan status code to filter on. Valid values are: `ValidationException`,
            `InternalServerException`, `ResourceNotFoundException`, `BadRequestException`,
            and `ThrottlingException`.'
        scanStatusReason:
          allOf:
          - $ref: '#/components/schemas/CoverageStringFilterList'
          description: The scan status reason to filter on.
        accountId:
          allOf:
          - $ref: '#/components/schemas/CoverageStringFilterList'
          description: An array of Amazon Web Services account IDs to return coverage
            statistics for.
        resourceId:
          allOf:
          - $ref: '#/components/schemas/CoverageStringFilterList'
          description: An array of Amazon Web Services resource IDs to return coverage
            statistics for.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/CoverageStringFilterList'
          description: An array of Amazon Web Services resource types to return coverage
            statistics for. The values can be `AWS_EC2_INSTANCE`, `AWS_LAMBDA_FUNCTION`,
            `AWS_ECR_CONTAINER_IMAGE`, `AWS_ECR_REPOSITORY` or `AWS_ACCOUNT`.
        scanType:
          allOf:
          - $ref: '#/components/schemas/CoverageStringFilterList'
          description: An array of Amazon Inspector scan types to return coverage
            statistics for.
        ecrRepositoryName:
          allOf:
          - $ref: '#/components/schemas/CoverageStringFilterList'
          description: The Amazon ECR repository name to filter on.
        ecrImageTags:
          allOf:
          - $ref: '#/components/schemas/CoverageStringFilterList'
          description: The Amazon ECR image tags to filter on.
        ec2InstanceTags:
          allOf:
          - $ref: '#/components/schemas/CoverageMapFilterList'
          description: The Amazon EC2 instance tags to filter on.
        lambdaFunctionName:
          allOf:
          - $ref: '#/components/schemas/CoverageStringFilterList'
          description: Returns coverage statistics for Amazon Web Services Lambda
            functions filtered by function names.
        lambdaFunctionTags:
          allOf:
          - $ref: '#/components/schemas/CoverageMapFilterList'
          description: Returns coverage statistics for Amazon Web Services Lambda
            functions filtered by tag.
        lambdaFunctionRuntime:
          allOf:
          - $ref: '#/components/schemas/CoverageStringFilterList'
          description: Returns coverage statistics for Amazon Web Services Lambda
            functions filtered by runtime.
        lastScannedAt:
          allOf:
          - $ref: '#/components/schemas/CoverageDateFilterList'
          description: Filters Amazon Web Services resources based on whether Amazon
            Inspector has checked them for vulnerabilities within the specified time
            range.
        scanMode:
          allOf:
          - $ref: '#/components/schemas/CoverageStringFilterList'
          description: The filter to search for Amazon EC2 instance coverage by scan
            mode. Valid values are `EC2_SSM_AGENT_BASED` and `EC2_AGENTLESS`.
        imagePulledAt:
          allOf:
          - $ref: '#/components/schemas/CoverageDateFilterList'
          description: The date an image was last pulled at.
      description: A structure that identifies filter criteria for `GetCoverageStatistics`.
    CoverageMapComparison:
      type: string
      enum:
      - EQUALS
    CoverageMapFilter:
      type: object
      properties:
        comparison:
          allOf:
          - $ref: '#/components/schemas/CoverageMapComparison'
          description: The operator to compare coverage on.
        key:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The tag key associated with the coverage map filter.
        value:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The tag value associated with the coverage map filter.
      required:
      - comparison
      - key
      description: Contains details of a coverage map filter.
    CoverageMapFilterList:
      type: array
      items:
        $ref: '#/components/schemas/CoverageMapFilter'
    CoverageResourceType:
      type: string
      enum:
      - AWS_EC2_INSTANCE
      - AWS_ECR_CONTAINER_IMAGE
      - AWS_ECR_REPOSITORY
      - AWS_LAMBDA_FUNCTION
    CoverageStringComparison:
      type: string
      enum:
      - EQUALS
      - NOT_EQUALS
    CoverageStringFilter:
      type: object
      properties:
        comparison:
          allOf:
          - $ref: '#/components/schemas/CoverageStringComparison'
          description: The operator to compare strings on.
        value:
          allOf:
          - $ref: '#/components/schemas/CoverageStringInput'
          description: The value to compare strings on.
      required:
      - comparison
      - value
      description: Contains details of a coverage string filter.
    CoverageStringFilterList:
      type: array
      items:
        $ref: '#/components/schemas/CoverageStringFilter'
    CoverageStringInput:
      type: string
      minLength: 1
      maxLength: 1024
    CoveredResource:
      type: object
      properties:
        resourceType:
          allOf:
          - $ref: '#/components/schemas/CoverageResourceType'
          description: The type of the covered resource.
        resourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: The ID of the covered resource.
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The Amazon Web Services account ID of the covered resource.
        scanType:
          allOf:
          - $ref: '#/components/schemas/ScanType'
          description: The Amazon Inspector scan type covering the resource.
        scanStatus:
          allOf:
          - $ref: '#/components/schemas/ScanStatus'
          description: The status of the scan covering the resource.
        resourceMetadata:
          allOf:
          - $ref: '#/components/schemas/ResourceScanMetadata'
          description: An object that contains details about the metadata.
        lastScannedAt:
          allOf:
          - $ref: '#/components/schemas/DateTimeTimestamp'
          description: The date and time the resource was last checked for vulnerabilities.
        scanMode:
          allOf:
          - $ref: '#/components/schemas/ScanMode'
          description: The scan method that is applied to the instance.
      required:
      - resourceType
      - resourceId
      - accountId
      - scanType
      description: An object that contains details about a resource covered by Amazon
        Inspector.
    CoveredResources:
      type: array
      items:
        $ref: '#/components/schemas/CoveredResource'
    CreateCisScanConfigurationRequest:
      type: object
      properties:
        scanName:
          allOf:
          - $ref: '#/components/schemas/CisScanName'
          description: The scan name for the CIS scan configuration.
        securityLevel:
          allOf:
          - $ref: '#/components/schemas/CisSecurityLevel'
          description: The security level for the CIS scan configuration. Security
            level refers to the Benchmark levels that CIS assigns to a profile.
        schedule:
          allOf:
          - $ref: '#/components/schemas/Schedule'
          description: The schedule for the CIS scan configuration.
        targets:
          allOf:
          - $ref: '#/components/schemas/CreateCisTargets'
          description: The targets for the CIS scan configuration.
        tags:
          allOf:
          - $ref: '#/components/schemas/CisTagMap'
          description: The tags for the CIS scan configuration.
      required:
      - scanName
      - securityLevel
      - schedule
      - targets
    CreateCisScanConfigurationResponse:
      type: object
      properties:
        scanConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/CisScanConfigurationArn'
          description: The scan configuration ARN for the CIS scan configuration.
    CreateCisTargets:
      type: object
      properties:
        accountIds:
          allOf:
          - $ref: '#/components/schemas/TargetAccountList'
          description: The CIS target account ids.
        targetResourceTags:
          allOf:
          - $ref: '#/components/schemas/TargetResourceTags'
          description: The CIS target resource tags.
      required:
      - accountIds
      - targetResourceTags
      description: Creates CIS targets.
    CreateFilterRequest:
      type: object
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/FilterAction'
          description: Defines the action that is to be applied to the findings that
            match the filter.
        description:
          allOf:
          - $ref: '#/components/schemas/FilterDescription'
          description: A description of the filter.
        filterCriteria:
          allOf:
          - $ref: '#/components/schemas/FilterCriteria'
          description: Defines the criteria to be used in the filter for querying
            findings.
        name:
          allOf:
          - $ref: '#/components/schemas/FilterName'
          description: The name of the filter. Minimum length of 3. Maximum length
            of 64. Valid characters include alphanumeric characters, dot (.), underscore
            (_), and dash (-). Spaces are not allowed.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A list of tags for the filter.
        reason:
          allOf:
          - $ref: '#/components/schemas/FilterReason'
          description: The reason for creating the filter.
      required:
      - action
      - filterCriteria
      - name
    CreateFilterResponse:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/FilterArn'
          description: The Amazon Resource Number (ARN) of the successfully created
            filter.
      required:
      - arn
    CreateFindingsReportRequest:
      type: object
      properties:
        filterCriteria:
          allOf:
          - $ref: '#/components/schemas/FilterCriteria'
          description: The filter criteria to apply to the results of the finding
            report.
        reportFormat:
          allOf:
          - $ref: '#/components/schemas/ReportFormat'
          description: The format to generate the report in.
        s3Destination:
          allOf:
          - $ref: '#/components/schemas/Destination'
          description: The Amazon S3 export destination for the report.
      required:
      - reportFormat
      - s3Destination
    CreateFindingsReportResponse:
      type: object
      properties:
        reportId:
          allOf:
          - $ref: '#/components/schemas/ReportId'
          description: The ID of the report.
    CreateSbomExportRequest:
      type: object
      properties:
        resourceFilterCriteria:
          allOf:
          - $ref: '#/components/schemas/ResourceFilterCriteria'
          description: The resource filter criteria for the software bill of materials
            (SBOM) report.
        reportFormat:
          allOf:
          - $ref: '#/components/schemas/SbomReportFormat'
          description: The output format for the software bill of materials (SBOM)
            report.
        s3Destination:
          allOf:
          - $ref: '#/components/schemas/Destination'
          description: Contains details of the Amazon S3 bucket and KMS key used to
            export findings.
      required:
      - reportFormat
      - s3Destination
    CreateSbomExportResponse:
      type: object
      properties:
        reportId:
          allOf:
          - $ref: '#/components/schemas/ReportId'
          description: The report ID for the software bill of materials (SBOM) report.
    Currency:
      type: string
      enum:
      - USD
    Cvss2:
      type: object
      properties:
        baseScore:
          allOf:
          - $ref: '#/components/schemas/Cvss2BaseScore'
          description: The CVSS v2 base score for the vulnerability.
        scoringVector:
          allOf:
          - $ref: '#/components/schemas/Cvss2ScoringVector'
          description: The scoring vector associated with the CVSS v2 score.
      description: The Common Vulnerability Scoring System (CVSS) version 2 details
        for the vulnerability.
    Cvss2BaseScore:
      type: number
      format: double
      default: 0
    Cvss2ScoringVector:
      type: string
      minLength: 0
    Cvss3:
      type: object
      properties:
        baseScore:
          allOf:
          - $ref: '#/components/schemas/Cvss3BaseScore'
          description: The CVSS v3 base score for the vulnerability.
        scoringVector:
          allOf:
          - $ref: '#/components/schemas/Cvss3ScoringVector'
          description: The scoring vector associated with the CVSS v3 score.
      description: The Common Vulnerability Scoring System (CVSS) version 3 details
        for the vulnerability.
    Cvss3BaseScore:
      type: number
      format: double
      default: 0
    Cvss3ScoringVector:
      type: string
      minLength: 0
    CvssScore:
      type: object
      properties:
        baseScore:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The base CVSS score used for the finding.
        scoringVector:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The vector string of the CVSS score.
        version:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The version of CVSS used for the score.
        source:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The source of the CVSS score.
      required:
      - baseScore
      - scoringVector
      - version
      - source
      description: The CVSS score for a finding.
    CvssScoreAdjustment:
      type: object
      properties:
        metric:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The metric used to adjust the CVSS score.
        reason:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The reason the CVSS score has been adjustment.
      required:
      - metric
      - reason
      description: Details on adjustments Amazon Inspector made to the CVSS score
        for a finding.
    CvssScoreAdjustmentList:
      type: array
      items:
        $ref: '#/components/schemas/CvssScoreAdjustment'
    CvssScoreDetails:
      type: object
      properties:
        scoreSource:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The source for the CVSS score.
        cvssSource:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The source of the CVSS data.
        version:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The CVSS version used in scoring.
        score:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The CVSS score.
        scoringVector:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The vector for the CVSS score.
        adjustments:
          allOf:
          - $ref: '#/components/schemas/CvssScoreAdjustmentList'
          description: An object that contains details about adjustment Amazon Inspector
            made to the CVSS score.
      required:
      - scoreSource
      - version
      - score
      - scoringVector
      description: Information about the CVSS score.
    CvssScoreList:
      type: array
      items:
        $ref: '#/components/schemas/CvssScore'
    Cwe:
      type: string
      minLength: 0
    CweList:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
    Cwes:
      type: array
      items:
        $ref: '#/components/schemas/Cwe'
    DailySchedule:
      type: object
      properties:
        startTime:
          allOf:
          - $ref: '#/components/schemas/Time'
          description: The schedule start time.
      required:
      - startTime
      description: A daily schedule.
    DateFilter:
      type: object
      properties:
        startInclusive:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: A timestamp representing the start of the time period filtered
            on.
        endInclusive:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: A timestamp representing the end of the time period filtered
            on.
      description: Contains details on the time range used to filter findings.
    DateFilterList:
      type: array
      items:
        $ref: '#/components/schemas/DateFilter'
    DateTimeTimestamp:
      type: string
      format: date-time
    Day:
      type: string
      enum:
      - SUN
      - MON
      - TUE
      - WED
      - THU
      - FRI
      - SAT
    DaysList:
      type: array
      items:
        $ref: '#/components/schemas/Day'
    DelegatedAdmin:
      type: object
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The Amazon Web Services account ID of the Amazon Inspector
            delegated administrator for your organization.
        relationshipStatus:
          allOf:
          - $ref: '#/components/schemas/RelationshipStatus'
          description: The status of the Amazon Inspector delegated administrator.
      description: Details of the Amazon Inspector delegated administrator for your
        organization.
    DelegatedAdminAccount:
      type: object
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The Amazon Web Services account ID of the Amazon Inspector
            delegated administrator for your organization.
        status:
          allOf:
          - $ref: '#/components/schemas/DelegatedAdminStatus'
          description: The status of the Amazon Inspector delegated administrator.
      description: Details of the Amazon Inspector delegated administrator for your
        organization.
    DelegatedAdminAccountList:
      type: array
      items:
        $ref: '#/components/schemas/DelegatedAdminAccount'
    DelegatedAdminStatus:
      type: string
      enum:
      - ENABLED
      - DISABLE_IN_PROGRESS
    DeleteCisScanConfigurationRequest:
      type: object
      properties:
        scanConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/CisScanConfigurationArn'
          description: The ARN of the CIS scan configuration.
      required:
      - scanConfigurationArn
    DeleteCisScanConfigurationResponse:
      type: object
      properties:
        scanConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/CisScanConfigurationArn'
          description: The ARN of the CIS scan configuration.
      required:
      - scanConfigurationArn
    DeleteFilterRequest:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/FilterArn'
          description: The Amazon Resource Number (ARN) of the filter to be deleted.
      required:
      - arn
    DeleteFilterResponse:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/FilterArn'
          description: The Amazon Resource Number (ARN) of the filter that has been
            deleted.
      required:
      - arn
    DescribeOrganizationConfigurationRequest:
      type: object
      properties: {}
    DescribeOrganizationConfigurationResponse:
      type: object
      properties:
        autoEnable:
          allOf:
          - $ref: '#/components/schemas/AutoEnable'
          description: The scan types are automatically enabled for new members of
            your organization.
        maxAccountLimitReached:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Represents whether your organization has reached the maximum
            Amazon Web Services account limit for Amazon Inspector.
    Destination:
      type: object
      properties:
        bucketName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the Amazon S3 bucket to export findings to.
        keyPrefix:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The prefix that the findings will be written under.
        kmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the KMS key used to encrypt data when exporting
            findings.
      required:
      - bucketName
      - kmsKeyArn
      description: Contains details of the Amazon S3 bucket and KMS key used to export
        findings.
    DetectionPlatforms:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
    DetectorTagList:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
    DisableDelegatedAdminAccountRequest:
      type: object
      properties:
        delegatedAdminAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The Amazon Web Services account ID of the current Amazon Inspector
            delegated administrator.
      required:
      - delegatedAdminAccountId
    DisableDelegatedAdminAccountResponse:
      type: object
      properties:
        delegatedAdminAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The Amazon Web Services account ID of the successfully disabled
            delegated administrator.
      required:
      - delegatedAdminAccountId
    DisableRequest:
      type: object
      properties:
        accountIds:
          allOf:
          - $ref: '#/components/schemas/AccountIdSet'
          description: An array of account IDs you want to disable Amazon Inspector
            scans for.
        resourceTypes:
          allOf:
          - $ref: '#/components/schemas/DisableResourceTypeList'
          description: The resource scan types you want to disable.
    DisableResourceTypeList:
      type: array
      items:
        $ref: '#/components/schemas/ResourceScanType'
    DisableResponse:
      type: object
      properties:
        accounts:
          allOf:
          - $ref: '#/components/schemas/AccountList'
          description: Information on the accounts that have had Amazon Inspector
            scans successfully disabled. Details are provided for each account.
        failedAccounts:
          allOf:
          - $ref: '#/components/schemas/FailedAccountList'
          description: Information on any accounts for which Amazon Inspector scans
            could not be disabled. Details are provided for each account.
      required:
      - accounts
    DisassociateMemberRequest:
      type: object
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The Amazon Web Services account ID of the member account to
            disassociate.
      required:
      - accountId
    DisassociateMemberResponse:
      type: object
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The Amazon Web Services account ID of the successfully disassociated
            member.
      required:
      - accountId
    Ec2Configuration:
      type: object
      properties:
        scanMode:
          allOf:
          - $ref: '#/components/schemas/Ec2ScanMode'
          description: The scan method that is applied to the instance.
      required:
      - scanMode
      description: Enables agent-based scanning, which scans instances that are not
        managed by SSM.
    Ec2ConfigurationState:
      type: object
      properties:
        scanModeState:
          allOf:
          - $ref: '#/components/schemas/Ec2ScanModeState'
          description: An object that contains details about the state of the Amazon
            EC2 scan mode.
      description: Details about the state of the EC2 scan configuration for your
        environment.
    Ec2DeepInspectionStatus:
      type: string
      enum:
      - ACTIVATED
      - DEACTIVATED
      - PENDING
      - FAILED
    Ec2InstanceAggregation:
      type: object
      properties:
        amis:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The AMI IDs associated with the Amazon EC2 instances to aggregate
            findings for.
        operatingSystems:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The operating system types to aggregate findings for. Valid
            values must be uppercase and underscore separated, examples are `ORACLE_LINUX_7`
            and `ALPINE_LINUX_3_8`.
        instanceIds:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The Amazon EC2 instance IDs to aggregate findings for.
        instanceTags:
          allOf:
          - $ref: '#/components/schemas/MapFilterList'
          description: The Amazon EC2 instance tags to aggregate findings for.
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          description: The order to sort results by.
        sortBy:
          allOf:
          - $ref: '#/components/schemas/Ec2InstanceSortBy'
          description: The value to sort results by.
      description: The details that define an aggregation based on Amazon EC2 instances.
    Ec2InstanceAggregationResponse:
      type: object
      properties:
        instanceId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon EC2 instance ID.
        ami:
          allOf:
          - $ref: '#/components/schemas/AmiId'
          description: The Amazon Machine Image (AMI) of the Amazon EC2 instance.
        operatingSystem:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The operating system of the Amazon EC2 instance.
        instanceTags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags attached to the instance.
        accountId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Web Services account for the Amazon EC2 instance.
        severityCounts:
          allOf:
          - $ref: '#/components/schemas/SeverityCounts'
          description: An object that contains the count of matched findings per severity.
        networkFindings:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The number of network findings for the Amazon EC2 instance.
      required:
      - instanceId
      description: A response that contains the results of a finding aggregation by
        Amazon EC2 instance.
    Ec2InstanceSortBy:
      type: string
      enum:
      - NETWORK_FINDINGS
      - CRITICAL
      - HIGH
      - ALL
    Ec2Metadata:
      type: object
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags attached to the instance.
        amiId:
          allOf:
          - $ref: '#/components/schemas/AmiId'
          description: The ID of the Amazon Machine Image (AMI) used to launch the
            instance.
        platform:
          allOf:
          - $ref: '#/components/schemas/Ec2Platform'
          description: The platform of the instance.
      description: Meta data details of an Amazon EC2 instance.
    Ec2Platform:
      type: string
      enum:
      - WINDOWS
      - LINUX
      - UNKNOWN
      - MACOS
    Ec2ScanMode:
      type: string
      enum:
      - EC2_SSM_AGENT_BASED
      - EC2_HYBRID
    Ec2ScanModeState:
      type: object
      properties:
        scanMode:
          allOf:
          - $ref: '#/components/schemas/Ec2ScanMode'
          description: The scan method that is applied to the instance.
        scanModeStatus:
          allOf:
          - $ref: '#/components/schemas/Ec2ScanModeStatus'
          description: The status of the Amazon EC2 scan mode setting.
      description: The state of your Amazon EC2 scan mode configuration.
    Ec2ScanModeStatus:
      type: string
      enum:
      - SUCCESS
      - PENDING
    EcrConfiguration:
      type: object
      properties:
        rescanDuration:
          allOf:
          - $ref: '#/components/schemas/EcrRescanDuration'
          description: The rescan duration configured for image push date.
        pullDateRescanDuration:
          allOf:
          - $ref: '#/components/schemas/EcrPullDateRescanDuration'
          description: The rescan duration configured for image pull date.
      required:
      - rescanDuration
      description: Details about the ECR automated re-scan duration setting for your
        environment.
    EcrConfigurationState:
      type: object
      properties:
        rescanDurationState:
          allOf:
          - $ref: '#/components/schemas/EcrRescanDurationState'
          description: An object that contains details about the state of the ECR
            re-scan settings.
      description: Details about the state of the ECR scans for your environment.
    EcrContainerImageMetadata:
      type: object
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: Tags associated with the Amazon ECR image metadata.
        imagePulledAt:
          allOf:
          - $ref: '#/components/schemas/DateTimeTimestamp'
          description: The date an image was last pulled at.
      description: Information on the Amazon ECR image metadata associated with a
        finding.
    EcrPullDateRescanDuration:
      type: string
      enum:
      - DAYS_14
      - DAYS_30
      - DAYS_60
      - DAYS_90
      - DAYS_180
    EcrRepositoryMetadata:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the Amazon ECR repository.
        scanFrequency:
          allOf:
          - $ref: '#/components/schemas/EcrScanFrequency'
          description: The frequency of scans.
      description: Information on the Amazon ECR repository metadata associated with
        a finding.
    EcrRescanDuration:
      type: string
      enum:
      - LIFETIME
      - DAYS_30
      - DAYS_180
      - DAYS_14
      - DAYS_60
      - DAYS_90
    EcrRescanDurationState:
      type: object
      properties:
        rescanDuration:
          allOf:
          - $ref: '#/components/schemas/EcrRescanDuration'
          description: The rescan duration configured for image push date.
        status:
          allOf:
          - $ref: '#/components/schemas/EcrRescanDurationStatus'
          description: The status of changes to the ECR automated re-scan duration.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/DateTimeTimestamp'
          description: A timestamp representing when the last time the ECR scan duration
            setting was changed.
        pullDateRescanDuration:
          allOf:
          - $ref: '#/components/schemas/EcrPullDateRescanDuration'
          description: The rescan duration configured for image pull date.
      description: Details about the state of your ECR re-scan duration settings.
        The ECR re-scan duration defines how long an ECR image will be actively scanned
        by Amazon Inspector. When the number of days since an image was last pushed
        exceeds the duration configured for image pull date, and the duration configured
        for image pull date, the monitoring state of that image becomes `inactive`
        and all associated findings are scheduled for closure.
    EcrRescanDurationStatus:
      type: string
      enum:
      - SUCCESS
      - PENDING
      - FAILED
    EcrScanFrequency:
      type: string
      enum:
      - MANUAL
      - SCAN_ON_PUSH
      - CONTINUOUS_SCAN
    EnableDelegatedAdminAccountRequest:
      type: object
      properties:
        delegatedAdminAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The Amazon Web Services account ID of the Amazon Inspector
            delegated administrator.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: The idempotency token for the request.
      required:
      - delegatedAdminAccountId
    EnableDelegatedAdminAccountResponse:
      type: object
      properties:
        delegatedAdminAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The Amazon Web Services account ID of the successfully Amazon
            Inspector delegated administrator.
      required:
      - delegatedAdminAccountId
    EnableRequest:
      type: object
      properties:
        accountIds:
          allOf:
          - $ref: '#/components/schemas/AccountIdSet'
          description: A list of account IDs you want to enable Amazon Inspector scans
            for.
        resourceTypes:
          allOf:
          - $ref: '#/components/schemas/EnableResourceTypeList'
          description: The resource scan types you want to enable.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: The idempotency token for the request.
      required:
      - resourceTypes
    EnableResourceTypeList:
      type: array
      items:
        $ref: '#/components/schemas/ResourceScanType'
    EnableResponse:
      type: object
      properties:
        accounts:
          allOf:
          - $ref: '#/components/schemas/AccountList'
          description: Information on the accounts that have had Amazon Inspector
            scans successfully enabled. Details are provided for each account.
        failedAccounts:
          allOf:
          - $ref: '#/components/schemas/FailedAccountList'
          description: Information on any accounts for which Amazon Inspector scans
            could not be enabled. Details are provided for each account.
      required:
      - accounts
    Epss:
      type: object
      properties:
        score:
          allOf:
          - $ref: '#/components/schemas/EpssScore'
          description: The Exploit Prediction Scoring System (EPSS) score.
      description: Details about the Exploit Prediction Scoring System (EPSS) score.
    EpssDetails:
      type: object
      properties:
        score:
          allOf:
          - $ref: '#/components/schemas/EpssScoreValue'
          description: The EPSS score.
      description: Details about the Exploit Prediction Scoring System (EPSS) score
        for a finding.
    EpssScore:
      type: number
      format: double
      default: 0
    EpssScoreValue:
      type: number
      format: double
      default: 0
      minimum: 0.0
      maximum: 1.0
    ErrorCode:
      type: string
      enum:
      - ALREADY_ENABLED
      - ENABLE_IN_PROGRESS
      - DISABLE_IN_PROGRESS
      - SUSPEND_IN_PROGRESS
      - RESOURCE_NOT_FOUND
      - ACCESS_DENIED
      - INTERNAL_ERROR
      - SSM_UNAVAILABLE
      - SSM_THROTTLED
      - EVENTBRIDGE_UNAVAILABLE
      - EVENTBRIDGE_THROTTLED
      - RESOURCE_SCAN_NOT_DISABLED
      - DISASSOCIATE_ALL_MEMBERS
      - ACCOUNT_IS_ISOLATED
      - EC2_SSM_RESOURCE_DATA_SYNC_LIMIT_EXCEEDED
      - EC2_SSM_ASSOCIATION_VERSION_LIMIT_EXCEEDED
    ErrorMessage:
      type: string
    Evidence:
      type: object
      properties:
        evidenceRule:
          allOf:
          - $ref: '#/components/schemas/EvidenceRule'
          description: The evidence rule.
        evidenceDetail:
          allOf:
          - $ref: '#/components/schemas/EvidenceDetail'
          description: The evidence details.
        severity:
          allOf:
          - $ref: '#/components/schemas/EvidenceSeverity'
          description: The evidence severity.
      description: Details of the evidence for a vulnerability identified in a finding.
    EvidenceDetail:
      type: string
      minLength: 0
    EvidenceList:
      type: array
      items:
        $ref: '#/components/schemas/Evidence'
    EvidenceRule:
      type: string
      minLength: 0
    EvidenceSeverity:
      type: string
      minLength: 0
    ExecutionRoleArn:
      type: string
      pattern: ^arn:(aws[a-zA-Z-]*)?:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
    ExploitAvailable:
      type: string
      enum:
      - 'YES'
      - 'NO'
    ExploitObserved:
      type: object
      properties:
        lastSeen:
          allOf:
          - $ref: '#/components/schemas/LastSeen'
          description: The date an time when the exploit was last seen.
        firstSeen:
          allOf:
          - $ref: '#/components/schemas/FirstSeen'
          description: The date an time when the exploit was first seen.
      description: Contains information on when this exploit was observed.
    ExploitabilityDetails:
      type: object
      properties:
        lastKnownExploitAt:
          allOf:
          - $ref: '#/components/schemas/DateTimeTimestamp'
          description: The date and time of the last exploit associated with a finding
            discovered in your environment.
      description: The details of an exploit available for a finding discovered in
        your environment.
    ExternalReportStatus:
      type: string
      enum:
      - SUCCEEDED
      - IN_PROGRESS
      - CANCELLED
      - FAILED
    FailedAccount:
      type: object
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The Amazon Web Services account ID.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: The status of Amazon Inspector for the account.
        resourceStatus:
          allOf:
          - $ref: '#/components/schemas/ResourceStatus'
          description: An object detailing which resources Amazon Inspector is enabled
            to scan for the account.
        errorCode:
          allOf:
          - $ref: '#/components/schemas/ErrorCode'
          description: The error code explaining why the account failed to enable
            Amazon Inspector.
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The error message received when the account failed to enable
            Amazon Inspector.
      required:
      - accountId
      - errorCode
      - errorMessage
      description: An object with details on why an account failed to enable Amazon
        Inspector.
    FailedAccountList:
      type: array
      items:
        $ref: '#/components/schemas/FailedAccount'
    FailedMemberAccountEc2DeepInspectionStatusState:
      type: object
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The unique identifier for the Amazon Web Services account of
            the organization member that failed to activate Amazon Inspector deep
            inspection.
        ec2ScanStatus:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: The status of EC2 scanning in the account that failed to activate
            Amazon Inspector deep inspection.
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The error message explaining why the account failed to activate
            Amazon Inspector deep inspection.
      required:
      - accountId
      description: An object that contains details about a member account in your
        organization that failed to activate Amazon Inspector deep inspection.
    FailedMemberAccountEc2DeepInspectionStatusStateList:
      type: array
      items:
        $ref: '#/components/schemas/FailedMemberAccountEc2DeepInspectionStatusState'
    FilePath:
      type: string
      minLength: 1
      maxLength: 1024
    Filter:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/FilterArn'
          description: The Amazon Resource Number (ARN) associated with this filter.
        ownerId:
          allOf:
          - $ref: '#/components/schemas/OwnerId'
          description: The Amazon Web Services account ID of the account that created
            the filter.
        name:
          allOf:
          - $ref: '#/components/schemas/FilterName'
          description: The name of the filter.
        criteria:
          allOf:
          - $ref: '#/components/schemas/FilterCriteria'
          description: Details on the filter criteria associated with this filter.
        action:
          allOf:
          - $ref: '#/components/schemas/FilterAction'
          description: The action that is to be applied to the findings that match
            the filter.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/DateTimeTimestamp'
          description: The date and time this filter was created at.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/DateTimeTimestamp'
          description: The date and time the filter was last updated at.
        description:
          allOf:
          - $ref: '#/components/schemas/FilterDescription'
          description: A description of the filter.
        reason:
          allOf:
          - $ref: '#/components/schemas/FilterReason'
          description: The reason for the filter.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags attached to the filter.
      required:
      - arn
      - ownerId
      - name
      - criteria
      - action
      - createdAt
      - updatedAt
      description: Details about a filter.
    FilterAction:
      type: string
      enum:
      - NONE
      - SUPPRESS
    FilterArn:
      type: string
      minLength: 1
      maxLength: 128
    FilterArnList:
      type: array
      items:
        $ref: '#/components/schemas/FilterArn'
    FilterCriteria:
      type: object
      properties:
        findingArn:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: Details on the finding ARNs used to filter findings.
        awsAccountId:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: Details of the Amazon Web Services account IDs used to filter
            findings.
        findingType:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: Details on the finding types used to filter findings.
        severity:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: Details on the severity used to filter findings.
        firstObservedAt:
          allOf:
          - $ref: '#/components/schemas/DateFilterList'
          description: Details on the date and time a finding was first seen used
            to filter findings.
        lastObservedAt:
          allOf:
          - $ref: '#/components/schemas/DateFilterList'
          description: Details on the date and time a finding was last seen used to
            filter findings.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/DateFilterList'
          description: Details on the date and time a finding was last updated at
            used to filter findings.
        findingStatus:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: Details on the finding status types used to filter findings.
        title:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: Details on the finding title used to filter findings.
        inspectorScore:
          allOf:
          - $ref: '#/components/schemas/NumberFilterList'
          description: The Amazon Inspector score to filter on.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: Details on the resource types used to filter findings.
        resourceId:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: Details on the resource IDs used to filter findings.
        resourceTags:
          allOf:
          - $ref: '#/components/schemas/MapFilterList'
          description: Details on the resource tags used to filter findings.
        ec2InstanceImageId:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: Details of the Amazon EC2 instance image IDs used to filter
            findings.
        ec2InstanceVpcId:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: Details of the Amazon EC2 instance VPC IDs used to filter findings.
        ec2InstanceSubnetId:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: Details of the Amazon EC2 instance subnet IDs used to filter
            findings.
        ecrImagePushedAt:
          allOf:
          - $ref: '#/components/schemas/DateFilterList'
          description: Details on the Amazon ECR image push date and time used to
            filter findings.
        ecrImageArchitecture:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: Details of the Amazon ECR image architecture types used to
            filter findings.
        ecrImageRegistry:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: Details on the Amazon ECR registry used to filter findings.
        ecrImageRepositoryName:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: Details on the name of the Amazon ECR repository used to filter
            findings.
        ecrImageTags:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The tags attached to the Amazon ECR container image.
        ecrImageHash:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: Details of the Amazon ECR image hashes used to filter findings.
        portRange:
          allOf:
          - $ref: '#/components/schemas/PortRangeFilterList'
          description: Details on the port ranges used to filter findings.
        networkProtocol:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: Details on network protocol used to filter findings.
        componentId:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: Details of the component IDs used to filter findings.
        componentType:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: Details of the component types used to filter findings.
        vulnerabilityId:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: Details on the vulnerability ID used to filter findings.
        vulnerabilitySource:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: Details on the vulnerability type used to filter findings.
        vendorSeverity:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: Details on the vendor severity used to filter findings.
        vulnerablePackages:
          allOf:
          - $ref: '#/components/schemas/PackageFilterList'
          description: Details on the vulnerable packages used to filter findings.
        relatedVulnerabilities:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: Details on the related vulnerabilities used to filter findings.
        fixAvailable:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: Details on whether a fix is available through a version update.
            This value can be `YES`, `NO`, or `PARTIAL`. A `PARTIAL` fix means that
            some, but not all, of the packages identified in the finding have fixes
            available through updated versions.
        lambdaFunctionName:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: Filters the list of Amazon Web Services Lambda functions by
            the name of the function.
        lambdaFunctionLayers:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: Filters the list of Amazon Web Services Lambda functions by
            the function's [ layers](https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html).
            A Lambda function can have up to five layers.
        lambdaFunctionRuntime:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: Filters the list of Amazon Web Services Lambda functions by
            the runtime environment for the Lambda function.
        lambdaFunctionLastModifiedAt:
          allOf:
          - $ref: '#/components/schemas/DateFilterList'
          description: Filters the list of Amazon Web Services Lambda functions by
            the date and time that a user last updated the configuration, in [ISO
            8601 format](https://www.iso.org/iso-8601-date-and-time-format.html)
        lambdaFunctionExecutionRoleArn:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: Filters the list of Amazon Web Services Lambda functions by
            execution role.
        exploitAvailable:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: Filters the list of Amazon Web Services Lambda findings by
            the availability of exploits.
        codeVulnerabilityDetectorName:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The name of the detector used to identify a code vulnerability
            in a Lambda function used to filter findings.
        codeVulnerabilityDetectorTags:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The detector type tag associated with the vulnerability used
            to filter findings. Detector tags group related vulnerabilities by common
            themes or tactics. For a list of available tags by programming language,
            see [Java tags](https://docs.aws.amazon.com/codeguru/detector-library/java/tags/),
            or [Python tags](https://docs.aws.amazon.com/codeguru/detector-library/python/tags/).
        codeVulnerabilityFilePath:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The file path to the file in a Lambda function that contains
            a code vulnerability used to filter findings.
        epssScore:
          allOf:
          - $ref: '#/components/schemas/NumberFilterList'
          description: The EPSS score used to filter findings.
      description: Details on the criteria used to define the filter.
    FilterDescription:
      type: string
      minLength: 1
      maxLength: 512
    FilterList:
      type: array
      items:
        $ref: '#/components/schemas/Filter'
    FilterName:
      type: string
      minLength: 1
      maxLength: 128
    FilterReason:
      type: string
      minLength: 1
      maxLength: 512
    Finding:
      type: object
      properties:
        findingArn:
          allOf:
          - $ref: '#/components/schemas/FindingArn'
          description: The Amazon Resource Number (ARN) of the finding.
        awsAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The Amazon Web Services account ID associated with the finding.
        type:
          allOf:
          - $ref: '#/components/schemas/FindingType'
          description: The type of the finding. The `type` value determines the valid
            values for `resource` in your request. For more information, see [Finding
            types](https://docs.aws.amazon.com/inspector/latest/user/findings-types.html)
            in the Amazon Inspector user guide.
        description:
          allOf:
          - $ref: '#/components/schemas/FindingDescription'
          description: The description of the finding.
        title:
          allOf:
          - $ref: '#/components/schemas/FindingTitle'
          description: The title of the finding.
        remediation:
          allOf:
          - $ref: '#/components/schemas/Remediation'
          description: An object that contains the details about how to remediate
            a finding.
        severity:
          allOf:
          - $ref: '#/components/schemas/Severity'
          description: The severity of the finding. `UNTRIAGED` applies to `PACKAGE_VULNERABILITY`
            type findings that the vendor has not assigned a severity yet. For more
            information, see [Severity levels for findings](https://docs.aws.amazon.com/inspector/latest/user/findings-understanding-severity.html)
            in the Amazon Inspector user guide.
        firstObservedAt:
          allOf:
          - $ref: '#/components/schemas/DateTimeTimestamp'
          description: The date and time that the finding was first observed.
        lastObservedAt:
          allOf:
          - $ref: '#/components/schemas/DateTimeTimestamp'
          description: The date and time the finding was last observed. This timestamp
            for this field remains unchanged until a finding is updated.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/DateTimeTimestamp'
          description: The date and time the finding was last updated at.
        status:
          allOf:
          - $ref: '#/components/schemas/FindingStatus'
          description: The status of the finding.
        resources:
          allOf:
          - $ref: '#/components/schemas/ResourceList'
          description: Contains information on the resources involved in a finding.
            The `resource` value determines the valid values for `type` in your request.
            For more information, see [Finding types](https://docs.aws.amazon.com/inspector/latest/user/findings-types.html)
            in the Amazon Inspector user guide.
        inspectorScore:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The Amazon Inspector score given to the finding.
        inspectorScoreDetails:
          allOf:
          - $ref: '#/components/schemas/InspectorScoreDetails'
          description: An object that contains details of the Amazon Inspector score.
        networkReachabilityDetails:
          allOf:
          - $ref: '#/components/schemas/NetworkReachabilityDetails'
          description: An object that contains the details of a network reachability
            finding.
        packageVulnerabilityDetails:
          allOf:
          - $ref: '#/components/schemas/PackageVulnerabilityDetails'
          description: An object that contains the details of a package vulnerability
            finding.
        fixAvailable:
          allOf:
          - $ref: '#/components/schemas/FixAvailable'
          description: Details on whether a fix is available through a version update.
            This value can be `YES`, `NO`, or `PARTIAL`. A `PARTIAL` fix means that
            some, but not all, of the packages identified in the finding have fixes
            available through updated versions.
        exploitAvailable:
          allOf:
          - $ref: '#/components/schemas/ExploitAvailable'
          description: If a finding discovered in your environment has an exploit
            available.
        exploitabilityDetails:
          allOf:
          - $ref: '#/components/schemas/ExploitabilityDetails'
          description: The details of an exploit available for a finding discovered
            in your environment.
        codeVulnerabilityDetails:
          allOf:
          - $ref: '#/components/schemas/CodeVulnerabilityDetails'
          description: Details about the code vulnerability identified in a Lambda
            function used to filter findings.
        epss:
          allOf:
          - $ref: '#/components/schemas/EpssDetails'
          description: The finding's EPSS score.
      required:
      - findingArn
      - awsAccountId
      - type
      - description
      - remediation
      - severity
      - firstObservedAt
      - lastObservedAt
      - status
      - resources
      description: Details about an Amazon Inspector finding.
    FindingArn:
      type: string
      pattern: ^arn:(aws[a-zA-Z-]*)?:inspector2:[a-z]{2}(-gov)?-[a-z]+-\d{1}:\d{12}:finding/[a-f0-9]{32}$
      minLength: 1
      maxLength: 100
    FindingArnList:
      type: array
      items:
        $ref: '#/components/schemas/FindingArn'
    FindingArns:
      type: array
      items:
        $ref: '#/components/schemas/FindingArn'
    FindingDescription:
      type: string
      minLength: 1
      maxLength: 1024
    FindingDetail:
      type: object
      properties:
        findingArn:
          allOf:
          - $ref: '#/components/schemas/FindingArn'
          description: The finding ARN that the vulnerability details are associated
            with.
        cisaData:
          allOf:
          - $ref: '#/components/schemas/CisaData'
          description: The Cybersecurity and Infrastructure Security Agency (CISA)
            details for a specific vulnerability.
        riskScore:
          allOf:
          - $ref: '#/components/schemas/RiskScore'
          description: The risk score of the vulnerability.
        evidences:
          allOf:
          - $ref: '#/components/schemas/EvidenceList'
          description: Information on the evidence of the vulnerability.
        ttps:
          allOf:
          - $ref: '#/components/schemas/Ttps'
          description: The MITRE adversary tactics, techniques, or procedures (TTPs)
            associated with the vulnerability.
        tools:
          allOf:
          - $ref: '#/components/schemas/Tools'
          description: The known malware tools or kits that can exploit the vulnerability.
        exploitObserved:
          allOf:
          - $ref: '#/components/schemas/ExploitObserved'
          description: Contains information on when this exploit was observed.
        referenceUrls:
          allOf:
          - $ref: '#/components/schemas/VulnerabilityReferenceUrls'
          description: The reference URLs for the vulnerability data.
        cwes:
          allOf:
          - $ref: '#/components/schemas/Cwes'
          description: The Common Weakness Enumerations (CWEs) associated with the
            vulnerability.
        epssScore:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The Exploit Prediction Scoring System (EPSS) score of the vulnerability.
      description: Details of the vulnerability identified in a finding.
    FindingDetails:
      type: array
      items:
        $ref: '#/components/schemas/FindingDetail'
    FindingDetailsError:
      type: object
      properties:
        findingArn:
          allOf:
          - $ref: '#/components/schemas/FindingArn'
          description: The finding ARN that returned an error.
        errorCode:
          allOf:
          - $ref: '#/components/schemas/FindingDetailsErrorCode'
          description: The error code.
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The error message.
      required:
      - findingArn
      - errorCode
      - errorMessage
      description: Details about an error encountered when trying to return vulnerability
        data for a finding.
    FindingDetailsErrorCode:
      type: string
      enum:
      - INTERNAL_ERROR
      - ACCESS_DENIED
      - FINDING_DETAILS_NOT_FOUND
      - INVALID_INPUT
    FindingDetailsErrorList:
      type: array
      items:
        $ref: '#/components/schemas/FindingDetailsError'
    FindingList:
      type: array
      items:
        $ref: '#/components/schemas/Finding'
    FindingStatus:
      type: string
      enum:
      - ACTIVE
      - SUPPRESSED
      - CLOSED
    FindingTitle:
      type: string
      minLength: 1
      maxLength: 1024
    FindingType:
      type: string
      enum:
      - NETWORK_REACHABILITY
      - PACKAGE_VULNERABILITY
      - CODE_VULNERABILITY
    FindingTypeAggregation:
      type: object
      properties:
        findingType:
          allOf:
          - $ref: '#/components/schemas/AggregationFindingType'
          description: The finding type to aggregate.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/AggregationResourceType'
          description: The resource type to aggregate.
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          description: The order to sort results by.
        sortBy:
          allOf:
          - $ref: '#/components/schemas/FindingTypeSortBy'
          description: The value to sort results by.
      description: The details that define an aggregation based on finding type.
    FindingTypeAggregationResponse:
      type: object
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The ID of the Amazon Web Services account associated with the
            findings.
        severityCounts:
          allOf:
          - $ref: '#/components/schemas/SeverityCounts'
          description: The value to sort results by.
        exploitAvailableCount:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The number of findings that have an exploit available.
        fixAvailableCount:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: Details about the number of fixes.
      description: A response that contains the results of a finding type aggregation.
    FindingTypeSortBy:
      type: string
      enum:
      - CRITICAL
      - HIGH
      - ALL
    FirstSeen:
      type: string
      format: date-time
    FixAvailable:
      type: string
      enum:
      - 'YES'
      - 'NO'
      - PARTIAL
    FreeTrialAccountInfo:
      type: object
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/MeteringAccountId'
          description: The account associated with the Amazon Inspector free trial
            information.
        freeTrialInfo:
          allOf:
          - $ref: '#/components/schemas/FreeTrialInfoList'
          description: Contains information about the Amazon Inspector free trial
            for an account.
      required:
      - accountId
      - freeTrialInfo
      description: Information about the Amazon Inspector free trial for an account.
    FreeTrialAccountInfoList:
      type: array
      items:
        $ref: '#/components/schemas/FreeTrialAccountInfo'
    FreeTrialInfo:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/FreeTrialType'
          description: The type of scan covered by the Amazon Inspector free trail.
        start:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time that the Amazon Inspector free trail started
            for a given account.
        end:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time that the Amazon Inspector free trail ends
            for a given account.
        status:
          allOf:
          - $ref: '#/components/schemas/FreeTrialStatus'
          description: The order to sort results by.
      required:
      - type
      - start
      - end
      - status
      description: An object that contains information about the Amazon Inspector
        free trial for an account.
    FreeTrialInfoError:
      type: object
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/MeteringAccountId'
          description: The account associated with the Amazon Inspector free trial
            information.
        code:
          allOf:
          - $ref: '#/components/schemas/FreeTrialInfoErrorCode'
          description: The error code.
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The error message returned.
      required:
      - accountId
      - code
      - message
      description: Information about an error received while accessing free trail
        data for an account.
    FreeTrialInfoErrorCode:
      type: string
      enum:
      - ACCESS_DENIED
      - INTERNAL_ERROR
    FreeTrialInfoErrorList:
      type: array
      items:
        $ref: '#/components/schemas/FreeTrialInfoError'
    FreeTrialInfoList:
      type: array
      items:
        $ref: '#/components/schemas/FreeTrialInfo'
    FreeTrialStatus:
      type: string
      enum:
      - ACTIVE
      - INACTIVE
    FreeTrialType:
      type: string
      enum:
      - EC2
      - ECR
      - LAMBDA
      - LAMBDA_CODE
    FunctionName:
      type: string
      pattern: ^[a-zA-Z0-9-_\.]+(:(\$LATEST|[a-zA-Z0-9-_]+))?$
    GetCisScanReportRequest:
      type: object
      properties:
        scanArn:
          allOf:
          - $ref: '#/components/schemas/CisScanArn'
          description: The scan ARN.
        targetAccounts:
          allOf:
          - $ref: '#/components/schemas/ReportTargetAccounts'
          description: The target accounts.
        reportFormat:
          allOf:
          - $ref: '#/components/schemas/CisReportFormat'
          description: The format of the report. Valid values are `PDF` and `CSV`.
            If no value is specified, the report format defaults to `PDF`.
      required:
      - scanArn
    GetCisScanReportResponse:
      type: object
      properties:
        url:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The URL where a PDF or CSV of the CIS scan report can be downloaded.
        status:
          allOf:
          - $ref: '#/components/schemas/CisReportStatus'
          description: The status.
    GetCisScanResultDetailsMaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    GetCisScanResultDetailsRequest:
      type: object
      properties:
        scanArn:
          allOf:
          - $ref: '#/components/schemas/CisScanArn'
          description: The scan ARN.
        targetResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: The target resource ID.
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The account ID.
        filterCriteria:
          allOf:
          - $ref: '#/components/schemas/CisScanResultDetailsFilterCriteria'
          description: The filter criteria.
        sortBy:
          allOf:
          - $ref: '#/components/schemas/CisScanResultDetailsSortBy'
          description: The sort by order.
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/CisSortOrder'
          description: The sort order.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token from a previous request that's used to
            retrieve the next page of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/GetCisScanResultDetailsMaxResults'
          description: The maximum number of CIS scan result details to be returned
            in a single page of results.
      required:
      - scanArn
      - targetResourceId
      - accountId
    GetCisScanResultDetailsResponse:
      type: object
      properties:
        scanResultDetails:
          allOf:
          - $ref: '#/components/schemas/CisScanResultDetailsList'
          description: The scan result details.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token from a previous request that's used to
            retrieve the next page of results.
    GetConfigurationRequest:
      type: object
      properties: {}
    GetConfigurationResponse:
      type: object
      properties:
        ecrConfiguration:
          allOf:
          - $ref: '#/components/schemas/EcrConfigurationState'
          description: Specifies how the ECR automated re-scan duration is currently
            configured for your environment.
        ec2Configuration:
          allOf:
          - $ref: '#/components/schemas/Ec2ConfigurationState'
          description: Specifies how the Amazon EC2 automated scan mode is currently
            configured for your environment.
    GetDelegatedAdminAccountRequest:
      type: object
      properties: {}
    GetDelegatedAdminAccountResponse:
      type: object
      properties:
        delegatedAdmin:
          allOf:
          - $ref: '#/components/schemas/DelegatedAdmin'
          description: The Amazon Web Services account ID of the Amazon Inspector
            delegated administrator.
    GetEc2DeepInspectionConfigurationRequest:
      type: object
      properties: {}
    GetEc2DeepInspectionConfigurationResponse:
      type: object
      properties:
        packagePaths:
          allOf:
          - $ref: '#/components/schemas/PathList'
          description: The Amazon Inspector deep inspection custom paths for your
            account.
        orgPackagePaths:
          allOf:
          - $ref: '#/components/schemas/PathList'
          description: The Amazon Inspector deep inspection custom paths for your
            organization.
        status:
          allOf:
          - $ref: '#/components/schemas/Ec2DeepInspectionStatus'
          description: The activation status of Amazon Inspector deep inspection in
            your account.
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: An error message explaining why Amazon Inspector deep inspection
            configurations could not be retrieved for your account.
    GetEncryptionKeyRequest:
      type: object
      properties:
        scanType:
          allOf:
          - $ref: '#/components/schemas/ScanType'
          description: The scan type the key encrypts.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The resource type the key encrypts.
      required:
      - scanType
      - resourceType
    GetEncryptionKeyResponse:
      type: object
      properties:
        kmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          description: A kms key ID.
      required:
      - kmsKeyId
    GetFindingsReportStatusRequest:
      type: object
      properties:
        reportId:
          allOf:
          - $ref: '#/components/schemas/ReportId'
          description: The ID of the report to retrieve the status of.
    GetFindingsReportStatusResponse:
      type: object
      properties:
        reportId:
          allOf:
          - $ref: '#/components/schemas/ReportId'
          description: The ID of the report.
        status:
          allOf:
          - $ref: '#/components/schemas/ExternalReportStatus'
          description: The status of the report.
        errorCode:
          allOf:
          - $ref: '#/components/schemas/ReportingErrorCode'
          description: The error code of the report.
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: The error message of the report.
        destination:
          allOf:
          - $ref: '#/components/schemas/Destination'
          description: The destination of the report.
        filterCriteria:
          allOf:
          - $ref: '#/components/schemas/FilterCriteria'
          description: The filter criteria associated with the report.
    GetMemberRequest:
      type: object
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The Amazon Web Services account ID of the member account to
            retrieve information on.
      required:
      - accountId
    GetMemberResponse:
      type: object
      properties:
        member:
          allOf:
          - $ref: '#/components/schemas/Member'
          description: Details of the retrieved member account.
    GetSbomExportRequest:
      type: object
      properties:
        reportId:
          allOf:
          - $ref: '#/components/schemas/ReportId'
          description: The report ID of the SBOM export to get details for.
      required:
      - reportId
    GetSbomExportResponse:
      type: object
      properties:
        reportId:
          allOf:
          - $ref: '#/components/schemas/ReportId'
          description: The report ID of the software bill of materials (SBOM) report.
        format:
          allOf:
          - $ref: '#/components/schemas/SbomReportFormat'
          description: The format of the software bill of materials (SBOM) report.
        status:
          allOf:
          - $ref: '#/components/schemas/ExternalReportStatus'
          description: The status of the software bill of materials (SBOM) report.
        errorCode:
          allOf:
          - $ref: '#/components/schemas/ReportingErrorCode'
          description: An error code.
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: An error message.
        s3Destination:
          allOf:
          - $ref: '#/components/schemas/Destination'
          description: Contains details of the Amazon S3 bucket and KMS key used to
            export findings
        filterCriteria:
          allOf:
          - $ref: '#/components/schemas/ResourceFilterCriteria'
          description: Contains details about the resource filter criteria used for
            the software bill of materials (SBOM) report.
    GroupKey:
      type: string
      enum:
      - SCAN_STATUS_CODE
      - SCAN_STATUS_REASON
      - ACCOUNT_ID
      - RESOURCE_TYPE
      - ECR_REPOSITORY_NAME
    ImageHash:
      type: string
      pattern: ^sha256:[a-z0-9]{64}$
      minLength: 71
      maxLength: 71
    ImageLayerAggregation:
      type: object
      properties:
        repositories:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The repository associated with the container image hosting
            the layers.
        resourceIds:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The ID of the container image layer.
        layerHashes:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The hashes associated with the layers.
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          description: The order to sort results by.
        sortBy:
          allOf:
          - $ref: '#/components/schemas/ImageLayerSortBy'
          description: The value to sort results by.
      description: The details that define an aggregation based on container image
        layers.
    ImageLayerAggregationResponse:
      type: object
      properties:
        repository:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The repository the layer resides in.
        resourceId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The resource ID of the container image layer.
        layerHash:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The layer hash.
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The ID of the Amazon Web Services account that owns the container
            image hosting the layer image.
        severityCounts:
          allOf:
          - $ref: '#/components/schemas/SeverityCounts'
          description: An object that represents the count of matched findings per
            severity.
      required:
      - repository
      - resourceId
      - layerHash
      - accountId
      description: A response that contains the results of a finding aggregation by
        image layer.
    ImageLayerSortBy:
      type: string
      enum:
      - CRITICAL
      - HIGH
      - ALL
    ImageTagList:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
    InspectorScoreDetails:
      type: object
      properties:
        adjustedCvss:
          allOf:
          - $ref: '#/components/schemas/CvssScoreDetails'
          description: An object that contains details about the CVSS score given
            to a finding.
      description: Information about the Amazon Inspector score given to a finding.
    InternalServerException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        retryAfterSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of seconds to wait before retrying the request.
      required:
      - message
      description: The request has failed due to an internal failure of the Amazon
        Inspector service.
    IpV4Address:
      type: string
      pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$
      minLength: 7
      maxLength: 15
    IpV4AddressList:
      type: array
      items:
        $ref: '#/components/schemas/IpV4Address'
    IpV6Address:
      type: string
      minLength: 1
      maxLength: 47
    IpV6AddressList:
      type: array
      items:
        $ref: '#/components/schemas/IpV6Address'
    KmsKeyArn:
      type: string
      pattern: ^arn:aws(-(us-gov|cn))?:kms:([a-z0-9][-.a-z0-9]{0,62})?:[0-9]{12}?:key/(([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12})|(mrk-[0-9a-zA-Z]{32}))$
    LambdaFunctionAggregation:
      type: object
      properties:
        resourceIds:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The resource IDs to include in the aggregation results.
        functionNames:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The Amazon Web Services Lambda function names to include in
            the aggregation results.
        runtimes:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: Returns findings aggregated by Amazon Web Services Lambda function
            runtime environments.
        functionTags:
          allOf:
          - $ref: '#/components/schemas/MapFilterList'
          description: The tags to include in the aggregation results.
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          description: The order to use for sorting the results.
        sortBy:
          allOf:
          - $ref: '#/components/schemas/LambdaFunctionSortBy'
          description: The finding severity to use for sorting the results.
      description: The details that define a findings aggregation based on Amazon
        Web Services Lambda functions.
    LambdaFunctionAggregationResponse:
      type: object
      properties:
        resourceId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The resource IDs included in the aggregation results.
        functionName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Web Services Lambda function names included in the
            aggregation results.
        runtime:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The runtimes included in the aggregation results.
        lambdaTags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags included in the aggregation results.
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The ID of the Amazon Web Services account that owns the Amazon
            Web Services Lambda function.
        severityCounts:
          allOf:
          - $ref: '#/components/schemas/SeverityCounts'
          description: An object that contains the counts of aggregated finding per
            severity.
        lastModifiedAt:
          allOf:
          - $ref: '#/components/schemas/DateTimeTimestamp'
          description: The date that the Amazon Web Services Lambda function included
            in the aggregation results was last changed.
      required:
      - resourceId
      description: A response that contains the results of an Amazon Web Services
        Lambda function finding aggregation.
    LambdaFunctionMetadata:
      type: object
      properties:
        functionTags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The resource tags on an Amazon Web Services Lambda function.
        layers:
          allOf:
          - $ref: '#/components/schemas/LambdaLayerList'
          description: The layers for an Amazon Web Services Lambda function. A Lambda
            function can have up to five layers.
        functionName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of a function.
        runtime:
          allOf:
          - $ref: '#/components/schemas/Runtime'
          description: An Amazon Web Services Lambda function's runtime.
      description: The Amazon Web Services Lambda function metadata.
    LambdaFunctionSortBy:
      type: string
      enum:
      - CRITICAL
      - HIGH
      - ALL
    LambdaLayerAggregation:
      type: object
      properties:
        functionNames:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The names of the Amazon Web Services Lambda functions associated
            with the layers.
        resourceIds:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The resource IDs for the Amazon Web Services Lambda function
            layers.
        layerArns:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The Amazon Resource Name (ARN) of the Amazon Web Services Lambda
            function layer.
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          description: The order to use for sorting the results.
        sortBy:
          allOf:
          - $ref: '#/components/schemas/LambdaLayerSortBy'
          description: The finding severity to use for sorting the results.
      description: The details that define a findings aggregation based on an Amazon
        Web Services Lambda function's layers.
    LambdaLayerAggregationResponse:
      type: object
      properties:
        functionName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The names of the Amazon Web Services Lambda functions associated
            with the layers.
        resourceId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Resource ID of the Amazon Web Services Lambda function
            layer.
        layerArn:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Resource Name (ARN) of the Amazon Web Services Lambda
            function layer.
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The account ID of the Amazon Web Services Lambda function layer.
        severityCounts:
          allOf:
          - $ref: '#/components/schemas/SeverityCounts'
          description: An object that contains the counts of aggregated finding per
            severity.
      required:
      - functionName
      - resourceId
      - layerArn
      - accountId
      description: A response that contains the results of an Amazon Web Services
        Lambda function layer finding aggregation.
    LambdaLayerArn:
      type: string
      pattern: ^arn:[a-zA-Z0-9-]+:lambda:[a-zA-Z0-9-]+:\d{12}:layer:[a-zA-Z0-9-_]+:[0-9]+$
    LambdaLayerList:
      type: array
      items:
        type: string
    LambdaLayerSortBy:
      type: string
      enum:
      - CRITICAL
      - HIGH
      - ALL
    LambdaVpcConfig:
      type: object
      properties:
        subnetIds:
          allOf:
          - $ref: '#/components/schemas/SubnetIdList'
          description: A list of VPC subnet IDs.
        securityGroupIds:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupIdList'
          description: The VPC security groups and subnets that are attached to an
            Amazon Web Services Lambda function. For more information, see [VPC Settings](https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html).
        vpcId:
          allOf:
          - $ref: '#/components/schemas/VpcId'
          description: The ID of the VPC.
      description: The VPC security groups and subnets that are attached to an Amazon
        Web Services Lambda function. For more information, see [VPC Settings](https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html).
    LastSeen:
      type: string
      format: date-time
    LayerList:
      type: array
      items:
        $ref: '#/components/schemas/LambdaLayerArn'
    ListAccountPermissionsMaxResults:
      type: integer
      minimum: 1
      maximum: 1024
    ListAccountPermissionsRequest:
      type: object
      properties:
        service:
          allOf:
          - $ref: '#/components/schemas/Service'
          description: The service scan type to check permissions for.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListAccountPermissionsMaxResults'
          description: The maximum number of results the response can return. If your
            request would return more than the maximum the response will return a
            `nextToken` value, use this value when you call the action again to get
            the remaining results.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token to use for paginating results that are returned in
            the response. Set the value of this parameter to null for the first request
            to a list action. If your response returns more than the `maxResults`
            maximum value it will also return a `nextToken` value. For subsequent
            calls, use the NextToken value returned from the previous request to continue
            listing results after the first page.
    ListAccountPermissionsResponse:
      type: object
      properties:
        permissions:
          allOf:
          - $ref: '#/components/schemas/Permissions'
          description: Contains details on the permissions an account has to configure
            Amazon Inspector.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token to use for paginating results that are returned in
            the response. Set the value of this parameter to null for the first request
            to a list action. For subsequent calls, use the `NextToken` value returned
            from the previous request to continue listing results after the first
            page.
      required:
      - permissions
    ListCisScanConfigurationsFilterCriteria:
      type: object
      properties:
        scanNameFilters:
          allOf:
          - $ref: '#/components/schemas/CisScanNameFilterList'
          description: The list of scan name filters.
        targetResourceTagFilters:
          allOf:
          - $ref: '#/components/schemas/ResourceTagFilterList'
          description: The list of target resource tag filters.
        scanConfigurationArnFilters:
          allOf:
          - $ref: '#/components/schemas/CisScanConfigurationArnFilterList'
          description: The list of scan configuration ARN filters.
      description: A list of CIS scan configurations filter criteria.
    ListCisScanConfigurationsMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    ListCisScanConfigurationsRequest:
      type: object
      properties:
        filterCriteria:
          allOf:
          - $ref: '#/components/schemas/ListCisScanConfigurationsFilterCriteria'
          description: The CIS scan configuration filter criteria.
        sortBy:
          allOf:
          - $ref: '#/components/schemas/CisScanConfigurationsSortBy'
          description: The CIS scan configuration sort by order.
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/CisSortOrder'
          description: The CIS scan configuration sort order order.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token from a previous request that's used to
            retrieve the next page of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListCisScanConfigurationsMaxResults'
          description: The maximum number of CIS scan configurations to be returned
            in a single page of results.
    ListCisScanConfigurationsResponse:
      type: object
      properties:
        scanConfigurations:
          allOf:
          - $ref: '#/components/schemas/CisScanConfigurationList'
          description: The CIS scan configuration scan configurations.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token from a previous request that's used to
            retrieve the next page of results.
    ListCisScanResultsAggregatedByChecksRequest:
      type: object
      properties:
        scanArn:
          allOf:
          - $ref: '#/components/schemas/CisScanArn'
          description: The scan ARN.
        filterCriteria:
          allOf:
          - $ref: '#/components/schemas/CisScanResultsAggregatedByChecksFilterCriteria'
          description: The filter criteria.
        sortBy:
          allOf:
          - $ref: '#/components/schemas/CisScanResultsAggregatedByChecksSortBy'
          description: The sort by order.
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/CisSortOrder'
          description: The sort order.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token from a previous request that's used to
            retrieve the next page of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/CisScanResultsMaxResults'
          description: The maximum number of scan results aggregated by checks to
            be returned in a single page of results.
      required:
      - scanArn
    ListCisScanResultsAggregatedByChecksResponse:
      type: object
      properties:
        checkAggregations:
          allOf:
          - $ref: '#/components/schemas/CisCheckAggregationList'
          description: The check aggregations.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token from a previous request that's used to
            retrieve the next page of results.
    ListCisScanResultsAggregatedByTargetResourceRequest:
      type: object
      properties:
        scanArn:
          allOf:
          - $ref: '#/components/schemas/CisScanArn'
          description: The scan ARN.
        filterCriteria:
          allOf:
          - $ref: '#/components/schemas/CisScanResultsAggregatedByTargetResourceFilterCriteria'
          description: The filter criteria.
        sortBy:
          allOf:
          - $ref: '#/components/schemas/CisScanResultsAggregatedByTargetResourceSortBy'
          description: The sort by order.
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/CisSortOrder'
          description: The sort order.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token from a previous request that's used to
            retrieve the next page of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/CisScanResultsMaxResults'
          description: The maximum number of scan results aggregated by a target resource
            to be returned in a single page of results.
      required:
      - scanArn
    ListCisScanResultsAggregatedByTargetResourceResponse:
      type: object
      properties:
        targetResourceAggregations:
          allOf:
          - $ref: '#/components/schemas/CisTargetResourceAggregationList'
          description: The resource aggregations.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token from a previous request that's used to
            retrieve the next page of results.
    ListCisScansDetailLevel:
      type: string
      enum:
      - ORGANIZATION
      - MEMBER
    ListCisScansFilterCriteria:
      type: object
      properties:
        scanNameFilters:
          allOf:
          - $ref: '#/components/schemas/CisScanNameFilterList'
          description: The list of scan name filters.
        targetResourceTagFilters:
          allOf:
          - $ref: '#/components/schemas/ResourceTagFilterList'
          description: The list of target resource tag filters.
        targetResourceIdFilters:
          allOf:
          - $ref: '#/components/schemas/ResourceIdFilterList'
          description: The list of target resource ID filters.
        scanStatusFilters:
          allOf:
          - $ref: '#/components/schemas/CisScanStatusFilterList'
          description: The list of scan status filters.
        scanAtFilters:
          allOf:
          - $ref: '#/components/schemas/CisScanDateFilterList'
          description: The list of scan at filters.
        scanConfigurationArnFilters:
          allOf:
          - $ref: '#/components/schemas/CisScanConfigurationArnFilterList'
          description: The list of scan configuration ARN filters.
        scanArnFilters:
          allOf:
          - $ref: '#/components/schemas/CisScanArnFilterList'
          description: The list of scan ARN filters.
        scheduledByFilters:
          allOf:
          - $ref: '#/components/schemas/CisScheduledByFilterList'
          description: The list of scheduled by filters.
        failedChecksFilters:
          allOf:
          - $ref: '#/components/schemas/CisNumberFilterList'
          description: The list of failed checks filters.
        targetAccountIdFilters:
          allOf:
          - $ref: '#/components/schemas/AccountIdFilterList'
          description: The list of target account ID filters.
      description: A list of CIS scans filter criteria.
    ListCisScansMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    ListCisScansRequest:
      type: object
      properties:
        filterCriteria:
          allOf:
          - $ref: '#/components/schemas/ListCisScansFilterCriteria'
          description: The CIS scan filter criteria.
        detailLevel:
          allOf:
          - $ref: '#/components/schemas/ListCisScansDetailLevel'
          description: The detail applied to the CIS scan.
        sortBy:
          allOf:
          - $ref: '#/components/schemas/ListCisScansSortBy'
          description: The CIS scans sort by order.
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/CisSortOrder'
          description: The CIS scans sort order.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token from a previous request that's used to
            retrieve the next page of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListCisScansMaxResults'
          description: The maximum number of results to be returned.
    ListCisScansResponse:
      type: object
      properties:
        scans:
          allOf:
          - $ref: '#/components/schemas/CisScanList'
          description: The CIS scans.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token from a previous request that's used to
            retrieve the next page of results.
    ListCisScansSortBy:
      type: string
      enum:
      - STATUS
      - SCHEDULED_BY
      - SCAN_START_DATE
      - FAILED_CHECKS
    ListCoverageMaxResults:
      type: integer
      minimum: 1
      maximum: 200
    ListCoverageRequest:
      type: object
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListCoverageMaxResults'
          description: The maximum number of results the response can return. If your
            request would return more than the maximum the response will return a
            `nextToken` value, use this value when you call the action again to get
            the remaining results.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token to use for paginating results that are returned in
            the response. Set the value of this parameter to null for the first request
            to a list action. If your response returns more than the `maxResults`
            maximum value it will also return a `nextToken` value. For subsequent
            calls, use the `nextToken` value returned from the previous request to
            continue listing results after the first page.
        filterCriteria:
          allOf:
          - $ref: '#/components/schemas/CoverageFilterCriteria'
          description: An object that contains details on the filters to apply to
            the coverage data for your environment.
    ListCoverageResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token to use for paginating results that are returned in
            the response. Set the value of this parameter to null for the first request
            to a list action. For subsequent calls, use the `NextToken` value returned
            from the previous request to continue listing results after the first
            page.
        coveredResources:
          allOf:
          - $ref: '#/components/schemas/CoveredResources'
          description: An object that contains details on the covered resources in
            your environment.
    ListCoverageStatisticsRequest:
      type: object
      properties:
        filterCriteria:
          allOf:
          - $ref: '#/components/schemas/CoverageFilterCriteria'
          description: An object that contains details on the filters to apply to
            the coverage data for your environment.
        groupBy:
          allOf:
          - $ref: '#/components/schemas/GroupKey'
          description: The value to group the results by.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token to use for paginating results that are returned in
            the response. Set the value of this parameter to null for the first request
            to a list action. For subsequent calls, use the `NextToken` value returned
            from the previous request to continue listing results after the first
            page.
    ListCoverageStatisticsResponse:
      type: object
      properties:
        countsByGroup:
          allOf:
          - $ref: '#/components/schemas/CountsList'
          description: An array with the number for each group.
        totalCounts:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The total number for all groups.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token to use for paginating results that are returned in
            the response. Set the value of this parameter to null for the first request
            to a list action. For subsequent calls, use the `NextToken` value returned
            from the previous request to continue listing results after the first
            page.
      required:
      - totalCounts
    ListDelegatedAdminAccountsRequest:
      type: object
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListDelegatedAdminMaxResults'
          description: The maximum number of results the response can return. If your
            request would return more than the maximum the response will return a
            `nextToken` value, use this value when you call the action again to get
            the remaining results.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token to use for paginating results that are returned in
            the response. Set the value of this parameter to null for the first request
            to a list action. If your response returns more than the `maxResults`
            maximum value it will also return a `nextToken` value. For subsequent
            calls, use the `nextToken` value returned from the previous request to
            continue listing results after the first page.
    ListDelegatedAdminAccountsResponse:
      type: object
      properties:
        delegatedAdminAccounts:
          allOf:
          - $ref: '#/components/schemas/DelegatedAdminAccountList'
          description: Details of the Amazon Inspector delegated administrator of
            your organization.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token to use for paginating results that are returned in
            the response. Set the value of this parameter to null for the first request
            to a list action. For subsequent calls, use the `NextToken` value returned
            from the previous request to continue listing results after the first
            page.
    ListDelegatedAdminMaxResults:
      type: integer
      minimum: 1
      maximum: 5
    ListFilterMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    ListFiltersRequest:
      type: object
      properties:
        arns:
          allOf:
          - $ref: '#/components/schemas/FilterArnList'
          description: The Amazon resource number (ARN) of the filter.
        action:
          allOf:
          - $ref: '#/components/schemas/FilterAction'
          description: The action the filter applies to matched findings.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token to use for paginating results that are returned in
            the response. Set the value of this parameter to null for the first request
            to a list action. If your response returns more than the `maxResults`
            maximum value it will also return a `nextToken` value. For subsequent
            calls, use the `nextToken` value returned from the previous request to
            continue listing results after the first page.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListFilterMaxResults'
          description: The maximum number of results the response can return. If your
            request would return more than the maximum the response will return a
            `nextToken` value, use this value when you call the action again to get
            the remaining results.
    ListFiltersResponse:
      type: object
      properties:
        filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          description: Contains details on the filters associated with your account.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token to use for paginating results that are returned in
            the response. Set the value of this parameter to null for the first request
            to a list action. For subsequent calls, use the `NextToken` value returned
            from the previous request to continue listing results after the first
            page.
      required:
      - filters
    ListFindingAggregationsMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    ListFindingAggregationsRequest:
      type: object
      properties:
        aggregationType:
          allOf:
          - $ref: '#/components/schemas/AggregationType'
          description: The type of the aggregation request.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token to use for paginating results that are returned in
            the response. Set the value of this parameter to null for the first request
            to a list action. If your response returns more than the `maxResults`
            maximum value it will also return a `nextToken` value. For subsequent
            calls, use the `nextToken` value returned from the previous request to
            continue listing results after the first page.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListFindingAggregationsMaxResults'
          description: The maximum number of results the response can return. If your
            request would return more than the maximum the response will return a
            `nextToken` value, use this value when you call the action again to get
            the remaining results.
        accountIds:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The Amazon Web Services account IDs to retrieve finding aggregation
            data for.
        aggregationRequest:
          allOf:
          - $ref: '#/components/schemas/AggregationRequest'
          description: Details of the aggregation request that is used to filter your
            aggregation results.
      required:
      - aggregationType
    ListFindingAggregationsResponse:
      type: object
      properties:
        aggregationType:
          allOf:
          - $ref: '#/components/schemas/AggregationType'
          description: The type of aggregation to perform.
        responses:
          allOf:
          - $ref: '#/components/schemas/AggregationResponseList'
          description: Objects that contain the results of an aggregation operation.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token to use for paginating results that are returned in
            the response. Set the value of this parameter to null for the first request
            to a list action. For subsequent calls, use the `NextToken` value returned
            from the previous request to continue listing results after the first
            page.
      required:
      - aggregationType
    ListFindingsMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    ListFindingsRequest:
      type: object
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListFindingsMaxResults'
          description: The maximum number of results the response can return. If your
            request would return more than the maximum the response will return a
            `nextToken` value, use this value when you call the action again to get
            the remaining results.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token to use for paginating results that are returned in
            the response. Set the value of this parameter to null for the first request
            to a list action. If your response returns more than the `maxResults`
            maximum value it will also return a `nextToken` value. For subsequent
            calls, use the `nextToken` value returned from the previous request to
            continue listing results after the first page.
        filterCriteria:
          allOf:
          - $ref: '#/components/schemas/FilterCriteria'
          description: Details on the filters to apply to your finding results.
        sortCriteria:
          allOf:
          - $ref: '#/components/schemas/SortCriteria'
          description: Details on the sort criteria to apply to your finding results.
    ListFindingsResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token to use for paginating results that are returned in
            the response. Set the value of this parameter to null for the first request
            to a list action. For subsequent calls, use the `NextToken` value returned
            from the previous request to continue listing results after the first
            page.
        findings:
          allOf:
          - $ref: '#/components/schemas/FindingList'
          description: Contains details on the findings in your environment.
    ListMembersMaxResults:
      type: integer
      minimum: 1
      maximum: 50
    ListMembersRequest:
      type: object
      properties:
        onlyAssociated:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether to list only currently associated members
            if `True` or to list all members within the organization if `False`.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListMembersMaxResults'
          description: The maximum number of results the response can return. If your
            request would return more than the maximum the response will return a
            `nextToken` value, use this value when you call the action again to get
            the remaining results.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token to use for paginating results that are returned in
            the response. Set the value of this parameter to null for the first request
            to a list action. If your response returns more than the `maxResults`
            maximum value it will also return a `nextToken` value. For subsequent
            calls, use the `nextToken` value returned from the previous request to
            continue listing results after the first page.
    ListMembersResponse:
      type: object
      properties:
        members:
          allOf:
          - $ref: '#/components/schemas/MemberList'
          description: An object that contains details for each member account.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination parameter to be used on the next list operation
            to retrieve more items.
    ListTagsForResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon resource number (ARN) of the resource to list tags
            of.
      required:
      - resourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags associated with the resource.
    ListUsageTotalsMaxResults:
      type: integer
      minimum: 1
      maximum: 500
    ListUsageTotalsNextToken:
      type: string
      minLength: 1
    ListUsageTotalsRequest:
      type: object
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListUsageTotalsMaxResults'
          description: The maximum number of results the response can return. If your
            request would return more than the maximum the response will return a
            `nextToken` value, use this value when you call the action again to get
            the remaining results.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/ListUsageTotalsNextToken'
          description: A token to use for paginating results that are returned in
            the response. Set the value of this parameter to null for the first request
            to a list action. If your response returns more than the `maxResults`
            maximum value it will also return a `nextToken` value. For subsequent
            calls, use the `nextToken` value returned from the previous request to
            continue listing results after the first page.
        accountIds:
          allOf:
          - $ref: '#/components/schemas/UsageAccountIdList'
          description: The Amazon Web Services account IDs to retrieve usage totals
            for.
    ListUsageTotalsResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/ListUsageTotalsNextToken'
          description: The pagination parameter to be used on the next list operation
            to retrieve more items.
        totals:
          allOf:
          - $ref: '#/components/schemas/UsageTotalList'
          description: An object with details on the total usage for the requested
            account.
    MapComparison:
      type: string
      enum:
      - EQUALS
    MapFilter:
      type: object
      properties:
        comparison:
          allOf:
          - $ref: '#/components/schemas/MapComparison'
          description: The operator to use when comparing values in the filter.
        key:
          allOf:
          - $ref: '#/components/schemas/MapKey'
          description: The tag key used in the filter.
        value:
          allOf:
          - $ref: '#/components/schemas/MapValue'
          description: The tag value used in the filter.
      required:
      - comparison
      - key
      description: An object that describes details of a map filter.
    MapFilterList:
      type: array
      items:
        $ref: '#/components/schemas/MapFilter'
    MapKey:
      type: string
      minLength: 1
      maxLength: 128
    MapValue:
      type: string
      maxLength: 256
    Member:
      type: object
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The Amazon Web Services account ID of the member account.
        relationshipStatus:
          allOf:
          - $ref: '#/components/schemas/RelationshipStatus'
          description: The status of the member account.
        delegatedAdminAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The Amazon Web Services account ID of the Amazon Inspector
            delegated administrator for this member account.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/DateTimeTimestamp'
          description: A timestamp showing when the status of this member was last
            updated.
      description: Details on a member account in your organization.
    MemberAccountEc2DeepInspectionStatus:
      type: object
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The unique identifier for the Amazon Web Services account of
            the organization member.
        activateDeepInspection:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether Amazon Inspector deep inspection is active in the account.
            If `TRUE` Amazon Inspector deep inspection is active, if `FALSE` it is
            not active.
      required:
      - accountId
      - activateDeepInspection
      description: An object that contains details about the status of Amazon Inspector
        deep inspection for a member account in your organization.
    MemberAccountEc2DeepInspectionStatusList:
      type: array
      items:
        $ref: '#/components/schemas/MemberAccountEc2DeepInspectionStatus'
    MemberAccountEc2DeepInspectionStatusState:
      type: object
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The unique identifier for the Amazon Web Services account of
            the organization member
        status:
          allOf:
          - $ref: '#/components/schemas/Ec2DeepInspectionStatus'
          description: The state of Amazon Inspector deep inspection in the member
            account.
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The error message explaining why the account failed to activate
            Amazon Inspector deep inspection.
      required:
      - accountId
      description: An object that contains details about the state of Amazon Inspector
        deep inspection for a member account.
    MemberAccountEc2DeepInspectionStatusStateList:
      type: array
      items:
        $ref: '#/components/schemas/MemberAccountEc2DeepInspectionStatusState'
    MemberList:
      type: array
      items:
        $ref: '#/components/schemas/Member'
    MeteringAccountId:
      type: string
      pattern: '[0-9]{12}'
    MeteringAccountIdList:
      type: array
      items:
        $ref: '#/components/schemas/MeteringAccountId'
    MonthlyCostEstimate:
      type: number
      format: double
      default: 0
      minimum: 0
    MonthlySchedule:
      type: object
      properties:
        startTime:
          allOf:
          - $ref: '#/components/schemas/Time'
          description: The monthly schedule's start time.
        day:
          allOf:
          - $ref: '#/components/schemas/Day'
          description: The monthly schedule's day.
      required:
      - startTime
      - day
      description: A monthly schedule.
    NetworkPath:
      type: object
      properties:
        steps:
          allOf:
          - $ref: '#/components/schemas/StepList'
          description: The details on the steps in the network path.
      description: Information on the network path associated with a finding.
    NetworkProtocol:
      type: string
      enum:
      - TCP
      - UDP
    NetworkReachabilityDetails:
      type: object
      properties:
        openPortRange:
          allOf:
          - $ref: '#/components/schemas/PortRange'
          description: An object that contains details about the open port range associated
            with a finding.
        protocol:
          allOf:
          - $ref: '#/components/schemas/NetworkProtocol'
          description: The protocol associated with a finding.
        networkPath:
          allOf:
          - $ref: '#/components/schemas/NetworkPath'
          description: An object that contains details about a network path associated
            with a finding.
      required:
      - openPortRange
      - protocol
      - networkPath
      description: Contains the details of a network reachability finding.
    NextToken:
      type: string
      maxLength: 1000000
    NonEmptyString:
      type: string
      minLength: 1
    NonEmptyStringList:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
    NumberFilter:
      type: object
      properties:
        upperInclusive:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The highest number to be included in the filter.
        lowerInclusive:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The lowest number to be included in the filter.
      description: An object that describes the details of a number filter.
    NumberFilterList:
      type: array
      items:
        $ref: '#/components/schemas/NumberFilter'
    OneAccountIdFilterList:
      type: array
      items:
        $ref: '#/components/schemas/CisStringFilter'
    OneTimeSchedule:
      type: object
      properties: {}
      description: A one time schedule.
    Operation:
      type: string
      enum:
      - ENABLE_SCANNING
      - DISABLE_SCANNING
      - ENABLE_REPOSITORY
      - DISABLE_REPOSITORY
    OwnerId:
      type: string
      pattern: (^\d{12}$)|(^o-[a-z0-9]{10,32}$)
      minLength: 12
      maxLength: 34
    PackageAggregation:
      type: object
      properties:
        packageNames:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The names of packages to aggregate findings on.
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          description: The order to sort results by.
        sortBy:
          allOf:
          - $ref: '#/components/schemas/PackageSortBy'
          description: The value to sort results by.
      description: The details that define an aggregation based on operating system
        package type.
    PackageAggregationResponse:
      type: object
      properties:
        packageName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the operating system package.
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The ID of the Amazon Web Services account associated with the
            findings.
        severityCounts:
          allOf:
          - $ref: '#/components/schemas/SeverityCounts'
          description: An object that contains the count of matched findings per severity.
      required:
      - packageName
      description: A response that contains the results of a finding aggregation by
        image layer.
    PackageArchitecture:
      type: string
      minLength: 1
      maxLength: 64
    PackageEpoch:
      type: integer
      default: 0
    PackageFilter:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/StringFilter'
          description: An object that contains details on the name of the package
            to filter on.
        version:
          allOf:
          - $ref: '#/components/schemas/StringFilter'
          description: The package version to filter on.
        epoch:
          allOf:
          - $ref: '#/components/schemas/NumberFilter'
          description: An object that contains details on the package epoch to filter
            on.
        release:
          allOf:
          - $ref: '#/components/schemas/StringFilter'
          description: An object that contains details on the package release to filter
            on.
        architecture:
          allOf:
          - $ref: '#/components/schemas/StringFilter'
          description: An object that contains details on the package architecture
            type to filter on.
        sourceLayerHash:
          allOf:
          - $ref: '#/components/schemas/StringFilter'
          description: An object that contains details on the source layer hash to
            filter on.
        sourceLambdaLayerArn:
          allOf:
          - $ref: '#/components/schemas/StringFilter'
          description: An object that describes the details of a string filter.
        filePath:
          allOf:
          - $ref: '#/components/schemas/StringFilter'
          description: An object that contains details on the package file path to
            filter on.
      description: Contains information on the details of a package filter.
    PackageFilterList:
      type: array
      items:
        $ref: '#/components/schemas/PackageFilter'
    PackageManager:
      type: string
      enum:
      - BUNDLER
      - CARGO
      - COMPOSER
      - NPM
      - NUGET
      - PIPENV
      - POETRY
      - YARN
      - GOBINARY
      - GOMOD
      - JAR
      - OS
      - PIP
      - PYTHONPKG
      - NODEPKG
      - POM
      - GEMSPEC
      - DOTNET_CORE
    PackageName:
      type: string
      minLength: 1
      maxLength: 1024
    PackageRelease:
      type: string
      minLength: 1
      maxLength: 1024
    PackageSortBy:
      type: string
      enum:
      - CRITICAL
      - HIGH
      - ALL
    PackageType:
      type: string
      enum:
      - IMAGE
      - ZIP
    PackageVersion:
      type: string
      minLength: 1
      maxLength: 1024
    PackageVulnerabilityDetails:
      type: object
      properties:
        vulnerabilityId:
          allOf:
          - $ref: '#/components/schemas/VulnerabilityId'
          description: The ID given to this vulnerability.
        vulnerablePackages:
          allOf:
          - $ref: '#/components/schemas/VulnerablePackageList'
          description: The packages impacted by this vulnerability.
        source:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The source of the vulnerability information.
        cvss:
          allOf:
          - $ref: '#/components/schemas/CvssScoreList'
          description: An object that contains details about the CVSS score of a finding.
        relatedVulnerabilities:
          allOf:
          - $ref: '#/components/schemas/VulnerabilityIdList'
          description: One or more vulnerabilities related to the one identified in
            this finding.
        sourceUrl:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A URL to the source of the vulnerability information.
        vendorSeverity:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The severity the vendor has given to this vulnerability type.
        vendorCreatedAt:
          allOf:
          - $ref: '#/components/schemas/DateTimeTimestamp'
          description: The date and time that this vulnerability was first added to
            the vendor's database.
        vendorUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/DateTimeTimestamp'
          description: The date and time the vendor last updated this vulnerability
            in their database.
        referenceUrls:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: One or more URLs that contain details about this vulnerability
            type.
      required:
      - vulnerabilityId
      - source
      description: Information about a package vulnerability finding.
    Path:
      type: string
      pattern: ^(?:/(?:\.[-\w]+|[-\w]+(?:\.[-\w]+)?))+/?$
      minLength: 1
      maxLength: 512
    PathList:
      type: array
      items:
        $ref: '#/components/schemas/Path'
    Permission:
      type: object
      properties:
        service:
          allOf:
          - $ref: '#/components/schemas/Service'
          description: The services that the permissions allow an account to perform
            the given operations for.
        operation:
          allOf:
          - $ref: '#/components/schemas/Operation'
          description: The operations that can be performed with the given permissions.
      required:
      - service
      - operation
      description: Contains information on the permissions an account has within Amazon
        Inspector.
    Permissions:
      type: array
      items:
        $ref: '#/components/schemas/Permission'
    Platform:
      type: string
      minLength: 1
      maxLength: 1024
    PlatformFilterList:
      type: array
      items:
        $ref: '#/components/schemas/CisStringFilter'
    PlatformVersion:
      type: string
      maxLength: 8
    Port:
      type: integer
      minimum: 0
      maximum: 65535
    PortRange:
      type: object
      properties:
        begin:
          allOf:
          - $ref: '#/components/schemas/Port'
          description: The beginning port in a port range.
        end:
          allOf:
          - $ref: '#/components/schemas/Port'
          description: The ending port in a port range.
      required:
      - begin
      - end
      description: Details about the port range associated with a finding.
    PortRangeFilter:
      type: object
      properties:
        beginInclusive:
          allOf:
          - $ref: '#/components/schemas/Port'
          description: The port number the port range begins at.
        endInclusive:
          allOf:
          - $ref: '#/components/schemas/Port'
          description: The port number the port range ends at.
      description: An object that describes the details of a port range filter.
    PortRangeFilterList:
      type: array
      items:
        $ref: '#/components/schemas/PortRangeFilter'
    Product:
      type: string
      maxLength: 32
    Reason:
      type: string
      maxLength: 1024
    Recommendation:
      type: object
      properties:
        text:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The recommended course of action to remediate the finding.
        Url:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The URL address to the CVE remediation recommendations.
      description: Details about the recommended course of action to remediate the
        finding.
    ReferenceUrls:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
    RelatedVulnerabilities:
      type: array
      items:
        $ref: '#/components/schemas/RelatedVulnerability'
    RelatedVulnerability:
      type: string
      minLength: 0
    RelationshipStatus:
      type: string
      enum:
      - CREATED
      - INVITED
      - DISABLED
      - ENABLED
      - REMOVED
      - RESIGNED
      - DELETED
      - EMAIL_VERIFICATION_IN_PROGRESS
      - EMAIL_VERIFICATION_FAILED
      - REGION_DISABLED
      - ACCOUNT_SUSPENDED
      - CANNOT_CREATE_DETECTOR_IN_ORG_MASTER
    Remediation:
      type: object
      properties:
        recommendation:
          allOf:
          - $ref: '#/components/schemas/Recommendation'
          description: An object that contains information about the recommended course
            of action to remediate the finding.
      description: Information on how to remediate a finding.
    ReportFormat:
      type: string
      enum:
      - CSV
      - JSON
    ReportId:
      type: string
      pattern: \b[a-f0-9]{8}\b-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-\b[a-f0-9]{12}\b
    ReportTargetAccounts:
      type: array
      items:
        $ref: '#/components/schemas/AccountId'
    ReportingErrorCode:
      type: string
      enum:
      - INTERNAL_ERROR
      - INVALID_PERMISSIONS
      - NO_FINDINGS_FOUND
      - BUCKET_NOT_FOUND
      - INCOMPATIBLE_BUCKET_REGION
      - MALFORMED_KMS_KEY
    RepositoryAggregation:
      type: object
      properties:
        repositories:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The names of repositories to aggregate findings on.
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          description: The order to sort results by.
        sortBy:
          allOf:
          - $ref: '#/components/schemas/RepositorySortBy'
          description: The value to sort results by.
      description: The details that define an aggregation based on repository.
    RepositoryAggregationResponse:
      type: object
      properties:
        repository:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the repository associated with the findings.
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The ID of the Amazon Web Services account associated with the
            findings.
        severityCounts:
          allOf:
          - $ref: '#/components/schemas/SeverityCounts'
          description: An object that represent the count of matched findings per
            severity.
        affectedImages:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The number of container images impacted by the findings.
      required:
      - repository
      description: A response that contains details on the results of a finding aggregation
        by repository.
    RepositorySortBy:
      type: string
      enum:
      - CRITICAL
      - HIGH
      - ALL
      - AFFECTED_IMAGES
    ResetEncryptionKeyRequest:
      type: object
      properties:
        scanType:
          allOf:
          - $ref: '#/components/schemas/ScanType'
          description: The scan type the key encrypts.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The resource type the key encrypts.
      required:
      - scanType
      - resourceType
    ResetEncryptionKeyResponse:
      type: object
      properties: {}
    Resource:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The type of resource.
        id:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the resource.
        partition:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The partition of the resource.
        region:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The Amazon Web Services Region the impacted resource is located
            in.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags attached to the resource.
        details:
          allOf:
          - $ref: '#/components/schemas/ResourceDetails'
          description: An object that contains details about the resource involved
            in a finding.
      required:
      - type
      - id
      description: Details about the resource involved in a finding.
    ResourceDetails:
      type: object
      properties:
        awsEc2Instance:
          allOf:
          - $ref: '#/components/schemas/AwsEc2InstanceDetails'
          description: An object that contains details about the Amazon EC2 instance
            involved in the finding.
        awsEcrContainerImage:
          allOf:
          - $ref: '#/components/schemas/AwsEcrContainerImageDetails'
          description: An object that contains details about the Amazon ECR container
            image involved in the finding.
        awsLambdaFunction:
          allOf:
          - $ref: '#/components/schemas/AwsLambdaFunctionDetails'
          description: A summary of the information about an Amazon Web Services Lambda
            function affected by a finding.
      description: Contains details about the resource involved in the finding.
    ResourceFilterCriteria:
      type: object
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/ResourceStringFilterList'
          description: The account IDs used as resource filter criteria.
        resourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceStringFilterList'
          description: The resource IDs used as resource filter criteria.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceStringFilterList'
          description: The resource types used as resource filter criteria.
        ecrRepositoryName:
          allOf:
          - $ref: '#/components/schemas/ResourceStringFilterList'
          description: The ECR repository names used as resource filter criteria.
        lambdaFunctionName:
          allOf:
          - $ref: '#/components/schemas/ResourceStringFilterList'
          description: The Amazon Web Services Lambda function name used as resource
            filter criteria.
        ecrImageTags:
          allOf:
          - $ref: '#/components/schemas/ResourceStringFilterList'
          description: The ECR image tags used as resource filter criteria.
        ec2InstanceTags:
          allOf:
          - $ref: '#/components/schemas/ResourceMapFilterList'
          description: The EC2 instance tags used as resource filter criteria.
        lambdaFunctionTags:
          allOf:
          - $ref: '#/components/schemas/ResourceMapFilterList'
          description: The Amazon Web Services Lambda function tags used as resource
            filter criteria.
      description: The resource filter criteria for a Software bill of materials (SBOM)
        report.
    ResourceId:
      type: string
      pattern: (^arn:.*:ecr:.*:\d{12}:repository\/(?:[a-z0-9]+(?:[._-][a-z0-9]+)*\/)*[a-z0-9]+(?:[._-][a-z0-9]+)*(\/sha256:[a-z0-9]{64})?$)|(^i-([a-z0-9]{8}|[a-z0-9]{17}|\\*)$|(^arn:(aws[a-zA-Z-]*)?:lambda:[a-z]{2}(-gov)?-[a-z]+-\d{1}:\d{12}:function:[a-zA-Z0-9-_\.]+(:(\$LATEST|[a-zA-Z0-9-_]+))?$))
      minLength: 10
      maxLength: 341
    ResourceIdFilterList:
      type: array
      items:
        $ref: '#/components/schemas/CisStringFilter'
    ResourceList:
      type: array
      items:
        $ref: '#/components/schemas/Resource'
    ResourceMapComparison:
      type: string
      enum:
      - EQUALS
    ResourceMapFilter:
      type: object
      properties:
        comparison:
          allOf:
          - $ref: '#/components/schemas/ResourceMapComparison'
          description: The filter's comparison.
        key:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The filter's key.
        value:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The filter's value.
      required:
      - comparison
      - key
      description: A resource map filter for a software bill of material report.
    ResourceMapFilterList:
      type: array
      items:
        $ref: '#/components/schemas/ResourceMapFilter'
    ResourceNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The operation tried to access an invalid resource. Make sure the
        resource is specified correctly.
    ResourceScanMetadata:
      type: object
      properties:
        ecrRepository:
          allOf:
          - $ref: '#/components/schemas/EcrRepositoryMetadata'
          description: An object that contains details about the repository an Amazon
            ECR image resides in.
        ecrImage:
          allOf:
          - $ref: '#/components/schemas/EcrContainerImageMetadata'
          description: An object that contains details about the container metadata
            for an Amazon ECR image.
        ec2:
          allOf:
          - $ref: '#/components/schemas/Ec2Metadata'
          description: An object that contains metadata details for an Amazon EC2
            instance.
        lambdaFunction:
          allOf:
          - $ref: '#/components/schemas/LambdaFunctionMetadata'
          description: An object that contains metadata details for an Amazon Web
            Services Lambda function.
      description: An object that contains details about the metadata for an Amazon
        ECR resource.
    ResourceScanType:
      type: string
      enum:
      - EC2
      - ECR
      - LAMBDA
      - LAMBDA_CODE
    ResourceState:
      type: object
      properties:
        ec2:
          allOf:
          - $ref: '#/components/schemas/State'
          description: An object detailing the state of Amazon Inspector scanning
            for Amazon EC2 resources.
        ecr:
          allOf:
          - $ref: '#/components/schemas/State'
          description: An object detailing the state of Amazon Inspector scanning
            for Amazon ECR resources.
        lambda:
          allOf:
          - $ref: '#/components/schemas/State'
          description: An object that described the state of Amazon Inspector scans
            for an account.
        lambdaCode:
          allOf:
          - $ref: '#/components/schemas/State'
          description: An object that described the state of Amazon Inspector scans
            for an account.
      required:
      - ec2
      - ecr
      description: Details the state of Amazon Inspector for each resource type Amazon
        Inspector scans.
    ResourceStatus:
      type: object
      properties:
        ec2:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: The status of Amazon Inspector scanning for Amazon EC2 resources.
        ecr:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: The status of Amazon Inspector scanning for Amazon ECR resources.
        lambda:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: The status of Amazon Inspector scanning for Amazon Web Services
            Lambda function.
        lambdaCode:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: The status of Amazon Inspector scanning for custom application
            code for Amazon Web Services Lambda functions.
      required:
      - ec2
      - ecr
      description: Details the status of Amazon Inspector for each resource type Amazon
        Inspector scans.
    ResourceStringComparison:
      type: string
      enum:
      - EQUALS
      - NOT_EQUALS
    ResourceStringFilter:
      type: object
      properties:
        comparison:
          allOf:
          - $ref: '#/components/schemas/ResourceStringComparison'
          description: The filter's comparison.
        value:
          allOf:
          - $ref: '#/components/schemas/ResourceStringInput'
          description: The filter's value.
      required:
      - comparison
      - value
      description: A resource string filter for a software bill of materials report.
    ResourceStringFilterList:
      type: array
      items:
        $ref: '#/components/schemas/ResourceStringFilter'
    ResourceStringInput:
      type: string
      minLength: 1
      maxLength: 1024
    ResourceTagFilterList:
      type: array
      items:
        $ref: '#/components/schemas/TagFilter'
    ResourceType:
      type: string
      enum:
      - AWS_EC2_INSTANCE
      - AWS_ECR_CONTAINER_IMAGE
      - AWS_ECR_REPOSITORY
      - AWS_LAMBDA_FUNCTION
    RiskScore:
      type: integer
    RuleId:
      type: string
      minLength: 1
      maxLength: 500
    Runtime:
      type: string
      enum:
      - NODEJS
      - NODEJS_12_X
      - NODEJS_14_X
      - NODEJS_16_X
      - JAVA_8
      - JAVA_8_AL2
      - JAVA_11
      - PYTHON_3_7
      - PYTHON_3_8
      - PYTHON_3_9
      - UNSUPPORTED
      - NODEJS_18_X
      - GO_1_X
      - JAVA_17
      - PYTHON_3_10
      - PYTHON_3_11
      - DOTNETCORE_3_1
      - DOTNET_6
      - DOTNET_7
      - RUBY_2_7
      - RUBY_3_2
    SbomReportFormat:
      type: string
      enum:
      - CYCLONEDX_1_4
      - SPDX_2_3
    ScanMode:
      type: string
      enum:
      - EC2_SSM_AGENT_BASED
      - EC2_AGENTLESS
    ScanStatus:
      type: object
      properties:
        statusCode:
          allOf:
          - $ref: '#/components/schemas/ScanStatusCode'
          description: The status code of the scan.
        reason:
          allOf:
          - $ref: '#/components/schemas/ScanStatusReason'
          description: 'The scan status. Possible return values and descriptions are:


            `PENDING_INITIAL_SCAN` \- This resource has been identified for scanning,
            results will be available soon.


            `ACCESS_DENIED` \- Resource access policy restricting Amazon Inspector
            access. Please update the IAM policy.


            `INTERNAL_ERROR` \- Amazon Inspector has encountered an internal error
            for this resource. Amazon Inspector service will automatically resolve
            the issue and resume the scanning. No action required from the user.


            `UNMANAGED_EC2_INSTANCE` \- The EC2 instance is not managed by SSM, please
            use the following SSM automation to remediate the issue: <https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/automation-awssupport-troubleshoot-managed-instance.html>.
            Once the instance becomes managed by SSM, Inspector will automatically
            begin scanning this instance.


            `UNSUPPORTED_OS` \- Amazon Inspector does not support this OS, architecture,
            or image manifest type at this time. To see a complete list of supported
            operating systems see: [https://docs.aws.amazon.com/inspector/latest/user/supported.html](
            https://docs.aws.amazon.com/inspector/latest/user/supported.html).


            `SCAN_ELIGIBILITY_EXPIRED` \- The configured scan duration has lapsed
            for this image.


            `RESOURCE_TERMINATED` \- This resource has been terminated. The findings
            and coverage associated with this resource are in the process of being
            cleaned up.


            `SUCCESSFUL` \- The scan was successful.


            `NO_RESOURCES_FOUND` \- Reserved for future use.


            `IMAGE_SIZE_EXCEEDED` \- Reserved for future use.


            `SCAN_FREQUENCY_MANUAL` \- This image will not be covered by Amazon Inspector
            due to the repository scan frequency configuration.


            `SCAN_FREQUENCY_SCAN_ON_PUSH `\- This image will be scanned one time and
            will not new findings because of the scan frequency configuration.


            `EC2_INSTANCE_STOPPED` \- This EC2 instance is in a stopped state, therefore,
            Amazon Inspector will pause scanning. The existing findings will continue
            to exist until the instance is terminated. Once the instance is re-started,
            Inspector will automatically start scanning the instance again. Please
            note that you will not be charged for this instance while itâ€™s in a stopped
            state.


            `PENDING_DISABLE` \- This resource is pending cleanup during disablement.
            The customer will not be billed while a resource is in the pending disable
            status.


            `NO INVENTORY` \- Amazon Inspector couldnâ€™t find software application
            inventory to scan for vulnerabilities. This might be caused due to required
            Amazon Inspector associations being deleted or failing to run on your
            resource. Please verify the status of `InspectorInventoryCollection-do-not-delete`
            association in the SSM console for the resource. Additionally, you can
            verify the instanceâ€™s inventory in the SSM Fleet Manager console.


            `STALE_INVENTORY` \- Amazon Inspector wasnâ€™t able to collect an updated
            software application inventory in the last 7 days. Please confirm the
            required Amazon Inspector associations still exist and you can still see
            an updated inventory in the SSM console.


            `EXCLUDED_BY_TAG` \- This resource was not scanned because it has been
            excluded by a tag.


            `UNSUPPORTED_RUNTIME` \- The function was not scanned because it has an
            unsupported runtime. To see a complete list of supported runtimes see:
            [https://docs.aws.amazon.com/inspector/latest/user/supported.html]( https://docs.aws.amazon.com/inspector/latest/user/supported.html).


            `UNSUPPORTED_MEDIA_TYPE `\- The ECR image has an unsupported media type.


            `UNSUPPORTED_CONFIG_FILE` \- Reserved for future use.


            `DEEP_INSPECTION_PACKAGE_COLLECTION_LIMIT_EXCEEDED` \- The instance has
            exceeded the 5000 package limit for Amazon Inspector Deep inspection.
            To resume Deep inspection for this instance you can try to adjust the
            custom paths associated with the account.


            `DEEP_INSPECTION_DAILY_SSM_INVENTORY_LIMIT_EXCEEDED` \- The SSM agent
            couldn''t send inventory to Amazon Inspector because the SSM quota for
            Inventory data collected per instance per day has already been reached
            for this instance.


            `DEEP_INSPECTION_COLLECTION_TIME_LIMIT_EXCEEDED` \- Amazon Inspector failed
            to extract the package inventory because the package collection time exceeding
            the maximum threshold of 15 minutes.


            `DEEP_INSPECTION_NO_INVENTORY` The Amazon Inspector plugin hasn''t yet
            been able to collect an inventory of packages for this instance. This
            is usually the result of a pending scan, however, if this status persists
            after 6 hours, use SSM to ensure that the required Amazon Inspector associations
            exist and are running for the instance.'
      required:
      - statusCode
      - reason
      description: The status of the scan.
    ScanStatusCode:
      type: string
      enum:
      - ACTIVE
      - INACTIVE
    ScanStatusReason:
      type: string
      enum:
      - PENDING_INITIAL_SCAN
      - ACCESS_DENIED
      - INTERNAL_ERROR
      - UNMANAGED_EC2_INSTANCE
      - UNSUPPORTED_OS
      - SCAN_ELIGIBILITY_EXPIRED
      - RESOURCE_TERMINATED
      - SUCCESSFUL
      - NO_RESOURCES_FOUND
      - IMAGE_SIZE_EXCEEDED
      - SCAN_FREQUENCY_MANUAL
      - SCAN_FREQUENCY_SCAN_ON_PUSH
      - EC2_INSTANCE_STOPPED
      - PENDING_DISABLE
      - NO_INVENTORY
      - STALE_INVENTORY
      - EXCLUDED_BY_TAG
      - UNSUPPORTED_RUNTIME
      - UNSUPPORTED_MEDIA_TYPE
      - UNSUPPORTED_CONFIG_FILE
      - DEEP_INSPECTION_PACKAGE_COLLECTION_LIMIT_EXCEEDED
      - DEEP_INSPECTION_DAILY_SSM_INVENTORY_LIMIT_EXCEEDED
      - DEEP_INSPECTION_COLLECTION_TIME_LIMIT_EXCEEDED
      - DEEP_INSPECTION_NO_INVENTORY
      - AGENTLESS_INSTANCE_STORAGE_LIMIT_EXCEEDED
      - AGENTLESS_INSTANCE_COLLECTION_TIME_LIMIT_EXCEEDED
    ScanType:
      type: string
      enum:
      - NETWORK
      - PACKAGE
      - CODE
    Schedule:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/OneTimeSchedule'
        description: |-
          The schedule's one time.
      - allOf:
        - $ref: '#/components/schemas/DailySchedule'
        description: |-
          The schedule's daily.
      - allOf:
        - $ref: '#/components/schemas/WeeklySchedule'
        description: |-
          The schedule's weekly.
      - allOf:
        - $ref: '#/components/schemas/MonthlySchedule'
        description: |-
          The schedule's monthly.
      description: |-
        A schedule.
    SearchVulnerabilitiesFilterCriteria:
      type: object
      properties:
        vulnerabilityIds:
          allOf:
          - $ref: '#/components/schemas/VulnIdList'
          description: The IDs for specific vulnerabilities.
      required:
      - vulnerabilityIds
      description: Details on the criteria used to define the filter for a vulnerability
        search.
    SearchVulnerabilitiesRequest:
      type: object
      properties:
        filterCriteria:
          allOf:
          - $ref: '#/components/schemas/SearchVulnerabilitiesFilterCriteria'
          description: The criteria used to filter the results of a vulnerability
            search.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token to use for paginating results that are returned in
            the response. Set the value of this parameter to null for the first request
            to a list action. For subsequent calls, use the `NextToken` value returned
            from the previous request to continue listing results after the first
            page.
      required:
      - filterCriteria
    SearchVulnerabilitiesResponse:
      type: object
      properties:
        vulnerabilities:
          allOf:
          - $ref: '#/components/schemas/Vulnerabilities'
          description: Details about the listed vulnerability.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination parameter to be used on the next list operation
            to retrieve more items.
      required:
      - vulnerabilities
    SecurityGroupId:
      type: string
      pattern: ^sg-([a-z0-9]{8}|[a-z0-9]{17}|\*)$
    SecurityGroupIdList:
      type: array
      items:
        $ref: '#/components/schemas/SecurityGroupId'
    SendCisSessionHealthRequest:
      type: object
      properties:
        scanJobId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: A unique identifier for the scan job.
        sessionToken:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique token that identifies the CIS session.
      required:
      - scanJobId
      - sessionToken
    SendCisSessionHealthResponse:
      type: object
      properties: {}
    SendCisSessionTelemetryRequest:
      type: object
      properties:
        scanJobId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: A unique identifier for the scan job.
        sessionToken:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique token that identifies the CIS session.
        messages:
          allOf:
          - $ref: '#/components/schemas/CisSessionMessages'
          description: The CIS session telemetry messages.
      required:
      - scanJobId
      - sessionToken
      - messages
    SendCisSessionTelemetryResponse:
      type: object
      properties: {}
    Service:
      type: string
      enum:
      - EC2
      - ECR
      - LAMBDA
    ServiceQuotaExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        resourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the resource that exceeds a service quota.
      required:
      - message
      - resourceId
      description: You have exceeded your service quota. To perform the requested
        action, remove some of the relevant resources, or use Service Quotas to request
        a service quota increase.
    Severity:
      type: string
      enum:
      - INFORMATIONAL
      - LOW
      - MEDIUM
      - HIGH
      - CRITICAL
      - UNTRIAGED
    SeverityCounts:
      type: object
      properties:
        all:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The total count of findings from all severities.
        medium:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The total count of medium severity findings.
        high:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The total count of high severity findings.
        critical:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The total count of critical severity findings.
      description: An object that contains the counts of aggregated finding per severity.
    SortCriteria:
      type: object
      properties:
        field:
          allOf:
          - $ref: '#/components/schemas/SortField'
          description: The finding detail field by which results are sorted.
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          description: The order by which findings are sorted.
      required:
      - field
      - sortOrder
      description: Details about the criteria used to sort finding results.
    SortField:
      type: string
      enum:
      - AWS_ACCOUNT_ID
      - FINDING_TYPE
      - SEVERITY
      - FIRST_OBSERVED_AT
      - LAST_OBSERVED_AT
      - FINDING_STATUS
      - RESOURCE_TYPE
      - ECR_IMAGE_PUSHED_AT
      - ECR_IMAGE_REPOSITORY_NAME
      - ECR_IMAGE_REGISTRY
      - NETWORK_PROTOCOL
      - COMPONENT_TYPE
      - VULNERABILITY_ID
      - VULNERABILITY_SOURCE
      - INSPECTOR_SCORE
      - VENDOR_SEVERITY
      - EPSS_SCORE
    SortOrder:
      type: string
      enum:
      - ASC
      - DESC
    SourceLayerHash:
      type: string
      pattern: ^sha256:[a-z0-9]{64}$
      minLength: 71
      maxLength: 71
    StartCisSessionMessage:
      type: object
      properties:
        sessionToken:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique token that identifies the CIS session.
      required:
      - sessionToken
      description: The start CIS session message.
    StartCisSessionRequest:
      type: object
      properties:
        scanJobId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: A unique identifier for the scan job.
        message:
          allOf:
          - $ref: '#/components/schemas/StartCisSessionMessage'
          description: The start CIS session message.
      required:
      - scanJobId
      - message
    StartCisSessionResponse:
      type: object
      properties: {}
    State:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: The status of Amazon Inspector for the account.
        errorCode:
          allOf:
          - $ref: '#/components/schemas/ErrorCode'
          description: The error code explaining why the account failed to enable
            Amazon Inspector.
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The error message received when the account failed to enable
            Amazon Inspector.
      required:
      - status
      - errorCode
      - errorMessage
      description: An object that described the state of Amazon Inspector scans for
        an account.
    Status:
      type: string
      enum:
      - ENABLING
      - ENABLED
      - DISABLING
      - DISABLED
      - SUSPENDING
      - SUSPENDED
    StatusCounts:
      type: object
      properties:
        failed:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of checks that failed.
        skipped:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of checks that were skipped.
        passed:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of checks that passed.
      description: The status counts.
    Step:
      type: object
      properties:
        componentId:
          allOf:
          - $ref: '#/components/schemas/Component'
          description: The component ID.
        componentType:
          allOf:
          - $ref: '#/components/schemas/ComponentType'
          description: The component type.
        componentArn:
          allOf:
          - $ref: '#/components/schemas/ComponentArn'
          description: The component ARN. The ARN can be null and is not displayed
            in the Amazon Web Services console.
      required:
      - componentId
      - componentType
      description: Details about the step associated with a finding.
    StepList:
      type: array
      items:
        $ref: '#/components/schemas/Step'
    StopCisMessageProgress:
      type: object
      properties:
        totalChecks:
          allOf:
          - $ref: '#/components/schemas/CheckCount'
          description: The progress' total checks.
        successfulChecks:
          allOf:
          - $ref: '#/components/schemas/CheckCount'
          description: The progress' successful checks.
        failedChecks:
          allOf:
          - $ref: '#/components/schemas/CheckCount'
          description: The progress' failed checks.
        notEvaluatedChecks:
          allOf:
          - $ref: '#/components/schemas/CheckCount'
          description: The progress' not evaluated checks.
        unknownChecks:
          allOf:
          - $ref: '#/components/schemas/CheckCount'
          description: The progress' unknown checks.
        notApplicableChecks:
          allOf:
          - $ref: '#/components/schemas/CheckCount'
          description: The progress' not applicable checks.
        informationalChecks:
          allOf:
          - $ref: '#/components/schemas/CheckCount'
          description: The progress' informational checks.
        errorChecks:
          allOf:
          - $ref: '#/components/schemas/CheckCount'
          description: The progress' error checks.
      description: The stop CIS message progress.
    StopCisSessionMessage:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/StopCisSessionStatus'
          description: The status of the message.
        reason:
          allOf:
          - $ref: '#/components/schemas/Reason'
          description: The reason for the message.
        progress:
          allOf:
          - $ref: '#/components/schemas/StopCisMessageProgress'
          description: The progress of the message.
        computePlatform:
          allOf:
          - $ref: '#/components/schemas/ComputePlatform'
          description: The message compute platform.
        benchmarkVersion:
          allOf:
          - $ref: '#/components/schemas/BenchmarkVersion'
          description: The message benchmark version.
        benchmarkProfile:
          allOf:
          - $ref: '#/components/schemas/BenchmarkProfile'
          description: The message benchmark profile.
      required:
      - status
      - progress
      description: The stop CIS session message.
    StopCisSessionRequest:
      type: object
      properties:
        scanJobId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: A unique identifier for the scan job.
        sessionToken:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique token that identifies the CIS session.
        message:
          allOf:
          - $ref: '#/components/schemas/StopCisSessionMessage'
          description: The stop CIS session message.
      required:
      - scanJobId
      - sessionToken
      - message
    StopCisSessionResponse:
      type: object
      properties: {}
    StopCisSessionStatus:
      type: string
      enum:
      - SUCCESS
      - FAILED
      - INTERRUPTED
      - UNSUPPORTED_OS
    StringComparison:
      type: string
      enum:
      - EQUALS
      - PREFIX
      - NOT_EQUALS
    StringFilter:
      type: object
      properties:
        comparison:
          allOf:
          - $ref: '#/components/schemas/StringComparison'
          description: The operator to use when comparing values in the filter.
        value:
          allOf:
          - $ref: '#/components/schemas/StringInput'
          description: The value to filter on.
      required:
      - comparison
      - value
      description: An object that describes the details of a string filter.
    StringFilterList:
      type: array
      items:
        $ref: '#/components/schemas/StringFilter'
    StringInput:
      type: string
      minLength: 1
      maxLength: 1024
    StringList:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
    SubnetId:
      type: string
      pattern: ^subnet-([a-z0-9]{8}|[a-z0-9]{17}|\*)$
    SubnetIdList:
      type: array
      items:
        $ref: '#/components/schemas/SubnetId'
    SuggestedFix:
      type: object
      properties:
        description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The fix's description.
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The fix's code.
      description: A suggested fix for a vulnerability in your Lambda function code.
    SuggestedFixes:
      type: array
      items:
        $ref: '#/components/schemas/SuggestedFix'
    TagComparison:
      type: string
      enum:
      - EQUALS
    TagFilter:
      type: object
      properties:
        comparison:
          allOf:
          - $ref: '#/components/schemas/TagComparison'
          description: The tag filter comparison value.
        key:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The tag filter key.
        value:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The tag filter value.
      required:
      - comparison
      - key
      - value
      description: The tag filter.
    TagKey:
      type: string
      pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagList:
      type: array
      items:
        type: string
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/MapValue'
    TagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource to apply a tag
            to.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags to be added to a resource.
      required:
      - resourceArn
      - tags
    TagResourceResponse:
      type: object
      properties: {}
    TagValueList:
      type: array
      items:
        $ref: '#/components/schemas/TargetResourceTagsValue'
    Target:
      type: string
      minLength: 0
      maxLength: 50
    TargetAccount:
      type: string
      pattern: ^\d{12}|ALL_ACCOUNTS|SELF$
    TargetAccountList:
      type: array
      items:
        $ref: '#/components/schemas/TargetAccount'
    TargetResourceTags:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValueList'
    TargetResourceTagsKey:
      type: string
      pattern: ^[\p{L}\p{Z}\p{N}_.:/=\-@]*$
      minLength: 1
      maxLength: 128
    TargetResourceTagsValue:
      type: string
      minLength: 1
      maxLength: 256
    TargetStatusFilterList:
      type: array
      items:
        $ref: '#/components/schemas/CisTargetStatusFilter'
    TargetStatusReasonFilterList:
      type: array
      items:
        $ref: '#/components/schemas/CisTargetStatusReasonFilter'
    Targets:
      type: array
      items:
        $ref: '#/components/schemas/Target'
    ThrottlingException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        retryAfterSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of seconds to wait before retrying the request.
      required:
      - message
      description: The limit on the number of requests per second was exceeded.
    Time:
      type: object
      properties:
        timeOfDay:
          allOf:
          - $ref: '#/components/schemas/TimeOfDay'
          description: The time of day in 24-hour format (00:00).
        timezone:
          allOf:
          - $ref: '#/components/schemas/Timezone'
          description: The timezone.
      required:
      - timeOfDay
      - timezone
      description: The time.
    TimeOfDay:
      type: string
      pattern: ^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$
    Timezone:
      type: string
      minLength: 1
      maxLength: 50
    TitleAggregation:
      type: object
      properties:
        titles:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The finding titles to aggregate on.
        vulnerabilityIds:
          allOf:
          - $ref: '#/components/schemas/StringFilterList'
          description: The vulnerability IDs of the findings.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/AggregationResourceType'
          description: The resource type to aggregate on.
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          description: The order to sort results by.
        sortBy:
          allOf:
          - $ref: '#/components/schemas/TitleSortBy'
          description: The value to sort results by.
        findingType:
          allOf:
          - $ref: '#/components/schemas/AggregationFindingType'
          description: The type of finding to aggregate on.
      description: The details that define an aggregation based on finding title.
    TitleAggregationResponse:
      type: object
      properties:
        title:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The title that the findings were aggregated on.
        vulnerabilityId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The vulnerability ID of the finding.
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The ID of the Amazon Web Services account associated with the
            findings.
        severityCounts:
          allOf:
          - $ref: '#/components/schemas/SeverityCounts'
          description: An object that represent the count of matched findings per
            severity.
      required:
      - title
      description: A response that contains details on the results of a finding aggregation
        by title.
    TitleFilterList:
      type: array
      items:
        $ref: '#/components/schemas/CisStringFilter'
    TitleSortBy:
      type: string
      enum:
      - CRITICAL
      - HIGH
      - ALL
    Tool:
      type: string
      minLength: 0
    Tools:
      type: array
      items:
        $ref: '#/components/schemas/Tool'
    Ttp:
      type: string
      minLength: 0
      maxLength: 30
    Ttps:
      type: array
      items:
        $ref: '#/components/schemas/Ttp'
    UUID:
      type: string
      pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
    UntagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) for the resource to remove tags
            from.
        tagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: The tag keys to remove from the resource.
      required:
      - resourceArn
      - tagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateCisScanConfigurationRequest:
      type: object
      properties:
        scanConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/CisScanConfigurationArn'
          description: The CIS scan configuration ARN.
        scanName:
          allOf:
          - $ref: '#/components/schemas/CisScanName'
          description: The scan name for the CIS scan configuration.
        securityLevel:
          allOf:
          - $ref: '#/components/schemas/CisSecurityLevel'
          description: The security level for the CIS scan configuration. Security
            level refers to the Benchmark levels that CIS assigns to a profile.
        schedule:
          allOf:
          - $ref: '#/components/schemas/Schedule'
          description: The schedule for the CIS scan configuration.
        targets:
          allOf:
          - $ref: '#/components/schemas/UpdateCisTargets'
          description: The targets for the CIS scan configuration.
      required:
      - scanConfigurationArn
    UpdateCisScanConfigurationResponse:
      type: object
      properties:
        scanConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/CisScanConfigurationArn'
          description: The CIS scan configuration ARN.
      required:
      - scanConfigurationArn
    UpdateCisTargets:
      type: object
      properties:
        accountIds:
          allOf:
          - $ref: '#/components/schemas/TargetAccountList'
          description: The target account ids.
        targetResourceTags:
          allOf:
          - $ref: '#/components/schemas/TargetResourceTags'
          description: The target resource tags.
      description: Updates CIS targets.
    UpdateConfigurationRequest:
      type: object
      properties:
        ecrConfiguration:
          allOf:
          - $ref: '#/components/schemas/EcrConfiguration'
          description: Specifies how the ECR automated re-scan will be updated for
            your environment.
        ec2Configuration:
          allOf:
          - $ref: '#/components/schemas/Ec2Configuration'
          description: Specifies how the Amazon EC2 automated scan will be updated
            for your environment.
    UpdateConfigurationResponse:
      type: object
      properties: {}
    UpdateEc2DeepInspectionConfigurationRequest:
      type: object
      properties:
        activateDeepInspection:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specify `TRUE` to activate Amazon Inspector deep inspection
            in your account, or `FALSE` to deactivate. Member accounts in an organization
            cannot deactivate deep inspection, instead the delegated administrator
            for the organization can deactivate a member account using [BatchUpdateMemberEc2DeepInspectionStatus](https://docs.aws.amazon.com/inspector/v2/APIReference/API_BatchUpdateMemberEc2DeepInspectionStatus.html).
        packagePaths:
          allOf:
          - $ref: '#/components/schemas/PathList'
          description: The Amazon Inspector deep inspection custom paths you are adding
            for your account.
    UpdateEc2DeepInspectionConfigurationResponse:
      type: object
      properties:
        packagePaths:
          allOf:
          - $ref: '#/components/schemas/PathList'
          description: The current Amazon Inspector deep inspection custom paths for
            your account.
        orgPackagePaths:
          allOf:
          - $ref: '#/components/schemas/PathList'
          description: The current Amazon Inspector deep inspection custom paths for
            the organization.
        status:
          allOf:
          - $ref: '#/components/schemas/Ec2DeepInspectionStatus'
          description: The status of Amazon Inspector deep inspection in your account.
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: An error message explaining why new Amazon Inspector deep inspection
            custom paths could not be added.
    UpdateEncryptionKeyRequest:
      type: object
      properties:
        kmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          description: A KMS key ID for the encryption key.
        scanType:
          allOf:
          - $ref: '#/components/schemas/ScanType'
          description: The scan type for the encryption key.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The resource type for the encryption key.
      required:
      - kmsKeyId
      - scanType
      - resourceType
    UpdateEncryptionKeyResponse:
      type: object
      properties: {}
    UpdateFilterRequest:
      type: object
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/FilterAction'
          description: Specifies the action that is to be applied to the findings
            that match the filter.
        description:
          allOf:
          - $ref: '#/components/schemas/FilterDescription'
          description: A description of the filter.
        filterCriteria:
          allOf:
          - $ref: '#/components/schemas/FilterCriteria'
          description: Defines the criteria to be update in the filter.
        name:
          allOf:
          - $ref: '#/components/schemas/FilterName'
          description: The name of the filter.
        filterArn:
          allOf:
          - $ref: '#/components/schemas/FilterArn'
          description: The Amazon Resource Number (ARN) of the filter to update.
        reason:
          allOf:
          - $ref: '#/components/schemas/FilterReason'
          description: The reason the filter was updated.
      required:
      - filterArn
    UpdateFilterResponse:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/FilterArn'
          description: The Amazon Resource Number (ARN) of the successfully updated
            filter.
      required:
      - arn
    UpdateOrgEc2DeepInspectionConfigurationRequest:
      type: object
      properties:
        orgPackagePaths:
          allOf:
          - $ref: '#/components/schemas/PathList'
          description: The Amazon Inspector deep inspection custom paths you are adding
            for your organization.
      required:
      - orgPackagePaths
    UpdateOrgEc2DeepInspectionConfigurationResponse:
      type: object
      properties: {}
    UpdateOrganizationConfigurationRequest:
      type: object
      properties:
        autoEnable:
          allOf:
          - $ref: '#/components/schemas/AutoEnable'
          description: Defines which scan types are enabled automatically for new
            members of your Amazon Inspector organization.
      required:
      - autoEnable
    UpdateOrganizationConfigurationResponse:
      type: object
      properties:
        autoEnable:
          allOf:
          - $ref: '#/components/schemas/AutoEnable'
          description: The updated status of scan types automatically enabled for
            new members of your Amazon Inspector organization.
      required:
      - autoEnable
    Usage:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/UsageType'
          description: The type scan.
        total:
          allOf:
          - $ref: '#/components/schemas/UsageValue'
          description: The total of usage.
        estimatedMonthlyCost:
          allOf:
          - $ref: '#/components/schemas/MonthlyCostEstimate'
          description: The estimated monthly cost of Amazon Inspector.
        currency:
          allOf:
          - $ref: '#/components/schemas/Currency'
          description: The currency type used when calculating usage data.
      description: Contains usage information about the cost of Amazon Inspector operation.
    UsageAccountId:
      type: string
      pattern: '[0-9]{12}'
    UsageAccountIdList:
      type: array
      items:
        $ref: '#/components/schemas/UsageAccountId'
    UsageList:
      type: array
      items:
        $ref: '#/components/schemas/Usage'
    UsageTotal:
      type: object
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/MeteringAccountId'
          description: The account ID of the account that usage data was retrieved
            for.
        usage:
          allOf:
          - $ref: '#/components/schemas/UsageList'
          description: An object representing the total usage for an account.
      description: The total of usage for an account ID.
    UsageTotalList:
      type: array
      items:
        $ref: '#/components/schemas/UsageTotal'
    UsageType:
      type: string
      enum:
      - EC2_INSTANCE_HOURS
      - ECR_INITIAL_SCAN
      - ECR_RESCAN
      - LAMBDA_FUNCTION_HOURS
      - LAMBDA_FUNCTION_CODE_HOURS
    UsageValue:
      type: number
      format: double
      default: 0
      minimum: 0
    ValidationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        reason:
          allOf:
          - $ref: '#/components/schemas/ValidationExceptionReason'
          description: The reason for the validation failure.
        fields:
          allOf:
          - $ref: '#/components/schemas/ValidationExceptionFields'
          description: The fields that failed validation.
      required:
      - message
      - reason
      description: The request has failed validation due to missing required fields
        or having invalid inputs.
    ValidationExceptionField:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the validation exception.
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The validation exception message.
      required:
      - name
      - message
      description: An object that describes a validation exception.
    ValidationExceptionFields:
      type: array
      items:
        $ref: '#/components/schemas/ValidationExceptionField'
    ValidationExceptionReason:
      type: string
      enum:
      - CANNOT_PARSE
      - FIELD_VALIDATION_FAILED
      - OTHER
    Vendor:
      type: string
      maxLength: 16
    VendorCreatedAt:
      type: string
      format: date-time
    VendorSeverity:
      type: string
      minLength: 1
      maxLength: 64
    VendorUpdatedAt:
      type: string
      format: date-time
    Version:
      type: string
      pattern: ^\$LATEST|[0-9]+$
    VpcId:
      type: string
      pattern: ^vpc-([a-z0-9]{8}|[a-z0-9]{17}|\*)$
    VulnId:
      type: string
      pattern: ^CVE-[12][0-9]{3}-[0-9]{1,10}$
    VulnIdList:
      type: array
      items:
        $ref: '#/components/schemas/VulnId'
    Vulnerabilities:
      type: array
      items:
        $ref: '#/components/schemas/Vulnerability'
    Vulnerability:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID for the specific vulnerability.
        cwes:
          allOf:
          - $ref: '#/components/schemas/Cwes'
          description: The Common Weakness Enumeration (CWE) associated with the vulnerability.
        cisaData:
          allOf:
          - $ref: '#/components/schemas/CisaData'
          description: An object that contains the Cybersecurity and Infrastructure
            Security Agency (CISA) details for the vulnerability.
        source:
          allOf:
          - $ref: '#/components/schemas/VulnerabilitySource'
          description: The source of the vulnerability information. Possible results
            are `RHEL`, `AMAZON_CVE`, `DEBIAN` or `NVD`.
        description:
          allOf:
          - $ref: '#/components/schemas/VulnerabilityDescription'
          description: A description of the vulnerability.
        atigData:
          allOf:
          - $ref: '#/components/schemas/AtigData'
          description: An object that contains information about the Amazon Web Services
            Threat Intel Group (ATIG) details for the vulnerability.
        vendorSeverity:
          allOf:
          - $ref: '#/components/schemas/VendorSeverity'
          description: The severity assigned by the vendor.
        cvss3:
          allOf:
          - $ref: '#/components/schemas/Cvss3'
          description: An object that contains the Common Vulnerability Scoring System
            (CVSS) Version 3 details for the vulnerability.
        relatedVulnerabilities:
          allOf:
          - $ref: '#/components/schemas/RelatedVulnerabilities'
          description: A list of related vulnerabilities.
        cvss2:
          allOf:
          - $ref: '#/components/schemas/Cvss2'
          description: An object that contains the Common Vulnerability Scoring System
            (CVSS) Version 2 details for the vulnerability.
        vendorCreatedAt:
          allOf:
          - $ref: '#/components/schemas/VendorCreatedAt'
          description: The date and time when the vendor created this vulnerability.
        vendorUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/VendorUpdatedAt'
          description: The date and time when the vendor last updated this vulnerability.
        sourceUrl:
          allOf:
          - $ref: '#/components/schemas/VulnerabilitySourceUrl'
          description: A link to the official source material for this vulnerability.
        referenceUrls:
          allOf:
          - $ref: '#/components/schemas/VulnerabilityReferenceUrls'
          description: Links to various resources with more information on this vulnerability.
        exploitObserved:
          allOf:
          - $ref: '#/components/schemas/ExploitObserved'
          description: An object that contains details on when the exploit was observed.
        detectionPlatforms:
          allOf:
          - $ref: '#/components/schemas/DetectionPlatforms'
          description: Platforms that the vulnerability can be detected on.
        epss:
          allOf:
          - $ref: '#/components/schemas/Epss'
          description: An object that contains the Exploit Prediction Scoring System
            (EPSS) score for a vulnerability.
      required:
      - id
      description: Contains details about a specific vulnerability Amazon Inspector
        can detect.
    VulnerabilityDescription:
      type: string
    VulnerabilityId:
      type: string
      minLength: 1
      maxLength: 128
    VulnerabilityIdList:
      type: array
      items:
        $ref: '#/components/schemas/VulnerabilityId'
    VulnerabilityReferenceUrl:
      type: string
      minLength: 0
    VulnerabilityReferenceUrls:
      type: array
      items:
        $ref: '#/components/schemas/VulnerabilityReferenceUrl'
    VulnerabilitySource:
      type: string
      enum:
      - NVD
    VulnerabilitySourceUrl:
      type: string
      minLength: 0
    VulnerablePackage:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/PackageName'
          description: The name of the vulnerable package.
        version:
          allOf:
          - $ref: '#/components/schemas/PackageVersion'
          description: The version of the vulnerable package.
        sourceLayerHash:
          allOf:
          - $ref: '#/components/schemas/SourceLayerHash'
          description: The source layer hash of the vulnerable package.
        epoch:
          allOf:
          - $ref: '#/components/schemas/PackageEpoch'
          description: The epoch of the vulnerable package.
        release:
          allOf:
          - $ref: '#/components/schemas/PackageRelease'
          description: The release of the vulnerable package.
        arch:
          allOf:
          - $ref: '#/components/schemas/PackageArchitecture'
          description: The architecture of the vulnerable package.
        packageManager:
          allOf:
          - $ref: '#/components/schemas/PackageManager'
          description: The package manager of the vulnerable package.
        filePath:
          allOf:
          - $ref: '#/components/schemas/FilePath'
          description: The file path of the vulnerable package.
        fixedInVersion:
          allOf:
          - $ref: '#/components/schemas/PackageVersion'
          description: The version of the package that contains the vulnerability
            fix.
        remediation:
          allOf:
          - $ref: '#/components/schemas/VulnerablePackageRemediation'
          description: The code to run in your environment to update packages with
            a fix available.
        sourceLambdaLayerArn:
          allOf:
          - $ref: '#/components/schemas/LambdaLayerArn'
          description: The Amazon Resource Number (ARN) of the Amazon Web Services
            Lambda function affected by a finding.
      required:
      - name
      - version
      description: Information on the vulnerable package identified by a finding.
    VulnerablePackageList:
      type: array
      items:
        $ref: '#/components/schemas/VulnerablePackage'
    VulnerablePackageRemediation:
      type: string
      minLength: 1
      maxLength: 1024
    WeeklySchedule:
      type: object
      properties:
        startTime:
          allOf:
          - $ref: '#/components/schemas/Time'
          description: The weekly schedule's start time.
        days:
          allOf:
          - $ref: '#/components/schemas/DaysList'
          description: The weekly schedule's days.
      required:
      - startTime
      - days
      description: A weekly schedule.
