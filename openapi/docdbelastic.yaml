openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: docdb_elastic
  x-aws-serviceName: docdbelastic
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2022-11-28'
  title: Amazon DocumentDB Elastic Clusters
  description: |-
    Amazon DocumentDB elastic clusters

    Amazon DocumentDB elastic-clusters support workloads with millions of reads/writes per second and petabytes of storage capacity. Amazon DocumentDB elastic clusters also simplify how developers interact with Amazon DocumentDB elastic-clusters by eliminating the need to choose, manage or upgrade instances.

    Amazon DocumentDB elastic-clusters were created to:

      * provide a solution for customers looking for a database that provides virtually limitless scale with rich query capabilities and MongoDB API compatibility.

      * give customers higher connection limits, and to reduce downtime from patching.

      * continue investing in a cloud-native, elastic, and class leading architecture for JSON workloads.
servers:
- description: The Amazon DocumentDB Elastic Clusters regional endpoint
  url: https://docdb-elastic.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /pending-action:
    post:
      operationId: ApplyPendingMaintenanceAction
      description: |-
        The type of pending maintenance action to be applied to the resource.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resourceArn:
                  $ref: '#/components/schemas/InputString'
                applyAction:
                  $ref: '#/components/schemas/InputString'
                optInType:
                  $ref: '#/components/schemas/OptInType'
                applyOn:
                  $ref: '#/components/schemas/InputString'
      responses:
        '200': {}
        '403':
          description: |-
            An exception that occurs when there are not sufficient permissions to perform an action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was an access conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There was an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be located.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            ThrottlingException will be thrown when request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            A structure defining a validation exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /cluster-snapshot/{snapshotArn}/copy:
    post:
      operationId: CopyClusterSnapshot
      description: |-
        Copies a snapshot of an elastic cluster.
      parameters:
      - name: snapshotArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                targetSnapshotName:
                  $ref: '#/components/schemas/String'
                kmsKeyId:
                  $ref: '#/components/schemas/String'
                copyTags:
                  $ref: '#/components/schemas/Boolean'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            An exception that occurs when there are not sufficient permissions to perform an action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was an access conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There was an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be located.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The service quota for the action was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            ThrottlingException will be thrown when request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            A structure defining a validation exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /cluster:
    post:
      operationId: CreateCluster
      description: |-
        Creates a new Amazon DocumentDB elastic cluster and returns its cluster structure.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clusterName:
                  $ref: '#/components/schemas/String'
                authType:
                  $ref: '#/components/schemas/Auth'
                adminUserName:
                  $ref: '#/components/schemas/String'
                adminUserPassword:
                  $ref: '#/components/schemas/Password'
                shardCapacity:
                  $ref: '#/components/schemas/Integer'
                shardCount:
                  $ref: '#/components/schemas/Integer'
                vpcSecurityGroupIds:
                  $ref: '#/components/schemas/StringList'
                subnetIds:
                  $ref: '#/components/schemas/StringList'
                kmsKeyId:
                  $ref: '#/components/schemas/String'
                clientToken:
                  $ref: '#/components/schemas/String'
                preferredMaintenanceWindow:
                  $ref: '#/components/schemas/String'
                tags:
                  $ref: '#/components/schemas/TagMap'
                backupRetentionPeriod:
                  $ref: '#/components/schemas/Integer'
                preferredBackupWindow:
                  $ref: '#/components/schemas/String'
                shardInstanceCount:
                  $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
        '403':
          description: |-
            An exception that occurs when there are not sufficient permissions to perform an action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was an access conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There was an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            The service quota for the action was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            ThrottlingException will be thrown when request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            A structure defining a validation exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /cluster-snapshot:
    post:
      operationId: CreateClusterSnapshot
      description: |-
        Creates a snapshot of an elastic cluster.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clusterArn:
                  $ref: '#/components/schemas/String'
                snapshotName:
                  $ref: '#/components/schemas/String'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            An exception that occurs when there are not sufficient permissions to perform an action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was an access conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There was an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be located.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The service quota for the action was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            ThrottlingException will be thrown when request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            A structure defining a validation exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /cluster/{clusterArn}:
    delete:
      operationId: DeleteCluster
      description: |-
        Delete an elastic cluster.
      parameters:
      - name: clusterArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            An exception that occurs when there are not sufficient permissions to perform an action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was an access conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There was an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be located.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            ThrottlingException will be thrown when request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            A structure defining a validation exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetCluster
      description: |-
        Returns information about a specific elastic cluster.
      parameters:
      - name: clusterArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            An exception that occurs when there are not sufficient permissions to perform an action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There was an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be located.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            ThrottlingException will be thrown when request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            A structure defining a validation exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: UpdateCluster
      description: |-
        Modifies an elastic cluster. This includes updating admin-username/password, upgrading the API version, and setting up a backup window and maintenance window
      parameters:
      - name: clusterArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                authType:
                  $ref: '#/components/schemas/Auth'
                shardCapacity:
                  $ref: '#/components/schemas/Integer'
                shardCount:
                  $ref: '#/components/schemas/Integer'
                vpcSecurityGroupIds:
                  $ref: '#/components/schemas/StringList'
                subnetIds:
                  $ref: '#/components/schemas/StringList'
                adminUserPassword:
                  $ref: '#/components/schemas/Password'
                clientToken:
                  $ref: '#/components/schemas/String'
                preferredMaintenanceWindow:
                  $ref: '#/components/schemas/String'
                backupRetentionPeriod:
                  $ref: '#/components/schemas/Integer'
                preferredBackupWindow:
                  $ref: '#/components/schemas/String'
                shardInstanceCount:
                  $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
        '403':
          description: |-
            An exception that occurs when there are not sufficient permissions to perform an action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was an access conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There was an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be located.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            ThrottlingException will be thrown when request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            A structure defining a validation exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /cluster-snapshot/{snapshotArn}:
    delete:
      operationId: DeleteClusterSnapshot
      description: |-
        Delete an elastic cluster snapshot.
      parameters:
      - name: snapshotArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            An exception that occurs when there are not sufficient permissions to perform an action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was an access conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There was an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be located.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            ThrottlingException will be thrown when request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            A structure defining a validation exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetClusterSnapshot
      description: |-
        Returns information about a specific elastic cluster snapshot
      parameters:
      - name: snapshotArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            An exception that occurs when there are not sufficient permissions to perform an action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There was an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be located.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            ThrottlingException will be thrown when request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            A structure defining a validation exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /pending-action/{resourceArn}:
    get:
      operationId: GetPendingMaintenanceAction
      description: |-
        Retrieves all maintenance actions that are pending.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InputString'
      responses:
        '200': {}
        '403':
          description: |-
            An exception that occurs when there are not sufficient permissions to perform an action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was an access conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There was an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be located.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            ThrottlingException will be thrown when request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            A structure defining a validation exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /cluster-snapshots:
    get:
      operationId: ListClusterSnapshots
      description: |-
        Returns information about snapshots for a specified elastic cluster.
      parameters:
      - name: clusterArn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Integer'
      - name: snapshotType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            An exception that occurs when there are not sufficient permissions to perform an action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There was an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            ThrottlingException will be thrown when request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            A structure defining a validation exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /clusters:
    get:
      operationId: ListClusters
      description: |-
        Returns information about provisioned Amazon DocumentDB elastic clusters.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
        '403':
          description: |-
            An exception that occurs when there are not sufficient permissions to perform an action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There was an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            ThrottlingException will be thrown when request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            A structure defining a validation exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /pending-actions:
    get:
      operationId: ListPendingMaintenanceActions
      description: |-
        Retrieves a list of all maintenance actions that are pending.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
        '403':
          description: |-
            An exception that occurs when there are not sufficient permissions to perform an action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There was an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            ThrottlingException will be thrown when request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            A structure defining a validation exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tags/{resourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Lists all tags on a elastic cluster resource
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '500':
          description: |-
            There was an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be located.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            ThrottlingException will be thrown when request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            A structure defining a validation exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: TagResource
      description: |-
        Adds metadata tags to an elastic cluster resource
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '500':
          description: |-
            There was an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be located.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            ThrottlingException will be thrown when request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            A structure defining a validation exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: UntagResource
      description: |-
        Removes metadata tags from an elastic cluster resource
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeyList'
      responses:
        '200': {}
        '500':
          description: |-
            There was an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be located.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            ThrottlingException will be thrown when request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            A structure defining a validation exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /cluster-snapshot/{snapshotArn}/restore:
    post:
      operationId: RestoreClusterFromSnapshot
      description: |-
        Restores an elastic cluster from a snapshot.
      parameters:
      - name: snapshotArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clusterName:
                  $ref: '#/components/schemas/String'
                vpcSecurityGroupIds:
                  $ref: '#/components/schemas/StringList'
                subnetIds:
                  $ref: '#/components/schemas/StringList'
                kmsKeyId:
                  $ref: '#/components/schemas/String'
                tags:
                  $ref: '#/components/schemas/TagMap'
                shardCapacity:
                  $ref: '#/components/schemas/Integer'
                shardInstanceCount:
                  $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
        '403':
          description: |-
            An exception that occurs when there are not sufficient permissions to perform an action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was an access conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There was an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be located.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The service quota for the action was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            ThrottlingException will be thrown when request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            A structure defining a validation exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /cluster/{clusterArn}/start:
    post:
      operationId: StartCluster
      description: |-
        Restarts the stopped elastic cluster that is specified by `clusterARN`.
      parameters:
      - name: clusterArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            An exception that occurs when there are not sufficient permissions to perform an action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There was an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be located.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            ThrottlingException will be thrown when request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            A structure defining a validation exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /cluster/{clusterArn}/stop:
    post:
      operationId: StopCluster
      description: |-
        Stops the running elastic cluster that is specified by `clusterArn`. The elastic cluster must be in the _available_ state.
      parameters:
      - name: clusterArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            An exception that occurs when there are not sufficient permissions to perform an action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There was an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be located.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            ThrottlingException will be thrown when request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            A structure defining a validation exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    AccessDeniedException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: An error message explaining why access was denied.
      required:
      - message
      description: An exception that occurs when there are not sufficient permissions
        to perform an action.
    ApplyPendingMaintenanceActionInput:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/InputString'
          description: The Amazon DocumentDB Amazon Resource Name (ARN) of the resource
            to which the pending maintenance action applies.
        applyAction:
          allOf:
          - $ref: '#/components/schemas/InputString'
          description: "The pending maintenance action to apply to the resource.\n\
            \nValid actions are:\n\n  * `ENGINE_UPDATE __`\n\n  * `ENGINE_UPGRADE`\n\
            \n  * `SECURITY_UPDATE`\n\n  * `OS_UPDATE`\n\n  * `MASTER_USER_PASSWORD_UPDATE`"
        optInType:
          allOf:
          - $ref: '#/components/schemas/OptInType'
          description: A value that specifies the type of opt-in request, or undoes
            an opt-in request. An opt-in request of type `IMMEDIATE` can't be undone.
        applyOn:
          allOf:
          - $ref: '#/components/schemas/InputString'
          description: 'A specific date to apply the pending maintenance action. Required
            if opt-in-type is `APPLY_ON`. Format: `yyyy/MM/dd HH:mm-yyyy/MM/dd HH:mm`'
      required:
      - resourceArn
      - applyAction
      - optInType
    ApplyPendingMaintenanceActionOutput:
      type: object
      properties:
        resourcePendingMaintenanceAction:
          allOf:
          - $ref: '#/components/schemas/ResourcePendingMaintenanceAction'
          description: The output of the pending maintenance action being applied.
      required:
      - resourcePendingMaintenanceAction
    Arn:
      type: string
      minLength: 1
      maxLength: 1011
    Auth:
      type: string
      enum:
      - PLAIN_TEXT
      - SECRET_ARN
    Cluster:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the elastic cluster.
        clusterArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN identifier of the elastic cluster.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: The status of the elastic cluster.
        clusterEndpoint:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The URL used to connect to the elastic cluster.
        createTime:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The time when the elastic cluster was created in Universal
            Coordinated Time (UTC).
        adminUserName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the elastic cluster administrator.
        authType:
          allOf:
          - $ref: '#/components/schemas/Auth'
          description: The authentication type for the elastic cluster.
        shardCapacity:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of vCPUs assigned to each elastic cluster shard.
            Maximum is 64. Allowed values are 2, 4, 8, 16, 32, 64.
        shardCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of shards assigned to the elastic cluster. Maximum
            is 32.
        vpcSecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: A list of EC2 VPC security groups associated with thie elastic
            cluster.
        subnetIds:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The Amazon EC2 subnet IDs for the elastic cluster.
        preferredMaintenanceWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The weekly time range during which system maintenance can
            occur, in Universal Coordinated Time (UTC).


            _Format_ : `ddd:hh24:mi-ddd:hh24:mi`'
        kmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The KMS key identifier to use to encrypt the elastic cluster.
        shards:
          allOf:
          - $ref: '#/components/schemas/ShardList'
          description: The total number of shards in the cluster.
        backupRetentionPeriod:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of days for which automatic snapshots are retained.
        preferredBackupWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The daily time range during which automated backups are created
            if automated backups are enabled, as determined by `backupRetentionPeriod`.
        shardInstanceCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of replica instances applying to all shards in the
            cluster. A `shardInstanceCount` value of 1 means there is one writer instance,
            and any additional instances are replicas that can be used for reads and
            to improve availability.
      required:
      - clusterName
      - clusterArn
      - status
      - clusterEndpoint
      - createTime
      - adminUserName
      - authType
      - shardCapacity
      - shardCount
      - vpcSecurityGroupIds
      - subnetIds
      - preferredMaintenanceWindow
      - kmsKeyId
      description: Returns information about a specific elastic cluster.
    ClusterInList:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the elastic cluster.
        clusterArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN identifier of the elastic cluster.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: The status of the elastic cluster.
      required:
      - clusterName
      - clusterArn
      - status
      description: A list of Amazon DocumentDB elastic clusters.
    ClusterList:
      type: array
      items:
        $ref: '#/components/schemas/ClusterInList'
    ClusterSnapshot:
      type: object
      properties:
        subnetIds:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The Amazon EC2 subnet IDs for the elastic cluster.
        snapshotName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the elastic cluster snapshot.
        snapshotArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN identifier of the elastic cluster snapshot.
        snapshotCreationTime:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The time when the elastic cluster snapshot was created in Universal
            Coordinated Time (UTC).
        clusterArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN identifier of the elastic cluster.
        clusterCreationTime:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The time when the elastic cluster was created in Universal
            Coordinated Time (UTC).
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: The status of the elastic cluster snapshot.
        vpcSecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: A list of EC2 VPC security groups to associate with the elastic
            cluster.
        adminUserName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the elastic cluster administrator.
        kmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The KMS key identifier is the Amazon Resource Name (ARN) for
            the KMS encryption key. If you are creating a cluster using the same Amazon
            account that owns this KMS encryption key, you can use the KMS key alias
            instead of the ARN as the KMS encryption key. If an encryption key is
            not specified here, Amazon DocumentDB uses the default encryption key
            that KMS creates for your account. Your account has a different default
            encryption key for each Amazon Region.
        snapshotType:
          allOf:
          - $ref: '#/components/schemas/SnapshotType'
          description: "The type of cluster snapshots to be returned. You can specify\
            \ one of the following values:\n\n  * `automated` \\- Return all cluster\
            \ snapshots that Amazon DocumentDB has automatically created for your\
            \ Amazon Web Services account.\n\n  * `manual` \\- Return all cluster\
            \ snapshots that you have manually created for your Amazon Web Services\
            \ account."
      required:
      - subnetIds
      - snapshotName
      - snapshotArn
      - snapshotCreationTime
      - clusterArn
      - clusterCreationTime
      - status
      - vpcSecurityGroupIds
      - adminUserName
      - kmsKeyId
      description: Returns information about a specific elastic cluster snapshot.
    ClusterSnapshotInList:
      type: object
      properties:
        snapshotName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the elastic cluster snapshot.
        snapshotArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN identifier of the elastic cluster snapshot.
        clusterArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN identifier of the elastic cluster.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: The status of the elastic cluster snapshot.
        snapshotCreationTime:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The time when the elastic cluster snapshot was created in Universal
            Coordinated Time (UTC).
      required:
      - snapshotName
      - snapshotArn
      - clusterArn
      - status
      - snapshotCreationTime
      description: A list of elastic cluster snapshots.
    ClusterSnapshotList:
      type: array
      items:
        $ref: '#/components/schemas/ClusterSnapshotInList'
    ConflictException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        resourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the resource where there was an access conflict.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of the resource where there was an access conflict.
      required:
      - message
      - resourceId
      - resourceType
      description: There was an access conflict.
    CopyClusterSnapshotInput:
      type: object
      properties:
        snapshotArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) identifier of the elastic cluster
            snapshot.
        targetSnapshotName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: "The identifier of the new elastic cluster snapshot to create\
            \ from the source cluster snapshot. This parameter is not case sensitive.\n\
            \nConstraints:\n\n  * Must contain from 1 to 63 letters, numbers, or hyphens.\n\
            \n  * The first character must be a letter.\n\n  * Cannot end with a hyphen\
            \ or contain two consecutive hyphens.\n\nExample: `elastic-cluster-snapshot-5`"
        kmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The Amazon Web Services KMS key ID for an encrypted elastic
            cluster snapshot. The Amazon Web Services KMS key ID is the Amazon Resource
            Name (ARN), Amazon Web Services KMS key identifier, or the Amazon Web
            Services KMS key alias for the Amazon Web Services KMS encryption key.


            If you copy an encrypted elastic cluster snapshot from your Amazon Web
            Services account, you can specify a value for `KmsKeyId` to encrypt the
            copy with a new Amazon Web ServicesS KMS encryption key. If you don''t
            specify a value for `KmsKeyId`, then the copy of the elastic cluster snapshot
            is encrypted with the same `AWS` KMS key as the source elastic cluster
            snapshot.


            To copy an encrypted elastic cluster snapshot to another Amazon Web Services
            region, set `KmsKeyId` to the Amazon Web Services KMS key ID that you
            want to use to encrypt the copy of the elastic cluster snapshot in the
            destination region. Amazon Web Services KMS encryption keys are specific
            to the Amazon Web Services region that they are created in, and you can''t
            use encryption keys from one Amazon Web Services region in another Amazon
            Web Services region.


            If you copy an unencrypted elastic cluster snapshot and specify a value
            for the `KmsKeyId` parameter, an error is returned.'
        copyTags:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Set to `true` to copy all tags from the source cluster snapshot
            to the target elastic cluster snapshot. The default is `false`.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags to be assigned to the elastic cluster snapshot.
      required:
      - snapshotArn
      - targetSnapshotName
    CopyClusterSnapshotOutput:
      type: object
      properties:
        snapshot:
          $ref: '#/components/schemas/ClusterSnapshot'
      required:
      - snapshot
    CreateClusterInput:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: "The name of the new elastic cluster. This parameter is stored\
            \ as a lowercase string.\n\n_Constraints_ :\n\n  * Must contain from 1\
            \ to 63 letters, numbers, or hyphens.\n\n  * The first character must\
            \ be a letter.\n\n  * Cannot end with a hyphen or contain two consecutive\
            \ hyphens.\n\n_Example_ : `my-cluster`"
        authType:
          allOf:
          - $ref: '#/components/schemas/Auth'
          description: The authentication type used to determine where to fetch the
            password used for accessing the elastic cluster. Valid types are `PLAIN_TEXT`
            or `SECRET_ARN`.
        adminUserName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: "The name of the Amazon DocumentDB elastic clusters administrator.\n\
            \n_Constraints_ :\n\n  * Must be from 1 to 63 letters or numbers.\n\n\
            \  * The first character must be a letter.\n\n  * Cannot be a reserved\
            \ word."
        adminUserPassword:
          allOf:
          - $ref: '#/components/schemas/Password'
          description: "The password for the Amazon DocumentDB elastic clusters administrator.\
            \ The password can contain any printable ASCII characters.\n\n_Constraints_\
            \ :\n\n  * Must contain from 8 to 100 characters.\n\n  * Cannot contain\
            \ a forward slash (/), double quote (\"), or the \"at\" symbol (@)."
        shardCapacity:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of vCPUs assigned to each elastic cluster shard.
            Maximum is 64. Allowed values are 2, 4, 8, 16, 32, 64.
        shardCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of shards assigned to the elastic cluster. Maximum
            is 32.
        vpcSecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: A list of EC2 VPC security groups to associate with the new
            elastic cluster.
        subnetIds:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The Amazon EC2 subnet IDs for the new elastic cluster.
        kmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The KMS key identifier to use to encrypt the new elastic cluster.


            The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption
            key. If you are creating a cluster using the same Amazon account that
            owns this KMS encryption key, you can use the KMS key alias instead of
            the ARN as the KMS encryption key.


            If an encryption key is not specified, Amazon DocumentDB uses the default
            encryption key that KMS creates for your account. Your account has a different
            default encryption key for each Amazon Region.'
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The client token for the elastic cluster.
        preferredMaintenanceWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The weekly time range during which system maintenance can
            occur, in Universal Coordinated Time (UTC).


            _Format_ : `ddd:hh24:mi-ddd:hh24:mi`


            _Default_ : a 30-minute window selected at random from an 8-hour block
            of time for each Amazon Web Services Region, occurring on a random day
            of the week.


            _Valid days_ : Mon, Tue, Wed, Thu, Fri, Sat, Sun


            _Constraints_ : Minimum 30-minute window.'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags to be assigned to the new elastic cluster.
        backupRetentionPeriod:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of days for which automatic snapshots are retained.
        preferredBackupWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The daily time range during which automated backups are created
            if automated backups are enabled, as determined by the `backupRetentionPeriod`.
        shardInstanceCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of replica instances applying to all shards in the
            elastic cluster. A `shardInstanceCount` value of 1 means there is one
            writer instance, and any additional instances are replicas that can be
            used for reads and to improve availability.
      required:
      - clusterName
      - authType
      - adminUserName
      - adminUserPassword
      - shardCapacity
      - shardCount
    CreateClusterOutput:
      type: object
      properties:
        cluster:
          allOf:
          - $ref: '#/components/schemas/Cluster'
          description: The new elastic cluster that has been created.
      required:
      - cluster
    CreateClusterSnapshotInput:
      type: object
      properties:
        clusterArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN identifier of the elastic cluster of which you want
            to create a snapshot.
        snapshotName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the new elastic cluster snapshot.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags to be assigned to the new elastic cluster snapshot.
      required:
      - clusterArn
      - snapshotName
    CreateClusterSnapshotOutput:
      type: object
      properties:
        snapshot:
          allOf:
          - $ref: '#/components/schemas/ClusterSnapshot'
          description: Returns information about the new elastic cluster snapshot.
      required:
      - snapshot
    DeleteClusterInput:
      type: object
      properties:
        clusterArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN identifier of the elastic cluster that is to be deleted.
      required:
      - clusterArn
    DeleteClusterOutput:
      type: object
      properties:
        cluster:
          allOf:
          - $ref: '#/components/schemas/Cluster'
          description: Returns information about the newly deleted elastic cluster.
      required:
      - cluster
    DeleteClusterSnapshotInput:
      type: object
      properties:
        snapshotArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN identifier of the elastic cluster snapshot that is
            to be deleted.
      required:
      - snapshotArn
    DeleteClusterSnapshotOutput:
      type: object
      properties:
        snapshot:
          allOf:
          - $ref: '#/components/schemas/ClusterSnapshot'
          description: Returns information about the newly deleted elastic cluster
            snapshot.
      required:
      - snapshot
    GetClusterInput:
      type: object
      properties:
        clusterArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN identifier of the elastic cluster.
      required:
      - clusterArn
    GetClusterOutput:
      type: object
      properties:
        cluster:
          allOf:
          - $ref: '#/components/schemas/Cluster'
          description: Returns information about a specific elastic cluster.
      required:
      - cluster
    GetClusterSnapshotInput:
      type: object
      properties:
        snapshotArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN identifier of the elastic cluster snapshot.
      required:
      - snapshotArn
    GetClusterSnapshotOutput:
      type: object
      properties:
        snapshot:
          allOf:
          - $ref: '#/components/schemas/ClusterSnapshot'
          description: Returns information about a specific elastic cluster snapshot.
      required:
      - snapshot
    GetPendingMaintenanceActionInput:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/InputString'
          description: Retrieves pending maintenance actions for a specific Amazon
            Resource Name (ARN).
      required:
      - resourceArn
    GetPendingMaintenanceActionOutput:
      type: object
      properties:
        resourcePendingMaintenanceAction:
          allOf:
          - $ref: '#/components/schemas/ResourcePendingMaintenanceAction'
          description: Provides information about a pending maintenance action for
            a resource.
      required:
      - resourcePendingMaintenanceAction
    InputString:
      type: string
      minLength: 1
      maxLength: 256
    InternalServerException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: There was an internal server error.
    ListClusterSnapshotsInput:
      type: object
      properties:
        clusterArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN identifier of the elastic cluster.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: 'A pagination token provided by a previous request. If this
            parameter is specified, the response includes only records beyond this
            token, up to the value specified by `max-results`.


            If there is no more data in the responce, the `nextToken` will not be
            returned.'
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of elastic cluster snapshot results to receive
            in the response.
        snapshotType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: "The type of cluster snapshots to be returned. You can specify\
            \ one of the following values:\n\n  * `automated` \\- Return all cluster\
            \ snapshots that Amazon DocumentDB has automatically created for your\
            \ Amazon Web Services account.\n\n  * `manual` \\- Return all cluster\
            \ snapshots that you have manually created for your Amazon Web Services\
            \ account."
    ListClusterSnapshotsOutput:
      type: object
      properties:
        snapshots:
          allOf:
          - $ref: '#/components/schemas/ClusterSnapshotList'
          description: A list of snapshots for a specified elastic cluster.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: 'A pagination token provided by a previous request. If this
            parameter is specified, the response includes only records beyond this
            token, up to the value specified by `max-results`.


            If there is no more data in the responce, the `nextToken` will not be
            returned.'
    ListClustersInput:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: 'A pagination token provided by a previous request. If this
            parameter is specified, the response includes only records beyond this
            token, up to the value specified by `max-results`.


            If there is no more data in the responce, the `nextToken` will not be
            returned.'
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of elastic cluster snapshot results to receive
            in the response.
    ListClustersOutput:
      type: object
      properties:
        clusters:
          allOf:
          - $ref: '#/components/schemas/ClusterList'
          description: A list of Amazon DocumentDB elastic clusters.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: 'A pagination token provided by a previous request. If this
            parameter is specified, the response includes only records beyond this
            token, up to the value specified by `max-results`.


            If there is no more data in the responce, the `nextToken` will not be
            returned.'
    ListPendingMaintenanceActionsInput:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: An optional pagination token provided by a previous request.
            If this parameter is specified, the response includes only records beyond
            the marker, up to the value specified by `maxResults`.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of results to include in the response. If
            more records exist than the specified `maxResults` value, a pagination
            token (marker) is included in the response so that the remaining results
            can be retrieved.
    ListPendingMaintenanceActionsOutput:
      type: object
      properties:
        resourcePendingMaintenanceActions:
          allOf:
          - $ref: '#/components/schemas/ResourcePendingMaintenanceActionList'
          description: Provides information about a pending maintenance action for
            a resource.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: An optional pagination token provided by a previous request.
            If this parameter is displayed, the responses will include only records
            beyond the marker, up to the value specified by `maxResults`.
      required:
      - resourcePendingMaintenanceActions
    ListTagsForResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN identifier of the elastic cluster resource.
      required:
      - resourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The list of tags for the specified elastic cluster resource.
    OptInType:
      type: string
      enum:
      - IMMEDIATE
      - NEXT_MAINTENANCE
      - APPLY_ON
      - UNDO_OPT_IN
    PaginationToken:
      type: string
    Password:
      type: string
    PendingMaintenanceActionDetails:
      type: object
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Displays the specific action of a pending maintenance action.
        autoAppliedAfterDate:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Displays the date of the maintenance window when the action
            is applied. The maintenance action is applied to the resource during its
            first maintenance window after this date. If this date is specified, any
            `NEXT_MAINTENANCE` `optInType` requests are ignored.
        forcedApplyDate:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Displays the date when the maintenance action is automatically
            applied. The maintenance action is applied to the resource on this date
            regardless of the maintenance window for the resource. If this date is
            specified, any `IMMEDIATE` `optInType` requests are ignored.
        optInStatus:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Displays the type of `optInType` request that has been received
            for the resource.
        currentApplyDate:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Displays the effective date when the pending maintenance action
            is applied to the resource.
        description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Displays a description providing more detail about the maintenance
            action.
      required:
      - action
      description: Retrieves the details of maintenance actions that are pending.
    PendingMaintenanceActionDetailsList:
      type: array
      items:
        $ref: '#/components/schemas/PendingMaintenanceActionDetails'
    ResourceNotFoundException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: An error message describing the failure.
        resourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the resource that could not be located.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of the resource that could not be found.
      required:
      - message
      - resourceId
      - resourceType
      description: The specified resource could not be located.
    ResourcePendingMaintenanceAction:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon DocumentDB Amazon Resource Name (ARN) of the resource
            to which the pending maintenance action applies.
        pendingMaintenanceActionDetails:
          allOf:
          - $ref: '#/components/schemas/PendingMaintenanceActionDetailsList'
          description: Provides information about a pending maintenance action for
            a resource.
      description: Provides information about a pending maintenance action for a resource.
    ResourcePendingMaintenanceActionList:
      type: array
      items:
        $ref: '#/components/schemas/ResourcePendingMaintenanceAction'
    RestoreClusterFromSnapshotInput:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the elastic cluster.
        snapshotArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN identifier of the elastic cluster snapshot.
        vpcSecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: A list of EC2 VPC security groups to associate with the elastic
            cluster.
        subnetIds:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The Amazon EC2 subnet IDs for the elastic cluster.
        kmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The KMS key identifier to use to encrypt the new Amazon DocumentDB
            elastic clusters cluster.


            The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption
            key. If you are creating a cluster using the same Amazon account that
            owns this KMS encryption key, you can use the KMS key alias instead of
            the ARN as the KMS encryption key.


            If an encryption key is not specified here, Amazon DocumentDB uses the
            default encryption key that KMS creates for your account. Your account
            has a different default encryption key for each Amazon Region.'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A list of the tag names to be assigned to the restored elastic
            cluster, in the form of an array of key-value pairs in which the key is
            the tag name and the value is the key value.
        shardCapacity:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The capacity of each shard in the new restored elastic cluster.
        shardInstanceCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of replica instances applying to all shards in the
            elastic cluster. A `shardInstanceCount` value of 1 means there is one
            writer instance, and any additional instances are replicas that can be
            used for reads and to improve availability.
      required:
      - clusterName
      - snapshotArn
    RestoreClusterFromSnapshotOutput:
      type: object
      properties:
        cluster:
          allOf:
          - $ref: '#/components/schemas/Cluster'
          description: Returns information about a the restored elastic cluster.
      required:
      - cluster
    ServiceQuotaExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The service quota for the action was exceeded.
    Shard:
      type: object
      properties:
        shardId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the shard.
        createTime:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The time when the shard was created in Universal Coordinated
            Time (UTC).
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: The current status of the shard.
      required:
      - shardId
      - createTime
      - status
      description: The name of the shard.
    ShardList:
      type: array
      items:
        $ref: '#/components/schemas/Shard'
    SnapshotType:
      type: string
      enum:
      - MANUAL
      - AUTOMATED
    StartClusterInput:
      type: object
      properties:
        clusterArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN identifier of the elastic cluster.
      required:
      - clusterArn
    StartClusterOutput:
      type: object
      properties:
        cluster:
          $ref: '#/components/schemas/Cluster'
      required:
      - cluster
    Status:
      type: string
      enum:
      - CREATING
      - ACTIVE
      - DELETING
      - UPDATING
      - VPC_ENDPOINT_LIMIT_EXCEEDED
      - IP_ADDRESS_LIMIT_EXCEEDED
      - INVALID_SECURITY_GROUP_ID
      - INVALID_SUBNET_ID
      - INACCESSIBLE_ENCRYPTION_CREDS
      - INACCESSIBLE_SECRET_ARN
      - INACCESSIBLE_VPC_ENDPOINT
      - INCOMPATIBLE_NETWORK
      - MERGING
      - MODIFYING
      - SPLITTING
      - COPYING
      - STARTING
      - STOPPING
      - STOPPED
      - MAINTENANCE
      - INACCESSIBLE_ENCRYPTION_CREDENTIALS_RECOVERABLE
    StopClusterInput:
      type: object
      properties:
        clusterArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN identifier of the elastic cluster.
      required:
      - clusterArn
    StopClusterOutput:
      type: object
      properties:
        cluster:
          $ref: '#/components/schemas/Cluster'
      required:
      - cluster
    StringList:
      type: array
      items:
        type: string
    TagKey:
      type: string
      pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN identifier of the elastic cluster resource.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags that are assigned to the elastic cluster resource.
      required:
      - resourceArn
      - tags
    TagResourceResponse:
      type: object
      properties: {}
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    ThrottlingException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        retryAfterSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of seconds to wait before retrying the operation.
      required:
      - message
      description: ThrottlingException will be thrown when request was denied due
        to request throttling.
    UntagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN identifier of the elastic cluster resource.
        tagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: The tag keys to be removed from the elastic cluster resource.
      required:
      - resourceArn
      - tagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateClusterInput:
      type: object
      properties:
        clusterArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN identifier of the elastic cluster.
        authType:
          allOf:
          - $ref: '#/components/schemas/Auth'
          description: The authentication type used to determine where to fetch the
            password used for accessing the elastic cluster. Valid types are `PLAIN_TEXT`
            or `SECRET_ARN`.
        shardCapacity:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of vCPUs assigned to each elastic cluster shard.
            Maximum is 64. Allowed values are 2, 4, 8, 16, 32, 64.
        shardCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of shards assigned to the elastic cluster. Maximum
            is 32.
        vpcSecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: A list of EC2 VPC security groups to associate with the elastic
            cluster.
        subnetIds:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The Amazon EC2 subnet IDs for the elastic cluster.
        adminUserPassword:
          allOf:
          - $ref: '#/components/schemas/Password'
          description: 'The password associated with the elastic cluster administrator.
            This password can contain any printable ASCII character except forward
            slash (/), double quote ("), or the "at" symbol (@).


            _Constraints_ : Must contain from 8 to 100 characters.'
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The client token for the elastic cluster.
        preferredMaintenanceWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The weekly time range during which system maintenance can
            occur, in Universal Coordinated Time (UTC).


            _Format_ : `ddd:hh24:mi-ddd:hh24:mi`


            _Default_ : a 30-minute window selected at random from an 8-hour block
            of time for each Amazon Web Services Region, occurring on a random day
            of the week.


            _Valid days_ : Mon, Tue, Wed, Thu, Fri, Sat, Sun


            _Constraints_ : Minimum 30-minute window.'
        backupRetentionPeriod:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of days for which automatic snapshots are retained.
        preferredBackupWindow:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The daily time range during which automated backups are created
            if automated backups are enabled, as determined by the `backupRetentionPeriod`.
        shardInstanceCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of replica instances applying to all shards in the
            elastic cluster. A `shardInstanceCount` value of 1 means there is one
            writer instance, and any additional instances are replicas that can be
            used for reads and to improve availability.
      required:
      - clusterArn
    UpdateClusterOutput:
      type: object
      properties:
        cluster:
          allOf:
          - $ref: '#/components/schemas/Cluster'
          description: Returns information about the updated elastic cluster.
      required:
      - cluster
    ValidationException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: An error message describing the validation exception.
        reason:
          allOf:
          - $ref: '#/components/schemas/ValidationExceptionReason'
          description: The reason why the validation exception occurred (one of `unknownOperation`,
            `cannotParse`, `fieldValidationFailed`, or `other`).
        fieldList:
          allOf:
          - $ref: '#/components/schemas/ValidationExceptionFieldList'
          description: A list of the fields in which the validation exception occurred.
      required:
      - message
      - reason
      description: A structure defining a validation exception.
    ValidationExceptionField:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the field where the validation exception occurred.
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: An error message describing the validation exception in this
            field.
      required:
      - name
      - message
      description: A specific field in which a given validation exception occurred.
    ValidationExceptionFieldList:
      type: array
      items:
        $ref: '#/components/schemas/ValidationExceptionField'
    ValidationExceptionReason:
      type: string
      enum:
      - unknownOperation
      - cannotParse
      - fieldValidationFailed
      - other
