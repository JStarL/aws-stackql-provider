openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: resource_groups
  x-aws-serviceName: resourcegroups
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-05'
  version: '2017-11-27'
  title: AWS Resource Groups
  description: |-
    Resource Groups lets you organize Amazon Web Services resources such as Amazon Elastic Compute Cloud instances, Amazon Relational Database Service databases, and Amazon Simple Storage Service buckets into groups using criteria that you define as tags. A resource group is a collection of resources that match the resource types specified in a query, and share one or more tags or portions of tags. You can create a group of resources based on their roles in your cloud infrastructure, lifecycle stages, regions, application layers, or virtually any criteria. Resource Groups enable you to automate management tasks, such as those in Amazon Web Services Systems Manager Automation documents, on tag-related resources in Amazon Web Services Systems Manager. Groups of tagged resources also let you quickly view a custom console in Amazon Web Services Systems Manager that shows Config compliance and other monitoring data about member resources.

    To create a resource group, build a resource query, and specify tags that identify the criteria that members of the group have in common. Tags are key-value pairs.

    For more information about Resource Groups, see the [Resource Groups User Guide](https://docs.aws.amazon.com/ARG/latest/userguide/welcome.html).

    Resource Groups uses a REST-compliant API that you can use to perform the following types of operations.

      * Create, Read, Update, and Delete (CRUD) operations on resource groups and resource query entities

      * Applying, editing, and removing tags from resource groups

      * Resolving resource group member Amazon resource names (ARN)s so they can be returned as search results

      * Getting data about resources that are members of a group

      * Searching Amazon Web Services resources based on a resource query
servers:
- description: The AWS Resource Groups regional endpoint
  url: https://resource-groups.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths: {}
components:
  schemas:
    ApplicationArn:
      type: string
      pattern: ^arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}(-[a-z]+)+-\d{1}:[0-9]{12}:group/[a-zA-Z0-9_\.-]{1,150}/[a-zA-Z0-9]{22,26}$
      minLength: 12
      maxLength: 1600
    ApplicationTag:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ApplicationArn'
    ApplicationTagKey:
      type: string
      pattern: ^awsApplication$
    CreateGroupName:
      type: string
      pattern: ^[a-zA-Z0-9_\.-]+$
      minLength: 1
      maxLength: 300
    Criticality:
      type: integer
      minimum: 1
      maximum: 10
    Description:
      type: string
      pattern: ^[\sa-zA-Z0-9_\.-]*$
      minLength: 0
      maxLength: 1024
    DisplayName:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 0
      maxLength: 300
    ErrorCode:
      type: string
      minLength: 1
      maxLength: 128
    ErrorMessage:
      type: string
      minLength: 1
      maxLength: 1024
    FailedResourceList:
      type: array
      items:
        $ref: '#/components/schemas/FailedResource'
    GroupArn:
      type: string
      pattern: ^arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}(-[a-z]+)+-\d{1}:[0-9]{12}:group/([a-zA-Z0-9_\.-]{1,300}|[a-zA-Z0-9_\.-]{1,150}/[a-z0-9]{26})$
      minLength: 12
      maxLength: 1600
    GroupArnV2:
      type: string
      pattern: ^arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}(-[a-z]+)+-\d{1}:[0-9]{12}:group/([a-zA-Z0-9_\.-]{1,300}|[a-zA-Z0-9_\.-]{1,150}/[a-z0-9]{26})$
      minLength: 12
      maxLength: 1600
    GroupConfigurationFailureReason:
      type: string
    GroupConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/GroupConfigurationItem'
    GroupConfigurationParameterName:
      type: string
      pattern: ^[a-z-]+$
      minLength: 1
      maxLength: 80
    GroupConfigurationParameterValue:
      type: string
      pattern: ^[a-zA-Z0-9:\/\._-]+$
      minLength: 1
      maxLength: 256
    GroupConfigurationParameterValueList:
      type: array
      items:
        $ref: '#/components/schemas/GroupConfigurationParameterValue'
    GroupConfigurationStatus:
      type: string
      enum:
      - UPDATING
      - UPDATE_COMPLETE
      - UPDATE_FAILED
    GroupConfigurationType:
      type: string
      pattern: ^AWS::[a-zA-Z0-9]+::[a-zA-Z0-9]+$
      minLength: 0
      maxLength: 40
    GroupFilterList:
      type: array
      items:
        $ref: '#/components/schemas/GroupFilter'
    GroupFilterName:
      type: string
      enum:
      - resource-type
      - configuration-type
      - owner
      - display-name
      - criticality
    GroupFilterValue:
      type: string
      pattern: ^AWS::(AllSupported|[a-zA-Z0-9]+::[a-zA-Z0-9]+)|[\s\p{L}0-9_\.-]*$
      minLength: 1
      maxLength: 300
    GroupFilterValues:
      type: array
      items:
        $ref: '#/components/schemas/GroupFilterValue'
    GroupIdentifierList:
      type: array
      items:
        $ref: '#/components/schemas/GroupIdentifier'
    GroupLifecycleEventsDesiredStatus:
      type: string
      enum:
      - ACTIVE
      - INACTIVE
    GroupLifecycleEventsStatus:
      type: string
      enum:
      - ACTIVE
      - INACTIVE
      - IN_PROGRESS
      - ERROR
    GroupLifecycleEventsStatusMessage:
      type: string
      minLength: 1
      maxLength: 1024
    GroupList:
      type: array
      items:
        $ref: '#/components/schemas/Group'
    GroupName:
      type: string
      pattern: ^[a-zA-Z0-9_\.-]{1,300}|[a-zA-Z0-9_\.-]{1,150}/[a-z0-9]{26}$
      minLength: 1
      maxLength: 300
    GroupParameterList:
      type: array
      items:
        $ref: '#/components/schemas/GroupConfigurationParameter'
    GroupString:
      type: string
      pattern: ^[a-zA-Z0-9_\.-]{1,300}|[a-zA-Z0-9_\.-]{1,150}/[a-z0-9]{26}|arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}(-[a-z]+)+-\d{1}:[0-9]{12}:group/([a-zA-Z0-9_\.-]{1,300}|[a-zA-Z0-9_\.-]{1,150}/[a-z0-9]{26})$
      minLength: 1
      maxLength: 1600
    GroupStringV2:
      type: string
      pattern: ^[a-zA-Z0-9_\.-]{1,300}|[a-zA-Z0-9_\.-]{1,150}/[a-z0-9]{26}|arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}(-[a-z]+)+-\d{1}:[0-9]{12}:group/([a-zA-Z0-9_\.-]{1,300}|[a-zA-Z0-9_\.-]{1,150}/[a-z0-9]{26})$
      minLength: 1
      maxLength: 1600
    GroupingStatus:
      type: string
      enum:
      - SUCCESS
      - FAILED
      - IN_PROGRESS
      - SKIPPED
    GroupingStatusesList:
      type: array
      items:
        $ref: '#/components/schemas/GroupingStatusesItem'
    GroupingType:
      type: string
      enum:
      - GROUP
      - UNGROUP
    ListGroupResourcesItemList:
      type: array
      items:
        $ref: '#/components/schemas/ListGroupResourcesItem'
    ListGroupingStatusesFilterList:
      type: array
      items:
        $ref: '#/components/schemas/ListGroupingStatusesFilter'
    ListGroupingStatusesFilterName:
      type: string
      enum:
      - status
      - resource-arn
    ListGroupingStatusesFilterValue:
      type: string
      pattern: ^SUCCESS|FAILED|IN_PROGRESS|SKIPPED|arn:aws(-[a-z]+)*:[a-z0-9\-]*:([a-z]{2}(-[a-z]+)+-\d{1})?:([0-9]{12})?:.+$
    ListGroupingStatusesFilterValues:
      type: array
      items:
        $ref: '#/components/schemas/ListGroupingStatusesFilterValue'
    ListTagSyncTasksFilterList:
      type: array
      items:
        $ref: '#/components/schemas/ListTagSyncTasksFilter'
    MaxResults:
      type: integer
      minimum: 1
      maximum: 50
    NextToken:
      type: string
      pattern: ^[a-zA-Z0-9+/]*={0,2}$
      minLength: 0
      maxLength: 8192
    Owner:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 0
      maxLength: 300
    PendingResourceList:
      type: array
      items:
        $ref: '#/components/schemas/PendingResource'
    Query:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 4096
    QueryErrorCode:
      type: string
      enum:
      - CLOUDFORMATION_STACK_INACTIVE
      - CLOUDFORMATION_STACK_NOT_EXISTING
      - CLOUDFORMATION_STACK_UNASSUMABLE_ROLE
      - RESOURCE_TYPE_NOT_SUPPORTED
    QueryErrorList:
      type: array
      items:
        $ref: '#/components/schemas/QueryError'
    QueryErrorMessage:
      type: string
    QueryType:
      type: string
      enum:
      - TAG_FILTERS_1_0
      - CLOUDFORMATION_STACK_1_0
    ResourceArn:
      type: string
      pattern: ^arn:aws(-[a-z]+)*:[a-z0-9\-]*:([a-z]{2}(-[a-z]+)+-\d{1})?:([0-9]{12})?:.+$
    ResourceArnList:
      type: array
      items:
        $ref: '#/components/schemas/ResourceArn'
    ResourceFilterList:
      type: array
      items:
        $ref: '#/components/schemas/ResourceFilter'
    ResourceFilterName:
      type: string
      enum:
      - resource-type
    ResourceFilterValue:
      type: string
      pattern: ^AWS::[a-zA-Z0-9]+::[a-zA-Z0-9]+$
      minLength: 1
      maxLength: 128
    ResourceFilterValues:
      type: array
      items:
        $ref: '#/components/schemas/ResourceFilterValue'
    ResourceIdentifierList:
      type: array
      items:
        $ref: '#/components/schemas/ResourceIdentifier'
    ResourceStatusValue:
      type: string
      enum:
      - PENDING
    ResourceType:
      type: string
      pattern: ^AWS::[a-zA-Z0-9]+::\w+$
    RoleArn:
      type: string
      pattern: ^arn:(aws[a-zA-Z-]*)?:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
      minLength: 20
      maxLength: 2048
    TagKey:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagSyncTaskArn:
      type: string
      pattern: ^arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}(-[a-z]+)+-\d{1}:[0-9]{12}:group/[a-zA-Z0-9_\.-]{1,150}/[a-z0-9]{26}/tag-sync-task/[a-z0-9]{26}$
      minLength: 12
      maxLength: 1600
    TagSyncTaskList:
      type: array
      items:
        $ref: '#/components/schemas/TagSyncTaskItem'
    TagSyncTaskStatus:
      type: string
      enum:
      - ACTIVE
      - ERROR
    TagValue:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 0
      maxLength: 256
    Tags:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    timestamp:
      type: string
      format: date-time
