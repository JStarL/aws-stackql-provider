openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: resource_groups
  x-aws-serviceName: resourcegroups
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2017-11-27'
  title: AWS Resource Groups
  description: |-
    Resource Groups lets you organize Amazon Web Services resources such as Amazon Elastic Compute Cloud instances, Amazon Relational Database Service databases, and Amazon Simple Storage Service buckets into groups using criteria that you define as tags. A resource group is a collection of resources that match the resource types specified in a query, and share one or more tags or portions of tags. You can create a group of resources based on their roles in your cloud infrastructure, lifecycle stages, regions, application layers, or virtually any criteria. Resource Groups enable you to automate management tasks, such as those in Amazon Web Services Systems Manager Automation documents, on tag-related resources in Amazon Web Services Systems Manager. Groups of tagged resources also let you quickly view a custom console in Amazon Web Services Systems Manager that shows Config compliance and other monitoring data about member resources.

    To create a resource group, build a resource query, and specify tags that identify the criteria that members of the group have in common. Tags are key-value pairs.

    For more information about Resource Groups, see the [Resource Groups User Guide](https://docs.aws.amazon.com/ARG/latest/userguide/welcome.html).

    Resource Groups uses a REST-compliant API that you can use to perform the following types of operations.

      * Create, Read, Update, and Delete (CRUD) operations on resource groups and resource query entities

      * Applying, editing, and removing tags from resource groups

      * Resolving resource group member Amazon resource names (ARN)s so they can be returned as search results

      * Getting data about resources that are members of a group

      * Searching Amazon Web Services resources based on a resource query
servers:
- description: The AWS Resource Groups regional endpoint
  url: https://resource-groups.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /cancel-tag-sync-task:
    post:
      operationId: CancelTagSyncTask
      description: |-
        Cancels the specified tag-sync task.

        **Minimum permissions**

        To run this command, you must have the following permissions:

          * `resource-groups:CancelTagSyncTask` on the application group

          * `resource-groups:DeleteGroup`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TaskArn:
                  $ref: '#/components/schemas/TagSyncTaskArn'
      responses:
        '200': {}
        '400':
          description: |-
            The request includes one or more parameters that violate validation rules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The caller isn't authorized to make the request. Check permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An internal error occurred while processing the request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            The request uses an HTTP method that isn't allowed for the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '429':
          description: |-
            You've exceeded throttling limits by making too many requests in a period of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            The request was rejected because it doesn't have valid credentials for the target resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /groups:
    post:
      operationId: CreateGroup
      description: |-
        Creates a resource group with the specified name and description. You can optionally include either a resource query or a service configuration. For more information about constructing a resource query, see [Build queries and groups in Resource Groups](https://docs.aws.amazon.com/ARG/latest/userguide/getting_started-query.html) in the _Resource Groups User Guide_. For more information about service-linked groups and service configurations, see [Service configurations for Resource Groups](https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html).

        **Minimum permissions**

        To run this command, you must have the following permissions:

          * `resource-groups:CreateGroup`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/CreateGroupName'
                Description:
                  $ref: '#/components/schemas/Description'
                ResourceQuery:
                  $ref: '#/components/schemas/ResourceQuery'
                Tags:
                  $ref: '#/components/schemas/Tags'
                Configuration:
                  $ref: '#/components/schemas/GroupConfigurationList'
                Criticality:
                  $ref: '#/components/schemas/Criticality'
                Owner:
                  $ref: '#/components/schemas/Owner'
                DisplayName:
                  $ref: '#/components/schemas/DisplayName'
      responses:
        '200': {}
        '400':
          description: |-
            The request includes one or more parameters that violate validation rules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The caller isn't authorized to make the request. Check permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An internal error occurred while processing the request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            The request uses an HTTP method that isn't allowed for the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '429':
          description: |-
            You've exceeded throttling limits by making too many requests in a period of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /delete-group:
    post:
      operationId: DeleteGroup
      description: |-
        Deletes the specified resource group. Deleting a resource group does not delete any resources that are members of the group; it only deletes the group structure.

        **Minimum permissions**

        To run this command, you must have the following permissions:

          * `resource-groups:DeleteGroup`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                GroupName:
                  $ref: '#/components/schemas/GroupName'
                Group:
                  $ref: '#/components/schemas/GroupStringV2'
      responses:
        '200': {}
        '400':
          description: |-
            The request includes one or more parameters that violate validation rules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The caller isn't authorized to make the request. Check permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An internal error occurred while processing the request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            The request uses an HTTP method that isn't allowed for the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            One or more of the specified resources don't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            You've exceeded throttling limits by making too many requests in a period of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /get-account-settings:
    post:
      operationId: GetAccountSettings
      description: |-
        Retrieves the current status of optional features in Resource Groups.
      responses:
        '200': {}
        '400':
          description: |-
            The request includes one or more parameters that violate validation rules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The caller isn't authorized to make the request. Check permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An internal error occurred while processing the request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            The request uses an HTTP method that isn't allowed for the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '429':
          description: |-
            You've exceeded throttling limits by making too many requests in a period of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /get-group:
    post:
      operationId: GetGroup
      description: |-
        Returns information about a specified resource group.

        **Minimum permissions**

        To run this command, you must have the following permissions:

          * `resource-groups:GetGroup`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                GroupName:
                  $ref: '#/components/schemas/GroupName'
                Group:
                  $ref: '#/components/schemas/GroupStringV2'
      responses:
        '200': {}
        '400':
          description: |-
            The request includes one or more parameters that violate validation rules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The caller isn't authorized to make the request. Check permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An internal error occurred while processing the request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            The request uses an HTTP method that isn't allowed for the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            One or more of the specified resources don't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            You've exceeded throttling limits by making too many requests in a period of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /get-group-configuration:
    post:
      operationId: GetGroupConfiguration
      description: |-
        Retrieves the service configuration associated with the specified resource group. For details about the service configuration syntax, see [Service configurations for Resource Groups](https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html).

        **Minimum permissions**

        To run this command, you must have the following permissions:

          * `resource-groups:GetGroupConfiguration`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Group:
                  $ref: '#/components/schemas/GroupString'
      responses:
        '200': {}
        '400':
          description: |-
            The request includes one or more parameters that violate validation rules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The caller isn't authorized to make the request. Check permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An internal error occurred while processing the request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            The request uses an HTTP method that isn't allowed for the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            One or more of the specified resources don't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            You've exceeded throttling limits by making too many requests in a period of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /get-group-query:
    post:
      operationId: GetGroupQuery
      description: |-
        Retrieves the resource query associated with the specified resource group. For more information about resource queries, see [Create a tag-based group in Resource Groups](https://docs.aws.amazon.com/ARG/latest/userguide/gettingstarted-query.html#gettingstarted-query-cli-tag).

        **Minimum permissions**

        To run this command, you must have the following permissions:

          * `resource-groups:GetGroupQuery`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                GroupName:
                  $ref: '#/components/schemas/GroupName'
                Group:
                  $ref: '#/components/schemas/GroupString'
      responses:
        '200': {}
        '400':
          description: |-
            The request includes one or more parameters that violate validation rules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The caller isn't authorized to make the request. Check permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An internal error occurred while processing the request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            The request uses an HTTP method that isn't allowed for the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            One or more of the specified resources don't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            You've exceeded throttling limits by making too many requests in a period of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /get-tag-sync-task:
    post:
      operationId: GetTagSyncTask
      description: |-
        Returns information about a specified tag-sync task.

        **Minimum permissions**

        To run this command, you must have the following permissions:

          * `resource-groups:GetTagSyncTask` on the application group
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TaskArn:
                  $ref: '#/components/schemas/TagSyncTaskArn'
      responses:
        '200': {}
        '400':
          description: |-
            The request includes one or more parameters that violate validation rules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The caller isn't authorized to make the request. Check permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An internal error occurred while processing the request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            The request uses an HTTP method that isn't allowed for the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            One or more of the specified resources don't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            You've exceeded throttling limits by making too many requests in a period of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            The request was rejected because it doesn't have valid credentials for the target resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /resources/{Arn}/tags:
    get:
      operationId: GetTags
      description: |-
        Returns a list of tags that are associated with a resource group, specified by an Amazon resource name (ARN).

        **Minimum permissions**

        To run this command, you must have the following permissions:

          * `resource-groups:GetTags`
      parameters:
      - name: Arn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GroupArnV2'
      responses:
        '200': {}
        '400':
          description: |-
            The request includes one or more parameters that violate validation rules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The caller isn't authorized to make the request. Check permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An internal error occurred while processing the request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            The request uses an HTTP method that isn't allowed for the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            One or more of the specified resources don't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            You've exceeded throttling limits by making too many requests in a period of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: Tag
      description: |-
        Adds tags to a resource group with the specified Amazon resource name (ARN). Existing tags on a resource group are not changed if they are not specified in the request parameters.

        Do not store personally identifiable information (PII) or other confidential or sensitive information in tags. We use tags to provide you with billing and administration services. Tags are not intended to be used for private or sensitive data.

        **Minimum permissions**

        To run this command, you must have the following permissions:

          * `resource-groups:Tag`
      parameters:
      - name: Arn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GroupArnV2'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '200': {}
        '400':
          description: |-
            The request includes one or more parameters that violate validation rules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The caller isn't authorized to make the request. Check permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An internal error occurred while processing the request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            The request uses an HTTP method that isn't allowed for the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            One or more of the specified resources don't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            You've exceeded throttling limits by making too many requests in a period of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    patch:
      operationId: Untag
      description: |-
        Deletes tags from a specified resource group.

        **Minimum permissions**

        To run this command, you must have the following permissions:

          * `resource-groups:Untag`
      parameters:
      - name: Arn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GroupArnV2'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Keys:
                  $ref: '#/components/schemas/TagKeyList'
      responses:
        '200': {}
        '400':
          description: |-
            The request includes one or more parameters that violate validation rules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The caller isn't authorized to make the request. Check permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An internal error occurred while processing the request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            The request uses an HTTP method that isn't allowed for the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            One or more of the specified resources don't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            You've exceeded throttling limits by making too many requests in a period of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /group-resources:
    post:
      operationId: GroupResources
      description: |-
        Adds the specified resources to the specified group.

        You can only use this operation with the following groups:

          * `AWS::EC2::HostManagement`

          * `AWS::EC2::CapacityReservationPool`

          * `AWS::ResourceGroups::ApplicationGroup`

        Other resource group types and resource types are not currently supported by this operation.

        **Minimum permissions**

        To run this command, you must have the following permissions:

          * `resource-groups:GroupResources`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Group:
                  $ref: '#/components/schemas/GroupStringV2'
                ResourceArns:
                  $ref: '#/components/schemas/ResourceArnList'
      responses:
        '200': {}
        '400':
          description: |-
            The request includes one or more parameters that violate validation rules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The caller isn't authorized to make the request. Check permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An internal error occurred while processing the request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            The request uses an HTTP method that isn't allowed for the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            One or more of the specified resources don't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            You've exceeded throttling limits by making too many requests in a period of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /list-group-resources:
    post:
      operationId: ListGroupResources
      description: |-
        Returns a list of Amazon resource names (ARNs) of the resources that are members of a specified resource group.

        **Minimum permissions**

        To run this command, you must have the following permissions:

          * `resource-groups:ListGroupResources`

          * `cloudformation:DescribeStacks`

          * `cloudformation:ListStackResources`

          * `tag:GetResources`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                GroupName:
                  $ref: '#/components/schemas/GroupName'
                Group:
                  $ref: '#/components/schemas/GroupStringV2'
                Filters:
                  $ref: '#/components/schemas/ResourceFilterList'
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '400':
          description: |-
            The request includes one or more parameters that violate validation rules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The caller isn't authorized to make the request. Check permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An internal error occurred while processing the request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            The request uses an HTTP method that isn't allowed for the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            One or more of the specified resources don't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            You've exceeded throttling limits by making too many requests in a period of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            The request was rejected because it doesn't have valid credentials for the target resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /list-grouping-statuses:
    post:
      operationId: ListGroupingStatuses
      description: |-
        Returns the status of the last grouping or ungrouping action for each resource in the specified application group.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Group:
                  $ref: '#/components/schemas/GroupStringV2'
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
                Filters:
                  $ref: '#/components/schemas/ListGroupingStatusesFilterList'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '400':
          description: |-
            The request includes one or more parameters that violate validation rules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The caller isn't authorized to make the request. Check permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An internal error occurred while processing the request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            The request uses an HTTP method that isn't allowed for the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '429':
          description: |-
            You've exceeded throttling limits by making too many requests in a period of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /groups-list:
    post:
      operationId: ListGroups
      description: |-
        Returns a list of existing Resource Groups in your account.

        **Minimum permissions**

        To run this command, you must have the following permissions:

          * `resource-groups:ListGroups`
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Filters:
                  $ref: '#/components/schemas/GroupFilterList'
      responses:
        '200': {}
        '400':
          description: |-
            The request includes one or more parameters that violate validation rules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The caller isn't authorized to make the request. Check permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An internal error occurred while processing the request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            The request uses an HTTP method that isn't allowed for the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '429':
          description: |-
            You've exceeded throttling limits by making too many requests in a period of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /list-tag-sync-tasks:
    post:
      operationId: ListTagSyncTasks
      description: |-
        Returns a list of tag-sync tasks.

        **Minimum permissions**

        To run this command, you must have the following permissions:

          * `resource-groups:ListTagSyncTasks` with the group passed in the filters as the resource or * if using no filters
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Filters:
                  $ref: '#/components/schemas/ListTagSyncTasksFilterList'
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '400':
          description: |-
            The request includes one or more parameters that violate validation rules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The caller isn't authorized to make the request. Check permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An internal error occurred while processing the request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            The request uses an HTTP method that isn't allowed for the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '429':
          description: |-
            You've exceeded throttling limits by making too many requests in a period of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            The request was rejected because it doesn't have valid credentials for the target resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /put-group-configuration:
    post:
      operationId: PutGroupConfiguration
      description: |-
        Attaches a service configuration to the specified group. This occurs asynchronously, and can take time to complete. You can use GetGroupConfiguration to check the status of the update.

        **Minimum permissions**

        To run this command, you must have the following permissions:

          * `resource-groups:PutGroupConfiguration`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Group:
                  $ref: '#/components/schemas/GroupString'
                Configuration:
                  $ref: '#/components/schemas/GroupConfigurationList'
      responses:
        '202': {}
        '400':
          description: |-
            The request includes one or more parameters that violate validation rules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The caller isn't authorized to make the request. Check permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An internal error occurred while processing the request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            The request uses an HTTP method that isn't allowed for the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            One or more of the specified resources don't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            You've exceeded throttling limits by making too many requests in a period of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /resources/search:
    post:
      operationId: SearchResources
      description: |-
        Returns a list of Amazon Web Services resource identifiers that matches the specified query. The query uses the same format as a resource query in a CreateGroup or UpdateGroupQuery operation.

        **Minimum permissions**

        To run this command, you must have the following permissions:

          * `resource-groups:SearchResources`

          * `cloudformation:DescribeStacks`

          * `cloudformation:ListStackResources`

          * `tag:GetResources`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ResourceQuery:
                  $ref: '#/components/schemas/ResourceQuery'
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '400':
          description: |-
            The request includes one or more parameters that violate validation rules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The caller isn't authorized to make the request. Check permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An internal error occurred while processing the request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            The request uses an HTTP method that isn't allowed for the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '429':
          description: |-
            You've exceeded throttling limits by making too many requests in a period of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            The request was rejected because it doesn't have valid credentials for the target resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /start-tag-sync-task:
    post:
      operationId: StartTagSyncTask
      description: |-
        Creates a new tag-sync task to onboard and sync resources tagged with a specific tag key-value pair to an application. To start a tag-sync task, you need a [resource tagging role](https://docs.aws.amazon.com/servicecatalog/latest/arguide/app-tag-sync.html#tag-sync-role). The resource tagging role grants permissions to tag and untag applications resources and must include a trust policy that allows Resource Groups to assume the role and perform resource tagging tasks on your behalf.

        For instructions on creating a tag-sync task, see [Create a tag-sync using the Resource Groups API](https://docs.aws.amazon.com/servicecatalog/latest/arguide/app-tag-sync.html#create-tag-sync) in the _Amazon Web Services Service Catalog AppRegistry Administrator Guide_.

        **Minimum permissions**

        To run this command, you must have the following permissions:

          * `resource-groups:StartTagSyncTask` on the application group

          * `resource-groups:CreateGroup`

          * `iam:PassRole` on the role provided in the request
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Group:
                  $ref: '#/components/schemas/GroupStringV2'
                TagKey:
                  $ref: '#/components/schemas/TagKey'
                TagValue:
                  $ref: '#/components/schemas/TagValue'
                ResourceQuery:
                  $ref: '#/components/schemas/ResourceQuery'
                RoleArn:
                  $ref: '#/components/schemas/RoleArn'
      responses:
        '200': {}
        '400':
          description: |-
            The request includes one or more parameters that violate validation rules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The caller isn't authorized to make the request. Check permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An internal error occurred while processing the request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            The request uses an HTTP method that isn't allowed for the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            One or more of the specified resources don't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            You've exceeded throttling limits by making too many requests in a period of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            The request was rejected because it doesn't have valid credentials for the target resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /ungroup-resources:
    post:
      operationId: UngroupResources
      description: |-
        Removes the specified resources from the specified group. This operation works only with static groups that you populated using the GroupResources operation. It doesn't work with any resource groups that are automatically populated by tag-based or CloudFormation stack-based queries.

        **Minimum permissions**

        To run this command, you must have the following permissions:

          * `resource-groups:UngroupResources`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Group:
                  $ref: '#/components/schemas/GroupStringV2'
                ResourceArns:
                  $ref: '#/components/schemas/ResourceArnList'
      responses:
        '200': {}
        '400':
          description: |-
            The request includes one or more parameters that violate validation rules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The caller isn't authorized to make the request. Check permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An internal error occurred while processing the request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            The request uses an HTTP method that isn't allowed for the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            One or more of the specified resources don't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            You've exceeded throttling limits by making too many requests in a period of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /update-account-settings:
    post:
      operationId: UpdateAccountSettings
      description: |-
        Turns on or turns off optional features in Resource Groups.

        The preceding example shows that the request to turn on group lifecycle events is `IN_PROGRESS`. You can call the GetAccountSettings operation to check for completion by looking for `GroupLifecycleEventsStatus` to change to `ACTIVE`.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                GroupLifecycleEventsDesiredStatus:
                  $ref: '#/components/schemas/GroupLifecycleEventsDesiredStatus'
      responses:
        '200': {}
        '400':
          description: |-
            The request includes one or more parameters that violate validation rules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The caller isn't authorized to make the request. Check permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An internal error occurred while processing the request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            The request uses an HTTP method that isn't allowed for the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '429':
          description: |-
            You've exceeded throttling limits by making too many requests in a period of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /update-group:
    post:
      operationId: UpdateGroup
      description: |-
        Updates the description for an existing group. You cannot update the name of a resource group.

        **Minimum permissions**

        To run this command, you must have the following permissions:

          * `resource-groups:UpdateGroup`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                GroupName:
                  $ref: '#/components/schemas/GroupName'
                Group:
                  $ref: '#/components/schemas/GroupStringV2'
                Description:
                  $ref: '#/components/schemas/Description'
                Criticality:
                  $ref: '#/components/schemas/Criticality'
                Owner:
                  $ref: '#/components/schemas/Owner'
                DisplayName:
                  $ref: '#/components/schemas/DisplayName'
      responses:
        '200': {}
        '400':
          description: |-
            The request includes one or more parameters that violate validation rules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The caller isn't authorized to make the request. Check permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An internal error occurred while processing the request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            The request uses an HTTP method that isn't allowed for the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            One or more of the specified resources don't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            You've exceeded throttling limits by making too many requests in a period of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /update-group-query:
    post:
      operationId: UpdateGroupQuery
      description: |-
        Updates the resource query of a group. For more information about resource queries, see [Create a tag-based group in Resource Groups](https://docs.aws.amazon.com/ARG/latest/userguide/gettingstarted-query.html#gettingstarted-query-cli-tag).

        **Minimum permissions**

        To run this command, you must have the following permissions:

          * `resource-groups:UpdateGroupQuery`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                GroupName:
                  $ref: '#/components/schemas/GroupName'
                Group:
                  $ref: '#/components/schemas/GroupString'
                ResourceQuery:
                  $ref: '#/components/schemas/ResourceQuery'
      responses:
        '200': {}
        '400':
          description: |-
            The request includes one or more parameters that violate validation rules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The caller isn't authorized to make the request. Check permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An internal error occurred while processing the request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            The request uses an HTTP method that isn't allowed for the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            One or more of the specified resources don't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            You've exceeded throttling limits by making too many requests in a period of time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
components:
  schemas:
    AccountSettings:
      type: object
      properties:
        GroupLifecycleEventsDesiredStatus:
          allOf:
          - $ref: '#/components/schemas/GroupLifecycleEventsDesiredStatus'
          description: The desired target status of the group lifecycle events feature.
            If
        GroupLifecycleEventsStatus:
          allOf:
          - $ref: '#/components/schemas/GroupLifecycleEventsStatus'
          description: The current status of the group lifecycle events feature.
        GroupLifecycleEventsStatusMessage:
          allOf:
          - $ref: '#/components/schemas/GroupLifecycleEventsStatusMessage'
          description: The text of any error message occurs during an attempt to turn
            group lifecycle events on or off.
      description: The Resource Groups settings for this Amazon Web Services account.
    ApplicationArn:
      type: string
      pattern: ^arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}(-[a-z]+)+-\d{1}:[0-9]{12}:group/[a-zA-Z0-9_\.-]{1,150}/[a-zA-Z0-9]{22,26}$
      minLength: 12
      maxLength: 1600
    ApplicationTag:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ApplicationArn'
    ApplicationTagKey:
      type: string
      pattern: ^awsApplication$
    BadRequestException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The request includes one or more parameters that violate validation
        rules.
    CancelTagSyncTaskInput:
      type: object
      properties:
        TaskArn:
          allOf:
          - $ref: '#/components/schemas/TagSyncTaskArn'
          description: The Amazon resource name (ARN) of the tag-sync task.
      required:
      - TaskArn
    CreateGroupInput:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/CreateGroupName'
          description: The name of the group, which is the identifier of the group
            in other operations. You can't change the name of a resource group after
            you create it. A resource group name can consist of letters, numbers,
            hyphens, periods, and underscores. The name cannot start with `AWS`, `aws`,
            or any other possible capitalization; these are reserved. A resource group
            name must be unique within each Amazon Web Services Region in your Amazon
            Web Services account.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the resource group. Descriptions can consist
            of letters, numbers, hyphens, underscores, periods, and spaces.
        ResourceQuery:
          allOf:
          - $ref: '#/components/schemas/ResourceQuery'
          description: 'The resource query that determines which Amazon Web Services
            resources are members of this group. For more information about resource
            queries, see [Create a tag-based group in Resource Groups](https://docs.aws.amazon.com/ARG/latest/userguide/gettingstarted-query.html#gettingstarted-query-cli-tag).


            A resource group can contain either a `ResourceQuery` or a `Configuration`,
            but not both.'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags to add to the group. A tag is key-value pair string.
        Configuration:
          allOf:
          - $ref: '#/components/schemas/GroupConfigurationList'
          description: 'A configuration associates the resource group with an Amazon
            Web Services service and specifies how the service can interact with the
            resources in the group. A configuration is an array of GroupConfigurationItem
            elements. For details about the syntax of service configurations, see
            [Service configurations for Resource Groups](https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html).


            A resource group can contain either a `Configuration` or a `ResourceQuery`,
            but not both.'
        Criticality:
          allOf:
          - $ref: '#/components/schemas/Criticality'
          description: The critical rank of the application group on a scale of 1
            to 10, with a rank of 1 being the most critical, and a rank of 10 being
            least critical.
        Owner:
          allOf:
          - $ref: '#/components/schemas/Owner'
          description: A name, email address or other identifier for the person or
            group who is considered as the owner of this application group within
            your organization.
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: The name of the application group, which you can change at
            any time.
      required:
      - Name
    CreateGroupName:
      type: string
      pattern: ^[a-zA-Z0-9_\.-]+$
      minLength: 1
      maxLength: 300
    CreateGroupOutput:
      type: object
      properties:
        Group:
          allOf:
          - $ref: '#/components/schemas/Group'
          description: The description of the resource group.
        ResourceQuery:
          allOf:
          - $ref: '#/components/schemas/ResourceQuery'
          description: The resource query associated with the group. For more information
            about resource queries, see [Create a tag-based group in Resource Groups](https://docs.aws.amazon.com/ARG/latest/userguide/gettingstarted-query.html#gettingstarted-query-cli-tag).
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags associated with the group.
        GroupConfiguration:
          allOf:
          - $ref: '#/components/schemas/GroupConfiguration'
          description: The service configuration associated with the resource group.
            For details about the syntax of a service configuration, see [Service
            configurations for Resource Groups](https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html).
    Criticality:
      type: integer
      minimum: 1
      maximum: 10
    DeleteGroupInput:
      type: object
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/GroupName'
          description: Deprecated - don't use this parameter. Use `Group` instead.
        Group:
          allOf:
          - $ref: '#/components/schemas/GroupStringV2'
          description: The name or the Amazon resource name (ARN) of the resource
            group to delete.
    DeleteGroupOutput:
      type: object
      properties:
        Group:
          allOf:
          - $ref: '#/components/schemas/Group'
          description: A full description of the deleted resource group.
    Description:
      type: string
      pattern: ^[\sa-zA-Z0-9_\.-]*$
      minLength: 0
      maxLength: 1024
    DisplayName:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 0
      maxLength: 300
    ErrorCode:
      type: string
      minLength: 1
      maxLength: 128
    ErrorMessage:
      type: string
      minLength: 1
      maxLength: 1024
    FailedResource:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The Amazon resource name (ARN) of the resource that failed
            to be added or removed.
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: The error message text associated with the failure.
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/ErrorCode'
          description: The error code associated with the failure.
      description: A resource that failed to be added to or removed from a group.
    FailedResourceList:
      type: array
      items:
        $ref: '#/components/schemas/FailedResource'
    ForbiddenException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The caller isn't authorized to make the request. Check permissions.
    GetAccountSettingsOutput:
      type: object
      properties:
        AccountSettings:
          allOf:
          - $ref: '#/components/schemas/AccountSettings'
          description: The current settings for the optional features in Resource
            Groups.
    GetGroupConfigurationInput:
      type: object
      properties:
        Group:
          allOf:
          - $ref: '#/components/schemas/GroupString'
          description: The name or the Amazon resource name (ARN) of the resource
            group for which you want to retrive the service configuration.
    GetGroupConfigurationOutput:
      type: object
      properties:
        GroupConfiguration:
          allOf:
          - $ref: '#/components/schemas/GroupConfiguration'
          description: A structure that describes the service configuration attached
            with the specified group. For details about the service configuration
            syntax, see [Service configurations for Resource Groups](https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html).
    GetGroupInput:
      type: object
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/GroupName'
          description: Deprecated - don't use this parameter. Use `Group` instead.
        Group:
          allOf:
          - $ref: '#/components/schemas/GroupStringV2'
          description: The name or the Amazon resource name (ARN) of the resource
            group to retrieve.
    GetGroupOutput:
      type: object
      properties:
        Group:
          allOf:
          - $ref: '#/components/schemas/Group'
          description: A structure that contains the metadata details for the specified
            resource group. Use GetGroupQuery and GetGroupConfiguration to get those
            additional details of the resource group.
    GetGroupQueryInput:
      type: object
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/GroupName'
          description: Don't use this parameter. Use `Group` instead.
        Group:
          allOf:
          - $ref: '#/components/schemas/GroupString'
          description: The name or the Amazon resource name (ARN) of the resource
            group to query.
    GetGroupQueryOutput:
      type: object
      properties:
        GroupQuery:
          allOf:
          - $ref: '#/components/schemas/GroupQuery'
          description: The resource query associated with the specified group. For
            more information about resource queries, see [Create a tag-based group
            in Resource Groups](https://docs.aws.amazon.com/ARG/latest/userguide/gettingstarted-query.html#gettingstarted-query-cli-tag).
    GetTagSyncTaskInput:
      type: object
      properties:
        TaskArn:
          allOf:
          - $ref: '#/components/schemas/TagSyncTaskArn'
          description: The Amazon resource name (ARN) of the tag-sync task.
      required:
      - TaskArn
    GetTagSyncTaskOutput:
      type: object
      properties:
        GroupArn:
          allOf:
          - $ref: '#/components/schemas/GroupArnV2'
          description: The Amazon resource name (ARN) of the application group.
        GroupName:
          allOf:
          - $ref: '#/components/schemas/GroupName'
          description: The name of the application group.
        TaskArn:
          allOf:
          - $ref: '#/components/schemas/TagSyncTaskArn'
          description: The Amazon resource name (ARN) of the tag-sync task.
        TagKey:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          description: The tag key.
        TagValue:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          description: The tag value.
        ResourceQuery:
          $ref: '#/components/schemas/ResourceQuery'
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: 'The Amazon resource name (ARN) of the role assumed by Resource
            Groups to tag and untag resources on your behalf.


            For more information about this role, review [Tag-sync required permissions](https://docs.aws.amazon.com/servicecatalog/latest/arguide/app-tag-sync.html#tag-sync-role).'
        Status:
          allOf:
          - $ref: '#/components/schemas/TagSyncTaskStatus'
          description: "The status of the tag-sync task.\n\nValid values include:\n\
            \n  * `ACTIVE` \\- The tag-sync task is actively managing resources in\
            \ the application by adding or removing the `awsApplication` tag from\
            \ resources when they are tagged or untagged with the specified tag key-value\
            \ pair. \n\n  * `ERROR` \\- The tag-sync task is not actively managing\
            \ resources in the application. Review the `ErrorMessage` for more information\
            \ about resolving the error."
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: The specific error message in cases where the tag-sync task
            status is `ERROR`.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The timestamp of when the tag-sync task was created.
    GetTagsInput:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/GroupArnV2'
          description: The Amazon resource name (ARN) of the resource group whose
            tags you want to retrieve.
      required:
      - Arn
    GetTagsOutput:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/GroupArnV2'
          description: TheAmazon resource name (ARN) of the tagged resource group.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags associated with the specified resource group.
    Group:
      type: object
      properties:
        GroupArn:
          allOf:
          - $ref: '#/components/schemas/GroupArnV2'
          description: The Amazon resource name (ARN) of the resource group.
        Name:
          allOf:
          - $ref: '#/components/schemas/GroupName'
          description: The name of the resource group.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the resource group.
        Criticality:
          allOf:
          - $ref: '#/components/schemas/Criticality'
          description: The critical rank of the application group on a scale of 1
            to 10, with a rank of 1 being the most critical, and a rank of 10 being
            least critical.
        Owner:
          allOf:
          - $ref: '#/components/schemas/Owner'
          description: A name, email address or other identifier for the person or
            group who is considered as the owner of this application group within
            your organization.
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: The name of the application group, which you can change at
            any time.
        ApplicationTag:
          allOf:
          - $ref: '#/components/schemas/ApplicationTag'
          description: A tag that defines the application group membership. This tag
            is only supported for application groups.
      required:
      - GroupArn
      - Name
      description: "A resource group that contains Amazon Web Services resources.\
        \ You can assign resources to the group by associating either of the following\
        \ elements with the group:\n\n  * ResourceQuery \\- Use a resource query to\
        \ specify a set of tag keys and values. All resources in the same Amazon Web\
        \ Services Region and Amazon Web Services account that have those keys with\
        \ the same values are included in the group. You can add a resource query\
        \ when you create the group, or later by using the PutGroupConfiguration operation.\n\
        \n  * GroupConfiguration \\- Use a service configuration to associate the\
        \ group with an Amazon Web Services service. The configuration specifies which\
        \ resource types can be included in the group."
    GroupArn:
      type: string
      pattern: ^arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}(-[a-z]+)+-\d{1}:[0-9]{12}:group/([a-zA-Z0-9_\.-]{1,300}|[a-zA-Z0-9_\.-]{1,150}/[a-z0-9]{26})$
      minLength: 12
      maxLength: 1600
    GroupArnV2:
      type: string
      pattern: ^arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}(-[a-z]+)+-\d{1}:[0-9]{12}:group/([a-zA-Z0-9_\.-]{1,300}|[a-zA-Z0-9_\.-]{1,150}/[a-z0-9]{26})$
      minLength: 12
      maxLength: 1600
    GroupConfiguration:
      type: object
      properties:
        Configuration:
          allOf:
          - $ref: '#/components/schemas/GroupConfigurationList'
          description: The configuration currently associated with the group and in
            effect.
        ProposedConfiguration:
          allOf:
          - $ref: '#/components/schemas/GroupConfigurationList'
          description: If present, the new configuration that is in the process of
            being applied to the group.
        Status:
          allOf:
          - $ref: '#/components/schemas/GroupConfigurationStatus'
          description: The current status of an attempt to update the group configuration.
        FailureReason:
          allOf:
          - $ref: '#/components/schemas/GroupConfigurationFailureReason'
          description: If present, the reason why a request to update the group configuration
            failed.
      description: A service configuration associated with a resource group. The configuration
        options are determined by the Amazon Web Services service that defines the
        `Type`, and specifies which resources can be included in the group. You can
        add a service configuration when you create the group by using CreateGroup,
        or later by using the PutGroupConfiguration operation. For details about group
        service configuration syntax, see [Service configurations for resource groups](https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html).
    GroupConfigurationFailureReason:
      type: string
    GroupConfigurationItem:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/GroupConfigurationType'
          description: Specifies the type of group configuration item. Each item must
            have a unique value for `type`. For the list of types that you can specify
            for a configuration item, see [Supported resource types and parameters](https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html#about-slg-types).
        Parameters:
          allOf:
          - $ref: '#/components/schemas/GroupParameterList'
          description: A collection of parameters for this group configuration item.
            For the list of parameters that you can use with each configuration item
            type, see [Supported resource types and parameters](https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html#about-slg-types).
      required:
      - Type
      description: An item in a group configuration. A group service configuration
        can have one or more items. For details about group service configuration
        syntax, see [Service configurations for resource groups](https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html).
    GroupConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/GroupConfigurationItem'
    GroupConfigurationParameter:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/GroupConfigurationParameterName'
          description: The name of the group configuration parameter. For the list
            of parameters that you can use with each configuration item type, see
            [Supported resource types and parameters](https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html#about-slg-types).
        Values:
          allOf:
          - $ref: '#/components/schemas/GroupConfigurationParameterValueList'
          description: The value or values to be used for the specified parameter.
            For the list of values you can use with each parameter, see [Supported
            resource types and parameters](https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html#about-slg-types).
      required:
      - Name
      description: A parameter for a group configuration item. For details about group
        service configuration syntax, see [Service configurations for resource groups](https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html).
    GroupConfigurationParameterName:
      type: string
      pattern: ^[a-z-]+$
      minLength: 1
      maxLength: 80
    GroupConfigurationParameterValue:
      type: string
      pattern: ^[a-zA-Z0-9:\/\._-]+$
      minLength: 1
      maxLength: 256
    GroupConfigurationParameterValueList:
      type: array
      items:
        $ref: '#/components/schemas/GroupConfigurationParameterValue'
    GroupConfigurationStatus:
      type: string
      enum:
      - UPDATING
      - UPDATE_COMPLETE
      - UPDATE_FAILED
    GroupConfigurationType:
      type: string
      pattern: ^AWS::[a-zA-Z0-9]+::[a-zA-Z0-9]+$
      minLength: 0
      maxLength: 40
    GroupFilter:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/GroupFilterName'
          description: The name of the filter. Filter names are case-sensitive.
        Values:
          allOf:
          - $ref: '#/components/schemas/GroupFilterValues'
          description: One or more filter values. Allowed filter values vary by group
            filter name, and are case-sensitive.
      required:
      - Name
      - Values
      description: A filter collection that you can use to restrict the results from
        a `List` operation to only those you want to include.
    GroupFilterList:
      type: array
      items:
        $ref: '#/components/schemas/GroupFilter'
    GroupFilterName:
      type: string
      enum:
      - resource-type
      - configuration-type
      - owner
      - display-name
      - criticality
    GroupFilterValue:
      type: string
      pattern: ^AWS::(AllSupported|[a-zA-Z0-9]+::[a-zA-Z0-9]+)|[\s\p{L}0-9_\.-]*$
      minLength: 1
      maxLength: 300
    GroupFilterValues:
      type: array
      items:
        $ref: '#/components/schemas/GroupFilterValue'
    GroupIdentifier:
      type: object
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/GroupName'
          description: The name of the resource group.
        GroupArn:
          allOf:
          - $ref: '#/components/schemas/GroupArn'
          description: The Amazon resource name (ARN) of the resource group.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the application group.
        Criticality:
          allOf:
          - $ref: '#/components/schemas/Criticality'
          description: The critical rank of the application group on a scale of 1
            to 10, with a rank of 1 being the most critical, and a rank of 10 being
            least critical.
        Owner:
          allOf:
          - $ref: '#/components/schemas/Owner'
          description: A name, email address or other identifier for the person or
            group who is considered as the owner of this group within your organization.
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: The name of the application group, which you can change at
            any time.
      description: The unique identifiers for a resource group.
    GroupIdentifierList:
      type: array
      items:
        $ref: '#/components/schemas/GroupIdentifier'
    GroupLifecycleEventsDesiredStatus:
      type: string
      enum:
      - ACTIVE
      - INACTIVE
    GroupLifecycleEventsStatus:
      type: string
      enum:
      - ACTIVE
      - INACTIVE
      - IN_PROGRESS
      - ERROR
    GroupLifecycleEventsStatusMessage:
      type: string
      minLength: 1
      maxLength: 1024
    GroupList:
      type: array
      items:
        $ref: '#/components/schemas/Group'
    GroupName:
      type: string
      pattern: ^[a-zA-Z0-9_\.-]{1,300}|[a-zA-Z0-9_\.-]{1,150}/[a-z0-9]{26}$
      minLength: 1
      maxLength: 300
    GroupParameterList:
      type: array
      items:
        $ref: '#/components/schemas/GroupConfigurationParameter'
    GroupQuery:
      type: object
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/GroupName'
          description: The name of the resource group that is associated with the
            specified resource query.
        ResourceQuery:
          allOf:
          - $ref: '#/components/schemas/ResourceQuery'
          description: The resource query that determines which Amazon Web Services
            resources are members of the associated resource group.
      required:
      - GroupName
      - ResourceQuery
      description: A mapping of a query attached to a resource group that determines
        the Amazon Web Services resources that are members of the group.
    GroupResourcesInput:
      type: object
      properties:
        Group:
          allOf:
          - $ref: '#/components/schemas/GroupStringV2'
          description: The name or the Amazon resource name (ARN) of the resource
            group to add resources to.
        ResourceArns:
          allOf:
          - $ref: '#/components/schemas/ResourceArnList'
          description: The list of Amazon resource names (ARNs) of the resources to
            be added to the group.
      required:
      - Group
      - ResourceArns
    GroupResourcesOutput:
      type: object
      properties:
        Succeeded:
          allOf:
          - $ref: '#/components/schemas/ResourceArnList'
          description: A list of Amazon resource names (ARNs) of the resources that
            this operation successfully added to the group.
        Failed:
          allOf:
          - $ref: '#/components/schemas/FailedResourceList'
          description: A list of Amazon resource names (ARNs) of any resources that
            this operation failed to add to the group.
        Pending:
          allOf:
          - $ref: '#/components/schemas/PendingResourceList'
          description: A list of Amazon resource names (ARNs) of any resources that
            this operation is still in the process adding to the group. These pending
            additions continue asynchronously. You can check the status of pending
            additions by using the ` ListGroupResources ` operation, and checking
            the `Resources` array in the response and the `Status` field of each object
            in that array.
    GroupString:
      type: string
      pattern: ^[a-zA-Z0-9_\.-]{1,300}|[a-zA-Z0-9_\.-]{1,150}/[a-z0-9]{26}|arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}(-[a-z]+)+-\d{1}:[0-9]{12}:group/([a-zA-Z0-9_\.-]{1,300}|[a-zA-Z0-9_\.-]{1,150}/[a-z0-9]{26})$
      minLength: 1
      maxLength: 1600
    GroupStringV2:
      type: string
      pattern: ^[a-zA-Z0-9_\.-]{1,300}|[a-zA-Z0-9_\.-]{1,150}/[a-z0-9]{26}|arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}(-[a-z]+)+-\d{1}:[0-9]{12}:group/([a-zA-Z0-9_\.-]{1,300}|[a-zA-Z0-9_\.-]{1,150}/[a-z0-9]{26})$
      minLength: 1
      maxLength: 1600
    GroupingStatus:
      type: string
      enum:
      - SUCCESS
      - FAILED
      - IN_PROGRESS
      - SKIPPED
    GroupingStatusesItem:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The Amazon resource name (ARN) of a resource.
        Action:
          allOf:
          - $ref: '#/components/schemas/GroupingType'
          description: Describes the resource grouping action with values of `GROUP`
            or `UNGROUP`.
        Status:
          allOf:
          - $ref: '#/components/schemas/GroupingStatus'
          description: Describes the resource grouping status with values of `SUCCESS`,
            `FAILED`, `IN_PROGRESS`, or `SKIPPED`.
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: A message that explains the `ErrorCode`.
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/ErrorCode'
          description: Specifies the error code that was raised.
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: A timestamp of when the status was last updated.
      description: The information about a grouping or ungrouping resource action.
    GroupingStatusesList:
      type: array
      items:
        $ref: '#/components/schemas/GroupingStatusesItem'
    GroupingType:
      type: string
      enum:
      - GROUP
      - UNGROUP
    InternalServerErrorException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: An internal error occurred while processing the request. Try again
        later.
    ListGroupResourcesInput:
      type: object
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/GroupName'
          description: _**Deprecated - don't use this parameter. Use the`Group` request
            field instead.** _
        Group:
          allOf:
          - $ref: '#/components/schemas/GroupStringV2'
          description: The name or the Amazon resource name (ARN) of the resource
            group.
        Filters:
          allOf:
          - $ref: '#/components/schemas/ResourceFilterList'
          description: "Filters, formatted as ResourceFilter objects, that you want\
            \ to apply to a `ListGroupResources` operation. Filters the results to\
            \ include only those of the specified resource types.\n\n  * `resource-type`\
            \ \\- Filter resources by their type. Specify up to five resource types\
            \ in the format `AWS::ServiceCode::ResourceType`. For example, `AWS::EC2::Instance`,\
            \ or `AWS::S3::Bucket`. \n\nWhen you specify a `resource-type` filter\
            \ for `ListGroupResources`, Resource Groups validates your filter resource\
            \ types against the types that are defined in the query associated with\
            \ the group. For example, if a group contains only S3 buckets because\
            \ its query specifies only that resource type, but your `resource-type`\
            \ filter includes EC2 instances, AWS Resource Groups does not filter for\
            \ EC2 instances. In this case, a `ListGroupResources` request returns\
            \ a `BadRequestException` error with a message similar to the following:\n\
            \n`The resource types specified as filters in the request are not valid.`\n\
            \nThe error includes a list of resource types that failed the validation\
            \ because they are not part of the query associated with the group. This\
            \ validation doesn't occur when the group query specifies `AWS::AllSupported`,\
            \ because a group based on such a query can contain any of the allowed\
            \ resource types for the query type (tag-based or Amazon CloudFront stack-based\
            \ queries)."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The total number of results that you want included on each
            page of the response. If you do not include this parameter, it defaults
            to a value that is specific to the operation. If additional items exist
            beyond the maximum you specify, the `NextToken` response element is present
            and has a value (is not null). Include that value as the `NextToken` request
            parameter in the next call to the operation to get the next part of the
            results. Note that the service might return fewer results than the maximum
            even when there are more results available. You should check `NextToken`
            after every operation to ensure that you receive all of the results.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The parameter for receiving additional results if you receive
            a `NextToken` response in a previous request. A `NextToken` response indicates
            that more output is available. Set this parameter to the value provided
            by a previous call's `NextToken` response to indicate where the output
            should continue from.
    ListGroupResourcesItem:
      type: object
      properties:
        Identifier:
          $ref: '#/components/schemas/ResourceIdentifier'
        Status:
          allOf:
          - $ref: '#/components/schemas/ResourceStatus'
          description: 'A structure that contains the status of this resource''s membership
            in the group.


            This field is present in the response only if the group is of type `AWS::EC2::HostManagement`.'
      description: A structure returned by the ListGroupResources operation that contains
        identity and group membership status information for one of the resources
        in the group.
    ListGroupResourcesItemList:
      type: array
      items:
        $ref: '#/components/schemas/ListGroupResourcesItem'
    ListGroupResourcesOutput:
      type: object
      properties:
        Resources:
          allOf:
          - $ref: '#/components/schemas/ListGroupResourcesItemList'
          description: An array of resources from which you can determine each resource's
            identity, type, and group membership status.
        ResourceIdentifiers:
          allOf:
          - $ref: '#/components/schemas/ResourceIdentifierList'
          description: '**_Deprecated - don''t use this parameter. Use the`Resources`
            response field instead._ **'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If present, indicates that more output is available than is
            included in the current response. Use this value in the `NextToken` request
            parameter in a subsequent call to the operation to get the next part of
            the output. You should repeat this until the `NextToken` response element
            comes back as `null`.
        QueryErrors:
          allOf:
          - $ref: '#/components/schemas/QueryErrorList'
          description: A list of `QueryError` objects. Each error contains an `ErrorCode`
            and `Message`. Possible values for ErrorCode are `CLOUDFORMATION_STACK_INACTIVE`,
            `CLOUDFORMATION_STACK_NOT_EXISTING`, `CLOUDFORMATION_STACK_UNASSUMABLE_ROLE`
            and `RESOURCE_TYPE_NOT_SUPPORTED`.
    ListGroupingStatusesFilter:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ListGroupingStatusesFilterName'
          description: The name of the filter. Filter names are case-sensitive.
        Values:
          allOf:
          - $ref: '#/components/schemas/ListGroupingStatusesFilterValues'
          description: One or more filter values. Allowed filter values vary by resource
            filter name, and are case-sensitive.
      required:
      - Name
      - Values
      description: A filter name and value pair that is used to obtain more specific
        results from the list of grouping statuses.
    ListGroupingStatusesFilterList:
      type: array
      items:
        $ref: '#/components/schemas/ListGroupingStatusesFilter'
    ListGroupingStatusesFilterName:
      type: string
      enum:
      - status
      - resource-arn
    ListGroupingStatusesFilterValue:
      type: string
      pattern: ^SUCCESS|FAILED|IN_PROGRESS|SKIPPED|arn:aws(-[a-z]+)*:[a-z0-9\-]*:([a-z]{2}(-[a-z]+)+-\d{1})?:([0-9]{12})?:.+$
    ListGroupingStatusesFilterValues:
      type: array
      items:
        $ref: '#/components/schemas/ListGroupingStatusesFilterValue'
    ListGroupingStatusesInput:
      type: object
      properties:
        Group:
          allOf:
          - $ref: '#/components/schemas/GroupStringV2'
          description: The application group identifier, expressed as an Amazon resource
            name (ARN) or the application group name.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of resources and their statuses returned
            in the response.
        Filters:
          allOf:
          - $ref: '#/components/schemas/ListGroupingStatusesFilterList'
          description: The filter name and value pair that is used to return more
            specific results from a list of resources.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The parameter for receiving additional results if you receive
            a `NextToken` response in a previous request. A `NextToken` response indicates
            that more output is available. Set this parameter to the value provided
            by a previous call's `NextToken` response to indicate where the output
            should continue from.
      required:
      - Group
    ListGroupingStatusesOutput:
      type: object
      properties:
        Group:
          allOf:
          - $ref: '#/components/schemas/GroupStringV2'
          description: The application group identifier, expressed as an Amazon resource
            name (ARN) or the application group name.
        GroupingStatuses:
          allOf:
          - $ref: '#/components/schemas/GroupingStatusesList'
          description: Returns details about the grouping or ungrouping status of
            the resources in the specified application group.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If present, indicates that more output is available than is
            included in the current response. Use this value in the `NextToken` request
            parameter in a subsequent call to the operation to get the next part of
            the output. You should repeat this until the `NextToken` response element
            comes back as `null`.
    ListGroupsInput:
      type: object
      properties:
        Filters:
          allOf:
          - $ref: '#/components/schemas/GroupFilterList'
          description: "Filters, formatted as GroupFilter objects, that you want to\
            \ apply to a `ListGroups` operation.\n\n  * `resource-type` \\- Filter\
            \ the results to include only those resource groups that have the specified\
            \ resource type in their `ResourceTypeFilter`. For example, `AWS::EC2::Instance`\
            \ would return any resource group with a `ResourceTypeFilter` that includes\
            \ `AWS::EC2::Instance`.\n\n  * `configuration-type` \\- Filter the results\
            \ to include only those groups that have the specified configuration types\
            \ attached. The current supported values are:\n\n    * `AWS::ResourceGroups::ApplicationGroup`\n\
            \n    * `AWS::AppRegistry::Application`\n\n    * `AWS::AppRegistry::ApplicationResourceGroup`\n\
            \n    * `AWS::CloudFormation::Stack`\n\n    * `AWS::EC2::CapacityReservationPool`\n\
            \n    * `AWS::EC2::HostManagement`\n\n    * `AWS::NetworkFirewall::RuleGroup`"
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The total number of results that you want included on each
            page of the response. If you do not include this parameter, it defaults
            to a value that is specific to the operation. If additional items exist
            beyond the maximum you specify, the `NextToken` response element is present
            and has a value (is not null). Include that value as the `NextToken` request
            parameter in the next call to the operation to get the next part of the
            results. Note that the service might return fewer results than the maximum
            even when there are more results available. You should check `NextToken`
            after every operation to ensure that you receive all of the results.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The parameter for receiving additional results if you receive
            a `NextToken` response in a previous request. A `NextToken` response indicates
            that more output is available. Set this parameter to the value provided
            by a previous call's `NextToken` response to indicate where the output
            should continue from.
    ListGroupsOutput:
      type: object
      properties:
        GroupIdentifiers:
          allOf:
          - $ref: '#/components/schemas/GroupIdentifierList'
          description: A list of GroupIdentifier objects. Each identifier is an object
            that contains both the `Name` and the `GroupArn`.
        Groups:
          allOf:
          - $ref: '#/components/schemas/GroupList'
          description: _**Deprecated - don't use this field. Use the`GroupIdentifiers`
            response field instead.** _
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If present, indicates that more output is available than is
            included in the current response. Use this value in the `NextToken` request
            parameter in a subsequent call to the operation to get the next part of
            the output. You should repeat this until the `NextToken` response element
            comes back as `null`.
    ListTagSyncTasksFilter:
      type: object
      properties:
        GroupArn:
          allOf:
          - $ref: '#/components/schemas/GroupArnV2'
          description: The Amazon resource name (ARN) of the application group.
        GroupName:
          allOf:
          - $ref: '#/components/schemas/GroupName'
          description: The name of the application group.
      description: Returns tag-sync tasks filtered by the Amazon resource name (ARN)
        or name of a specified application group.
    ListTagSyncTasksFilterList:
      type: array
      items:
        $ref: '#/components/schemas/ListTagSyncTasksFilter'
    ListTagSyncTasksInput:
      type: object
      properties:
        Filters:
          allOf:
          - $ref: '#/components/schemas/ListTagSyncTasksFilterList'
          description: The Amazon resource name (ARN) or name of the application group
            for which you want to return a list of tag-sync tasks.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to be included in the response.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The parameter for receiving additional results if you receive
            a `NextToken` response in a previous request. A `NextToken` response indicates
            that more output is available. Set this parameter to the value provided
            by a previous call's `NextToken` response to indicate where the output
            should continue from.
    ListTagSyncTasksOutput:
      type: object
      properties:
        TagSyncTasks:
          allOf:
          - $ref: '#/components/schemas/TagSyncTaskList'
          description: A list of tag-sync tasks and information about each task.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If present, indicates that more output is available than is
            included in the current response. Use this value in the `NextToken` request
            parameter in a subsequent call to the operation to get the next part of
            the output. You should repeat this until the `NextToken` response element
            comes back as `null`.
    MaxResults:
      type: integer
      minimum: 1
      maximum: 50
    MethodNotAllowedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The request uses an HTTP method that isn't allowed for the specified
        resource.
    NextToken:
      type: string
      pattern: ^[a-zA-Z0-9+/]*={0,2}$
      minLength: 0
      maxLength: 8192
    NotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: One or more of the specified resources don't exist.
    Owner:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 0
      maxLength: 300
    PendingResource:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The Amazon resource name (ARN) of the resource that's in a
            pending state.
      description: A structure that identifies a resource that is currently pending
        addition to the group as a member. Adding a resource to a resource group happens
        asynchronously as a background task and this one isn't completed yet.
    PendingResourceList:
      type: array
      items:
        $ref: '#/components/schemas/PendingResource'
    PutGroupConfigurationInput:
      type: object
      properties:
        Group:
          allOf:
          - $ref: '#/components/schemas/GroupString'
          description: The name or Amazon resource name (ARN) of the resource group
            with the configuration that you want to update.
        Configuration:
          allOf:
          - $ref: '#/components/schemas/GroupConfigurationList'
          description: 'The new configuration to associate with the specified group.
            A configuration associates the resource group with an Amazon Web Services
            service and specifies how the service can interact with the resources
            in the group. A configuration is an array of GroupConfigurationItem elements.


            For information about the syntax of a service configuration, see [Service
            configurations for Resource Groups](https://docs.aws.amazon.com/ARG/latest/APIReference/about-slg.html).


            A resource group can contain either a `Configuration` or a `ResourceQuery`,
            but not both.'
    PutGroupConfigurationOutput:
      type: object
      properties: {}
    Query:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 4096
    QueryError:
      type: object
      properties:
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/QueryErrorCode'
          description: Specifies the error code that was raised.
        Message:
          allOf:
          - $ref: '#/components/schemas/QueryErrorMessage'
          description: A message that explains the `ErrorCode`.
      description: A two-part error structure that can occur in `ListGroupResources`
        or `SearchResources`.
    QueryErrorCode:
      type: string
      enum:
      - CLOUDFORMATION_STACK_INACTIVE
      - CLOUDFORMATION_STACK_NOT_EXISTING
      - CLOUDFORMATION_STACK_UNASSUMABLE_ROLE
      - RESOURCE_TYPE_NOT_SUPPORTED
    QueryErrorList:
      type: array
      items:
        $ref: '#/components/schemas/QueryError'
    QueryErrorMessage:
      type: string
    QueryType:
      type: string
      enum:
      - TAG_FILTERS_1_0
      - CLOUDFORMATION_STACK_1_0
    ResourceArn:
      type: string
      pattern: ^arn:aws(-[a-z]+)*:[a-z0-9\-]*:([a-z]{2}(-[a-z]+)+-\d{1})?:([0-9]{12})?:.+$
    ResourceArnList:
      type: array
      items:
        $ref: '#/components/schemas/ResourceArn'
    ResourceFilter:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceFilterName'
          description: The name of the filter. Filter names are case-sensitive.
        Values:
          allOf:
          - $ref: '#/components/schemas/ResourceFilterValues'
          description: One or more filter values. Allowed filter values vary by resource
            filter name, and are case-sensitive.
      required:
      - Name
      - Values
      description: A filter name and value pair that is used to obtain more specific
        results from a list of resources.
    ResourceFilterList:
      type: array
      items:
        $ref: '#/components/schemas/ResourceFilter'
    ResourceFilterName:
      type: string
      enum:
      - resource-type
    ResourceFilterValue:
      type: string
      pattern: ^AWS::[a-zA-Z0-9]+::[a-zA-Z0-9]+$
      minLength: 1
      maxLength: 128
    ResourceFilterValues:
      type: array
      items:
        $ref: '#/components/schemas/ResourceFilterValue'
    ResourceIdentifier:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The Amazon resource name (ARN) of a resource.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The resource type of a resource, such as `AWS::EC2::Instance`.
      description: A structure that contains the ARN of a resource and its resource
        type.
    ResourceIdentifierList:
      type: array
      items:
        $ref: '#/components/schemas/ResourceIdentifier'
    ResourceQuery:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/QueryType'
          description: "The type of the query to perform. This can have one of two\
            \ values:\n\n  * _`CLOUDFORMATION_STACK_1_0:` _ Specifies that you want\
            \ the group to contain the members of an CloudFormation stack. The `Query`\
            \ contains a `StackIdentifier` element with an Amazon resource name (ARN)\
            \ for a CloudFormation stack.\n\n  * _`TAG_FILTERS_1_0:` _ Specifies that\
            \ you want the group to include resource that have tags that match the\
            \ query."
        Query:
          allOf:
          - $ref: '#/components/schemas/Query'
          description: "The query that defines a group or a search. The contents depends\
            \ on the value of the `Type` element.\n\n  * `ResourceTypeFilters` – Applies\
            \ to all `ResourceQuery` objects of either `Type`. This element contains\
            \ one of the following two items:\n\n    * The value `AWS::AllSupported`.\
            \ This causes the ResourceQuery to match resources of any resource type\
            \ that also match the query.\n\n    * A list (a JSON array) of resource\
            \ type identifiers that limit the query to only resources of the specified\
            \ types. For the complete list of resource types that you can use in the\
            \ array value for `ResourceTypeFilters`, see [Resources you can use with\
            \ Resource Groups and Tag Editor](https://docs.aws.amazon.com/ARG/latest/userguide/supported-resources.html)\
            \ in the _Resource Groups User Guide_.\n\nExample: `\"ResourceTypeFilters\"\
            : [\"AWS::AllSupported\"]` or `\"ResourceTypeFilters\": [\"AWS::EC2::Instance\"\
            , \"AWS::S3::Bucket\"]`\n\n  * `TagFilters` – applicable only if `Type`\
            \ = `TAG_FILTERS_1_0`. The `Query` contains a JSON string that represents\
            \ a collection of simple tag filters. The JSON string uses a syntax similar\
            \ to the ` [GetResources](https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html)\
            \ ` operation, but uses only the ` [ ResourceTypeFilters](https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html#resourcegrouptagging-GetResources-request-ResourceTypeFilters)\
            \ ` and ` [TagFilters](https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html#resourcegrouptagging-GetResources-request-TagFiltersTagFilters)\
            \ ` fields. If you specify more than one tag key, only resources that\
            \ match all tag keys, and at least one value of each specified tag key,\
            \ are returned in your query. If you specify more than one value for a\
            \ tag key, a resource matches the filter if it has a tag key value that\
            \ matches _any_ of the specified values.\n\nFor example, consider the\
            \ following sample query for resources that have two tags, `Stage` and\
            \ `Version`, with two values each:\n\n`[{\"Stage\":[\"Test\",\"Deploy\"\
            ]},{\"Version\":[\"1\",\"2\"]}]`\n\nThe results of this resource query\
            \ could include the following.\n\n    * An Amazon EC2 instance that has\
            \ the following two tags: `{\"Stage\":\"Deploy\"}`, and `{\"Version\"\
            :\"2\"}`\n\n    * An S3 bucket that has the following two tags: `{\"Stage\"\
            :\"Test\"}`, and `{\"Version\":\"1\"}`\n\nThe resource query results would\
            \ _not_ include the following items in the results, however.\n\n    *\
            \ An Amazon EC2 instance that has only the following tag: `{\"Stage\"\
            :\"Deploy\"}`.\n\nThe instance does not have **all** of the tag keys specified\
            \ in the filter, so it is excluded from the results.\n\n    * An RDS database\
            \ that has the following two tags: `{\"Stage\":\"Archived\"}` and `{\"\
            Version\":\"4\"}`\n\nThe database has all of the tag keys, but none of\
            \ those keys has an associated value that matches at least one of the\
            \ specified values in the filter.\n\nExample: `\"TagFilters\": [ { \"\
            Key\": \"Stage\", \"Values\": [ \"Gamma\", \"Beta\" ] }`\n\n  * `StackIdentifier`\
            \ – applicable only if `Type` = `CLOUDFORMATION_STACK_1_0`. The value\
            \ of this parameter is the Amazon Resource Name (ARN) of the CloudFormation\
            \ stack whose resources you want included in the group."
      required:
      - Type
      - Query
      description: 'The query you can use to define a resource group or a search for
        resources. A `ResourceQuery` specifies both a query `Type` and a `Query` string
        as JSON string objects. See the examples section for example JSON strings.
        For more information about creating a resource group with a resource query,
        see [Build queries and groups in Resource Groups](https://docs.aws.amazon.com/ARG/latest/userguide/gettingstarted-query.html)
        in the _Resource Groups User Guide_


        When you combine all of the elements together into a single string, any double
        quotes that are embedded inside another double quote pair must be escaped
        by preceding the embedded double quote with a backslash character (\\). For
        example, a complete `ResourceQuery` parameter must be formatted like the following
        CLI parameter example:


        `--resource-query ''{"Type":"TAG_FILTERS_1_0","Query":"{\"ResourceTypeFilters\":[\"AWS::AllSupported\"],\"TagFilters\":[{\"Key\":\"Stage\",\"Values\":[\"Test\"]}]}"}''`


        In the preceding example, all of the double quote characters in the value
        part of the `Query` element must be escaped because the value itself is surrounded
        by double quotes. For more information, see [Quoting strings](https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-parameters-quoting-strings.html)
        in the _Command Line Interface User Guide_.


        For the complete list of resource types that you can use in the array value
        for `ResourceTypeFilters`, see [Resources you can use with Resource Groups
        and Tag Editor](https://docs.aws.amazon.com/ARG/latest/userguide/supported-resources.html)
        in the _Resource Groups User Guide_. For example:


        `"ResourceTypeFilters":["AWS::S3::Bucket", "AWS::EC2::Instance"]`'
    ResourceStatus:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceStatusValue'
          description: The current status.
      description: A structure that identifies the current group membership status
        for a resource. Adding a resource to a resource group is performed asynchronously
        as a background task. A `PENDING` status indicates, for this resource, that
        the process isn't completed yet.
    ResourceStatusValue:
      type: string
      enum:
      - PENDING
    ResourceType:
      type: string
      pattern: ^AWS::[a-zA-Z0-9]+::\w+$
    RoleArn:
      type: string
      pattern: ^arn:(aws[a-zA-Z-]*)?:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
      minLength: 20
      maxLength: 2048
    SearchResourcesInput:
      type: object
      properties:
        ResourceQuery:
          allOf:
          - $ref: '#/components/schemas/ResourceQuery'
          description: The search query, using the same formats that are supported
            for resource group definition. For more information, see CreateGroup.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The total number of results that you want included on each
            page of the response. If you do not include this parameter, it defaults
            to a value that is specific to the operation. If additional items exist
            beyond the maximum you specify, the `NextToken` response element is present
            and has a value (is not null). Include that value as the `NextToken` request
            parameter in the next call to the operation to get the next part of the
            results. Note that the service might return fewer results than the maximum
            even when there are more results available. You should check `NextToken`
            after every operation to ensure that you receive all of the results.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The parameter for receiving additional results if you receive
            a `NextToken` response in a previous request. A `NextToken` response indicates
            that more output is available. Set this parameter to the value provided
            by a previous call's `NextToken` response to indicate where the output
            should continue from.
      required:
      - ResourceQuery
    SearchResourcesOutput:
      type: object
      properties:
        ResourceIdentifiers:
          allOf:
          - $ref: '#/components/schemas/ResourceIdentifierList'
          description: The ARNs and resource types of resources that are members of
            the group that you specified.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If present, indicates that more output is available than is
            included in the current response. Use this value in the `NextToken` request
            parameter in a subsequent call to the operation to get the next part of
            the output. You should repeat this until the `NextToken` response element
            comes back as `null`.
        QueryErrors:
          allOf:
          - $ref: '#/components/schemas/QueryErrorList'
          description: "A list of `QueryError` objects. Each error contains an `ErrorCode`\
            \ and `Message`.\n\nPossible values for `ErrorCode`:\n\n  * `CLOUDFORMATION_STACK_INACTIVE`\n\
            \n  * `CLOUDFORMATION_STACK_NOT_EXISTING`\n\n  * `CLOUDFORMATION_STACK_UNASSUMABLE_ROLE\
            \ `"
    StartTagSyncTaskInput:
      type: object
      properties:
        Group:
          allOf:
          - $ref: '#/components/schemas/GroupStringV2'
          description: The Amazon resource name (ARN) or name of the application group
            for which you want to create a tag-sync task.
        TagKey:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          description: 'The tag key. Resources tagged with this tag key-value pair
            will be added to the application. If a resource with this tag is later
            untagged, the tag-sync task removes the resource from the application.


            When using the `TagKey` parameter, you must also specify the `TagValue`
            parameter. If you specify a tag key-value pair, you can''t use the `ResourceQuery`
            parameter.'
        TagValue:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          description: 'The tag value. Resources tagged with this tag key-value pair
            will be added to the application. If a resource with this tag is later
            untagged, the tag-sync task removes the resource from the application.


            When using the `TagValue` parameter, you must also specify the `TagKey`
            parameter. If you specify a tag key-value pair, you can''t use the `ResourceQuery`
            parameter.'
        ResourceQuery:
          allOf:
          - $ref: '#/components/schemas/ResourceQuery'
          description: 'The query you can use to create the tag-sync task. With this
            method, all resources matching the query are added to the specified application
            group. A `ResourceQuery` specifies both a query `Type` and a `Query` string
            as JSON string objects. For more information on defining a resource query
            for a tag-sync task, see the tag-based query type in [ Types of resource
            group queries](https://docs.aws.amazon.com/ARG/latest/userguide/gettingstarted-query.html#getting_started-query_types)
            in _Resource Groups User Guide_.


            When using the `ResourceQuery` parameter, you cannot use the `TagKey`
            and `TagValue` parameters.


            When you combine all of the elements together into a single string, any
            double quotes that are embedded inside another double quote pair must
            be escaped by preceding the embedded double quote with a backslash character
            (\\). For example, a complete `ResourceQuery` parameter must be formatted
            like the following CLI parameter example:


            `--resource-query ''{"Type":"TAG_FILTERS_1_0","Query":"{\"ResourceTypeFilters\":[\"AWS::AllSupported\"],\"TagFilters\":[{\"Key\":\"Stage\",\"Values\":[\"Test\"]}]}"}''`


            In the preceding example, all of the double quote characters in the value
            part of the `Query` element must be escaped because the value itself is
            surrounded by double quotes. For more information, see [Quoting strings](https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-parameters-quoting-strings.html)
            in the _Command Line Interface User Guide_.


            For the complete list of resource types that you can use in the array
            value for `ResourceTypeFilters`, see [Resources you can use with Resource
            Groups and Tag Editor](https://docs.aws.amazon.com/ARG/latest/userguide/supported-resources.html)
            in the _Resource Groups User Guide_. For example:


            `"ResourceTypeFilters":["AWS::S3::Bucket", "AWS::EC2::Instance"]`'
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The Amazon resource name (ARN) of the role assumed by the service
            to tag and untag resources on your behalf.
      required:
      - Group
      - RoleArn
    StartTagSyncTaskOutput:
      type: object
      properties:
        GroupArn:
          allOf:
          - $ref: '#/components/schemas/GroupArnV2'
          description: The Amazon resource name (ARN) of the application group for
            which you want to add or remove resources.
        GroupName:
          allOf:
          - $ref: '#/components/schemas/GroupName'
          description: The name of the application group to onboard and sync resources.
        TaskArn:
          allOf:
          - $ref: '#/components/schemas/TagSyncTaskArn'
          description: The Amazon resource name (ARN) of the new tag-sync task.
        TagKey:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          description: The tag key of the tag-sync task.
        TagValue:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          description: The tag value of the tag-sync task.
        ResourceQuery:
          $ref: '#/components/schemas/ResourceQuery'
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The Amazon resource name (ARN) of the role assumed by the service
            to tag and untag resources on your behalf.
    TagInput:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/GroupArnV2'
          description: The Amazon resource name (ARN) of the resource group to which
            to add tags.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags to add to the specified resource group. A tag is a
            string-to-string map of key-value pairs.
      required:
      - Arn
      - Tags
    TagKey:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagOutput:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/GroupArnV2'
          description: The Amazon resource name (ARN) of the tagged resource.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags that have been added to the specified resource group.
    TagSyncTaskArn:
      type: string
      pattern: ^arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}(-[a-z]+)+-\d{1}:[0-9]{12}:group/[a-zA-Z0-9_\.-]{1,150}/[a-z0-9]{26}/tag-sync-task/[a-z0-9]{26}$
      minLength: 12
      maxLength: 1600
    TagSyncTaskItem:
      type: object
      properties:
        GroupArn:
          allOf:
          - $ref: '#/components/schemas/GroupArnV2'
          description: The Amazon resource name (ARN) of the application group.
        GroupName:
          allOf:
          - $ref: '#/components/schemas/GroupName'
          description: The name of the application group.
        TaskArn:
          allOf:
          - $ref: '#/components/schemas/TagSyncTaskArn'
          description: The Amazon resource name (ARN) of the tag-sync task.
        TagKey:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          description: The tag key.
        TagValue:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          description: The tag value.
        ResourceQuery:
          $ref: '#/components/schemas/ResourceQuery'
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The Amazon resource name (ARN) of the role assumed by the service
            to tag and untag resources on your behalf.
        Status:
          allOf:
          - $ref: '#/components/schemas/TagSyncTaskStatus'
          description: "The status of the tag-sync task.\n\nValid values include:\n\
            \n  * `ACTIVE` \\- The tag-sync task is actively managing resources in\
            \ the application by adding or removing the `awsApplication` tag from\
            \ resources when they are tagged or untagged with the specified tag key-value\
            \ pair. \n\n  * `ERROR` \\- The tag-sync task is not actively managing\
            \ resources in the application. Review the `ErrorMessage` for more information\
            \ about resolving the error."
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: The specific error message in cases where the tag-sync task
            status is `Error`.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The timestamp of when the tag-sync task was created.
      description: The Amazon resource name (ARN) of the tag-sync task.
    TagSyncTaskList:
      type: array
      items:
        $ref: '#/components/schemas/TagSyncTaskItem'
    TagSyncTaskStatus:
      type: string
      enum:
      - ACTIVE
      - ERROR
    TagValue:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 0
      maxLength: 256
    Tags:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TooManyRequestsException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: You've exceeded throttling limits by making too many requests in
        a period of time.
    UnauthorizedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The request was rejected because it doesn't have valid credentials
        for the target resource.
    UngroupResourcesInput:
      type: object
      properties:
        Group:
          allOf:
          - $ref: '#/components/schemas/GroupStringV2'
          description: The name or the Amazon resource name (ARN) of the resource
            group from which to remove the resources.
        ResourceArns:
          allOf:
          - $ref: '#/components/schemas/ResourceArnList'
          description: The Amazon resource names (ARNs) of the resources to be removed
            from the group.
      required:
      - Group
      - ResourceArns
    UngroupResourcesOutput:
      type: object
      properties:
        Succeeded:
          allOf:
          - $ref: '#/components/schemas/ResourceArnList'
          description: A list of resources that were successfully removed from the
            group by this operation.
        Failed:
          allOf:
          - $ref: '#/components/schemas/FailedResourceList'
          description: A list of any resources that failed to be removed from the
            group by this operation.
        Pending:
          allOf:
          - $ref: '#/components/schemas/PendingResourceList'
          description: A list of any resources that are still in the process of being
            removed from the group by this operation. These pending removals continue
            asynchronously. You can check the status of pending removals by using
            the ` ListGroupResources ` operation. After the resource is successfully
            removed, it no longer appears in the response.
    UntagInput:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/GroupArnV2'
          description: The Amazon resource name (ARN) of the resource group from which
            to remove tags. The command removed both the specified keys and any values
            associated with those keys.
        Keys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: The keys of the tags to be removed.
      required:
      - Arn
      - Keys
    UntagOutput:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/GroupArnV2'
          description: The Amazon resource name (ARN) of the resource group from which
            tags have been removed.
        Keys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: The keys of the tags that were removed.
    UpdateAccountSettingsInput:
      type: object
      properties:
        GroupLifecycleEventsDesiredStatus:
          allOf:
          - $ref: '#/components/schemas/GroupLifecycleEventsDesiredStatus'
          description: 'Specifies whether you want to turn [group lifecycle events](https://docs.aws.amazon.com/ARG/latest/userguide/monitor-groups.html)
            on or off.


            You can''t turn on group lifecycle events if your resource groups quota
            is greater than 2,000.'
    UpdateAccountSettingsOutput:
      type: object
      properties:
        AccountSettings:
          allOf:
          - $ref: '#/components/schemas/AccountSettings'
          description: A structure that displays the status of the optional features
            in the account.
    UpdateGroupInput:
      type: object
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/GroupName'
          description: Don't use this parameter. Use `Group` instead.
        Group:
          allOf:
          - $ref: '#/components/schemas/GroupStringV2'
          description: The name or the ARN of the resource group to update.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The new description that you want to update the resource group
            with. Descriptions can contain letters, numbers, hyphens, underscores,
            periods, and spaces.
        Criticality:
          allOf:
          - $ref: '#/components/schemas/Criticality'
          description: The critical rank of the application group on a scale of 1
            to 10, with a rank of 1 being the most critical, and a rank of 10 being
            least critical.
        Owner:
          allOf:
          - $ref: '#/components/schemas/Owner'
          description: A name, email address or other identifier for the person or
            group who is considered as the owner of this application group within
            your organization.
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: The name of the application group, which you can change at
            any time.
    UpdateGroupOutput:
      type: object
      properties:
        Group:
          allOf:
          - $ref: '#/components/schemas/Group'
          description: The update description of the resource group.
    UpdateGroupQueryInput:
      type: object
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/GroupName'
          description: Don't use this parameter. Use `Group` instead.
        Group:
          allOf:
          - $ref: '#/components/schemas/GroupString'
          description: The name or the Amazon resource name (ARN) of the resource
            group to query.
        ResourceQuery:
          allOf:
          - $ref: '#/components/schemas/ResourceQuery'
          description: 'The resource query to determine which Amazon Web Services
            resources are members of this resource group.


            A resource group can contain either a `Configuration` or a `ResourceQuery`,
            but not both.'
      required:
      - ResourceQuery
    UpdateGroupQueryOutput:
      type: object
      properties:
        GroupQuery:
          allOf:
          - $ref: '#/components/schemas/GroupQuery'
          description: The updated resource query associated with the resource group
            after the update.
    timestamp:
      type: string
      format: date-time
