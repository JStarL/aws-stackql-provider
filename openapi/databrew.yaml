openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: databrew
  x-aws-serviceName: databrew
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2017-07-25'
  title: AWS Glue DataBrew
  description: |-
    Glue DataBrew is a visual, cloud-scale data-preparation service. DataBrew simplifies data preparation tasks, targeting data issues that are hard to spot and time-consuming to fix. DataBrew empowers users of all technical levels to visualize the data and perform one-click data transformations, with no coding required.
servers:
- description: The AWS Glue DataBrew regional endpoint
  url: https://databrew.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /recipes/{Name}/batchDeleteRecipeVersion:
    post:
      operationId: BatchDeleteRecipeVersion
      description: |-
        Deletes one or more versions of a recipe at a time.

        The entire request will be rejected if:

          * The recipe does not exist.

          * There is an invalid version identifier in the list of versions.

          * The version list is empty.

          * The version list size exceeds 50.

          * The version list contains duplicate entries.

        The request will complete successfully, but with partial failures, if:

          * A version does not exist.

          * A version is being used by a job.

          * You specify `LATEST_WORKING`, but it's being used by a project.

          * The version fails to be deleted.

        The `LATEST_WORKING` version will only be deleted if the recipe has no other versions. If you try to delete `LATEST_WORKING` while other versions exist (or if they can't be deleted), then `LATEST_WORKING` will be listed as partial failure in the response.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RecipeName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                RecipeVersions:
                  $ref: '#/components/schemas/RecipeVersionList'
      responses:
        '200': {}
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            One or more resources can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input parameters for this request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /datasets:
    post:
      operationId: CreateDataset
      description: |-
        Creates a new DataBrew dataset.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/DatasetName'
                Format:
                  $ref: '#/components/schemas/InputFormat'
                FormatOptions:
                  $ref: '#/components/schemas/FormatOptions'
                Input:
                  $ref: '#/components/schemas/Input'
                PathOptions:
                  $ref: '#/components/schemas/PathOptions'
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            Access to the specified resource was denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '402':
          description: |-
            A service quota is exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '400':
          description: |-
            The input parameters for this request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListDatasets
      description: |-
        Lists all of the DataBrew datasets.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults100'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters for this request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /profileJobs:
    post:
      operationId: CreateProfileJob
      description: |-
        Creates a new job to analyze a dataset and create its data profile.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DatasetName:
                  $ref: '#/components/schemas/DatasetName'
                EncryptionKeyArn:
                  $ref: '#/components/schemas/EncryptionKeyArn'
                EncryptionMode:
                  $ref: '#/components/schemas/EncryptionMode'
                Name:
                  $ref: '#/components/schemas/JobName'
                LogSubscription:
                  $ref: '#/components/schemas/LogSubscription'
                MaxCapacity:
                  $ref: '#/components/schemas/MaxCapacity'
                MaxRetries:
                  $ref: '#/components/schemas/MaxRetries'
                OutputLocation:
                  $ref: '#/components/schemas/S3Location'
                Configuration:
                  $ref: '#/components/schemas/ProfileConfiguration'
                ValidationConfigurations:
                  $ref: '#/components/schemas/ValidationConfigurationList'
                RoleArn:
                  $ref: '#/components/schemas/Arn'
                Tags:
                  $ref: '#/components/schemas/TagMap'
                Timeout:
                  $ref: '#/components/schemas/Timeout'
                JobSample:
                  $ref: '#/components/schemas/JobSample'
      responses:
        '200': {}
        '403':
          description: |-
            Access to the specified resource was denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            One or more resources can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            A service quota is exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '400':
          description: |-
            The input parameters for this request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /projects:
    post:
      operationId: CreateProject
      description: |-
        Creates a new DataBrew project.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DatasetName:
                  $ref: '#/components/schemas/DatasetName'
                Name:
                  $ref: '#/components/schemas/ProjectName'
                RecipeName:
                  $ref: '#/components/schemas/RecipeName'
                Sample:
                  $ref: '#/components/schemas/Sample'
                RoleArn:
                  $ref: '#/components/schemas/Arn'
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal service failure occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            A service quota is exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '400':
          description: |-
            The input parameters for this request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListProjects
      description: |-
        Lists all of the DataBrew projects that are defined.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults100'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters for this request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /recipes:
    post:
      operationId: CreateRecipe
      description: |-
        Creates a new DataBrew recipe.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  $ref: '#/components/schemas/RecipeDescription'
                Name:
                  $ref: '#/components/schemas/RecipeName'
                Steps:
                  $ref: '#/components/schemas/RecipeStepList'
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '402':
          description: |-
            A service quota is exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '400':
          description: |-
            The input parameters for this request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListRecipes
      description: |-
        Lists all of the DataBrew recipes that are defined.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults100'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: recipeVersion
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/RecipeVersion'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters for this request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /recipeJobs:
    post:
      operationId: CreateRecipeJob
      description: |-
        Creates a new job to transform input data, using steps defined in an existing Glue DataBrew recipe
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DatasetName:
                  $ref: '#/components/schemas/DatasetName'
                EncryptionKeyArn:
                  $ref: '#/components/schemas/EncryptionKeyArn'
                EncryptionMode:
                  $ref: '#/components/schemas/EncryptionMode'
                Name:
                  $ref: '#/components/schemas/JobName'
                LogSubscription:
                  $ref: '#/components/schemas/LogSubscription'
                MaxCapacity:
                  $ref: '#/components/schemas/MaxCapacity'
                MaxRetries:
                  $ref: '#/components/schemas/MaxRetries'
                Outputs:
                  $ref: '#/components/schemas/OutputList'
                DataCatalogOutputs:
                  $ref: '#/components/schemas/DataCatalogOutputList'
                DatabaseOutputs:
                  $ref: '#/components/schemas/DatabaseOutputList'
                ProjectName:
                  $ref: '#/components/schemas/ProjectName'
                RecipeReference:
                  $ref: '#/components/schemas/RecipeReference'
                RoleArn:
                  $ref: '#/components/schemas/Arn'
                Tags:
                  $ref: '#/components/schemas/TagMap'
                Timeout:
                  $ref: '#/components/schemas/Timeout'
      responses:
        '200': {}
        '403':
          description: |-
            Access to the specified resource was denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            One or more resources can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            A service quota is exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '400':
          description: |-
            The input parameters for this request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /rulesets:
    post:
      operationId: CreateRuleset
      description: |-
        Creates a new ruleset that can be used in a profile job to validate the data quality of a dataset.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/RulesetName'
                Description:
                  $ref: '#/components/schemas/RulesetDescription'
                TargetArn:
                  $ref: '#/components/schemas/Arn'
                Rules:
                  $ref: '#/components/schemas/RuleList'
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '402':
          description: |-
            A service quota is exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '400':
          description: |-
            The input parameters for this request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListRulesets
      description: |-
        List all rulesets available in the current account or rulesets associated with a specific resource (dataset).
      parameters:
      - name: targetArn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Arn'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults100'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '404':
          description: |-
            One or more resources can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input parameters for this request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /schedules:
    post:
      operationId: CreateSchedule
      description: |-
        Creates a new schedule for one or more DataBrew jobs. Jobs can be run at a specific date and time, or at regular intervals.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                JobNames:
                  $ref: '#/components/schemas/JobNameList'
                CronExpression:
                  $ref: '#/components/schemas/CronExpression'
                Tags:
                  $ref: '#/components/schemas/TagMap'
                Name:
                  $ref: '#/components/schemas/ScheduleName'
      responses:
        '200': {}
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '402':
          description: |-
            A service quota is exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '400':
          description: |-
            The input parameters for this request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListSchedules
      description: |-
        Lists the DataBrew schedules that are defined.
      parameters:
      - name: jobName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/JobName'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults100'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters for this request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /datasets/{Name}:
    delete:
      operationId: DeleteDataset
      description: |-
        Deletes a dataset from DataBrew.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DatasetName'
      responses:
        '200': {}
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            One or more resources can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input parameters for this request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: DescribeDataset
      description: |-
        Returns the definition of a specific DataBrew dataset.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DatasetName'
      responses:
        '200': {}
        '404':
          description: |-
            One or more resources can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input parameters for this request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: UpdateDataset
      description: |-
        Modifies the definition of an existing DataBrew dataset.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DatasetName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Format:
                  $ref: '#/components/schemas/InputFormat'
                FormatOptions:
                  $ref: '#/components/schemas/FormatOptions'
                Input:
                  $ref: '#/components/schemas/Input'
                PathOptions:
                  $ref: '#/components/schemas/PathOptions'
      responses:
        '200': {}
        '403':
          description: |-
            Access to the specified resource was denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            One or more resources can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input parameters for this request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /jobs/{Name}:
    delete:
      operationId: DeleteJob
      description: |-
        Deletes the specified DataBrew job.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobName'
      responses:
        '200': {}
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            One or more resources can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input parameters for this request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: DescribeJob
      description: |-
        Returns the definition of a specific DataBrew job.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobName'
      responses:
        '200': {}
        '404':
          description: |-
            One or more resources can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input parameters for this request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /projects/{Name}:
    delete:
      operationId: DeleteProject
      description: |-
        Deletes an existing DataBrew project.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ProjectName'
      responses:
        '200': {}
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            One or more resources can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input parameters for this request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: DescribeProject
      description: |-
        Returns the definition of a specific DataBrew project.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ProjectName'
      responses:
        '200': {}
        '404':
          description: |-
            One or more resources can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input parameters for this request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: UpdateProject
      description: |-
        Modifies the definition of an existing DataBrew project.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ProjectName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Sample:
                  $ref: '#/components/schemas/Sample'
                RoleArn:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '404':
          description: |-
            One or more resources can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input parameters for this request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /recipes/{Name}/recipeVersion/{RecipeVersion}:
    delete:
      operationId: DeleteRecipeVersion
      description: |-
        Deletes a single version of a DataBrew recipe.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RecipeName'
      - name: RecipeVersion
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RecipeVersion'
      responses:
        '200': {}
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            One or more resources can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input parameters for this request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /rulesets/{Name}:
    delete:
      operationId: DeleteRuleset
      description: |-
        Deletes a ruleset.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RulesetName'
      responses:
        '200': {}
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            One or more resources can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input parameters for this request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: DescribeRuleset
      description: |-
        Retrieves detailed information about the ruleset.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RulesetName'
      responses:
        '200': {}
        '404':
          description: |-
            One or more resources can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input parameters for this request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: UpdateRuleset
      description: |-
        Updates specified ruleset.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RulesetName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  $ref: '#/components/schemas/RulesetDescription'
                Rules:
                  $ref: '#/components/schemas/RuleList'
      responses:
        '200': {}
        '404':
          description: |-
            One or more resources can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input parameters for this request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /schedules/{Name}:
    delete:
      operationId: DeleteSchedule
      description: |-
        Deletes the specified DataBrew schedule.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ScheduleName'
      responses:
        '200': {}
        '404':
          description: |-
            One or more resources can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input parameters for this request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: DescribeSchedule
      description: |-
        Returns the definition of a specific DataBrew schedule.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ScheduleName'
      responses:
        '200': {}
        '404':
          description: |-
            One or more resources can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input parameters for this request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: UpdateSchedule
      description: |-
        Modifies the definition of an existing DataBrew schedule.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ScheduleName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                JobNames:
                  $ref: '#/components/schemas/JobNameList'
                CronExpression:
                  $ref: '#/components/schemas/CronExpression'
      responses:
        '200': {}
        '404':
          description: |-
            One or more resources can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            A service quota is exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '400':
          description: |-
            The input parameters for this request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /jobs/{Name}/jobRun/{RunId}:
    get:
      operationId: DescribeJobRun
      description: |-
        Represents one run of a DataBrew job.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobName'
      - name: RunId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobRunId'
      responses:
        '200': {}
        '404':
          description: |-
            One or more resources can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input parameters for this request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /recipes/{Name}:
    get:
      operationId: DescribeRecipe
      description: |-
        Returns the definition of a specific DataBrew recipe corresponding to a particular version.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RecipeName'
      - name: recipeVersion
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/RecipeVersion'
      responses:
        '200': {}
        '404':
          description: |-
            One or more resources can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input parameters for this request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: UpdateRecipe
      description: |-
        Modifies the definition of the `LATEST_WORKING` version of a DataBrew recipe.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RecipeName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  $ref: '#/components/schemas/RecipeDescription'
                Steps:
                  $ref: '#/components/schemas/RecipeStepList'
      responses:
        '200': {}
        '404':
          description: |-
            One or more resources can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input parameters for this request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /jobs/{Name}/jobRuns:
    get:
      operationId: ListJobRuns
      description: |-
        Lists all of the previous runs of a particular DataBrew job.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobName'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults100'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '404':
          description: |-
            One or more resources can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input parameters for this request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /jobs:
    get:
      operationId: ListJobs
      description: |-
        Lists all of the DataBrew jobs that are defined.
      parameters:
      - name: datasetName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/DatasetName'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults100'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: projectName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ProjectName'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters for this request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /recipeVersions:
    get:
      operationId: ListRecipeVersions
      description: |-
        Lists the versions of a particular DataBrew recipe, except for `LATEST_WORKING`.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults100'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: name
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/RecipeName'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters for this request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tags/{ResourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Lists all the tags for a DataBrew resource.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '500':
          description: |-
            An internal service failure occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            One or more resources can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input parameters for this request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: TagResource
      description: |-
        Adds metadata tags to a DataBrew resource, such as a dataset, project, recipe, job, or schedule.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '500':
          description: |-
            An internal service failure occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            One or more resources can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input parameters for this request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: UntagResource
      description: |-
        Removes metadata tags from a DataBrew resource.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeyList'
      responses:
        '200': {}
        '500':
          description: |-
            An internal service failure occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            One or more resources can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input parameters for this request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /recipes/{Name}/publishRecipe:
    post:
      operationId: PublishRecipe
      description: |-
        Publishes a new version of a DataBrew recipe.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RecipeName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  $ref: '#/components/schemas/RecipeDescription'
      responses:
        '200': {}
        '404':
          description: |-
            One or more resources can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            A service quota is exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '400':
          description: |-
            The input parameters for this request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /projects/{Name}/sendProjectSessionAction:
    put:
      operationId: SendProjectSessionAction
      description: |-
        Performs a recipe step within an interactive DataBrew session that's currently open.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ProjectName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Preview:
                  $ref: '#/components/schemas/Preview'
                RecipeStep:
                  $ref: '#/components/schemas/RecipeStep'
                StepIndex:
                  $ref: '#/components/schemas/StepIndex'
                ClientSessionId:
                  $ref: '#/components/schemas/ClientSessionId'
                ViewFrame:
                  $ref: '#/components/schemas/ViewFrame'
      responses:
        '200': {}
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            One or more resources can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input parameters for this request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /jobs/{Name}/startJobRun:
    post:
      operationId: StartJobRun
      description: |-
        Runs a DataBrew job.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobName'
      responses:
        '200': {}
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            One or more resources can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            A service quota is exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '400':
          description: |-
            The input parameters for this request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /projects/{Name}/startProjectSession:
    put:
      operationId: StartProjectSession
      description: |-
        Creates an interactive session, enabling you to manipulate data in a DataBrew project.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ProjectName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AssumeControl:
                  $ref: '#/components/schemas/AssumeControl'
      responses:
        '200': {}
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            One or more resources can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            A service quota is exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '400':
          description: |-
            The input parameters for this request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /jobs/{Name}/jobRun/{RunId}/stopJobRun:
    post:
      operationId: StopJobRun
      description: |-
        Stops a particular run of a job.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobName'
      - name: RunId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobRunId'
      responses:
        '200': {}
        '404':
          description: |-
            One or more resources can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input parameters for this request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /profileJobs/{Name}:
    put:
      operationId: UpdateProfileJob
      description: |-
        Modifies the definition of an existing profile job.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Configuration:
                  $ref: '#/components/schemas/ProfileConfiguration'
                EncryptionKeyArn:
                  $ref: '#/components/schemas/EncryptionKeyArn'
                EncryptionMode:
                  $ref: '#/components/schemas/EncryptionMode'
                LogSubscription:
                  $ref: '#/components/schemas/LogSubscription'
                MaxCapacity:
                  $ref: '#/components/schemas/MaxCapacity'
                MaxRetries:
                  $ref: '#/components/schemas/MaxRetries'
                OutputLocation:
                  $ref: '#/components/schemas/S3Location'
                ValidationConfigurations:
                  $ref: '#/components/schemas/ValidationConfigurationList'
                RoleArn:
                  $ref: '#/components/schemas/Arn'
                Timeout:
                  $ref: '#/components/schemas/Timeout'
                JobSample:
                  $ref: '#/components/schemas/JobSample'
      responses:
        '200': {}
        '403':
          description: |-
            Access to the specified resource was denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            One or more resources can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input parameters for this request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /recipeJobs/{Name}:
    put:
      operationId: UpdateRecipeJob
      description: |-
        Modifies the definition of an existing DataBrew recipe job.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                EncryptionKeyArn:
                  $ref: '#/components/schemas/EncryptionKeyArn'
                EncryptionMode:
                  $ref: '#/components/schemas/EncryptionMode'
                LogSubscription:
                  $ref: '#/components/schemas/LogSubscription'
                MaxCapacity:
                  $ref: '#/components/schemas/MaxCapacity'
                MaxRetries:
                  $ref: '#/components/schemas/MaxRetries'
                Outputs:
                  $ref: '#/components/schemas/OutputList'
                DataCatalogOutputs:
                  $ref: '#/components/schemas/DataCatalogOutputList'
                DatabaseOutputs:
                  $ref: '#/components/schemas/DatabaseOutputList'
                RoleArn:
                  $ref: '#/components/schemas/Arn'
                Timeout:
                  $ref: '#/components/schemas/Timeout'
      responses:
        '200': {}
        '403':
          description: |-
            Access to the specified resource was denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            One or more resources can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input parameters for this request failed validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    AccessDeniedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
      description: Access to the specified resource was denied.
    AccountId:
      type: string
      minLength: 0
      maxLength: 255
    ActionId:
      type: integer
    AllowedStatisticList:
      type: array
      items:
        $ref: '#/components/schemas/AllowedStatistics'
    AllowedStatistics:
      type: object
      properties:
        Statistics:
          allOf:
          - $ref: '#/components/schemas/StatisticList'
          description: One or more column statistics to allow for columns that contain
            detected entities.
      required:
      - Statistics
      description: Configuration of statistics that are allowed to be run on columns
        that contain detected entities. When undefined, no statistics will be computed
        on columns that contain detected entities.
    AnalyticsMode:
      type: string
      enum:
      - ENABLE
      - DISABLE
    Arn:
      type: string
      minLength: 20
      maxLength: 2048
    AssumeControl:
      type: boolean
      default: false
    Attempt:
      type: integer
      default: 0
    BatchDeleteRecipeVersionRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/RecipeName'
          description: The name of the recipe whose versions are to be deleted.
        RecipeVersions:
          allOf:
          - $ref: '#/components/schemas/RecipeVersionList'
          description: An array of version identifiers, for the recipe versions to
            be deleted. You can specify numeric versions (`X.Y`) or `LATEST_WORKING`.
            `LATEST_PUBLISHED` is not supported.
      required:
      - Name
      - RecipeVersions
    BatchDeleteRecipeVersionResponse:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/RecipeName'
          description: The name of the recipe that was modified.
        Errors:
          allOf:
          - $ref: '#/components/schemas/RecipeErrorList'
          description: Errors, if any, that occurred while attempting to delete the
            recipe versions.
      required:
      - Name
    Bucket:
      type: string
      minLength: 3
      maxLength: 63
    BucketOwner:
      type: string
      pattern: ^[0-9]{12}$
      minLength: 12
      maxLength: 12
    CatalogId:
      type: string
      minLength: 1
      maxLength: 255
    ClientSessionId:
      type: string
      pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
      minLength: 1
      maxLength: 255
    ColumnName:
      type: string
      minLength: 1
      maxLength: 255
    ColumnNameList:
      type: array
      items:
        $ref: '#/components/schemas/ColumnName'
    ColumnRange:
      type: integer
      minimum: 0
      maximum: 20
    ColumnSelector:
      type: object
      properties:
        Regex:
          allOf:
          - $ref: '#/components/schemas/ColumnName'
          description: A regular expression for selecting a column from a dataset.
        Name:
          allOf:
          - $ref: '#/components/schemas/ColumnName'
          description: The name of a column from a dataset.
      description: Selector of a column from a dataset for profile job configuration.
        One selector includes either a column name or a regular expression.
    ColumnSelectorList:
      type: array
      items:
        $ref: '#/components/schemas/ColumnSelector'
    ColumnStatisticsConfiguration:
      type: object
      properties:
        Selectors:
          allOf:
          - $ref: '#/components/schemas/ColumnSelectorList'
          description: List of column selectors. Selectors can be used to select columns
            from the dataset. When selectors are undefined, configuration will be
            applied to all supported columns.
        Statistics:
          allOf:
          - $ref: '#/components/schemas/StatisticsConfiguration'
          description: Configuration for evaluations. Statistics can be used to select
            evaluations and override parameters of evaluations.
      required:
      - Statistics
      description: Configuration for column evaluations for a profile job. ColumnStatisticsConfiguration
        can be used to select evaluations and override parameters of evaluations for
        particular columns.
    ColumnStatisticsConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/ColumnStatisticsConfiguration'
    CompressionFormat:
      type: string
      enum:
      - GZIP
      - LZ4
      - SNAPPY
      - BZIP2
      - DEFLATE
      - LZO
      - BROTLI
      - ZSTD
      - ZLIB
    Condition:
      type: string
      pattern: ^[A-Z\_]+$
      minLength: 1
      maxLength: 128
    ConditionExpression:
      type: object
      properties:
        Condition:
          allOf:
          - $ref: '#/components/schemas/Condition'
          description: A specific condition to apply to a recipe action. For more
            information, see [Recipe structure](https://docs.aws.amazon.com/databrew/latest/dg/recipes.html#recipes.structure)
            in the _Glue DataBrew Developer Guide_.
        Value:
          allOf:
          - $ref: '#/components/schemas/ConditionValue'
          description: A value that the condition must evaluate to for the condition
            to succeed.
        TargetColumn:
          allOf:
          - $ref: '#/components/schemas/TargetColumn'
          description: A column to apply this condition to.
      required:
      - Condition
      - TargetColumn
      description: 'Represents an individual condition that evaluates to true or false.


        Conditions are used with recipe actions. The action is only performed for
        column values where the condition evaluates to true.


        If a recipe requires more than one condition, then the recipe must specify
        multiple `ConditionExpression` elements. Each condition is applied to the
        rows in a dataset first, before the recipe action is performed.'
    ConditionExpressionList:
      type: array
      items:
        $ref: '#/components/schemas/ConditionExpression'
    ConditionValue:
      type: string
      minLength: 0
      maxLength: 1024
    ConflictException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
      description: Updating or deleting a resource can cause an inconsistent state.
    CreateColumn:
      type: boolean
      default: false
    CreateDatasetRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DatasetName'
          description: The name of the dataset to be created. Valid characters are
            alphanumeric (A-Z, a-z, 0-9), hyphen (-), period (.), and space.
        Format:
          allOf:
          - $ref: '#/components/schemas/InputFormat'
          description: The file format of a dataset that is created from an Amazon
            S3 file or folder.
        FormatOptions:
          $ref: '#/components/schemas/FormatOptions'
        Input:
          $ref: '#/components/schemas/Input'
        PathOptions:
          allOf:
          - $ref: '#/components/schemas/PathOptions'
          description: A set of options that defines how DataBrew interprets an Amazon
            S3 path of the dataset.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Metadata tags to apply to this dataset.
      required:
      - Name
      - Input
    CreateDatasetResponse:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DatasetName'
          description: The name of the dataset that you created.
      required:
      - Name
    CreateProfileJobRequest:
      type: object
      properties:
        DatasetName:
          allOf:
          - $ref: '#/components/schemas/DatasetName'
          description: The name of the dataset that this job is to act upon.
        EncryptionKeyArn:
          allOf:
          - $ref: '#/components/schemas/EncryptionKeyArn'
          description: The Amazon Resource Name (ARN) of an encryption key that is
            used to protect the job.
        EncryptionMode:
          allOf:
          - $ref: '#/components/schemas/EncryptionMode'
          description: "The encryption mode for the job, which can be one of the following:\n\
            \n  * `SSE-KMS` \\- `SSE-KMS` \\- Server-side encryption with KMS-managed\
            \ keys.\n\n  * `SSE-S3` \\- Server-side encryption with keys managed by\
            \ Amazon S3."
        Name:
          allOf:
          - $ref: '#/components/schemas/JobName'
          description: The name of the job to be created. Valid characters are alphanumeric
            (A-Z, a-z, 0-9), hyphen (-), period (.), and space.
        LogSubscription:
          allOf:
          - $ref: '#/components/schemas/LogSubscription'
          description: Enables or disables Amazon CloudWatch logging for the job.
            If logging is enabled, CloudWatch writes one log stream for each job run.
        MaxCapacity:
          allOf:
          - $ref: '#/components/schemas/MaxCapacity'
          description: The maximum number of nodes that DataBrew can use when the
            job processes data.
        MaxRetries:
          allOf:
          - $ref: '#/components/schemas/MaxRetries'
          description: The maximum number of times to retry the job after a job run
            fails.
        OutputLocation:
          $ref: '#/components/schemas/S3Location'
        Configuration:
          allOf:
          - $ref: '#/components/schemas/ProfileConfiguration'
          description: Configuration for profile jobs. Used to select columns, do
            evaluations, and override default parameters of evaluations. When configuration
            is null, the profile job will run with default settings.
        ValidationConfigurations:
          allOf:
          - $ref: '#/components/schemas/ValidationConfigurationList'
          description: List of validation configurations that are applied to the profile
            job.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the Identity and Access Management
            (IAM) role to be assumed when DataBrew runs the job.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Metadata tags to apply to this job.
        Timeout:
          allOf:
          - $ref: '#/components/schemas/Timeout'
          description: The job's timeout in minutes. A job that attempts to run longer
            than this timeout period ends with a status of `TIMEOUT`.
        JobSample:
          allOf:
          - $ref: '#/components/schemas/JobSample'
          description: Sample configuration for profile jobs only. Determines the
            number of rows on which the profile job will be executed. If a JobSample
            value is not provided, the default value will be used. The default value
            is CUSTOM_ROWS for the mode parameter and 20000 for the size parameter.
      required:
      - DatasetName
      - Name
      - OutputLocation
      - RoleArn
    CreateProfileJobResponse:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/JobName'
          description: The name of the job that was created.
      required:
      - Name
    CreateProjectRequest:
      type: object
      properties:
        DatasetName:
          allOf:
          - $ref: '#/components/schemas/DatasetName'
          description: The name of an existing dataset to associate this project with.
        Name:
          allOf:
          - $ref: '#/components/schemas/ProjectName'
          description: A unique name for the new project. Valid characters are alphanumeric
            (A-Z, a-z, 0-9), hyphen (-), period (.), and space.
        RecipeName:
          allOf:
          - $ref: '#/components/schemas/RecipeName'
          description: The name of an existing recipe to associate with the project.
        Sample:
          $ref: '#/components/schemas/Sample'
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the Identity and Access Management
            (IAM) role to be assumed for this request.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Metadata tags to apply to this project.
      required:
      - DatasetName
      - Name
      - RecipeName
      - RoleArn
    CreateProjectResponse:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ProjectName'
          description: The name of the project that you created.
      required:
      - Name
    CreateRecipeJobRequest:
      type: object
      properties:
        DatasetName:
          allOf:
          - $ref: '#/components/schemas/DatasetName'
          description: The name of the dataset that this job processes.
        EncryptionKeyArn:
          allOf:
          - $ref: '#/components/schemas/EncryptionKeyArn'
          description: The Amazon Resource Name (ARN) of an encryption key that is
            used to protect the job.
        EncryptionMode:
          allOf:
          - $ref: '#/components/schemas/EncryptionMode'
          description: "The encryption mode for the job, which can be one of the following:\n\
            \n  * `SSE-KMS` \\- Server-side encryption with keys managed by KMS.\n\
            \n  * `SSE-S3` \\- Server-side encryption with keys managed by Amazon\
            \ S3."
        Name:
          allOf:
          - $ref: '#/components/schemas/JobName'
          description: A unique name for the job. Valid characters are alphanumeric
            (A-Z, a-z, 0-9), hyphen (-), period (.), and space.
        LogSubscription:
          allOf:
          - $ref: '#/components/schemas/LogSubscription'
          description: Enables or disables Amazon CloudWatch logging for the job.
            If logging is enabled, CloudWatch writes one log stream for each job run.
        MaxCapacity:
          allOf:
          - $ref: '#/components/schemas/MaxCapacity'
          description: The maximum number of nodes that DataBrew can consume when
            the job processes data.
        MaxRetries:
          allOf:
          - $ref: '#/components/schemas/MaxRetries'
          description: The maximum number of times to retry the job after a job run
            fails.
        Outputs:
          allOf:
          - $ref: '#/components/schemas/OutputList'
          description: One or more artifacts that represent the output from running
            the job.
        DataCatalogOutputs:
          allOf:
          - $ref: '#/components/schemas/DataCatalogOutputList'
          description: One or more artifacts that represent the Glue Data Catalog
            output from running the job.
        DatabaseOutputs:
          allOf:
          - $ref: '#/components/schemas/DatabaseOutputList'
          description: Represents a list of JDBC database output objects which defines
            the output destination for a DataBrew recipe job to write to.
        ProjectName:
          allOf:
          - $ref: '#/components/schemas/ProjectName'
          description: Either the name of an existing project, or a combination of
            a recipe and a dataset to associate with the recipe.
        RecipeReference:
          $ref: '#/components/schemas/RecipeReference'
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the Identity and Access Management
            (IAM) role to be assumed when DataBrew runs the job.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Metadata tags to apply to this job.
        Timeout:
          allOf:
          - $ref: '#/components/schemas/Timeout'
          description: The job's timeout in minutes. A job that attempts to run longer
            than this timeout period ends with a status of `TIMEOUT`.
      required:
      - Name
      - RoleArn
    CreateRecipeJobResponse:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/JobName'
          description: The name of the job that you created.
      required:
      - Name
    CreateRecipeRequest:
      type: object
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/RecipeDescription'
          description: A description for the recipe.
        Name:
          allOf:
          - $ref: '#/components/schemas/RecipeName'
          description: A unique name for the recipe. Valid characters are alphanumeric
            (A-Z, a-z, 0-9), hyphen (-), period (.), and space.
        Steps:
          allOf:
          - $ref: '#/components/schemas/RecipeStepList'
          description: An array containing the steps to be performed by the recipe.
            Each recipe step consists of one recipe action and (optionally) an array
            of condition expressions.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Metadata tags to apply to this recipe.
      required:
      - Name
      - Steps
    CreateRecipeResponse:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/RecipeName'
          description: The name of the recipe that you created.
      required:
      - Name
    CreateRulesetRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/RulesetName'
          description: The name of the ruleset to be created. Valid characters are
            alphanumeric (A-Z, a-z, 0-9), hyphen (-), period (.), and space.
        Description:
          allOf:
          - $ref: '#/components/schemas/RulesetDescription'
          description: The description of the ruleset.
        TargetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of a resource (dataset) that
            the ruleset is associated with.
        Rules:
          allOf:
          - $ref: '#/components/schemas/RuleList'
          description: A list of rules that are defined with the ruleset. A rule includes
            one or more checks to be validated on a DataBrew dataset.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Metadata tags to apply to the ruleset.
      required:
      - Name
      - TargetArn
      - Rules
    CreateRulesetResponse:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/RulesetName'
          description: The unique name of the created ruleset.
      required:
      - Name
    CreateScheduleRequest:
      type: object
      properties:
        JobNames:
          allOf:
          - $ref: '#/components/schemas/JobNameList'
          description: The name or names of one or more jobs to be run.
        CronExpression:
          allOf:
          - $ref: '#/components/schemas/CronExpression'
          description: The date or dates and time or times when the jobs are to be
            run. For more information, see [Cron expressions](https://docs.aws.amazon.com/databrew/latest/dg/jobs.cron.html)
            in the _Glue DataBrew Developer Guide_.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Metadata tags to apply to this schedule.
        Name:
          allOf:
          - $ref: '#/components/schemas/ScheduleName'
          description: A unique name for the schedule. Valid characters are alphanumeric
            (A-Z, a-z, 0-9), hyphen (-), period (.), and space.
      required:
      - CronExpression
      - Name
    CreateScheduleResponse:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ScheduleName'
          description: The name of the schedule that was created.
      required:
      - Name
    CreatedBy:
      type: string
    CronExpression:
      type: string
      minLength: 1
      maxLength: 512
    CsvOptions:
      type: object
      properties:
        Delimiter:
          allOf:
          - $ref: '#/components/schemas/Delimiter'
          description: A single character that specifies the delimiter being used
            in the CSV file.
        HeaderRow:
          allOf:
          - $ref: '#/components/schemas/HeaderRow'
          description: A variable that specifies whether the first row in the file
            is parsed as the header. If this value is false, column names are auto-generated.
      description: Represents a set of options that define how DataBrew will read
        a comma-separated value (CSV) file when creating a dataset from that file.
    CsvOutputOptions:
      type: object
      properties:
        Delimiter:
          allOf:
          - $ref: '#/components/schemas/Delimiter'
          description: A single character that specifies the delimiter used to create
            CSV job output.
      description: Represents a set of options that define how DataBrew will write
        a comma-separated value (CSV) file.
    DataCatalogInputDefinition:
      type: object
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogId'
          description: The unique identifier of the Amazon Web Services account that
            holds the Data Catalog that stores the data.
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/DatabaseName'
          description: The name of a database in the Data Catalog.
        TableName:
          allOf:
          - $ref: '#/components/schemas/TableName'
          description: The name of a database table in the Data Catalog. This table
            corresponds to a DataBrew dataset.
        TempDirectory:
          allOf:
          - $ref: '#/components/schemas/S3Location'
          description: Represents an Amazon location where DataBrew can store intermediate
            results.
      required:
      - DatabaseName
      - TableName
      description: Represents how metadata stored in the Glue Data Catalog is defined
        in a DataBrew dataset.
    DataCatalogOutput:
      type: object
      properties:
        CatalogId:
          allOf:
          - $ref: '#/components/schemas/CatalogId'
          description: The unique identifier of the Amazon Web Services account that
            holds the Data Catalog that stores the data.
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/DatabaseName'
          description: The name of a database in the Data Catalog.
        TableName:
          allOf:
          - $ref: '#/components/schemas/TableName'
          description: The name of a table in the Data Catalog.
        S3Options:
          allOf:
          - $ref: '#/components/schemas/S3TableOutputOptions'
          description: Represents options that specify how and where DataBrew writes
            the Amazon S3 output generated by recipe jobs.
        DatabaseOptions:
          allOf:
          - $ref: '#/components/schemas/DatabaseTableOutputOptions'
          description: Represents options that specify how and where DataBrew writes
            the database output generated by recipe jobs.
        Overwrite:
          allOf:
          - $ref: '#/components/schemas/OverwriteOutput'
          description: A value that, if true, means that any data in the location
            specified for output is overwritten with new output. Not supported with
            DatabaseOptions.
      required:
      - DatabaseName
      - TableName
      description: Represents options that specify how and where in the Glue Data
        Catalog DataBrew writes the output generated by recipe jobs.
    DataCatalogOutputList:
      type: array
      items:
        $ref: '#/components/schemas/DataCatalogOutput'
    DatabaseInputDefinition:
      type: object
      properties:
        GlueConnectionName:
          allOf:
          - $ref: '#/components/schemas/GlueConnectionName'
          description: The Glue Connection that stores the connection information
            for the target database.
        DatabaseTableName:
          allOf:
          - $ref: '#/components/schemas/DatabaseTableName'
          description: The table within the target database.
        TempDirectory:
          $ref: '#/components/schemas/S3Location'
        QueryString:
          allOf:
          - $ref: '#/components/schemas/QueryString'
          description: Custom SQL to run against the provided Glue connection. This
            SQL will be used as the input for DataBrew projects and jobs.
      required:
      - GlueConnectionName
      description: Connection information for dataset input files stored in a database.
    DatabaseName:
      type: string
      minLength: 1
      maxLength: 255
    DatabaseOutput:
      type: object
      properties:
        GlueConnectionName:
          allOf:
          - $ref: '#/components/schemas/GlueConnectionName'
          description: The Glue connection that stores the connection information
            for the target database.
        DatabaseOptions:
          allOf:
          - $ref: '#/components/schemas/DatabaseTableOutputOptions'
          description: Represents options that specify how and where DataBrew writes
            the database output generated by recipe jobs.
        DatabaseOutputMode:
          allOf:
          - $ref: '#/components/schemas/DatabaseOutputMode'
          description: 'The output mode to write into the database. Currently supported
            option: NEW_TABLE.'
      required:
      - GlueConnectionName
      - DatabaseOptions
      description: Represents a JDBC database output object which defines the output
        destination for a DataBrew recipe job to write into.
    DatabaseOutputList:
      type: array
      items:
        $ref: '#/components/schemas/DatabaseOutput'
    DatabaseOutputMode:
      type: string
      enum:
      - NEW_TABLE
    DatabaseTableName:
      type: string
      minLength: 1
      maxLength: 255
    DatabaseTableOutputOptions:
      type: object
      properties:
        TempDirectory:
          allOf:
          - $ref: '#/components/schemas/S3Location'
          description: Represents an Amazon S3 location (bucket name and object key)
            where DataBrew can store intermediate results.
        TableName:
          allOf:
          - $ref: '#/components/schemas/DatabaseTableName'
          description: A prefix for the name of a table DataBrew will create in the
            database.
      required:
      - TableName
      description: Represents options that specify how and where DataBrew writes the
        database output generated by recipe jobs.
    Dataset:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The ID of the Amazon Web Services account that owns the dataset.
        CreatedBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          description: The Amazon Resource Name (ARN) of the user who created the
            dataset.
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time that the dataset was created.
        Name:
          allOf:
          - $ref: '#/components/schemas/DatasetName'
          description: The unique name of the dataset.
        Format:
          allOf:
          - $ref: '#/components/schemas/InputFormat'
          description: The file format of a dataset that is created from an Amazon
            S3 file or folder.
        FormatOptions:
          allOf:
          - $ref: '#/components/schemas/FormatOptions'
          description: A set of options that define how DataBrew interprets the data
            in the dataset.
        Input:
          allOf:
          - $ref: '#/components/schemas/Input'
          description: Information on how DataBrew can find the dataset, in either
            the Glue Data Catalog or Amazon S3.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The last modification date and time of the dataset.
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/LastModifiedBy'
          description: The Amazon Resource Name (ARN) of the user who last modified
            the dataset.
        Source:
          allOf:
          - $ref: '#/components/schemas/Source'
          description: The location of the data for the dataset, either Amazon S3
            or the Glue Data Catalog.
        PathOptions:
          allOf:
          - $ref: '#/components/schemas/PathOptions'
          description: A set of options that defines how DataBrew interprets an Amazon
            S3 path of the dataset.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Metadata tags that have been applied to the dataset.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The unique Amazon Resource Name (ARN) for the dataset.
      required:
      - Name
      - Input
      description: Represents a dataset that can be processed by DataBrew.
    DatasetList:
      type: array
      items:
        $ref: '#/components/schemas/Dataset'
    DatasetName:
      type: string
      minLength: 1
      maxLength: 255
    DatasetParameter:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/PathParameterName'
          description: The name of the parameter that is used in the dataset's Amazon
            S3 path.
        Type:
          allOf:
          - $ref: '#/components/schemas/ParameterType'
          description: The type of the dataset parameter, can be one of a 'String',
            'Number' or 'Datetime'.
        DatetimeOptions:
          allOf:
          - $ref: '#/components/schemas/DatetimeOptions'
          description: Additional parameter options such as a format and a timezone.
            Required for datetime parameters.
        CreateColumn:
          allOf:
          - $ref: '#/components/schemas/CreateColumn'
          description: Optional boolean value that defines whether the captured value
            of this parameter should be used to create a new column in a dataset.
        Filter:
          allOf:
          - $ref: '#/components/schemas/FilterExpression'
          description: The optional filter expression structure to apply additional
            matching criteria to the parameter.
      required:
      - Name
      - Type
      description: Represents a dataset parameter that defines type and conditions
        for a parameter in the Amazon S3 path of the dataset.
    Date:
      type: string
      format: date-time
    DatetimeFormat:
      type: string
      minLength: 2
      maxLength: 100
    DatetimeOptions:
      type: object
      properties:
        Format:
          allOf:
          - $ref: '#/components/schemas/DatetimeFormat'
          description: Required option, that defines the datetime format used for
            a date parameter in the Amazon S3 path. Should use only supported datetime
            specifiers and separation characters, all literal a-z or A-Z characters
            should be escaped with single quotes. E.g. "MM.dd.yyyy-'at'-HH:mm".
        TimezoneOffset:
          allOf:
          - $ref: '#/components/schemas/TimezoneOffset'
          description: Optional value for a timezone offset of the datetime parameter
            value in the Amazon S3 path. Shouldn't be used if Format for this parameter
            includes timezone fields. If no offset specified, UTC is assumed.
        LocaleCode:
          allOf:
          - $ref: '#/components/schemas/LocaleCode'
          description: Optional value for a non-US locale code, needed for correct
            interpretation of some date formats.
      required:
      - Format
      description: Represents additional options for correct interpretation of datetime
        parameters used in the Amazon S3 path of a dataset.
    DeleteDatasetRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DatasetName'
          description: The name of the dataset to be deleted.
      required:
      - Name
    DeleteDatasetResponse:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DatasetName'
          description: The name of the dataset that you deleted.
      required:
      - Name
    DeleteJobRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/JobName'
          description: The name of the job to be deleted.
      required:
      - Name
    DeleteJobResponse:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/JobName'
          description: The name of the job that you deleted.
      required:
      - Name
    DeleteProjectRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ProjectName'
          description: The name of the project to be deleted.
      required:
      - Name
    DeleteProjectResponse:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ProjectName'
          description: The name of the project that you deleted.
      required:
      - Name
    DeleteRecipeVersionRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/RecipeName'
          description: The name of the recipe.
        RecipeVersion:
          allOf:
          - $ref: '#/components/schemas/RecipeVersion'
          description: The version of the recipe to be deleted. You can specify a
            numeric versions (`X.Y`) or `LATEST_WORKING`. `LATEST_PUBLISHED` is not
            supported.
      required:
      - Name
      - RecipeVersion
    DeleteRecipeVersionResponse:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/RecipeName'
          description: The name of the recipe that was deleted.
        RecipeVersion:
          allOf:
          - $ref: '#/components/schemas/RecipeVersion'
          description: The version of the recipe that was deleted.
      required:
      - Name
      - RecipeVersion
    DeleteRulesetRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/RulesetName'
          description: The name of the ruleset to be deleted.
      required:
      - Name
    DeleteRulesetResponse:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/RulesetName'
          description: The name of the deleted ruleset.
      required:
      - Name
    DeleteScheduleRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ScheduleName'
          description: The name of the schedule to be deleted.
      required:
      - Name
    DeleteScheduleResponse:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ScheduleName'
          description: The name of the schedule that was deleted.
      required:
      - Name
    Delimiter:
      type: string
      minLength: 1
      maxLength: 1
    DescribeDatasetRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DatasetName'
          description: The name of the dataset to be described.
      required:
      - Name
    DescribeDatasetResponse:
      type: object
      properties:
        CreatedBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          description: The identifier (user name) of the user who created the dataset.
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time that the dataset was created.
        Name:
          allOf:
          - $ref: '#/components/schemas/DatasetName'
          description: The name of the dataset.
        Format:
          allOf:
          - $ref: '#/components/schemas/InputFormat'
          description: The file format of a dataset that is created from an Amazon
            S3 file or folder.
        FormatOptions:
          $ref: '#/components/schemas/FormatOptions'
        Input:
          $ref: '#/components/schemas/Input'
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time that the dataset was last modified.
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/LastModifiedBy'
          description: The identifier (user name) of the user who last modified the
            dataset.
        Source:
          allOf:
          - $ref: '#/components/schemas/Source'
          description: The location of the data for this dataset, Amazon S3 or the
            Glue Data Catalog.
        PathOptions:
          allOf:
          - $ref: '#/components/schemas/PathOptions'
          description: A set of options that defines how DataBrew interprets an Amazon
            S3 path of the dataset.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Metadata tags associated with this dataset.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the dataset.
      required:
      - Name
      - Input
    DescribeJobRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/JobName'
          description: The name of the job to be described.
      required:
      - Name
    DescribeJobResponse:
      type: object
      properties:
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time that the job was created.
        CreatedBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          description: The identifier (user name) of the user associated with the
            creation of the job.
        DatasetName:
          allOf:
          - $ref: '#/components/schemas/DatasetName'
          description: The dataset that the job acts upon.
        EncryptionKeyArn:
          allOf:
          - $ref: '#/components/schemas/EncryptionKeyArn'
          description: The Amazon Resource Name (ARN) of an encryption key that is
            used to protect the job.
        EncryptionMode:
          allOf:
          - $ref: '#/components/schemas/EncryptionMode'
          description: "The encryption mode for the job, which can be one of the following:\n\
            \n  * `SSE-KMS` \\- Server-side encryption with keys managed by KMS.\n\
            \n  * `SSE-S3` \\- Server-side encryption with keys managed by Amazon\
            \ S3."
        Name:
          allOf:
          - $ref: '#/components/schemas/JobName'
          description: The name of the job.
        Type:
          allOf:
          - $ref: '#/components/schemas/JobType'
          description: "The job type, which must be one of the following:\n\n  * `PROFILE`\
            \ \\- The job analyzes the dataset to determine its size, data types,\
            \ data distribution, and more.\n\n  * `RECIPE` \\- The job applies one\
            \ or more transformations to a dataset."
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/LastModifiedBy'
          description: The identifier (user name) of the user who last modified the
            job.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time that the job was last modified.
        LogSubscription:
          allOf:
          - $ref: '#/components/schemas/LogSubscription'
          description: Indicates whether Amazon CloudWatch logging is enabled for
            this job.
        MaxCapacity:
          allOf:
          - $ref: '#/components/schemas/MaxCapacity'
          description: The maximum number of compute nodes that DataBrew can consume
            when the job processes data.
        MaxRetries:
          allOf:
          - $ref: '#/components/schemas/MaxRetries'
          description: The maximum number of times to retry the job after a job run
            fails.
        Outputs:
          allOf:
          - $ref: '#/components/schemas/OutputList'
          description: One or more artifacts that represent the output from running
            the job.
        DataCatalogOutputs:
          allOf:
          - $ref: '#/components/schemas/DataCatalogOutputList'
          description: One or more artifacts that represent the Glue Data Catalog
            output from running the job.
        DatabaseOutputs:
          allOf:
          - $ref: '#/components/schemas/DatabaseOutputList'
          description: Represents a list of JDBC database output objects which defines
            the output destination for a DataBrew recipe job to write into.
        ProjectName:
          allOf:
          - $ref: '#/components/schemas/ProjectName'
          description: The DataBrew project associated with this job.
        ProfileConfiguration:
          allOf:
          - $ref: '#/components/schemas/ProfileConfiguration'
          description: Configuration for profile jobs. Used to select columns, do
            evaluations, and override default parameters of evaluations. When configuration
            is null, the profile job will run with default settings.
        ValidationConfigurations:
          allOf:
          - $ref: '#/components/schemas/ValidationConfigurationList'
          description: List of validation configurations that are applied to the profile
            job.
        RecipeReference:
          $ref: '#/components/schemas/RecipeReference'
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the job.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the Identity and Access Management (IAM) role to
            be assumed when DataBrew runs the job.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Metadata tags associated with this job.
        Timeout:
          allOf:
          - $ref: '#/components/schemas/Timeout'
          description: The job's timeout in minutes. A job that attempts to run longer
            than this timeout period ends with a status of `TIMEOUT`.
        JobSample:
          allOf:
          - $ref: '#/components/schemas/JobSample'
          description: Sample configuration for profile jobs only. Determines the
            number of rows on which the profile job will be executed.
      required:
      - Name
    DescribeJobRunRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/JobName'
          description: The name of the job being processed during this run.
        RunId:
          allOf:
          - $ref: '#/components/schemas/JobRunId'
          description: The unique identifier of the job run.
      required:
      - Name
      - RunId
    DescribeJobRunResponse:
      type: object
      properties:
        Attempt:
          allOf:
          - $ref: '#/components/schemas/Attempt'
          description: The number of times that DataBrew has attempted to run the
            job.
        CompletedOn:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time when the job completed processing.
        DatasetName:
          allOf:
          - $ref: '#/components/schemas/DatasetName'
          description: The name of the dataset for the job to process.
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/JobRunErrorMessage'
          description: A message indicating an error (if any) that was encountered
            when the job ran.
        ExecutionTime:
          allOf:
          - $ref: '#/components/schemas/ExecutionTime'
          description: The amount of time, in seconds, during which the job run consumed
            resources.
        JobName:
          allOf:
          - $ref: '#/components/schemas/JobName'
          description: The name of the job being processed during this run.
        ProfileConfiguration:
          allOf:
          - $ref: '#/components/schemas/ProfileConfiguration'
          description: Configuration for profile jobs. Used to select columns, do
            evaluations, and override default parameters of evaluations. When configuration
            is null, the profile job will run with default settings.
        ValidationConfigurations:
          allOf:
          - $ref: '#/components/schemas/ValidationConfigurationList'
          description: List of validation configurations that are applied to the profile
            job.
        RunId:
          allOf:
          - $ref: '#/components/schemas/JobRunId'
          description: The unique identifier of the job run.
        State:
          allOf:
          - $ref: '#/components/schemas/JobRunState'
          description: The current state of the job run entity itself.
        LogSubscription:
          allOf:
          - $ref: '#/components/schemas/LogSubscription'
          description: The current status of Amazon CloudWatch logging for the job
            run.
        LogGroupName:
          allOf:
          - $ref: '#/components/schemas/LogGroupName'
          description: The name of an Amazon CloudWatch log group, where the job writes
            diagnostic messages when it runs.
        Outputs:
          allOf:
          - $ref: '#/components/schemas/OutputList'
          description: One or more output artifacts from a job run.
        DataCatalogOutputs:
          allOf:
          - $ref: '#/components/schemas/DataCatalogOutputList'
          description: One or more artifacts that represent the Glue Data Catalog
            output from running the job.
        DatabaseOutputs:
          allOf:
          - $ref: '#/components/schemas/DatabaseOutputList'
          description: Represents a list of JDBC database output objects which defines
            the output destination for a DataBrew recipe job to write into.
        RecipeReference:
          $ref: '#/components/schemas/RecipeReference'
        StartedBy:
          allOf:
          - $ref: '#/components/schemas/StartedBy'
          description: The Amazon Resource Name (ARN) of the user who started the
            job run.
        StartedOn:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time when the job run began.
        JobSample:
          allOf:
          - $ref: '#/components/schemas/JobSample'
          description: Sample configuration for profile jobs only. Determines the
            number of rows on which the profile job will be executed. If a JobSample
            value is not provided, the default value will be used. The default value
            is CUSTOM_ROWS for the mode parameter and 20000 for the size parameter.
      required:
      - JobName
    DescribeProjectRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ProjectName'
          description: The name of the project to be described.
      required:
      - Name
    DescribeProjectResponse:
      type: object
      properties:
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time that the project was created.
        CreatedBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          description: The identifier (user name) of the user who created the project.
        DatasetName:
          allOf:
          - $ref: '#/components/schemas/DatasetName'
          description: The dataset associated with the project.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time that the project was last modified.
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/LastModifiedBy'
          description: The identifier (user name) of the user who last modified the
            project.
        Name:
          allOf:
          - $ref: '#/components/schemas/ProjectName'
          description: The name of the project.
        RecipeName:
          allOf:
          - $ref: '#/components/schemas/RecipeName'
          description: The recipe associated with this job.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the project.
        Sample:
          $ref: '#/components/schemas/Sample'
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the Identity and Access Management (IAM) role to
            be assumed when DataBrew runs the job.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Metadata tags associated with this project.
        SessionStatus:
          allOf:
          - $ref: '#/components/schemas/SessionStatus'
          description: "Describes the current state of the session:\n\n  * `PROVISIONING`\
            \ \\- allocating resources for the session.\n\n  * `INITIALIZING` \\-\
            \ getting the session ready for first use.\n\n  * `ASSIGNED` \\- the session\
            \ is ready for use."
        OpenedBy:
          allOf:
          - $ref: '#/components/schemas/OpenedBy'
          description: The identifier (user name) of the user that opened the project
            for use.
        OpenDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time when the project was opened.
      required:
      - Name
    DescribeRecipeRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/RecipeName'
          description: The name of the recipe to be described.
        RecipeVersion:
          allOf:
          - $ref: '#/components/schemas/RecipeVersion'
          description: The recipe version identifier. If this parameter isn't specified,
            then the latest published version is returned.
      required:
      - Name
    DescribeRecipeResponse:
      type: object
      properties:
        CreatedBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          description: The identifier (user name) of the user who created the recipe.
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time that the recipe was created.
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/LastModifiedBy'
          description: The identifier (user name) of the user who last modified the
            recipe.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time that the recipe was last modified.
        ProjectName:
          allOf:
          - $ref: '#/components/schemas/ProjectName'
          description: The name of the project associated with this recipe.
        PublishedBy:
          allOf:
          - $ref: '#/components/schemas/PublishedBy'
          description: The identifier (user name) of the user who last published the
            recipe.
        PublishedDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time when the recipe was last published.
        Description:
          allOf:
          - $ref: '#/components/schemas/RecipeDescription'
          description: The description of the recipe.
        Name:
          allOf:
          - $ref: '#/components/schemas/RecipeName'
          description: The name of the recipe.
        Steps:
          allOf:
          - $ref: '#/components/schemas/RecipeStepList'
          description: One or more steps to be performed by the recipe. Each step
            consists of an action, and the conditions under which the action should
            succeed.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Metadata tags associated with this project.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the recipe.
        RecipeVersion:
          allOf:
          - $ref: '#/components/schemas/RecipeVersion'
          description: The recipe version identifier.
      required:
      - Name
    DescribeRulesetRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/RulesetName'
          description: The name of the ruleset to be described.
      required:
      - Name
    DescribeRulesetResponse:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/RulesetName'
          description: The name of the ruleset.
        Description:
          allOf:
          - $ref: '#/components/schemas/RulesetDescription'
          description: The description of the ruleset.
        TargetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of a resource (dataset) that
            the ruleset is associated with.
        Rules:
          allOf:
          - $ref: '#/components/schemas/RuleList'
          description: A list of rules that are defined with the ruleset. A rule includes
            one or more checks to be validated on a DataBrew dataset.
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time that the ruleset was created.
        CreatedBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          description: The Amazon Resource Name (ARN) of the user who created the
            ruleset.
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/LastModifiedBy'
          description: The Amazon Resource Name (ARN) of the user who last modified
            the ruleset.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The modification date and time of the ruleset.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) for the ruleset.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Metadata tags that have been applied to the ruleset.
      required:
      - Name
    DescribeScheduleRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ScheduleName'
          description: The name of the schedule to be described.
      required:
      - Name
    DescribeScheduleResponse:
      type: object
      properties:
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time that the schedule was created.
        CreatedBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          description: The identifier (user name) of the user who created the schedule.
        JobNames:
          allOf:
          - $ref: '#/components/schemas/JobNameList'
          description: The name or names of one or more jobs to be run by using the
            schedule.
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/LastModifiedBy'
          description: The identifier (user name) of the user who last modified the
            schedule.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time that the schedule was last modified.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the schedule.
        CronExpression:
          allOf:
          - $ref: '#/components/schemas/CronExpression'
          description: The date or dates and time or times when the jobs are to be
            run for the schedule. For more information, see [Cron expressions](https://docs.aws.amazon.com/databrew/latest/dg/jobs.cron.html)
            in the _Glue DataBrew Developer Guide_.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Metadata tags associated with this schedule.
        Name:
          allOf:
          - $ref: '#/components/schemas/ScheduleName'
          description: The name of the schedule.
      required:
      - Name
    Disabled:
      type: boolean
      default: false
    EncryptionKeyArn:
      type: string
      minLength: 20
      maxLength: 2048
    EncryptionMode:
      type: string
      enum:
      - SSE-KMS
      - SSE-S3
    EntityDetectorConfiguration:
      type: object
      properties:
        EntityTypes:
          allOf:
          - $ref: '#/components/schemas/EntityTypeList'
          description: "Entity types to detect. Can be any of the following:\n\n \
            \ * USA_SSN\n\n  * EMAIL\n\n  * USA_ITIN\n\n  * USA_PASSPORT_NUMBER\n\n\
            \  * PHONE_NUMBER\n\n  * USA_DRIVING_LICENSE\n\n  * BANK_ACCOUNT\n\n \
            \ * CREDIT_CARD\n\n  * IP_ADDRESS\n\n  * MAC_ADDRESS\n\n  * USA_DEA_NUMBER\n\
            \n  * USA_HCPCS_CODE\n\n  * USA_NATIONAL_PROVIDER_IDENTIFIER\n\n  * USA_NATIONAL_DRUG_CODE\n\
            \n  * USA_HEALTH_INSURANCE_CLAIM_NUMBER\n\n  * USA_MEDICARE_BENEFICIARY_IDENTIFIER\n\
            \n  * USA_CPT_CODE\n\n  * PERSON_NAME\n\n  * DATE\n\nThe Entity type group\
            \ USA_ALL is also supported, and includes all of the above entity types\
            \ except PERSON_NAME and DATE."
        AllowedStatistics:
          allOf:
          - $ref: '#/components/schemas/AllowedStatisticList'
          description: Configuration of statistics that are allowed to be run on columns
            that contain detected entities. When undefined, no statistics will be
            computed on columns that contain detected entities.
      required:
      - EntityTypes
      description: Configuration of entity detection for a profile job. When undefined,
        entity detection is disabled.
    EntityType:
      type: string
      pattern: ^[A-Z_][A-Z\\d_]*$
      minLength: 1
      maxLength: 128
    EntityTypeList:
      type: array
      items:
        $ref: '#/components/schemas/EntityType'
    ErrorCode:
      type: string
      pattern: ^[1-5][0-9][0-9]$
    ExcelOptions:
      type: object
      properties:
        SheetNames:
          allOf:
          - $ref: '#/components/schemas/SheetNameList'
          description: One or more named sheets in the Excel file that will be included
            in the dataset.
        SheetIndexes:
          allOf:
          - $ref: '#/components/schemas/SheetIndexList'
          description: One or more sheet numbers in the Excel file that will be included
            in the dataset.
        HeaderRow:
          allOf:
          - $ref: '#/components/schemas/HeaderRow'
          description: A variable that specifies whether the first row in the file
            is parsed as the header. If this value is false, column names are auto-generated.
      description: Represents a set of options that define how DataBrew will interpret
        a Microsoft Excel file when creating a dataset from that file.
    ExecutionTime:
      type: integer
      default: 0
    Expression:
      type: string
      pattern: ^[<>0-9A-Za-z_.,:)(!= ]+$
      minLength: 4
      maxLength: 1024
    FilesLimit:
      type: object
      properties:
        MaxFiles:
          allOf:
          - $ref: '#/components/schemas/MaxFiles'
          description: The number of Amazon S3 files to select.
        OrderedBy:
          allOf:
          - $ref: '#/components/schemas/OrderedBy'
          description: A criteria to use for Amazon S3 files sorting before their
            selection. By default uses LAST_MODIFIED_DATE as a sorting criteria. Currently
            it's the only allowed value.
        Order:
          allOf:
          - $ref: '#/components/schemas/Order'
          description: A criteria to use for Amazon S3 files sorting before their
            selection. By default uses DESCENDING order, i.e. most recent files are
            selected first. Another possible value is ASCENDING.
      required:
      - MaxFiles
      description: Represents a limit imposed on number of Amazon S3 files that should
        be selected for a dataset from a connected Amazon S3 path.
    FilterExpression:
      type: object
      properties:
        Expression:
          allOf:
          - $ref: '#/components/schemas/Expression'
          description: The expression which includes condition names followed by substitution
            variables, possibly grouped and combined with other conditions. For example,
            "(starts_with :prefix1 or starts_with :prefix2) and (ends_with :suffix1
            or ends_with :suffix2)". Substitution variables should start with ':'
            symbol.
        ValuesMap:
          allOf:
          - $ref: '#/components/schemas/ValuesMap'
          description: The map of substitution variable names to their values used
            in this filter expression.
      required:
      - Expression
      - ValuesMap
      description: 'Represents a structure for defining parameter conditions. Supported
        conditions are described here: [Supported conditions for dynamic datasets](https://docs.aws.amazon.com/databrew/latest/dg/datasets.multiple-files.html#conditions.for.dynamic.datasets)
        in the _Glue DataBrew Developer Guide_.'
    FormatOptions:
      type: object
      properties:
        Json:
          allOf:
          - $ref: '#/components/schemas/JsonOptions'
          description: Options that define how JSON input is to be interpreted by
            DataBrew.
        Excel:
          allOf:
          - $ref: '#/components/schemas/ExcelOptions'
          description: Options that define how Excel input is to be interpreted by
            DataBrew.
        Csv:
          allOf:
          - $ref: '#/components/schemas/CsvOptions'
          description: Options that define how CSV input is to be interpreted by DataBrew.
      description: Represents a set of options that define the structure of either
        comma-separated value (CSV), Excel, or JSON input.
    GlueConnectionName:
      type: string
      minLength: 1
      maxLength: 255
    HeaderRow:
      type: boolean
    HiddenColumnList:
      type: array
      items:
        $ref: '#/components/schemas/ColumnName'
    Input:
      type: object
      properties:
        S3InputDefinition:
          allOf:
          - $ref: '#/components/schemas/S3Location'
          description: The Amazon S3 location where the data is stored.
        DataCatalogInputDefinition:
          allOf:
          - $ref: '#/components/schemas/DataCatalogInputDefinition'
          description: The Glue Data Catalog parameters for the data.
        DatabaseInputDefinition:
          allOf:
          - $ref: '#/components/schemas/DatabaseInputDefinition'
          description: Connection information for dataset input files stored in a
            database.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          description: Contains additional resource information needed for specific
            datasets.
      description: Represents information on how DataBrew can find data, in either
        the Glue Data Catalog or Amazon S3.
    InputFormat:
      type: string
      enum:
      - CSV
      - JSON
      - PARQUET
      - EXCEL
      - ORC
    InternalServerException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
      description: An internal service failure occurred.
    Job:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The ID of the Amazon Web Services account that owns the job.
        CreatedBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          description: The Amazon Resource Name (ARN) of the user who created the
            job.
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time that the job was created.
        DatasetName:
          allOf:
          - $ref: '#/components/schemas/DatasetName'
          description: A dataset that the job is to process.
        EncryptionKeyArn:
          allOf:
          - $ref: '#/components/schemas/EncryptionKeyArn'
          description: The Amazon Resource Name (ARN) of an encryption key that is
            used to protect the job output. For more information, see [Encrypting
            data written by DataBrew jobs](https://docs.aws.amazon.com/databrew/latest/dg/encryption-security-configuration.html)
        EncryptionMode:
          allOf:
          - $ref: '#/components/schemas/EncryptionMode'
          description: "The encryption mode for the job, which can be one of the following:\n\
            \n  * `SSE-KMS` \\- Server-side encryption with keys managed by KMS.\n\
            \n  * `SSE-S3` \\- Server-side encryption with keys managed by Amazon\
            \ S3."
        Name:
          allOf:
          - $ref: '#/components/schemas/JobName'
          description: The unique name of the job.
        Type:
          allOf:
          - $ref: '#/components/schemas/JobType'
          description: "The job type of the job, which must be one of the following:\n\
            \n  * `PROFILE` \\- A job to analyze a dataset, to determine its size,\
            \ data types, data distribution, and more.\n\n  * `RECIPE` \\- A job to\
            \ apply one or more transformations to a dataset."
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/LastModifiedBy'
          description: The Amazon Resource Name (ARN) of the user who last modified
            the job.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The modification date and time of the job.
        LogSubscription:
          allOf:
          - $ref: '#/components/schemas/LogSubscription'
          description: The current status of Amazon CloudWatch logging for the job.
        MaxCapacity:
          allOf:
          - $ref: '#/components/schemas/MaxCapacity'
          description: The maximum number of nodes that can be consumed when the job
            processes data.
        MaxRetries:
          allOf:
          - $ref: '#/components/schemas/MaxRetries'
          description: The maximum number of times to retry the job after a job run
            fails.
        Outputs:
          allOf:
          - $ref: '#/components/schemas/OutputList'
          description: One or more artifacts that represent output from running the
            job.
        DataCatalogOutputs:
          allOf:
          - $ref: '#/components/schemas/DataCatalogOutputList'
          description: One or more artifacts that represent the Glue Data Catalog
            output from running the job.
        DatabaseOutputs:
          allOf:
          - $ref: '#/components/schemas/DatabaseOutputList'
          description: Represents a list of JDBC database output objects which defines
            the output destination for a DataBrew recipe job to write into.
        ProjectName:
          allOf:
          - $ref: '#/components/schemas/ProjectName'
          description: The name of the project that the job is associated with.
        RecipeReference:
          allOf:
          - $ref: '#/components/schemas/RecipeReference'
          description: A set of steps that the job runs.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The unique Amazon Resource Name (ARN) for the job.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the role to be assumed for
            this job.
        Timeout:
          allOf:
          - $ref: '#/components/schemas/Timeout'
          description: The job's timeout in minutes. A job that attempts to run longer
            than this timeout period ends with a status of `TIMEOUT`.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Metadata tags that have been applied to the job.
        JobSample:
          allOf:
          - $ref: '#/components/schemas/JobSample'
          description: A sample configuration for profile jobs only, which determines
            the number of rows on which the profile job is run. If a `JobSample` value
            isn't provided, the default value is used. The default value is CUSTOM_ROWS
            for the mode parameter and 20,000 for the size parameter.
        ValidationConfigurations:
          allOf:
          - $ref: '#/components/schemas/ValidationConfigurationList'
          description: List of validation configurations that are applied to the profile
            job.
      required:
      - Name
      description: Represents all of the attributes of a DataBrew job.
    JobList:
      type: array
      items:
        $ref: '#/components/schemas/Job'
    JobName:
      type: string
      minLength: 1
      maxLength: 240
    JobNameList:
      type: array
      items:
        $ref: '#/components/schemas/JobName'
    JobRun:
      type: object
      properties:
        Attempt:
          allOf:
          - $ref: '#/components/schemas/Attempt'
          description: The number of times that DataBrew has attempted to run the
            job.
        CompletedOn:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time when the job completed processing.
        DatasetName:
          allOf:
          - $ref: '#/components/schemas/DatasetName'
          description: The name of the dataset for the job to process.
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/JobRunErrorMessage'
          description: A message indicating an error (if any) that was encountered
            when the job ran.
        ExecutionTime:
          allOf:
          - $ref: '#/components/schemas/ExecutionTime'
          description: The amount of time, in seconds, during which a job run consumed
            resources.
        JobName:
          allOf:
          - $ref: '#/components/schemas/JobName'
          description: The name of the job being processed during this run.
        RunId:
          allOf:
          - $ref: '#/components/schemas/JobRunId'
          description: The unique identifier of the job run.
        State:
          allOf:
          - $ref: '#/components/schemas/JobRunState'
          description: The current state of the job run entity itself.
        LogSubscription:
          allOf:
          - $ref: '#/components/schemas/LogSubscription'
          description: The current status of Amazon CloudWatch logging for the job
            run.
        LogGroupName:
          allOf:
          - $ref: '#/components/schemas/LogGroupName'
          description: The name of an Amazon CloudWatch log group, where the job writes
            diagnostic messages when it runs.
        Outputs:
          allOf:
          - $ref: '#/components/schemas/OutputList'
          description: One or more output artifacts from a job run.
        DataCatalogOutputs:
          allOf:
          - $ref: '#/components/schemas/DataCatalogOutputList'
          description: One or more artifacts that represent the Glue Data Catalog
            output from running the job.
        DatabaseOutputs:
          allOf:
          - $ref: '#/components/schemas/DatabaseOutputList'
          description: Represents a list of JDBC database output objects which defines
            the output destination for a DataBrew recipe job to write into.
        RecipeReference:
          allOf:
          - $ref: '#/components/schemas/RecipeReference'
          description: The set of steps processed by the job.
        StartedBy:
          allOf:
          - $ref: '#/components/schemas/StartedBy'
          description: The Amazon Resource Name (ARN) of the user who initiated the
            job run.
        StartedOn:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time when the job run began.
        JobSample:
          allOf:
          - $ref: '#/components/schemas/JobSample'
          description: A sample configuration for profile jobs only, which determines
            the number of rows on which the profile job is run. If a `JobSample` value
            isn't provided, the default is used. The default value is CUSTOM_ROWS
            for the mode parameter and 20,000 for the size parameter.
        ValidationConfigurations:
          allOf:
          - $ref: '#/components/schemas/ValidationConfigurationList'
          description: List of validation configurations that are applied to the profile
            job run.
      description: Represents one run of a DataBrew job.
    JobRunErrorMessage:
      type: string
    JobRunId:
      type: string
      minLength: 1
      maxLength: 255
    JobRunList:
      type: array
      items:
        $ref: '#/components/schemas/JobRun'
    JobRunState:
      type: string
      enum:
      - STARTING
      - RUNNING
      - STOPPING
      - STOPPED
      - SUCCEEDED
      - FAILED
      - TIMEOUT
    JobSample:
      type: object
      properties:
        Mode:
          allOf:
          - $ref: '#/components/schemas/SampleMode'
          description: "A value that determines whether the profile job is run on\
            \ the entire dataset or a specified number of rows. This value must be\
            \ one of the following:\n\n  * FULL_DATASET - The profile job is run on\
            \ the entire dataset.\n\n  * CUSTOM_ROWS - The profile job is run on the\
            \ number of rows specified in the `Size` parameter."
        Size:
          allOf:
          - $ref: '#/components/schemas/JobSize'
          description: 'The `Size` parameter is only required when the mode is CUSTOM_ROWS.
            The profile job is run on the specified number of rows. The maximum value
            for size is Long.MAX_VALUE.


            Long.MAX_VALUE = 9223372036854775807'
      description: A sample configuration for profile jobs only, which determines
        the number of rows on which the profile job is run. If a `JobSample` value
        isn't provided, the default is used. The default value is CUSTOM_ROWS for
        the mode parameter and 20,000 for the size parameter.
    JobSize:
      type: integer
      format: int64
    JobType:
      type: string
      enum:
      - PROFILE
      - RECIPE
    JsonOptions:
      type: object
      properties:
        MultiLine:
          allOf:
          - $ref: '#/components/schemas/MultiLine'
          description: A value that specifies whether JSON input contains embedded
            new line characters.
      description: Represents the JSON-specific options that define how input is to
        be interpreted by Glue DataBrew.
    Key:
      type: string
      minLength: 1
      maxLength: 1280
    LastModifiedBy:
      type: string
    ListDatasetsRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults100'
          description: The maximum number of results to return in this request.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token returned by a previous call to retrieve the next
            set of results.
    ListDatasetsResponse:
      type: object
      properties:
        Datasets:
          allOf:
          - $ref: '#/components/schemas/DatasetList'
          description: A list of datasets that are defined.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token that you can use in a subsequent call to retrieve the
            next set of results.
      required:
      - Datasets
    ListJobRunsRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/JobName'
          description: The name of the job.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults100'
          description: The maximum number of results to return in this request.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token returned by a previous call to retrieve the next
            set of results.
      required:
      - Name
    ListJobRunsResponse:
      type: object
      properties:
        JobRuns:
          allOf:
          - $ref: '#/components/schemas/JobRunList'
          description: A list of job runs that have occurred for the specified job.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token that you can use in a subsequent call to retrieve the
            next set of results.
      required:
      - JobRuns
    ListJobsRequest:
      type: object
      properties:
        DatasetName:
          allOf:
          - $ref: '#/components/schemas/DatasetName'
          description: The name of a dataset. Using this parameter indicates to return
            only those jobs that act on the specified dataset.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults100'
          description: The maximum number of results to return in this request.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token generated by DataBrew that specifies where to continue
            pagination if a previous request was truncated. To get the next set of
            pages, pass in the NextToken value from the response object of the previous
            page call.
        ProjectName:
          allOf:
          - $ref: '#/components/schemas/ProjectName'
          description: The name of a project. Using this parameter indicates to return
            only those jobs that are associated with the specified project.
    ListJobsResponse:
      type: object
      properties:
        Jobs:
          allOf:
          - $ref: '#/components/schemas/JobList'
          description: A list of jobs that are defined.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token that you can use in a subsequent call to retrieve the
            next set of results.
      required:
      - Jobs
    ListProjectsRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token returned by a previous call to retrieve the next
            set of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults100'
          description: The maximum number of results to return in this request.
    ListProjectsResponse:
      type: object
      properties:
        Projects:
          allOf:
          - $ref: '#/components/schemas/ProjectList'
          description: A list of projects that are defined .
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token that you can use in a subsequent call to retrieve the
            next set of results.
      required:
      - Projects
    ListRecipeVersionsRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults100'
          description: The maximum number of results to return in this request.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token returned by a previous call to retrieve the next
            set of results.
        Name:
          allOf:
          - $ref: '#/components/schemas/RecipeName'
          description: The name of the recipe for which to return version information.
      required:
      - Name
    ListRecipeVersionsResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token that you can use in a subsequent call to retrieve the
            next set of results.
        Recipes:
          allOf:
          - $ref: '#/components/schemas/RecipeList'
          description: A list of versions for the specified recipe.
      required:
      - Recipes
    ListRecipesRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults100'
          description: The maximum number of results to return in this request.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token returned by a previous call to retrieve the next
            set of results.
        RecipeVersion:
          allOf:
          - $ref: '#/components/schemas/RecipeVersion'
          description: 'Return only those recipes with a version identifier of `LATEST_WORKING`
            or `LATEST_PUBLISHED`. If `RecipeVersion` is omitted, `ListRecipes` returns
            all of the `LATEST_PUBLISHED` recipe versions.


            Valid values: `LATEST_WORKING` | `LATEST_PUBLISHED`'
    ListRecipesResponse:
      type: object
      properties:
        Recipes:
          allOf:
          - $ref: '#/components/schemas/RecipeList'
          description: A list of recipes that are defined.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token that you can use in a subsequent call to retrieve the
            next set of results.
      required:
      - Recipes
    ListRulesetsRequest:
      type: object
      properties:
        TargetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of a resource (dataset). Using
            this parameter indicates to return only those rulesets that are associated
            with the specified resource.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults100'
          description: The maximum number of results to return in this request.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token generated by DataBrew that specifies where to continue
            pagination if a previous request was truncated. To get the next set of
            pages, pass in the NextToken value from the response object of the previous
            page call.
    ListRulesetsResponse:
      type: object
      properties:
        Rulesets:
          allOf:
          - $ref: '#/components/schemas/RulesetItemList'
          description: A list of RulesetItem. RulesetItem contains meta data of a
            ruleset.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token that you can use in a subsequent call to retrieve the
            next set of results.
      required:
      - Rulesets
    ListSchedulesRequest:
      type: object
      properties:
        JobName:
          allOf:
          - $ref: '#/components/schemas/JobName'
          description: The name of the job that these schedules apply to.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults100'
          description: The maximum number of results to return in this request.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token returned by a previous call to retrieve the next
            set of results.
    ListSchedulesResponse:
      type: object
      properties:
        Schedules:
          allOf:
          - $ref: '#/components/schemas/ScheduleList'
          description: A list of schedules that are defined.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token that you can use in a subsequent call to retrieve the
            next set of results.
      required:
      - Schedules
    ListTagsForResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) string that uniquely identifies
            the DataBrew resource.
      required:
      - ResourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A list of tags associated with the DataBrew resource.
    LocaleCode:
      type: string
      pattern: ^[A-Za-z0-9_\.#@\-]+$
      minLength: 2
      maxLength: 100
    LogGroupName:
      type: string
      minLength: 1
      maxLength: 512
    LogSubscription:
      type: string
      enum:
      - ENABLE
      - DISABLE
    MaxCapacity:
      type: integer
      default: 0
    MaxFiles:
      type: integer
      minimum: 1
    MaxOutputFiles:
      type: integer
      minimum: 1
      maximum: 999
    MaxResults100:
      type: integer
      minimum: 1
      maximum: 100
    MaxRetries:
      type: integer
      default: 0
      minimum: 0
    Message:
      type: string
    Metadata:
      type: object
      properties:
        SourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) associated with the dataset.
            Currently, DataBrew only supports ARNs from Amazon AppFlow.
      description: Contains additional resource information needed for specific datasets.
    MultiLine:
      type: boolean
      default: false
    NextToken:
      type: string
      minLength: 1
      maxLength: 2000
    OpenedBy:
      type: string
    Operation:
      type: string
      pattern: ^[A-Z\_]+$
      minLength: 1
      maxLength: 128
    Order:
      type: string
      enum:
      - DESCENDING
      - ASCENDING
    OrderedBy:
      type: string
      enum:
      - LAST_MODIFIED_DATE
    Output:
      type: object
      properties:
        CompressionFormat:
          allOf:
          - $ref: '#/components/schemas/CompressionFormat'
          description: The compression algorithm used to compress the output text
            of the job.
        Format:
          allOf:
          - $ref: '#/components/schemas/OutputFormat'
          description: The data format of the output of the job.
        PartitionColumns:
          allOf:
          - $ref: '#/components/schemas/ColumnNameList'
          description: The names of one or more partition columns for the output of
            the job.
        Location:
          allOf:
          - $ref: '#/components/schemas/S3Location'
          description: The location in Amazon S3 where the job writes its output.
        Overwrite:
          allOf:
          - $ref: '#/components/schemas/OverwriteOutput'
          description: A value that, if true, means that any data in the location
            specified for output is overwritten with new output.
        FormatOptions:
          allOf:
          - $ref: '#/components/schemas/OutputFormatOptions'
          description: Represents options that define how DataBrew formats job output
            files.
        MaxOutputFiles:
          allOf:
          - $ref: '#/components/schemas/MaxOutputFiles'
          description: Maximum number of files to be generated by the job and written
            to the output folder. For output partitioned by column(s), the MaxOutputFiles
            value is the maximum number of files per partition.
      required:
      - Location
      description: Represents options that specify how and where in Amazon S3 DataBrew
        writes the output generated by recipe jobs or profile jobs.
    OutputFormat:
      type: string
      enum:
      - CSV
      - JSON
      - PARQUET
      - GLUEPARQUET
      - AVRO
      - ORC
      - XML
      - TABLEAUHYPER
    OutputFormatOptions:
      type: object
      properties:
        Csv:
          allOf:
          - $ref: '#/components/schemas/CsvOutputOptions'
          description: Represents a set of options that define the structure of comma-separated
            value (CSV) job output.
      description: Represents a set of options that define the structure of comma-separated
        (CSV) job output.
    OutputList:
      type: array
      items:
        $ref: '#/components/schemas/Output'
    OverwriteOutput:
      type: boolean
      default: false
    ParameterMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ParameterValue'
    ParameterName:
      type: string
      pattern: ^[A-Za-z0-9]+$
      minLength: 1
      maxLength: 128
    ParameterType:
      type: string
      enum:
      - Datetime
      - Number
      - String
    ParameterValue:
      type: string
      minLength: 1
      maxLength: 32768
    PathOptions:
      type: object
      properties:
        LastModifiedDateCondition:
          allOf:
          - $ref: '#/components/schemas/FilterExpression'
          description: If provided, this structure defines a date range for matching
            Amazon S3 objects based on their LastModifiedDate attribute in Amazon
            S3.
        FilesLimit:
          allOf:
          - $ref: '#/components/schemas/FilesLimit'
          description: If provided, this structure imposes a limit on a number of
            files that should be selected.
        Parameters:
          allOf:
          - $ref: '#/components/schemas/PathParametersMap'
          description: A structure that maps names of parameters used in the Amazon
            S3 path of a dataset to their definitions.
      description: Represents a set of options that define how DataBrew selects files
        for a given Amazon S3 path in a dataset.
    PathParameterName:
      type: string
      minLength: 1
      maxLength: 255
    PathParametersMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/DatasetParameter'
      description: "<p>A structure that map names of parameters used in the Amazon\
        \ S3 path of a dataset to their definitions. \n            A definition includes\
        \ parameter type and conditions.</p>"
    Preview:
      type: boolean
      default: false
    ProfileConfiguration:
      type: object
      properties:
        DatasetStatisticsConfiguration:
          allOf:
          - $ref: '#/components/schemas/StatisticsConfiguration'
          description: Configuration for inter-column evaluations. Configuration can
            be used to select evaluations and override parameters of evaluations.
            When configuration is undefined, the profile job will run all supported
            inter-column evaluations.
        ProfileColumns:
          allOf:
          - $ref: '#/components/schemas/ColumnSelectorList'
          description: List of column selectors. ProfileColumns can be used to select
            columns from the dataset. When ProfileColumns is undefined, the profile
            job will profile all supported columns.
        ColumnStatisticsConfigurations:
          allOf:
          - $ref: '#/components/schemas/ColumnStatisticsConfigurationList'
          description: List of configurations for column evaluations. ColumnStatisticsConfigurations
            are used to select evaluations and override parameters of evaluations
            for particular columns. When ColumnStatisticsConfigurations is undefined,
            the profile job will profile all supported columns and run all supported
            evaluations.
        EntityDetectorConfiguration:
          allOf:
          - $ref: '#/components/schemas/EntityDetectorConfiguration'
          description: Configuration of entity detection for a profile job. When undefined,
            entity detection is disabled.
      description: Configuration for profile jobs. Configuration can be used to select
        columns, do evaluations, and override default parameters of evaluations. When
        configuration is undefined, the profile job will apply default settings to
        all supported columns.
    Project:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The ID of the Amazon Web Services account that owns the project.
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time that the project was created.
        CreatedBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          description: The Amazon Resource Name (ARN) of the user who crated the project.
        DatasetName:
          allOf:
          - $ref: '#/components/schemas/DatasetName'
          description: The dataset that the project is to act upon.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The last modification date and time for the project.
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/LastModifiedBy'
          description: The Amazon Resource Name (ARN) of the user who last modified
            the project.
        Name:
          allOf:
          - $ref: '#/components/schemas/ProjectName'
          description: The unique name of a project.
        RecipeName:
          allOf:
          - $ref: '#/components/schemas/RecipeName'
          description: The name of a recipe that will be developed during a project
            session.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) for the project.
        Sample:
          allOf:
          - $ref: '#/components/schemas/Sample'
          description: The sample size and sampling type to apply to the data. If
            this parameter isn't specified, then the sample consists of the first
            500 rows from the dataset.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Metadata tags that have been applied to the project.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the role that will be assumed
            for this project.
        OpenedBy:
          allOf:
          - $ref: '#/components/schemas/OpenedBy'
          description: The Amazon Resource Name (ARN) of the user that opened the
            project for use.
        OpenDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time when the project was opened.
      required:
      - Name
      - RecipeName
      description: Represents all of the attributes of a DataBrew project.
    ProjectList:
      type: array
      items:
        $ref: '#/components/schemas/Project'
    ProjectName:
      type: string
      minLength: 1
      maxLength: 255
    PublishRecipeRequest:
      type: object
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/RecipeDescription'
          description: A description of the recipe to be published, for this version
            of the recipe.
        Name:
          allOf:
          - $ref: '#/components/schemas/RecipeName'
          description: The name of the recipe to be published.
      required:
      - Name
    PublishRecipeResponse:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/RecipeName'
          description: The name of the recipe that you published.
      required:
      - Name
    PublishedBy:
      type: string
    QueryString:
      type: string
      minLength: 1
      maxLength: 10000
    Recipe:
      type: object
      properties:
        CreatedBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          description: The Amazon Resource Name (ARN) of the user who created the
            recipe.
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time that the recipe was created.
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/LastModifiedBy'
          description: The Amazon Resource Name (ARN) of the user who last modified
            the recipe.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The last modification date and time of the recipe.
        ProjectName:
          allOf:
          - $ref: '#/components/schemas/ProjectName'
          description: The name of the project that the recipe is associated with.
        PublishedBy:
          allOf:
          - $ref: '#/components/schemas/PublishedBy'
          description: The Amazon Resource Name (ARN) of the user who published the
            recipe.
        PublishedDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time when the recipe was published.
        Description:
          allOf:
          - $ref: '#/components/schemas/RecipeDescription'
          description: The description of the recipe.
        Name:
          allOf:
          - $ref: '#/components/schemas/RecipeName'
          description: The unique name for the recipe.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) for the recipe.
        Steps:
          allOf:
          - $ref: '#/components/schemas/RecipeStepList'
          description: A list of steps that are defined by the recipe.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Metadata tags that have been applied to the recipe.
        RecipeVersion:
          allOf:
          - $ref: '#/components/schemas/RecipeVersion'
          description: "The identifier for the version for the recipe. Must be one\
            \ of the following:\n\n  * Numeric version (`X.Y`) - `X` and `Y` stand\
            \ for major and minor version numbers. The maximum length of each is 6\
            \ digits, and neither can be negative values. Both `X` and `Y` are required,\
            \ and \"0.0\" isn't a valid version.\n\n  * `LATEST_WORKING` \\- the most\
            \ recent valid version being developed in a DataBrew project.\n\n  * `LATEST_PUBLISHED`\
            \ \\- the most recent published version."
      required:
      - Name
      description: Represents one or more actions to be performed on a DataBrew dataset.
    RecipeAction:
      type: object
      properties:
        Operation:
          allOf:
          - $ref: '#/components/schemas/Operation'
          description: The name of a valid DataBrew transformation to be performed
            on the data.
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ParameterMap'
          description: Contextual parameters for the transformation.
      required:
      - Operation
      description: Represents a transformation and associated parameters that are
        used to apply a change to a DataBrew dataset. For more information, see [Recipe
        actions reference](https://docs.aws.amazon.com/databrew/latest/dg/recipe-actions-reference.html).
    RecipeDescription:
      type: string
      minLength: 0
      maxLength: 1024
    RecipeErrorList:
      type: array
      items:
        $ref: '#/components/schemas/RecipeVersionErrorDetail'
    RecipeErrorMessage:
      type: string
    RecipeList:
      type: array
      items:
        $ref: '#/components/schemas/Recipe'
    RecipeName:
      type: string
      minLength: 1
      maxLength: 255
    RecipeReference:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/RecipeName'
          description: The name of the recipe.
        RecipeVersion:
          allOf:
          - $ref: '#/components/schemas/RecipeVersion'
          description: The identifier for the version for the recipe.
      required:
      - Name
      description: Represents the name and version of a DataBrew recipe.
    RecipeStep:
      type: object
      properties:
        Action:
          allOf:
          - $ref: '#/components/schemas/RecipeAction'
          description: The particular action to be performed in the recipe step.
        ConditionExpressions:
          allOf:
          - $ref: '#/components/schemas/ConditionExpressionList'
          description: 'One or more conditions that must be met for the recipe step
            to succeed.


            All of the conditions in the array must be met. In other words, all of
            the conditions must be combined using a logical AND operation.'
      required:
      - Action
      description: Represents a single step from a DataBrew recipe to be performed.
    RecipeStepList:
      type: array
      items:
        $ref: '#/components/schemas/RecipeStep'
    RecipeVersion:
      type: string
      minLength: 1
      maxLength: 16
    RecipeVersionErrorDetail:
      type: object
      properties:
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/ErrorCode'
          description: The HTTP status code for the error.
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/RecipeErrorMessage'
          description: The text of the error message.
        RecipeVersion:
          allOf:
          - $ref: '#/components/schemas/RecipeVersion'
          description: The identifier for the recipe version associated with this
            error.
      description: Represents any errors encountered when attempting to delete multiple
        recipe versions.
    RecipeVersionList:
      type: array
      items:
        $ref: '#/components/schemas/RecipeVersion'
    ResourceNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
      description: One or more resources can't be found.
    Result:
      type: string
    RowRange:
      type: integer
    Rule:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/RuleName'
          description: The name of the rule.
        Disabled:
          allOf:
          - $ref: '#/components/schemas/Disabled'
          description: A value that specifies whether the rule is disabled. Once a
            rule is disabled, a profile job will not validate it during a job run.
            Default value is false.
        CheckExpression:
          allOf:
          - $ref: '#/components/schemas/Expression'
          description: 'The expression which includes column references, condition
            names followed by variable references, possibly grouped and combined with
            other conditions. For example, `(:col1 starts_with :prefix1 or :col1 starts_with
            :prefix2) and (:col1 ends_with :suffix1 or :col1 ends_with :suffix2)`.
            Column and value references are substitution variables that should start
            with the '':'' symbol. Depending on the context, substitution variables''
            values can be either an actual value or a column name. These values are
            defined in the SubstitutionMap. If a CheckExpression starts with a column
            reference, then ColumnSelectors in the rule should be null. If ColumnSelectors
            has been defined, then there should be no column reference in the left
            side of a condition, for example, `is_between :val1 and :val2`.


            For more information, see [Available checks](https://docs.aws.amazon.com/databrew/latest/dg/profile.data-quality-available-checks.html)'
        SubstitutionMap:
          allOf:
          - $ref: '#/components/schemas/ValuesMap'
          description: 'The map of substitution variable names to their values used
            in a check expression. Variable names should start with a '':'' (colon).
            Variable values can either be actual values or column names. To differentiate
            between the two, column names should be enclosed in backticks, for example,
            `":col1": "`Column A`".`'
        Threshold:
          allOf:
          - $ref: '#/components/schemas/Threshold'
          description: The threshold used with a non-aggregate check expression. Non-aggregate
            check expressions will be applied to each row in a specific column, and
            the threshold will be used to determine whether the validation succeeds.
        ColumnSelectors:
          allOf:
          - $ref: '#/components/schemas/ColumnSelectorList'
          description: List of column selectors. Selectors can be used to select columns
            using a name or regular expression from the dataset. Rule will be applied
            to selected columns.
      required:
      - Name
      - CheckExpression
      description: Represents a single data quality requirement that should be validated
        in the scope of this dataset.
    RuleCount:
      type: integer
      default: 0
      minimum: 0
    RuleList:
      type: array
      items:
        $ref: '#/components/schemas/Rule'
    RuleName:
      type: string
      minLength: 1
      maxLength: 128
    RulesetDescription:
      type: string
      minLength: 0
      maxLength: 1024
    RulesetItem:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The ID of the Amazon Web Services account that owns the ruleset.
        CreatedBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          description: The Amazon Resource Name (ARN) of the user who created the
            ruleset.
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time that the ruleset was created.
        Description:
          allOf:
          - $ref: '#/components/schemas/RulesetDescription'
          description: The description of the ruleset.
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/LastModifiedBy'
          description: The Amazon Resource Name (ARN) of the user who last modified
            the ruleset.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The modification date and time of the ruleset.
        Name:
          allOf:
          - $ref: '#/components/schemas/RulesetName'
          description: The name of the ruleset.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) for the ruleset.
        RuleCount:
          allOf:
          - $ref: '#/components/schemas/RuleCount'
          description: The number of rules that are defined in the ruleset.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Metadata tags that have been applied to the ruleset.
        TargetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of a resource (dataset) that
            the ruleset is associated with.
      required:
      - Name
      - TargetArn
      description: Contains metadata about the ruleset.
    RulesetItemList:
      type: array
      items:
        $ref: '#/components/schemas/RulesetItem'
    RulesetName:
      type: string
      minLength: 1
      maxLength: 255
    S3Location:
      type: object
      properties:
        Bucket:
          allOf:
          - $ref: '#/components/schemas/Bucket'
          description: The Amazon S3 bucket name.
        Key:
          allOf:
          - $ref: '#/components/schemas/Key'
          description: The unique name of the object in the bucket.
        BucketOwner:
          allOf:
          - $ref: '#/components/schemas/BucketOwner'
          description: The Amazon Web Services account ID of the bucket owner.
      required:
      - Bucket
      description: Represents an Amazon S3 location (bucket name, bucket owner, and
        object key) where DataBrew can read input data, or write output from a job.
    S3TableOutputOptions:
      type: object
      properties:
        Location:
          allOf:
          - $ref: '#/components/schemas/S3Location'
          description: Represents an Amazon S3 location (bucket name and object key)
            where DataBrew can write output from a job.
      required:
      - Location
      description: Represents options that specify how and where DataBrew writes the
        Amazon S3 output generated by recipe jobs.
    Sample:
      type: object
      properties:
        Size:
          allOf:
          - $ref: '#/components/schemas/SampleSize'
          description: The number of rows in the sample.
        Type:
          allOf:
          - $ref: '#/components/schemas/SampleType'
          description: The way in which DataBrew obtains rows from a dataset.
      required:
      - Type
      description: Represents the sample size and sampling type for DataBrew to use
        for interactive data analysis.
    SampleMode:
      type: string
      enum:
      - FULL_DATASET
      - CUSTOM_ROWS
    SampleSize:
      type: integer
      minimum: 1
      maximum: 5000
    SampleType:
      type: string
      enum:
      - FIRST_N
      - LAST_N
      - RANDOM
    Schedule:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The ID of the Amazon Web Services account that owns the schedule.
        CreatedBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          description: The Amazon Resource Name (ARN) of the user who created the
            schedule.
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time that the schedule was created.
        JobNames:
          allOf:
          - $ref: '#/components/schemas/JobNameList'
          description: A list of jobs to be run, according to the schedule.
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/LastModifiedBy'
          description: The Amazon Resource Name (ARN) of the user who last modified
            the schedule.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time when the schedule was last modified.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the schedule.
        CronExpression:
          allOf:
          - $ref: '#/components/schemas/CronExpression'
          description: The dates and times when the job is to run. For more information,
            see [Cron expressions](https://docs.aws.amazon.com/databrew/latest/dg/jobs.cron.html)
            in the _Glue DataBrew Developer Guide_.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Metadata tags that have been applied to the schedule.
        Name:
          allOf:
          - $ref: '#/components/schemas/ScheduleName'
          description: The name of the schedule.
      required:
      - Name
      description: Represents one or more dates and times when a job is to run.
    ScheduleList:
      type: array
      items:
        $ref: '#/components/schemas/Schedule'
    ScheduleName:
      type: string
      minLength: 1
      maxLength: 255
    SendProjectSessionActionRequest:
      type: object
      properties:
        Preview:
          allOf:
          - $ref: '#/components/schemas/Preview'
          description: If true, the result of the recipe step will be returned, but
            not applied.
        Name:
          allOf:
          - $ref: '#/components/schemas/ProjectName'
          description: The name of the project to apply the action to.
        RecipeStep:
          $ref: '#/components/schemas/RecipeStep'
        StepIndex:
          allOf:
          - $ref: '#/components/schemas/StepIndex'
          description: The index from which to preview a step. This index is used
            to preview the result of steps that have already been applied, so that
            the resulting view frame is from earlier in the view frame stack.
        ClientSessionId:
          allOf:
          - $ref: '#/components/schemas/ClientSessionId'
          description: A unique identifier for an interactive session that's currently
            open and ready for work. The action will be performed on this session.
        ViewFrame:
          $ref: '#/components/schemas/ViewFrame'
      required:
      - Name
    SendProjectSessionActionResponse:
      type: object
      properties:
        Result:
          allOf:
          - $ref: '#/components/schemas/Result'
          description: A message indicating the result of performing the action.
        Name:
          allOf:
          - $ref: '#/components/schemas/ProjectName'
          description: The name of the project that was affected by the action.
        ActionId:
          allOf:
          - $ref: '#/components/schemas/ActionId'
          description: A unique identifier for the action that was performed.
      required:
      - Name
    ServiceQuotaExceededException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
      description: A service quota is exceeded.
    SessionStatus:
      type: string
      enum:
      - ASSIGNED
      - FAILED
      - INITIALIZING
      - PROVISIONING
      - READY
      - RECYCLING
      - ROTATING
      - TERMINATED
      - TERMINATING
      - UPDATING
    SheetIndex:
      type: integer
      minimum: 0
      maximum: 200
    SheetIndexList:
      type: array
      items:
        $ref: '#/components/schemas/SheetIndex'
    SheetName:
      type: string
      minLength: 1
      maxLength: 31
    SheetNameList:
      type: array
      items:
        $ref: '#/components/schemas/SheetName'
    Source:
      type: string
      enum:
      - S3
      - DATA-CATALOG
      - DATABASE
    StartColumnIndex:
      type: integer
      minimum: 0
    StartJobRunRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/JobName'
          description: The name of the job to be run.
      required:
      - Name
    StartJobRunResponse:
      type: object
      properties:
        RunId:
          allOf:
          - $ref: '#/components/schemas/JobRunId'
          description: A system-generated identifier for this particular job run.
      required:
      - RunId
    StartProjectSessionRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ProjectName'
          description: The name of the project to act upon.
        AssumeControl:
          allOf:
          - $ref: '#/components/schemas/AssumeControl'
          description: A value that, if true, enables you to take control of a session,
            even if a different client is currently accessing the project.
      required:
      - Name
    StartProjectSessionResponse:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ProjectName'
          description: The name of the project to be acted upon.
        ClientSessionId:
          allOf:
          - $ref: '#/components/schemas/ClientSessionId'
          description: A system-generated identifier for the session.
      required:
      - Name
    StartRowIndex:
      type: integer
      minimum: 0
    StartedBy:
      type: string
    Statistic:
      type: string
      pattern: ^[A-Z\_]+$
      minLength: 1
      maxLength: 128
    StatisticList:
      type: array
      items:
        $ref: '#/components/schemas/Statistic'
    StatisticOverride:
      type: object
      properties:
        Statistic:
          allOf:
          - $ref: '#/components/schemas/Statistic'
          description: The name of an evaluation
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ParameterMap'
          description: A map that includes overrides of an evaluation’s parameters.
      required:
      - Statistic
      - Parameters
      description: Override of a particular evaluation for a profile job.
    StatisticOverrideList:
      type: array
      items:
        $ref: '#/components/schemas/StatisticOverride'
    StatisticsConfiguration:
      type: object
      properties:
        IncludedStatistics:
          allOf:
          - $ref: '#/components/schemas/StatisticList'
          description: List of included evaluations. When the list is undefined, all
            supported evaluations will be included.
        Overrides:
          allOf:
          - $ref: '#/components/schemas/StatisticOverrideList'
          description: List of overrides for evaluations.
      description: Configuration of evaluations for a profile job. This configuration
        can be used to select evaluations and override the parameters of selected
        evaluations.
    StepIndex:
      type: integer
      minimum: 0
    StopJobRunRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/JobName'
          description: The name of the job to be stopped.
        RunId:
          allOf:
          - $ref: '#/components/schemas/JobRunId'
          description: The ID of the job run to be stopped.
      required:
      - Name
      - RunId
    StopJobRunResponse:
      type: object
      properties:
        RunId:
          allOf:
          - $ref: '#/components/schemas/JobRunId'
          description: The ID of the job run that you stopped.
      required:
      - RunId
    TableName:
      type: string
      minLength: 1
      maxLength: 255
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The DataBrew resource to which tags should be added. The value
            for this parameter is an Amazon Resource Name (ARN). For DataBrew, you
            can tag a dataset, a job, a project, or a recipe.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: One or more tags to be assigned to the resource.
      required:
      - ResourceArn
      - Tags
    TagResourceResponse:
      type: object
      properties: {}
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    TargetColumn:
      type: string
      minLength: 1
      maxLength: 1024
    Threshold:
      type: object
      properties:
        Value:
          allOf:
          - $ref: '#/components/schemas/ThresholdValue'
          description: The value of a threshold.
        Type:
          allOf:
          - $ref: '#/components/schemas/ThresholdType'
          description: The type of a threshold. Used for comparison of an actual count
            of rows that satisfy the rule to the threshold value.
        Unit:
          allOf:
          - $ref: '#/components/schemas/ThresholdUnit'
          description: Unit of threshold value. Can be either a COUNT or PERCENTAGE
            of the full sample size used for validation.
      required:
      - Value
      description: The threshold used with a non-aggregate check expression. The non-aggregate
        check expression will be applied to each row in a specific column. Then the
        threshold will be used to determine whether the validation succeeds.
    ThresholdType:
      type: string
      enum:
      - GREATER_THAN_OR_EQUAL
      - LESS_THAN_OR_EQUAL
      - GREATER_THAN
      - LESS_THAN
    ThresholdUnit:
      type: string
      enum:
      - COUNT
      - PERCENTAGE
    ThresholdValue:
      type: number
      format: double
      default: 0
      minimum: 0
    Timeout:
      type: integer
      default: 0
      minimum: 0
    TimezoneOffset:
      type: string
      pattern: ^(Z|[-+](\d|\d{2}|\d{2}:?\d{2}))$
      minLength: 1
      maxLength: 6
    UntagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: A DataBrew resource from which you want to remove a tag or
            tags. The value for this parameter is an Amazon Resource Name (ARN).
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: The tag keys (names) of one or more tags to be removed.
      required:
      - ResourceArn
      - TagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateDatasetRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DatasetName'
          description: The name of the dataset to be updated.
        Format:
          allOf:
          - $ref: '#/components/schemas/InputFormat'
          description: The file format of a dataset that is created from an Amazon
            S3 file or folder.
        FormatOptions:
          $ref: '#/components/schemas/FormatOptions'
        Input:
          $ref: '#/components/schemas/Input'
        PathOptions:
          allOf:
          - $ref: '#/components/schemas/PathOptions'
          description: A set of options that defines how DataBrew interprets an Amazon
            S3 path of the dataset.
      required:
      - Name
      - Input
    UpdateDatasetResponse:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DatasetName'
          description: The name of the dataset that you updated.
      required:
      - Name
    UpdateProfileJobRequest:
      type: object
      properties:
        Configuration:
          allOf:
          - $ref: '#/components/schemas/ProfileConfiguration'
          description: Configuration for profile jobs. Used to select columns, do
            evaluations, and override default parameters of evaluations. When configuration
            is null, the profile job will run with default settings.
        EncryptionKeyArn:
          allOf:
          - $ref: '#/components/schemas/EncryptionKeyArn'
          description: The Amazon Resource Name (ARN) of an encryption key that is
            used to protect the job.
        EncryptionMode:
          allOf:
          - $ref: '#/components/schemas/EncryptionMode'
          description: "The encryption mode for the job, which can be one of the following:\n\
            \n  * `SSE-KMS` \\- Server-side encryption with keys managed by KMS.\n\
            \n  * `SSE-S3` \\- Server-side encryption with keys managed by Amazon\
            \ S3."
        Name:
          allOf:
          - $ref: '#/components/schemas/JobName'
          description: The name of the job to be updated.
        LogSubscription:
          allOf:
          - $ref: '#/components/schemas/LogSubscription'
          description: Enables or disables Amazon CloudWatch logging for the job.
            If logging is enabled, CloudWatch writes one log stream for each job run.
        MaxCapacity:
          allOf:
          - $ref: '#/components/schemas/MaxCapacity'
          description: The maximum number of compute nodes that DataBrew can use when
            the job processes data.
        MaxRetries:
          allOf:
          - $ref: '#/components/schemas/MaxRetries'
          description: The maximum number of times to retry the job after a job run
            fails.
        OutputLocation:
          $ref: '#/components/schemas/S3Location'
        ValidationConfigurations:
          allOf:
          - $ref: '#/components/schemas/ValidationConfigurationList'
          description: List of validation configurations that are applied to the profile
            job.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the Identity and Access Management
            (IAM) role to be assumed when DataBrew runs the job.
        Timeout:
          allOf:
          - $ref: '#/components/schemas/Timeout'
          description: The job's timeout in minutes. A job that attempts to run longer
            than this timeout period ends with a status of `TIMEOUT`.
        JobSample:
          allOf:
          - $ref: '#/components/schemas/JobSample'
          description: Sample configuration for Profile Jobs only. Determines the
            number of rows on which the Profile job will be executed. If a JobSample
            value is not provided for profile jobs, the default value will be used.
            The default value is CUSTOM_ROWS for the mode parameter and 20000 for
            the size parameter.
      required:
      - Name
      - OutputLocation
      - RoleArn
    UpdateProfileJobResponse:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/JobName'
          description: The name of the job that was updated.
      required:
      - Name
    UpdateProjectRequest:
      type: object
      properties:
        Sample:
          $ref: '#/components/schemas/Sample'
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the IAM role to be assumed
            for this request.
        Name:
          allOf:
          - $ref: '#/components/schemas/ProjectName'
          description: The name of the project to be updated.
      required:
      - RoleArn
      - Name
    UpdateProjectResponse:
      type: object
      properties:
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time that the project was last modified.
        Name:
          allOf:
          - $ref: '#/components/schemas/ProjectName'
          description: The name of the project that you updated.
      required:
      - Name
    UpdateRecipeJobRequest:
      type: object
      properties:
        EncryptionKeyArn:
          allOf:
          - $ref: '#/components/schemas/EncryptionKeyArn'
          description: The Amazon Resource Name (ARN) of an encryption key that is
            used to protect the job.
        EncryptionMode:
          allOf:
          - $ref: '#/components/schemas/EncryptionMode'
          description: "The encryption mode for the job, which can be one of the following:\n\
            \n  * `SSE-KMS` \\- Server-side encryption with keys managed by KMS.\n\
            \n  * `SSE-S3` \\- Server-side encryption with keys managed by Amazon\
            \ S3."
        Name:
          allOf:
          - $ref: '#/components/schemas/JobName'
          description: The name of the job to update.
        LogSubscription:
          allOf:
          - $ref: '#/components/schemas/LogSubscription'
          description: Enables or disables Amazon CloudWatch logging for the job.
            If logging is enabled, CloudWatch writes one log stream for each job run.
        MaxCapacity:
          allOf:
          - $ref: '#/components/schemas/MaxCapacity'
          description: The maximum number of nodes that DataBrew can consume when
            the job processes data.
        MaxRetries:
          allOf:
          - $ref: '#/components/schemas/MaxRetries'
          description: The maximum number of times to retry the job after a job run
            fails.
        Outputs:
          allOf:
          - $ref: '#/components/schemas/OutputList'
          description: One or more artifacts that represent the output from running
            the job.
        DataCatalogOutputs:
          allOf:
          - $ref: '#/components/schemas/DataCatalogOutputList'
          description: One or more artifacts that represent the Glue Data Catalog
            output from running the job.
        DatabaseOutputs:
          allOf:
          - $ref: '#/components/schemas/DatabaseOutputList'
          description: Represents a list of JDBC database output objects which defines
            the output destination for a DataBrew recipe job to write into.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the Identity and Access Management
            (IAM) role to be assumed when DataBrew runs the job.
        Timeout:
          allOf:
          - $ref: '#/components/schemas/Timeout'
          description: The job's timeout in minutes. A job that attempts to run longer
            than this timeout period ends with a status of `TIMEOUT`.
      required:
      - Name
      - RoleArn
    UpdateRecipeJobResponse:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/JobName'
          description: The name of the job that you updated.
      required:
      - Name
    UpdateRecipeRequest:
      type: object
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/RecipeDescription'
          description: A description of the recipe.
        Name:
          allOf:
          - $ref: '#/components/schemas/RecipeName'
          description: The name of the recipe to be updated.
        Steps:
          allOf:
          - $ref: '#/components/schemas/RecipeStepList'
          description: One or more steps to be performed by the recipe. Each step
            consists of an action, and the conditions under which the action should
            succeed.
      required:
      - Name
    UpdateRecipeResponse:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/RecipeName'
          description: The name of the recipe that was updated.
      required:
      - Name
    UpdateRulesetRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/RulesetName'
          description: The name of the ruleset to be updated.
        Description:
          allOf:
          - $ref: '#/components/schemas/RulesetDescription'
          description: The description of the ruleset.
        Rules:
          allOf:
          - $ref: '#/components/schemas/RuleList'
          description: A list of rules that are defined with the ruleset. A rule includes
            one or more checks to be validated on a DataBrew dataset.
      required:
      - Name
      - Rules
    UpdateRulesetResponse:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/RulesetName'
          description: The name of the updated ruleset.
      required:
      - Name
    UpdateScheduleRequest:
      type: object
      properties:
        JobNames:
          allOf:
          - $ref: '#/components/schemas/JobNameList'
          description: The name or names of one or more jobs to be run for this schedule.
        CronExpression:
          allOf:
          - $ref: '#/components/schemas/CronExpression'
          description: The date or dates and time or times when the jobs are to be
            run. For more information, see [Cron expressions](https://docs.aws.amazon.com/databrew/latest/dg/jobs.cron.html)
            in the _Glue DataBrew Developer Guide_.
        Name:
          allOf:
          - $ref: '#/components/schemas/ScheduleName'
          description: The name of the schedule to update.
      required:
      - CronExpression
      - Name
    UpdateScheduleResponse:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ScheduleName'
          description: The name of the schedule that was updated.
      required:
      - Name
    ValidationConfiguration:
      type: object
      properties:
        RulesetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) for the ruleset to be validated
            in the profile job. The TargetArn of the selected ruleset should be the
            same as the Amazon Resource Name (ARN) of the dataset that is associated
            with the profile job.
        ValidationMode:
          allOf:
          - $ref: '#/components/schemas/ValidationMode'
          description: Mode of data quality validation. Default mode is “CHECK_ALL”
            which verifies all rules defined in the selected ruleset.
      required:
      - RulesetArn
      description: Configuration for data quality validation. Used to select the Rulesets
        and Validation Mode to be used in the profile job. When ValidationConfiguration
        is null, the profile job will run without data quality validation.
    ValidationConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/ValidationConfiguration'
    ValidationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
      description: The input parameters for this request failed validation.
    ValidationMode:
      type: string
      enum:
      - CHECK_ALL
    ValueReference:
      type: string
      pattern: ^:[A-Za-z0-9_]+$
      minLength: 2
      maxLength: 128
    ValuesMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ConditionValue'
    ViewFrame:
      type: object
      properties:
        StartColumnIndex:
          allOf:
          - $ref: '#/components/schemas/StartColumnIndex'
          description: The starting index for the range of columns to return in the
            view frame.
        ColumnRange:
          allOf:
          - $ref: '#/components/schemas/ColumnRange'
          description: The number of columns to include in the view frame, beginning
            with the `StartColumnIndex` value and ignoring any columns in the `HiddenColumns`
            list.
        HiddenColumns:
          allOf:
          - $ref: '#/components/schemas/HiddenColumnList'
          description: A list of columns to hide in the view frame.
        StartRowIndex:
          allOf:
          - $ref: '#/components/schemas/StartRowIndex'
          description: The starting index for the range of rows to return in the view
            frame.
        RowRange:
          allOf:
          - $ref: '#/components/schemas/RowRange'
          description: The number of rows to include in the view frame, beginning
            with the `StartRowIndex` value.
        Analytics:
          allOf:
          - $ref: '#/components/schemas/AnalyticsMode'
          description: Controls if analytics computation is enabled or disabled. Enabled
            by default.
      required:
      - StartColumnIndex
      description: Represents the data being transformed during an action.
