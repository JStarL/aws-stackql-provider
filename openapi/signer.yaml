openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: signer
  x-aws-serviceName: signer
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2017-08-25'
  title: AWS Signer
  description: |-
    AWS Signer is a fully managed code-signing service to help you ensure the trust and integrity of your code.

    Signer supports the following applications:

    With code signing for AWS Lambda, you can sign [AWS Lambda](http://docs.aws.amazon.com/lambda/latest/dg/) deployment packages. Integrated support is provided for [Amazon S3](http://docs.aws.amazon.com/AmazonS3/latest/gsg/), [Amazon CloudWatch](http://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/), and [AWS CloudTrail](http://docs.aws.amazon.com/awscloudtrail/latest/userguide/). In order to sign code, you create a signing profile and then use Signer to sign Lambda zip files in S3.

    With code signing for IoT, you can sign code for any IoT device that is supported by AWS. IoT code signing is available for [Amazon FreeRTOS](http://docs.aws.amazon.com/freertos/latest/userguide/) and [AWS IoT Device Management](http://docs.aws.amazon.com/iot/latest/developerguide/), and is integrated with [AWS Certificate Manager (ACM)](http://docs.aws.amazon.com/acm/latest/userguide/). In order to sign code, you import a third-party code-signing certificate using ACM, and use that to sign updates in Amazon FreeRTOS and AWS IoT Device Management.

    With Signer and the Notation CLI from the [Notary Project](https://notaryproject.dev/), you can sign container images stored in a container registry such as Amazon Elastic Container Registry (ECR). The signatures are stored in the registry alongside the images, where they are available for verifying image authenticity and integrity.

    For more information about Signer, see the [AWS Signer Developer Guide](https://docs.aws.amazon.com/signer/latest/developerguide/Welcome.html).
servers:
- description: The AWS Signer regional endpoint
  url: https://signer.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /signing-profiles/{profileName}/permissions:
    post:
      operationId: AddProfilePermission
      description: |-
        Adds cross-account permissions to a signing profile.
      parameters:
      - name: profileName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ProfileName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                profileVersion:
                  $ref: '#/components/schemas/ProfileVersion'
                action:
                  $ref: '#/components/schemas/String'
                principal:
                  $ref: '#/components/schemas/String'
                revisionId:
                  $ref: '#/components/schemas/String'
                statementId:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The resource encountered a conflicting state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
        '404':
          description: |-
            A specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The client is making a request that exceeds service limits.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLimitExceededException'
        '429':
          description: |-
            The allowed number of job-signing requests has been exceeded.

            This error supersedes the error `ThrottlingException`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '400':
          description: |-
            You signing certificate could not be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListProfilePermissions
      description: |-
        Lists the cross-account permissions associated with a signing profile.
      parameters:
      - name: profileName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ProfileName'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
        '404':
          description: |-
            A specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The allowed number of job-signing requests has been exceeded.

            This error supersedes the error `ThrottlingException`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '400':
          description: |-
            You signing certificate could not be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /signing-profiles/{profileName}:
    delete:
      operationId: CancelSigningProfile
      description: |-
        Changes the state of an `ACTIVE` signing profile to `CANCELED`. A canceled profile is still viewable with the `ListSigningProfiles` operation, but it cannot perform new signing jobs, and is deleted two years after cancelation.
      parameters:
      - name: profileName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ProfileName'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
        '404':
          description: |-
            A specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The allowed number of job-signing requests has been exceeded.

            This error supersedes the error `ThrottlingException`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetSigningProfile
      description: |-
        Returns information on a specific signing profile.
      parameters:
      - name: profileName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ProfileName'
      - name: profileOwner
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AccountId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
        '404':
          description: |-
            A specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The allowed number of job-signing requests has been exceeded.

            This error supersedes the error `ThrottlingException`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: PutSigningProfile
      description: |-
        Creates a signing profile. A signing profile is a code-signing template that can be used to carry out a pre-defined signing job.
      parameters:
      - name: profileName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ProfileName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                signingMaterial:
                  $ref: '#/components/schemas/SigningMaterial'
                signatureValidityPeriod:
                  $ref: '#/components/schemas/SignatureValidityPeriod'
                platformId:
                  $ref: '#/components/schemas/PlatformId'
                overrides:
                  $ref: '#/components/schemas/SigningPlatformOverrides'
                signingParameters:
                  $ref: '#/components/schemas/SigningParameters'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
        '404':
          description: |-
            A specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The allowed number of job-signing requests has been exceeded.

            This error supersedes the error `ThrottlingException`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '400':
          description: |-
            You signing certificate could not be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /signing-jobs/{jobId}:
    get:
      operationId: DescribeSigningJob
      description: |-
        Returns information about a specific code signing job. You specify the job by using the `jobId` value that is returned by the StartSigningJob operation.
      parameters:
      - name: jobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
        '404':
          description: |-
            A specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The allowed number of job-signing requests has been exceeded.

            This error supersedes the error `ThrottlingException`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /revocations:
    get:
      operationId: GetRevocationStatus
      description: |-
        Retrieves the revocation status of one or more of the signing profile, signing job, and signing certificate.
      parameters:
      - name: signatureTimestamp
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: platformId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/PlatformId'
      - name: profileVersionArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      - name: jobArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      - name: certificateHashes
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/CertificateHashes'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
        '429':
          description: |-
            The allowed number of job-signing requests has been exceeded.

            This error supersedes the error `ThrottlingException`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '400':
          description: |-
            You signing certificate could not be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /signing-platforms/{platformId}:
    get:
      operationId: GetSigningPlatform
      description: |-
        Returns information on a specific signing platform.
      parameters:
      - name: platformId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PlatformId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
        '404':
          description: |-
            A specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The allowed number of job-signing requests has been exceeded.

            This error supersedes the error `ThrottlingException`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /signing-jobs:
    get:
      operationId: ListSigningJobs
      description: |-
        Lists all your signing jobs. You can use the `maxResults` parameter to limit the number of signing jobs that are returned in the response. If additional jobs remain to be listed, AWS Signer returns a `nextToken` value. Use this value in subsequent calls to `ListSigningJobs` to fetch the remaining values. You can continue calling `ListSigningJobs` with your `maxResults` parameter and with new values that Signer returns in the `nextToken` parameter until all of your signing jobs have been returned.
      parameters:
      - name: status
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SigningStatus'
      - name: platformId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PlatformId'
      - name: requestedBy
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/RequestedBy'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: isRevoked
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/bool'
      - name: signatureExpiresBefore
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: signatureExpiresAfter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: jobInvoker
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AccountId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
        '429':
          description: |-
            The allowed number of job-signing requests has been exceeded.

            This error supersedes the error `ThrottlingException`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '400':
          description: |-
            You signing certificate could not be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: StartSigningJob
      description: "Initiates a signing job to be performed on the code provided.\
        \ Signing jobs are viewable by the `ListSigningJobs` operation for two years\
        \ after they are performed. Note the following requirements:\n\n  * You must\
        \ create an Amazon S3 source bucket. For more information, see [Creating a\
        \ Bucket](http://docs.aws.amazon.com/AmazonS3/latest/gsg/CreatingABucket.html)\
        \ in the _Amazon S3 Getting Started Guide_. \n\n  * Your S3 source bucket\
        \ must be version enabled.\n\n  * You must create an S3 destination bucket.\
        \ AWS Signer uses your S3 destination bucket to write your signed code.\n\n\
        \  * You specify the name of the source and destination buckets when calling\
        \ the `StartSigningJob` operation.\n\n  * You must ensure the S3 buckets are\
        \ from the same Region as the signing profile. Cross-Region signing isn't\
        \ supported.\n\n  * You must also specify a request token that identifies\
        \ your request to Signer.\n\nYou can call the DescribeSigningJob and the ListSigningJobs\
        \ actions after you call `StartSigningJob`.\n\nFor a Java example that shows\
        \ how to use this action, see [StartSigningJob](https://docs.aws.amazon.com/signer/latest/developerguide/api-startsigningjob.html)."
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                source:
                  $ref: '#/components/schemas/Source'
                destination:
                  $ref: '#/components/schemas/Destination'
                profileName:
                  $ref: '#/components/schemas/ProfileName'
                clientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
                profileOwner:
                  $ref: '#/components/schemas/AccountId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
        '404':
          description: |-
            A specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The allowed number of job-signing requests has been exceeded.

            This error supersedes the error `ThrottlingException`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '400':
          description: |-
            You signing certificate could not be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /signing-platforms:
    get:
      operationId: ListSigningPlatforms
      description: |-
        Lists all signing platforms available in AWS Signer that match the request parameters. If additional jobs remain to be listed, Signer returns a `nextToken` value. Use this value in subsequent calls to `ListSigningJobs` to fetch the remaining values. You can continue calling `ListSigningJobs` with your `maxResults` parameter and with new values that Signer returns in the `nextToken` parameter until all of your signing jobs have been returned.
      parameters:
      - name: category
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: partner
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: target
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
        '429':
          description: |-
            The allowed number of job-signing requests has been exceeded.

            This error supersedes the error `ThrottlingException`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '400':
          description: |-
            You signing certificate could not be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /signing-profiles:
    get:
      operationId: ListSigningProfiles
      description: |-
        Lists all available signing profiles in your AWS account. Returns only profiles with an `ACTIVE` status unless the `includeCanceled` request field is set to `true`. If additional jobs remain to be listed, AWS Signer returns a `nextToken` value. Use this value in subsequent calls to `ListSigningJobs` to fetch the remaining values. You can continue calling `ListSigningJobs` with your `maxResults` parameter and with new values that Signer returns in the `nextToken` parameter until all of your signing jobs have been returned.
      parameters:
      - name: includeCanceled
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/bool'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: platformId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PlatformId'
      - name: statuses
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Statuses'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
        '429':
          description: |-
            The allowed number of job-signing requests has been exceeded.

            This error supersedes the error `ThrottlingException`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /tags/{resourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Returns a list of the tags associated with a signing profile resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The request contains invalid parameters for the ARN or tags. This exception also occurs when you call a tagging API on a cancelled signing profile.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
        '404':
          description: |-
            The signing profile was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            The allowed number of job-signing requests has been exceeded.

            This error supersedes the error `ThrottlingException`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    post:
      operationId: TagResource
      description: |-
        Adds one or more tags to a signing profile. Tags are labels that you can use to identify and organize your AWS resources. Each tag consists of a key and an optional value. To specify the signing profile, use its Amazon Resource Name (ARN). To specify the tag, use a key-value pair.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '400':
          description: |-
            The request contains invalid parameters for the ARN or tags. This exception also occurs when you call a tagging API on a cancelled signing profile.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
        '404':
          description: |-
            The signing profile was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            The allowed number of job-signing requests has been exceeded.

            This error supersedes the error `ThrottlingException`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    delete:
      operationId: UntagResource
      description: |-
        Removes one or more tags from a signing profile. To remove the tags, specify a list of tag keys.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeyList'
      responses:
        '200': {}
        '400':
          description: |-
            The request contains invalid parameters for the ARN or tags. This exception also occurs when you call a tagging API on a cancelled signing profile.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
        '404':
          description: |-
            The signing profile was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            The allowed number of job-signing requests has been exceeded.

            This error supersedes the error `ThrottlingException`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /signing-profiles/{profileName}/permissions/{statementId}:
    delete:
      operationId: RemoveProfilePermission
      description: |-
        Removes cross-account permissions from a signing profile.
      parameters:
      - name: profileName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ProfileName'
      - name: revisionId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: statementId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The resource encountered a conflicting state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
        '404':
          description: |-
            A specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The allowed number of job-signing requests has been exceeded.

            This error supersedes the error `ThrottlingException`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '400':
          description: |-
            You signing certificate could not be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /signing-jobs/{jobId}/revoke:
    put:
      operationId: RevokeSignature
      description: |-
        Changes the state of a signing job to REVOKED. This indicates that the signature is no longer valid.
      parameters:
      - name: jobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                jobOwner:
                  $ref: '#/components/schemas/AccountId'
                reason:
                  $ref: '#/components/schemas/RevocationReasonString'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
        '404':
          description: |-
            A specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The allowed number of job-signing requests has been exceeded.

            This error supersedes the error `ThrottlingException`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '400':
          description: |-
            You signing certificate could not be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /signing-profiles/{profileName}/revoke:
    put:
      operationId: RevokeSigningProfile
      description: |-
        Changes the state of a signing profile to REVOKED. This indicates that signatures generated using the signing profile after an effective start date are no longer valid.
      parameters:
      - name: profileName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ProfileName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                profileVersion:
                  $ref: '#/components/schemas/ProfileVersion'
                reason:
                  $ref: '#/components/schemas/RevocationReasonString'
                effectiveTime:
                  $ref: '#/components/schemas/Timestamp'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
        '404':
          description: |-
            A specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The allowed number of job-signing requests has been exceeded.

            This error supersedes the error `ThrottlingException`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '400':
          description: |-
            You signing certificate could not be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /signing-jobs/with-payload:
    post:
      operationId: SignPayload
      description: |-
        Signs a binary payload and returns a signature envelope.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                profileName:
                  $ref: '#/components/schemas/ProfileName'
                profileOwner:
                  $ref: '#/components/schemas/AccountId'
                payload:
                  $ref: '#/components/schemas/Payload'
                payloadFormat:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
        '404':
          description: |-
            A specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The allowed number of job-signing requests has been exceeded.

            This error supersedes the error `ThrottlingException`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '400':
          description: |-
            You signing certificate could not be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    AccessDeniedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
        code:
          $ref: '#/components/schemas/ErrorCode'
      description: You do not have sufficient access to perform this action.
    AccountId:
      type: string
      pattern: ^[0-9]{12}$
      minLength: 12
      maxLength: 12
    AddProfilePermissionRequest:
      type: object
      properties:
        profileName:
          allOf:
          - $ref: '#/components/schemas/ProfileName'
          description: The human-readable name of the signing profile.
        profileVersion:
          allOf:
          - $ref: '#/components/schemas/ProfileVersion'
          description: The version of the signing profile.
        action:
          allOf:
          - $ref: '#/components/schemas/String'
          description: "For cross-account signing. Grant a designated account permission\
            \ to perform one or more of the following actions. Each action is associated\
            \ with a specific API's operations. For more information about cross-account\
            \ signing, see [Using cross-account signing with signing profiles](https://docs.aws.amazon.com/signer/latest/developerguide/signing-profile-cross-account.html)\
            \ in the _AWS Signer Developer Guide_.\n\nYou can designate the following\
            \ actions to an account.\n\n  * `signer:StartSigningJob`. This action\
            \ isn't supported for container image workflows. For details, see StartSigningJob.\n\
            \n  * `signer:SignPayload`. This action isn't supported for AWS Lambda\
            \ workflows. For details, see SignPayload\n\n  * `signer:GetSigningProfile`.\
            \ For details, see GetSigningProfile.\n\n  * `signer:RevokeSignature`.\
            \ For details, see RevokeSignature."
        principal:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The AWS principal receiving cross-account permissions. This
            may be an IAM role or another AWS account ID.
        revisionId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A unique identifier for the current profile revision.
        statementId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A unique identifier for the cross-account permission statement.
      required:
      - profileName
      - action
      - principal
      - statementId
    AddProfilePermissionResponse:
      type: object
      properties:
        revisionId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A unique identifier for the current profile revision.
    Arn:
      type: string
      minLength: 20
      maxLength: 2048
    BadRequestException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
        code:
          $ref: '#/components/schemas/ErrorCode'
      description: The request contains invalid parameters for the ARN or tags. This
        exception also occurs when you call a tagging API on a cancelled signing profile.
    Blob:
      type: string
      format: byte
    BucketName:
      type: string
    CancelSigningProfileRequest:
      type: object
      properties:
        profileName:
          allOf:
          - $ref: '#/components/schemas/ProfileName'
          description: The name of the signing profile to be canceled.
      required:
      - profileName
    Category:
      type: string
      enum:
      - AWSIoT
    CertificateArn:
      type: string
    CertificateHashes:
      type: array
      items:
        $ref: '#/components/schemas/String'
    ClientRequestToken:
      type: string
    ConflictException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
        code:
          $ref: '#/components/schemas/ErrorCode'
      description: The resource encountered a conflicting state.
    DescribeSigningJobRequest:
      type: object
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The ID of the signing job on input.
      required:
      - jobId
    DescribeSigningJobResponse:
      type: object
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The ID of the signing job on output.
        source:
          allOf:
          - $ref: '#/components/schemas/Source'
          description: The object that contains the name of your S3 bucket or your
            raw code.
        signingMaterial:
          allOf:
          - $ref: '#/components/schemas/SigningMaterial'
          description: The Amazon Resource Name (ARN) of your code signing certificate.
        platformId:
          allOf:
          - $ref: '#/components/schemas/PlatformId'
          description: The microcontroller platform to which your signed code image
            will be distributed.
        platformDisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: A human-readable name for the signing platform associated with
            the signing job.
        profileName:
          allOf:
          - $ref: '#/components/schemas/ProfileName'
          description: The name of the profile that initiated the signing operation.
        profileVersion:
          allOf:
          - $ref: '#/components/schemas/ProfileVersion'
          description: The version of the signing profile used to initiate the signing
            job.
        overrides:
          allOf:
          - $ref: '#/components/schemas/SigningPlatformOverrides'
          description: A list of any overrides that were applied to the signing operation.
        signingParameters:
          allOf:
          - $ref: '#/components/schemas/SigningParameters'
          description: Map of user-assigned key-value pairs used during signing. These
            values contain any information that you specified for use in your signing
            job.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Date and time that the signing job was created.
        completedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Date and time that the signing job was completed.
        signatureExpiresAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Thr expiration timestamp for the signature generated by the
            signing job.
        requestedBy:
          allOf:
          - $ref: '#/components/schemas/RequestedBy'
          description: The IAM principal that requested the signing job.
        status:
          allOf:
          - $ref: '#/components/schemas/SigningStatus'
          description: Status of the signing job.
        statusReason:
          allOf:
          - $ref: '#/components/schemas/StatusReason'
          description: String value that contains the status reason.
        revocationRecord:
          allOf:
          - $ref: '#/components/schemas/SigningJobRevocationRecord'
          description: A revocation record if the signature generated by the signing
            job has been revoked. Contains a timestamp and the ID of the IAM entity
            that revoked the signature.
        signedObject:
          allOf:
          - $ref: '#/components/schemas/SignedObject'
          description: Name of the S3 bucket where the signed code image is saved
            by AWS Signer.
        jobOwner:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The AWS account ID of the job owner.
        jobInvoker:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The IAM entity that initiated the signing job.
    Destination:
      type: object
      properties:
        s3:
          allOf:
          - $ref: '#/components/schemas/S3Destination'
          description: The `S3Destination` object.
      description: Points to an `S3Destination` object that contains information about
        your S3 bucket.
    DisplayName:
      type: string
    EncryptionAlgorithm:
      type: string
      enum:
      - RSA
      - ECDSA
    EncryptionAlgorithmOptions:
      type: object
      properties:
        allowedValues:
          allOf:
          - $ref: '#/components/schemas/EncryptionAlgorithms'
          description: The set of accepted encryption algorithms that are allowed
            in a code-signing job.
        defaultValue:
          allOf:
          - $ref: '#/components/schemas/EncryptionAlgorithm'
          description: The default encryption algorithm that is used by a code-signing
            job.
      required:
      - allowedValues
      - defaultValue
      description: The encryption algorithm options that are available to a code-signing
        job.
    EncryptionAlgorithms:
      type: array
      items:
        $ref: '#/components/schemas/EncryptionAlgorithm'
    ErrorCode:
      type: string
    ErrorMessage:
      type: string
    GetRevocationStatusRequest:
      type: object
      properties:
        signatureTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp of the signature that validates the profile or
            job.
        platformId:
          allOf:
          - $ref: '#/components/schemas/PlatformId'
          description: The ID of a signing platform.
        profileVersionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The version of a signing profile.
        jobArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of a signing job.
        certificateHashes:
          allOf:
          - $ref: '#/components/schemas/CertificateHashes'
          description: 'A list of composite signed hashes that identify certificates.


            A certificate identifier consists of a subject certificate TBS hash (signed
            by the parent CA) combined with a parent CA TBS hash (signed by the parent
            CA’s CA). Root certificates are defined as their own CA.


            The following example shows how to calculate a hash for this parameter
            using OpenSSL commands:


            `openssl asn1parse -in childCert.pem -strparse 4 -out childCert.tbs`


            `openssl sha384 < childCert.tbs -binary > childCertTbsHash`


            `openssl asn1parse -in parentCert.pem -strparse 4 -out parentCert.tbs`


            `openssl sha384 < parentCert.tbs -binary > parentCertTbsHash xxd -p childCertTbsHash
            > certificateHash.hex xxd -p parentCertTbsHash >> certificateHash.hex`


            `cat certificateHash.hex | tr -d ''\n''`'
      required:
      - signatureTimestamp
      - platformId
      - profileVersionArn
      - jobArn
      - certificateHashes
    GetRevocationStatusResponse:
      type: object
      properties:
        revokedEntities:
          allOf:
          - $ref: '#/components/schemas/RevokedEntities'
          description: A list of revoked entities (including zero or more of the signing
            profile ARN, signing job ARN, and certificate hashes) supplied as input
            to the API.
    GetSigningPlatformRequest:
      type: object
      properties:
        platformId:
          allOf:
          - $ref: '#/components/schemas/PlatformId'
          description: The ID of the target signing platform.
      required:
      - platformId
    GetSigningPlatformResponse:
      type: object
      properties:
        platformId:
          allOf:
          - $ref: '#/components/schemas/PlatformId'
          description: The ID of the target signing platform.
        displayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: The display name of the target signing platform.
        partner:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A list of partner entities that use the target signing platform.
        target:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The validation template that is used by the target signing
            platform.
        category:
          allOf:
          - $ref: '#/components/schemas/Category'
          description: The category type of the target signing platform.
        signingConfiguration:
          allOf:
          - $ref: '#/components/schemas/SigningConfiguration'
          description: A list of configurations applied to the target platform at
            signing.
        signingImageFormat:
          allOf:
          - $ref: '#/components/schemas/SigningImageFormat'
          description: The format of the target platform's signing image.
        maxSizeInMB:
          allOf:
          - $ref: '#/components/schemas/MaxSizeInMB'
          description: The maximum size (in MB) of the payload that can be signed
            by the target platform.
        revocationSupported:
          allOf:
          - $ref: '#/components/schemas/bool'
          description: A flag indicating whether signatures generated for the signing
            platform can be revoked.
    GetSigningProfileRequest:
      type: object
      properties:
        profileName:
          allOf:
          - $ref: '#/components/schemas/ProfileName'
          description: The name of the target signing profile.
        profileOwner:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The AWS account ID of the profile owner.
      required:
      - profileName
    GetSigningProfileResponse:
      type: object
      properties:
        profileName:
          allOf:
          - $ref: '#/components/schemas/ProfileName'
          description: The name of the target signing profile.
        profileVersion:
          allOf:
          - $ref: '#/components/schemas/ProfileVersion'
          description: The current version of the signing profile.
        profileVersionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The signing profile ARN, including the profile version.
        revocationRecord:
          $ref: '#/components/schemas/SigningProfileRevocationRecord'
        signingMaterial:
          allOf:
          - $ref: '#/components/schemas/SigningMaterial'
          description: The ARN of the certificate that the target profile uses for
            signing operations.
        platformId:
          allOf:
          - $ref: '#/components/schemas/PlatformId'
          description: The ID of the platform that is used by the target signing profile.
        platformDisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: A human-readable name for the signing platform associated with
            the signing profile.
        signatureValidityPeriod:
          $ref: '#/components/schemas/SignatureValidityPeriod'
        overrides:
          allOf:
          - $ref: '#/components/schemas/SigningPlatformOverrides'
          description: A list of overrides applied by the target signing profile for
            signing operations.
        signingParameters:
          allOf:
          - $ref: '#/components/schemas/SigningParameters'
          description: A map of key-value pairs for signing operations that is attached
            to the target signing profile.
        status:
          allOf:
          - $ref: '#/components/schemas/SigningProfileStatus'
          description: The status of the target signing profile.
        statusReason:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Reason for the status of the target signing profile.
        arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) for the signing profile.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A list of tags associated with the signing profile.
    HashAlgorithm:
      type: string
      enum:
      - SHA1
      - SHA256
    HashAlgorithmOptions:
      type: object
      properties:
        allowedValues:
          allOf:
          - $ref: '#/components/schemas/HashAlgorithms'
          description: The set of accepted hash algorithms allowed in a code-signing
            job.
        defaultValue:
          allOf:
          - $ref: '#/components/schemas/HashAlgorithm'
          description: The default hash algorithm that is used in a code-signing job.
      required:
      - allowedValues
      - defaultValue
      description: The hash algorithms that are available to a code-signing job.
    HashAlgorithms:
      type: array
      items:
        $ref: '#/components/schemas/HashAlgorithm'
    ImageFormat:
      type: string
      enum:
      - JSON
      - JSONEmbedded
      - JSONDetached
    ImageFormats:
      type: array
      items:
        $ref: '#/components/schemas/ImageFormat'
    Integer:
      type: integer
      default: 0
    InternalServiceErrorException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
        code:
          $ref: '#/components/schemas/ErrorCode'
      description: An internal error occurred.
    JobId:
      type: string
    Key:
      type: string
    ListProfilePermissionsRequest:
      type: object
      properties:
        profileName:
          allOf:
          - $ref: '#/components/schemas/ProfileName'
          description: Name of the signing profile containing the cross-account permissions.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: String for specifying the next set of paginated results.
      required:
      - profileName
    ListProfilePermissionsResponse:
      type: object
      properties:
        revisionId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The identifier for the current revision of profile permissions.
        policySizeBytes:
          allOf:
          - $ref: '#/components/schemas/PolicySizeBytes'
          description: Total size of the policy associated with the Signing Profile
            in bytes.
        permissions:
          allOf:
          - $ref: '#/components/schemas/Permissions'
          description: List of permissions associated with the Signing Profile.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: String for specifying the next set of paginated results.
    ListSigningJobsRequest:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/SigningStatus'
          description: A status value with which to filter your results.
        platformId:
          allOf:
          - $ref: '#/components/schemas/PlatformId'
          description: The ID of microcontroller platform that you specified for the
            distribution of your code image.
        requestedBy:
          allOf:
          - $ref: '#/components/schemas/RequestedBy'
          description: The IAM principal that requested the signing job.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Specifies the maximum number of items to return in the response.
            Use this parameter when paginating results. If additional items exist
            beyond the number you specify, the `nextToken` element is set in the response.
            Use the `nextToken` value in a subsequent request to retrieve additional
            items.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: String for specifying the next set of paginated results to
            return. After you receive a response with truncated results, use this
            parameter in a subsequent request. Set it to the value of `nextToken`
            from the response that you just received.
        isRevoked:
          allOf:
          - $ref: '#/components/schemas/bool'
          description: Filters results to return only signing jobs with revoked signatures.
        signatureExpiresBefore:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Filters results to return only signing jobs with signatures
            expiring before a specified timestamp.
        signatureExpiresAfter:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Filters results to return only signing jobs with signatures
            expiring after a specified timestamp.
        jobInvoker:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: Filters results to return only signing jobs initiated by a
            specified IAM entity.
    ListSigningJobsResponse:
      type: object
      properties:
        jobs:
          allOf:
          - $ref: '#/components/schemas/SigningJobs'
          description: A list of your signing jobs.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: String for specifying the next set of paginated results.
    ListSigningPlatformsRequest:
      type: object
      properties:
        category:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The category type of a signing platform.
        partner:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Any partner entities connected to a signing platform.
        target:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The validation template that is used by the target signing
            platform.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to be returned by this operation.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Value for specifying the next set of paginated results to return.
            After you receive a response with truncated results, use this parameter
            in a subsequent request. Set it to the value of `nextToken` from the response
            that you just received.
    ListSigningPlatformsResponse:
      type: object
      properties:
        platforms:
          allOf:
          - $ref: '#/components/schemas/SigningPlatforms'
          description: A list of all platforms that match the request parameters.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Value for specifying the next set of paginated results to return.
    ListSigningProfilesRequest:
      type: object
      properties:
        includeCanceled:
          allOf:
          - $ref: '#/components/schemas/bool'
          description: Designates whether to include profiles with the status of `CANCELED`.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of profiles to be returned.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Value for specifying the next set of paginated results to return.
            After you receive a response with truncated results, use this parameter
            in a subsequent request. Set it to the value of `nextToken` from the response
            that you just received.
        platformId:
          allOf:
          - $ref: '#/components/schemas/PlatformId'
          description: Filters results to return only signing jobs initiated for a
            specified signing platform.
        statuses:
          allOf:
          - $ref: '#/components/schemas/Statuses'
          description: Filters results to return only signing jobs with statuses in
            the specified list.
    ListSigningProfilesResponse:
      type: object
      properties:
        profiles:
          allOf:
          - $ref: '#/components/schemas/SigningProfiles'
          description: A list of profiles that are available in the AWS account. This
            includes profiles with the status of `CANCELED` if the `includeCanceled`
            parameter is set to `true`.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Value for specifying the next set of paginated results to return.
    ListTagsForResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) for the signing profile.
      required:
      - resourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A list of tags associated with the signing profile.
    MaxResults:
      type: integer
      minimum: 1
      maximum: 25
    MaxSizeInMB:
      type: integer
      default: 0
    Metadata:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    NextToken:
      type: string
    NotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
        code:
          $ref: '#/components/schemas/ErrorCode'
      description: The signing profile was not found.
    Payload:
      type: string
      format: byte
      minLength: 1
      maxLength: 4096
    Permission:
      type: object
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/String'
          description: An AWS Signer action permitted as part of cross-account permissions.
        principal:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The AWS principal that has been granted a cross-account permission.
        statementId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A unique identifier for a cross-account permission statement.
        profileVersion:
          allOf:
          - $ref: '#/components/schemas/ProfileVersion'
          description: The signing profile version that a permission applies to.
      description: A cross-account permission for a signing profile.
    Permissions:
      type: array
      items:
        $ref: '#/components/schemas/Permission'
    PlatformId:
      type: string
    PolicySizeBytes:
      type: integer
      default: 0
    Prefix:
      type: string
    ProfileName:
      type: string
      pattern: ^[a-zA-Z0-9_]{2,}$
      minLength: 2
      maxLength: 64
    ProfileVersion:
      type: string
      pattern: ^[a-zA-Z0-9]{10}$
      minLength: 10
      maxLength: 10
    PutSigningProfileRequest:
      type: object
      properties:
        profileName:
          allOf:
          - $ref: '#/components/schemas/ProfileName'
          description: The name of the signing profile to be created.
        signingMaterial:
          allOf:
          - $ref: '#/components/schemas/SigningMaterial'
          description: The AWS Certificate Manager certificate that will be used to
            sign code with the new signing profile.
        signatureValidityPeriod:
          allOf:
          - $ref: '#/components/schemas/SignatureValidityPeriod'
          description: The default validity period override for any signature generated
            using this signing profile. If unspecified, the default is 135 months.
        platformId:
          allOf:
          - $ref: '#/components/schemas/PlatformId'
          description: The ID of the signing platform to be created.
        overrides:
          allOf:
          - $ref: '#/components/schemas/SigningPlatformOverrides'
          description: A subfield of `platform`. This specifies any different configuration
            options that you want to apply to the chosen platform (such as a different
            `hash-algorithm` or `signing-algorithm`).
        signingParameters:
          allOf:
          - $ref: '#/components/schemas/SigningParameters'
          description: Map of key-value pairs for signing. These can include any information
            that you want to use during signing.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Tags to be associated with the signing profile that is being
            created.
      required:
      - profileName
      - platformId
    PutSigningProfileResponse:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the signing profile created.
        profileVersion:
          allOf:
          - $ref: '#/components/schemas/ProfileVersion'
          description: The version of the signing profile being created.
        profileVersionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The signing profile ARN, including the profile version.
    RemoveProfilePermissionRequest:
      type: object
      properties:
        profileName:
          allOf:
          - $ref: '#/components/schemas/ProfileName'
          description: A human-readable name for the signing profile with permissions
            to be removed.
        revisionId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: An identifier for the current revision of the signing profile
            permissions.
        statementId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A unique identifier for the cross-account permissions statement.
      required:
      - profileName
      - revisionId
      - statementId
    RemoveProfilePermissionResponse:
      type: object
      properties:
        revisionId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: An identifier for the current revision of the profile permissions.
    RequestedBy:
      type: string
    ResourceNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
        code:
          $ref: '#/components/schemas/ErrorCode'
      description: A specified resource could not be found.
    RevocationReasonString:
      type: string
      minLength: 1
      maxLength: 500
    RevokeSignatureRequest:
      type: object
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: ID of the signing job to be revoked.
        jobOwner:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: AWS account ID of the job owner.
        reason:
          allOf:
          - $ref: '#/components/schemas/RevocationReasonString'
          description: The reason for revoking the signing job.
      required:
      - jobId
      - reason
    RevokeSigningProfileRequest:
      type: object
      properties:
        profileName:
          allOf:
          - $ref: '#/components/schemas/ProfileName'
          description: The name of the signing profile to be revoked.
        profileVersion:
          allOf:
          - $ref: '#/components/schemas/ProfileVersion'
          description: The version of the signing profile to be revoked.
        reason:
          allOf:
          - $ref: '#/components/schemas/RevocationReasonString'
          description: The reason for revoking a signing profile.
        effectiveTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: A timestamp for when revocation of a Signing Profile should
            become effective. Signatures generated using the signing profile after
            this timestamp are not trusted.
      required:
      - profileName
      - profileVersion
      - reason
      - effectiveTime
    RevokedEntities:
      type: array
      items:
        $ref: '#/components/schemas/String'
    S3Destination:
      type: object
      properties:
        bucketName:
          allOf:
          - $ref: '#/components/schemas/BucketName'
          description: Name of the S3 bucket.
        prefix:
          allOf:
          - $ref: '#/components/schemas/Prefix'
          description: An S3 prefix that you can use to limit responses to those that
            begin with the specified prefix.
      description: The name and prefix of the Amazon S3 bucket where AWS Signer saves
        your signed objects.
    S3SignedObject:
      type: object
      properties:
        bucketName:
          allOf:
          - $ref: '#/components/schemas/BucketName'
          description: Name of the S3 bucket.
        key:
          allOf:
          - $ref: '#/components/schemas/Key'
          description: Key name that uniquely identifies a signed code image in your
            bucket.
      description: The Amazon S3 bucket name and key where Signer saved your signed
        code image.
    S3Source:
      type: object
      properties:
        bucketName:
          allOf:
          - $ref: '#/components/schemas/BucketName'
          description: Name of the S3 bucket.
        key:
          allOf:
          - $ref: '#/components/schemas/Key'
          description: Key name of the bucket object that contains your unsigned code.
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: Version of your source image in your version enabled S3 bucket.
      required:
      - bucketName
      - key
      - version
      description: Information about the Amazon S3 bucket where you saved your unsigned
        code.
    ServiceLimitExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
        code:
          $ref: '#/components/schemas/ErrorCode'
      description: The client is making a request that exceeds service limits.
    SignPayloadRequest:
      type: object
      properties:
        profileName:
          allOf:
          - $ref: '#/components/schemas/ProfileName'
          description: The name of the signing profile.
        profileOwner:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The AWS account ID of the profile owner.
        payload:
          allOf:
          - $ref: '#/components/schemas/Payload'
          description: Specifies the object digest (hash) to sign.
        payloadFormat:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Payload content type. The single valid type is `application/vnd.cncf.notary.payload.v1+json`.
      required:
      - profileName
      - payload
      - payloadFormat
    SignPayloadResponse:
      type: object
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: Unique identifier of the signing job.
        jobOwner:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The AWS account ID of the job owner.
        metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          description: Information including the signing profile ARN and the signing
            job ID.
        signature:
          allOf:
          - $ref: '#/components/schemas/Blob'
          description: A cryptographic signature.
    SignatureValidityPeriod:
      type: object
      properties:
        value:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The numerical value of the time unit for signature validity.
        type:
          allOf:
          - $ref: '#/components/schemas/ValidityType'
          description: The time unit for signature validity.
      description: The validity period for a signing job.
    SignedObject:
      type: object
      properties:
        s3:
          allOf:
          - $ref: '#/components/schemas/S3SignedObject'
          description: The `S3SignedObject`.
      description: Points to an `S3SignedObject` object that contains information
        about your signed code image.
    SigningConfiguration:
      type: object
      properties:
        encryptionAlgorithmOptions:
          allOf:
          - $ref: '#/components/schemas/EncryptionAlgorithmOptions'
          description: The encryption algorithm options that are available for a code-signing
            job.
        hashAlgorithmOptions:
          allOf:
          - $ref: '#/components/schemas/HashAlgorithmOptions'
          description: The hash algorithm options that are available for a code-signing
            job.
      required:
      - encryptionAlgorithmOptions
      - hashAlgorithmOptions
      description: The configuration of a signing operation.
    SigningConfigurationOverrides:
      type: object
      properties:
        encryptionAlgorithm:
          allOf:
          - $ref: '#/components/schemas/EncryptionAlgorithm'
          description: A specified override of the default encryption algorithm that
            is used in a code-signing job.
        hashAlgorithm:
          allOf:
          - $ref: '#/components/schemas/HashAlgorithm'
          description: A specified override of the default hash algorithm that is
            used in a code-signing job.
      description: A signing configuration that overrides the default encryption or
        hash algorithm of a signing job.
    SigningImageFormat:
      type: object
      properties:
        supportedFormats:
          allOf:
          - $ref: '#/components/schemas/ImageFormats'
          description: The supported formats of a signing image.
        defaultFormat:
          allOf:
          - $ref: '#/components/schemas/ImageFormat'
          description: The default format of a signing image.
      required:
      - supportedFormats
      - defaultFormat
      description: The image format of a AWS Signer platform or profile.
    SigningJob:
      type: object
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The ID of the signing job.
        source:
          allOf:
          - $ref: '#/components/schemas/Source'
          description: A `Source` that contains information about a signing job's
            code image source.
        signedObject:
          allOf:
          - $ref: '#/components/schemas/SignedObject'
          description: A `SignedObject` structure that contains information about
            a signing job's signed code image.
        signingMaterial:
          allOf:
          - $ref: '#/components/schemas/SigningMaterial'
          description: A `SigningMaterial` object that contains the Amazon Resource
            Name (ARN) of the certificate used for the signing job.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time that the signing job was created.
        status:
          allOf:
          - $ref: '#/components/schemas/SigningStatus'
          description: The status of the signing job.
        isRevoked:
          allOf:
          - $ref: '#/components/schemas/bool'
          description: Indicates whether the signing job is revoked.
        profileName:
          allOf:
          - $ref: '#/components/schemas/ProfileName'
          description: The name of the signing profile that created a signing job.
        profileVersion:
          allOf:
          - $ref: '#/components/schemas/ProfileVersion'
          description: The version of the signing profile that created a signing job.
        platformId:
          allOf:
          - $ref: '#/components/schemas/PlatformId'
          description: The unique identifier for a signing platform.
        platformDisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: The name of a signing platform.
        signatureExpiresAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the signature of a signing job expires.
        jobOwner:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The AWS account ID of the job owner.
        jobInvoker:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The AWS account ID of the job invoker.
      description: Contains information about a signing job.
    SigningJobRevocationRecord:
      type: object
      properties:
        reason:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A caller-supplied reason for revocation.
        revokedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time of revocation.
        revokedBy:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The identity of the revoker.
      description: Revocation information for a signing job.
    SigningJobs:
      type: array
      items:
        $ref: '#/components/schemas/SigningJob'
    SigningMaterial:
      type: object
      properties:
        certificateArn:
          allOf:
          - $ref: '#/components/schemas/CertificateArn'
          description: The Amazon Resource Name (ARN) of the certificates that is
            used to sign your code.
      required:
      - certificateArn
      description: The ACM certificate that is used to sign your code.
    SigningParameterKey:
      type: string
    SigningParameterValue:
      type: string
    SigningParameters:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/SigningParameterValue'
    SigningPlatform:
      type: object
      properties:
        platformId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of a signing platform.
        displayName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The display name of a signing platform.
        partner:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Any partner entities linked to a signing platform.
        target:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The types of targets that can be signed by a signing platform.
        category:
          allOf:
          - $ref: '#/components/schemas/Category'
          description: The category of a signing platform.
        signingConfiguration:
          allOf:
          - $ref: '#/components/schemas/SigningConfiguration'
          description: The configuration of a signing platform. This includes the
            designated hash algorithm and encryption algorithm of a signing platform.
        signingImageFormat:
          $ref: '#/components/schemas/SigningImageFormat'
        maxSizeInMB:
          allOf:
          - $ref: '#/components/schemas/MaxSizeInMB'
          description: The maximum size (in MB) of code that can be signed by a signing
            platform.
        revocationSupported:
          allOf:
          - $ref: '#/components/schemas/bool'
          description: Indicates whether revocation is supported for the platform.
      description: Contains information about the signing configurations and parameters
        that are used to perform a code-signing job.
    SigningPlatformOverrides:
      type: object
      properties:
        signingConfiguration:
          allOf:
          - $ref: '#/components/schemas/SigningConfigurationOverrides'
          description: A signing configuration that overrides the default encryption
            or hash algorithm of a signing job.
        signingImageFormat:
          allOf:
          - $ref: '#/components/schemas/ImageFormat'
          description: A signed image is a JSON object. When overriding the default
            signing platform configuration, a customer can select either of two signing
            formats, `JSONEmbedded` or `JSONDetached`. (A third format value, `JSON`,
            is reserved for future use.) With `JSONEmbedded`, the signing image has
            the payload embedded in it. With `JSONDetached`, the payload is not be
            embedded in the signing image.
      description: Any overrides that are applied to the signing configuration of
        a signing platform.
    SigningPlatforms:
      type: array
      items:
        $ref: '#/components/schemas/SigningPlatform'
    SigningProfile:
      type: object
      properties:
        profileName:
          allOf:
          - $ref: '#/components/schemas/ProfileName'
          description: The name of the signing profile.
        profileVersion:
          allOf:
          - $ref: '#/components/schemas/ProfileVersion'
          description: The version of a signing profile.
        profileVersionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of a signing profile, including the profile version.
        signingMaterial:
          allOf:
          - $ref: '#/components/schemas/SigningMaterial'
          description: The ACM certificate that is available for use by a signing
            profile.
        signatureValidityPeriod:
          allOf:
          - $ref: '#/components/schemas/SignatureValidityPeriod'
          description: The validity period for a signing job created using this signing
            profile.
        platformId:
          allOf:
          - $ref: '#/components/schemas/PlatformId'
          description: The ID of a platform that is available for use by a signing
            profile.
        platformDisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: The name of the signing platform.
        signingParameters:
          allOf:
          - $ref: '#/components/schemas/SigningParameters'
          description: The parameters that are available for use by a Signer user.
        status:
          allOf:
          - $ref: '#/components/schemas/SigningProfileStatus'
          description: The status of a signing profile.
        arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) for the signing profile.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A list of tags associated with the signing profile.
      description: Contains information about the ACM certificates and signing configuration
        parameters that can be used by a given code signing user.
    SigningProfileRevocationRecord:
      type: object
      properties:
        revocationEffectiveFrom:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when revocation becomes effective.
        revokedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the signing profile was revoked.
        revokedBy:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The identity of the revoker.
      description: Revocation information for a signing profile.
    SigningProfileStatus:
      type: string
      enum:
      - Active
      - Canceled
      - Revoked
    SigningProfiles:
      type: array
      items:
        $ref: '#/components/schemas/SigningProfile'
    SigningStatus:
      type: string
      enum:
      - InProgress
      - Failed
      - Succeeded
    Source:
      type: object
      properties:
        s3:
          allOf:
          - $ref: '#/components/schemas/S3Source'
          description: The `S3Source` object.
      description: An `S3Source` object that contains information about the S3 bucket
        where you saved your unsigned code.
    StartSigningJobRequest:
      type: object
      properties:
        source:
          allOf:
          - $ref: '#/components/schemas/Source'
          description: The S3 bucket that contains the object to sign or a BLOB that
            contains your raw code.
        destination:
          allOf:
          - $ref: '#/components/schemas/Destination'
          description: The S3 bucket in which to save your signed object. The destination
            contains the name of your bucket and an optional prefix.
        profileName:
          allOf:
          - $ref: '#/components/schemas/ProfileName'
          description: The name of the signing profile.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: String that identifies the signing request. All calls after
            the first that use this token return the same response as the first call.
        profileOwner:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The AWS account ID of the signing profile owner.
      required:
      - source
      - destination
      - profileName
      - clientRequestToken
    StartSigningJobResponse:
      type: object
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The ID of your signing job.
        jobOwner:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The AWS account ID of the signing job owner.
    StatusReason:
      type: string
    Statuses:
      type: array
      items:
        $ref: '#/components/schemas/SigningProfileStatus'
    String:
      type: string
    TagKey:
      type: string
      pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) for the signing profile.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: One or more tags to be associated with the signing profile.
      required:
      - resourceArn
      - tags
    TagResourceResponse:
      type: object
      properties: {}
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    ThrottlingException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
        code:
          $ref: '#/components/schemas/ErrorCode'
      description: 'The request was denied due to request throttling.


        Instead of this error, `TooManyRequestsException` should be used.'
    Timestamp:
      type: string
      format: date-time
    TooManyRequestsException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
        code:
          $ref: '#/components/schemas/ErrorCode'
      description: 'The allowed number of job-signing requests has been exceeded.


        This error supersedes the error `ThrottlingException`.'
    UntagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) for the signing profile.
        tagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: A list of tag keys to be removed from the signing profile.
      required:
      - resourceArn
      - tagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    ValidationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
        code:
          $ref: '#/components/schemas/ErrorCode'
      description: You signing certificate could not be validated.
    ValidityType:
      type: string
      enum:
      - DAYS
      - MONTHS
      - YEARS
    Version:
      type: string
    bool:
      type: boolean
      default: false
