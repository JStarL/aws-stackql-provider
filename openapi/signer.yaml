openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: signer
  x-aws-serviceName: signer
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-05'
  version: '2017-08-25'
  title: AWS Signer
  description: |-
    AWS Signer is a fully managed code-signing service to help you ensure the trust and integrity of your code.

    Signer supports the following applications:

    With code signing for AWS Lambda, you can sign [AWS Lambda](http://docs.aws.amazon.com/lambda/latest/dg/) deployment packages. Integrated support is provided for [Amazon S3](http://docs.aws.amazon.com/AmazonS3/latest/gsg/), [Amazon CloudWatch](http://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/), and [AWS CloudTrail](http://docs.aws.amazon.com/awscloudtrail/latest/userguide/). In order to sign code, you create a signing profile and then use Signer to sign Lambda zip files in S3.

    With code signing for IoT, you can sign code for any IoT device that is supported by AWS. IoT code signing is available for [Amazon FreeRTOS](http://docs.aws.amazon.com/freertos/latest/userguide/) and [AWS IoT Device Management](http://docs.aws.amazon.com/iot/latest/developerguide/), and is integrated with [AWS Certificate Manager (ACM)](http://docs.aws.amazon.com/acm/latest/userguide/). In order to sign code, you import a third-party code-signing certificate using ACM, and use that to sign updates in Amazon FreeRTOS and AWS IoT Device Management.

    With Signer and the Notation CLI from the [Notary Project](https://notaryproject.dev/), you can sign container images stored in a container registry such as Amazon Elastic Container Registry (ECR). The signatures are stored in the registry alongside the images, where they are available for verifying image authenticity and integrity.

    For more information about Signer, see the [AWS Signer Developer Guide](https://docs.aws.amazon.com/signer/latest/developerguide/Welcome.html).
servers:
- description: The AWS Signer regional endpoint
  url: https://signer.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths: {}
components:
  schemas:
    AccountId:
      type: string
      pattern: ^[0-9]{12}$
      minLength: 12
      maxLength: 12
    Arn:
      type: string
      minLength: 20
      maxLength: 2048
    BucketName:
      type: string
    CertificateArn:
      type: string
    ClientRequestToken:
      type: string
    DisplayName:
      type: string
    ErrorCode:
      type: string
    ErrorMessage:
      type: string
    Integer:
      type: integer
      default: 0
    JobId:
      type: string
    Key:
      type: string
    MaxResults:
      type: integer
      minimum: 1
      maximum: 25
    MaxSizeInMB:
      type: integer
      default: 0
    NextToken:
      type: string
    PlatformId:
      type: string
    PolicySizeBytes:
      type: integer
      default: 0
    Prefix:
      type: string
    ProfileName:
      type: string
      pattern: ^[a-zA-Z0-9_]{2,}$
      minLength: 2
      maxLength: 64
    ProfileVersion:
      type: string
      pattern: ^[a-zA-Z0-9]{10}$
      minLength: 10
      maxLength: 10
    RequestedBy:
      type: string
    RevocationReasonString:
      type: string
      minLength: 1
      maxLength: 500
    SigningParameterKey:
      type: string
    SigningParameterValue:
      type: string
    StatusReason:
      type: string
    String:
      type: string
    TagKey:
      type: string
      pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
      minLength: 1
      maxLength: 128
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    Version:
      type: string
    bool:
      type: boolean
      default: false
