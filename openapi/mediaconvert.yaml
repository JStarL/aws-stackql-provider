openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: mediaconvert
  x-aws-serviceName: mediaconvert
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-05'
  version: '2017-08-29'
  title: AWS Elemental MediaConvert
  description: |-
    AWS Elemental MediaConvert
servers:
- description: The AWS Elemental MediaConvert regional endpoint
  url: https://mediaconvert.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths: {}
components:
  schemas:
    AacAudioDescriptionBroadcasterMix:
      type: string
      enum:
      - BROADCASTER_MIXED_AD
      - NORMAL
      description: Choose BROADCASTER_MIXED_AD when the input contains pre-mixed main
        audio + audio description (AD) as a stereo pair. The value for AudioType will
        be set to 3, which signals to downstream systems that this stream contains
        "broadcaster mixed AD". Note that the input received by the encoder must contain
        pre-mixed audio; the encoder does not perform the mixing. When you choose
        BROADCASTER_MIXED_AD, the encoder ignores any values you provide in AudioType
        and FollowInputAudioType. Choose NORMAL when the input does not contain pre-mixed
        audio + audio description (AD). In this case, the encoder will use any values
        you provide for AudioType and FollowInputAudioType.
    AacCodecProfile:
      type: string
      enum:
      - LC
      - HEV1
      - HEV2
      description: 'Specify the AAC profile. For the widest player compatibility and
        where higher bitrates are acceptable: Keep the default profile, LC (AAC-LC)
        For improved audio performance at lower bitrates: Choose HEV1 or HEV2. HEV1
        (AAC-HE v1) adds spectral band replication to improve speech audio at low
        bitrates. HEV2 (AAC-HE v2) adds parametric stereo, which optimizes for encoding
        stereo audio at very low bitrates.'
    AacCodingMode:
      type: string
      enum:
      - AD_RECEIVER_MIX
      - CODING_MODE_1_0
      - CODING_MODE_1_1
      - CODING_MODE_2_0
      - CODING_MODE_5_1
      description: 'The Coding mode that you specify determines the number of audio
        channels and the audio channel layout metadata in your AAC output. Valid coding
        modes depend on the Rate control mode and Profile that you select. The following
        list shows the number of audio channels and channel layout for each coding
        mode. * 1.0 Audio Description (Receiver Mix): One channel, C. Includes audio
        description data from your stereo input. For more information see ETSI TS
        101 154 Annex E. * 1.0 Mono: One channel, C. * 2.0 Stereo: Two channels, L,
        R. * 5.1 Surround: Six channels, C, L, R, Ls, Rs, LFE.'
    AacRateControlMode:
      type: string
      enum:
      - CBR
      - VBR
      description: 'Specify the AAC rate control mode. For a constant bitrate: Choose
        CBR. Your AAC output bitrate will be equal to the value that you choose for
        Bitrate. For a variable bitrate: Choose VBR. Your AAC output bitrate will
        vary according to your audio content and the value that you choose for Bitrate
        quality.'
    AacRawFormat:
      type: string
      enum:
      - LATM_LOAS
      - NONE
      description: Enables LATM/LOAS AAC output. Note that if you use LATM/LOAS AAC
        in an output, you must choose "No container" for the output container.
    AacSpecification:
      type: string
      enum:
      - MPEG2
      - MPEG4
      description: Use MPEG-2 AAC instead of MPEG-4 AAC audio for raw or MPEG-2 Transport
        Stream containers.
    AacVbrQuality:
      type: string
      enum:
      - LOW
      - MEDIUM_LOW
      - MEDIUM_HIGH
      - HIGH
      description: 'Specify the quality of your variable bitrate (VBR) AAC audio.
        For a list of approximate VBR bitrates, see: https://docs.aws.amazon.com/mediaconvert/latest/ug/aac-support.html#aac_vbr'
    Ac3BitstreamMode:
      type: string
      enum:
      - COMPLETE_MAIN
      - COMMENTARY
      - DIALOGUE
      - EMERGENCY
      - HEARING_IMPAIRED
      - MUSIC_AND_EFFECTS
      - VISUALLY_IMPAIRED
      - VOICE_OVER
      description: Specify the bitstream mode for the AC-3 stream that the encoder
        emits. For more information about the AC3 bitstream mode, see ATSC A/52-2012
        (Annex E).
    Ac3CodingMode:
      type: string
      enum:
      - CODING_MODE_1_0
      - CODING_MODE_1_1
      - CODING_MODE_2_0
      - CODING_MODE_3_2_LFE
      description: Dolby Digital coding mode. Determines number of channels.
    Ac3DynamicRangeCompressionLine:
      type: string
      enum:
      - FILM_STANDARD
      - FILM_LIGHT
      - MUSIC_STANDARD
      - MUSIC_LIGHT
      - SPEECH
      - NONE
      description: 'Choose the Dolby Digital dynamic range control (DRC) profile that
        MediaConvert uses when encoding the metadata in the Dolby Digital stream for
        the line operating mode. Related setting: When you use this setting, MediaConvert
        ignores any value you provide for Dynamic range compression profile. For information
        about the Dolby Digital DRC operating modes and profiles, see the Dynamic
        Range Control chapter of the Dolby Metadata Guide at https://developer.dolby.com/globalassets/professional/documents/dolby-metadata-guide.pdf.'
    Ac3DynamicRangeCompressionProfile:
      type: string
      enum:
      - FILM_STANDARD
      - NONE
      description: When you want to add Dolby dynamic range compression (DRC) signaling
        to your output stream, we recommend that you use the mode-specific settings
        instead of Dynamic range compression profile. The mode-specific settings are
        Dynamic range compression profile, line mode and Dynamic range compression
        profile, RF mode. Note that when you specify values for all three settings,
        MediaConvert ignores the value of this setting in favor of the mode-specific
        settings. If you do use this setting instead of the mode-specific settings,
        choose None to leave out DRC signaling. Keep the default Film standard to
        set the profile to Dolby's film standard profile for all operating modes.
    Ac3DynamicRangeCompressionRf:
      type: string
      enum:
      - FILM_STANDARD
      - FILM_LIGHT
      - MUSIC_STANDARD
      - MUSIC_LIGHT
      - SPEECH
      - NONE
      description: 'Choose the Dolby Digital dynamic range control (DRC) profile that
        MediaConvert uses when encoding the metadata in the Dolby Digital stream for
        the RF operating mode. Related setting: When you use this setting, MediaConvert
        ignores any value you provide for Dynamic range compression profile. For information
        about the Dolby Digital DRC operating modes and profiles, see the Dynamic
        Range Control chapter of the Dolby Metadata Guide at https://developer.dolby.com/globalassets/professional/documents/dolby-metadata-guide.pdf.'
    Ac3LfeFilter:
      type: string
      enum:
      - ENABLED
      - DISABLED
      description: Applies a 120Hz lowpass filter to the LFE channel prior to encoding.
        Only valid with 3_2_LFE coding mode.
    Ac3MetadataControl:
      type: string
      enum:
      - FOLLOW_INPUT
      - USE_CONFIGURED
      description: When set to FOLLOW_INPUT, encoder metadata will be sourced from
        the DD, DD+, or DolbyE decoder that supplied this audio data. If audio was
        not supplied from one of these streams, then the static metadata settings
        will be used.
    AccelerationMode:
      type: string
      enum:
      - DISABLED
      - ENABLED
      - PREFERRED
      description: Specify whether the service runs your job with accelerated transcoding.
        Choose DISABLED if you don't want accelerated transcoding. Choose ENABLED
        if you want your job to run with accelerated transcoding and to fail if your
        input files or your job settings aren't compatible with accelerated transcoding.
        Choose PREFERRED if you want your job to run with accelerated transcoding
        if the job is compatible with the feature and to run at standard speed if
        it's not.
    AccelerationStatus:
      type: string
      enum:
      - NOT_APPLICABLE
      - IN_PROGRESS
      - ACCELERATED
      - NOT_ACCELERATED
      description: Describes whether the current job is running with accelerated transcoding.
        For jobs that have Acceleration (AccelerationMode) set to DISABLED, AccelerationStatus
        is always NOT_APPLICABLE. For jobs that have Acceleration (AccelerationMode)
        set to ENABLED or PREFERRED, AccelerationStatus is one of the other states.
        AccelerationStatus is IN_PROGRESS initially, while the service determines
        whether the input files and job settings are compatible with accelerated transcoding.
        If they are, AcclerationStatus is ACCELERATED. If your input files and job
        settings aren't compatible with accelerated transcoding, the service either
        fails your job or runs it without accelerated transcoding, depending on how
        you set Acceleration (AccelerationMode). When the service runs your job without
        accelerated transcoding, AccelerationStatus is NOT_ACCELERATED.
    AdvancedInputFilter:
      type: string
      enum:
      - ENABLED
      - DISABLED
      description: 'Use to remove noise, blocking, blurriness, or ringing from your
        input as a pre-filter step before encoding. The Advanced input filter removes
        more types of compression artifacts and is an improvement when compared to
        basic Deblock and Denoise filters. To remove video compression artifacts from
        your input and improve the video quality: Choose Enabled. Additionally, this
        filter can help increase the video quality of your output relative to its
        bitrate, since noisy inputs are more complex and require more bits to encode.
        To help restore loss of detail after applying the filter, you can optionally
        add texture or sharpening as an additional step. Jobs that use this feature
        incur pro-tier pricing. To not apply advanced input filtering: Choose Disabled.
        Note that you can still apply basic filtering with Deblock and Denoise.'
    AdvancedInputFilterAddTexture:
      type: string
      enum:
      - ENABLED
      - DISABLED
      description: 'Add texture and detail to areas of your input video content that
        were lost after applying the Advanced input filter. To adaptively add texture
        and reduce softness: Choose Enabled. To not add any texture: Keep the default
        value, Disabled. We recommend that you choose Disabled for input video content
        that doesn''t have texture, including screen recordings, computer graphics,
        or cartoons.'
    AdvancedInputFilterSharpen:
      type: string
      enum:
      - 'OFF'
      - LOW
      - HIGH
      description: 'Optionally specify the amount of sharpening to apply when you
        use the Advanced input filter. Sharpening adds contrast to the edges of your
        video content and can reduce softness. To apply no sharpening: Keep the default
        value, Off. To apply a minimal amount of sharpening choose Low, or for the
        maximum choose High.'
    AfdSignaling:
      type: string
      enum:
      - NONE
      - AUTO
      - FIXED
      description: This setting only applies to H.264, H.265, and MPEG2 outputs. Use
        Insert AFD signaling to specify whether the service includes AFD values in
        the output video data and what those values are. * Choose None to remove all
        AFD values from this output. * Choose Fixed to ignore input AFD values and
        instead encode the value specified in the job. * Choose Auto to calculate
        output AFD values based on the input AFD scaler data.
    AlphaBehavior:
      type: string
      enum:
      - DISCARD
      - REMAP_TO_LUMA
      description: Ignore this setting unless this input is a QuickTime animation
        with an alpha channel. Use this setting to create separate Key and Fill outputs.
        In each output, specify which part of the input MediaConvert uses. Leave this
        setting at the default value DISCARD to delete the alpha channel and preserve
        the video. Set it to REMAP_TO_LUMA to delete the video and map the alpha channel
        to the luma channel of your outputs.
    AncillaryConvert608To708:
      type: string
      enum:
      - UPCONVERT
      - DISABLED
      description: 'Specify whether this set of input captions appears in your outputs
        in both 608 and 708 format. If you choose Upconvert, MediaConvert includes
        the captions data in two ways: it passes the 608 data through using the 608
        compatibility bytes fields of the 708 wrapper, and it also translates the
        608 data into 708.'
    AncillaryTerminateCaptions:
      type: string
      enum:
      - END_OF_INPUT
      - DISABLED
      description: By default, the service terminates any unterminated captions at
        the end of each input. If you want the caption to continue onto your next
        input, disable this setting.
    AntiAlias:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: The anti-alias filter is automatically applied to all outputs.
        The service no longer accepts the value DISABLED for AntiAlias. If you specify
        that in your job, the service will ignore the setting.
    AudioChannelTag:
      type: string
      enum:
      - L
      - R
      - C
      - LFE
      - LS
      - RS
      - LC
      - RC
      - CS
      - LSD
      - RSD
      - TCS
      - VHL
      - VHC
      - VHR
      - TBL
      - TBC
      - TBR
      - RSL
      - RSR
      - LW
      - RW
      - LFE2
      - LT
      - RT
      - HI
      - NAR
      - M
      description: Specify the QuickTime audio channel layout tags for the audio channels
        in this audio track. Enter channel layout tags in the same order as your output's
        audio channel order. For example, if your output audio track has a left and
        a right channel, enter Left (L) for the first channel and Right (R) for the
        second. If your output has multiple single-channel audio tracks, enter a single
        channel layout tag for each track.
    AudioCodec:
      type: string
      enum:
      - AAC
      - MP2
      - MP3
      - WAV
      - AIFF
      - AC3
      - EAC3
      - EAC3_ATMOS
      - VORBIS
      - OPUS
      - PASSTHROUGH
      - FLAC
      description: 'Choose the audio codec for this output. Note that the option Dolby
        Digital passthrough applies only to Dolby Digital and Dolby Digital Plus audio
        inputs. Make sure that you choose a codec that''s supported with your output
        container: https://docs.aws.amazon.com/mediaconvert/latest/ug/reference-codecs-containers.html#reference-codecs-containers-output-audio
        For audio-only outputs, make sure that both your input audio codec and your
        output audio codec are supported for audio-only workflows. For more information,
        see: https://docs.aws.amazon.com/mediaconvert/latest/ug/reference-codecs-containers-input.html#reference-codecs-containers-input-audio-only
        and https://docs.aws.amazon.com/mediaconvert/latest/ug/reference-codecs-containers.html#audio-only-output'
    AudioDefaultSelection:
      type: string
      enum:
      - DEFAULT
      - NOT_DEFAULT
      description: Enable this setting on one audio selector to set it as the default
        for the job. The service uses this default for outputs where it can't find
        the specified input audio. If you don't set a default, those outputs have
        no audio.
    AudioDurationCorrection:
      type: string
      enum:
      - DISABLED
      - AUTO
      - TRACK
      - FRAME
      - FORCE
      description: 'Apply audio timing corrections to help synchronize audio and video
        in your output. To apply timing corrections, your input must meet the following
        requirements: * Container: MP4, or MOV, with an accurate time-to-sample (STTS)
        table. * Audio track: AAC. Choose from the following audio timing correction
        settings: * Disabled (Default): Apply no correction. * Auto: Recommended for
        most inputs. MediaConvert analyzes the audio timing in your input and determines
        which correction setting to use, if needed. * Track: Adjust the duration of
        each audio frame by a constant amount to align the audio track length with
        STTS duration. Track-level correction does not affect pitch, and is recommended
        for tonal audio content such as music. * Frame: Adjust the duration of each
        audio frame by a variable amount to align audio frames with STTS timestamps.
        No corrections are made to already-aligned frames. Frame-level correction
        may affect the pitch of corrected frames, and is recommended for atonal audio
        content such as speech or percussion. * Force: Apply audio duration correction,
        either Track or Frame depending on your input, regardless of the accuracy
        of your input''s STTS table. Your output audio and video may not be aligned
        or it may contain audio artifacts.'
    AudioLanguageCodeControl:
      type: string
      enum:
      - FOLLOW_INPUT
      - USE_CONFIGURED
      description: Specify which source for language code takes precedence for this
        audio track. When you choose Follow input, the service uses the language code
        from the input track if it's present. If there's no languge code on the input
        track, the service uses the code that you specify in the setting Language
        code. When you choose Use configured, the service uses the language code that
        you specify.
    AudioNormalizationAlgorithm:
      type: string
      enum:
      - ITU_BS_1770_1
      - ITU_BS_1770_2
      - ITU_BS_1770_3
      - ITU_BS_1770_4
      description: 'Choose one of the following audio normalization algorithms: ITU-R
        BS.1770-1: Ungated loudness. A measurement of ungated average loudness for
        an entire piece of content, suitable for measurement of short-form content
        under ATSC recommendation A/85. Supports up to 5.1 audio channels. ITU-R BS.1770-2:
        Gated loudness. A measurement of gated average loudness compliant with the
        requirements of EBU-R128. Supports up to 5.1 audio channels. ITU-R BS.1770-3:
        Modified peak. The same loudness measurement algorithm as 1770-2, with an
        updated true peak measurement. ITU-R BS.1770-4: Higher channel count. Allows
        for more audio channels than the other algorithms, including configurations
        such as 7.1.'
    AudioNormalizationAlgorithmControl:
      type: string
      enum:
      - CORRECT_AUDIO
      - MEASURE_ONLY
      description: When enabled the output audio is corrected using the chosen algorithm.
        If disabled, the audio will be measured but not adjusted.
    AudioNormalizationLoudnessLogging:
      type: string
      enum:
      - LOG
      - DONT_LOG
      description: If set to LOG, log each output's audio track loudness to a CSV
        file.
    AudioNormalizationPeakCalculation:
      type: string
      enum:
      - TRUE_PEAK
      - NONE
      description: If set to TRUE_PEAK, calculate and log the TruePeak for each output's
        audio track loudness.
    AudioSelectorType:
      type: string
      enum:
      - PID
      - TRACK
      - LANGUAGE_CODE
      - HLS_RENDITION_GROUP
      description: Specifies the type of the audio selector.
    AudioTypeControl:
      type: string
      enum:
      - FOLLOW_INPUT
      - USE_CONFIGURED
      description: When set to FOLLOW_INPUT, if the input contains an ISO 639 audio_type,
        then that value is passed through to the output. If the input contains no
        ISO 639 audio_type, the value in Audio Type is included in the output. Otherwise
        the value in Audio Type is included in the output. Note that this field and
        audioType are both ignored if audioDescriptionBroadcasterMix is set to BROADCASTER_MIXED_AD.
    Av1AdaptiveQuantization:
      type: string
      enum:
      - 'OFF'
      - LOW
      - MEDIUM
      - HIGH
      - HIGHER
      - MAX
      description: Specify the strength of any adaptive quantization filters that
        you enable. The value that you choose here applies to Spatial adaptive quantization.
    Av1BitDepth:
      type: string
      enum:
      - BIT_8
      - BIT_10
      description: Specify the Bit depth. You can choose 8-bit or 10-bit.
    Av1FilmGrainSynthesis:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: Film grain synthesis replaces film grain present in your content
        with similar quality synthesized AV1 film grain. We recommend that you choose
        Enabled to reduce the bandwidth of your QVBR quality level 5, 6, 7, or 8 outputs.
        For QVBR quality level 9 or 10 outputs we recommend that you keep the default
        value, Disabled. When you include Film grain synthesis, you cannot include
        the Noise reducer preprocessor.
    Av1FramerateControl:
      type: string
      enum:
      - INITIALIZE_FROM_SOURCE
      - SPECIFIED
      description: Use the Framerate setting to specify the frame rate for this output.
        If you want to keep the same frame rate as the input video, choose Follow
        source. If you want to do frame rate conversion, choose a frame rate from
        the dropdown list or choose Custom. The framerates shown in the dropdown list
        are decimal approximations of fractions. If you choose Custom, specify your
        frame rate as a fraction.
    Av1FramerateConversionAlgorithm:
      type: string
      enum:
      - DUPLICATE_DROP
      - INTERPOLATE
      - FRAMEFORMER
      - MAINTAIN_FRAME_COUNT
      description: 'Choose the method that you want MediaConvert to use when increasing
        or decreasing your video''s frame rate. For numerically simple conversions,
        such as 60 fps to 30 fps: We recommend that you keep the default value, Drop
        duplicate. For numerically complex conversions, to avoid stutter: Choose Interpolate.
        This results in a smooth picture, but might introduce undesirable video artifacts.
        For complex frame rate conversions, especially if your source video has already
        been converted from its original cadence: Choose FrameFormer to do motion-compensated
        interpolation. FrameFormer uses the best conversion method frame by frame.
        Note that using FrameFormer increases the transcoding time and incurs a significant
        add-on cost. When you choose FrameFormer, your input video resolution must
        be at least 128x96. To create an output with the same number of frames as
        your input: Choose Maintain frame count. When you do, MediaConvert will not
        drop, interpolate, add, or otherwise change the frame count from your input
        to your output. Note that since the frame count is maintained, the duration
        of your output will become shorter at higher frame rates and longer at lower
        frame rates.'
    Av1RateControlMode:
      type: string
      enum:
      - QVBR
      description: '''With AV1 outputs, for rate control mode, MediaConvert supports
        only quality-defined variable bitrate (QVBR). You can''''t use CBR or VBR.'''
    Av1SpatialAdaptiveQuantization:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: 'Keep the default value, Enabled, to adjust quantization within
        each frame based on spatial variation of content complexity. When you enable
        this feature, the encoder uses fewer bits on areas that can sustain more distortion
        with no noticeable visual degradation and uses more bits on areas where any
        small distortion will be noticeable. For example, complex textured blocks
        are encoded with fewer bits and smooth textured blocks are encoded with more
        bits. Enabling this feature will almost always improve your video quality.
        Note, though, that this feature doesn''t take into account where the viewer''s
        attention is likely to be. If viewers are likely to be focusing their attention
        on a part of the screen with a lot of complex texture, you might choose to
        disable this feature. Related setting: When you enable spatial adaptive quantization,
        set the value for Adaptive quantization depending on your content. For homogeneous
        content, such as cartoons and video games, set it to Low. For content with
        a wider variety of textures, set it to High or Higher.'
    AvcIntraClass:
      type: string
      enum:
      - CLASS_50
      - CLASS_100
      - CLASS_200
      - CLASS_4K_2K
      description: Specify the AVC-Intra class of your output. The AVC-Intra class
        selection determines the output video bit rate depending on the frame rate
        of the output. Outputs with higher class values have higher bitrates and improved
        image quality. Note that for Class 4K/2K, MediaConvert supports only 4:2:2
        chroma subsampling.
    AvcIntraFramerateControl:
      type: string
      enum:
      - INITIALIZE_FROM_SOURCE
      - SPECIFIED
      description: If you are using the console, use the Framerate setting to specify
        the frame rate for this output. If you want to keep the same frame rate as
        the input video, choose Follow source. If you want to do frame rate conversion,
        choose a frame rate from the dropdown list or choose Custom. The framerates
        shown in the dropdown list are decimal approximations of fractions. If you
        choose Custom, specify your frame rate as a fraction.
    AvcIntraFramerateConversionAlgorithm:
      type: string
      enum:
      - DUPLICATE_DROP
      - INTERPOLATE
      - FRAMEFORMER
      - MAINTAIN_FRAME_COUNT
      description: 'Choose the method that you want MediaConvert to use when increasing
        or decreasing your video''s frame rate. For numerically simple conversions,
        such as 60 fps to 30 fps: We recommend that you keep the default value, Drop
        duplicate. For numerically complex conversions, to avoid stutter: Choose Interpolate.
        This results in a smooth picture, but might introduce undesirable video artifacts.
        For complex frame rate conversions, especially if your source video has already
        been converted from its original cadence: Choose FrameFormer to do motion-compensated
        interpolation. FrameFormer uses the best conversion method frame by frame.
        Note that using FrameFormer increases the transcoding time and incurs a significant
        add-on cost. When you choose FrameFormer, your input video resolution must
        be at least 128x96. To create an output with the same number of frames as
        your input: Choose Maintain frame count. When you do, MediaConvert will not
        drop, interpolate, add, or otherwise change the frame count from your input
        to your output. Note that since the frame count is maintained, the duration
        of your output will become shorter at higher frame rates and longer at lower
        frame rates.'
    AvcIntraInterlaceMode:
      type: string
      enum:
      - PROGRESSIVE
      - TOP_FIELD
      - BOTTOM_FIELD
      - FOLLOW_TOP_FIELD
      - FOLLOW_BOTTOM_FIELD
      description: Choose the scan line type for the output. Keep the default value,
        Progressive to create a progressive output, regardless of the scan type of
        your input. Use Top field first or Bottom field first to create an output
        that's interlaced with the same field polarity throughout. Use Follow, default
        top or Follow, default bottom to produce outputs with the same field polarity
        as the source. For jobs that have multiple inputs, the output field polarity
        might change over the course of the output. Follow behavior depends on the
        input scan type. If the source is interlaced, the output will be interlaced
        with the same polarity as the source. If the source is progressive, the output
        will be interlaced with top field bottom field first, depending on which of
        the Follow options you choose.
    AvcIntraScanTypeConversionMode:
      type: string
      enum:
      - INTERLACED
      - INTERLACED_OPTIMIZE
      description: 'Use this setting for interlaced outputs, when your output frame
        rate is half of your input frame rate. In this situation, choose Optimized
        interlacing to create a better quality interlaced output. In this case, each
        progressive frame from the input corresponds to an interlaced field in the
        output. Keep the default value, Basic interlacing, for all other output frame
        rates. With basic interlacing, MediaConvert performs any frame rate conversion
        first and then interlaces the frames. When you choose Optimized interlacing
        and you set your output frame rate to a value that isn''t suitable for optimized
        interlacing, MediaConvert automatically falls back to basic interlacing. Required
        settings: To use optimized interlacing, you must set Telecine to None or Soft.
        You can''t use optimized interlacing for hard telecine outputs. You must also
        set Interlace mode to a value other than Progressive.'
    AvcIntraSlowPal:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: 'Ignore this setting unless your input frame rate is 23.976 or
        24 frames per second (fps). Enable slow PAL to create a 25 fps output. When
        you enable slow PAL, MediaConvert relabels the video frames to 25 fps and
        resamples your audio to keep it synchronized with the video. Note that enabling
        this setting will slightly reduce the duration of your video. Required settings:
        You must also set Framerate to 25.'
    AvcIntraTelecine:
      type: string
      enum:
      - NONE
      - HARD
      description: When you do frame rate conversion from 23.976 frames per second
        (fps) to 29.97 fps, and your output scan type is interlaced, you can optionally
        enable hard telecine to create a smoother picture. When you keep the default
        value, None, MediaConvert does a standard frame rate conversion to 29.97 without
        doing anything with the field polarity to create a smoother picture.
    AvcIntraUhdQualityTuningLevel:
      type: string
      enum:
      - SINGLE_PASS
      - MULTI_PASS
      description: Optional. Use Quality tuning level to choose how many transcoding
        passes MediaConvert does with your video. When you choose Multi-pass, your
        video quality is better and your output bitrate is more accurate. That is,
        the actual bitrate of your output is closer to the target bitrate defined
        in the specification. When you choose Single-pass, your encoding time is faster.
        The default behavior is Single-pass.
    BandwidthReductionFilterSharpening:
      type: string
      enum:
      - LOW
      - MEDIUM
      - HIGH
      - 'OFF'
      description: Optionally specify the level of sharpening to apply when you use
        the Bandwidth reduction filter. Sharpening adds contrast to the edges of your
        video content and can reduce softness. Keep the default value Off to apply
        no sharpening. Set Sharpening strength to Low to apply a minimal amount of
        sharpening, or High to apply a maximum amount of sharpening.
    BandwidthReductionFilterStrength:
      type: string
      enum:
      - LOW
      - MEDIUM
      - HIGH
      - AUTO
      - 'OFF'
      description: Specify the strength of the Bandwidth reduction filter. For most
        workflows, we recommend that you choose Auto to reduce the bandwidth of your
        output with little to no perceptual decrease in video quality. For high quality
        and high bitrate outputs, choose Low. For the most bandwidth reduction, choose
        High. We recommend that you choose High for low bitrate outputs. Note that
        High may incur a slight increase in the softness of your output.
    BillingTagsSource:
      type: string
      enum:
      - QUEUE
      - PRESET
      - JOB_TEMPLATE
      - JOB
      description: The tag type that AWS Billing and Cost Management will use to sort
        your AWS Elemental MediaConvert costs on any billing report that you set up.
    BurnInSubtitleStylePassthrough:
      type: string
      enum:
      - ENABLED
      - DISABLED
      description: 'To use the available style, color, and position information from
        your input captions: Set Style passthrough to Enabled. Note that MediaConvert
        uses default settings for any missing style or position information in your
        input captions To ignore the style and position information from your input
        captions and use default settings: Leave blank or keep the default value,
        Disabled. Default settings include white text with black outlining, bottom-center
        positioning, and automatic sizing. Whether you set Style passthrough to enabled
        or not, you can also choose to manually override any of the individual style
        and position settings. You can also override any fonts by manually specifying
        custom font files.'
    BurninSubtitleAlignment:
      type: string
      enum:
      - CENTERED
      - LEFT
      - AUTO
      description: Specify the alignment of your captions. If no explicit x_position
        is provided, setting alignment to centered will placethe captions at the bottom
        center of the output. Similarly, setting a left alignment willalign captions
        to the bottom left of the output. If x and y positions are given in conjunction
        with the alignment parameter, the font will be justified (either left or centered)
        relative to those coordinates.
    BurninSubtitleApplyFontColor:
      type: string
      enum:
      - WHITE_TEXT_ONLY
      - ALL_TEXT
      description: Ignore this setting unless Style passthrough is set to Enabled
        and Font color set to Black, Yellow, Red, Green, Blue, or Hex. Use Apply font
        color for additional font color controls. When you choose White text only,
        or leave blank, your font color setting only applies to white text in your
        input captions. For example, if your font color setting is Yellow, and your
        input captions have red and white text, your output captions will have red
        and yellow text. When you choose ALL_TEXT, your font color setting applies
        to all of your output captions text.
    BurninSubtitleBackgroundColor:
      type: string
      enum:
      - NONE
      - BLACK
      - WHITE
      - AUTO
      description: Specify the color of the rectangle behind the captions. Leave background
        color blank and set Style passthrough to enabled to use the background color
        data from your input captions, if present.
    BurninSubtitleFallbackFont:
      type: string
      enum:
      - BEST_MATCH
      - MONOSPACED_SANSSERIF
      - MONOSPACED_SERIF
      - PROPORTIONAL_SANSSERIF
      - PROPORTIONAL_SERIF
      description: Specify the font that you want the service to use for your burn
        in captions when your input captions specify a font that MediaConvert doesn't
        support. When you set Fallback font to best match, or leave blank, MediaConvert
        uses a supported font that most closely matches the font that your input captions
        specify. When there are multiple unsupported fonts in your input captions,
        MediaConvert matches each font with the supported font that matches best.
        When you explicitly choose a replacement font, MediaConvert uses that font
        to replace all unsupported fonts from your input.
    BurninSubtitleFontColor:
      type: string
      enum:
      - WHITE
      - BLACK
      - YELLOW
      - RED
      - GREEN
      - BLUE
      - HEX
      - AUTO
      description: Specify the color of the burned-in captions text. Leave Font color
        blank and set Style passthrough to enabled to use the font color data from
        your input captions, if present.
    BurninSubtitleOutlineColor:
      type: string
      enum:
      - BLACK
      - WHITE
      - YELLOW
      - RED
      - GREEN
      - BLUE
      - AUTO
      description: Specify font outline color. Leave Outline color blank and set Style
        passthrough to enabled to use the font outline color data from your input
        captions, if present.
    BurninSubtitleShadowColor:
      type: string
      enum:
      - NONE
      - BLACK
      - WHITE
      - AUTO
      description: Specify the color of the shadow cast by the captions. Leave Shadow
        color blank and set Style passthrough to enabled to use the shadow color data
        from your input captions, if present.
    BurninSubtitleTeletextSpacing:
      type: string
      enum:
      - FIXED_GRID
      - PROPORTIONAL
      - AUTO
      description: Specify whether the text spacing in your captions is set by the
        captions grid, or varies depending on letter width. Choose fixed grid to conform
        to the spacing specified in the captions file more accurately. Choose proportional
        to make the text easier to read for closed captions.
    CaptionDestinationType:
      type: string
      enum:
      - BURN_IN
      - DVB_SUB
      - EMBEDDED
      - EMBEDDED_PLUS_SCTE20
      - IMSC
      - SCTE20_PLUS_EMBEDDED
      - SCC
      - SRT
      - SMI
      - TELETEXT
      - TTML
      - WEBVTT
      description: Specify the format for this set of captions on this output. The
        default format is embedded without SCTE-20. Note that your choice of video
        output container constrains your choice of output captions format. For more
        information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/captions-support-tables.html.
        If you are using SCTE-20 and you want to create an output that complies with
        the SCTE-43 spec, choose SCTE-20 plus embedded. To create a non-compliant
        output where the embedded captions come first, choose Embedded plus SCTE-20.
    CaptionSourceByteRateLimit:
      type: string
      enum:
      - ENABLED
      - DISABLED
      description: 'Choose whether to limit the byte rate at which your SCC input
        captions are inserted into your output. To not limit the caption rate: We
        recommend that you keep the default value, Disabled. MediaConvert inserts
        captions in your output according to the byte rates listed in the EIA-608
        specification, typically 2 or 3 caption bytes per frame depending on your
        output frame rate. To limit your output caption rate: Choose Enabled. Choose
        this option if your downstream systems require a maximum of 2 caption bytes
        per frame. Note that this setting has no effect when your output frame rate
        is 30 or 60.'
    CaptionSourceConvertPaintOnToPopOn:
      type: string
      enum:
      - ENABLED
      - DISABLED
      description: 'Choose the presentation style of your input SCC captions. To use
        the same presentation style as your input: Keep the default value, Disabled.
        To convert paint-on captions to pop-on: Choose Enabled. We also recommend
        that you choose Enabled if you notice additional repeated lines in your output
        captions.'
    CaptionSourceType:
      type: string
      enum:
      - ANCILLARY
      - DVB_SUB
      - EMBEDDED
      - SCTE20
      - SCC
      - TTML
      - STL
      - SRT
      - SMI
      - SMPTE_TT
      - TELETEXT
      - NULL_SOURCE
      - IMSC
      - WEBVTT
      description: Use Source to identify the format of your input captions. The service
        cannot auto-detect caption format.
    ChromaPositionMode:
      type: string
      enum:
      - AUTO
      - FORCE_CENTER
      - FORCE_TOP_LEFT
      description: 'Specify the chroma sample positioning metadata for your H.264
        or H.265 output. To have MediaConvert automatically determine chroma positioning:
        We recommend that you keep the default value, Auto. To specify center positioning:
        Choose Force center. To specify top left positioning: Choose Force top left.'
    CmafClientCache:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: 'Disable this setting only when your workflow requires the #EXT-X-ALLOW-CACHE:no
        tag. Otherwise, keep the default value Enabled and control caching in your
        video distribution set up. For example, use the Cache-Control http header.'
    CmafCodecSpecification:
      type: string
      enum:
      - RFC_6381
      - RFC_4281
      description: Specification to use (RFC-6381 or the default RFC-4281) during
        m3u8 playlist generation.
    CmafEncryptionType:
      type: string
      enum:
      - SAMPLE_AES
      - AES_CTR
      description: Specify the encryption scheme that you want the service to use
        when encrypting your CMAF segments. Choose AES-CBC subsample or AES_CTR.
    CmafImageBasedTrickPlay:
      type: string
      enum:
      - NONE
      - THUMBNAIL
      - THUMBNAIL_AND_FULLFRAME
      - ADVANCED
      description: 'Specify whether MediaConvert generates images for trick play.
        Keep the default value, None, to not generate any images. Choose Thumbnail
        to generate tiled thumbnails. Choose Thumbnail and full frame to generate
        tiled thumbnails and full-resolution images of single frames. When you enable
        Write HLS manifest, MediaConvert creates a child manifest for each set of
        images that you generate and adds corresponding entries to the parent manifest.
        When you enable Write DASH manifest, MediaConvert adds an entry in the .mpd
        manifest for each set of images that you generate. A common application for
        these images is Roku trick mode. The thumbnails and full-frame images that
        MediaConvert creates with this feature are compatible with this Roku specification:
        https://developer.roku.com/docs/developer-program/media-playback/trick-mode/hls-and-dash.md'
    CmafInitializationVectorInManifest:
      type: string
      enum:
      - INCLUDE
      - EXCLUDE
      description: When you use DRM with CMAF outputs, choose whether the service
        writes the 128-bit encryption initialization vector in the HLS and DASH manifests.
    CmafIntervalCadence:
      type: string
      enum:
      - FOLLOW_IFRAME
      - FOLLOW_CUSTOM
      description: The cadence MediaConvert follows for generating thumbnails. If
        set to FOLLOW_IFRAME, MediaConvert generates thumbnails for each IDR frame
        in the output (matching the GOP cadence). If set to FOLLOW_CUSTOM, MediaConvert
        generates thumbnails according to the interval you specify in thumbnailInterval.
    CmafKeyProviderType:
      type: string
      enum:
      - SPEKE
      - STATIC_KEY
      description: Specify whether your DRM encryption key is static or from a key
        provider that follows the SPEKE standard. For more information about SPEKE,
        see https://docs.aws.amazon.com/speke/latest/documentation/what-is-speke.html.
    CmafManifestCompression:
      type: string
      enum:
      - GZIP
      - NONE
      description: When set to GZIP, compresses HLS playlist.
    CmafManifestDurationFormat:
      type: string
      enum:
      - FLOATING_POINT
      - INTEGER
      description: Indicates whether the output manifest should use floating point
        values for segment duration.
    CmafMpdManifestBandwidthType:
      type: string
      enum:
      - AVERAGE
      - MAX
      description: 'Specify how the value for bandwidth is determined for each video
        Representation in your output MPD manifest. We recommend that you choose a
        MPD manifest bandwidth type that is compatible with your downstream player
        configuration. Max: Use the same value that you specify for Max bitrate in
        the video output, in bits per second. Average: Use the calculated average
        bitrate of the encoded video output, in bits per second.'
    CmafMpdProfile:
      type: string
      enum:
      - MAIN_PROFILE
      - ON_DEMAND_PROFILE
      description: Specify whether your DASH profile is on-demand or main. When you
        choose Main profile, the service signals urn:mpeg:dash:profile:isoff-main:2011
        in your .mpd DASH manifest. When you choose On-demand, the service signals
        urn:mpeg:dash:profile:isoff-on-demand:2011 in your .mpd. When you choose On-demand,
        you must also set the output group setting Segment control to Single file.
    CmafPtsOffsetHandlingForBFrames:
      type: string
      enum:
      - ZERO_BASED
      - MATCH_INITIAL_PTS
      description: Use this setting only when your output video stream has B-frames,
        which causes the initial presentation time stamp (PTS) to be offset from the
        initial decode time stamp (DTS). Specify how MediaConvert handles PTS when
        writing time stamps in output DASH manifests. Choose Match initial PTS when
        you want MediaConvert to use the initial PTS as the first time stamp in the
        manifest. Choose Zero-based to have MediaConvert ignore the initial PTS in
        the video stream and instead write the initial time stamp as zero in the manifest.
        For outputs that don't have B-frames, the time stamps in your DASH manifests
        start at zero regardless of your choice here.
    CmafSegmentControl:
      type: string
      enum:
      - SINGLE_FILE
      - SEGMENTED_FILES
      description: When set to SINGLE_FILE, a single output file is generated, which
        is internally segmented using the Fragment Length and Segment Length. When
        set to SEGMENTED_FILES, separate segment files will be created.
    CmafSegmentLengthControl:
      type: string
      enum:
      - EXACT
      - GOP_MULTIPLE
      - MATCH
      description: 'Specify how you want MediaConvert to determine segment lengths
        in this output group. To use the exact value that you specify under Segment
        length: Choose Exact. Note that this might result in additional I-frames in
        the output GOP. To create segment lengths that are a multiple of the GOP:
        Choose Multiple of GOP. MediaConvert will round up the segment lengths to
        match the next GOP boundary. To have MediaConvert automatically determine
        a segment duration that is a multiple of both the audio packets and the frame
        rates: Choose Match. When you do, also specify a target segment duration under
        Segment length. This is useful for some ad-insertion or segment replacement
        workflows. Note that Match has the following requirements: - Output containers:
        Include at least one video output and at least one audio output. Audio-only
        outputs are not supported. - Output frame rate: Follow source is not supported.
        - Multiple output frame rates: When you specify multiple outputs, we recommend
        they share a similar frame rate (as in X/3, X/2, X, or 2X). For example: 5,
        15, 30 and 60. Or: 25 and 50. (Outputs must share an integer multiple.) -
        Output audio codec: Specify Advanced Audio Coding (AAC). - Output sample rate:
        Choose 48kHz.'
    CmafStreamInfResolution:
      type: string
      enum:
      - INCLUDE
      - EXCLUDE
      description: Include or exclude RESOLUTION attribute for video in EXT-X-STREAM-INF
        tag of variant manifest.
    CmafTargetDurationCompatibilityMode:
      type: string
      enum:
      - LEGACY
      - SPEC_COMPLIANT
      description: When set to LEGACY, the segment target duration is always rounded
        up to the nearest integer value above its current value in seconds. When set
        to SPEC\\_COMPLIANT, the segment target duration is rounded up to the nearest
        integer value if fraction seconds are greater than or equal to 0.5 (>= 0.5)
        and rounded down if less than 0.5 (< 0.5). You may need to use LEGACY if your
        client needs to ensure that the target duration is always longer than the
        actual duration of the segment. Some older players may experience interrupted
        playback when the actual duration of a track in a segment is longer than the
        target duration.
    CmafVideoCompositionOffsets:
      type: string
      enum:
      - SIGNED
      - UNSIGNED
      description: Specify the video sample composition time offset mode in the output
        fMP4 TRUN box. For wider player compatibility, set Video composition offsets
        to Unsigned or leave blank. The earliest presentation time may be greater
        than zero, and sample composition time offsets will increment using unsigned
        integers. For strict fMP4 video and audio timing, set Video composition offsets
        to Signed. The earliest presentation time will be equal to zero, and sample
        composition time offsets will increment using signed integers.
    CmafWriteDASHManifest:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: When set to ENABLED, a DASH MPD manifest will be generated for
        this output.
    CmafWriteHLSManifest:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: When set to ENABLED, an Apple HLS manifest will be generated for
        this output.
    CmafWriteSegmentTimelineInRepresentation:
      type: string
      enum:
      - ENABLED
      - DISABLED
      description: When you enable Precise segment duration in DASH manifests, your
        DASH manifest shows precise segment durations. The segment duration information
        appears inside the SegmentTimeline element, inside SegmentTemplate at the
        Representation level. When this feature isn't enabled, the segment durations
        in your DASH manifest are approximate. The segment duration information appears
        in the duration attribute of the SegmentTemplate element.
    CmfcAudioDuration:
      type: string
      enum:
      - DEFAULT_CODEC_DURATION
      - MATCH_VIDEO_DURATION
      description: Specify this setting only when your output will be consumed by
        a downstream repackaging workflow that is sensitive to very small duration
        differences between video and audio. For this situation, choose Match video
        duration. In all other cases, keep the default value, Default codec duration.
        When you choose Match video duration, MediaConvert pads the output audio streams
        with silence or trims them to ensure that the total duration of each audio
        stream is at least as long as the total duration of the video stream. After
        padding or trimming, the audio stream duration is no more than one frame longer
        than the video stream. MediaConvert applies audio padding or trimming only
        to the end of the last segment of the output. For unsegmented outputs, MediaConvert
        adds padding only to the end of the file. When you keep the default value,
        any minor discrepancies between audio and video duration will depend on your
        output audio codec.
    CmfcAudioTrackType:
      type: string
      enum:
      - ALTERNATE_AUDIO_AUTO_SELECT_DEFAULT
      - ALTERNATE_AUDIO_AUTO_SELECT
      - ALTERNATE_AUDIO_NOT_AUTO_SELECT
      - AUDIO_ONLY_VARIANT_STREAM
      description: Use this setting to control the values that MediaConvert puts in
        your HLS parent playlist to control how the client player selects which audio
        track to play. Choose Audio-only variant stream (AUDIO_ONLY_VARIANT_STREAM)
        for any variant that you want to prohibit the client from playing with video.
        This causes MediaConvert to represent the variant as an EXT-X-STREAM-INF in
        the HLS manifest. The other options for this setting determine the values
        that MediaConvert writes for the DEFAULT and AUTOSELECT attributes of the
        EXT-X-MEDIA entry for the audio variant. For more information about these
        attributes, see the Apple documentation article https://developer.apple.com/documentation/http_live_streaming/example_playlists_for_http_live_streaming/adding_alternate_media_to_a_playlist.
        Choose Alternate audio, auto select, default to set DEFAULT=YES and AUTOSELECT=YES.
        Choose this value for only one variant in your output group. Choose Alternate
        audio, auto select, not default to set DEFAULT=NO and AUTOSELECT=YES. Choose
        Alternate Audio, Not Auto Select to set DEFAULT=NO and AUTOSELECT=NO. When
        you don't specify a value for this setting, MediaConvert defaults to Alternate
        audio, auto select, default. When there is more than one variant in your output
        group, you must explicitly choose a value for this setting.
    CmfcDescriptiveVideoServiceFlag:
      type: string
      enum:
      - DONT_FLAG
      - FLAG
      description: Specify whether to flag this audio track as descriptive video service
        (DVS) in your HLS parent manifest. When you choose Flag, MediaConvert includes
        the parameter CHARACTERISTICS="public.accessibility.describes-video" in the
        EXT-X-MEDIA entry for this track. When you keep the default choice, Don't
        flag, MediaConvert leaves this parameter out. The DVS flag can help with accessibility
        on Apple devices. For more information, see the Apple documentation.
    CmfcIFrameOnlyManifest:
      type: string
      enum:
      - INCLUDE
      - EXCLUDE
      description: Choose Include to have MediaConvert generate an HLS child manifest
        that lists only the I-frames for this rendition, in addition to your regular
        manifest for this rendition. You might use this manifest as part of a workflow
        that creates preview functions for your video. MediaConvert adds both the
        I-frame only child manifest and the regular child manifest to the parent manifest.
        When you don't need the I-frame only child manifest, keep the default value
        Exclude.
    CmfcKlvMetadata:
      type: string
      enum:
      - PASSTHROUGH
      - NONE
      description: 'To include key-length-value metadata in this output: Set KLV metadata
        insertion to Passthrough. MediaConvert reads KLV metadata present in your
        input and writes each instance to a separate event message box in the output,
        according to MISB ST1910.1. To exclude this KLV metadata: Set KLV metadata
        insertion to None or leave blank.'
    CmfcManifestMetadataSignaling:
      type: string
      enum:
      - ENABLED
      - DISABLED
      description: To add an InbandEventStream element in your output MPD manifest
        for each type of event message, set Manifest metadata signaling to Enabled.
        For ID3 event messages, the InbandEventStream element schemeIdUri will be
        same value that you specify for ID3 metadata scheme ID URI. For SCTE35 event
        messages, the InbandEventStream element schemeIdUri will be "urn:scte:scte35:2013:bin".
        To leave these elements out of your output MPD manifest, set Manifest metadata
        signaling to Disabled. To enable Manifest metadata signaling, you must also
        set SCTE-35 source to Passthrough, ESAM SCTE-35 to insert, or ID3 metadata
        to Passthrough.
    CmfcScte35Esam:
      type: string
      enum:
      - INSERT
      - NONE
      description: Use this setting only when you specify SCTE-35 markers from ESAM.
        Choose INSERT to put SCTE-35 markers in this output at the insertion points
        that you specify in an ESAM XML document. Provide the document in the setting
        SCC XML.
    CmfcScte35Source:
      type: string
      enum:
      - PASSTHROUGH
      - NONE
      description: Ignore this setting unless you have SCTE-35 markers in your input
        video file. Choose Passthrough if you want SCTE-35 markers that appear in
        your input to also appear in this output. Choose None if you don't want those
        SCTE-35 markers in this output.
    CmfcTimedMetadata:
      type: string
      enum:
      - PASSTHROUGH
      - NONE
      description: 'To include ID3 metadata in this output: Set ID3 metadata to Passthrough.
        Specify this ID3 metadata in Custom ID3 metadata inserter. MediaConvert writes
        each instance of ID3 metadata in a separate Event Message (eMSG) box. To exclude
        this ID3 metadata: Set ID3 metadata to None or leave blank.'
    CmfcTimedMetadataBoxVersion:
      type: string
      enum:
      - VERSION_0
      - VERSION_1
      description: 'Specify the event message box (eMSG) version for ID3 timed metadata
        in your output.

        For more information, see ISO/IEC 23009-1:2022 section 5.10.3.3.3 Syntax.

        Leave blank to use the default value Version 0.

        When you specify Version 1, you must also set ID3 metadata to Passthrough.'
    Codec:
      type: string
      enum:
      - UNKNOWN
      - AAC
      - AC3
      - EAC3
      - FLAC
      - MP3
      - OPUS
      - PCM
      - VORBIS
      - AV1
      - AVC
      - HEVC
      - MJPEG
      - MP4V
      - MPEG2
      - PRORES
      - THEORA
      - VP8
      - VP9
      - C608
      - C708
      - WEBVTT
    ColorMetadata:
      type: string
      enum:
      - IGNORE
      - INSERT
      description: Choose Insert for this setting to include color metadata in this
        output. Choose Ignore to exclude color metadata from this output. If you don't
        specify a value, the service sets this to Insert by default.
    ColorPrimaries:
      type: string
      enum:
      - ITU_709
      - UNSPECIFIED
      - RESERVED
      - ITU_470M
      - ITU_470BG
      - SMPTE_170M
      - SMPTE_240M
      - GENERIC_FILM
      - ITU_2020
      - SMPTE_428_1
      - SMPTE_431_2
      - SMPTE_EG_432_1
      - IPT
      - SMPTE_2067XYZ
      - EBU_3213_E
      - LAST
      description: The color space color primaries of the video track.
    ColorSpace:
      type: string
      enum:
      - FOLLOW
      - REC_601
      - REC_709
      - HDR10
      - HLG_2020
      - P3DCI
      - P3D65_SDR
      - P3D65_HDR
      description: "If your input video has accurate color space metadata, or if you\
        \ don't know about color space: Keep the default value, Follow. MediaConvert\
        \ will automatically detect your input color space. If your input video has\
        \ metadata indicating the wrong color space, or has missing metadata: Specify\
        \ the accurate color space here. If your input video is HDR 10 and the SMPTE\
        \ ST 2086 Mastering Display Color Volume static metadata isn't present in\
        \ your video stream, or if that metadata is present but not accurate: Choose\
        \ Force HDR 10. Specify correct values in the input HDR 10 metadata settings.\
        \ For more information about HDR jobs, see https://docs.aws.amazon.com/console/mediaconvert/hdr.\
        \ When you specify an input color space, MediaConvert uses the following color\
        \ space metadata, which includes color primaries, transfer characteristics,\
        \ and matrix coefficients:\n * HDR 10: BT.2020, PQ, BT.2020 non-constant\n\
        \ * HLG 2020: BT.2020, HLG, BT.2020 non-constant\n * P3DCI (Theater): DCIP3,\
        \ SMPTE 428M, BT.709\n * P3D65 (SDR): Display P3, sRGB, BT.709\n * P3D65 (HDR):\
        \ Display P3, PQ, BT.709"
    ColorSpaceConversion:
      type: string
      enum:
      - NONE
      - FORCE_601
      - FORCE_709
      - FORCE_HDR10
      - FORCE_HLG_2020
      - FORCE_P3DCI
      - FORCE_P3D65_SDR
      - FORCE_P3D65_HDR
      description: "Specify the color space you want for this output. The service\
        \ supports conversion between HDR formats, between SDR formats, from SDR to\
        \ HDR, and from HDR to SDR. SDR to HDR conversion doesn't upgrade the dynamic\
        \ range. The converted video has an HDR format, but visually appears the same\
        \ as an unconverted output. HDR to SDR conversion uses tone mapping to approximate\
        \ the outcome of manually regrading from HDR to SDR. When you specify an output\
        \ color space, MediaConvert uses the following color space metadata, which\
        \ includes color primaries, transfer characteristics, and matrix coefficients:\n\
        \  * HDR 10: BT.2020, PQ, BT.2020 non-constant\n  * HLG 2020: BT.2020, HLG,\
        \ BT.2020 non-constant\n  * P3DCI (Theater): DCIP3, SMPTE 428M, BT.709\n \
        \ * P3D65 (SDR): Display P3, sRGB, BT.709\n  * P3D65 (HDR): Display P3, PQ,\
        \ BT.709"
    ColorSpaceUsage:
      type: string
      enum:
      - FORCE
      - FALLBACK
      description: There are two sources for color metadata, the input file and the
        job input settings Color space and HDR master display information settings.
        The Color space usage setting determines which takes precedence. Choose Force
        to use color metadata from the input job settings. If you don't specify values
        for those settings, the service defaults to using metadata from your input.
        FALLBACK - Choose Fallback to use color metadata from the source when it is
        present. If there's no color metadata in your input file, the service defaults
        to using values you specify in the input settings.
    Commitment:
      type: string
      enum:
      - ONE_YEAR
      description: The length of the term of your reserved queue pricing plan commitment.
    ContainerType:
      type: string
      enum:
      - F4V
      - GIF
      - ISMV
      - M2TS
      - M3U8
      - CMFC
      - MOV
      - MP4
      - MPD
      - MXF
      - OGG
      - WEBM
      - RAW
      - Y4M
      description: Container for this output. Some containers require a container
        settings object. If not specified, the default object will be created.
    CopyProtectionAction:
      type: string
      enum:
      - PASSTHROUGH
      - STRIP
      description: The action to take on copy and redistribution control XDS packets.
        If you select PASSTHROUGH, packets will not be changed. If you select STRIP,
        any packets will be removed in output captions.
    DashIsoGroupAudioChannelConfigSchemeIdUri:
      type: string
      enum:
      - MPEG_CHANNEL_CONFIGURATION
      - DOLBY_CHANNEL_CONFIGURATION
      description: 'Use this setting only when your audio codec is a Dolby one (AC3,
        EAC3, or Atmos) and your downstream workflow requires that your DASH manifest
        use the Dolby channel configuration tag, rather than the MPEG one. For example,
        you might need to use this to make dynamic ad insertion work. Specify which
        audio channel configuration scheme ID URI MediaConvert writes in your DASH
        manifest. Keep the default value, MPEG channel configuration, to have MediaConvert
        write this: urn:mpeg:mpegB:cicp:ChannelConfiguration. Choose Dolby channel
        configuration to have MediaConvert write this instead: tag:dolby.com,2014:dash:audio_channel_configuration:2011.'
    DashIsoHbbtvCompliance:
      type: string
      enum:
      - HBBTV_1_5
      - NONE
      description: Supports HbbTV specification as indicated
    DashIsoImageBasedTrickPlay:
      type: string
      enum:
      - NONE
      - THUMBNAIL
      - THUMBNAIL_AND_FULLFRAME
      - ADVANCED
      description: 'Specify whether MediaConvert generates images for trick play.
        Keep the default value, None, to not generate any images. Choose Thumbnail
        to generate tiled thumbnails. Choose Thumbnail and full frame to generate
        tiled thumbnails and full-resolution images of single frames. MediaConvert
        adds an entry in the .mpd manifest for each set of images that you generate.
        A common application for these images is Roku trick mode. The thumbnails and
        full-frame images that MediaConvert creates with this feature are compatible
        with this Roku specification: https://developer.roku.com/docs/developer-program/media-playback/trick-mode/hls-and-dash.md'
    DashIsoIntervalCadence:
      type: string
      enum:
      - FOLLOW_IFRAME
      - FOLLOW_CUSTOM
      description: The cadence MediaConvert follows for generating thumbnails. If
        set to FOLLOW_IFRAME, MediaConvert generates thumbnails for each IDR frame
        in the output (matching the GOP cadence). If set to FOLLOW_CUSTOM, MediaConvert
        generates thumbnails according to the interval you specify in thumbnailInterval.
    DashIsoMpdManifestBandwidthType:
      type: string
      enum:
      - AVERAGE
      - MAX
      description: 'Specify how the value for bandwidth is determined for each video
        Representation in your output MPD manifest. We recommend that you choose a
        MPD manifest bandwidth type that is compatible with your downstream player
        configuration. Max: Use the same value that you specify for Max bitrate in
        the video output, in bits per second. Average: Use the calculated average
        bitrate of the encoded video output, in bits per second.'
    DashIsoMpdProfile:
      type: string
      enum:
      - MAIN_PROFILE
      - ON_DEMAND_PROFILE
      description: Specify whether your DASH profile is on-demand or main. When you
        choose Main profile, the service signals urn:mpeg:dash:profile:isoff-main:2011
        in your .mpd DASH manifest. When you choose On-demand, the service signals
        urn:mpeg:dash:profile:isoff-on-demand:2011 in your .mpd. When you choose On-demand,
        you must also set the output group setting Segment control to Single file.
    DashIsoPlaybackDeviceCompatibility:
      type: string
      enum:
      - CENC_V1
      - UNENCRYPTED_SEI
      description: This setting can improve the compatibility of your output with
        video players on obsolete devices. It applies only to DASH H.264 outputs with
        DRM encryption. Choose Unencrypted SEI only to correct problems with playback
        on older devices. Otherwise, keep the default setting CENC v1. If you choose
        Unencrypted SEI, for that output, the service will exclude the access unit
        delimiter and will leave the SEI NAL units unencrypted.
    DashIsoPtsOffsetHandlingForBFrames:
      type: string
      enum:
      - ZERO_BASED
      - MATCH_INITIAL_PTS
      description: Use this setting only when your output video stream has B-frames,
        which causes the initial presentation time stamp (PTS) to be offset from the
        initial decode time stamp (DTS). Specify how MediaConvert handles PTS when
        writing time stamps in output DASH manifests. Choose Match initial PTS when
        you want MediaConvert to use the initial PTS as the first time stamp in the
        manifest. Choose Zero-based to have MediaConvert ignore the initial PTS in
        the video stream and instead write the initial time stamp as zero in the manifest.
        For outputs that don't have B-frames, the time stamps in your DASH manifests
        start at zero regardless of your choice here.
    DashIsoSegmentControl:
      type: string
      enum:
      - SINGLE_FILE
      - SEGMENTED_FILES
      description: When set to SINGLE_FILE, a single output file is generated, which
        is internally segmented using the Fragment Length and Segment Length. When
        set to SEGMENTED_FILES, separate segment files will be created.
    DashIsoSegmentLengthControl:
      type: string
      enum:
      - EXACT
      - GOP_MULTIPLE
      - MATCH
      description: 'Specify how you want MediaConvert to determine segment lengths
        in this output group. To use the exact value that you specify under Segment
        length: Choose Exact. Note that this might result in additional I-frames in
        the output GOP. To create segment lengths that are a multiple of the GOP:
        Choose Multiple of GOP. MediaConvert will round up the segment lengths to
        match the next GOP boundary. To have MediaConvert automatically determine
        a segment duration that is a multiple of both the audio packets and the frame
        rates: Choose Match. When you do, also specify a target segment duration under
        Segment length. This is useful for some ad-insertion or segment replacement
        workflows. Note that Match has the following requirements: - Output containers:
        Include at least one video output and at least one audio output. Audio-only
        outputs are not supported. - Output frame rate: Follow source is not supported.
        - Multiple output frame rates: When you specify multiple outputs, we recommend
        they share a similar frame rate (as in X/3, X/2, X, or 2X). For example: 5,
        15, 30 and 60. Or: 25 and 50. (Outputs must share an integer multiple.) -
        Output audio codec: Specify Advanced Audio Coding (AAC). - Output sample rate:
        Choose 48kHz.'
    DashIsoVideoCompositionOffsets:
      type: string
      enum:
      - SIGNED
      - UNSIGNED
      description: Specify the video sample composition time offset mode in the output
        fMP4 TRUN box. For wider player compatibility, set Video composition offsets
        to Unsigned or leave blank. The earliest presentation time may be greater
        than zero, and sample composition time offsets will increment using unsigned
        integers. For strict fMP4 video and audio timing, set Video composition offsets
        to Signed. The earliest presentation time will be equal to zero, and sample
        composition time offsets will increment using signed integers.
    DashIsoWriteSegmentTimelineInRepresentation:
      type: string
      enum:
      - ENABLED
      - DISABLED
      description: When you enable Precise segment duration in manifests, your DASH
        manifest shows precise segment durations. The segment duration information
        appears inside the SegmentTimeline element, inside SegmentTemplate at the
        Representation level. When this feature isn't enabled, the segment durations
        in your DASH manifest are approximate. The segment duration information appears
        in the duration attribute of the SegmentTemplate element.
    DashManifestStyle:
      type: string
      enum:
      - BASIC
      - COMPACT
      - DISTINCT
      description: 'Specify how MediaConvert writes SegmentTimeline in your output
        DASH manifest. To write a SegmentTimeline in each video Representation: Keep
        the default value, Basic. To write a common SegmentTimeline in the video AdaptationSet:
        Choose Compact. Note that MediaConvert will still write a SegmentTimeline
        in any Representation that does not share a common timeline. To write a video
        AdaptationSet for each different output framerate, and a common SegmentTimeline
        in each AdaptationSet: Choose Distinct.'
    DecryptionMode:
      type: string
      enum:
      - AES_CTR
      - AES_CBC
      - AES_GCM
      description: Specify the encryption mode that you used to encrypt your input
        files.
    DeinterlaceAlgorithm:
      type: string
      enum:
      - INTERPOLATE
      - INTERPOLATE_TICKER
      - BLEND
      - BLEND_TICKER
      - LINEAR_INTERPOLATION
      description: 'Only applies when you set Deinterlace mode to Deinterlace or Adaptive.
        Interpolate produces sharper pictures, while blend produces smoother motion.
        If your source file includes a ticker, such as a scrolling headline at the
        bottom of the frame: Choose Interpolate ticker or Blend ticker. To apply field
        doubling: Choose Linear interpolation. Note that Linear interpolation may
        introduce video artifacts into your output.'
    DeinterlacerControl:
      type: string
      enum:
      - FORCE_ALL_FRAMES
      - NORMAL
      description: '- When set to NORMAL (default), the deinterlacer does not convert
        frames that are tagged in metadata as progressive. It will only convert those
        that are tagged as some other type. - When set to FORCE_ALL_FRAMES, the deinterlacer
        converts every frame to progressive - even those that are already tagged as
        progressive. Turn Force mode on only if there is a good chance that the metadata
        has tagged frames as progressive when they are not progressive. Do not turn
        on otherwise; processing frames that are already progressive into progressive
        will probably result in lower quality video.'
    DeinterlacerMode:
      type: string
      enum:
      - DEINTERLACE
      - INVERSE_TELECINE
      - ADAPTIVE
      description: 'Use Deinterlacer to choose how the service will do deinterlacing.
        Default is Deinterlace.

        - Deinterlace converts interlaced to progressive.

        - Inverse telecine converts Hard Telecine 29.97i to progressive 23.976p.

        - Adaptive auto-detects and converts to progressive.'
    DescribeEndpointsMode:
      type: string
      enum:
      - DEFAULT
      - GET_ONLY
      description: Optional field, defaults to DEFAULT. Specify DEFAULT for this operation
        to return your endpoints if any exist, or to create an endpoint for you and
        return it if one doesn't already exist. Specify GET_ONLY to return your endpoints
        if any exist, or an empty list if none exist.
    DolbyVisionLevel6Mode:
      type: string
      enum:
      - PASSTHROUGH
      - RECALCULATE
      - SPECIFY
      description: Use Dolby Vision Mode to choose how the service will handle Dolby
        Vision MaxCLL and MaxFALL properies.
    DolbyVisionMapping:
      type: string
      enum:
      - HDR10_NOMAP
      - HDR10_1000
      description: Required when you set Dolby Vision Profile to Profile 8.1. When
        you set Content mapping to None, content mapping is not applied to the HDR10-compatible
        signal. Depending on the source peak nit level, clipping might occur on HDR
        devices without Dolby Vision. When you set Content mapping to HDR10 1000,
        the transcoder creates a 1,000 nits peak HDR10-compatible signal by applying
        static content mapping to the source. This mode is speed-optimized for PQ10
        sources with metadata that is created from analysis. For graded Dolby Vision
        content, be aware that creative intent might not be guaranteed with extreme
        1,000 nits trims.
    DolbyVisionProfile:
      type: string
      enum:
      - PROFILE_5
      - PROFILE_8_1
      description: Required when you enable Dolby Vision. Use Profile 5 to include
        frame-interleaved Dolby Vision metadata in your output. Your input must include
        Dolby Vision metadata or an HDR10 YUV color space. Use Profile 8.1 to include
        frame-interleaved Dolby Vision metadata and HDR10 metadata in your output.
        Your input must include Dolby Vision metadata.
    DropFrameTimecode:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: Applies only to 29.97 fps outputs. When this feature is enabled,
        the service will use drop-frame timecode on outputs. If it is not possible
        to use drop-frame timecode, the system will fall back to non-drop-frame. This
        setting is enabled by default when Timecode insertion or Timecode track is
        enabled.
    DvbSubSubtitleFallbackFont:
      type: string
      enum:
      - BEST_MATCH
      - MONOSPACED_SANSSERIF
      - MONOSPACED_SERIF
      - PROPORTIONAL_SANSSERIF
      - PROPORTIONAL_SERIF
      description: Specify the font that you want the service to use for your burn
        in captions when your input captions specify a font that MediaConvert doesn't
        support. When you set Fallback font to best match, or leave blank, MediaConvert
        uses a supported font that most closely matches the font that your input captions
        specify. When there are multiple unsupported fonts in your input captions,
        MediaConvert matches each font with the supported font that matches best.
        When you explicitly choose a replacement font, MediaConvert uses that font
        to replace all unsupported fonts from your input.
    DvbSubtitleAlignment:
      type: string
      enum:
      - CENTERED
      - LEFT
      - AUTO
      description: Specify the alignment of your captions. If no explicit x_position
        is provided, setting alignment to centered will placethe captions at the bottom
        center of the output. Similarly, setting a left alignment willalign captions
        to the bottom left of the output. If x and y positions are given in conjunction
        with the alignment parameter, the font will be justified (either left or centered)
        relative to those coordinates. Within your job settings, all of your DVB-Sub
        settings must be identical.
    DvbSubtitleApplyFontColor:
      type: string
      enum:
      - WHITE_TEXT_ONLY
      - ALL_TEXT
      description: Ignore this setting unless Style Passthrough is set to Enabled
        and Font color set to Black, Yellow, Red, Green, Blue, or Hex. Use Apply font
        color for additional font color controls. When you choose White text only,
        or leave blank, your font color setting only applies to white text in your
        input captions. For example, if your font color setting is Yellow, and your
        input captions have red and white text, your output captions will have red
        and yellow text. When you choose ALL_TEXT, your font color setting applies
        to all of your output captions text.
    DvbSubtitleBackgroundColor:
      type: string
      enum:
      - NONE
      - BLACK
      - WHITE
      - AUTO
      description: Specify the color of the rectangle behind the captions. Leave background
        color blank and set Style passthrough to enabled to use the background color
        data from your input captions, if present.
    DvbSubtitleFontColor:
      type: string
      enum:
      - WHITE
      - BLACK
      - YELLOW
      - RED
      - GREEN
      - BLUE
      - HEX
      - AUTO
      description: Specify the color of the captions text. Leave Font color blank
        and set Style passthrough to enabled to use the font color data from your
        input captions, if present. Within your job settings, all of your DVB-Sub
        settings must be identical.
    DvbSubtitleOutlineColor:
      type: string
      enum:
      - BLACK
      - WHITE
      - YELLOW
      - RED
      - GREEN
      - BLUE
      - AUTO
      description: Specify font outline color. Leave Outline color blank and set Style
        passthrough to enabled to use the font outline color data from your input
        captions, if present. Within your job settings, all of your DVB-Sub settings
        must be identical.
    DvbSubtitleShadowColor:
      type: string
      enum:
      - NONE
      - BLACK
      - WHITE
      - AUTO
      description: Specify the color of the shadow cast by the captions. Leave Shadow
        color blank and set Style passthrough to enabled to use the shadow color data
        from your input captions, if present. Within your job settings, all of your
        DVB-Sub settings must be identical.
    DvbSubtitleStylePassthrough:
      type: string
      enum:
      - ENABLED
      - DISABLED
      description: 'To use the available style, color, and position information from
        your input captions: Set Style passthrough to Enabled. Note that MediaConvert
        uses default settings for any missing style or position information in your
        input captions To ignore the style and position information from your input
        captions and use default settings: Leave blank or keep the default value,
        Disabled. Default settings include white text with black outlining, bottom-center
        positioning, and automatic sizing. Whether you set Style passthrough to enabled
        or not, you can also choose to manually override any of the individual style
        and position settings. You can also override any fonts by manually specifying
        custom font files.'
    DvbSubtitleTeletextSpacing:
      type: string
      enum:
      - FIXED_GRID
      - PROPORTIONAL
      - AUTO
      description: Specify whether the Text spacing in your captions is set by the
        captions grid, or varies depending on letter width. Choose fixed grid to conform
        to the spacing specified in the captions file more accurately. Choose proportional
        to make the text easier to read for closed captions. Within your job settings,
        all of your DVB-Sub settings must be identical.
    DvbSubtitlingType:
      type: string
      enum:
      - HEARING_IMPAIRED
      - STANDARD
      description: Specify whether your DVB subtitles are standard or for hearing
        impaired. Choose hearing impaired if your subtitles include audio descriptions
        and dialogue. Choose standard if your subtitles include only dialogue.
    DvbddsHandling:
      type: string
      enum:
      - NONE
      - SPECIFIED
      - NO_DISPLAY_WINDOW
      description: 'Specify how MediaConvert handles the display definition segment
        (DDS). To exclude the DDS from this set of captions: Keep the default, None.
        To include the DDS: Choose Specified. When you do, also specify the offset
        coordinates of the display window with DDS x-coordinate and DDS y-coordinate.
        To include the DDS, but not include display window data: Choose No display
        window. When you do, you can write position metadata to the page composition
        segment (PCS) with DDS x-coordinate and DDS y-coordinate. For video resolutions
        with a height of 576 pixels or less, MediaConvert doesn''t include the DDS,
        regardless of the value you choose for DDS handling. All burn-in and DVB-Sub
        font settings must match.'
    DynamicAudioSelectorType:
      type: string
      enum:
      - ALL_TRACKS
      - LANGUAGE_CODE
      description: 'Specify which audio tracks to dynamically select from your source.
        To select all audio tracks: Keep the default value, All tracks. To select
        all audio tracks with a specific language code: Choose Language code. When
        you do, you must also specify a language code under the Language code setting.
        If there is no matching Language code in your source, then no track will be
        selected.'
    Eac3AtmosBitstreamMode:
      type: string
      enum:
      - COMPLETE_MAIN
      description: Specify the bitstream mode for the E-AC-3 stream that the encoder
        emits. For more information about the EAC3 bitstream mode, see ATSC A/52-2012
        (Annex E).
    Eac3AtmosCodingMode:
      type: string
      enum:
      - CODING_MODE_AUTO
      - CODING_MODE_5_1_4
      - CODING_MODE_7_1_4
      - CODING_MODE_9_1_6
      description: The coding mode for Dolby Digital Plus JOC (Atmos).
    Eac3AtmosDialogueIntelligence:
      type: string
      enum:
      - ENABLED
      - DISABLED
      description: Enable Dolby Dialogue Intelligence to adjust loudness based on
        dialogue analysis.
    Eac3AtmosDownmixControl:
      type: string
      enum:
      - SPECIFIED
      - INITIALIZE_FROM_SOURCE
      description: 'Specify whether MediaConvert should use any downmix metadata from
        your input file. Keep the default value, Custom to provide downmix values
        in your job settings. Choose Follow source to use the metadata from your input.
        Related settings--Use these settings to specify your downmix values: Left
        only/Right only surround, Left total/Right total surround, Left total/Right
        total center, Left only/Right only center, and Stereo downmix. When you keep
        Custom for Downmix control and you don''t specify values for the related settings,
        MediaConvert uses default values for those settings.'
    Eac3AtmosDynamicRangeCompressionLine:
      type: string
      enum:
      - NONE
      - FILM_STANDARD
      - FILM_LIGHT
      - MUSIC_STANDARD
      - MUSIC_LIGHT
      - SPEECH
      description: 'Choose the Dolby dynamic range control (DRC) profile that MediaConvert
        uses when encoding the metadata in the Dolby stream for the line operating
        mode. Default value: Film light Related setting: To have MediaConvert use
        the value you specify here, keep the default value, Custom for the setting
        Dynamic range control. Otherwise, MediaConvert ignores Dynamic range compression
        line. For information about the Dolby DRC operating modes and profiles, see
        the Dynamic Range Control chapter of the Dolby Metadata Guide at https://developer.dolby.com/globalassets/professional/documents/dolby-metadata-guide.pdf.'
    Eac3AtmosDynamicRangeCompressionRf:
      type: string
      enum:
      - NONE
      - FILM_STANDARD
      - FILM_LIGHT
      - MUSIC_STANDARD
      - MUSIC_LIGHT
      - SPEECH
      description: 'Choose the Dolby dynamic range control (DRC) profile that MediaConvert
        uses when encoding the metadata in the Dolby stream for the RF operating mode.
        Default value: Film light Related setting: To have MediaConvert use the value
        you specify here, keep the default value, Custom for the setting Dynamic range
        control. Otherwise, MediaConvert ignores Dynamic range compression RF. For
        information about the Dolby DRC operating modes and profiles, see the Dynamic
        Range Control chapter of the Dolby Metadata Guide at https://developer.dolby.com/globalassets/professional/documents/dolby-metadata-guide.pdf.'
    Eac3AtmosDynamicRangeControl:
      type: string
      enum:
      - SPECIFIED
      - INITIALIZE_FROM_SOURCE
      description: 'Specify whether MediaConvert should use any dynamic range control
        metadata from your input file. Keep the default value, Custom, to provide
        dynamic range control values in your job settings. Choose Follow source to
        use the metadata from your input. Related settings--Use these settings to
        specify your dynamic range control values: Dynamic range compression line
        and Dynamic range compression RF. When you keep the value Custom for Dynamic
        range control and you don''t specify values for the related settings, MediaConvert
        uses default values for those settings.'
    Eac3AtmosMeteringMode:
      type: string
      enum:
      - LEQ_A
      - ITU_BS_1770_1
      - ITU_BS_1770_2
      - ITU_BS_1770_3
      - ITU_BS_1770_4
      description: Choose how the service meters the loudness of your audio.
    Eac3AtmosStereoDownmix:
      type: string
      enum:
      - NOT_INDICATED
      - STEREO
      - SURROUND
      - DPL2
      description: 'Choose how the service does stereo downmixing. Default value:
        Not indicated Related setting: To have MediaConvert use this value, keep the
        default value, Custom for the setting Downmix control. Otherwise, MediaConvert
        ignores Stereo downmix.'
    Eac3AtmosSurroundExMode:
      type: string
      enum:
      - NOT_INDICATED
      - ENABLED
      - DISABLED
      description: Specify whether your input audio has an additional center rear
        surround channel matrix encoded into your left and right surround channels.
    Eac3AttenuationControl:
      type: string
      enum:
      - ATTENUATE_3_DB
      - NONE
      description: If set to ATTENUATE_3_DB, applies a 3 dB attenuation to the surround
        channels. Only used for 3/2 coding mode.
    Eac3BitstreamMode:
      type: string
      enum:
      - COMPLETE_MAIN
      - COMMENTARY
      - EMERGENCY
      - HEARING_IMPAIRED
      - VISUALLY_IMPAIRED
      description: Specify the bitstream mode for the E-AC-3 stream that the encoder
        emits. For more information about the EAC3 bitstream mode, see ATSC A/52-2012
        (Annex E).
    Eac3CodingMode:
      type: string
      enum:
      - CODING_MODE_1_0
      - CODING_MODE_2_0
      - CODING_MODE_3_2
      description: Dolby Digital Plus coding mode. Determines number of channels.
    Eac3DcFilter:
      type: string
      enum:
      - ENABLED
      - DISABLED
      description: Activates a DC highpass filter for all input channels.
    Eac3DynamicRangeCompressionLine:
      type: string
      enum:
      - NONE
      - FILM_STANDARD
      - FILM_LIGHT
      - MUSIC_STANDARD
      - MUSIC_LIGHT
      - SPEECH
      description: 'Choose the Dolby Digital dynamic range control (DRC) profile that
        MediaConvert uses when encoding the metadata in the Dolby Digital stream for
        the line operating mode. Related setting: When you use this setting, MediaConvert
        ignores any value you provide for Dynamic range compression profile. For information
        about the Dolby Digital DRC operating modes and profiles, see the Dynamic
        Range Control chapter of the Dolby Metadata Guide at https://developer.dolby.com/globalassets/professional/documents/dolby-metadata-guide.pdf.'
    Eac3DynamicRangeCompressionRf:
      type: string
      enum:
      - NONE
      - FILM_STANDARD
      - FILM_LIGHT
      - MUSIC_STANDARD
      - MUSIC_LIGHT
      - SPEECH
      description: 'Choose the Dolby Digital dynamic range control (DRC) profile that
        MediaConvert uses when encoding the metadata in the Dolby Digital stream for
        the RF operating mode. Related setting: When you use this setting, MediaConvert
        ignores any value you provide for Dynamic range compression profile. For information
        about the Dolby Digital DRC operating modes and profiles, see the Dynamic
        Range Control chapter of the Dolby Metadata Guide at https://developer.dolby.com/globalassets/professional/documents/dolby-metadata-guide.pdf.'
    Eac3LfeControl:
      type: string
      enum:
      - LFE
      - NO_LFE
      description: When encoding 3/2 audio, controls whether the LFE channel is enabled
    Eac3LfeFilter:
      type: string
      enum:
      - ENABLED
      - DISABLED
      description: Applies a 120Hz lowpass filter to the LFE channel prior to encoding.
        Only valid with 3_2_LFE coding mode.
    Eac3MetadataControl:
      type: string
      enum:
      - FOLLOW_INPUT
      - USE_CONFIGURED
      description: When set to FOLLOW_INPUT, encoder metadata will be sourced from
        the DD, DD+, or DolbyE decoder that supplied this audio data. If audio was
        not supplied from one of these streams, then the static metadata settings
        will be used.
    Eac3PassthroughControl:
      type: string
      enum:
      - WHEN_POSSIBLE
      - NO_PASSTHROUGH
      description: When set to WHEN_POSSIBLE, input DD+ audio will be passed through
        if it is present on the input. this detection is dynamic over the life of
        the transcode. Inputs that alternate between DD+ and non-DD+ content will
        have a consistent DD+ output as the system alternates between passthrough
        and encoding.
    Eac3PhaseControl:
      type: string
      enum:
      - SHIFT_90_DEGREES
      - NO_SHIFT
      description: Controls the amount of phase-shift applied to the surround channels.
        Only used for 3/2 coding mode.
    Eac3StereoDownmix:
      type: string
      enum:
      - NOT_INDICATED
      - LO_RO
      - LT_RT
      - DPL2
      description: Choose how the service does stereo downmixing. This setting only
        applies if you keep the default value of 3/2 - L, R, C, Ls, Rs for the setting
        Coding mode. If you choose a different value for Coding mode, the service
        ignores Stereo downmix.
    Eac3SurroundExMode:
      type: string
      enum:
      - NOT_INDICATED
      - ENABLED
      - DISABLED
      description: When encoding 3/2 audio, sets whether an extra center back surround
        channel is matrix encoded into the left and right surround channels.
    Eac3SurroundMode:
      type: string
      enum:
      - NOT_INDICATED
      - ENABLED
      - DISABLED
      description: When encoding 2/0 audio, sets whether Dolby Surround is matrix
        encoded into the two channels.
    EmbeddedConvert608To708:
      type: string
      enum:
      - UPCONVERT
      - DISABLED
      description: 'Specify whether this set of input captions appears in your outputs
        in both 608 and 708 format. If you choose Upconvert, MediaConvert includes
        the captions data in two ways: it passes the 608 data through using the 608
        compatibility bytes fields of the 708 wrapper, and it also translates the
        608 data into 708.'
    EmbeddedTerminateCaptions:
      type: string
      enum:
      - END_OF_INPUT
      - DISABLED
      description: By default, the service terminates any unterminated captions at
        the end of each input. If you want the caption to continue onto your next
        input, disable this setting.
    EmbeddedTimecodeOverride:
      type: string
      enum:
      - NONE
      - USE_MDPM
      description: Set Embedded timecode override to Use MDPM when your AVCHD input
        contains timecode tag data in the Modified Digital Video Pack Metadata. When
        you do, we recommend you also set Timecode source to Embedded. Leave Embedded
        timecode override blank, or set to None, when your input does not contain
        MDPM timecode.
    F4vMoovPlacement:
      type: string
      enum:
      - PROGRESSIVE_DOWNLOAD
      - NORMAL
      description: 'To place the MOOV atom at the beginning of your output, which
        is useful for progressive downloading: Leave blank or choose Progressive download.
        To place the MOOV at the end of your output: Choose Normal.'
    FileSourceConvert608To708:
      type: string
      enum:
      - UPCONVERT
      - DISABLED
      description: 'Specify whether this set of input captions appears in your outputs
        in both 608 and 708 format. If you choose Upconvert, MediaConvert includes
        the captions data in two ways: it passes the 608 data through using the 608
        compatibility bytes fields of the 708 wrapper, and it also translates the
        608 data into 708.'
    FileSourceTimeDeltaUnits:
      type: string
      enum:
      - SECONDS
      - MILLISECONDS
      description: When you use the setting Time delta to adjust the sync between
        your sidecar captions and your video, use this setting to specify the units
        for the delta that you specify. When you don't specify a value for Time delta
        units, MediaConvert uses seconds by default.
    FontScript:
      type: string
      enum:
      - AUTOMATIC
      - HANS
      - HANT
      description: Provide the font script, using an ISO 15924 script code, if the
        LanguageCode is not sufficient for determining the script type. Where LanguageCode
        or CustomLanguageCode is sufficient, use "AUTOMATIC" or leave unset.
    Format:
      type: string
      enum:
      - mp4
      - quicktime
      - matroska
      - webm
    GifFramerateControl:
      type: string
      enum:
      - INITIALIZE_FROM_SOURCE
      - SPECIFIED
      description: If you are using the console, use the Framerate setting to specify
        the frame rate for this output. If you want to keep the same frame rate as
        the input video, choose Follow source. If you want to do frame rate conversion,
        choose a frame rate from the dropdown list or choose Custom. The framerates
        shown in the dropdown list are decimal approximations of fractions. If you
        choose Custom, specify your frame rate as a fraction. If you are creating
        your transcoding job specification as a JSON file without the console, use
        FramerateControl to specify which value the service uses for the frame rate
        for this output. Choose INITIALIZE_FROM_SOURCE if you want the service to
        use the frame rate from the input. Choose SPECIFIED if you want the service
        to use the frame rate you specify in the settings FramerateNumerator and FramerateDenominator.
    GifFramerateConversionAlgorithm:
      type: string
      enum:
      - DUPLICATE_DROP
      - INTERPOLATE
      description: Optional. Specify how the transcoder performs framerate conversion.
        The default behavior is to use Drop duplicate (DUPLICATE_DROP) conversion.
        When you choose Interpolate (INTERPOLATE) instead, the conversion produces
        smoother motion.
    H264AdaptiveQuantization:
      type: string
      enum:
      - 'OFF'
      - AUTO
      - LOW
      - MEDIUM
      - HIGH
      - HIGHER
      - MAX
      description: 'Keep the default value, Auto, for this setting to have MediaConvert
        automatically apply the best types of quantization for your video content.
        When you want to apply your quantization settings manually, you must set H264AdaptiveQuantization
        to a value other than Auto. Use this setting to specify the strength of any
        adaptive quantization filters that you enable. If you don''t want MediaConvert
        to do any adaptive quantization in this transcode, set Adaptive quantization
        to Off. Related settings: The value that you choose here applies to the following
        settings: H264FlickerAdaptiveQuantization, H264SpatialAdaptiveQuantization,
        and H264TemporalAdaptiveQuantization.'
    H264CodecLevel:
      type: string
      enum:
      - AUTO
      - LEVEL_1
      - LEVEL_1_1
      - LEVEL_1_2
      - LEVEL_1_3
      - LEVEL_2
      - LEVEL_2_1
      - LEVEL_2_2
      - LEVEL_3
      - LEVEL_3_1
      - LEVEL_3_2
      - LEVEL_4
      - LEVEL_4_1
      - LEVEL_4_2
      - LEVEL_5
      - LEVEL_5_1
      - LEVEL_5_2
      description: Specify an H.264 level that is consistent with your output video
        settings. If you aren't sure what level to specify, choose Auto.
    H264CodecProfile:
      type: string
      enum:
      - BASELINE
      - HIGH
      - HIGH_10BIT
      - HIGH_422
      - HIGH_422_10BIT
      - MAIN
      description: H.264 Profile. High 4:2:2 and 10-bit profiles are only available
        with the AVC-I License.
    H264DynamicSubGop:
      type: string
      enum:
      - ADAPTIVE
      - STATIC
      description: Choose Adaptive to improve subjective video quality for high-motion
        content. This will cause the service to use fewer B-frames (which infer information
        based on other frames) for high-motion portions of the video and more B-frames
        for low-motion portions. The maximum number of B-frames is limited by the
        value you provide for the setting B frames between reference frames.
    H264EndOfStreamMarkers:
      type: string
      enum:
      - INCLUDE
      - SUPPRESS
      description: 'Optionally include or suppress markers at the end of your output
        that signal the end of the video stream. To include end of stream markers:
        Leave blank or keep the default value, Include. To not include end of stream
        markers: Choose Suppress. This is useful when your output will be inserted
        into another stream.'
    H264EntropyEncoding:
      type: string
      enum:
      - CABAC
      - CAVLC
      description: Entropy encoding mode. Use CABAC (must be in Main or High profile)
        or CAVLC.
    H264FieldEncoding:
      type: string
      enum:
      - PAFF
      - FORCE_FIELD
      - MBAFF
      description: The video encoding method for your MPEG-4 AVC output. Keep the
        default value, PAFF, to have MediaConvert use PAFF encoding for interlaced
        outputs. Choose Force field to disable PAFF encoding and create separate interlaced
        fields. Choose MBAFF to disable PAFF and have MediaConvert use MBAFF encoding
        for interlaced outputs.
    H264FlickerAdaptiveQuantization:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: Only use this setting when you change the default value, AUTO,
        for the setting H264AdaptiveQuantization. When you keep all defaults, excluding
        H264AdaptiveQuantization and all other adaptive quantization from your JSON
        job specification, MediaConvert automatically applies the best types of quantization
        for your video content. When you set H264AdaptiveQuantization to a value other
        than AUTO, the default value for H264FlickerAdaptiveQuantization is Disabled.
        Change this value to Enabled to reduce I-frame pop. I-frame pop appears as
        a visual flicker that can arise when the encoder saves bits by copying some
        macroblocks many times from frame to frame, and then refreshes them at the
        I-frame. When you enable this setting, the encoder updates these macroblocks
        slightly more often to smooth out the flicker. To manually enable or disable
        H264FlickerAdaptiveQuantization, you must set Adaptive quantization to a value
        other than AUTO.
    H264FramerateControl:
      type: string
      enum:
      - INITIALIZE_FROM_SOURCE
      - SPECIFIED
      description: If you are using the console, use the Framerate setting to specify
        the frame rate for this output. If you want to keep the same frame rate as
        the input video, choose Follow source. If you want to do frame rate conversion,
        choose a frame rate from the dropdown list or choose Custom. The framerates
        shown in the dropdown list are decimal approximations of fractions. If you
        choose Custom, specify your frame rate as a fraction.
    H264FramerateConversionAlgorithm:
      type: string
      enum:
      - DUPLICATE_DROP
      - INTERPOLATE
      - FRAMEFORMER
      - MAINTAIN_FRAME_COUNT
      description: 'Choose the method that you want MediaConvert to use when increasing
        or decreasing your video''s frame rate. For numerically simple conversions,
        such as 60 fps to 30 fps: We recommend that you keep the default value, Drop
        duplicate. For numerically complex conversions, to avoid stutter: Choose Interpolate.
        This results in a smooth picture, but might introduce undesirable video artifacts.
        For complex frame rate conversions, especially if your source video has already
        been converted from its original cadence: Choose FrameFormer to do motion-compensated
        interpolation. FrameFormer uses the best conversion method frame by frame.
        Note that using FrameFormer increases the transcoding time and incurs a significant
        add-on cost. When you choose FrameFormer, your input video resolution must
        be at least 128x96. To create an output with the same number of frames as
        your input: Choose Maintain frame count. When you do, MediaConvert will not
        drop, interpolate, add, or otherwise change the frame count from your input
        to your output. Note that since the frame count is maintained, the duration
        of your output will become shorter at higher frame rates and longer at lower
        frame rates.'
    H264GopBReference:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: 'Specify whether to allow B-frames to be referenced by other frame
        types. To use reference B-frames when your GOP structure has 1 or more B-frames:
        Leave blank or keep the default value Enabled. We recommend that you choose
        Enabled to help improve the video quality of your output relative to its bitrate.
        To not use reference B-frames: Choose Disabled.'
    H264GopSizeUnits:
      type: string
      enum:
      - FRAMES
      - SECONDS
      - AUTO
      description: Specify how the transcoder determines GOP size for this output.
        We recommend that you have the transcoder automatically choose this value
        for you based on characteristics of your input video. To enable this automatic
        behavior, choose Auto and and leave GOP size blank. By default, if you don't
        specify GOP mode control, MediaConvert will use automatic behavior. If your
        output group specifies HLS, DASH, or CMAF, set GOP mode control to Auto and
        leave GOP size blank in each output in your output group. To explicitly specify
        the GOP length, choose Specified, frames or Specified, seconds and then provide
        the GOP length in the related setting GOP size.
    H264InterlaceMode:
      type: string
      enum:
      - PROGRESSIVE
      - TOP_FIELD
      - BOTTOM_FIELD
      - FOLLOW_TOP_FIELD
      - FOLLOW_BOTTOM_FIELD
      description: Choose the scan line type for the output. Keep the default value,
        Progressive to create a progressive output, regardless of the scan type of
        your input. Use Top field first or Bottom field first to create an output
        that's interlaced with the same field polarity throughout. Use Follow, default
        top or Follow, default bottom to produce outputs with the same field polarity
        as the source. For jobs that have multiple inputs, the output field polarity
        might change over the course of the output. Follow behavior depends on the
        input scan type. If the source is interlaced, the output will be interlaced
        with the same polarity as the source. If the source is progressive, the output
        will be interlaced with top field bottom field first, depending on which of
        the Follow options you choose.
    H264ParControl:
      type: string
      enum:
      - INITIALIZE_FROM_SOURCE
      - SPECIFIED
      description: Optional. Specify how the service determines the pixel aspect ratio
        (PAR) for this output. The default behavior, Follow source, uses the PAR from
        your input video for your output. To specify a different PAR in the console,
        choose any value other than Follow source. When you choose SPECIFIED for this
        setting, you must also specify values for the parNumerator and parDenominator
        settings.
    H264QualityTuningLevel:
      type: string
      enum:
      - SINGLE_PASS
      - SINGLE_PASS_HQ
      - MULTI_PASS_HQ
      description: 'The Quality tuning level you choose represents a trade-off between
        the encoding speed of your job and the output video quality. For the fastest
        encoding speed at the cost of video quality: Choose Single pass. For a good
        balance between encoding speed and video quality: Leave blank or keep the
        default value Single pass HQ. For the best video quality, at the cost of encoding
        speed: Choose Multi pass HQ. MediaConvert performs an analysis pass on your
        input followed by an encoding pass. Outputs that use this feature incur pro-tier
        pricing.'
    H264RateControlMode:
      type: string
      enum:
      - VBR
      - CBR
      - QVBR
      description: Use this setting to specify whether this output has a variable
        bitrate (VBR), constant bitrate (CBR) or quality-defined variable bitrate
        (QVBR).
    H264RepeatPps:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: Places a PPS header on each encoded picture, even if repeated.
    H264SaliencyAwareEncoding:
      type: string
      enum:
      - DISABLED
      - PREFERRED
      description: 'Specify whether to apply Saliency aware encoding to your output.
        Use to improve the perceptual video quality of your output by allocating more
        encoding bits to the prominent or noticeable parts of your content. To apply
        saliency aware encoding, when possible: We recommend that you choose Preferred.
        The effects of Saliency aware encoding are best seen in lower bitrate outputs.
        When you choose Preferred, note that Saliency aware encoding will only apply
        to outputs that are 720p or higher in resolution. To not apply saliency aware
        encoding, prioritizing encoding speed over perceptual video quality: Choose
        Disabled.'
    H264ScanTypeConversionMode:
      type: string
      enum:
      - INTERLACED
      - INTERLACED_OPTIMIZE
      description: 'Use this setting for interlaced outputs, when your output frame
        rate is half of your input frame rate. In this situation, choose Optimized
        interlacing to create a better quality interlaced output. In this case, each
        progressive frame from the input corresponds to an interlaced field in the
        output. Keep the default value, Basic interlacing, for all other output frame
        rates. With basic interlacing, MediaConvert performs any frame rate conversion
        first and then interlaces the frames. When you choose Optimized interlacing
        and you set your output frame rate to a value that isn''t suitable for optimized
        interlacing, MediaConvert automatically falls back to basic interlacing. Required
        settings: To use optimized interlacing, you must set Telecine to None or Soft.
        You can''t use optimized interlacing for hard telecine outputs. You must also
        set Interlace mode to a value other than Progressive.'
    H264SceneChangeDetect:
      type: string
      enum:
      - DISABLED
      - ENABLED
      - TRANSITION_DETECTION
      description: Enable this setting to insert I-frames at scene changes that the
        service automatically detects. This improves video quality and is enabled
        by default. If this output uses QVBR, choose Transition detection for further
        video quality improvement. For more information about QVBR, see https://docs.aws.amazon.com/console/mediaconvert/cbr-vbr-qvbr.
    H264SlowPal:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: 'Ignore this setting unless your input frame rate is 23.976 or
        24 frames per second (fps). Enable slow PAL to create a 25 fps output. When
        you enable slow PAL, MediaConvert relabels the video frames to 25 fps and
        resamples your audio to keep it synchronized with the video. Note that enabling
        this setting will slightly reduce the duration of your video. Required settings:
        You must also set Framerate to 25.'
    H264SpatialAdaptiveQuantization:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: 'Only use this setting when you change the default value, Auto,
        for the setting H264AdaptiveQuantization. When you keep all defaults, excluding
        H264AdaptiveQuantization and all other adaptive quantization from your JSON
        job specification, MediaConvert automatically applies the best types of quantization
        for your video content. When you set H264AdaptiveQuantization to a value other
        than AUTO, the default value for H264SpatialAdaptiveQuantization is Enabled.
        Keep this default value to adjust quantization within each frame based on
        spatial variation of content complexity. When you enable this feature, the
        encoder uses fewer bits on areas that can sustain more distortion with no
        noticeable visual degradation and uses more bits on areas where any small
        distortion will be noticeable. For example, complex textured blocks are encoded
        with fewer bits and smooth textured blocks are encoded with more bits. Enabling
        this feature will almost always improve your video quality. Note, though,
        that this feature doesn''t take into account where the viewer''s attention
        is likely to be. If viewers are likely to be focusing their attention on a
        part of the screen with a lot of complex texture, you might choose to set
        H264SpatialAdaptiveQuantization to Disabled. Related setting: When you enable
        spatial adaptive quantization, set the value for Adaptive quantization depending
        on your content. For homogeneous content, such as cartoons and video games,
        set it to Low. For content with a wider variety of textures, set it to High
        or Higher. To manually enable or disable H264SpatialAdaptiveQuantization,
        you must set Adaptive quantization to a value other than AUTO.'
    H264Syntax:
      type: string
      enum:
      - DEFAULT
      - RP2027
      description: Produces a bitstream compliant with SMPTE RP-2027.
    H264Telecine:
      type: string
      enum:
      - NONE
      - SOFT
      - HARD
      description: When you do frame rate conversion from 23.976 frames per second
        (fps) to 29.97 fps, and your output scan type is interlaced, you can optionally
        enable hard or soft telecine to create a smoother picture. Hard telecine produces
        a 29.97i output. Soft telecine produces an output with a 23.976 output that
        signals to the video player device to do the conversion during play back.
        When you keep the default value, None, MediaConvert does a standard frame
        rate conversion to 29.97 without doing anything with the field polarity to
        create a smoother picture.
    H264TemporalAdaptiveQuantization:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: 'Only use this setting when you change the default value, AUTO,
        for the setting H264AdaptiveQuantization. When you keep all defaults, excluding
        H264AdaptiveQuantization and all other adaptive quantization from your JSON
        job specification, MediaConvert automatically applies the best types of quantization
        for your video content. When you set H264AdaptiveQuantization to a value other
        than AUTO, the default value for H264TemporalAdaptiveQuantization is Enabled.
        Keep this default value to adjust quantization within each frame based on
        temporal variation of content complexity. When you enable this feature, the
        encoder uses fewer bits on areas of the frame that aren''t moving and uses
        more bits on complex objects with sharp edges that move a lot. For example,
        this feature improves the readability of text tickers on newscasts and scoreboards
        on sports matches. Enabling this feature will almost always improve your video
        quality. Note, though, that this feature doesn''t take into account where
        the viewer''s attention is likely to be. If viewers are likely to be focusing
        their attention on a part of the screen that doesn''t have moving objects
        with sharp edges, such as sports athletes'' faces, you might choose to set
        H264TemporalAdaptiveQuantization to Disabled. Related setting: When you enable
        temporal quantization, adjust the strength of the filter with the setting
        Adaptive quantization. To manually enable or disable H264TemporalAdaptiveQuantization,
        you must set Adaptive quantization to a value other than AUTO.'
    H264UnregisteredSeiTimecode:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: Inserts timecode for each frame as 4 bytes of an unregistered SEI
        message.
    H264WriteMp4PackagingType:
      type: string
      enum:
      - AVC1
      - AVC3
      description: 'Specify how SPS and PPS NAL units are written in your output MP4
        container, according to ISO/IEC 14496-15. If the location of these parameters
        doesn''t matter in your workflow: Keep the default value, AVC1. MediaConvert
        writes SPS and PPS NAL units in the sample description (''stsd'') box (but
        not into samples directly). To write SPS and PPS NAL units directly into samples
        (but not in the ''stsd'' box): Choose AVC3. When you do, note that your output
        might not play properly with some downstream systems or players.'
    H265AdaptiveQuantization:
      type: string
      enum:
      - 'OFF'
      - LOW
      - MEDIUM
      - HIGH
      - HIGHER
      - MAX
      - AUTO
      description: When you set Adaptive Quantization to Auto, or leave blank, MediaConvert
        automatically applies quantization to improve the video quality of your output.
        Set Adaptive Quantization to Low, Medium, High, Higher, or Max to manually
        control the strength of the quantization filter. When you do, you can specify
        a value for Spatial Adaptive Quantization, Temporal Adaptive Quantization,
        and Flicker Adaptive Quantization, to further control the quantization filter.
        Set Adaptive Quantization to Off to apply no quantization to your output.
    H265AlternateTransferFunctionSei:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: Enables Alternate Transfer Function SEI message for outputs using
        Hybrid Log Gamma (HLG) Electro-Optical Transfer Function (EOTF).
    H265CodecLevel:
      type: string
      enum:
      - AUTO
      - LEVEL_1
      - LEVEL_2
      - LEVEL_2_1
      - LEVEL_3
      - LEVEL_3_1
      - LEVEL_4
      - LEVEL_4_1
      - LEVEL_5
      - LEVEL_5_1
      - LEVEL_5_2
      - LEVEL_6
      - LEVEL_6_1
      - LEVEL_6_2
      description: H.265 Level.
    H265CodecProfile:
      type: string
      enum:
      - MAIN_MAIN
      - MAIN_HIGH
      - MAIN10_MAIN
      - MAIN10_HIGH
      - MAIN_422_8BIT_MAIN
      - MAIN_422_8BIT_HIGH
      - MAIN_422_10BIT_MAIN
      - MAIN_422_10BIT_HIGH
      description: Represents the Profile and Tier, per the HEVC (H.265) specification.
        Selections are grouped as [Profile] / [Tier], so "Main/High" represents Main
        Profile with High Tier. 4:2:2 profiles are only available with the HEVC 4:2:2
        License.
    H265Deblocking:
      type: string
      enum:
      - ENABLED
      - DISABLED
      description: 'Use Deblocking to improve the video quality of your output by
        smoothing the edges of macroblock artifacts created during video compression.
        To reduce blocking artifacts at block boundaries, and improve overall video
        quality: Keep the default value, Enabled. To not apply any deblocking: Choose
        Disabled. Visible block edge artifacts might appear in the output, especially
        at lower bitrates.'
    H265DynamicSubGop:
      type: string
      enum:
      - ADAPTIVE
      - STATIC
      description: Choose Adaptive to improve subjective video quality for high-motion
        content. This will cause the service to use fewer B-frames (which infer information
        based on other frames) for high-motion portions of the video and more B-frames
        for low-motion portions. The maximum number of B-frames is limited by the
        value you provide for the setting B frames between reference frames.
    H265EndOfStreamMarkers:
      type: string
      enum:
      - INCLUDE
      - SUPPRESS
      description: 'Optionally include or suppress markers at the end of your output
        that signal the end of the video stream. To include end of stream markers:
        Leave blank or keep the default value, Include. To not include end of stream
        markers: Choose Suppress. This is useful when your output will be inserted
        into another stream.'
    H265FlickerAdaptiveQuantization:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: 'Enable this setting to have the encoder reduce I-frame pop. I-frame
        pop appears as a visual flicker that can arise when the encoder saves bits
        by copying some macroblocks many times from frame to frame, and then refreshes
        them at the I-frame. When you enable this setting, the encoder updates these
        macroblocks slightly more often to smooth out the flicker. This setting is
        disabled by default. Related setting: In addition to enabling this setting,
        you must also set adaptiveQuantization to a value other than Off.'
    H265FramerateControl:
      type: string
      enum:
      - INITIALIZE_FROM_SOURCE
      - SPECIFIED
      description: Use the Framerate setting to specify the frame rate for this output.
        If you want to keep the same frame rate as the input video, choose Follow
        source. If you want to do frame rate conversion, choose a frame rate from
        the dropdown list or choose Custom. The framerates shown in the dropdown list
        are decimal approximations of fractions. If you choose Custom, specify your
        frame rate as a fraction.
    H265FramerateConversionAlgorithm:
      type: string
      enum:
      - DUPLICATE_DROP
      - INTERPOLATE
      - FRAMEFORMER
      - MAINTAIN_FRAME_COUNT
      description: 'Choose the method that you want MediaConvert to use when increasing
        or decreasing your video''s frame rate. For numerically simple conversions,
        such as 60 fps to 30 fps: We recommend that you keep the default value, Drop
        duplicate. For numerically complex conversions, to avoid stutter: Choose Interpolate.
        This results in a smooth picture, but might introduce undesirable video artifacts.
        For complex frame rate conversions, especially if your source video has already
        been converted from its original cadence: Choose FrameFormer to do motion-compensated
        interpolation. FrameFormer uses the best conversion method frame by frame.
        Note that using FrameFormer increases the transcoding time and incurs a significant
        add-on cost. When you choose FrameFormer, your input video resolution must
        be at least 128x96. To create an output with the same number of frames as
        your input: Choose Maintain frame count. When you do, MediaConvert will not
        drop, interpolate, add, or otherwise change the frame count from your input
        to your output. Note that since the frame count is maintained, the duration
        of your output will become shorter at higher frame rates and longer at lower
        frame rates.'
    H265GopBReference:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: 'Specify whether to allow B-frames to be referenced by other frame
        types. To use reference B-frames when your GOP structure has 1 or more B-frames:
        Leave blank or keep the default value Enabled. We recommend that you choose
        Enabled to help improve the video quality of your output relative to its bitrate.
        To not use reference B-frames: Choose Disabled.'
    H265GopSizeUnits:
      type: string
      enum:
      - FRAMES
      - SECONDS
      - AUTO
      description: Specify how the transcoder determines GOP size for this output.
        We recommend that you have the transcoder automatically choose this value
        for you based on characteristics of your input video. To enable this automatic
        behavior, choose Auto and and leave GOP size blank. By default, if you don't
        specify GOP mode control, MediaConvert will use automatic behavior. If your
        output group specifies HLS, DASH, or CMAF, set GOP mode control to Auto and
        leave GOP size blank in each output in your output group. To explicitly specify
        the GOP length, choose Specified, frames or Specified, seconds and then provide
        the GOP length in the related setting GOP size.
    H265InterlaceMode:
      type: string
      enum:
      - PROGRESSIVE
      - TOP_FIELD
      - BOTTOM_FIELD
      - FOLLOW_TOP_FIELD
      - FOLLOW_BOTTOM_FIELD
      description: Choose the scan line type for the output. Keep the default value,
        Progressive to create a progressive output, regardless of the scan type of
        your input. Use Top field first or Bottom field first to create an output
        that's interlaced with the same field polarity throughout. Use Follow, default
        top or Follow, default bottom to produce outputs with the same field polarity
        as the source. For jobs that have multiple inputs, the output field polarity
        might change over the course of the output. Follow behavior depends on the
        input scan type. If the source is interlaced, the output will be interlaced
        with the same polarity as the source. If the source is progressive, the output
        will be interlaced with top field bottom field first, depending on which of
        the Follow options you choose.
    H265ParControl:
      type: string
      enum:
      - INITIALIZE_FROM_SOURCE
      - SPECIFIED
      description: Optional. Specify how the service determines the pixel aspect ratio
        (PAR) for this output. The default behavior, Follow source, uses the PAR from
        your input video for your output. To specify a different PAR, choose any value
        other than Follow source. When you choose SPECIFIED for this setting, you
        must also specify values for the parNumerator and parDenominator settings.
    H265QualityTuningLevel:
      type: string
      enum:
      - SINGLE_PASS
      - SINGLE_PASS_HQ
      - MULTI_PASS_HQ
      description: Optional. Use Quality tuning level to choose how you want to trade
        off encoding speed for output video quality. The default behavior is faster,
        lower quality, single-pass encoding.
    H265RateControlMode:
      type: string
      enum:
      - VBR
      - CBR
      - QVBR
      description: Use this setting to specify whether this output has a variable
        bitrate (VBR), constant bitrate (CBR) or quality-defined variable bitrate
        (QVBR).
    H265SampleAdaptiveOffsetFilterMode:
      type: string
      enum:
      - DEFAULT
      - ADAPTIVE
      - 'OFF'
      description: Specify Sample Adaptive Offset (SAO) filter strength. Adaptive
        mode dynamically selects best strength based on content
    H265ScanTypeConversionMode:
      type: string
      enum:
      - INTERLACED
      - INTERLACED_OPTIMIZE
      description: 'Use this setting for interlaced outputs, when your output frame
        rate is half of your input frame rate. In this situation, choose Optimized
        interlacing to create a better quality interlaced output. In this case, each
        progressive frame from the input corresponds to an interlaced field in the
        output. Keep the default value, Basic interlacing, for all other output frame
        rates. With basic interlacing, MediaConvert performs any frame rate conversion
        first and then interlaces the frames. When you choose Optimized interlacing
        and you set your output frame rate to a value that isn''t suitable for optimized
        interlacing, MediaConvert automatically falls back to basic interlacing. Required
        settings: To use optimized interlacing, you must set Telecine to None or Soft.
        You can''t use optimized interlacing for hard telecine outputs. You must also
        set Interlace mode to a value other than Progressive.'
    H265SceneChangeDetect:
      type: string
      enum:
      - DISABLED
      - ENABLED
      - TRANSITION_DETECTION
      description: Enable this setting to insert I-frames at scene changes that the
        service automatically detects. This improves video quality and is enabled
        by default. If this output uses QVBR, choose Transition detection for further
        video quality improvement. For more information about QVBR, see https://docs.aws.amazon.com/console/mediaconvert/cbr-vbr-qvbr.
    H265SlowPal:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: 'Ignore this setting unless your input frame rate is 23.976 or
        24 frames per second (fps). Enable slow PAL to create a 25 fps output. When
        you enable slow PAL, MediaConvert relabels the video frames to 25 fps and
        resamples your audio to keep it synchronized with the video. Note that enabling
        this setting will slightly reduce the duration of your video. Required settings:
        You must also set Framerate to 25.'
    H265SpatialAdaptiveQuantization:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: 'Keep the default value, Enabled, to adjust quantization within
        each frame based on spatial variation of content complexity. When you enable
        this feature, the encoder uses fewer bits on areas that can sustain more distortion
        with no noticeable visual degradation and uses more bits on areas where any
        small distortion will be noticeable. For example, complex textured blocks
        are encoded with fewer bits and smooth textured blocks are encoded with more
        bits. Enabling this feature will almost always improve your video quality.
        Note, though, that this feature doesn''t take into account where the viewer''s
        attention is likely to be. If viewers are likely to be focusing their attention
        on a part of the screen with a lot of complex texture, you might choose to
        disable this feature. Related setting: When you enable spatial adaptive quantization,
        set the value for Adaptive quantization depending on your content. For homogeneous
        content, such as cartoons and video games, set it to Low. For content with
        a wider variety of textures, set it to High or Higher.'
    H265Telecine:
      type: string
      enum:
      - NONE
      - SOFT
      - HARD
      description: 'This field applies only if the Streams > Advanced > Framerate
        field is set to 29.970. This field works with the Streams > Advanced > Preprocessors
        > Deinterlacer field and the Streams > Advanced > Interlaced Mode field to
        identify the scan type for the output: Progressive, Interlaced, Hard Telecine
        or Soft Telecine. - Hard: produces 29.97i output from 23.976 input. - Soft:
        produces 23.976; the player converts this output to 29.97i.'
    H265TemporalAdaptiveQuantization:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: 'Keep the default value, Enabled, to adjust quantization within
        each frame based on temporal variation of content complexity. When you enable
        this feature, the encoder uses fewer bits on areas of the frame that aren''t
        moving and uses more bits on complex objects with sharp edges that move a
        lot. For example, this feature improves the readability of text tickers on
        newscasts and scoreboards on sports matches. Enabling this feature will almost
        always improve your video quality. Note, though, that this feature doesn''t
        take into account where the viewer''s attention is likely to be. If viewers
        are likely to be focusing their attention on a part of the screen that doesn''t
        have moving objects with sharp edges, such as sports athletes'' faces, you
        might choose to disable this feature. Related setting: When you enable temporal
        quantization, adjust the strength of the filter with the setting Adaptive
        quantization.'
    H265TemporalIds:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: 'Enables temporal layer identifiers in the encoded bitstream. Up
        to 3 layers are supported depending on GOP structure: I- and P-frames form
        one layer, reference B-frames can form a second layer and non-reference b-frames
        can form a third layer. Decoders can optionally decode only the lower temporal
        layers to generate a lower frame rate output. For example, given a bitstream
        with temporal IDs and with b-frames = 1 (i.e. IbPbPb display order), a decoder
        could decode all the frames for full frame rate output or only the I and P
        frames (lowest temporal layer) for a half frame rate output.'
    H265Tiles:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: Enable use of tiles, allowing horizontal as well as vertical subdivision
        of the encoded pictures.
    H265UnregisteredSeiTimecode:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: Inserts timecode for each frame as 4 bytes of an unregistered SEI
        message.
    H265WriteMp4PackagingType:
      type: string
      enum:
      - HVC1
      - HEV1
      description: 'If the location of parameter set NAL units doesn''t matter in
        your workflow, ignore this setting. Use this setting only with CMAF or DASH
        outputs, or with standalone file outputs in an MPEG-4 container (MP4 outputs).
        Choose HVC1 to mark your output as HVC1. This makes your output compliant
        with the following specification: ISO IECJTC1 SC29 N13798 Text ISO/IEC FDIS
        14496-15 3rd Edition. For these outputs, the service stores parameter set
        NAL units in the sample headers but not in the samples directly. For MP4 outputs,
        when you choose HVC1, your output video might not work properly with some
        downstream systems and video players. The service defaults to marking your
        output as HEV1. For these outputs, the service writes parameter set NAL units
        directly into the samples.'
    HDRToSDRToneMapper:
      type: string
      enum:
      - PRESERVE_DETAILS
      - VIBRANT
      description: 'Specify how MediaConvert maps brightness and colors from your
        HDR input to your SDR output. The mode that you select represents a creative
        choice, with different tradeoffs in the details and tones of your output.
        To maintain details in bright or saturated areas of your output: Choose Preserve
        details. For some sources, your SDR output may look less bright and less saturated
        when compared to your HDR source. MediaConvert automatically applies this
        mode for HLG sources, regardless of your choice. For a bright and saturated
        output: Choose Vibrant. We recommend that you choose this mode when any of
        your source content is HDR10, and for the best results when it is mastered
        for 1000 nits. You may notice loss of details in bright or saturated areas
        of your output. HDR to SDR tone mapping has no effect when your input is SDR.'
    HlsAdMarkers:
      type: string
      enum:
      - ELEMENTAL
      - ELEMENTAL_SCTE35
      description: Ad marker for Apple HLS manifest.
    HlsAudioOnlyContainer:
      type: string
      enum:
      - AUTOMATIC
      - M2TS
      description: Use this setting only in audio-only outputs. Choose MPEG-2 Transport
        Stream (M2TS) to create a file in an MPEG2-TS container. Keep the default
        value Automatic to create a raw audio-only file with no container. Regardless
        of the value that you specify here, if this output has video, the service
        will place outputs into an MPEG2-TS container.
    HlsAudioOnlyHeader:
      type: string
      enum:
      - INCLUDE
      - EXCLUDE
      description: Ignore this setting unless you are using FairPlay DRM with Verimatrix
        and you encounter playback issues. Keep the default value, Include, to output
        audio-only headers. Choose Exclude to remove the audio-only headers from your
        audio segments.
    HlsAudioTrackType:
      type: string
      enum:
      - ALTERNATE_AUDIO_AUTO_SELECT_DEFAULT
      - ALTERNATE_AUDIO_AUTO_SELECT
      - ALTERNATE_AUDIO_NOT_AUTO_SELECT
      - AUDIO_ONLY_VARIANT_STREAM
      description: 'Four types of audio-only tracks are supported: Audio-Only Variant
        Stream The client can play back this audio-only stream instead of video in
        low-bandwidth scenarios. Represented as an EXT-X-STREAM-INF in the HLS manifest.
        Alternate Audio, Auto Select, Default Alternate rendition that the client
        should try to play back by default. Represented as an EXT-X-MEDIA in the HLS
        manifest with DEFAULT=YES, AUTOSELECT=YES Alternate Audio, Auto Select, Not
        Default Alternate rendition that the client may try to play back by default.
        Represented as an EXT-X-MEDIA in the HLS manifest with DEFAULT=NO, AUTOSELECT=YES
        Alternate Audio, not Auto Select Alternate rendition that the client will
        not try to play back by default. Represented as an EXT-X-MEDIA in the HLS
        manifest with DEFAULT=NO, AUTOSELECT=NO'
    HlsCaptionLanguageSetting:
      type: string
      enum:
      - INSERT
      - OMIT
      - NONE
      description: 'Applies only to 608 Embedded output captions. Insert: Include
        CLOSED-CAPTIONS lines in the manifest. Specify at least one language in the
        CC1 Language Code field. One CLOSED-CAPTION line is added for each Language
        Code you specify. Make sure to specify the languages in the order in which
        they appear in the original source (if the source is embedded format) or the
        order of the caption selectors (if the source is other than embedded). Otherwise,
        languages in the manifest will not match up properly with the output captions.
        None: Include CLOSED-CAPTIONS=NONE line in the manifest. Omit: Omit any CLOSED-CAPTIONS
        line from the manifest.'
    HlsCaptionSegmentLengthControl:
      type: string
      enum:
      - LARGE_SEGMENTS
      - MATCH_VIDEO
      description: Set Caption segment length control to Match video to create caption
        segments that align with the video segments from the first video output in
        this output group. For example, if the video segments are 2 seconds long,
        your WebVTT segments will also be 2 seconds long. Keep the default setting,
        Large segments to create caption segments that are 300 seconds long.
    HlsClientCache:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: 'Disable this setting only when your workflow requires the #EXT-X-ALLOW-CACHE:no
        tag. Otherwise, keep the default value Enabled and control caching in your
        video distribution set up. For example, use the Cache-Control http header.'
    HlsCodecSpecification:
      type: string
      enum:
      - RFC_6381
      - RFC_4281
      description: Specification to use (RFC-6381 or the default RFC-4281) during
        m3u8 playlist generation.
    HlsDescriptiveVideoServiceFlag:
      type: string
      enum:
      - DONT_FLAG
      - FLAG
      description: Specify whether to flag this audio track as descriptive video service
        (DVS) in your HLS parent manifest. When you choose Flag, MediaConvert includes
        the parameter CHARACTERISTICS="public.accessibility.describes-video" in the
        EXT-X-MEDIA entry for this track. When you keep the default choice, Don't
        flag, MediaConvert leaves this parameter out. The DVS flag can help with accessibility
        on Apple devices. For more information, see the Apple documentation.
    HlsDirectoryStructure:
      type: string
      enum:
      - SINGLE_DIRECTORY
      - SUBDIRECTORY_PER_STREAM
      description: Indicates whether segments should be placed in subdirectories.
    HlsEncryptionType:
      type: string
      enum:
      - AES128
      - SAMPLE_AES
      description: Encrypts the segments with the given encryption scheme. Leave blank
        to disable. Selecting 'Disabled' in the web interface also disables encryption.
    HlsIFrameOnlyManifest:
      type: string
      enum:
      - INCLUDE
      - EXCLUDE
      description: Choose Include to have MediaConvert generate a child manifest that
        lists only the I-frames for this rendition, in addition to your regular manifest
        for this rendition. You might use this manifest as part of a workflow that
        creates preview functions for your video. MediaConvert adds both the I-frame
        only child manifest and the regular child manifest to the parent manifest.
        When you don't need the I-frame only child manifest, keep the default value
        Exclude.
    HlsImageBasedTrickPlay:
      type: string
      enum:
      - NONE
      - THUMBNAIL
      - THUMBNAIL_AND_FULLFRAME
      - ADVANCED
      description: 'Specify whether MediaConvert generates images for trick play.
        Keep the default value, None, to not generate any images. Choose Thumbnail
        to generate tiled thumbnails. Choose Thumbnail and full frame to generate
        tiled thumbnails and full-resolution images of single frames. MediaConvert
        creates a child manifest for each set of images that you generate and adds
        corresponding entries to the parent manifest. A common application for these
        images is Roku trick mode. The thumbnails and full-frame images that MediaConvert
        creates with this feature are compatible with this Roku specification: https://developer.roku.com/docs/developer-program/media-playback/trick-mode/hls-and-dash.md'
    HlsInitializationVectorInManifest:
      type: string
      enum:
      - INCLUDE
      - EXCLUDE
      description: The Initialization Vector is a 128-bit number used in conjunction
        with the key for encrypting blocks. If set to INCLUDE, Initialization Vector
        is listed in the manifest. Otherwise Initialization Vector is not in the manifest.
    HlsIntervalCadence:
      type: string
      enum:
      - FOLLOW_IFRAME
      - FOLLOW_CUSTOM
      description: The cadence MediaConvert follows for generating thumbnails. If
        set to FOLLOW_IFRAME, MediaConvert generates thumbnails for each IDR frame
        in the output (matching the GOP cadence). If set to FOLLOW_CUSTOM, MediaConvert
        generates thumbnails according to the interval you specify in thumbnailInterval.
    HlsKeyProviderType:
      type: string
      enum:
      - SPEKE
      - STATIC_KEY
      description: Specify whether your DRM encryption key is static or from a key
        provider that follows the SPEKE standard. For more information about SPEKE,
        see https://docs.aws.amazon.com/speke/latest/documentation/what-is-speke.html.
    HlsManifestCompression:
      type: string
      enum:
      - GZIP
      - NONE
      description: When set to GZIP, compresses HLS playlist.
    HlsManifestDurationFormat:
      type: string
      enum:
      - FLOATING_POINT
      - INTEGER
      description: Indicates whether the output manifest should use floating point
        values for segment duration.
    HlsOfflineEncrypted:
      type: string
      enum:
      - ENABLED
      - DISABLED
      description: Enable this setting to insert the EXT-X-SESSION-KEY element into
        the master playlist. This allows for offline Apple HLS FairPlay content protection.
    HlsOutputSelection:
      type: string
      enum:
      - MANIFESTS_AND_SEGMENTS
      - SEGMENTS_ONLY
      description: Indicates whether the .m3u8 manifest file should be generated for
        this HLS output group.
    HlsProgramDateTime:
      type: string
      enum:
      - INCLUDE
      - EXCLUDE
      description: 'Includes or excludes EXT-X-PROGRAM-DATE-TIME tag in .m3u8 manifest
        files. The value is calculated as follows: either the program date and time
        are initialized using the input timecode source, or the time is initialized
        using the input timecode source and the date is initialized using the timestamp_offset.'
    HlsProgressiveWriteHlsManifest:
      type: string
      enum:
      - ENABLED
      - DISABLED
      description: 'Specify whether MediaConvert generates HLS manifests while your
        job is running or when your job is complete. To generate HLS manifests while
        your job is running: Choose Enabled. Use if you want to play back your content
        as soon as it''s available. MediaConvert writes the parent and child manifests
        after the first three media segments are written to your destination S3 bucket.
        It then writes new updated manifests after each additional segment is written.
        The parent manifest includes the latest BANDWIDTH and AVERAGE-BANDWIDTH attributes,
        and child manifests include the latest available media segment. When your
        job completes, the final child playlists include an EXT-X-ENDLIST tag. To
        generate HLS manifests only when your job completes: Choose Disabled.'
    HlsSegmentControl:
      type: string
      enum:
      - SINGLE_FILE
      - SEGMENTED_FILES
      description: 'When set to SINGLE_FILE, emits program as a single media resource
        (.ts) file, uses #EXT-X-BYTERANGE tags to index segment for playback.'
    HlsSegmentLengthControl:
      type: string
      enum:
      - EXACT
      - GOP_MULTIPLE
      - MATCH
      description: 'Specify how you want MediaConvert to determine segment lengths
        in this output group. To use the exact value that you specify under Segment
        length: Choose Exact. Note that this might result in additional I-frames in
        the output GOP. To create segment lengths that are a multiple of the GOP:
        Choose Multiple of GOP. MediaConvert will round up the segment lengths to
        match the next GOP boundary. To have MediaConvert automatically determine
        a segment duration that is a multiple of both the audio packets and the frame
        rates: Choose Match. When you do, also specify a target segment duration under
        Segment length. This is useful for some ad-insertion or segment replacement
        workflows. Note that Match has the following requirements: - Output containers:
        Include at least one video output and at least one audio output. Audio-only
        outputs are not supported. - Output frame rate: Follow source is not supported.
        - Multiple output frame rates: When you specify multiple outputs, we recommend
        they share a similar frame rate (as in X/3, X/2, X, or 2X). For example: 5,
        15, 30 and 60. Or: 25 and 50. (Outputs must share an integer multiple.) -
        Output audio codec: Specify Advanced Audio Coding (AAC). - Output sample rate:
        Choose 48kHz.'
    HlsStreamInfResolution:
      type: string
      enum:
      - INCLUDE
      - EXCLUDE
      description: Include or exclude RESOLUTION attribute for video in EXT-X-STREAM-INF
        tag of variant manifest.
    HlsTargetDurationCompatibilityMode:
      type: string
      enum:
      - LEGACY
      - SPEC_COMPLIANT
      description: When set to LEGACY, the segment target duration is always rounded
        up to the nearest integer value above its current value in seconds. When set
        to SPEC\\_COMPLIANT, the segment target duration is rounded up to the nearest
        integer value if fraction seconds are greater than or equal to 0.5 (>= 0.5)
        and rounded down if less than 0.5 (< 0.5). You may need to use LEGACY if your
        client needs to ensure that the target duration is always longer than the
        actual duration of the segment. Some older players may experience interrupted
        playback when the actual duration of a track in a segment is longer than the
        target duration.
    HlsTimedMetadataId3Frame:
      type: string
      enum:
      - NONE
      - PRIV
      - TDRL
      description: 'Specify the type of the ID3 frame to use for ID3 timestamps in
        your output. To include ID3 timestamps: Specify PRIV or TDRL and set ID3 metadata
        to Passthrough. To exclude ID3 timestamps: Set ID3 timestamp frame type to
        None.'
    ImscAccessibilitySubs:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: 'If the IMSC captions track is intended to provide accessibility
        for people who are deaf or hard of hearing: Set Accessibility subtitles to
        Enabled. When you do, MediaConvert adds accessibility attributes to your output
        HLS or DASH manifest. For HLS manifests, MediaConvert adds the following accessibility
        attributes under EXT-X-MEDIA for this track: CHARACTERISTICS="public.accessibility.describes-spoken-dialog,public.accessibility.describes-music-and-sound"
        and AUTOSELECT="YES". For DASH manifests, MediaConvert adds the following
        in the adaptation set for this track: <Accessibility schemeIdUri="urn:mpeg:dash:role:2011"
        value="caption"/>. If the captions track is not intended to provide such accessibility:
        Keep the default value, Disabled. When you do, for DASH manifests, MediaConvert
        instead adds the following in the adaptation set for this track: <Role schemeIDUri="urn:mpeg:dash:role:2011"
        value="subtitle"/>.'
    ImscStylePassthrough:
      type: string
      enum:
      - ENABLED
      - DISABLED
      description: Keep this setting enabled to have MediaConvert use the font style
        and position information from the captions source in the output. This option
        is available only when your input captions are IMSC, SMPTE-TT, or TTML. Disable
        this setting for simplified output captions.
    InputDeblockFilter:
      type: string
      enum:
      - ENABLED
      - DISABLED
      description: Enable Deblock to produce smoother motion in the output. Default
        is disabled. Only manually controllable for MPEG2 and uncompressed video inputs.
    InputDenoiseFilter:
      type: string
      enum:
      - ENABLED
      - DISABLED
      description: Enable Denoise to filter noise from the input. Default is disabled.
        Only applicable to MPEG2, H.264, H.265, and uncompressed video inputs.
    InputFilterEnable:
      type: string
      enum:
      - AUTO
      - DISABLE
      - FORCE
      description: 'Specify whether to apply input filtering to improve the video
        quality of your input. To apply filtering depending on your input type and
        quality: Choose Auto. To apply no filtering: Choose Disable. To apply filtering
        regardless of your input type and quality: Choose Force. When you do, you
        must also specify a value for Filter strength.'
    InputPolicy:
      type: string
      enum:
      - ALLOWED
      - DISALLOWED
      description: An input policy allows or disallows a job you submit to run based
        on the conditions that you specify.
    InputPsiControl:
      type: string
      enum:
      - IGNORE_PSI
      - USE_PSI
      description: 'Set PSI control for transport stream inputs to specify which data
        the demux process to scans.

        * Ignore PSI - Scan all PIDs for audio and video.

        * Use PSI - Scan only PSI data.'
    InputRotate:
      type: string
      enum:
      - DEGREE_0
      - DEGREES_90
      - DEGREES_180
      - DEGREES_270
      - AUTO
      description: Use Rotate to specify how the service rotates your video. You can
        choose automatic rotation or specify a rotation. You can specify a clockwise
        rotation of 0, 90, 180, or 270 degrees. If your input video container is .mov
        or .mp4 and your input has rotation metadata, you can choose Automatic to
        have the service rotate your video according to the rotation specified in
        the metadata. The rotation must be within one degree of 90, 180, or 270 degrees.
        If the rotation metadata specifies any other rotation, the service will default
        to no rotation. By default, the service does no rotation, even if your input
        video has rotation metadata. The service doesn't pass through rotation metadata.
    InputSampleRange:
      type: string
      enum:
      - FOLLOW
      - FULL_RANGE
      - LIMITED_RANGE
      description: If the sample range metadata in your input video is accurate, or
        if you don't know about sample range, keep the default value, Follow, for
        this setting. When you do, the service automatically detects your input sample
        range. If your input video has metadata indicating the wrong sample range,
        specify the accurate sample range here. When you do, MediaConvert ignores
        any sample range information in the input metadata. Regardless of whether
        MediaConvert uses the input sample range or the sample range that you specify,
        MediaConvert uses the sample range for transcoding and also writes it to the
        output metadata.
    InputScanType:
      type: string
      enum:
      - AUTO
      - PSF
      description: When you have a progressive segmented frame (PsF) input, use this
        setting to flag the input as PsF. MediaConvert doesn't automatically detect
        PsF. Therefore, flagging your input as PsF results in better preservation
        of video quality when you do deinterlacing and frame rate conversion. If you
        don't specify, the default value is Auto. Auto is the correct setting for
        all inputs that are not PsF. Don't set this value to PsF when your input is
        interlaced. Doing so creates horizontal interlacing artifacts.
    InputTimecodeSource:
      type: string
      enum:
      - EMBEDDED
      - ZEROBASED
      - SPECIFIEDSTART
      description: Use this Timecode source setting, located under the input settings,
        to specify how the service counts input video frames. This input frame count
        affects only the behavior of features that apply to a single input at a time,
        such as input clipping and synchronizing some captions formats. Choose Embedded
        to use the timecodes in your input video. Choose Start at zero to start the
        first frame at zero. Choose Specified start to start the first frame at the
        timecode that you specify in the setting Start timecode. If you don't specify
        a value for Timecode source, the service will use Embedded by default. For
        more information about timecodes, see https://docs.aws.amazon.com/console/mediaconvert/timecode.
    JobPhase:
      type: string
      enum:
      - PROBING
      - TRANSCODING
      - UPLOADING
      description: A job's phase can be PROBING, TRANSCODING OR UPLOADING
    JobStatus:
      type: string
      enum:
      - SUBMITTED
      - PROGRESSING
      - COMPLETE
      - CANCELED
      - ERROR
      description: A job's status can be SUBMITTED, PROGRESSING, COMPLETE, CANCELED,
        or ERROR.
    JobTemplateListBy:
      type: string
      enum:
      - NAME
      - CREATION_DATE
      - SYSTEM
      description: Optional. When you request a list of job templates, you can choose
        to list them alphabetically by NAME or chronologically by CREATION_DATE. If
        you don't specify, the service will list them by name.
    LanguageCode:
      type: string
      enum:
      - ENG
      - SPA
      - FRA
      - DEU
      - GER
      - ZHO
      - ARA
      - HIN
      - JPN
      - RUS
      - POR
      - ITA
      - URD
      - VIE
      - KOR
      - PAN
      - ABK
      - AAR
      - AFR
      - AKA
      - SQI
      - AMH
      - ARG
      - HYE
      - ASM
      - AVA
      - AVE
      - AYM
      - AZE
      - BAM
      - BAK
      - EUS
      - BEL
      - BEN
      - BIH
      - BIS
      - BOS
      - BRE
      - BUL
      - MYA
      - CAT
      - KHM
      - CHA
      - CHE
      - NYA
      - CHU
      - CHV
      - COR
      - COS
      - CRE
      - HRV
      - CES
      - DAN
      - DIV
      - NLD
      - DZO
      - ENM
      - EPO
      - EST
      - EWE
      - FAO
      - FIJ
      - FIN
      - FRM
      - FUL
      - GLA
      - GLG
      - LUG
      - KAT
      - ELL
      - GRN
      - GUJ
      - HAT
      - HAU
      - HEB
      - HER
      - HMO
      - HUN
      - ISL
      - IDO
      - IBO
      - IND
      - INA
      - ILE
      - IKU
      - IPK
      - GLE
      - JAV
      - KAL
      - KAN
      - KAU
      - KAS
      - KAZ
      - KIK
      - KIN
      - KIR
      - KOM
      - KON
      - KUA
      - KUR
      - LAO
      - LAT
      - LAV
      - LIM
      - LIN
      - LIT
      - LUB
      - LTZ
      - MKD
      - MLG
      - MSA
      - MAL
      - MLT
      - GLV
      - MRI
      - MAR
      - MAH
      - MON
      - NAU
      - NAV
      - NDE
      - NBL
      - NDO
      - NEP
      - SME
      - NOR
      - NOB
      - NNO
      - OCI
      - OJI
      - ORI
      - ORM
      - OSS
      - PLI
      - FAS
      - POL
      - PUS
      - QUE
      - QAA
      - RON
      - ROH
      - RUN
      - SMO
      - SAG
      - SAN
      - SRD
      - SRB
      - SNA
      - III
      - SND
      - SIN
      - SLK
      - SLV
      - SOM
      - SOT
      - SUN
      - SWA
      - SSW
      - SWE
      - TGL
      - TAH
      - TGK
      - TAM
      - TAT
      - TEL
      - THA
      - BOD
      - TIR
      - TON
      - TSO
      - TSN
      - TUR
      - TUK
      - TWI
      - UIG
      - UKR
      - UZB
      - VEN
      - VOL
      - WLN
      - CYM
      - FRY
      - WOL
      - XHO
      - YID
      - YOR
      - ZHA
      - ZUL
      - ORJ
      - QPC
      - TNG
      - SRP
      description: Specify the language, using the ISO 639-2 three-letter code listed
        at https://www.loc.gov/standards/iso639-2/php/code_list.php.
    M2tsAudioBufferModel:
      type: string
      enum:
      - DVB
      - ATSC
      description: Selects between the DVB and ATSC buffer models for Dolby Digital
        audio.
    M2tsAudioDuration:
      type: string
      enum:
      - DEFAULT_CODEC_DURATION
      - MATCH_VIDEO_DURATION
      description: Specify this setting only when your output will be consumed by
        a downstream repackaging workflow that is sensitive to very small duration
        differences between video and audio. For this situation, choose Match video
        duration. In all other cases, keep the default value, Default codec duration.
        When you choose Match video duration, MediaConvert pads the output audio streams
        with silence or trims them to ensure that the total duration of each audio
        stream is at least as long as the total duration of the video stream. After
        padding or trimming, the audio stream duration is no more than one frame longer
        than the video stream. MediaConvert applies audio padding or trimming only
        to the end of the last segment of the output. For unsegmented outputs, MediaConvert
        adds padding only to the end of the file. When you keep the default value,
        any minor discrepancies between audio and video duration will depend on your
        output audio codec.
    M2tsBufferModel:
      type: string
      enum:
      - MULTIPLEX
      - NONE
      description: Controls what buffer model to use for accurate interleaving. If
        set to MULTIPLEX, use multiplex buffer model. If set to NONE, this can lead
        to lower latency, but low-memory devices may not be able to play back the
        stream without interruptions.
    M2tsDataPtsControl:
      type: string
      enum:
      - AUTO
      - ALIGN_TO_VIDEO
      description: If you select ALIGN_TO_VIDEO, MediaConvert writes captions and
        data packets with Presentation Timestamp (PTS) values greater than or equal
        to the first video packet PTS (MediaConvert drops captions and data packets
        with lesser PTS values). Keep the default value to allow all PTS values.
    M2tsEbpAudioInterval:
      type: string
      enum:
      - VIDEO_AND_FIXED_INTERVALS
      - VIDEO_INTERVAL
      description: When set to VIDEO_AND_FIXED_INTERVALS, audio EBP markers will be
        added to partitions 3 and 4. The interval between these additional markers
        will be fixed, and will be slightly shorter than the video EBP marker interval.
        When set to VIDEO_INTERVAL, these additional markers will not be inserted.
        Only applicable when EBP segmentation markers are is selected (segmentationMarkers
        is EBP or EBP_LEGACY).
    M2tsEbpPlacement:
      type: string
      enum:
      - VIDEO_AND_AUDIO_PIDS
      - VIDEO_PID
      description: Selects which PIDs to place EBP markers on. They can either be
        placed only on the video PID, or on both the video PID and all audio PIDs.
        Only applicable when EBP segmentation markers are is selected (segmentationMarkers
        is EBP or EBP_LEGACY).
    M2tsEsRateInPes:
      type: string
      enum:
      - INCLUDE
      - EXCLUDE
      description: Controls whether to include the ES Rate field in the PES header.
    M2tsForceTsVideoEbpOrder:
      type: string
      enum:
      - FORCE
      - DEFAULT
      description: Keep the default value unless you know that your audio EBP markers
        are incorrectly appearing before your video EBP markers. To correct this problem,
        set this value to Force.
    M2tsKlvMetadata:
      type: string
      enum:
      - PASSTHROUGH
      - NONE
      description: 'To include key-length-value metadata in this output: Set KLV metadata
        insertion to Passthrough. MediaConvert reads KLV metadata present in your
        input and passes it through to the output transport stream. To exclude this
        KLV metadata: Set KLV metadata insertion to None or leave blank.'
    M2tsNielsenId3:
      type: string
      enum:
      - INSERT
      - NONE
      description: If INSERT, Nielsen inaudible tones for media tracking will be detected
        in the input audio and an equivalent ID3 tag will be inserted in the output.
    M2tsPcrControl:
      type: string
      enum:
      - PCR_EVERY_PES_PACKET
      - CONFIGURED_PCR_PERIOD
      description: When set to PCR_EVERY_PES_PACKET, a Program Clock Reference value
        is inserted for every Packetized Elementary Stream (PES) header. This is effective
        only when the PCR PID is the same as the video or audio elementary stream.
    M2tsPreventBufferUnderflow:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: 'Specify whether MediaConvert automatically attempts to prevent
        decoder buffer underflows in your transport stream output. Use if you are
        seeing decoder buffer underflows in your output and are unable to increase
        your transport stream''s bitrate. For most workflows: We recommend that you
        keep the default value, Disabled. To prevent decoder buffer underflows in
        your output, when possible: Choose Enabled. Note that if MediaConvert prevents
        a decoder buffer underflow in your output, output video quality is reduced
        and your job will take longer to complete.'
    M2tsRateMode:
      type: string
      enum:
      - VBR
      - CBR
      description: When set to CBR, inserts null packets into transport stream to
        fill specified bitrate. When set to VBR, the bitrate setting acts as the maximum
        bitrate, but the output will not be padded up to that bitrate.
    M2tsScte35Source:
      type: string
      enum:
      - PASSTHROUGH
      - NONE
      description: For SCTE-35 markers from your input-- Choose Passthrough if you
        want SCTE-35 markers that appear in your input to also appear in this output.
        Choose None if you don't want SCTE-35 markers in this output. For SCTE-35
        markers from an ESAM XML document-- Choose None. Also provide the ESAM XML
        as a string in the setting Signal processing notification XML. Also enable
        ESAM SCTE-35 (include the property scte35Esam).
    M2tsSegmentationMarkers:
      type: string
      enum:
      - NONE
      - RAI_SEGSTART
      - RAI_ADAPT
      - PSI_SEGSTART
      - EBP
      - EBP_LEGACY
      description: Inserts segmentation markers at each segmentation_time period.
        rai_segstart sets the Random Access Indicator bit in the adaptation field.
        rai_adapt sets the RAI bit and adds the current timecode in the private data
        bytes. psi_segstart inserts PAT and PMT tables at the start of segments. ebp
        adds Encoder Boundary Point information to the adaptation field as per OpenCable
        specification OC-SP-EBP-I01-130118. ebp_legacy adds Encoder Boundary Point
        information to the adaptation field using a legacy proprietary format.
    M2tsSegmentationStyle:
      type: string
      enum:
      - MAINTAIN_CADENCE
      - RESET_CADENCE
      description: The segmentation style parameter controls how segmentation markers
        are inserted into the transport stream. With avails, it is possible that segments
        may be truncated, which can influence where future segmentation markers are
        inserted. When a segmentation style of "reset_cadence" is selected and a segment
        is truncated due to an avail, we will reset the segmentation cadence. This
        means the subsequent segment will have a duration of of $segmentation_time
        seconds. When a segmentation style of "maintain_cadence" is selected and a
        segment is truncated due to an avail, we will not reset the segmentation cadence.
        This means the subsequent segment will likely be truncated as well. However,
        all segments after that will have a duration of $segmentation_time seconds.
        Note that EBP lookahead is a slight exception to this rule.
    M3u8AudioDuration:
      type: string
      enum:
      - DEFAULT_CODEC_DURATION
      - MATCH_VIDEO_DURATION
      description: Specify this setting only when your output will be consumed by
        a downstream repackaging workflow that is sensitive to very small duration
        differences between video and audio. For this situation, choose Match video
        duration. In all other cases, keep the default value, Default codec duration.
        When you choose Match video duration, MediaConvert pads the output audio streams
        with silence or trims them to ensure that the total duration of each audio
        stream is at least as long as the total duration of the video stream. After
        padding or trimming, the audio stream duration is no more than one frame longer
        than the video stream. MediaConvert applies audio padding or trimming only
        to the end of the last segment of the output. For unsegmented outputs, MediaConvert
        adds padding only to the end of the file. When you keep the default value,
        any minor discrepancies between audio and video duration will depend on your
        output audio codec.
    M3u8DataPtsControl:
      type: string
      enum:
      - AUTO
      - ALIGN_TO_VIDEO
      description: If you select ALIGN_TO_VIDEO, MediaConvert writes captions and
        data packets with Presentation Timestamp (PTS) values greater than or equal
        to the first video packet PTS (MediaConvert drops captions and data packets
        with lesser PTS values). Keep the default value AUTO to allow all PTS values.
    M3u8NielsenId3:
      type: string
      enum:
      - INSERT
      - NONE
      description: If INSERT, Nielsen inaudible tones for media tracking will be detected
        in the input audio and an equivalent ID3 tag will be inserted in the output.
    M3u8PcrControl:
      type: string
      enum:
      - PCR_EVERY_PES_PACKET
      - CONFIGURED_PCR_PERIOD
      description: When set to PCR_EVERY_PES_PACKET a Program Clock Reference value
        is inserted for every Packetized Elementary Stream (PES) header. This parameter
        is effective only when the PCR PID is the same as the video or audio elementary
        stream.
    M3u8Scte35Source:
      type: string
      enum:
      - PASSTHROUGH
      - NONE
      description: For SCTE-35 markers from your input-- Choose Passthrough if you
        want SCTE-35 markers that appear in your input to also appear in this output.
        Choose None if you don't want SCTE-35 markers in this output. For SCTE-35
        markers from an ESAM XML document-- Choose None if you don't want manifest
        conditioning. Choose Passthrough and choose Ad markers if you do want manifest
        conditioning. In both cases, also provide the ESAM XML as a string in the
        setting Signal processing notification XML.
    MatrixCoefficients:
      type: string
      enum:
      - RGB
      - ITU_709
      - UNSPECIFIED
      - RESERVED
      - FCC
      - ITU_470BG
      - SMPTE_170M
      - SMPTE_240M
      - YCgCo
      - ITU_2020_NCL
      - ITU_2020_CL
      - SMPTE_2085
      - CD_NCL
      - CD_CL
      - ITU_2100ICtCp
      - IPT
      - EBU3213
      - LAST
      description: The color space matrix coefficients of the video track.
    MotionImageInsertionMode:
      type: string
      enum:
      - MOV
      - PNG
      description: Choose the type of motion graphic asset that you are providing
        for your overlay. You can choose either a .mov file or a series of .png files.
    MotionImagePlayback:
      type: string
      enum:
      - ONCE
      - REPEAT
      description: Specify whether your motion graphic overlay repeats on a loop or
        plays only once.
    MovClapAtom:
      type: string
      enum:
      - INCLUDE
      - EXCLUDE
      description: When enabled, include 'clap' atom if appropriate for the video
        output settings.
    MovCslgAtom:
      type: string
      enum:
      - INCLUDE
      - EXCLUDE
      description: When enabled, file composition times will start at zero, composition
        times in the 'ctts' (composition time to sample) box for B-frames will be
        negative, and a 'cslg' (composition shift least greatest) box will be included
        per 14496-1 amendment 1. This improves compatibility with Apple players and
        tools.
    MovMpeg2FourCCControl:
      type: string
      enum:
      - XDCAM
      - MPEG
      description: When set to XDCAM, writes MPEG2 video streams into the QuickTime
        file using XDCAM fourcc codes. This increases compatibility with Apple editors
        and players, but may decrease compatibility with other players. Only applicable
        when the video codec is MPEG2.
    MovPaddingControl:
      type: string
      enum:
      - OMNEON
      - NONE
      description: 'Unless you need Omneon compatibility: Keep the default value,
        None. To make this output compatible with Omneon: Choose Omneon. When you
        do, MediaConvert increases the length of the ''elst'' edit list atom. Note
        that this might cause file rejections when a recipient of the output file
        doesn''t expect this extra padding.'
    MovReference:
      type: string
      enum:
      - SELF_CONTAINED
      - EXTERNAL
      description: Always keep the default value (SELF_CONTAINED) for this setting.
    Mp3RateControlMode:
      type: string
      enum:
      - CBR
      - VBR
      description: Specify whether the service encodes this MP3 audio output with
        a constant bitrate (CBR) or a variable bitrate (VBR).
    Mp4CslgAtom:
      type: string
      enum:
      - INCLUDE
      - EXCLUDE
      description: When enabled, file composition times will start at zero, composition
        times in the 'ctts' (composition time to sample) box for B-frames will be
        negative, and a 'cslg' (composition shift least greatest) box will be included
        per 14496-1 amendment 1. This improves compatibility with Apple players and
        tools.
    Mp4FreeSpaceBox:
      type: string
      enum:
      - INCLUDE
      - EXCLUDE
      description: Inserts a free-space box immediately after the moov box.
    Mp4MoovPlacement:
      type: string
      enum:
      - PROGRESSIVE_DOWNLOAD
      - NORMAL
      description: 'To place the MOOV atom at the beginning of your output, which
        is useful for progressive downloading: Leave blank or choose Progressive download.
        To place the MOOV at the end of your output: Choose Normal.'
    MpdAccessibilityCaptionHints:
      type: string
      enum:
      - INCLUDE
      - EXCLUDE
      description: 'Optional. Choose Include to have MediaConvert mark up your DASH
        manifest with <Accessibility> elements for embedded 608 captions. This markup
        isn''t generally required, but some video players require it to discover and
        play embedded 608 captions. Keep the default value, Exclude, to leave these
        elements out. When you enable this setting, this is the markup that MediaConvert
        includes in your manifest: <Accessibility schemeIdUri="urn:scte:dash:cc:cea-608:2015"
        value="CC1=eng"/>'
    MpdAudioDuration:
      type: string
      enum:
      - DEFAULT_CODEC_DURATION
      - MATCH_VIDEO_DURATION
      description: Specify this setting only when your output will be consumed by
        a downstream repackaging workflow that is sensitive to very small duration
        differences between video and audio. For this situation, choose Match video
        duration. In all other cases, keep the default value, Default codec duration.
        When you choose Match video duration, MediaConvert pads the output audio streams
        with silence or trims them to ensure that the total duration of each audio
        stream is at least as long as the total duration of the video stream. After
        padding or trimming, the audio stream duration is no more than one frame longer
        than the video stream. MediaConvert applies audio padding or trimming only
        to the end of the last segment of the output. For unsegmented outputs, MediaConvert
        adds padding only to the end of the file. When you keep the default value,
        any minor discrepancies between audio and video duration will depend on your
        output audio codec.
    MpdCaptionContainerType:
      type: string
      enum:
      - RAW
      - FRAGMENTED_MP4
      description: Use this setting only in DASH output groups that include sidecar
        TTML or IMSC captions. You specify sidecar captions in a separate output from
        your audio and video. Choose Raw for captions in a single XML file in a raw
        container. Choose Fragmented MPEG-4 for captions in XML format contained within
        fragmented MP4 files. This set of fragmented MP4 files is separate from your
        video and audio fragmented MP4 files.
    MpdKlvMetadata:
      type: string
      enum:
      - NONE
      - PASSTHROUGH
      description: 'To include key-length-value metadata in this output: Set KLV metadata
        insertion to Passthrough. MediaConvert reads KLV metadata present in your
        input and writes each instance to a separate event message box in the output,
        according to MISB ST1910.1. To exclude this KLV metadata: Set KLV metadata
        insertion to None or leave blank.'
    MpdManifestMetadataSignaling:
      type: string
      enum:
      - ENABLED
      - DISABLED
      description: To add an InbandEventStream element in your output MPD manifest
        for each type of event message, set Manifest metadata signaling to Enabled.
        For ID3 event messages, the InbandEventStream element schemeIdUri will be
        same value that you specify for ID3 metadata scheme ID URI. For SCTE35 event
        messages, the InbandEventStream element schemeIdUri will be "urn:scte:scte35:2013:bin".
        To leave these elements out of your output MPD manifest, set Manifest metadata
        signaling to Disabled. To enable Manifest metadata signaling, you must also
        set SCTE-35 source to Passthrough, ESAM SCTE-35 to insert, or ID3 metadata
        to Passthrough.
    MpdScte35Esam:
      type: string
      enum:
      - INSERT
      - NONE
      description: Use this setting only when you specify SCTE-35 markers from ESAM.
        Choose INSERT to put SCTE-35 markers in this output at the insertion points
        that you specify in an ESAM XML document. Provide the document in the setting
        SCC XML.
    MpdScte35Source:
      type: string
      enum:
      - PASSTHROUGH
      - NONE
      description: Ignore this setting unless you have SCTE-35 markers in your input
        video file. Choose Passthrough if you want SCTE-35 markers that appear in
        your input to also appear in this output. Choose None if you don't want those
        SCTE-35 markers in this output.
    MpdTimedMetadata:
      type: string
      enum:
      - PASSTHROUGH
      - NONE
      description: 'To include ID3 metadata in this output: Set ID3 metadata to Passthrough.
        Specify this ID3 metadata in Custom ID3 metadata inserter. MediaConvert writes
        each instance of ID3 metadata in a separate Event Message (eMSG) box. To exclude
        this ID3 metadata: Set ID3 metadata to None or leave blank.'
    MpdTimedMetadataBoxVersion:
      type: string
      enum:
      - VERSION_0
      - VERSION_1
      description: 'Specify the event message box (eMSG) version for ID3 timed metadata
        in your output.

        For more information, see ISO/IEC 23009-1:2022 section 5.10.3.3.3 Syntax.

        Leave blank to use the default value Version 0.

        When you specify Version 1, you must also set ID3 metadata to Passthrough.'
    Mpeg2AdaptiveQuantization:
      type: string
      enum:
      - 'OFF'
      - LOW
      - MEDIUM
      - HIGH
      description: 'Specify the strength of any adaptive quantization filters that
        you enable. The value that you choose here applies to the following settings:
        Spatial adaptive quantization, and Temporal adaptive quantization.'
    Mpeg2CodecLevel:
      type: string
      enum:
      - AUTO
      - LOW
      - MAIN
      - HIGH1440
      - HIGH
      description: Use Level to set the MPEG-2 level for the video output.
    Mpeg2CodecProfile:
      type: string
      enum:
      - MAIN
      - PROFILE_422
      description: Use Profile to set the MPEG-2 profile for the video output.
    Mpeg2DynamicSubGop:
      type: string
      enum:
      - ADAPTIVE
      - STATIC
      description: Choose Adaptive to improve subjective video quality for high-motion
        content. This will cause the service to use fewer B-frames (which infer information
        based on other frames) for high-motion portions of the video and more B-frames
        for low-motion portions. The maximum number of B-frames is limited by the
        value you provide for the setting B frames between reference frames.
    Mpeg2FramerateControl:
      type: string
      enum:
      - INITIALIZE_FROM_SOURCE
      - SPECIFIED
      description: If you are using the console, use the Framerate setting to specify
        the frame rate for this output. If you want to keep the same frame rate as
        the input video, choose Follow source. If you want to do frame rate conversion,
        choose a frame rate from the dropdown list or choose Custom. The framerates
        shown in the dropdown list are decimal approximations of fractions. If you
        choose Custom, specify your frame rate as a fraction.
    Mpeg2FramerateConversionAlgorithm:
      type: string
      enum:
      - DUPLICATE_DROP
      - INTERPOLATE
      - FRAMEFORMER
      - MAINTAIN_FRAME_COUNT
      description: 'Choose the method that you want MediaConvert to use when increasing
        or decreasing your video''s frame rate. For numerically simple conversions,
        such as 60 fps to 30 fps: We recommend that you keep the default value, Drop
        duplicate. For numerically complex conversions, to avoid stutter: Choose Interpolate.
        This results in a smooth picture, but might introduce undesirable video artifacts.
        For complex frame rate conversions, especially if your source video has already
        been converted from its original cadence: Choose FrameFormer to do motion-compensated
        interpolation. FrameFormer uses the best conversion method frame by frame.
        Note that using FrameFormer increases the transcoding time and incurs a significant
        add-on cost. When you choose FrameFormer, your input video resolution must
        be at least 128x96. To create an output with the same number of frames as
        your input: Choose Maintain frame count. When you do, MediaConvert will not
        drop, interpolate, add, or otherwise change the frame count from your input
        to your output. Note that since the frame count is maintained, the duration
        of your output will become shorter at higher frame rates and longer at lower
        frame rates.'
    Mpeg2GopSizeUnits:
      type: string
      enum:
      - FRAMES
      - SECONDS
      description: Specify the units for GOP size. If you don't specify a value here,
        by default the encoder measures GOP size in frames.
    Mpeg2InterlaceMode:
      type: string
      enum:
      - PROGRESSIVE
      - TOP_FIELD
      - BOTTOM_FIELD
      - FOLLOW_TOP_FIELD
      - FOLLOW_BOTTOM_FIELD
      description: Choose the scan line type for the output. Keep the default value,
        Progressive to create a progressive output, regardless of the scan type of
        your input. Use Top field first or Bottom field first to create an output
        that's interlaced with the same field polarity throughout. Use Follow, default
        top or Follow, default bottom to produce outputs with the same field polarity
        as the source. For jobs that have multiple inputs, the output field polarity
        might change over the course of the output. Follow behavior depends on the
        input scan type. If the source is interlaced, the output will be interlaced
        with the same polarity as the source. If the source is progressive, the output
        will be interlaced with top field bottom field first, depending on which of
        the Follow options you choose.
    Mpeg2IntraDcPrecision:
      type: string
      enum:
      - AUTO
      - INTRA_DC_PRECISION_8
      - INTRA_DC_PRECISION_9
      - INTRA_DC_PRECISION_10
      - INTRA_DC_PRECISION_11
      description: Use Intra DC precision to set quantization precision for intra-block
        DC coefficients. If you choose the value auto, the service will automatically
        select the precision based on the per-frame compression ratio.
    Mpeg2ParControl:
      type: string
      enum:
      - INITIALIZE_FROM_SOURCE
      - SPECIFIED
      description: Optional. Specify how the service determines the pixel aspect ratio
        (PAR) for this output. The default behavior, Follow source, uses the PAR from
        your input video for your output. To specify a different PAR in the console,
        choose any value other than Follow source. When you choose SPECIFIED for this
        setting, you must also specify values for the parNumerator and parDenominator
        settings.
    Mpeg2QualityTuningLevel:
      type: string
      enum:
      - SINGLE_PASS
      - MULTI_PASS
      description: Optional. Use Quality tuning level to choose how you want to trade
        off encoding speed for output video quality. The default behavior is faster,
        lower quality, single-pass encoding.
    Mpeg2RateControlMode:
      type: string
      enum:
      - VBR
      - CBR
      description: Use Rate control mode to specify whether the bitrate is variable
        (vbr) or constant (cbr).
    Mpeg2ScanTypeConversionMode:
      type: string
      enum:
      - INTERLACED
      - INTERLACED_OPTIMIZE
      description: 'Use this setting for interlaced outputs, when your output frame
        rate is half of your input frame rate. In this situation, choose Optimized
        interlacing to create a better quality interlaced output. In this case, each
        progressive frame from the input corresponds to an interlaced field in the
        output. Keep the default value, Basic interlacing, for all other output frame
        rates. With basic interlacing, MediaConvert performs any frame rate conversion
        first and then interlaces the frames. When you choose Optimized interlacing
        and you set your output frame rate to a value that isn''t suitable for optimized
        interlacing, MediaConvert automatically falls back to basic interlacing. Required
        settings: To use optimized interlacing, you must set Telecine to None or Soft.
        You can''t use optimized interlacing for hard telecine outputs. You must also
        set Interlace mode to a value other than Progressive.'
    Mpeg2SceneChangeDetect:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: Enable this setting to insert I-frames at scene changes that the
        service automatically detects. This improves video quality and is enabled
        by default.
    Mpeg2SlowPal:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: 'Ignore this setting unless your input frame rate is 23.976 or
        24 frames per second (fps). Enable slow PAL to create a 25 fps output. When
        you enable slow PAL, MediaConvert relabels the video frames to 25 fps and
        resamples your audio to keep it synchronized with the video. Note that enabling
        this setting will slightly reduce the duration of your video. Required settings:
        You must also set Framerate to 25.'
    Mpeg2SpatialAdaptiveQuantization:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: 'Keep the default value, Enabled, to adjust quantization within
        each frame based on spatial variation of content complexity. When you enable
        this feature, the encoder uses fewer bits on areas that can sustain more distortion
        with no noticeable visual degradation and uses more bits on areas where any
        small distortion will be noticeable. For example, complex textured blocks
        are encoded with fewer bits and smooth textured blocks are encoded with more
        bits. Enabling this feature will almost always improve your video quality.
        Note, though, that this feature doesn''t take into account where the viewer''s
        attention is likely to be. If viewers are likely to be focusing their attention
        on a part of the screen with a lot of complex texture, you might choose to
        disable this feature. Related setting: When you enable spatial adaptive quantization,
        set the value for Adaptive quantization depending on your content. For homogeneous
        content, such as cartoons and video games, set it to Low. For content with
        a wider variety of textures, set it to High or Higher.'
    Mpeg2Syntax:
      type: string
      enum:
      - DEFAULT
      - D_10
      description: 'Specify whether this output''s video uses the D10 syntax. Keep
        the default value to not use the syntax. Related settings: When you choose
        D10 for your MXF profile, you must also set this value to D10.'
    Mpeg2Telecine:
      type: string
      enum:
      - NONE
      - SOFT
      - HARD
      description: When you do frame rate conversion from 23.976 frames per second
        (fps) to 29.97 fps, and your output scan type is interlaced, you can optionally
        enable hard or soft telecine to create a smoother picture. Hard telecine produces
        a 29.97i output. Soft telecine produces an output with a 23.976 output that
        signals to the video player device to do the conversion during play back.
        When you keep the default value, None, MediaConvert does a standard frame
        rate conversion to 29.97 without doing anything with the field polarity to
        create a smoother picture.
    Mpeg2TemporalAdaptiveQuantization:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: 'Keep the default value, Enabled, to adjust quantization within
        each frame based on temporal variation of content complexity. When you enable
        this feature, the encoder uses fewer bits on areas of the frame that aren''t
        moving and uses more bits on complex objects with sharp edges that move a
        lot. For example, this feature improves the readability of text tickers on
        newscasts and scoreboards on sports matches. Enabling this feature will almost
        always improve your video quality. Note, though, that this feature doesn''t
        take into account where the viewer''s attention is likely to be. If viewers
        are likely to be focusing their attention on a part of the screen that doesn''t
        have moving objects with sharp edges, such as sports athletes'' faces, you
        might choose to disable this feature. Related setting: When you enable temporal
        quantization, adjust the strength of the filter with the setting Adaptive
        quantization.'
    MsSmoothAudioDeduplication:
      type: string
      enum:
      - COMBINE_DUPLICATE_STREAMS
      - NONE
      description: COMBINE_DUPLICATE_STREAMS combines identical audio encoding settings
        across a Microsoft Smooth output group into a single audio stream.
    MsSmoothFragmentLengthControl:
      type: string
      enum:
      - EXACT
      - GOP_MULTIPLE
      description: Specify how you want MediaConvert to determine the fragment length.
        Choose Exact to have the encoder use the exact length that you specify with
        the setting Fragment length. This might result in extra I-frames. Choose Multiple
        of GOP to have the encoder round up the segment lengths to match the next
        GOP boundary.
    MsSmoothManifestEncoding:
      type: string
      enum:
      - UTF8
      - UTF16
      description: Use Manifest encoding to specify the encoding format for the server
        and client manifest. Valid options are utf8 and utf16.
    MxfAfdSignaling:
      type: string
      enum:
      - NO_COPY
      - COPY_FROM_VIDEO
      description: 'Optional. When you have AFD signaling set up in your output video
        stream, use this setting to choose whether to also include it in the MXF wrapper.
        Choose Don''t copy to exclude AFD signaling from the MXF wrapper. Choose Copy
        from video stream to copy the AFD values from the video stream for this output
        to the MXF wrapper. Regardless of which option you choose, the AFD values
        remain in the video stream. Related settings: To set up your output to include
        or exclude AFD values, see AfdSignaling, under VideoDescription. On the console,
        find AFD signaling under the output''s video encoding settings.'
    MxfProfile:
      type: string
      enum:
      - D_10
      - XDCAM
      - OP1A
      - XAVC
      - XDCAM_RDD9
      description: Specify the MXF profile, also called shim, for this output. To
        automatically select a profile according to your output video codec and resolution,
        leave blank. For a list of codecs supported with each MXF profile, see https://docs.aws.amazon.com/mediaconvert/latest/ug/codecs-supported-with-each-mxf-profile.html.
        For more information about the automatic selection behavior, see https://docs.aws.amazon.com/mediaconvert/latest/ug/default-automatic-selection-of-mxf-profiles.html.
    MxfXavcDurationMode:
      type: string
      enum:
      - ALLOW_ANY_DURATION
      - DROP_FRAMES_FOR_COMPLIANCE
      description: To create an output that complies with the XAVC file format guidelines
        for interoperability, keep the default value, Drop frames for compliance.
        To include all frames from your input in this output, keep the default setting,
        Allow any duration. The number of frames that MediaConvert excludes when you
        set this to Drop frames for compliance depends on the output frame rate and
        duration.
    NielsenActiveWatermarkProcessType:
      type: string
      enum:
      - NAES2_AND_NW
      - CBET
      - NAES2_AND_NW_AND_CBET
      description: Choose the type of Nielsen watermarks that you want in your outputs.
        When you choose NAES 2 and NW, you must provide a value for the setting SID.
        When you choose CBET, you must provide a value for the setting CSID. When
        you choose NAES 2, NW, and CBET, you must provide values for both of these
        settings.
    NielsenSourceWatermarkStatusType:
      type: string
      enum:
      - CLEAN
      - WATERMARKED
      description: Required. Specify whether your source content already contains
        Nielsen non-linear watermarks. When you set this value to Watermarked, the
        service fails the job. Nielsen requires that you add non-linear watermarking
        to only clean content that doesn't already have non-linear Nielsen watermarks.
    NielsenUniqueTicPerAudioTrackType:
      type: string
      enum:
      - RESERVE_UNIQUE_TICS_PER_TRACK
      - SAME_TICS_PER_TRACK
      description: To create assets that have the same TIC values in each audio track,
        keep the default value Share TICs. To create assets that have unique TIC values
        for each audio track, choose Use unique TICs.
    NoiseFilterPostTemporalSharpening:
      type: string
      enum:
      - DISABLED
      - ENABLED
      - AUTO
      description: When you set Noise reducer to Temporal, the bandwidth and sharpness
        of your output is reduced. You can optionally use Post temporal sharpening
        to apply sharpening to the edges of your output. Note that Post temporal sharpening
        will also make the bandwidth reduction from the Noise reducer smaller. The
        default behavior, Auto, allows the transcoder to determine whether to apply
        sharpening, depending on your input type and quality. When you set Post temporal
        sharpening to Enabled, specify how much sharpening is applied using Post temporal
        sharpening strength. Set Post temporal sharpening to Disabled to not apply
        sharpening.
    NoiseFilterPostTemporalSharpeningStrength:
      type: string
      enum:
      - LOW
      - MEDIUM
      - HIGH
      description: Use Post temporal sharpening strength to define the amount of sharpening
        the transcoder applies to your output. Set Post temporal sharpening strength
        to Low, Medium, or High to indicate the amount of sharpening.
    NoiseReducerFilter:
      type: string
      enum:
      - BILATERAL
      - MEAN
      - GAUSSIAN
      - LANCZOS
      - SHARPEN
      - CONSERVE
      - SPATIAL
      - TEMPORAL
      description: Use Noise reducer filter to select one of the following spatial
        image filtering functions. To use this setting, you must also enable Noise
        reducer. * Bilateral preserves edges while reducing noise. * Mean (softest),
        Gaussian, Lanczos, and Sharpen (sharpest) do convolution filtering. * Conserve
        does min/max noise reduction. * Spatial does frequency-domain filtering based
        on JND principles. * Temporal optimizes video quality for complex motion.
    Order:
      type: string
      enum:
      - ASCENDING
      - DESCENDING
      description: Optional. When you request lists of resources, you can specify
        whether they are sorted in ASCENDING or DESCENDING order. Default varies by
        resource.
    OutputGroupType:
      type: string
      enum:
      - HLS_GROUP_SETTINGS
      - DASH_ISO_GROUP_SETTINGS
      - FILE_GROUP_SETTINGS
      - MS_SMOOTH_GROUP_SETTINGS
      - CMAF_GROUP_SETTINGS
      description: Type of output group (File group, Apple HLS, DASH ISO, Microsoft
        Smooth Streaming, CMAF)
    OutputSdt:
      type: string
      enum:
      - SDT_FOLLOW
      - SDT_FOLLOW_IF_PRESENT
      - SDT_MANUAL
      - SDT_NONE
      description: Selects method of inserting SDT information into output stream.
        "Follow input SDT" copies SDT information from input stream to output stream.
        "Follow input SDT if present" copies SDT information from input stream to
        output stream if SDT information is present in the input, otherwise it will
        fall back on the user-defined values. Enter "SDT Manually" means user will
        enter the SDT information. "No SDT" means output stream will not contain SDT
        information.
    PadVideo:
      type: string
      enum:
      - DISABLED
      - BLACK
      description: 'Use this setting if your input has video and audio durations that
        don''t align, and your output or player has strict alignment requirements.
        Examples: Input audio track has a delayed start. Input video track ends before
        audio ends. When you set Pad video to Black, MediaConvert generates black
        video frames so that output video and audio durations match. Black video frames
        are added at the beginning or end, depending on your input. To keep the default
        behavior and not generate black video, set Pad video to Disabled or leave
        blank.'
    PresetListBy:
      type: string
      enum:
      - NAME
      - CREATION_DATE
      - SYSTEM
      description: Optional. When you request a list of presets, you can choose to
        list them alphabetically by NAME or chronologically by CREATION_DATE. If you
        don't specify, the service will list them by name.
    PresetSpeke20Audio:
      type: string
      enum:
      - PRESET_AUDIO_1
      - PRESET_AUDIO_2
      - PRESET_AUDIO_3
      - SHARED
      - UNENCRYPTED
      description: 'Specify which SPEKE version 2.0 audio preset MediaConvert uses
        to request content keys from your SPEKE server. For more information, see:
        https://docs.aws.amazon.com/mediaconvert/latest/ug/drm-content-speke-v2-presets.html
        To encrypt to your audio outputs, choose from the following: Audio preset
        1, Audio preset 2, or Audio preset 3. To encrypt your audio outputs, using
        the same content key for both your audio and video outputs: Choose Shared.
        When you do, you must also set SPEKE v2.0 video preset to Shared. To not encrypt
        your audio outputs: Choose Unencrypted. When you do, to encrypt your video
        outputs, you must also specify a SPEKE v2.0 video preset (other than Shared
        or Unencrypted).'
    PresetSpeke20Video:
      type: string
      enum:
      - PRESET_VIDEO_1
      - PRESET_VIDEO_2
      - PRESET_VIDEO_3
      - PRESET_VIDEO_4
      - PRESET_VIDEO_5
      - PRESET_VIDEO_6
      - PRESET_VIDEO_7
      - PRESET_VIDEO_8
      - SHARED
      - UNENCRYPTED
      description: 'Specify which SPEKE version 2.0 video preset MediaConvert uses
        to request content keys from your SPEKE server. For more information, see:
        https://docs.aws.amazon.com/mediaconvert/latest/ug/drm-content-speke-v2-presets.html
        To encrypt to your video outputs, choose from the following: Video preset
        1, Video preset 2, Video preset 3, Video preset 4, Video preset 5, Video preset
        6, Video preset 7, or Video preset 8. To encrypt your video outputs, using
        the same content key for both your video and audio outputs: Choose Shared.
        When you do, you must also set SPEKE v2.0 audio preset to Shared. To not encrypt
        your video outputs: Choose Unencrypted. When you do, to encrypt your audio
        outputs, you must also specify a SPEKE v2.0 audio preset (other than Shared
        or Unencrypted).'
    PricingPlan:
      type: string
      enum:
      - ON_DEMAND
      - RESERVED
      description: Specifies whether the pricing plan for the queue is on-demand or
        reserved. For on-demand, you pay per minute, billed in increments of .01 minute.
        For reserved, you pay for the transcoding capacity of the entire queue, regardless
        of how much or how little you use it. Reserved pricing requires a 12-month
        commitment.
    ProresChromaSampling:
      type: string
      enum:
      - PRESERVE_444_SAMPLING
      - SUBSAMPLE_TO_422
      description: 'This setting applies only to ProRes 4444 and ProRes 4444 XQ outputs
        that you create from inputs that use 4:4:4 chroma sampling. Set Preserve 4:4:4
        sampling to allow outputs to also use 4:4:4 chroma sampling. You must specify
        a value for this setting when your output codec profile supports 4:4:4 chroma
        sampling. Related Settings: For Apple ProRes outputs with 4:4:4 chroma sampling:
        Choose Preserve 4:4:4 sampling. Use when your input has 4:4:4 chroma sampling
        and your output codec Profile is Apple ProRes 4444 or 4444 XQ. Note that when
        you choose Preserve 4:4:4 sampling, you cannot include any of the following
        Preprocessors: Dolby Vision, HDR10+, or Noise reducer.'
    ProresCodecProfile:
      type: string
      enum:
      - APPLE_PRORES_422
      - APPLE_PRORES_422_HQ
      - APPLE_PRORES_422_LT
      - APPLE_PRORES_422_PROXY
      - APPLE_PRORES_4444
      - APPLE_PRORES_4444_XQ
      description: Use Profile to specify the type of Apple ProRes codec to use for
        this output.
    ProresFramerateControl:
      type: string
      enum:
      - INITIALIZE_FROM_SOURCE
      - SPECIFIED
      description: If you are using the console, use the Framerate setting to specify
        the frame rate for this output. If you want to keep the same frame rate as
        the input video, choose Follow source. If you want to do frame rate conversion,
        choose a frame rate from the dropdown list or choose Custom. The framerates
        shown in the dropdown list are decimal approximations of fractions. If you
        choose Custom, specify your frame rate as a fraction.
    ProresFramerateConversionAlgorithm:
      type: string
      enum:
      - DUPLICATE_DROP
      - INTERPOLATE
      - FRAMEFORMER
      - MAINTAIN_FRAME_COUNT
      description: 'Choose the method that you want MediaConvert to use when increasing
        or decreasing your video''s frame rate. For numerically simple conversions,
        such as 60 fps to 30 fps: We recommend that you keep the default value, Drop
        duplicate. For numerically complex conversions, to avoid stutter: Choose Interpolate.
        This results in a smooth picture, but might introduce undesirable video artifacts.
        For complex frame rate conversions, especially if your source video has already
        been converted from its original cadence: Choose FrameFormer to do motion-compensated
        interpolation. FrameFormer uses the best conversion method frame by frame.
        Note that using FrameFormer increases the transcoding time and incurs a significant
        add-on cost. When you choose FrameFormer, your input video resolution must
        be at least 128x96. To create an output with the same number of frames as
        your input: Choose Maintain frame count. When you do, MediaConvert will not
        drop, interpolate, add, or otherwise change the frame count from your input
        to your output. Note that since the frame count is maintained, the duration
        of your output will become shorter at higher frame rates and longer at lower
        frame rates.'
    ProresInterlaceMode:
      type: string
      enum:
      - PROGRESSIVE
      - TOP_FIELD
      - BOTTOM_FIELD
      - FOLLOW_TOP_FIELD
      - FOLLOW_BOTTOM_FIELD
      description: Choose the scan line type for the output. Keep the default value,
        Progressive to create a progressive output, regardless of the scan type of
        your input. Use Top field first or Bottom field first to create an output
        that's interlaced with the same field polarity throughout. Use Follow, default
        top or Follow, default bottom to produce outputs with the same field polarity
        as the source. For jobs that have multiple inputs, the output field polarity
        might change over the course of the output. Follow behavior depends on the
        input scan type. If the source is interlaced, the output will be interlaced
        with the same polarity as the source. If the source is progressive, the output
        will be interlaced with top field bottom field first, depending on which of
        the Follow options you choose.
    ProresParControl:
      type: string
      enum:
      - INITIALIZE_FROM_SOURCE
      - SPECIFIED
      description: Optional. Specify how the service determines the pixel aspect ratio
        (PAR) for this output. The default behavior, Follow source, uses the PAR from
        your input video for your output. To specify a different PAR, choose any value
        other than Follow source. When you choose SPECIFIED for this setting, you
        must also specify values for the parNumerator and parDenominator settings.
    ProresScanTypeConversionMode:
      type: string
      enum:
      - INTERLACED
      - INTERLACED_OPTIMIZE
      description: 'Use this setting for interlaced outputs, when your output frame
        rate is half of your input frame rate. In this situation, choose Optimized
        interlacing to create a better quality interlaced output. In this case, each
        progressive frame from the input corresponds to an interlaced field in the
        output. Keep the default value, Basic interlacing, for all other output frame
        rates. With basic interlacing, MediaConvert performs any frame rate conversion
        first and then interlaces the frames. When you choose Optimized interlacing
        and you set your output frame rate to a value that isn''t suitable for optimized
        interlacing, MediaConvert automatically falls back to basic interlacing. Required
        settings: To use optimized interlacing, you must set Telecine to None or Soft.
        You can''t use optimized interlacing for hard telecine outputs. You must also
        set Interlace mode to a value other than Progressive.'
    ProresSlowPal:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: 'Ignore this setting unless your input frame rate is 23.976 or
        24 frames per second (fps). Enable slow PAL to create a 25 fps output. When
        you enable slow PAL, MediaConvert relabels the video frames to 25 fps and
        resamples your audio to keep it synchronized with the video. Note that enabling
        this setting will slightly reduce the duration of your video. Required settings:
        You must also set Framerate to 25.'
    ProresTelecine:
      type: string
      enum:
      - NONE
      - HARD
      description: When you do frame rate conversion from 23.976 frames per second
        (fps) to 29.97 fps, and your output scan type is interlaced, you can optionally
        enable hard telecine to create a smoother picture. When you keep the default
        value, None, MediaConvert does a standard frame rate conversion to 29.97 without
        doing anything with the field polarity to create a smoother picture.
    QueueListBy:
      type: string
      enum:
      - NAME
      - CREATION_DATE
      description: Optional. When you request a list of queues, you can choose to
        list them alphabetically by NAME or chronologically by CREATION_DATE. If you
        don't specify, the service will list them by creation date.
    QueueStatus:
      type: string
      enum:
      - ACTIVE
      - PAUSED
      description: Queues can be ACTIVE or PAUSED. If you pause a queue, jobs in that
        queue won't begin. Jobs that are running when you pause a queue continue to
        run until they finish or result in an error.
    RemoveRubyReserveAttributes:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: 'Optionally remove any tts:rubyReserve attributes present in your
        input, that do   not have a tts:ruby attribute in the same element, from your
        output. Use if your vertical Japanese output captions have alignment issues.
        To remove ruby reserve attributes when present: Choose Enabled. To not remove
        any ruby reserve attributes: Keep the default value, Disabled.'
    RenewalType:
      type: string
      enum:
      - AUTO_RENEW
      - EXPIRE
      description: Specifies whether the term of your reserved queue pricing plan
        is automatically extended (AUTO_RENEW) or expires (EXPIRE) at the end of the
        term.
    RequiredFlag:
      type: string
      enum:
      - ENABLED
      - DISABLED
      description: Set to ENABLED to force a rendition to be included.
    ReservationPlanStatus:
      type: string
      enum:
      - ACTIVE
      - EXPIRED
      description: Specifies whether the pricing plan for your reserved queue is ACTIVE
        or EXPIRED.
    RespondToAfd:
      type: string
      enum:
      - NONE
      - RESPOND
      - PASSTHROUGH
      description: Use Respond to AFD to specify how the service changes the video
        itself in response to AFD values in the input. * Choose Respond to clip the
        input video frame according to the AFD value, input display aspect ratio,
        and output display aspect ratio. * Choose Passthrough to include the input
        AFD values. Do not choose this when AfdSignaling is set to NONE. A preferred
        implementation of this workflow is to set RespondToAfd to and set AfdSignaling
        to AUTO. * Choose None to remove all input AFD values from this output.
    RuleType:
      type: string
      enum:
      - MIN_TOP_RENDITION_SIZE
      - MIN_BOTTOM_RENDITION_SIZE
      - FORCE_INCLUDE_RENDITIONS
      - ALLOWED_RENDITIONS
      description: 'Use Min top rendition size to specify a minimum size for the highest
        resolution in your ABR stack. * The highest resolution in your ABR stack will
        be equal to or greater than the value that you enter. For example: If you
        specify 1280x720 the highest resolution in your ABR stack will be equal to
        or greater than 1280x720. * If you specify a value for Max resolution, the
        value that you specify for Min top rendition size must be less than, or equal
        to, Max resolution. Use Min bottom rendition size to specify a minimum size
        for the lowest resolution in your ABR stack. * The lowest resolution in your
        ABR stack will be equal to or greater than the value that you enter. For example:
        If you specify 640x360 the lowest resolution in your ABR stack will be equal
        to or greater than to 640x360. * If you specify a Min top rendition size rule,
        the value that you specify for Min bottom rendition size must be less than,
        or equal to, Min top rendition size. Use Force include renditions to specify
        one or more resolutions to include your ABR stack. * (Recommended) To optimize
        automated ABR, specify as few resolutions as possible. * (Required) The number
        of resolutions that you specify must be equal to, or less than, the Max renditions
        setting. * If you specify a Min top rendition size rule, specify at least
        one resolution that is equal to, or greater than, Min top rendition size.
        * If you specify a Min bottom rendition size rule, only specify resolutions
        that are equal to, or greater than, Min bottom rendition size. * If you specify
        a Force include renditions rule, do not specify a separate rule for Allowed
        renditions. * Note: The ABR stack may include other resolutions that you do
        not specify here, depending on the Max renditions setting. Use Allowed renditions
        to specify a list of possible resolutions in your ABR stack. * (Required)
        The number of resolutions that you specify must be equal to, or greater than,
        the Max renditions setting. * MediaConvert will create an ABR stack exclusively
        from the list of resolutions that you specify. * Some resolutions in the Allowed
        renditions list may not be included, however you can force a resolution to
        be included by setting Required to ENABLED. * You must specify at least one
        resolution that is greater than or equal to any resolutions that you specify
        in Min top rendition size or Min bottom rendition size. * If you specify Allowed
        renditions, you must not specify a separate rule for Force include renditions.'
    S3ObjectCannedAcl:
      type: string
      enum:
      - PUBLIC_READ
      - AUTHENTICATED_READ
      - BUCKET_OWNER_READ
      - BUCKET_OWNER_FULL_CONTROL
      description: Choose an Amazon S3 canned ACL for MediaConvert to apply to this
        output.
    S3ServerSideEncryptionType:
      type: string
      enum:
      - SERVER_SIDE_ENCRYPTION_S3
      - SERVER_SIDE_ENCRYPTION_KMS
      description: Specify how you want your data keys managed. AWS uses data keys
        to encrypt your content. AWS also encrypts the data keys themselves, using
        a customer master key (CMK), and then stores the encrypted data keys alongside
        your encrypted content. Use this setting to specify which AWS service manages
        the CMK. For simplest set up, choose Amazon S3. If you want your master key
        to be managed by AWS Key Management Service (KMS), choose AWS KMS. By default,
        when you choose AWS KMS, KMS uses the AWS managed customer master key (CMK)
        associated with Amazon S3 to encrypt your data keys. You can optionally choose
        to specify a different, customer managed CMK. Do so by specifying the Amazon
        Resource Name (ARN) of the key for the setting KMS ARN.
    S3StorageClass:
      type: string
      enum:
      - STANDARD
      - REDUCED_REDUNDANCY
      - STANDARD_IA
      - ONEZONE_IA
      - INTELLIGENT_TIERING
      - GLACIER
      - DEEP_ARCHIVE
      description: 'Specify the S3 storage class to use for this output. To use your
        destination''s default storage class: Keep the default value, Not set. For
        more information about S3 storage classes, see https://docs.aws.amazon.com/AmazonS3/latest/userguide/storage-class-intro.html'
    SampleRangeConversion:
      type: string
      enum:
      - LIMITED_RANGE_SQUEEZE
      - NONE
      - LIMITED_RANGE_CLIP
      description: 'Specify how MediaConvert limits the color sample range for this
        output. To create a limited range output from a full range input: Choose Limited
        range squeeze. For full range inputs, MediaConvert performs a linear offset
        to color samples equally across all pixels and frames. Color samples in 10-bit
        outputs are limited to 64 through 940, and 8-bit outputs are limited to 16
        through 235. Note: For limited range inputs, values for color samples are
        passed through to your output unchanged. MediaConvert does not limit the sample
        range. To correct pixels in your input that are out of range or out of gamut:
        Choose Limited range clip. Use for broadcast applications. MediaConvert conforms
        any pixels outside of the values that you specify under Minimum YUV and Maximum
        YUV to limited range bounds. MediaConvert also corrects any YUV values that,
        when converted to RGB, would be outside the bounds you specify under Minimum
        RGB tolerance and Maximum RGB tolerance. With either limited range conversion,
        MediaConvert writes the sample range metadata in the output.'
    ScalingBehavior:
      type: string
      enum:
      - DEFAULT
      - STRETCH_TO_OUTPUT
      - FIT
      - FIT_NO_UPSCALE
      - FILL
      description: Specify the video Scaling behavior when your output has a different
        resolution than your input. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/video-scaling.html
    SccDestinationFramerate:
      type: string
      enum:
      - FRAMERATE_23_97
      - FRAMERATE_24
      - FRAMERATE_25
      - FRAMERATE_29_97_DROPFRAME
      - FRAMERATE_29_97_NON_DROPFRAME
      description: Set Framerate to make sure that the captions and the video are
        synchronized in the output. Specify a frame rate that matches the frame rate
        of the associated video. If the video frame rate is 29.97, choose 29.97 dropframe
        only if the video has video_insertion=true and drop_frame_timecode=true; otherwise,
        choose 29.97 non-dropframe.
    SimulateReservedQueue:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: Enable this setting when you run a test job to estimate how many
        reserved transcoding slots (RTS) you need. When this is enabled, MediaConvert
        runs your job from an on-demand queue with similar performance to what you
        will see with one RTS in a reserved queue. This setting is disabled by default.
    SrtStylePassthrough:
      type: string
      enum:
      - ENABLED
      - DISABLED
      description: Set Style passthrough to ENABLED to use the available style, color,
        and position information from your input captions. MediaConvert uses default
        settings for any missing style and position information in your input captions.
        Set Style passthrough to DISABLED, or leave blank, to ignore the style and
        position information from your input captions and use simplified output captions.
    StatusUpdateInterval:
      type: string
      enum:
      - SECONDS_10
      - SECONDS_12
      - SECONDS_15
      - SECONDS_20
      - SECONDS_30
      - SECONDS_60
      - SECONDS_120
      - SECONDS_180
      - SECONDS_240
      - SECONDS_300
      - SECONDS_360
      - SECONDS_420
      - SECONDS_480
      - SECONDS_540
      - SECONDS_600
      description: Specify how often MediaConvert sends STATUS_UPDATE events to Amazon
        CloudWatch Events. Set the interval, in seconds, between status updates. MediaConvert
        sends an update at this interval from the time the service begins processing
        your job to the time it completes the transcode or encounters an error.
    TeletextPageType:
      type: string
      enum:
      - PAGE_TYPE_INITIAL
      - PAGE_TYPE_SUBTITLE
      - PAGE_TYPE_ADDL_INFO
      - PAGE_TYPE_PROGRAM_SCHEDULE
      - PAGE_TYPE_HEARING_IMPAIRED_SUBTITLE
      description: A page type as defined in the standard ETSI EN 300 468, Table 94
    TimecodeBurninPosition:
      type: string
      enum:
      - TOP_CENTER
      - TOP_LEFT
      - TOP_RIGHT
      - MIDDLE_LEFT
      - MIDDLE_CENTER
      - MIDDLE_RIGHT
      - BOTTOM_LEFT
      - BOTTOM_CENTER
      - BOTTOM_RIGHT
      description: Use Position under Timecode burn-in to specify the location the
        burned-in timecode on output video.
    TimecodeSource:
      type: string
      enum:
      - EMBEDDED
      - ZEROBASED
      - SPECIFIEDSTART
      description: Use Source to set how timecodes are handled within this job. To
        make sure that your video, audio, captions, and markers are synchronized and
        that time-based features, such as image inserter, work correctly, choose the
        Timecode source option that matches your assets. All timecodes are in a 24-hour
        format with frame number (HH:MM:SS:FF). * Embedded - Use the timecode that
        is in the input video. If no embedded timecode is in the source, the service
        will use Start at 0 instead. * Start at 0 - Set the timecode of the initial
        frame to 00:00:00:00. * Specified Start - Set the timecode of the initial
        frame to a value other than zero. You use Start timecode to provide this value.
    TimecodeTrack:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: 'To include a timecode track in your MP4 output: Choose Enabled.
        MediaConvert writes the timecode track in the Null Media Header box (NMHD),
        without any timecode text formatting information. You can also specify dropframe
        or non-dropframe timecode under the Drop Frame Timecode setting. To not include
        a timecode track: Keep the default value, Disabled.'
    TimedMetadata:
      type: string
      enum:
      - PASSTHROUGH
      - NONE
      description: 'Set ID3 metadata to Passthrough to include ID3 metadata in this
        output. This includes ID3 metadata from the following features: ID3 timestamp
        period, and Custom ID3 metadata inserter. To exclude this ID3 metadata in
        this output: set ID3 metadata to None or leave blank.'
    TrackType:
      type: string
      enum:
      - video
      - audio
      - data
    TransferCharacteristics:
      type: string
      enum:
      - ITU_709
      - UNSPECIFIED
      - RESERVED
      - ITU_470M
      - ITU_470BG
      - SMPTE_170M
      - SMPTE_240M
      - LINEAR
      - LOG10_2
      - LOC10_2_5
      - IEC_61966_2_4
      - ITU_1361
      - IEC_61966_2_1
      - ITU_2020_10bit
      - ITU_2020_12bit
      - SMPTE_2084
      - SMPTE_428_1
      - ARIB_B67
      - LAST
      description: The color space transfer characteristics of the video track.
    TsPtsOffset:
      type: string
      enum:
      - AUTO
      - SECONDS
      - MILLISECONDS
      description: 'Specify the initial presentation timestamp (PTS) offset for your
        transport stream output. To let MediaConvert automatically determine the initial
        PTS offset: Keep the default value, Auto. We recommend that you choose Auto
        for the widest player compatibility. The initial PTS will be at least two
        seconds and vary depending on your output''s bitrate, HRD buffer size and
        HRD buffer initial fill percentage. To manually specify an initial PTS offset:
        Choose Seconds or Milliseconds. Then specify the number of seconds or milliseconds
        with PTS offset.'
    TtmlStylePassthrough:
      type: string
      enum:
      - ENABLED
      - DISABLED
      description: Pass through style and position information from a TTML-like input
        source (TTML, IMSC, SMPTE-TT) to the TTML output.
    Type:
      type: string
      enum:
      - SYSTEM
      - CUSTOM
    UncompressedFourcc:
      type: string
      enum:
      - I420
      - I422
      - I444
      description: The four character code for the uncompressed video.
    UncompressedFramerateControl:
      type: string
      enum:
      - INITIALIZE_FROM_SOURCE
      - SPECIFIED
      description: Use the Framerate setting to specify the frame rate for this output.
        If you want to keep the same frame rate as the input video, choose Follow
        source. If you want to do frame rate conversion, choose a frame rate from
        the dropdown list or choose Custom. The framerates shown in the dropdown list
        are decimal approximations of fractions. If you choose Custom, specify your
        frame rate as a fraction.
    UncompressedFramerateConversionAlgorithm:
      type: string
      enum:
      - DUPLICATE_DROP
      - INTERPOLATE
      - FRAMEFORMER
      - MAINTAIN_FRAME_COUNT
      description: 'Choose the method that you want MediaConvert to use when increasing
        or decreasing your video''s frame rate. For numerically simple conversions,
        such as 60 fps to 30 fps: We recommend that you keep the default value, Drop
        duplicate. For numerically complex conversions, to avoid stutter: Choose Interpolate.
        This results in a smooth picture, but might introduce undesirable video artifacts.
        For complex frame rate conversions, especially if your source video has already
        been converted from its original cadence: Choose FrameFormer to do motion-compensated
        interpolation. FrameFormer uses the best conversion method frame by frame.
        Note that using FrameFormer increases the transcoding time and incurs a significant
        add-on cost. When you choose FrameFormer, your input video resolution must
        be at least 128x96. To create an output with the same number of frames as
        your input: Choose Maintain frame count. When you do, MediaConvert will not
        drop, interpolate, add, or otherwise change the frame count from your input
        to your output. Note that since the frame count is maintained, the duration
        of your output will become shorter at higher frame rates and longer at lower
        frame rates.'
    UncompressedInterlaceMode:
      type: string
      enum:
      - INTERLACED
      - PROGRESSIVE
      description: Optional. Choose the scan line type for this output. If you don't
        specify a value, MediaConvert will create a progressive output.
    UncompressedScanTypeConversionMode:
      type: string
      enum:
      - INTERLACED
      - INTERLACED_OPTIMIZE
      description: 'Use this setting for interlaced outputs, when your output frame
        rate is half of your input frame rate. In this situation, choose Optimized
        interlacing to create a better quality interlaced output. In this case, each
        progressive frame from the input corresponds to an interlaced field in the
        output. Keep the default value, Basic interlacing, for all other output frame
        rates. With basic interlacing, MediaConvert performs any frame rate conversion
        first and then interlaces the frames. When you choose Optimized interlacing
        and you set your output frame rate to a value that isn''t suitable for optimized
        interlacing, MediaConvert automatically falls back to basic interlacing. Required
        settings: To use optimized interlacing, you must set Telecine to None or Soft.
        You can''t use optimized interlacing for hard telecine outputs. You must also
        set Interlace mode to a value other than Progressive.'
    UncompressedSlowPal:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: 'Ignore this setting unless your input frame rate is 23.976 or
        24 frames per second (fps). Enable slow PAL to create a 25 fps output by relabeling
        the video frames and resampling your audio. Note that enabling this setting
        will slightly reduce the duration of your video. Related settings: You must
        also set Framerate to 25.'
    UncompressedTelecine:
      type: string
      enum:
      - NONE
      - HARD
      description: When you do frame rate conversion from 23.976 frames per second
        (fps) to 29.97 fps, and your output scan type is interlaced, you can optionally
        enable hard telecine to create a smoother picture. When you keep the default
        value, None, MediaConvert does a standard frame rate conversion to 29.97 without
        doing anything with the field polarity to create a smoother picture.
    Vc3Class:
      type: string
      enum:
      - CLASS_145_8BIT
      - CLASS_220_8BIT
      - CLASS_220_10BIT
      description: Specify the VC3 class to choose the quality characteristics for
        this output. VC3 class, together with the settings Framerate (framerateNumerator
        and framerateDenominator) and Resolution (height and width), determine your
        output bitrate. For example, say that your video resolution is 1920x1080 and
        your framerate is 29.97. Then Class 145 gives you an output with a bitrate
        of approximately 145 Mbps and Class 220 gives you and output with a bitrate
        of approximately 220 Mbps. VC3 class also specifies the color bit depth of
        your output.
    Vc3FramerateControl:
      type: string
      enum:
      - INITIALIZE_FROM_SOURCE
      - SPECIFIED
      description: If you are using the console, use the Framerate setting to specify
        the frame rate for this output. If you want to keep the same frame rate as
        the input video, choose Follow source. If you want to do frame rate conversion,
        choose a frame rate from the dropdown list or choose Custom. The framerates
        shown in the dropdown list are decimal approximations of fractions. If you
        choose Custom, specify your frame rate as a fraction.
    Vc3FramerateConversionAlgorithm:
      type: string
      enum:
      - DUPLICATE_DROP
      - INTERPOLATE
      - FRAMEFORMER
      - MAINTAIN_FRAME_COUNT
      description: 'Choose the method that you want MediaConvert to use when increasing
        or decreasing your video''s frame rate. For numerically simple conversions,
        such as 60 fps to 30 fps: We recommend that you keep the default value, Drop
        duplicate. For numerically complex conversions, to avoid stutter: Choose Interpolate.
        This results in a smooth picture, but might introduce undesirable video artifacts.
        For complex frame rate conversions, especially if your source video has already
        been converted from its original cadence: Choose FrameFormer to do motion-compensated
        interpolation. FrameFormer uses the best conversion method frame by frame.
        Note that using FrameFormer increases the transcoding time and incurs a significant
        add-on cost. When you choose FrameFormer, your input video resolution must
        be at least 128x96. To create an output with the same number of frames as
        your input: Choose Maintain frame count. When you do, MediaConvert will not
        drop, interpolate, add, or otherwise change the frame count from your input
        to your output. Note that since the frame count is maintained, the duration
        of your output will become shorter at higher frame rates and longer at lower
        frame rates.'
    Vc3InterlaceMode:
      type: string
      enum:
      - INTERLACED
      - PROGRESSIVE
      description: Optional. Choose the scan line type for this output. If you don't
        specify a value, MediaConvert will create a progressive output.
    Vc3ScanTypeConversionMode:
      type: string
      enum:
      - INTERLACED
      - INTERLACED_OPTIMIZE
      description: 'Use this setting for interlaced outputs, when your output frame
        rate is half of your input frame rate. In this situation, choose Optimized
        interlacing to create a better quality interlaced output. In this case, each
        progressive frame from the input corresponds to an interlaced field in the
        output. Keep the default value, Basic interlacing, for all other output frame
        rates. With basic interlacing, MediaConvert performs any frame rate conversion
        first and then interlaces the frames. When you choose Optimized interlacing
        and you set your output frame rate to a value that isn''t suitable for optimized
        interlacing, MediaConvert automatically falls back to basic interlacing. Required
        settings: To use optimized interlacing, you must set Telecine to None or Soft.
        You can''t use optimized interlacing for hard telecine outputs. You must also
        set Interlace mode to a value other than Progressive.'
    Vc3SlowPal:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: 'Ignore this setting unless your input frame rate is 23.976 or
        24 frames per second (fps). Enable slow PAL to create a 25 fps output by relabeling
        the video frames and resampling your audio. Note that enabling this setting
        will slightly reduce the duration of your video. Related settings: You must
        also set Framerate to 25.'
    Vc3Telecine:
      type: string
      enum:
      - NONE
      - HARD
      description: When you do frame rate conversion from 23.976 frames per second
        (fps) to 29.97 fps, and your output scan type is interlaced, you can optionally
        enable hard telecine to create a smoother picture. When you keep the default
        value, None, MediaConvert does a standard frame rate conversion to 29.97 without
        doing anything with the field polarity to create a smoother picture.
    VchipAction:
      type: string
      enum:
      - PASSTHROUGH
      - STRIP
      description: The action to take on content advisory XDS packets. If you select
        PASSTHROUGH, packets will not be changed. If you select STRIP, any packets
        will be removed in output captions.
    VideoCodec:
      type: string
      enum:
      - AV1
      - AVC_INTRA
      - FRAME_CAPTURE
      - GIF
      - H_264
      - H_265
      - MPEG2
      - PASSTHROUGH
      - PRORES
      - UNCOMPRESSED
      - VC3
      - VP8
      - VP9
      - XAVC
      description: Type of video codec
    VideoOverlayPlayBackMode:
      type: string
      enum:
      - ONCE
      - REPEAT
      description: 'Specify whether your video overlay repeats or plays only once.
        To repeat your video overlay on a loop: Keep the default value, Repeat. Your
        overlay will repeat for the duration of the base input video. To playback
        your video overlay only once: Choose Once. With either option, you can end
        playback at a time that you specify by entering a value for End timecode.'
    VideoOverlayUnit:
      type: string
      enum:
      - PIXELS
      - PERCENTAGE
      description: Specify the Unit type to use when you enter a value for X position,
        Y position, Width, or Height. You can choose Pixels or Percentage. Leave blank
        to use the default value, Pixels.
    VideoTimecodeInsertion:
      type: string
      enum:
      - DISABLED
      - PIC_TIMING_SEI
      description: Applies only to H.264, H.265, MPEG2, and ProRes outputs. Only enable
        Timecode insertion when the input frame rate is identical to the output frame
        rate. To include timecodes in this output, set Timecode insertion to PIC_TIMING_SEI.
        To leave them out, set it to DISABLED. Default is DISABLED. When the service
        inserts timecodes in an output, by default, it uses any embedded timecodes
        from the input. If none are present, the service will set the timecode for
        the first output frame to zero. To change this default behavior, adjust the
        settings under Timecode configuration. In the console, these settings are
        located under Job > Job settings > Timecode configuration. Note - Timecode
        source under input settings does not affect the timecodes that are inserted
        in the output. Source under Job settings > Timecode configuration does.
    Vp8FramerateControl:
      type: string
      enum:
      - INITIALIZE_FROM_SOURCE
      - SPECIFIED
      description: If you are using the console, use the Framerate setting to specify
        the frame rate for this output. If you want to keep the same frame rate as
        the input video, choose Follow source. If you want to do frame rate conversion,
        choose a frame rate from the dropdown list or choose Custom. The framerates
        shown in the dropdown list are decimal approximations of fractions. If you
        choose Custom, specify your frame rate as a fraction.
    Vp8FramerateConversionAlgorithm:
      type: string
      enum:
      - DUPLICATE_DROP
      - INTERPOLATE
      - FRAMEFORMER
      - MAINTAIN_FRAME_COUNT
      description: 'Choose the method that you want MediaConvert to use when increasing
        or decreasing your video''s frame rate. For numerically simple conversions,
        such as 60 fps to 30 fps: We recommend that you keep the default value, Drop
        duplicate. For numerically complex conversions, to avoid stutter: Choose Interpolate.
        This results in a smooth picture, but might introduce undesirable video artifacts.
        For complex frame rate conversions, especially if your source video has already
        been converted from its original cadence: Choose FrameFormer to do motion-compensated
        interpolation. FrameFormer uses the best conversion method frame by frame.
        Note that using FrameFormer increases the transcoding time and incurs a significant
        add-on cost. When you choose FrameFormer, your input video resolution must
        be at least 128x96. To create an output with the same number of frames as
        your input: Choose Maintain frame count. When you do, MediaConvert will not
        drop, interpolate, add, or otherwise change the frame count from your input
        to your output. Note that since the frame count is maintained, the duration
        of your output will become shorter at higher frame rates and longer at lower
        frame rates.'
    Vp8ParControl:
      type: string
      enum:
      - INITIALIZE_FROM_SOURCE
      - SPECIFIED
      description: Optional. Specify how the service determines the pixel aspect ratio
        (PAR) for this output. The default behavior, Follow source, uses the PAR from
        your input video for your output. To specify a different PAR in the console,
        choose any value other than Follow source. When you choose SPECIFIED for this
        setting, you must also specify values for the parNumerator and parDenominator
        settings.
    Vp8QualityTuningLevel:
      type: string
      enum:
      - MULTI_PASS
      - MULTI_PASS_HQ
      description: Optional. Use Quality tuning level to choose how you want to trade
        off encoding speed for output video quality. The default behavior is faster,
        lower quality, multi-pass encoding.
    Vp8RateControlMode:
      type: string
      enum:
      - VBR
      description: With the VP8 codec, you can use only the variable bitrate (VBR)
        rate control mode.
    Vp9FramerateControl:
      type: string
      enum:
      - INITIALIZE_FROM_SOURCE
      - SPECIFIED
      description: If you are using the console, use the Framerate setting to specify
        the frame rate for this output. If you want to keep the same frame rate as
        the input video, choose Follow source. If you want to do frame rate conversion,
        choose a frame rate from the dropdown list or choose Custom. The framerates
        shown in the dropdown list are decimal approximations of fractions. If you
        choose Custom, specify your frame rate as a fraction.
    Vp9FramerateConversionAlgorithm:
      type: string
      enum:
      - DUPLICATE_DROP
      - INTERPOLATE
      - FRAMEFORMER
      - MAINTAIN_FRAME_COUNT
      description: 'Choose the method that you want MediaConvert to use when increasing
        or decreasing your video''s frame rate. For numerically simple conversions,
        such as 60 fps to 30 fps: We recommend that you keep the default value, Drop
        duplicate. For numerically complex conversions, to avoid stutter: Choose Interpolate.
        This results in a smooth picture, but might introduce undesirable video artifacts.
        For complex frame rate conversions, especially if your source video has already
        been converted from its original cadence: Choose FrameFormer to do motion-compensated
        interpolation. FrameFormer uses the best conversion method frame by frame.
        Note that using FrameFormer increases the transcoding time and incurs a significant
        add-on cost. When you choose FrameFormer, your input video resolution must
        be at least 128x96. To create an output with the same number of frames as
        your input: Choose Maintain frame count. When you do, MediaConvert will not
        drop, interpolate, add, or otherwise change the frame count from your input
        to your output. Note that since the frame count is maintained, the duration
        of your output will become shorter at higher frame rates and longer at lower
        frame rates.'
    Vp9ParControl:
      type: string
      enum:
      - INITIALIZE_FROM_SOURCE
      - SPECIFIED
      description: Optional. Specify how the service determines the pixel aspect ratio
        (PAR) for this output. The default behavior, Follow source, uses the PAR from
        your input video for your output. To specify a different PAR in the console,
        choose any value other than Follow source. When you choose SPECIFIED for this
        setting, you must also specify values for the parNumerator and parDenominator
        settings.
    Vp9QualityTuningLevel:
      type: string
      enum:
      - MULTI_PASS
      - MULTI_PASS_HQ
      description: Optional. Use Quality tuning level to choose how you want to trade
        off encoding speed for output video quality. The default behavior is faster,
        lower quality, multi-pass encoding.
    Vp9RateControlMode:
      type: string
      enum:
      - VBR
      description: With the VP9 codec, you can use only the variable bitrate (VBR)
        rate control mode.
    WatermarkingStrength:
      type: string
      enum:
      - LIGHTEST
      - LIGHTER
      - DEFAULT
      - STRONGER
      - STRONGEST
      description: Optional. Ignore this setting unless Nagra support directs you
        to specify a value. When you don't specify a value here, the Nagra NexGuard
        library uses its default value.
    WavFormat:
      type: string
      enum:
      - RIFF
      - RF64
      - EXTENSIBLE
      description: 'Specify the file format for your wave audio output. To use a RIFF
        wave format: Keep the default value, RIFF. If your output audio is likely
        to exceed 4GB in file size, or if you otherwise need the extended support
        of the RF64 format: Choose RF64. If your player only supports the extensible
        wave format: Choose Extensible.'
    WebvttAccessibilitySubs:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: 'If the WebVTT captions track is intended to provide accessibility
        for people who are deaf or hard of hearing: Set Accessibility subtitles to
        Enabled. When you do, MediaConvert adds accessibility attributes to your output
        HLS or DASH manifest. For HLS manifests, MediaConvert adds the following accessibility
        attributes under EXT-X-MEDIA for this track: CHARACTERISTICS="public.accessibility.describes-spoken-dialog,public.accessibility.describes-music-and-sound"
        and AUTOSELECT="YES". For DASH manifests, MediaConvert adds the following
        in the adaptation set for this track: <Accessibility schemeIdUri="urn:mpeg:dash:role:2011"
        value="caption"/>. If the captions track is not intended to provide such accessibility:
        Keep the default value, Disabled. When you do, for DASH manifests, MediaConvert
        instead adds the following in the adaptation set for this track: <Role schemeIDUri="urn:mpeg:dash:role:2011"
        value="subtitle"/>.'
    WebvttStylePassthrough:
      type: string
      enum:
      - ENABLED
      - DISABLED
      - STRICT
      - MERGE
      description: 'Specify how MediaConvert writes style information in your output
        WebVTT captions. To use the available style, color, and position information
        from your input captions: Choose Enabled. MediaConvert uses default settings
        when style and position information is missing from your input captions. To
        recreate the input captions exactly: Choose Strict. MediaConvert automatically
        applies timing adjustments, including adjustments for frame rate conversion,
        ad avails, and input clipping. Your input captions format must be WebVTT.
        To ignore the style and position information from your input captions and
        use simplified output captions: Keep the default value, Disabled. Or leave
        blank. To use the available style, color, and position information from your
        input captions, while merging cues with identical time ranges: Choose merge.
        This setting can help prevent positioning overlaps for certain players that
        expect a single single cue for any given time range.'
    Xavc4kIntraCbgProfileClass:
      type: string
      enum:
      - CLASS_100
      - CLASS_300
      - CLASS_480
      description: Specify the XAVC Intra 4k (CBG) Class to set the bitrate of your
        output. Outputs of the same class have similar image quality over the operating
        points that are valid for that class.
    Xavc4kIntraVbrProfileClass:
      type: string
      enum:
      - CLASS_100
      - CLASS_300
      - CLASS_480
      description: Specify the XAVC Intra 4k (VBR) Class to set the bitrate of your
        output. Outputs of the same class have similar image quality over the operating
        points that are valid for that class.
    Xavc4kProfileBitrateClass:
      type: string
      enum:
      - BITRATE_CLASS_100
      - BITRATE_CLASS_140
      - BITRATE_CLASS_200
      description: Specify the XAVC 4k (Long GOP) Bitrate Class to set the bitrate
        of your output. Outputs of the same class have similar image quality over
        the operating points that are valid for that class.
    Xavc4kProfileCodecProfile:
      type: string
      enum:
      - HIGH
      - HIGH_422
      description: Specify the codec profile for this output. Choose High, 8-bit,
        4:2:0 (HIGH) or High, 10-bit, 4:2:2 (HIGH_422). These profiles are specified
        in ITU-T H.264.
    Xavc4kProfileQualityTuningLevel:
      type: string
      enum:
      - SINGLE_PASS
      - SINGLE_PASS_HQ
      - MULTI_PASS_HQ
      description: Optional. Use Quality tuning level to choose how you want to trade
        off encoding speed for output video quality. The default behavior is faster,
        lower quality, single-pass encoding.
    XavcAdaptiveQuantization:
      type: string
      enum:
      - 'OFF'
      - AUTO
      - LOW
      - MEDIUM
      - HIGH
      - HIGHER
      - MAX
      description: 'Keep the default value, Auto, for this setting to have MediaConvert
        automatically apply the best types of quantization for your video content.
        When you want to apply your quantization settings manually, you must set Adaptive
        quantization to a value other than Auto. Use this setting to specify the strength
        of any adaptive quantization filters that you enable. If you don''t want MediaConvert
        to do any adaptive quantization in this transcode, set Adaptive quantization
        to Off. Related settings: The value that you choose here applies to the following
        settings: Flicker adaptive quantization (flickerAdaptiveQuantization), Spatial
        adaptive quantization, and Temporal adaptive quantization.'
    XavcEntropyEncoding:
      type: string
      enum:
      - AUTO
      - CABAC
      - CAVLC
      description: Optional. Choose a specific entropy encoding mode only when you
        want to override XAVC recommendations. If you choose the value auto, MediaConvert
        uses the mode that the XAVC file format specifies given this output's operating
        point.
    XavcFlickerAdaptiveQuantization:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: 'The best way to set up adaptive quantization is to keep the default
        value, Auto, for the setting Adaptive quantization. When you do so, MediaConvert
        automatically applies the best types of quantization for your video content.
        Include this setting in your JSON job specification only when you choose to
        change the default value for Adaptive quantization. Enable this setting to
        have the encoder reduce I-frame pop. I-frame pop appears as a visual flicker
        that can arise when the encoder saves bits by copying some macroblocks many
        times from frame to frame, and then refreshes them at the I-frame. When you
        enable this setting, the encoder updates these macroblocks slightly more often
        to smooth out the flicker. This setting is disabled by default. Related setting:
        In addition to enabling this setting, you must also set Adaptive quantization
        to a value other than Off or Auto. Use Adaptive quantization to adjust the
        degree of smoothing that Flicker adaptive quantization provides.'
    XavcFramerateControl:
      type: string
      enum:
      - INITIALIZE_FROM_SOURCE
      - SPECIFIED
      description: If you are using the console, use the Frame rate setting to specify
        the frame rate for this output. If you want to keep the same frame rate as
        the input video, choose Follow source. If you want to do frame rate conversion,
        choose a frame rate from the dropdown list. The framerates shown in the dropdown
        list are decimal approximations of fractions.
    XavcFramerateConversionAlgorithm:
      type: string
      enum:
      - DUPLICATE_DROP
      - INTERPOLATE
      - FRAMEFORMER
      - MAINTAIN_FRAME_COUNT
      description: 'Choose the method that you want MediaConvert to use when increasing
        or decreasing your video''s frame rate. For numerically simple conversions,
        such as 60 fps to 30 fps: We recommend that you keep the default value, Drop
        duplicate. For numerically complex conversions, to avoid stutter: Choose Interpolate.
        This results in a smooth picture, but might introduce undesirable video artifacts.
        For complex frame rate conversions, especially if your source video has already
        been converted from its original cadence: Choose FrameFormer to do motion-compensated
        interpolation. FrameFormer uses the best conversion method frame by frame.
        Note that using FrameFormer increases the transcoding time and incurs a significant
        add-on cost. When you choose FrameFormer, your input video resolution must
        be at least 128x96. To create an output with the same number of frames as
        your input: Choose Maintain frame count. When you do, MediaConvert will not
        drop, interpolate, add, or otherwise change the frame count from your input
        to your output. Note that since the frame count is maintained, the duration
        of your output will become shorter at higher frame rates and longer at lower
        frame rates.'
    XavcGopBReference:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: Specify whether the encoder uses B-frames as reference frames for
        other pictures in the same GOP. Choose Allow to allow the encoder to use B-frames
        as reference frames. Choose Don't allow to prevent the encoder from using
        B-frames as reference frames.
    XavcHdIntraCbgProfileClass:
      type: string
      enum:
      - CLASS_50
      - CLASS_100
      - CLASS_200
      description: Specify the XAVC Intra HD (CBG) Class to set the bitrate of your
        output. Outputs of the same class have similar image quality over the operating
        points that are valid for that class.
    XavcHdProfileBitrateClass:
      type: string
      enum:
      - BITRATE_CLASS_25
      - BITRATE_CLASS_35
      - BITRATE_CLASS_50
      description: Specify the XAVC HD (Long GOP) Bitrate Class to set the bitrate
        of your output. Outputs of the same class have similar image quality over
        the operating points that are valid for that class.
    XavcHdProfileQualityTuningLevel:
      type: string
      enum:
      - SINGLE_PASS
      - SINGLE_PASS_HQ
      - MULTI_PASS_HQ
      description: Optional. Use Quality tuning level to choose how you want to trade
        off encoding speed for output video quality. The default behavior is faster,
        lower quality, single-pass encoding.
    XavcHdProfileTelecine:
      type: string
      enum:
      - NONE
      - HARD
      description: Ignore this setting unless you set Frame rate (framerateNumerator
        divided by framerateDenominator) to 29.970. If your input framerate is 23.976,
        choose Hard. Otherwise, keep the default value None. For more information,
        see https://docs.aws.amazon.com/mediaconvert/latest/ug/working-with-telecine-and-inverse-telecine.html.
    XavcInterlaceMode:
      type: string
      enum:
      - PROGRESSIVE
      - TOP_FIELD
      - BOTTOM_FIELD
      - FOLLOW_TOP_FIELD
      - FOLLOW_BOTTOM_FIELD
      description: Choose the scan line type for the output. Keep the default value,
        Progressive to create a progressive output, regardless of the scan type of
        your input. Use Top field first or Bottom field first to create an output
        that's interlaced with the same field polarity throughout. Use Follow, default
        top or Follow, default bottom to produce outputs with the same field polarity
        as the source. For jobs that have multiple inputs, the output field polarity
        might change over the course of the output. Follow behavior depends on the
        input scan type. If the source is interlaced, the output will be interlaced
        with the same polarity as the source. If the source is progressive, the output
        will be interlaced with top field bottom field first, depending on which of
        the Follow options you choose.
    XavcProfile:
      type: string
      enum:
      - XAVC_HD_INTRA_CBG
      - XAVC_4K_INTRA_CBG
      - XAVC_4K_INTRA_VBR
      - XAVC_HD
      - XAVC_4K
      description: Specify the XAVC profile for this output. For more information,
        see the Sony documentation at https://www.xavc-info.org/. Note that MediaConvert
        doesn't support the interlaced video XAVC operating points for XAVC_HD_INTRA_CBG.
        To create an interlaced XAVC output, choose the profile XAVC_HD.
    XavcSlowPal:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: 'Ignore this setting unless your input frame rate is 23.976 or
        24 frames per second (fps). Enable slow PAL to create a 25 fps output by relabeling
        the video frames and resampling your audio. Note that enabling this setting
        will slightly reduce the duration of your video. Related settings: You must
        also set Frame rate to 25.'
    XavcSpatialAdaptiveQuantization:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: 'The best way to set up adaptive quantization is to keep the default
        value, Auto, for the setting Adaptive quantization. When you do so, MediaConvert
        automatically applies the best types of quantization for your video content.
        Include this setting in your JSON job specification only when you choose to
        change the default value for Adaptive quantization. For this setting, keep
        the default value, Enabled, to adjust quantization within each frame based
        on spatial variation of content complexity. When you enable this feature,
        the encoder uses fewer bits on areas that can sustain more distortion with
        no noticeable visual degradation and uses more bits on areas where any small
        distortion will be noticeable. For example, complex textured blocks are encoded
        with fewer bits and smooth textured blocks are encoded with more bits. Enabling
        this feature will almost always improve your video quality. Note, though,
        that this feature doesn''t take into account where the viewer''s attention
        is likely to be. If viewers are likely to be focusing their attention on a
        part of the screen with a lot of complex texture, you might choose to disable
        this feature. Related setting: When you enable spatial adaptive quantization,
        set the value for Adaptive quantization depending on your content. For homogeneous
        content, such as cartoons and video games, set it to Low. For content with
        a wider variety of textures, set it to High or Higher.'
    XavcTemporalAdaptiveQuantization:
      type: string
      enum:
      - DISABLED
      - ENABLED
      description: 'The best way to set up adaptive quantization is to keep the default
        value, Auto, for the setting Adaptive quantization. When you do so, MediaConvert
        automatically applies the best types of quantization for your video content.
        Include this setting in your JSON job specification only when you choose to
        change the default value for Adaptive quantization. For this setting, keep
        the default value, Enabled, to adjust quantization within each frame based
        on temporal variation of content complexity. When you enable this feature,
        the encoder uses fewer bits on areas of the frame that aren''t moving and
        uses more bits on complex objects with sharp edges that move a lot. For example,
        this feature improves the readability of text tickers on newscasts and scoreboards
        on sports matches. Enabling this feature will almost always improve your video
        quality. Note, though, that this feature doesn''t take into account where
        the viewer''s attention is likely to be. If viewers are likely to be focusing
        their attention on a part of the screen that doesn''t have moving objects
        with sharp edges, such as sports athletes'' faces, you might choose to disable
        this feature. Related setting: When you enable temporal adaptive quantization,
        adjust the strength of the filter with the setting Adaptive quantization.'
    __double:
      type: number
      format: double
    __doubleMin0:
      type: number
      format: double
    __doubleMin0Max1:
      type: number
      format: double
    __doubleMin0Max2147483647:
      type: number
      format: double
    __doubleMin1Max10:
      type: number
      format: double
    __doubleMinNegative59Max0:
      type: number
      format: double
    __doubleMinNegative60Max3:
      type: number
      format: double
    __doubleMinNegative60Max6:
      type: number
      format: double
    __doubleMinNegative60MaxNegative1:
      type: number
      format: double
    __doubleMinNegative6Max3:
      type: number
      format: double
    __doubleMinNegative8Max0:
      type: number
      format: double
    __integer:
      type: integer
    __integerMin0Max0:
      type: integer
      minimum: 0
      maximum: 0
    __integerMin0Max1:
      type: integer
      minimum: 0
      maximum: 1
    __integerMin0Max10:
      type: integer
      minimum: 0
      maximum: 10
    __integerMin0Max100:
      type: integer
      minimum: 0
      maximum: 100
    __integerMin0Max1000:
      type: integer
      minimum: 0
      maximum: 1000
    __integerMin0Max10000:
      type: integer
      minimum: 0
      maximum: 10000
    __integerMin0Max1152000000:
      type: integer
      minimum: 0
      maximum: 1152000000
    __integerMin0Max128:
      type: integer
      minimum: 0
      maximum: 128
    __integerMin0Max1466400000:
      type: integer
      minimum: 0
      maximum: 1466400000
    __integerMin0Max15:
      type: integer
      minimum: 0
      maximum: 15
    __integerMin0Max16:
      type: integer
      minimum: 0
      maximum: 16
    __integerMin0Max2147483647:
      type: integer
      minimum: 0
      maximum: 2147483647
    __integerMin0Max255:
      type: integer
      minimum: 0
      maximum: 255
    __integerMin0Max3:
      type: integer
      minimum: 0
      maximum: 3
    __integerMin0Max30:
      type: integer
      minimum: 0
      maximum: 30
    __integerMin0Max30000:
      type: integer
      minimum: 0
      maximum: 30000
    __integerMin0Max3600:
      type: integer
      minimum: 0
      maximum: 3600
    __integerMin0Max4:
      type: integer
      minimum: 0
      maximum: 4
    __integerMin0Max4000:
      type: integer
      minimum: 0
      maximum: 4000
    __integerMin0Max4194303:
      type: integer
      minimum: 0
      maximum: 4194303
    __integerMin0Max47185920:
      type: integer
      minimum: 0
      maximum: 47185920
    __integerMin0Max5:
      type: integer
      minimum: 0
      maximum: 5
    __integerMin0Max500:
      type: integer
      minimum: 0
      maximum: 500
    __integerMin0Max50000:
      type: integer
      minimum: 0
      maximum: 50000
    __integerMin0Max65534:
      type: integer
      minimum: 0
      maximum: 65534
    __integerMin0Max65535:
      type: integer
      minimum: 0
      maximum: 65535
    __integerMin0Max7:
      type: integer
      minimum: 0
      maximum: 7
    __integerMin0Max8:
      type: integer
      minimum: 0
      maximum: 8
    __integerMin0Max9:
      type: integer
      minimum: 0
      maximum: 9
    __integerMin0Max96:
      type: integer
      minimum: 0
      maximum: 96
    __integerMin0Max99:
      type: integer
      minimum: 0
      maximum: 99
    __integerMin100000Max100000000:
      type: integer
      minimum: 100000
      maximum: 100000000
    __integerMin1000Max1152000000:
      type: integer
      minimum: 1000
      maximum: 1152000000
    __integerMin1000Max1466400000:
      type: integer
      minimum: 1000
      maximum: 1466400000
    __integerMin1000Max288000000:
      type: integer
      minimum: 1000
      maximum: 288000000
    __integerMin1000Max30000:
      type: integer
      minimum: 1000
      maximum: 30000
    __integerMin1000Max300000000:
      type: integer
      minimum: 1000
      maximum: 300000000
    __integerMin1000Max480000000:
      type: integer
      minimum: 1000
      maximum: 480000000
    __integerMin100Max1000:
      type: integer
      minimum: 100
      maximum: 1000
    __integerMin10Max48:
      type: integer
      minimum: 10
      maximum: 48
    __integerMin16000Max320000:
      type: integer
      minimum: 16000
      maximum: 320000
    __integerMin16000Max48000:
      type: integer
      minimum: 16000
      maximum: 48000
    __integerMin16Max24:
      type: integer
      minimum: 16
      maximum: 24
    __integerMin1Max1:
      type: integer
      minimum: 1
      maximum: 1
    __integerMin1Max10:
      type: integer
      minimum: 1
      maximum: 10
    __integerMin1Max100:
      type: integer
      minimum: 1
      maximum: 100
    __integerMin1Max10000000:
      type: integer
      minimum: 1
      maximum: 10000000
    __integerMin1Max1001:
      type: integer
      minimum: 1
      maximum: 1001
    __integerMin1Max150:
      type: integer
      minimum: 1
      maximum: 150
    __integerMin1Max17895697:
      type: integer
      minimum: 1
      maximum: 17895697
    __integerMin1Max2:
      type: integer
      minimum: 1
      maximum: 2
    __integerMin1Max20:
      type: integer
      minimum: 1
      maximum: 20
    __integerMin1Max2048:
      type: integer
      minimum: 1
      maximum: 2048
    __integerMin1Max2147483640:
      type: integer
      minimum: 1
      maximum: 2147483640
    __integerMin1Max2147483647:
      type: integer
      minimum: 1
      maximum: 2147483647
    __integerMin1Max31:
      type: integer
      minimum: 1
      maximum: 31
    __integerMin1Max32:
      type: integer
      minimum: 1
      maximum: 32
    __integerMin1Max4:
      type: integer
      minimum: 1
      maximum: 4
    __integerMin1Max4096:
      type: integer
      minimum: 1
      maximum: 4096
    __integerMin1Max512:
      type: integer
      minimum: 1
      maximum: 512
    __integerMin1Max6:
      type: integer
      minimum: 1
      maximum: 6
    __integerMin1Max60000:
      type: integer
      minimum: 1
      maximum: 60000
    __integerMin1Max64:
      type: integer
      minimum: 1
      maximum: 64
    __integerMin1Max8:
      type: integer
      minimum: 1
      maximum: 8
    __integerMin22050Max48000:
      type: integer
      minimum: 22050
      maximum: 48000
    __integerMin24Max60000:
      type: integer
      minimum: 24
      maximum: 60000
    __integerMin25Max10000:
      type: integer
      minimum: 25
      maximum: 10000
    __integerMin25Max2000:
      type: integer
      minimum: 25
      maximum: 2000
    __integerMin2Max2147483647:
      type: integer
      minimum: 2
      maximum: 2147483647
    __integerMin2Max4096:
      type: integer
      minimum: 2
      maximum: 4096
    __integerMin32000Max192000:
      type: integer
      minimum: 32000
      maximum: 192000
    __integerMin32000Max3024000:
      type: integer
      minimum: 32000
      maximum: 3024000
    __integerMin32000Max384000:
      type: integer
      minimum: 32000
      maximum: 384000
    __integerMin32000Max48000:
      type: integer
      minimum: 32000
      maximum: 48000
    __integerMin32Max8182:
      type: integer
      minimum: 32
      maximum: 8182
    __integerMin32Max8192:
      type: integer
      minimum: 32
      maximum: 8192
    __integerMin384000Max1024000:
      type: integer
      minimum: 384000
      maximum: 1024000
    __integerMin3Max15:
      type: integer
      minimum: 3
      maximum: 15
    __integerMin48000Max48000:
      type: integer
      minimum: 48000
      maximum: 48000
    __integerMin4Max12:
      type: integer
      minimum: 4
      maximum: 12
    __integerMin50Max86400000:
      type: integer
      minimum: 50
      maximum: 86400000
    __integerMin6000Max1024000:
      type: integer
      minimum: 6000
      maximum: 1024000
    __integerMin64000Max640000:
      type: integer
      minimum: 64000
      maximum: 640000
    __integerMin8000Max192000:
      type: integer
      minimum: 8000
      maximum: 192000
    __integerMin8000Max96000:
      type: integer
      minimum: 8000
      maximum: 96000
    __integerMin8Max12:
      type: integer
      minimum: 8
      maximum: 12
    __integerMin8Max4096:
      type: integer
      minimum: 8
      maximum: 4096
    __integerMin90Max105:
      type: integer
      minimum: 90
      maximum: 105
    __integerMin920Max1023:
      type: integer
      minimum: 920
      maximum: 1023
    __integerMin96Max600:
      type: integer
      minimum: 96
      maximum: 600
    __integerMinNegative10000Max10000:
      type: integer
      minimum: -10000
      maximum: 10000
    __integerMinNegative1000Max1000:
      type: integer
      minimum: -1000
      maximum: 1000
    __integerMinNegative180Max180:
      type: integer
      minimum: -180
      maximum: 180
    __integerMinNegative1Max10:
      type: integer
      minimum: -1
      maximum: 10
    __integerMinNegative1Max2147483647:
      type: integer
      minimum: -1
      maximum: 2147483647
    __integerMinNegative1Max3:
      type: integer
      minimum: -1
      maximum: 3
    __integerMinNegative2147483648Max2147483647:
      type: integer
      minimum: -2147483648
      maximum: 2147483647
    __integerMinNegative2Max3:
      type: integer
      minimum: -2
      maximum: 3
    __integerMinNegative50Max50:
      type: integer
      minimum: -50
      maximum: 50
    __integerMinNegative5Max10:
      type: integer
      minimum: -5
      maximum: 10
    __integerMinNegative60Max6:
      type: integer
      minimum: -60
      maximum: 6
    __integerMinNegative70Max0:
      type: integer
      minimum: -70
      maximum: 0
    __listOfAllowedRenditionSize:
      type: array
      items:
        $ref: '#/components/schemas/AllowedRenditionSize'
    __listOfAudioChannelTag:
      type: array
      items:
        $ref: '#/components/schemas/AudioChannelTag'
    __listOfAudioDescription:
      type: array
      items:
        $ref: '#/components/schemas/AudioDescription'
    __listOfAutomatedAbrRule:
      type: array
      items:
        $ref: '#/components/schemas/AutomatedAbrRule'
    __listOfCaptionDescription:
      type: array
      items:
        $ref: '#/components/schemas/CaptionDescription'
    __listOfCaptionDescriptionPreset:
      type: array
      items:
        $ref: '#/components/schemas/CaptionDescriptionPreset'
    __listOfCmafAdditionalManifest:
      type: array
      items:
        $ref: '#/components/schemas/CmafAdditionalManifest'
    __listOfColorConversion3DLUTSetting:
      type: array
      items:
        $ref: '#/components/schemas/ColorConversion3DLUTSetting'
    __listOfDashAdditionalManifest:
      type: array
      items:
        $ref: '#/components/schemas/DashAdditionalManifest'
    __listOfEndpoint:
      type: array
      items:
        $ref: '#/components/schemas/Endpoint'
    __listOfForceIncludeRenditionSize:
      type: array
      items:
        $ref: '#/components/schemas/ForceIncludeRenditionSize'
    __listOfHlsAdMarkers:
      type: array
      items:
        $ref: '#/components/schemas/HlsAdMarkers'
    __listOfHlsAdditionalManifest:
      type: array
      items:
        $ref: '#/components/schemas/HlsAdditionalManifest'
    __listOfHlsCaptionLanguageMapping:
      type: array
      items:
        $ref: '#/components/schemas/HlsCaptionLanguageMapping'
    __listOfHopDestination:
      type: array
      items:
        $ref: '#/components/schemas/HopDestination'
    __listOfId3Insertion:
      type: array
      items:
        $ref: '#/components/schemas/Id3Insertion'
    __listOfInput:
      type: array
      items:
        $ref: '#/components/schemas/Input'
    __listOfInputClipping:
      type: array
      items:
        $ref: '#/components/schemas/InputClipping'
    __listOfInputTemplate:
      type: array
      items:
        $ref: '#/components/schemas/InputTemplate'
    __listOfInsertableImage:
      type: array
      items:
        $ref: '#/components/schemas/InsertableImage'
    __listOfJob:
      type: array
      items:
        $ref: '#/components/schemas/Job'
    __listOfJobEngineVersion:
      type: array
      items:
        $ref: '#/components/schemas/JobEngineVersion'
    __listOfJobTemplate:
      type: array
      items:
        $ref: '#/components/schemas/JobTemplate'
    __listOfMsSmoothAdditionalManifest:
      type: array
      items:
        $ref: '#/components/schemas/MsSmoothAdditionalManifest'
    __listOfOutput:
      type: array
      items:
        $ref: '#/components/schemas/Output'
    __listOfOutputChannelMapping:
      type: array
      items:
        $ref: '#/components/schemas/OutputChannelMapping'
    __listOfOutputDetail:
      type: array
      items:
        $ref: '#/components/schemas/OutputDetail'
    __listOfOutputGroup:
      type: array
      items:
        $ref: '#/components/schemas/OutputGroup'
    __listOfOutputGroupDetail:
      type: array
      items:
        $ref: '#/components/schemas/OutputGroupDetail'
    __listOfPreset:
      type: array
      items:
        $ref: '#/components/schemas/Preset'
    __listOfProbeInputFile:
      type: array
      items:
        $ref: '#/components/schemas/ProbeInputFile'
    __listOfProbeResult:
      type: array
      items:
        $ref: '#/components/schemas/ProbeResult'
    __listOfQueue:
      type: array
      items:
        $ref: '#/components/schemas/Queue'
    __listOfQueueTransition:
      type: array
      items:
        $ref: '#/components/schemas/QueueTransition'
    __listOfServiceOverride:
      type: array
      items:
        $ref: '#/components/schemas/ServiceOverride'
    __listOfTeletextPageType:
      type: array
      items:
        $ref: '#/components/schemas/TeletextPageType'
    __listOfTrack:
      type: array
      items:
        $ref: '#/components/schemas/Track'
    __listOfTrackMapping:
      type: array
      items:
        $ref: '#/components/schemas/TrackMapping'
    __listOfVideoOverlay:
      type: array
      items:
        $ref: '#/components/schemas/VideoOverlay'
    __listOfVideoOverlayInputClipping:
      type: array
      items:
        $ref: '#/components/schemas/VideoOverlayInputClipping'
    __listOfVideoOverlayTransition:
      type: array
      items:
        $ref: '#/components/schemas/VideoOverlayTransition'
    __listOfWarningGroup:
      type: array
      items:
        $ref: '#/components/schemas/WarningGroup'
    __listOf__doubleMinNegative60Max6:
      type: array
      items:
        $ref: '#/components/schemas/__doubleMinNegative60Max6'
    __listOf__integer:
      type: array
      items:
        $ref: '#/components/schemas/__integer'
    __listOf__integerMin1Max2147483647:
      type: array
      items:
        $ref: '#/components/schemas/__integerMin1Max2147483647'
    __listOf__integerMin32Max8182:
      type: array
      items:
        $ref: '#/components/schemas/__integerMin32Max8182'
    __listOf__integerMinNegative60Max6:
      type: array
      items:
        $ref: '#/components/schemas/__integerMinNegative60Max6'
    __listOf__string:
      type: array
      items:
        $ref: '#/components/schemas/__string'
    __listOf__stringMin1:
      type: array
      items:
        $ref: '#/components/schemas/__stringMin1'
    __listOf__stringMin36Max36Pattern09aFAF809aFAF409aFAF409aFAF409aFAF12:
      type: array
      items:
        $ref: '#/components/schemas/__stringMin36Max36Pattern09aFAF809aFAF409aFAF409aFAF409aFAF12'
    __listOf__stringPattern09aFAF809aFAF409aFAF409aFAF409aFAF12:
      type: array
      items:
        $ref: '#/components/schemas/__stringPattern09aFAF809aFAF409aFAF409aFAF409aFAF12'
    __listOf__stringPatternS3ASSETMAPXml:
      type: array
      items:
        $ref: '#/components/schemas/__stringPatternS3ASSETMAPXml'
    __long:
      type: integer
      format: int64
    __mapOfAudioSelector:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/AudioSelector'
    __mapOfAudioSelectorGroup:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/AudioSelectorGroup'
    __mapOfCaptionSelector:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/CaptionSelector'
    __mapOfDynamicAudioSelector:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/DynamicAudioSelector'
    __mapOf__string:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/__string'
    __string:
      type: string
    __stringMax1000:
      type: string
      minLength: 0
      maxLength: 1000
    __stringMax2048:
      type: string
      minLength: 0
      maxLength: 2048
    __stringMax2048PatternS3Https:
      type: string
      pattern: ^s3://([^\/]+\/+)+((([^\/]*)))|^https?://[^\/].*[^&]$
      minLength: 0
      maxLength: 2048
    __stringMax256:
      type: string
      minLength: 0
      maxLength: 256
    __stringMin0:
      type: string
      minLength: 0
    __stringMin1:
      type: string
      minLength: 1
    __stringMin11Max11Pattern01D20305D205D:
      type: string
      pattern: ^((([0-1]\d)|(2[0-3]))(:[0-5]\d){2}([:;][0-5]\d))$
      minLength: 11
      maxLength: 11
    __stringMin14PatternS3BmpBMPPngPNGHttpsBmpBMPPngPNG:
      type: string
      pattern: ^((s3://(.*?)\.(bmp|BMP|png|PNG))|(https?://(.*?)\.(bmp|BMP|png|PNG)(\?([^&=]+=[^&]+&)*[^&=]+=[^&]+)?))$
      minLength: 14
    __stringMin14PatternS3BmpBMPPngPNGTgaTGAHttpsBmpBMPPngPNGTgaTGA:
      type: string
      pattern: ^((s3://(.*?)\.(bmp|BMP|png|PNG|tga|TGA))|(https?://(.*?)\.(bmp|BMP|png|PNG|tga|TGA)(\?([^&=]+=[^&]+&)*[^&=]+=[^&]+)?))$
      minLength: 14
    __stringMin14PatternS3CubeCUBEHttpsCubeCUBE:
      type: string
      pattern: ^((s3://(.*?)\.(cube|CUBE))|(https?://(.*?)\.(cube|CUBE)(\?([^&=]+=[^&]+&)*[^&=]+=[^&]+)?))$
      minLength: 14
    __stringMin14PatternS3Mov09PngHttpsMov09Png:
      type: string
      pattern: ^((s3://(.*)(\.mov|[0-9]+\.png))|(https?://(.*)(\.mov|[0-9]+\.png)(\?([^&=]+=[^&]+&)*[^&=]+=[^&]+)?))$
      minLength: 14
    ? __stringMin14PatternS3SccSCCTtmlTTMLDfxpDFXPStlSTLSrtSRTXmlXMLSmiSMIVttVTTWebvttWEBVTTHttpsSccSCCTtmlTTMLDfxpDFXPStlSTLSrtSRTXmlXMLSmiSMIVttVTTWebvttWEBVTT
    : type: string
      pattern: ^((s3://(.*?)\.(scc|SCC|ttml|TTML|dfxp|DFXP|stl|STL|srt|SRT|xml|XML|smi|SMI|vtt|VTT|webvtt|WEBVTT))|(https?://(.*?)\.(scc|SCC|ttml|TTML|dfxp|DFXP|stl|STL|srt|SRT|xml|XML|smi|SMI|vtt|VTT|webvtt|WEBVTT)(\?([^&=]+=[^&]+&)*[^&=]+=[^&]+)?))$
      minLength: 14
    __stringMin14PatternS3XmlXMLHttpsXmlXML:
      type: string
      pattern: ^((s3://(.*?)\.(xml|XML))|(https?://(.*?)\.(xml|XML)(\?([^&=]+=[^&]+&)*[^&=]+=[^&]+)?))$
      minLength: 14
    __stringMin16Max24PatternAZaZ0922AZaZ0916:
      type: string
      pattern: ^[A-Za-z0-9+\/]{22}==$|^[A-Za-z0-9+\/]{16}$
      minLength: 16
      maxLength: 24
    __stringMin1Max100000:
      type: string
      minLength: 1
      maxLength: 100000
    __stringMin1Max20:
      type: string
      minLength: 1
      maxLength: 20
    __stringMin1Max2048PatternArnAZSecretsmanagerWD12SecretAZAZ09:
      type: string
      pattern: ^(arn:[a-z-]+:secretsmanager:[\w-]+:\d{12}:secret:)?[a-zA-Z0-9_\/_+=.@-]*$
      minLength: 1
      maxLength: 2048
    __stringMin1Max256:
      type: string
      minLength: 1
      maxLength: 256
    __stringMin1Max50:
      type: string
      minLength: 1
      maxLength: 50
    __stringMin1Max50PatternAZAZ09:
      type: string
      pattern: ^[a-zA-Z0-9_\/_+=.@-]*$
      minLength: 1
      maxLength: 50
    __stringMin24Max512PatternAZaZ0902:
      type: string
      pattern: ^[A-Za-z0-9+\/]+={0,2}$
      minLength: 24
      maxLength: 512
    __stringMin32Max32Pattern09aFAF32:
      type: string
      pattern: ^[0-9a-fA-F]{32}$
      minLength: 32
      maxLength: 32
    __stringMin36Max36Pattern09aFAF809aFAF409aFAF409aFAF409aFAF12:
      type: string
      pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
      minLength: 36
      maxLength: 36
    __stringMin3Max3Pattern1809aFAF09aEAE:
      type: string
      pattern: ^[1-8][0-9a-fA-F][0-9a-eA-E]$
      minLength: 3
      maxLength: 3
    __stringMin3Max3PatternAZaZ3:
      type: string
      pattern: ^[A-Za-z]{3}$
      minLength: 3
      maxLength: 3
    __stringMin6Max8Pattern09aFAF609aFAF2:
      type: string
      pattern: ^[0-9a-fA-F]{6}([0-9a-fA-F]{2})?$
      minLength: 6
      maxLength: 8
    __stringMin9Max19PatternAZ26EastWestCentralNorthSouthEastWest1912:
      type: string
      pattern: ^[a-z-]{2,6}-(east|west|central|((north|south)(east|west)?))-[1-9]{1,2}$
      minLength: 9
      maxLength: 19
    __stringPattern:
      type: string
      pattern: ^[ -~]+$
    __stringPattern010920405090509092:
      type: string
      pattern: ^([01][0-9]|2[0-4]):[0-5][0-9]:[0-5][0-9][:;][0-9]{2}$
    __stringPattern010920405090509092090909:
      type: string
      pattern: ^([01][0-9]|2[0-4]):[0-5][0-9]:[0-5][0-9][:;][0-9]{2}(@[0-9]+(\.[0-9]+)?(:[0-9]+)?)?$
    __stringPattern01D20305D205D:
      type: string
      pattern: ^((([0-1]\d)|(2[0-3]))(:[0-5]\d){2}([:;][0-5]\d))$
    __stringPattern0940191020191209301:
      type: string
      pattern: ^([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$
    __stringPattern09aFAF809aFAF409aFAF409aFAF409aFAF12:
      type: string
      pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
    __stringPattern0xAFaF0908190908:
      type: string
      pattern: ^(^0x[A-Fa-f0-9]{0,8}$|^[1-9][0-9]{0,8}$)$
    __stringPatternAZaZ0902:
      type: string
      pattern: ^[A-Za-z0-9+\/]+={0,2}$
    __stringPatternAZaZ0932:
      type: string
      pattern: ^[A-Za-z0-9]{32}$
    __stringPatternAZaZ23AZaZ:
      type: string
      pattern: ^[A-Za-z]{2,3}(-[A-Za-z-]+)?$
    __stringPatternAZaZ23AZaZ09:
      type: string
      pattern: ^[A-Za-z]{2,3}(-[A-Za-z0-9-]+)?$
    __stringPatternArnAwsUsGovAcm:
      type: string
      pattern: ^arn:aws(-us-gov)?:acm:$
    ? __stringPatternArnAwsUsGovCnKmsAZ26EastWestCentralNorthSouthEastWest1912D12KeyAFAF098AFAF094AFAF094AFAF094AFAF0912MrkAFAF0932
    : type: string
      pattern: ^arn:aws(-us-gov|-cn)?:kms:[a-z-]{2,6}-(east|west|central|((north|south)(east|west)?))-[1-9]{1,2}:\d{12}:key/([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}|mrk-[a-fA-F0-9]{32})$
    __stringPatternDD:
      type: string
      pattern: ^(\d+(\/\d+)*)$
    __stringPatternHttps:
      type: string
      pattern: ^https:\/\/$
    __stringPatternHttpsD:
      type: string
      pattern: ^https:\/\/[^:@\/]*(:\d*)?(\/.*)?$
    __stringPatternHttpsKantarmedia:
      type: string
      pattern: ^https:\/\/.*.kantarmedia.*$
    __stringPatternIdentityAZaZ26AZaZ09163:
      type: string
      pattern: ^(identity|[A-Za-z]{2,6}(\.[A-Za-z0-9-]{1,63})+)$
    __stringPatternS3:
      type: string
      pattern: ^s3:\/\/$
    __stringPatternS3ASSETMAPXml:
      type: string
      pattern: ^s3:\/\/.*\/(ASSETMAP.xml)?$
    __stringPatternS3Https:
      type: string
      pattern: ^s3://([^\/]+\/+)+((([^\/]*)))|^https?://[^\/].*[^&]$
    __stringPatternS3TtfHttpsTtf:
      type: string
      pattern: ^((s3://(.*?)\.(ttf))|(https?://(.*?)\.(ttf)(\?([^&=]+=[^&]+&)*[^&=]+=[^&]+)?))$
    __stringPatternSNManifestConfirmConditionNotificationNS:
      type: string
      pattern: ^\s*<(.|\n)*ManifestConfirmConditionNotification(.|\n)*>\s*$
    __stringPatternSNSignalProcessingNotificationNS:
      type: string
      pattern: ^\s*<(.|\n)*SignalProcessingNotification(.|\n)*>\s*$
    __stringPatternW:
      type: string
      pattern: ^[\w-]+$
    __stringPatternWS:
      type: string
      pattern: ^[\w\s]*$
    __timestampUnix:
      type: string
      format: date-time
