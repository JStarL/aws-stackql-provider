openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: cloudfront_keyvaluestore
  x-aws-serviceName: cloudfrontkeyvaluestore
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2022-07-26'
  title: Amazon CloudFront KeyValueStore
  description: |-
    Amazon CloudFront KeyValueStore Service to View and Update Data in a KVS Resource
servers:
- description: The Amazon CloudFront KeyValueStore regional endpoint
  url: https://cloudfront-keyvaluestore.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /key-value-stores/{KvsARN}/keys/{Key}:
    delete:
      operationId: DeleteKey
      description: |-
        Deletes the key value pair specified by the key.
      parameters:
      - name: KvsARN
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/KvsARN'
      - name: Key
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Key'
      - name: If-Match
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Etag'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Resource is not in expected state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            Limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '400':
          description: |-
            Validation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetKey
      description: |-
        Returns a key value pair.
      parameters:
      - name: KvsARN
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/KvsARN'
      - name: Key
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Key'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Resource is not in expected state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    put:
      operationId: PutKey
      description: |-
        Creates a new key value pair or replaces the value of an existing key.
      parameters:
      - name: Key
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Key'
      - name: KvsARN
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/KvsARN'
      - name: If-Match
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Etag'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Value:
                  $ref: '#/components/schemas/Value'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Resource is not in expected state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            Limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '400':
          description: |-
            Validation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /key-value-stores/{KvsARN}:
    get:
      operationId: DescribeKeyValueStore
      description: |-
        Returns metadata information about Key Value Store.
      parameters:
      - name: KvsARN
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/KvsARN'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Resource is not in expected state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /key-value-stores/{KvsARN}/keys:
    get:
      operationId: ListKeys
      description: |-
        Returns a list of key value pairs.
      parameters:
      - name: KvsARN
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/KvsARN'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Resource is not in expected state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            Validation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: UpdateKeys
      description: |-
        Puts or Deletes multiple key value pairs in a single, all-or-nothing operation.
      parameters:
      - name: KvsARN
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/KvsARN'
      - name: If-Match
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Etag'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Puts:
                  $ref: '#/components/schemas/PutKeyRequestsList'
                Deletes:
                  $ref: '#/components/schemas/DeleteKeyRequestsList'
      responses:
        '200': {}
        '403':
          description: |-
            Access denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Resource is not in expected state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            Limit exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '400':
          description: |-
            Validation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    AccessDeniedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: Access denied.
    ConflictException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: Resource is not in expected state.
    DeleteKeyRequest:
      type: object
      properties:
        KvsARN:
          allOf:
          - $ref: '#/components/schemas/KvsARN'
          description: The Amazon Resource Name (ARN) of the Key Value Store.
        Key:
          allOf:
          - $ref: '#/components/schemas/Key'
          description: The key to delete.
        IfMatch:
          allOf:
          - $ref: '#/components/schemas/Etag'
          description: The current version (ETag) of the Key Value Store that you
            are deleting keys from, which you can get using DescribeKeyValueStore.
      required:
      - KvsARN
      - Key
      - IfMatch
    DeleteKeyRequestListItem:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/Key'
          description: The key of the key value pair to be deleted.
      required:
      - Key
      description: List item for keys to delete.
    DeleteKeyRequestsList:
      type: array
      items:
        $ref: '#/components/schemas/DeleteKeyRequestListItem'
    DeleteKeyResponse:
      type: object
      properties:
        ItemCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Number of key value pairs in the Key Value Store after the
            successful delete.
        TotalSizeInBytes:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: Total size of the Key Value Store after the successful delete,
            in bytes.
        ETag:
          allOf:
          - $ref: '#/components/schemas/Etag'
          description: The current version identifier of the Key Value Store after
            the successful delete.
      required:
      - ItemCount
      - TotalSizeInBytes
      - ETag
      description: Metadata information about a Key Value Store.
    DescribeKeyValueStoreRequest:
      type: object
      properties:
        KvsARN:
          allOf:
          - $ref: '#/components/schemas/KvsARN'
          description: The Amazon Resource Name (ARN) of the Key Value Store.
      required:
      - KvsARN
    DescribeKeyValueStoreResponse:
      type: object
      properties:
        ItemCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Number of key value pairs in the Key Value Store.
        TotalSizeInBytes:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: Total size of the Key Value Store in bytes.
        KvsARN:
          allOf:
          - $ref: '#/components/schemas/KvsARN'
          description: The Amazon Resource Name (ARN) of the Key Value Store.
        Created:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Date and time when the Key Value Store was created.
        ETag:
          allOf:
          - $ref: '#/components/schemas/Etag'
          description: The version identifier for the current version of the Key Value
            Store.
        LastModified:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Date and time when the key value pairs in the Key Value Store
            was last modified.
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The current status of the Key Value Store.
        FailureReason:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The reason for Key Value Store creation failure.
      required:
      - ItemCount
      - TotalSizeInBytes
      - KvsARN
      - Created
      - ETag
      description: Metadata information about a Key Value Store.
    Etag:
      type: string
    GetKeyRequest:
      type: object
      properties:
        KvsARN:
          allOf:
          - $ref: '#/components/schemas/KvsARN'
          description: The Amazon Resource Name (ARN) of the Key Value Store.
        Key:
          allOf:
          - $ref: '#/components/schemas/Key'
          description: The key to get.
      required:
      - KvsARN
      - Key
    GetKeyResponse:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/Key'
          description: The key of the key value pair.
        Value:
          allOf:
          - $ref: '#/components/schemas/Value'
          description: The value of the key value pair.
        ItemCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Number of key value pairs in the Key Value Store.
        TotalSizeInBytes:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: Total size of the Key Value Store in bytes.
      required:
      - Key
      - Value
      - ItemCount
      - TotalSizeInBytes
      description: A key value pair.
    InternalServerException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: Internal server error.
    Key:
      type: string
      minLength: 1
      maxLength: 1024
    KvsARN:
      type: string
      minLength: 1
      maxLength: 2048
    ListKeysRequest:
      type: object
      properties:
        KvsARN:
          allOf:
          - $ref: '#/components/schemas/KvsARN'
          description: The Amazon Resource Name (ARN) of the Key Value Store.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If nextToken is returned in the response, there are more results
            available. Make the next call using the returned token to retrieve the
            next page.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Maximum number of results that are returned per call. The default
            is 10 and maximum allowed page is 50.
      required:
      - KvsARN
    ListKeysResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If nextToken is returned in the response, there are more results
            available. Make the next call using the returned token to retrieve the
            next page.
        Items:
          allOf:
          - $ref: '#/components/schemas/ListKeysResponseList'
          description: Key value pairs
    ListKeysResponseList:
      type: array
      items:
        $ref: '#/components/schemas/ListKeysResponseListItem'
    ListKeysResponseListItem:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/Key'
          description: The key of the key value pair.
        Value:
          allOf:
          - $ref: '#/components/schemas/Value'
          description: The value of the key value pair.
      required:
      - Key
      - Value
      description: A key value pair.
    PutKeyRequest:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/Key'
          description: The key to put.
        Value:
          allOf:
          - $ref: '#/components/schemas/Value'
          description: The value to put.
        KvsARN:
          allOf:
          - $ref: '#/components/schemas/KvsARN'
          description: The Amazon Resource Name (ARN) of the Key Value Store.
        IfMatch:
          allOf:
          - $ref: '#/components/schemas/Etag'
          description: The current version (ETag) of the Key Value Store that you
            are putting keys into, which you can get using DescribeKeyValueStore.
      required:
      - Key
      - Value
      - KvsARN
      - IfMatch
      description: A key value pair.
    PutKeyRequestListItem:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/Key'
          description: The key of the key value pair list item to put.
        Value:
          allOf:
          - $ref: '#/components/schemas/Value'
          description: The value for the key value pair to put.
      required:
      - Key
      - Value
      description: List item for key value pair to put.
    PutKeyRequestsList:
      type: array
      items:
        $ref: '#/components/schemas/PutKeyRequestListItem'
    PutKeyResponse:
      type: object
      properties:
        ItemCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Number of key value pairs in the Key Value Store after the
            successful put.
        TotalSizeInBytes:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: Total size of the Key Value Store after the successful put,
            in bytes.
        ETag:
          allOf:
          - $ref: '#/components/schemas/Etag'
          description: The current version identifier of the Key Value Store after
            the successful put.
      required:
      - ItemCount
      - TotalSizeInBytes
      - ETag
      description: Metadata information about a Key Value Store.
    ResourceNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: Resource was not found.
    ServiceQuotaExceededException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: Limit exceeded.
    UpdateKeysRequest:
      type: object
      properties:
        KvsARN:
          allOf:
          - $ref: '#/components/schemas/KvsARN'
          description: The Amazon Resource Name (ARN) of the Key Value Store.
        IfMatch:
          allOf:
          - $ref: '#/components/schemas/Etag'
          description: The current version (ETag) of the Key Value Store that you
            are updating keys of, which you can get using DescribeKeyValueStore.
        Puts:
          allOf:
          - $ref: '#/components/schemas/PutKeyRequestsList'
          description: List of key value pairs to put.
        Deletes:
          allOf:
          - $ref: '#/components/schemas/DeleteKeyRequestsList'
          description: List of keys to delete.
      required:
      - KvsARN
      - IfMatch
    UpdateKeysResponse:
      type: object
      properties:
        ItemCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Number of key value pairs in the Key Value Store after the
            successful update.
        TotalSizeInBytes:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: Total size of the Key Value Store after the successful update,
            in bytes.
        ETag:
          allOf:
          - $ref: '#/components/schemas/Etag'
          description: The current version identifier of the Key Value Store after
            the successful update.
      required:
      - ItemCount
      - TotalSizeInBytes
      - ETag
      description: Metadata information about a Key Value Store.
    ValidationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: Validation failed.
    Value:
      type: string
