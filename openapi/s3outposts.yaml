openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: s3outposts
  x-aws-serviceName: s3outposts
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2017-07-25'
  title: Amazon S3 on Outposts
  description: |-
    Amazon S3 on Outposts provides access to S3 on Outposts operations.
servers:
- description: The Amazon S3 on Outposts regional endpoint
  url: https://s3-outposts.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /S3Outposts/CreateEndpoint:
    post:
      operationId: CreateEndpoint
      description: |-
        Creates an endpoint and associates it with the specified Outpost.

        It can take up to 5 minutes for this action to finish.

        Related actions include:

          * [DeleteEndpoint](https://docs.aws.amazon.com/AmazonS3/latest/API/API_s3outposts_DeleteEndpoint.html)

          * [ListEndpoints](https://docs.aws.amazon.com/AmazonS3/latest/API/API_s3outposts_ListEndpoints.html)
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                OutpostId:
                  $ref: '#/components/schemas/OutpostId'
                SubnetId:
                  $ref: '#/components/schemas/SubnetId'
                SecurityGroupId:
                  $ref: '#/components/schemas/SecurityGroupId'
                AccessType:
                  $ref: '#/components/schemas/EndpointAccessType'
                CustomerOwnedIpv4Pool:
                  $ref: '#/components/schemas/CustomerOwnedIpv4Pool'
      responses:
        '200': {}
        '403':
          description: |-
            Access was denied for this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict with this action, and it could not be completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There was an exception with the internal server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            There was an exception validating this data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /S3Outposts/DeleteEndpoint:
    delete:
      operationId: DeleteEndpoint
      description: |-
        Deletes an endpoint.

        It can take up to 5 minutes for this action to finish.

        Related actions include:

          * [CreateEndpoint](https://docs.aws.amazon.com/AmazonS3/latest/API/API_s3outposts_CreateEndpoint.html)

          * [ListEndpoints](https://docs.aws.amazon.com/AmazonS3/latest/API/API_s3outposts_ListEndpoints.html)
      parameters:
      - name: endpointId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/EndpointId'
      - name: outpostId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/OutpostId'
      responses:
        '200': {}
        '403':
          description: |-
            Access was denied for this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There was an exception with the internal server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            There was an exception validating this data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /S3Outposts/ListEndpoints:
    get:
      operationId: ListEndpoints
      description: |-
        Lists endpoints associated with the specified Outpost.

        Related actions include:

          * [CreateEndpoint](https://docs.aws.amazon.com/AmazonS3/latest/API/API_s3outposts_CreateEndpoint.html)

          * [DeleteEndpoint](https://docs.aws.amazon.com/AmazonS3/latest/API/API_s3outposts_DeleteEndpoint.html)
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            Access was denied for this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There was an exception with the internal server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There was an exception validating this data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /S3Outposts/ListOutpostsWithS3:
    get:
      operationId: ListOutpostsWithS3
      description: |-
        Lists the Outposts with S3 on Outposts capacity for your Amazon Web Services account. Includes S3 on Outposts that you have access to as the Outposts owner, or as a shared user from Resource Access Manager (RAM).
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            Access was denied for this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There was an exception with the internal server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There was an exception validating this data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /S3Outposts/ListSharedEndpoints:
    get:
      operationId: ListSharedEndpoints
      description: |-
        Lists all endpoints associated with an Outpost that has been shared by Amazon Web Services Resource Access Manager (RAM).

        Related actions include:

          * [CreateEndpoint](https://docs.aws.amazon.com/AmazonS3/latest/API/API_s3outposts_CreateEndpoint.html)

          * [DeleteEndpoint](https://docs.aws.amazon.com/AmazonS3/latest/API/API_s3outposts_DeleteEndpoint.html)
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: outpostId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/OutpostId'
      responses:
        '200': {}
        '403':
          description: |-
            Access was denied for this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There was an exception with the internal server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There was an exception validating this data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    AccessDeniedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Access was denied for this action.
    AwsAccountId:
      type: string
      pattern: ^\d{12}$
    CapacityInBytes:
      type: integer
      format: int64
      default: 0
    CidrBlock:
      type: string
    ConflictException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: There was a conflict with this action, and it could not be completed.
    CreateEndpointRequest:
      type: object
      properties:
        OutpostId:
          allOf:
          - $ref: '#/components/schemas/OutpostId'
          description: The ID of the Outposts.
        SubnetId:
          allOf:
          - $ref: '#/components/schemas/SubnetId'
          description: The ID of the subnet in the selected VPC. The endpoint subnet
            must belong to the Outpost that has Amazon S3 on Outposts provisioned.
        SecurityGroupId:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupId'
          description: The ID of the security group to use with the endpoint.
        AccessType:
          allOf:
          - $ref: '#/components/schemas/EndpointAccessType'
          description: 'The type of access for the network connectivity for the Amazon
            S3 on Outposts endpoint. To use the Amazon Web Services VPC, choose `Private`.
            To use the endpoint with an on-premises network, choose `CustomerOwnedIp`.
            If you choose `CustomerOwnedIp`, you must also provide the customer-owned
            IP address pool (CoIP pool).


            `Private` is the default access type value.'
        CustomerOwnedIpv4Pool:
          allOf:
          - $ref: '#/components/schemas/CustomerOwnedIpv4Pool'
          description: The ID of the customer-owned IPv4 address pool (CoIP pool)
            for the endpoint. IP addresses are allocated from this pool for the endpoint.
      required:
      - OutpostId
      - SubnetId
      - SecurityGroupId
    CreateEndpointResult:
      type: object
      properties:
        EndpointArn:
          allOf:
          - $ref: '#/components/schemas/EndpointArn'
          description: The Amazon Resource Name (ARN) of the endpoint.
    CreationTime:
      type: string
      format: date-time
    CustomerOwnedIpv4Pool:
      type: string
      pattern: ^ipv4pool-coip-([0-9a-f]{17})$
    DeleteEndpointRequest:
      type: object
      properties:
        EndpointId:
          allOf:
          - $ref: '#/components/schemas/EndpointId'
          description: The ID of the endpoint.
        OutpostId:
          allOf:
          - $ref: '#/components/schemas/OutpostId'
          description: The ID of the Outposts.
      required:
      - EndpointId
      - OutpostId
    Endpoint:
      type: object
      properties:
        EndpointArn:
          allOf:
          - $ref: '#/components/schemas/EndpointArn'
          description: The Amazon Resource Name (ARN) of the endpoint.
        OutpostsId:
          allOf:
          - $ref: '#/components/schemas/OutpostId'
          description: The ID of the Outposts.
        CidrBlock:
          allOf:
          - $ref: '#/components/schemas/CidrBlock'
          description: The VPC CIDR committed by this endpoint.
        Status:
          allOf:
          - $ref: '#/components/schemas/EndpointStatus'
          description: The status of the endpoint.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/CreationTime'
          description: The time the endpoint was created.
        NetworkInterfaces:
          allOf:
          - $ref: '#/components/schemas/NetworkInterfaces'
          description: The network interface of the endpoint.
        VpcId:
          allOf:
          - $ref: '#/components/schemas/VpcId'
          description: The ID of the VPC used for the endpoint.
        SubnetId:
          allOf:
          - $ref: '#/components/schemas/SubnetId'
          description: The ID of the subnet used for the endpoint.
        SecurityGroupId:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupId'
          description: The ID of the security group used for the endpoint.
        AccessType:
          allOf:
          - $ref: '#/components/schemas/EndpointAccessType'
          description: The type of connectivity used to access the Amazon S3 on Outposts
            endpoint.
        CustomerOwnedIpv4Pool:
          allOf:
          - $ref: '#/components/schemas/CustomerOwnedIpv4Pool'
          description: The ID of the customer-owned IPv4 address pool used for the
            endpoint.
        FailedReason:
          allOf:
          - $ref: '#/components/schemas/FailedReason'
          description: The failure reason, if any, for a create or delete endpoint
            operation.
      description: Amazon S3 on Outposts Access Points simplify managing data access
        at scale for shared datasets in S3 on Outposts. S3 on Outposts uses endpoints
        to connect to Outposts buckets so that you can perform actions within your
        virtual private cloud (VPC). For more information, see [ Accessing S3 on Outposts
        using VPC-only access points](https://docs.aws.amazon.com/AmazonS3/latest/userguide/WorkingWithS3Outposts.html)
        in the _Amazon Simple Storage Service User Guide_.
    EndpointAccessType:
      type: string
      enum:
      - Private
      - CustomerOwnedIp
    EndpointArn:
      type: string
      pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):s3-outposts:[a-z\-0-9]*:[0-9]{12}:outpost/(op-[a-f0-9]{17}|ec2)/endpoint/[a-zA-Z0-9]{19}$
    EndpointId:
      type: string
      pattern: ^[a-zA-Z0-9]{19}$
    EndpointStatus:
      type: string
      enum:
      - Pending
      - Available
      - Deleting
      - Create_Failed
      - Delete_Failed
    Endpoints:
      type: array
      items:
        $ref: '#/components/schemas/Endpoint'
    ErrorCode:
      type: string
    ErrorMessage:
      type: string
    FailedReason:
      type: object
      properties:
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/ErrorCode'
          description: The failure code, if any, for a create or delete endpoint operation.
        Message:
          allOf:
          - $ref: '#/components/schemas/Message'
          description: Additional error details describing the endpoint failure and
            recommended action.
      description: The failure reason, if any, for a create or delete endpoint operation.
    InternalServerException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: There was an exception with the internal server.
    ListEndpointsRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If a previous response from this operation included a `NextToken`
            value, provide that value here to retrieve the next page of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of endpoints that will be returned in the
            response.
    ListEndpointsResult:
      type: object
      properties:
        Endpoints:
          allOf:
          - $ref: '#/components/schemas/Endpoints'
          description: The list of endpoints associated with the specified Outpost.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If the number of endpoints associated with the specified Outpost
            exceeds `MaxResults`, you can include this value in subsequent calls to
            this operation to retrieve more results.
    ListOutpostsWithS3Request:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: When you can get additional results from the `ListOutpostsWithS3`
            call, a `NextToken` parameter is returned in the output. You can then
            pass in a subsequent command to the `NextToken` parameter to continue
            listing additional Outposts.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of Outposts to return. The limit is 100.
    ListOutpostsWithS3Result:
      type: object
      properties:
        Outposts:
          allOf:
          - $ref: '#/components/schemas/Outposts'
          description: "Returns the list of Outposts that have the following characteristics:\n\
            \n  * outposts that have S3 provisioned\n\n  * outposts that are `Active`\
            \ (not pending any provisioning nor decommissioned)\n\n  * outposts to\
            \ which the the calling Amazon Web Services account has access"
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Returns a token that you can use to call `ListOutpostsWithS3`
            again and receive additional results, if there are any.
    ListSharedEndpointsRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If a previous response from this operation included a `NextToken`
            value, you can provide that value here to retrieve the next page of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of endpoints that will be returned in the
            response.
        OutpostId:
          allOf:
          - $ref: '#/components/schemas/OutpostId'
          description: The ID of the Amazon Web Services Outpost.
      required:
      - OutpostId
    ListSharedEndpointsResult:
      type: object
      properties:
        Endpoints:
          allOf:
          - $ref: '#/components/schemas/Endpoints'
          description: The list of endpoints associated with the specified Outpost
            that have been shared by Amazon Web Services Resource Access Manager (RAM).
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If the number of endpoints associated with the specified Outpost
            exceeds `MaxResults`, you can include this value in subsequent calls to
            this operation to retrieve more results.
    MaxResults:
      type: integer
      default: 0
      minimum: 0
      maximum: 100
    Message:
      type: string
    NetworkInterface:
      type: object
      properties:
        NetworkInterfaceId:
          allOf:
          - $ref: '#/components/schemas/NetworkInterfaceId'
          description: The ID for the network interface.
      description: The container for the network interface.
    NetworkInterfaceId:
      type: string
    NetworkInterfaces:
      type: array
      items:
        $ref: '#/components/schemas/NetworkInterface'
    NextToken:
      type: string
      pattern: ^[A-Za-z0-9\+\:\/\=\?\#-_]+$
      minLength: 1
      maxLength: 1024
    Outpost:
      type: object
      properties:
        OutpostArn:
          allOf:
          - $ref: '#/components/schemas/OutpostArn'
          description: Specifies the unique Amazon Resource Name (ARN) for the outpost.
        S3OutpostArn:
          allOf:
          - $ref: '#/components/schemas/S3OutpostArn'
          description: Specifies the unique S3 on Outposts ARN for use with Resource
            Access Manager (RAM).
        OutpostId:
          allOf:
          - $ref: '#/components/schemas/OutpostId'
          description: Specifies the unique identifier for the outpost.
        OwnerId:
          allOf:
          - $ref: '#/components/schemas/AwsAccountId'
          description: Returns the Amazon Web Services account ID of the outpost owner.
            Useful for comparing owned versus shared outposts.
        CapacityInBytes:
          allOf:
          - $ref: '#/components/schemas/CapacityInBytes'
          description: The Amazon S3 capacity of the outpost in bytes.
      description: Contains the details for the Outpost object.
    OutpostArn:
      type: string
      pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):outposts:[a-z\-0-9]*:[0-9]{12}:outpost/(op-[a-f0-9]{17}|ec2)$
    OutpostId:
      type: string
      pattern: ^(op-[a-f0-9]{17}|\d{12}|ec2)$
    OutpostOfflineException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The service link connection to your Outposts home Region is down.
        Check your connection and try again.
    Outposts:
      type: array
      items:
        $ref: '#/components/schemas/Outpost'
    ResourceNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The requested resource was not found.
    S3OutpostArn:
      type: string
      pattern: ^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):s3-outposts:[a-z\-0-9]*:[0-9]{12}:outpost/(op-[a-f0-9]{17}|\d{12})/s3$
    SecurityGroupId:
      type: string
      pattern: ^sg-([0-9a-f]{8}|[0-9a-f]{17})$
    SubnetId:
      type: string
      pattern: ^subnet-([0-9a-f]{8}|[0-9a-f]{17})$
    ThrottlingException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The request was denied due to request throttling.
    ValidationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: There was an exception validating this data.
    VpcId:
      type: string
