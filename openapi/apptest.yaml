openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: apptest
  x-aws-serviceName: apptest
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2022-12-06'
  title: AWS Mainframe Modernization Application Testing
  description: |-
    AWS Mainframe Modernization Application Testing provides tools and resources for automated functional equivalence testing for your migration projects.
servers:
- description: The AWS Mainframe Modernization Application Testing regional endpoint
  url: https://apptest.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /testcase:
    post:
      operationId: CreateTestCase
      description: |-
        Creates a test case.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/ResourceName'
                description:
                  $ref: '#/components/schemas/ResourceDescription'
                steps:
                  $ref: '#/components/schemas/StepList'
                clientToken:
                  $ref: '#/components/schemas/IdempotencyTokenString'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '201': {}
        '403':
          description: |-
            The account or role doesn't have the right permissions to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The parameters provided in the request conflict with existing resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred during the processing of the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            One or more quotas for AWS Application Testing exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The number of requests made exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            One or more parameter provided in the request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /testconfiguration:
    post:
      operationId: CreateTestConfiguration
      description: |-
        Creates a test configuration.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/ResourceName'
                description:
                  $ref: '#/components/schemas/ResourceDescription'
                resources:
                  $ref: '#/components/schemas/ResourceList'
                properties:
                  $ref: '#/components/schemas/Properties'
                clientToken:
                  $ref: '#/components/schemas/IdempotencyTokenString'
                tags:
                  $ref: '#/components/schemas/TagMap'
                serviceSettings:
                  $ref: '#/components/schemas/ServiceSettings'
      responses:
        '201': {}
        '403':
          description: |-
            The account or role doesn't have the right permissions to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The parameters provided in the request conflict with existing resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred during the processing of the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            One or more quotas for AWS Application Testing exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The number of requests made exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            One or more parameter provided in the request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /testsuite:
    post:
      operationId: CreateTestSuite
      description: |-
        Creates a test suite.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/ResourceName'
                description:
                  $ref: '#/components/schemas/ResourceDescription'
                beforeSteps:
                  $ref: '#/components/schemas/StepList'
                afterSteps:
                  $ref: '#/components/schemas/StepList'
                testCases:
                  $ref: '#/components/schemas/TestCases'
                clientToken:
                  $ref: '#/components/schemas/IdempotencyTokenString'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '201': {}
        '403':
          description: |-
            The account or role doesn't have the right permissions to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The parameters provided in the request conflict with existing resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred during the processing of the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            One or more quotas for AWS Application Testing exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The number of requests made exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            One or more parameter provided in the request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /testcases/{testCaseId}:
    delete:
      operationId: DeleteTestCase
      description: |-
        Deletes a test case.
      parameters:
      - name: testCaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Identifier'
      responses:
        '204': {}
        '403':
          description: |-
            The account or role doesn't have the right permissions to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The parameters provided in the request conflict with existing resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred during the processing of the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests made exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            One or more parameter provided in the request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetTestCase
      description: |-
        Gets a test case.
      parameters:
      - name: testCaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Identifier'
      - name: testCaseVersion
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Version'
      responses:
        '200': {}
        '403':
          description: |-
            The account or role doesn't have the right permissions to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred during the processing of the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests made exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            One or more parameter provided in the request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateTestCase
      description: |-
        Updates a test case.
      parameters:
      - name: testCaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  $ref: '#/components/schemas/ResourceDescription'
                steps:
                  $ref: '#/components/schemas/StepList'
      responses:
        '200': {}
        '403':
          description: |-
            The account or role doesn't have the right permissions to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The parameters provided in the request conflict with existing resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred during the processing of the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests made exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            One or more parameter provided in the request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /testconfigurations/{testConfigurationId}:
    delete:
      operationId: DeleteTestConfiguration
      description: |-
        Deletes a test configuration.
      parameters:
      - name: testConfigurationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Identifier'
      responses:
        '204': {}
        '403':
          description: |-
            The account or role doesn't have the right permissions to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The parameters provided in the request conflict with existing resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred during the processing of the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            One or more quotas for AWS Application Testing exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The number of requests made exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            One or more parameter provided in the request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetTestConfiguration
      description: |-
        Gets a test configuration.
      parameters:
      - name: testConfigurationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Identifier'
      - name: testConfigurationVersion
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Version'
      responses:
        '200': {}
        '403':
          description: |-
            The account or role doesn't have the right permissions to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred during the processing of the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests made exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            One or more parameter provided in the request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateTestConfiguration
      description: |-
        Updates a test configuration.
      parameters:
      - name: testConfigurationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  $ref: '#/components/schemas/ResourceDescription'
                resources:
                  $ref: '#/components/schemas/ResourceList'
                properties:
                  $ref: '#/components/schemas/Properties'
                serviceSettings:
                  $ref: '#/components/schemas/ServiceSettings'
      responses:
        '200': {}
        '403':
          description: |-
            The account or role doesn't have the right permissions to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The parameters provided in the request conflict with existing resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred during the processing of the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests made exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            One or more parameter provided in the request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /testruns/{testRunId}:
    delete:
      operationId: DeleteTestRun
      description: |-
        Deletes a test run.
      parameters:
      - name: testRunId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Identifier'
      responses:
        '204': {}
        '403':
          description: |-
            The account or role doesn't have the right permissions to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The parameters provided in the request conflict with existing resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred during the processing of the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The number of requests made exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            One or more parameter provided in the request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /testsuites/{testSuiteId}:
    delete:
      operationId: DeleteTestSuite
      description: |-
        Deletes a test suite.
      parameters:
      - name: testSuiteId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Identifier'
      responses:
        '204': {}
        '403':
          description: |-
            The account or role doesn't have the right permissions to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The parameters provided in the request conflict with existing resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred during the processing of the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            One or more quotas for AWS Application Testing exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The number of requests made exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            One or more parameter provided in the request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetTestSuite
      description: |-
        Gets a test suite.
      parameters:
      - name: testSuiteId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Identifier'
      - name: testSuiteVersion
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Version'
      responses:
        '200': {}
        '403':
          description: |-
            The account or role doesn't have the right permissions to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred during the processing of the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests made exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            One or more parameter provided in the request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateTestSuite
      description: |-
        Updates a test suite.
      parameters:
      - name: testSuiteId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  $ref: '#/components/schemas/ResourceDescription'
                beforeSteps:
                  $ref: '#/components/schemas/StepList'
                afterSteps:
                  $ref: '#/components/schemas/StepList'
                testCases:
                  $ref: '#/components/schemas/TestCases'
      responses:
        '200': {}
        '403':
          description: |-
            The account or role doesn't have the right permissions to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The parameters provided in the request conflict with existing resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred during the processing of the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests made exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            One or more parameter provided in the request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /testruns/{testRunId}/steps/{stepName}:
    get:
      operationId: GetTestRunStep
      description: |-
        Gets a test run step.
      parameters:
      - name: testRunId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Identifier'
      - name: stepName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: testCaseId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Identifier'
      - name: testSuiteId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Identifier'
      responses:
        '200': {}
        '403':
          description: |-
            The account or role doesn't have the right permissions to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred during the processing of the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests made exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            One or more parameter provided in the request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tags/{resourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Lists tags for a resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            The account or role doesn't have the right permissions to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred during the processing of the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests made exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            One or more parameter provided in the request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: TagResource
      description: |-
        Specifies tags of a resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            The account or role doesn't have the right permissions to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred during the processing of the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            One or more quotas for AWS Application Testing exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The number of requests made exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            One or more parameter provided in the request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: UntagResource
      description: |-
        Untags a resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeyList'
      responses:
        '200': {}
        '403':
          description: |-
            The account or role doesn't have the right permissions to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred during the processing of the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests made exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            One or more parameter provided in the request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /testcases:
    get:
      operationId: ListTestCases
      description: |-
        Lists test cases.
      parameters:
      - name: testCaseIds
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/TestCaseIdList'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            The account or role doesn't have the right permissions to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred during the processing of the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests made exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            One or more parameter provided in the request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /testconfigurations:
    get:
      operationId: ListTestConfigurations
      description: |-
        Lists test configurations.
      parameters:
      - name: testConfigurationIds
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/TestConfigurationIdList'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            The account or role doesn't have the right permissions to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred during the processing of the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests made exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            One or more parameter provided in the request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /testruns/{testRunId}/steps:
    get:
      operationId: ListTestRunSteps
      description: |-
        Lists test run steps.
      parameters:
      - name: testRunId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Identifier'
      - name: testCaseId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Identifier'
      - name: testSuiteId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Identifier'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            The account or role doesn't have the right permissions to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred during the processing of the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests made exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            One or more parameter provided in the request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /testruns/{testRunId}/testcases:
    get:
      operationId: ListTestRunTestCases
      description: |-
        Lists test run test cases.
      parameters:
      - name: testRunId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Identifier'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            The account or role doesn't have the right permissions to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred during the processing of the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests made exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            One or more parameter provided in the request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /testruns:
    get:
      operationId: ListTestRuns
      description: |-
        Lists test runs.
      parameters:
      - name: testSuiteId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Identifier'
      - name: testrunIds
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/TestRunIdList'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            The account or role doesn't have the right permissions to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred during the processing of the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests made exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            One or more parameter provided in the request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /testsuites:
    get:
      operationId: ListTestSuites
      description: |-
        Lists test suites.
      parameters:
      - name: testSuiteIds
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/TestSuiteIdList'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            The account or role doesn't have the right permissions to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred during the processing of the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests made exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            One or more parameter provided in the request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /testrun:
    post:
      operationId: StartTestRun
      description: |-
        Starts a test run.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                testSuiteId:
                  $ref: '#/components/schemas/Identifier'
                testConfigurationId:
                  $ref: '#/components/schemas/Identifier'
                clientToken:
                  $ref: '#/components/schemas/IdempotencyTokenString'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            The account or role doesn't have the right permissions to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The parameters provided in the request conflict with existing resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred during the processing of the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            One or more quotas for AWS Application Testing exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The number of requests made exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            One or more parameter provided in the request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    AccessDeniedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The account or role doesn't have the right permissions to make
        the request.
    Arn:
      type: string
      pattern: ^arn:(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:([a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-[0-9]):[0-9]{12}:[A-Za-z0-9/][A-Za-z0-9:_/+=,@.-]{0,1023}$
    Batch:
      type: object
      properties:
        batchJobName:
          allOf:
          - $ref: '#/components/schemas/Variable'
          description: The job name of the batch.
        batchJobParameters:
          allOf:
          - $ref: '#/components/schemas/BatchJobParameters'
          description: The batch job parameters of the batch.
        exportDataSetNames:
          allOf:
          - $ref: '#/components/schemas/ExportDataSetNames'
          description: The export data set names of the batch.
      required:
      - batchJobName
      description: Defines a batch.
    BatchJobParameters:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    BatchStepInput:
      type: object
      properties:
        resource:
          allOf:
          - $ref: '#/components/schemas/MainframeResourceSummary'
          description: The resource of the batch step input.
        batchJobName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The batch job name of the batch step input.
        batchJobParameters:
          allOf:
          - $ref: '#/components/schemas/BatchJobParameters'
          description: The batch job parameters of the batch step input.
        exportDataSetNames:
          allOf:
          - $ref: '#/components/schemas/ExportDataSetNames'
          description: The export data set names of the batch step input.
        properties:
          allOf:
          - $ref: '#/components/schemas/MainframeActionProperties'
          description: The properties of the batch step input.
      required:
      - resource
      - batchJobName
      description: Defines a batch step input.
    BatchStepOutput:
      type: object
      properties:
        dataSetExportLocation:
          allOf:
          - $ref: '#/components/schemas/S3Uri'
          description: The data set export location of the batch step output.
        dmsOutputLocation:
          allOf:
          - $ref: '#/components/schemas/S3Uri'
          description: The Database Migration Service (DMS) output location of the
            batch step output.
        dataSetDetails:
          allOf:
          - $ref: '#/components/schemas/DataSetList'
          description: The data set details of the batch step output.
      description: Defines a batch step output.
    BatchSummary:
      type: object
      properties:
        stepInput:
          allOf:
          - $ref: '#/components/schemas/BatchStepInput'
          description: The step input of the batch summary.
        stepOutput:
          allOf:
          - $ref: '#/components/schemas/BatchStepOutput'
          description: The step output of the batch summary.
      required:
      - stepInput
      description: Summarizes a batch job.
    CaptureTool:
      type: string
      enum:
      - Precisely
      - AWS DMS
    CloudFormation:
      type: object
      properties:
        templateLocation:
          allOf:
          - $ref: '#/components/schemas/S3Uri'
          description: The template location of the CloudFormation template.
        parameters:
          allOf:
          - $ref: '#/components/schemas/Properties'
          description: The CloudFormation properties in the CloudFormation template.
      required:
      - templateLocation
      description: Specifies the CloudFormation template and its parameters.
    CloudFormationAction:
      type: object
      properties:
        resource:
          allOf:
          - $ref: '#/components/schemas/Variable'
          description: The resource of the CloudFormation action.
        actionType:
          allOf:
          - $ref: '#/components/schemas/CloudFormationActionType'
          description: The action type of the CloudFormation action.
      required:
      - resource
      description: Specifies the CloudFormation action.
    CloudFormationActionType:
      type: string
      enum:
      - Create
      - Delete
    CloudFormationStepSummary:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/CreateCloudFormationSummary'
        description: |-
          Creates the CloudFormation summary of the step.
      - allOf:
        - $ref: '#/components/schemas/DeleteCloudFormationSummary'
        description: |-
          Deletes the CloudFormation summary of the CloudFormation step summary.
      description: |-
        Specifies the CloudFormation step summary.
    CompareAction:
      type: object
      properties:
        input:
          allOf:
          - $ref: '#/components/schemas/Input'
          description: The input of the compare action.
        output:
          allOf:
          - $ref: '#/components/schemas/Output'
          description: The output of the compare action.
      required:
      - input
      description: Compares the action.
    CompareActionSummary:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/File'
          description: The type of the compare action summary.
      required:
      - type
      description: Specifies the compare action summary.
    CompareDataSetsStepInput:
      type: object
      properties:
        sourceLocation:
          allOf:
          - $ref: '#/components/schemas/S3Uri'
          description: The source location of the compare data sets step input location.
        targetLocation:
          allOf:
          - $ref: '#/components/schemas/S3Uri'
          description: The target location of the compare data sets step input location.
        sourceDataSets:
          allOf:
          - $ref: '#/components/schemas/DataSetList'
          description: The source data sets of the compare data sets step input location.
        targetDataSets:
          allOf:
          - $ref: '#/components/schemas/DataSetList'
          description: The target data sets of the compare data sets step input location.
      required:
      - sourceLocation
      - targetLocation
      - sourceDataSets
      - targetDataSets
      description: Specifies the compare data sets step input.
    CompareDataSetsStepOutput:
      type: object
      properties:
        comparisonOutputLocation:
          allOf:
          - $ref: '#/components/schemas/S3Uri'
          description: The comparison output location of the compare data sets step
            output.
        comparisonStatus:
          allOf:
          - $ref: '#/components/schemas/ComparisonStatusEnum'
          description: The comparison status of the compare data sets step output.
      required:
      - comparisonOutputLocation
      - comparisonStatus
      description: Specifies the compare data sets step output.
    CompareDataSetsSummary:
      type: object
      properties:
        stepInput:
          allOf:
          - $ref: '#/components/schemas/CompareDataSetsStepInput'
          description: The step input of the compare data sets summary.
        stepOutput:
          allOf:
          - $ref: '#/components/schemas/CompareDataSetsStepOutput'
          description: The step output of the compare data sets summary.
      required:
      - stepInput
      description: Compares data sets summary.
    CompareDatabaseCDCStepInput:
      type: object
      properties:
        sourceLocation:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The source location of the compare database CDC step input.
        targetLocation:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The target location of the compare database CDC step input.
        outputLocation:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The output location of the compare database CDC step input.
        sourceMetadata:
          allOf:
          - $ref: '#/components/schemas/SourceDatabaseMetadata'
          description: The source metadata of the compare database CDC step input.
        targetMetadata:
          allOf:
          - $ref: '#/components/schemas/TargetDatabaseMetadata'
          description: The target metadata location of the compare database CDC step
            input.
      required:
      - sourceLocation
      - targetLocation
      - sourceMetadata
      - targetMetadata
      description: Compares the database Change Data Capture (CDC) step input.
    CompareDatabaseCDCStepOutput:
      type: object
      properties:
        comparisonOutputLocation:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The comparison output of the compare database CDC step output.
        comparisonStatus:
          allOf:
          - $ref: '#/components/schemas/ComparisonStatusEnum'
          description: The comparison status of the compare database CDC step output.
      required:
      - comparisonOutputLocation
      - comparisonStatus
      description: Compares the database CDC step output.
    CompareDatabaseCDCSummary:
      type: object
      properties:
        stepInput:
          allOf:
          - $ref: '#/components/schemas/CompareDatabaseCDCStepInput'
          description: The step input of the compare database CDC summary.
        stepOutput:
          allOf:
          - $ref: '#/components/schemas/CompareDatabaseCDCStepOutput'
          description: The step output of the compare database CDC summary.
      required:
      - stepInput
      description: Compares the database CDC summary.
    CompareFileType:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/CompareDataSetsSummary'
        description: |-
          The data sets in the compare file type.
      - allOf:
        - $ref: '#/components/schemas/CompareDatabaseCDCSummary'
        description: |-
          The database CDC of the compare file type.
      description: |-
        Compares the file type.
    ComparisonStatusEnum:
      type: string
      enum:
      - Different
      - Equivalent
      - Equal
    ConflictException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        resourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The resource ID of the conflicts with existing resources.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The resource type of the conflicts with existing resources.
      required:
      - message
      description: The parameters provided in the request conflict with existing resources.
    CreateCloudFormationStepInput:
      type: object
      properties:
        templateLocation:
          allOf:
          - $ref: '#/components/schemas/S3Uri'
          description: The template location of the CloudFormation step input.
        parameters:
          allOf:
          - $ref: '#/components/schemas/Properties'
          description: The CloudFormation properties of the CloudFormation step input.
      required:
      - templateLocation
      description: Creates the CloudFormation step input.
    CreateCloudFormationStepOutput:
      type: object
      properties:
        stackId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The stack ID of the CloudFormation step output.
        exports:
          allOf:
          - $ref: '#/components/schemas/Properties'
          description: The exports of the CloudFormation step output.
      required:
      - stackId
      description: Creates a CloudFormation step output.
    CreateCloudFormationSummary:
      type: object
      properties:
        stepInput:
          allOf:
          - $ref: '#/components/schemas/CreateCloudFormationStepInput'
          description: The step input of the CloudFormation summary.
        stepOutput:
          allOf:
          - $ref: '#/components/schemas/CreateCloudFormationStepOutput'
          description: The step output of the CloudFormation summary.
      required:
      - stepInput
      description: Creates a CloudFormation summary.
    CreateTestCaseRequest:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the test case.
        description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The description of the test case.
        steps:
          allOf:
          - $ref: '#/components/schemas/StepList'
          description: The steps in the test case.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyTokenString'
          description: The client token of the test case.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The specified tags of the test case.
      required:
      - name
      - steps
    CreateTestCaseResponse:
      type: object
      properties:
        testCaseId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The test case ID of the test case.
        testCaseVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The test case version of the test case.
      required:
      - testCaseId
      - testCaseVersion
    CreateTestConfigurationRequest:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the test configuration.
        description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The description of the test configuration.
        resources:
          allOf:
          - $ref: '#/components/schemas/ResourceList'
          description: The defined resources of the test configuration.
        properties:
          allOf:
          - $ref: '#/components/schemas/Properties'
          description: The properties of the test configuration.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyTokenString'
          description: The client token of the test configuration.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags of the test configuration.
        serviceSettings:
          allOf:
          - $ref: '#/components/schemas/ServiceSettings'
          description: The service settings of the test configuration.
      required:
      - name
      - resources
    CreateTestConfigurationResponse:
      type: object
      properties:
        testConfigurationId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The test configuration ID.
        testConfigurationVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The test configuration version.
      required:
      - testConfigurationId
      - testConfigurationVersion
    CreateTestSuiteRequest:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the test suite.
        description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The description of the test suite.
        beforeSteps:
          allOf:
          - $ref: '#/components/schemas/StepList'
          description: The before steps of the test suite.
        afterSteps:
          allOf:
          - $ref: '#/components/schemas/StepList'
          description: The after steps of the test suite.
        testCases:
          allOf:
          - $ref: '#/components/schemas/TestCases'
          description: The test cases in the test suite.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyTokenString'
          description: The client token of the test suite.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags of the test suite.
      required:
      - name
      - testCases
    CreateTestSuiteResponse:
      type: object
      properties:
        testSuiteId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The suite ID of the test suite.
        testSuiteVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The suite version of the test suite.
      required:
      - testSuiteId
      - testSuiteVersion
    DataSet:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/DataSetType'
          description: The type of the data set.
        name:
          allOf:
          - $ref: '#/components/schemas/String100'
          description: The name of the data set.
        ccsid:
          allOf:
          - $ref: '#/components/schemas/String50'
          description: The CCSID of the data set.
        format:
          allOf:
          - $ref: '#/components/schemas/Format'
          description: The format of the data set.
        length:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The length of the data set.
      required:
      - type
      - name
      - ccsid
      - format
      - length
      description: Defines a data set.
    DataSetList:
      type: array
      items:
        $ref: '#/components/schemas/DataSet'
    DataSetType:
      type: string
      enum:
      - PS
    DatabaseCDC:
      type: object
      properties:
        sourceMetadata:
          allOf:
          - $ref: '#/components/schemas/SourceDatabaseMetadata'
          description: The source metadata of the database CDC.
        targetMetadata:
          allOf:
          - $ref: '#/components/schemas/TargetDatabaseMetadata'
          description: The target metadata of the database CDC.
      required:
      - sourceMetadata
      - targetMetadata
      description: Defines the Change Data Capture (CDC) of the database.
    DeleteCloudFormationStepInput:
      type: object
      properties:
        stackId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The stack ID of the deleted CloudFormation step input.
      required:
      - stackId
      description: Deletes the CloudFormation step input.
    DeleteCloudFormationStepOutput:
      type: object
      properties: {}
      description: Deletes the CloudFormation summary step output.
    DeleteCloudFormationSummary:
      type: object
      properties:
        stepInput:
          allOf:
          - $ref: '#/components/schemas/DeleteCloudFormationStepInput'
          description: The step input of the deleted CloudFormation summary.
        stepOutput:
          allOf:
          - $ref: '#/components/schemas/DeleteCloudFormationStepOutput'
          description: The step output of the deleted CloudFormation summary.
      required:
      - stepInput
      description: Deletes the CloudFormation summary.
    DeleteTestCaseRequest:
      type: object
      properties:
        testCaseId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The test case ID of the test case.
      required:
      - testCaseId
    DeleteTestCaseResponse:
      type: object
      properties: {}
    DeleteTestConfigurationRequest:
      type: object
      properties:
        testConfigurationId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The test ID of the test configuration.
      required:
      - testConfigurationId
    DeleteTestConfigurationResponse:
      type: object
      properties: {}
    DeleteTestRunRequest:
      type: object
      properties:
        testRunId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The run ID of the test run.
      required:
      - testRunId
    DeleteTestRunResponse:
      type: object
      properties: {}
    DeleteTestSuiteRequest:
      type: object
      properties:
        testSuiteId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The test ID of the test suite.
      required:
      - testSuiteId
    DeleteTestSuiteResponse:
      type: object
      properties: {}
    ExportDataSetNames:
      type: array
      items:
        $ref: '#/components/schemas/String100'
    File:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/CompareFileType'
        description: |-
          The file type of the file.
      description: |-
        Defines a file.
    FileMetadata:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/DataSetList'
        description: |-
          The data sets of the file metadata.
      - allOf:
        - $ref: '#/components/schemas/DatabaseCDC'
        description: |-
          The database CDC of the file metadata.
      description: |-
        Specifies a file metadata.
    Format:
      type: string
      enum:
      - FIXED
      - VARIABLE
      - LINE_SEQUENTIAL
    GetTestCaseRequest:
      type: object
      properties:
        testCaseId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The request test ID of the test case.
        testCaseVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The test case version of the test case.
      required:
      - testCaseId
    GetTestCaseResponse:
      type: object
      properties:
        testCaseId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The response test ID of the test case.
        testCaseArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the test case.
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the test case.
        description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The description of the test case.
        latestVersion:
          allOf:
          - $ref: '#/components/schemas/TestCaseLatestVersion'
          description: The latest version of the test case.
        testCaseVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The case version of the test case.
        status:
          allOf:
          - $ref: '#/components/schemas/TestCaseLifecycle'
          description: The status of the test case.
        statusReason:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status reason of the test case.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The creation time of the test case.
        lastUpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The last update time of the test case.
        steps:
          allOf:
          - $ref: '#/components/schemas/StepList'
          description: The steps of the test case.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags of the test case.
      required:
      - testCaseId
      - testCaseArn
      - name
      - latestVersion
      - testCaseVersion
      - status
      - creationTime
      - lastUpdateTime
      - steps
    GetTestConfigurationRequest:
      type: object
      properties:
        testConfigurationId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The request test configuration ID.
        testConfigurationVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The test configuration version.
      required:
      - testConfigurationId
    GetTestConfigurationResponse:
      type: object
      properties:
        testConfigurationId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The response test configuration ID.
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The test configuration name
        testConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The test configuration Amazon Resource Name (ARN).
        latestVersion:
          allOf:
          - $ref: '#/components/schemas/TestConfigurationLatestVersion'
          description: The latest version of the test configuration.
        testConfigurationVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The test configuration version.
        status:
          allOf:
          - $ref: '#/components/schemas/TestConfigurationLifecycle'
          description: The status of the test configuration.
        statusReason:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status reason of the test configuration.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The creation time of the test configuration.
        lastUpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The last update time of the test configuration.
        description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The description of the test configuration.
        resources:
          allOf:
          - $ref: '#/components/schemas/ResourceList'
          description: The resources of the test configuration.
        properties:
          allOf:
          - $ref: '#/components/schemas/Properties'
          description: The properties of the test configuration.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags of the test configuration.
        serviceSettings:
          allOf:
          - $ref: '#/components/schemas/ServiceSettings'
          description: The service settings of the test configuration.
      required:
      - testConfigurationId
      - name
      - testConfigurationArn
      - latestVersion
      - testConfigurationVersion
      - status
      - creationTime
      - lastUpdateTime
      - resources
      - properties
    GetTestRunStepRequest:
      type: object
      properties:
        testRunId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The test run ID of the test run step.
        stepName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The step name of the test run step.
        testCaseId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The test case ID of a test run step.
        testSuiteId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The test suite ID of a test run step.
      required:
      - testRunId
      - stepName
    GetTestRunStepResponse:
      type: object
      properties:
        stepName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The step name of the test run step.
        testRunId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The test run ID of the test run step.
        testCaseId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The test case ID of the test run step.
        testCaseVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The test case version of the test run step.
        testSuiteId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The test suite ID of the test run step.
        testSuiteVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The test suite version of the test run step.
        beforeStep:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: The before steps of the test run step.
        afterStep:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: The after steps of the test run step.
        status:
          allOf:
          - $ref: '#/components/schemas/StepRunStatus'
          description: The status of the test run step.
        statusReason:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status reason of the test run step.
        runStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The run start time of the test run step.
        runEndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The run end time of the test run step.
        stepRunSummary:
          allOf:
          - $ref: '#/components/schemas/StepRunSummary'
          description: The step run summary of the test run step.
      required:
      - stepName
      - testRunId
      - status
      - runStartTime
    GetTestSuiteRequest:
      type: object
      properties:
        testSuiteId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The ID of the test suite.
        testSuiteVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version of the test suite.
      required:
      - testSuiteId
    GetTestSuiteResponse:
      type: object
      properties:
        testSuiteId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The response ID of the test suite.
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the test suite.
        latestVersion:
          allOf:
          - $ref: '#/components/schemas/TestSuiteLatestVersion'
          description: The latest version of the test suite.
        testSuiteVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version of the test suite.
        status:
          allOf:
          - $ref: '#/components/schemas/TestSuiteLifecycle'
          description: The status of the test suite.
        statusReason:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status reason of the test suite.
        testSuiteArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The test suite Amazon Resource Name (ARN).
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The creation time of the test suite.
        lastUpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The last update time of the test suite.
        description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The description of the test suite.
        beforeSteps:
          allOf:
          - $ref: '#/components/schemas/StepList'
          description: The before steps of the test suite.
        afterSteps:
          allOf:
          - $ref: '#/components/schemas/StepList'
          description: The after steps of the test suite.
        testCases:
          allOf:
          - $ref: '#/components/schemas/TestCases'
          description: The test cases of the test suite.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags of the test suite.
      required:
      - testSuiteId
      - name
      - latestVersion
      - testSuiteVersion
      - testSuiteArn
      - creationTime
      - lastUpdateTime
      - beforeSteps
      - afterSteps
      - testCases
    IdempotencyTokenString:
      type: string
      pattern: ^[A-Za-z0-9\-]{1,64}$
    Identifier:
      type: string
      pattern: ^[A-Za-z0-9:/\-]{1,100}$
    Input:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/InputFile'
        description: |-
          The file in the input.
      description: |-
        Specifies the input.
    InputFile:
      type: object
      properties:
        sourceLocation:
          allOf:
          - $ref: '#/components/schemas/Variable'
          description: The source location of the input file.
        targetLocation:
          allOf:
          - $ref: '#/components/schemas/Variable'
          description: The target location of the input file.
        fileMetadata:
          allOf:
          - $ref: '#/components/schemas/FileMetadata'
          description: The file metadata of the input file.
      required:
      - sourceLocation
      - targetLocation
      - fileMetadata
      description: Specifies the input file.
    InternalServerException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        retryAfterSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of seconds to retry the query.
      required:
      - message
      description: An unexpected error occurred during the processing of the request.
    ListTagsForResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource.
      required:
      - resourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags of the resource.
      required:
      - tags
    ListTestCasesRequest:
      type: object
      properties:
        testCaseIds:
          allOf:
          - $ref: '#/components/schemas/TestCaseIdList'
          description: The IDs of the test cases.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The next token of the test cases.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum results of the test case.
    ListTestCasesResponse:
      type: object
      properties:
        testCases:
          allOf:
          - $ref: '#/components/schemas/TestCaseSummaryList'
          description: The test cases in an application.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The next token in test cases.
      required:
      - testCases
    ListTestConfigurationsRequest:
      type: object
      properties:
        testConfigurationIds:
          allOf:
          - $ref: '#/components/schemas/TestConfigurationIdList'
          description: The configuration IDs of the test configurations.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The next token for the test configurations.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum results of the test configuration.
    ListTestConfigurationsResponse:
      type: object
      properties:
        testConfigurations:
          allOf:
          - $ref: '#/components/schemas/TestConfigurationList'
          description: The test configurations.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The next token in the test configurations.
      required:
      - testConfigurations
    ListTestRunStepsRequest:
      type: object
      properties:
        testRunId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The test run ID of the test run steps.
        testCaseId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The test case ID of the test run steps.
        testSuiteId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The test suite ID of the test run steps.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token from a previous step to retrieve the next page of
            results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of test run steps to return in one page
            of results.
      required:
      - testRunId
    ListTestRunStepsResponse:
      type: object
      properties:
        testRunSteps:
          allOf:
          - $ref: '#/components/schemas/TestRunStepSummaryList'
          description: The test run steps of the response query.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token from a previous request to retrieve the next page
            of results.
      required:
      - testRunSteps
    ListTestRunTestCasesRequest:
      type: object
      properties:
        testRunId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The test run ID of the test cases.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token from a previous request to retrieve the next page
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of test run test cases to return in one
            page of results.
      required:
      - testRunId
    ListTestRunTestCasesResponse:
      type: object
      properties:
        testRunTestCases:
          allOf:
          - $ref: '#/components/schemas/TestCaseRunSummaryList'
          description: The test run of the test cases.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token from a previous request to retrieve the next page
            of results.
      required:
      - testRunTestCases
    ListTestRunsRequest:
      type: object
      properties:
        testSuiteId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The test suite ID of the test runs.
        testRunIds:
          allOf:
          - $ref: '#/components/schemas/TestRunIdList'
          description: The test run IDs of the test runs.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token from the previous request to retrieve the next page
            of test run results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of test runs to return in one page of results.
    ListTestRunsResponse:
      type: object
      properties:
        testRuns:
          allOf:
          - $ref: '#/components/schemas/TestRunSummaryList'
          description: The test runs of the response query.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token from the previous request to retrieve the next page
            of results.
      required:
      - testRuns
    ListTestSuitesRequest:
      type: object
      properties:
        testSuiteIds:
          allOf:
          - $ref: '#/components/schemas/TestSuiteIdList'
          description: The suite ID of the test suites.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token from a previous request to retrieve the next page
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of test suites to return in one page of
            results.
    ListTestSuitesResponse:
      type: object
      properties:
        testSuites:
          allOf:
          - $ref: '#/components/schemas/TestSuiteList'
          description: The test suites returned with the response query.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token from a previous request to retrieve the next page
            of test suites results.
      required:
      - testSuites
    M2ManagedActionProperties:
      type: object
      properties:
        forceStop:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Force stops the AWS Mainframe Modernization managed action
            properties.
        importDataSetLocation:
          allOf:
          - $ref: '#/components/schemas/Variable'
          description: The import data set location of the AWS Mainframe Modernization
            managed action properties.
      description: Specifies the AWS Mainframe Modernization managed action properties.
    M2ManagedActionType:
      type: string
      enum:
      - Configure
      - Deconfigure
    M2ManagedApplication:
      type: object
      properties:
        applicationId:
          allOf:
          - $ref: '#/components/schemas/Variable'
          description: The application ID of the AWS Mainframe Modernization managed
            application.
        runtime:
          allOf:
          - $ref: '#/components/schemas/M2ManagedRuntime'
          description: The runtime of the AWS Mainframe Modernization managed application.
        vpcEndpointServiceName:
          allOf:
          - $ref: '#/components/schemas/Variable'
          description: The VPC endpoint service name of the AWS Mainframe Modernization
            managed application.
        listenerPort:
          allOf:
          - $ref: '#/components/schemas/Variable'
          description: The listener port of the AWS Mainframe Modernization managed
            application.
      required:
      - applicationId
      - runtime
      description: Specifies the AWS Mainframe Modernization managed application.
    M2ManagedApplicationAction:
      type: object
      properties:
        resource:
          allOf:
          - $ref: '#/components/schemas/Variable'
          description: The resource of the AWS Mainframe Modernization managed application
            action.
        actionType:
          allOf:
          - $ref: '#/components/schemas/M2ManagedActionType'
          description: The action type of the AWS Mainframe Modernization managed
            application action.
        properties:
          allOf:
          - $ref: '#/components/schemas/M2ManagedActionProperties'
          description: The properties of the AWS Mainframe Modernization managed application
            action.
      required:
      - resource
      - actionType
      description: Specifies the AWS Mainframe Modernization managed application action.
    M2ManagedApplicationStepInput:
      type: object
      properties:
        applicationId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The application ID of the AWS Mainframe Modernization managed
            application step input.
        runtime:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The runtime of the AWS Mainframe Modernization managed application
            step input.
        vpcEndpointServiceName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The VPC endpoint service name of the AWS Mainframe Modernization
            managed application step input.
        listenerPort:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The listener port of the AWS Mainframe Modernization managed
            application step input.
        actionType:
          allOf:
          - $ref: '#/components/schemas/M2ManagedActionType'
          description: The action type of the AWS Mainframe Modernization managed
            application step input.
        properties:
          allOf:
          - $ref: '#/components/schemas/M2ManagedActionProperties'
          description: The properties of the AWS Mainframe Modernization managed application
            step input.
      required:
      - applicationId
      - runtime
      - actionType
      description: Specifies the AWS Mainframe Modernization managed application step
        input.
    M2ManagedApplicationStepOutput:
      type: object
      properties:
        importDataSetSummary:
          allOf:
          - $ref: '#/components/schemas/Properties'
          description: The import data set summary of the AWS Mainframe Modernization
            managed application step output.
      description: Specifies the AWS Mainframe Modernization managed application step
        output.
    M2ManagedApplicationStepSummary:
      type: object
      properties:
        stepInput:
          allOf:
          - $ref: '#/components/schemas/M2ManagedApplicationStepInput'
          description: The step input of the AWS Mainframe Modernization managed application
            step summary.
        stepOutput:
          allOf:
          - $ref: '#/components/schemas/M2ManagedApplicationStepOutput'
          description: The step output of the AWS Mainframe Modernization managed
            application step summary.
      required:
      - stepInput
      description: Specifies the AWS Mainframe Modernization managed application step
        summary.
    M2ManagedApplicationSummary:
      type: object
      properties:
        applicationId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The application ID of the AWS Mainframe Modernization managed
            application summary.
        runtime:
          allOf:
          - $ref: '#/components/schemas/M2ManagedRuntime'
          description: The runtime of the AWS Mainframe Modernization managed application
            summary.
        listenerPort:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The listener port of the AWS Mainframe Modernization managed
            application summary.
      required:
      - applicationId
      - runtime
      description: Specifies the AWS Mainframe Modernization managed application summary.
    M2ManagedRuntime:
      type: string
      enum:
      - MicroFocus
    M2NonManagedActionType:
      type: string
      enum:
      - Configure
      - Deconfigure
    M2NonManagedApplication:
      type: object
      properties:
        vpcEndpointServiceName:
          allOf:
          - $ref: '#/components/schemas/Variable'
          description: The VPC endpoint service name of the AWS Mainframe Modernization
            non-managed application.
        listenerPort:
          allOf:
          - $ref: '#/components/schemas/Variable'
          description: The listener port of the AWS Mainframe Modernization non-managed
            application.
        runtime:
          allOf:
          - $ref: '#/components/schemas/M2NonManagedRuntime'
          description: The runtime of the AWS Mainframe Modernization non-managed
            application.
        webAppName:
          allOf:
          - $ref: '#/components/schemas/Variable'
          description: The web application name of the AWS Mainframe Modernization
            non-managed application.
      required:
      - vpcEndpointServiceName
      - listenerPort
      - runtime
      description: Specifies the AWS Mainframe Modernization non-managed application.
    M2NonManagedApplicationAction:
      type: object
      properties:
        resource:
          allOf:
          - $ref: '#/components/schemas/Variable'
          description: The resource of the AWS Mainframe Modernization non-managed
            application action.
        actionType:
          allOf:
          - $ref: '#/components/schemas/M2NonManagedActionType'
          description: The action type of the AWS Mainframe Modernization non-managed
            application action.
      required:
      - resource
      - actionType
      description: Specifies the AWS Mainframe Modernization non-managed application
        action.
    M2NonManagedApplicationStepInput:
      type: object
      properties:
        vpcEndpointServiceName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The VPC endpoint service name of the AWS Mainframe Modernization
            non-managed application step input.
        listenerPort:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The listener port of the AWS Mainframe Modernization non-managed
            application step input.
        runtime:
          allOf:
          - $ref: '#/components/schemas/M2NonManagedRuntime'
          description: The runtime of the AWS Mainframe Modernization non-managed
            application step input.
        webAppName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The web app name of the AWS Mainframe Modernization non-managed
            application step input.
        actionType:
          allOf:
          - $ref: '#/components/schemas/M2NonManagedActionType'
          description: The action type of the AWS Mainframe Modernization non-managed
            application step input.
      required:
      - vpcEndpointServiceName
      - listenerPort
      - runtime
      - actionType
      description: Specifies the AWS Mainframe Modernization non-managed application
        step input.
    M2NonManagedApplicationStepOutput:
      type: object
      properties: {}
      description: Specifies the AWS Mainframe Modernization non-managed application
        step output.
    M2NonManagedApplicationStepSummary:
      type: object
      properties:
        stepInput:
          allOf:
          - $ref: '#/components/schemas/M2NonManagedApplicationStepInput'
          description: The step input of the AWS Mainframe Modernization non-managed
            application step summary.
        stepOutput:
          allOf:
          - $ref: '#/components/schemas/M2NonManagedApplicationStepOutput'
          description: The step output of the AWS Mainframe Modernization non-managed
            application step summary.
      required:
      - stepInput
      description: Specifies the AWS Mainframe Modernization non-managed application
        step summary.
    M2NonManagedApplicationSummary:
      type: object
      properties:
        vpcEndpointServiceName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The VPC endpoint service name of the AWS Mainframe Modernization
            non-managed application summary.
        listenerPort:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The listener port of the AWS Mainframe Modernization non-managed
            application summary.
        runtime:
          allOf:
          - $ref: '#/components/schemas/M2NonManagedRuntime'
          description: The runtime of the AWS Mainframe Modernization non-managed
            application summary.
        webAppName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The web application name of the AWS Mainframe Modernization
            non-managed application summary.
      required:
      - vpcEndpointServiceName
      - listenerPort
      - runtime
      description: Specifies the AWS Mainframe Modernization non-managed application
        summary.
    M2NonManagedRuntime:
      type: string
      enum:
      - BluAge
    MainframeAction:
      type: object
      properties:
        resource:
          allOf:
          - $ref: '#/components/schemas/Variable'
          description: The resource of the mainframe action.
        actionType:
          allOf:
          - $ref: '#/components/schemas/MainframeActionType'
          description: The action type of the mainframe action.
        properties:
          allOf:
          - $ref: '#/components/schemas/MainframeActionProperties'
          description: The properties of the mainframe action.
      required:
      - resource
      - actionType
      description: Specifies the mainframe action.
    MainframeActionProperties:
      type: object
      properties:
        dmsTaskArn:
          allOf:
          - $ref: '#/components/schemas/Variable'
          description: The DMS task ARN of the mainframe action properties.
      description: Specifies the mainframe action properties.
    MainframeActionSummary:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/BatchSummary'
        description: |-
          The batch of the mainframe action summary.
      - allOf:
        - $ref: '#/components/schemas/TN3270Summary'
        description: |-
          The tn3270 port of the mainframe action summary.
      description: |-
        Specifies the mainframe action summary.
    MainframeActionType:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/Batch'
        description: |-
          The batch of the mainframe action type.
      - allOf:
        - $ref: '#/components/schemas/TN3270'
        description: |-
          The tn3270 port of the mainframe action type.
      description: |-
        Specifies the mainframe action type.
    MainframeResourceSummary:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/M2ManagedApplicationSummary'
        description: |-
          The AWS Mainframe Modernization managed application in the mainframe resource summary.
      - allOf:
        - $ref: '#/components/schemas/M2NonManagedApplicationSummary'
        description: |-
          The AWS Mainframe Modernization non-managed application in the mainframe resource summary.
      description: |-
        Specifies the mainframe resource summary.
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    NextToken:
      type: string
      pattern: ^\S{1,2000}$
    Output:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/OutputFile'
        description: |-
          The file of the output.
      description: |-
        Specifies an output.
    OutputFile:
      type: object
      properties:
        fileLocation:
          allOf:
          - $ref: '#/components/schemas/S3Uri'
          description: The file location of the output file.
      description: Specifies an output file.
    Properties:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    Resource:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the resource.
        type:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The type of the resource.
      required:
      - name
      - type
      description: Specifies a resource.
    ResourceAction:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/M2ManagedApplicationAction'
        description: |-
          The AWS Mainframe Modernization managed application action of the resource action.
      - allOf:
        - $ref: '#/components/schemas/M2NonManagedApplicationAction'
        description: |-
          The AWS Mainframe Modernization non-managed application action of the resource action.
      - allOf:
        - $ref: '#/components/schemas/CloudFormationAction'
        description: |-
          The CloudFormation action of the resource action.
      description: |-
        Specifies a resource action.
    ResourceActionSummary:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/CloudFormationStepSummary'
        description: |-
          The CloudFormation template of the resource action summary.
      - allOf:
        - $ref: '#/components/schemas/M2ManagedApplicationStepSummary'
        description: |-
          The AWS Mainframe Modernization managed application of the resource action summary.
      - allOf:
        - $ref: '#/components/schemas/M2NonManagedApplicationStepSummary'
        description: |-
          The AWS Mainframe Modernization non-managed application of the resource action summary.
      description: |-
        Specifies the resource action summary.
    ResourceDescription:
      type: string
      minLength: 0
      maxLength: 1000
    ResourceList:
      type: array
      items:
        $ref: '#/components/schemas/Resource'
    ResourceName:
      type: string
      pattern: ^[A-Za-z][A-Za-z0-9_\-]{1,59}$
    ResourceNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        resourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The resource ID of the resource not found.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The resource type of the resource not found.
      required:
      - message
      description: The specified resource was not found.
    ResourceType:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/CloudFormation'
        description: |-
          The CloudFormation template of the resource type.
      - allOf:
        - $ref: '#/components/schemas/M2ManagedApplication'
        description: |-
          The AWS Mainframe Modernization managed application of the resource type.
      - allOf:
        - $ref: '#/components/schemas/M2NonManagedApplication'
        description: |-
          The AWS Mainframe Modernization non-managed application of the resource type.
      description: |-
        Specifies the resource type.
    S3Uri:
      type: string
      minLength: 0
      maxLength: 1024
    Script:
      type: object
      properties:
        scriptLocation:
          allOf:
          - $ref: '#/components/schemas/S3Uri'
          description: The script location of the scripts.
        type:
          allOf:
          - $ref: '#/components/schemas/ScriptType'
          description: The type of the scripts.
      required:
      - scriptLocation
      - type
      description: Specifies the script.
    ScriptSummary:
      type: object
      properties:
        scriptLocation:
          allOf:
          - $ref: '#/components/schemas/S3Uri'
          description: The script location of the script summary.
        type:
          allOf:
          - $ref: '#/components/schemas/ScriptType'
          description: The type of the script summary.
      required:
      - scriptLocation
      - type
      description: Specifies the scripts summary.
    ScriptType:
      type: string
      enum:
      - Selenium
    ServiceQuotaExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        resourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The resource ID of AWS Application Testing that exceeded the
            limit.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The resource type of AWS Application Testing that exceeded
            the limit.
        serviceCode:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The service code of AWS Application Testing that exceeded the
            limit.
        quotaCode:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The quote codes of AWS Application Testing that exceeded the
            limit.
      required:
      - message
      description: One or more quotas for AWS Application Testing exceeds the limit.
    ServiceSettings:
      type: object
      properties:
        kmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The KMS key ID of the service settings.
      description: Specifies the service settings.
    SourceDatabase:
      type: string
      enum:
      - z/OS-DB2
    SourceDatabaseMetadata:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/SourceDatabase'
          description: The type of the source database metadata.
        captureTool:
          allOf:
          - $ref: '#/components/schemas/CaptureTool'
          description: The capture tool of the source database metadata.
      required:
      - type
      - captureTool
      description: Specifies the source database metadata.
    StartTestRunRequest:
      type: object
      properties:
        testSuiteId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The test suite ID of the test run.
        testConfigurationId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The configuration ID of the test run.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyTokenString'
          description: The client token of the test run.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags of the test run.
      required:
      - testSuiteId
    StartTestRunResponse:
      type: object
      properties:
        testRunId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The test run ID of the test run.
        testRunStatus:
          allOf:
          - $ref: '#/components/schemas/TestRunStatus'
          description: The test run status of the test run.
      required:
      - testRunId
      - testRunStatus
    Step:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the step.
        description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The description of the step.
        action:
          allOf:
          - $ref: '#/components/schemas/StepAction'
          description: The action of the step.
      required:
      - name
      - action
      description: Defines a step.
    StepAction:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/ResourceAction'
        description: |-
          The resource action of the step action.
      - allOf:
        - $ref: '#/components/schemas/MainframeAction'
        description: |-
          The mainframe action of the step action.
      - allOf:
        - $ref: '#/components/schemas/CompareAction'
        description: |-
          The compare action of the step action.
      description: |-
        Specifies a step action.
    StepList:
      type: array
      items:
        $ref: '#/components/schemas/Step'
    StepRunStatus:
      type: string
      enum:
      - Success
      - Failed
      - Running
    StepRunSummary:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/MainframeActionSummary'
        description: |-
          The mainframe action of the step run summary.
      - allOf:
        - $ref: '#/components/schemas/CompareActionSummary'
        description: |-
          The compare action of the step run summary.
      - allOf:
        - $ref: '#/components/schemas/ResourceActionSummary'
        description: |-
          The resource action of the step run summary.
      description: |-
        Defines the step run summary.
    String100:
      type: string
      pattern: ^\S{1,100}$
    String50:
      type: string
      pattern: ^\S{1,50}$
    TN3270:
      type: object
      properties:
        script:
          allOf:
          - $ref: '#/components/schemas/Script'
          description: The script of the TN3270 protocol.
        exportDataSetNames:
          allOf:
          - $ref: '#/components/schemas/ExportDataSetNames'
          description: The data set names of the TN3270 protocol.
      required:
      - script
      description: Specifies the TN3270 protocol.
    TN3270StepInput:
      type: object
      properties:
        resource:
          allOf:
          - $ref: '#/components/schemas/MainframeResourceSummary'
          description: The resource of the TN3270 step input.
        script:
          allOf:
          - $ref: '#/components/schemas/ScriptSummary'
          description: The script of the TN3270 step input.
        exportDataSetNames:
          allOf:
          - $ref: '#/components/schemas/ExportDataSetNames'
          description: The export data set names of the TN3270 step input.
        properties:
          allOf:
          - $ref: '#/components/schemas/MainframeActionProperties'
          description: The properties of the TN3270 step input.
      required:
      - resource
      - script
      description: Specifies a TN3270 step input.
    TN3270StepOutput:
      type: object
      properties:
        dataSetExportLocation:
          allOf:
          - $ref: '#/components/schemas/S3Uri'
          description: The data set export location of the TN3270 step output.
        dmsOutputLocation:
          allOf:
          - $ref: '#/components/schemas/S3Uri'
          description: The output location of the TN3270 step output.
        dataSetDetails:
          allOf:
          - $ref: '#/components/schemas/DataSetList'
          description: The data set details of the TN3270 step output.
        scriptOutputLocation:
          allOf:
          - $ref: '#/components/schemas/S3Uri'
          description: The script output location of the TN3270 step output.
      required:
      - scriptOutputLocation
      description: Specifies a TN3270 step output.
    TN3270Summary:
      type: object
      properties:
        stepInput:
          allOf:
          - $ref: '#/components/schemas/TN3270StepInput'
          description: The step input of the TN3270 summary.
        stepOutput:
          allOf:
          - $ref: '#/components/schemas/TN3270StepOutput'
          description: The step output of the TN3270 summary.
      required:
      - stepInput
      description: Specifies a TN3270 summary.
    TagKey:
      type: string
      pattern: ^(?!aws:).+$
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the tag resource.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags of the resource.
      required:
      - resourceArn
      - tags
    TagResourceResponse:
      type: object
      properties: {}
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    TargetDatabase:
      type: string
      enum:
      - PostgreSQL
    TargetDatabaseMetadata:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/TargetDatabase'
          description: The type of the target database metadata.
        captureTool:
          allOf:
          - $ref: '#/components/schemas/CaptureTool'
          description: The capture tool of the target database metadata.
      required:
      - type
      - captureTool
      description: Specifies a target database metadata.
    TestCaseIdList:
      type: array
      items:
        $ref: '#/components/schemas/Identifier'
    TestCaseLatestVersion:
      type: object
      properties:
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version of the test case latest version.
        status:
          allOf:
          - $ref: '#/components/schemas/TestCaseLifecycle'
          description: The status of the test case latest version.
        statusReason:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status reason of the test case latest version.
      required:
      - version
      - status
      description: Specifies the latest version of a test case.
    TestCaseLifecycle:
      type: string
      enum:
      - Active
      - Deleting
    TestCaseList:
      type: array
      items:
        $ref: '#/components/schemas/Identifier'
    TestCaseRunStatus:
      type: string
      enum:
      - Success
      - Running
      - Failed
    TestCaseRunSummary:
      type: object
      properties:
        testCaseId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The test case id of the test case run summary.
        testCaseVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The test case version of the test case run summary.
        testRunId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The test run id of the test case run summary.
        status:
          allOf:
          - $ref: '#/components/schemas/TestCaseRunStatus'
          description: The status of the test case run summary.
        statusReason:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status reason of the test case run summary.
        runStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The run start time of the test case run summary.
        runEndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The run end time of the test case run summary.
      required:
      - testCaseId
      - testCaseVersion
      - testRunId
      - status
      - runStartTime
      description: Specifies the test case run summary.
    TestCaseRunSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/TestCaseRunSummary'
    TestCaseSummary:
      type: object
      properties:
        testCaseId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The test case ID of the test case summary.
        testCaseArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The test case Amazon Resource Name (ARN) of the test case summary.
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the test case summary.
        statusReason:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status reason of the test case summary.
        latestVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The latest version of the test case summary.
        status:
          allOf:
          - $ref: '#/components/schemas/TestCaseLifecycle'
          description: The status of the test case summary.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The creation time of the test case summary.
        lastUpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The last update time of the test case summary.
      required:
      - testCaseId
      - testCaseArn
      - name
      - latestVersion
      - status
      - creationTime
      - lastUpdateTime
      description: Specifies a test case summary.
    TestCaseSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/TestCaseSummary'
    TestCases:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/TestCaseList'
        description: |-
          The sequential of the test case.
      description: |-
        Specifies test cases.
    TestConfigurationIdList:
      type: array
      items:
        $ref: '#/components/schemas/Identifier'
    TestConfigurationLatestVersion:
      type: object
      properties:
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version of the test configuration latest version.
        status:
          allOf:
          - $ref: '#/components/schemas/TestConfigurationLifecycle'
          description: The status of the test configuration latest version.
        statusReason:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status reason of the test configuration latest version.
      required:
      - version
      - status
      description: Specifies the latest version of the test configuration.
    TestConfigurationLifecycle:
      type: string
      enum:
      - Active
      - Deleting
    TestConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/TestConfigurationSummary'
    TestConfigurationSummary:
      type: object
      properties:
        testConfigurationId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The test configuration ID of the test configuration summary.
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the test configuration summary.
        statusReason:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status reason of the test configuration summary.
        latestVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The latest version of the test configuration summary.
        testConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The test configuration ARN of the test configuration summary.
        status:
          allOf:
          - $ref: '#/components/schemas/TestConfigurationLifecycle'
          description: The status of the test configuration summary.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The creation time of the test configuration summary.
        lastUpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The last update time of the test configuration summary.
      required:
      - testConfigurationId
      - name
      - latestVersion
      - testConfigurationArn
      - status
      - creationTime
      - lastUpdateTime
      description: Specifies a test configuration summary.
    TestRunIdList:
      type: array
      items:
        $ref: '#/components/schemas/Identifier'
    TestRunStatus:
      type: string
      enum:
      - Success
      - Running
      - Failed
      - Deleting
    TestRunStepSummary:
      type: object
      properties:
        stepName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The step name of the test run step summary.
        testRunId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The test run ID of the test run step summary.
        testCaseId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The test case ID of the test run step summary.
        testCaseVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The test case version of the test run step summary.
        testSuiteId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The test suite ID of the test run step summary.
        testSuiteVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The test suite version of the test run step summary.
        beforeStep:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: The before step of the test run step summary.
        afterStep:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: The after step of the test run step summary.
        status:
          allOf:
          - $ref: '#/components/schemas/StepRunStatus'
          description: The status of the test run step summary.
        statusReason:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status reason of the test run step summary.
        runStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The run start time of the test run step summary.
        runEndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The run end time of the test run step summary.
      required:
      - stepName
      - testRunId
      - status
      - runStartTime
      description: Specifies a test run step summary.
    TestRunStepSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/TestRunStepSummary'
    TestRunSummary:
      type: object
      properties:
        testRunId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The test run ID of the test run summary.
        testRunArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The test run ARN of the test run summary.
        testSuiteId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The test suite ID of the test run summary.
        testSuiteVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The test suite version of the test run summary.
        testConfigurationId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The test configuration ID of the test run summary.
        testConfigurationVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The test configuration version of the test run summary.
        status:
          allOf:
          - $ref: '#/components/schemas/TestRunStatus'
          description: The status of the test run summary.
        statusReason:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status reason of the test run summary.
        runStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The run start time of the test run summary.
        runEndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The run end time of the test run summary.
      required:
      - testRunId
      - testRunArn
      - testSuiteId
      - testSuiteVersion
      - status
      - runStartTime
      description: Specifies a test run summary.
    TestRunSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/TestRunSummary'
    TestSuiteIdList:
      type: array
      items:
        $ref: '#/components/schemas/Identifier'
    TestSuiteLatestVersion:
      type: object
      properties:
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version of the test suite latest version.
        status:
          allOf:
          - $ref: '#/components/schemas/TestSuiteLifecycle'
          description: The status of the test suite latest version.
        statusReason:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status reason of the test suite latest version.
      required:
      - version
      - status
      description: Specifies the latest version of a test suite.
    TestSuiteLifecycle:
      type: string
      enum:
      - Creating
      - Updating
      - Active
      - Failed
      - Deleting
    TestSuiteList:
      type: array
      items:
        $ref: '#/components/schemas/TestSuiteSummary'
    TestSuiteSummary:
      type: object
      properties:
        testSuiteId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The test suite ID of the test suite summary.
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the test suite summary.
        statusReason:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status reason of the test suite summary.
        latestVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The latest version of the test suite summary.
        testSuiteArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The test suite Amazon Resource Name (ARN) of the test suite
            summary.
        status:
          allOf:
          - $ref: '#/components/schemas/TestSuiteLifecycle'
          description: The status of the test suite summary.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The creation time of the test suite summary.
        lastUpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The last update time of the test suite summary.
      required:
      - testSuiteId
      - name
      - latestVersion
      - testSuiteArn
      - status
      - creationTime
      - lastUpdateTime
      description: Specifies the test suite summary.
    ThrottlingException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        serviceCode:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The service code of requests that exceed the limit.
        quotaCode:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The quota code of requests that exceed the limit.
        retryAfterSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of seconds to retry after for requests that exceed
            the limit.
      required:
      - message
      description: The number of requests made exceeds the limit.
    UntagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource.
        tagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: The tag keys of the resource.
      required:
      - resourceArn
      - tagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateTestCaseRequest:
      type: object
      properties:
        testCaseId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The test case ID of the test case.
        description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The description of the test case.
        steps:
          allOf:
          - $ref: '#/components/schemas/StepList'
          description: The steps of the test case.
      required:
      - testCaseId
    UpdateTestCaseResponse:
      type: object
      properties:
        testCaseId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The test case ID of the test case.
        testCaseVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The test case version of the test case.
      required:
      - testCaseId
      - testCaseVersion
    UpdateTestConfigurationRequest:
      type: object
      properties:
        testConfigurationId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The test configuration ID of the test configuration.
        description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The description of the test configuration.
        resources:
          allOf:
          - $ref: '#/components/schemas/ResourceList'
          description: The resources of the test configuration.
        properties:
          allOf:
          - $ref: '#/components/schemas/Properties'
          description: The properties of the test configuration.
        serviceSettings:
          allOf:
          - $ref: '#/components/schemas/ServiceSettings'
          description: The service settings of the test configuration.
      required:
      - testConfigurationId
    UpdateTestConfigurationResponse:
      type: object
      properties:
        testConfigurationId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The configuration ID of the test configuration.
        testConfigurationVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The configuration version of the test configuration.
      required:
      - testConfigurationId
      - testConfigurationVersion
    UpdateTestSuiteRequest:
      type: object
      properties:
        testSuiteId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The test suite ID of the test suite.
        description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The description of the test suite.
        beforeSteps:
          allOf:
          - $ref: '#/components/schemas/StepList'
          description: The before steps for the test suite.
        afterSteps:
          allOf:
          - $ref: '#/components/schemas/StepList'
          description: The after steps of the test suite.
        testCases:
          allOf:
          - $ref: '#/components/schemas/TestCases'
          description: The test cases in the test suite.
      required:
      - testSuiteId
    UpdateTestSuiteResponse:
      type: object
      properties:
        testSuiteId:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The test suite ID of the test suite.
        testSuiteVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The test suite version of the test suite.
      required:
      - testSuiteId
    ValidationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        reason:
          allOf:
          - $ref: '#/components/schemas/ValidationExceptionReason'
          description: The reason for the validation exception.
        fieldList:
          allOf:
          - $ref: '#/components/schemas/ValidationExceptionFieldList'
          description: The field list of the validation exception.
      required:
      - message
      description: One or more parameter provided in the request is not valid.
    ValidationExceptionField:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the validation exception field.
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The message stating reason for why service validation failed.
      required:
      - name
      - message
      description: Specifies a validation exception field.
    ValidationExceptionFieldList:
      type: array
      items:
        $ref: '#/components/schemas/ValidationExceptionField'
    ValidationExceptionReason:
      type: string
      enum:
      - unknownOperation
      - cannotParse
      - fieldValidationFailed
      - other
    Variable:
      type: string
      pattern: ^\S{1,1000}$
    Version:
      type: integer
