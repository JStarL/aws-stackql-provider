openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: rum
  x-aws-serviceName: rum
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-05'
  version: '2018-05-10'
  title: CloudWatch RUM
  description: |-
    With Amazon CloudWatch RUM, you can perform real-user monitoring to collect client-side data about your web application performance from actual user sessions in real time. The data collected includes page load times, client-side errors, and user behavior. When you view this data, you can see it all aggregated together and also see breakdowns by the browsers and devices that your customers use.

    You can use the collected data to quickly identify and debug client-side performance issues. CloudWatch RUM helps you visualize anomalies in your application performance and find relevant debugging data such as error messages, stack traces, and user sessions. You can also use RUM to understand the range of end-user impact including the number of users, geolocations, and browsers used.
servers:
- description: The CloudWatch RUM regional endpoint
  url: https://rum.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths: {}
components:
  schemas:
    Alias:
      type: string
      minLength: 1
      maxLength: 255
    AppMonitorDomain:
      type: string
      pattern: ^(localhost)$|^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|(?=^[a-zA-Z0-9\.\*-]{4,253}$)(?!.*\.-)(?!.*-\.)(?!.*\.\.)(?!.*[^\.]{64,})^(\*\.)?(?![-\.\*])[^\*]{1,}\.(\*|(?!.*--)(?=.*[a-zA-Z])[^\*]{1,}[^\*-])$
      minLength: 1
      maxLength: 253
    AppMonitorDomainList:
      type: array
      items:
        $ref: '#/components/schemas/AppMonitorDomain'
    AppMonitorId:
      type: string
      pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
      minLength: 36
      maxLength: 36
    AppMonitorName:
      type: string
      pattern: ^(?!\.)[\.\-_#A-Za-z0-9]+$
      minLength: 1
      maxLength: 255
    AppMonitorSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/AppMonitorSummary'
    Arn:
      type: string
      pattern: arn:[^:]*:[^:]*:[^:]*:[^:]*:.*
    BatchCreateRumMetricDefinitionsErrors:
      type: array
      items:
        $ref: '#/components/schemas/BatchCreateRumMetricDefinitionsError'
    BatchDeleteRumMetricDefinitionsErrors:
      type: array
      items:
        $ref: '#/components/schemas/BatchDeleteRumMetricDefinitionsError'
    CustomEventsStatus:
      type: string
      enum:
      - ENABLED
      - DISABLED
    DeobfuscationS3Uri:
      type: string
      pattern: ^s3://[a-z0-9][-.a-z0-9]{1,61}(?:/[-!_*'().a-z0-9A-Z]+(?:/[-!_*'().a-z0-9A-Z]+)*)?/?$
      minLength: 1
      maxLength: 1024
    DeobfuscationStatus:
      type: string
      enum:
      - ENABLED
      - DISABLED
    DestinationArn:
      type: string
      pattern: arn:[^:]*:[^:]*:[^:]*:[^:]*:.*
      minLength: 0
      maxLength: 2048
    DimensionKey:
      type: string
      minLength: 1
      maxLength: 280
    DimensionKeysMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/DimensionName'
    DimensionName:
      type: string
      pattern: ^(?!:).*[^\s].*
      minLength: 1
      maxLength: 255
    EventData:
      type: string
    EventDataList:
      type: array
      items:
        $ref: '#/components/schemas/EventData'
    EventPattern:
      type: string
      minLength: 0
      maxLength: 4000
    FavoritePages:
      type: array
      items:
        type: string
    ISOTimestampString:
      type: string
      minLength: 19
      maxLength: 19
    IamRoleArn:
      type: string
      pattern: arn:[^:]*:[^:]*:[^:]*:[^:]*:.*
    IdentityPoolId:
      type: string
      pattern: '[\w-]+:[0-9a-f-]+'
      minLength: 1
      maxLength: 55
    JsonValue:
      type: string
    MaxQueryResults:
      type: integer
      default: 0
      minimum: 0
      maximum: 100
    MaxResultsInteger:
      type: integer
      minimum: 1
      maximum: 100
    MetricDefinitionId:
      type: string
      minLength: 1
      maxLength: 255
    MetricDefinitionIds:
      type: array
      items:
        $ref: '#/components/schemas/MetricDefinitionId'
    MetricDefinitions:
      type: array
      items:
        $ref: '#/components/schemas/MetricDefinition'
    MetricDefinitionsRequest:
      type: array
      items:
        $ref: '#/components/schemas/MetricDefinitionRequest'
    MetricDestination:
      type: string
      enum:
      - CloudWatch
      - Evidently
    MetricDestinationSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/MetricDestinationSummary'
    MetricName:
      type: string
      minLength: 1
      maxLength: 255
    Namespace:
      type: string
      pattern: '[a-zA-Z0-9-._/#:]+$'
      minLength: 1
      maxLength: 237
    Pages:
      type: array
      items:
        $ref: '#/components/schemas/Url'
    PolicyRevisionId:
      type: string
      minLength: 1
      maxLength: 255
    QueryFilterKey:
      type: string
    QueryFilterValue:
      type: string
    QueryFilterValueList:
      type: array
      items:
        $ref: '#/components/schemas/QueryFilterValue'
    QueryFilters:
      type: array
      items:
        $ref: '#/components/schemas/QueryFilter'
    QueryTimestamp:
      type: integer
      format: int64
      default: 0
    RumEventList:
      type: array
      items:
        $ref: '#/components/schemas/RumEvent'
    SessionSampleRate:
      type: number
      format: double
      default: 0
      minimum: 0
      maximum: 1
    StateEnum:
      type: string
      enum:
      - CREATED
      - DELETING
      - ACTIVE
    TagKey:
      type: string
      pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    Telemetries:
      type: array
      items:
        $ref: '#/components/schemas/Telemetry'
    Telemetry:
      type: string
      enum:
      - errors
      - performance
      - http
    Token:
      type: string
    UnitLabel:
      type: string
      minLength: 1
      maxLength: 256
    Url:
      type: string
      pattern: https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_\+.~#?&*//=]*)
      minLength: 1
      maxLength: 1260
    ValueKey:
      type: string
      minLength: 1
      maxLength: 280
