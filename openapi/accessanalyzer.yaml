openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: accessanalyzer
  x-aws-serviceName: accessanalyzer
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2019-11-01'
  title: Access Analyzer
  description: |-
    Identity and Access Management Access Analyzer helps you to set, verify, and refine your IAM policies by providing a suite of capabilities. Its features include findings for external and unused access, basic and custom policy checks for validating policies, and policy generation to generate fine-grained policies. To start using IAM Access Analyzer to identify external or unused access, you first need to create an analyzer.

    **External access analyzers** help identify potential risks of accessing resources by enabling you to identify any resource policies that grant access to an external principal. It does this by using logic-based reasoning to analyze resource-based policies in your Amazon Web Services environment. An external principal can be another Amazon Web Services account, a root user, an IAM user or role, a federated user, an Amazon Web Services service, or an anonymous user. You can also use IAM Access Analyzer to preview public and cross-account access to your resources before deploying permissions changes.

    **Unused access analyzers** help identify potential identity access risks by enabling you to identify unused IAM roles, unused access keys, unused console passwords, and IAM principals with unused service and action-level permissions.

    Beyond findings, IAM Access Analyzer provides basic and custom policy checks to validate IAM policies before deploying permissions changes. You can use policy generation to refine permissions by attaching a policy generated using access activity logged in CloudTrail logs.

    This guide describes the IAM Access Analyzer operations that you can call programmatically. For general information about IAM Access Analyzer, see [Identity and Access Management Access Analyzer](https://docs.aws.amazon.com/IAM/latest/UserGuide/what-is-access-analyzer.html) in the **IAM User Guide**.
servers:
- description: The Access Analyzer regional endpoint
  url: https://access-analyzer.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /archive-rule:
    put:
      operationId: ApplyArchiveRule
      description: |-
        Retroactively applies the archive rule to existing findings that meet the archive rule criteria.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                analyzerArn:
                  $ref: '#/components/schemas/AnalyzerArn'
                ruleName:
                  $ref: '#/components/schemas/Name'
                clientToken:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Throttling limit exceeded error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Validation exception error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /policy/generation/{jobId}:
    put:
      operationId: CancelPolicyGeneration
      description: |-
        Cancels the requested policy generation.
      parameters:
      - name: jobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            Throttling limit exceeded error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Validation exception error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetGeneratedPolicy
      description: |-
        Retrieves the policy that was generated using `StartPolicyGeneration`.
      parameters:
      - name: jobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobId'
      - name: includeResourcePlaceholders
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Boolean'
      - name: includeServiceLevelTemplate
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Boolean'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            Throttling limit exceeded error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Validation exception error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /policy/check-access-not-granted:
    post:
      operationId: CheckAccessNotGranted
      description: |-
        Checks whether the specified access isn't allowed by a policy.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                policyDocument:
                  $ref: '#/components/schemas/AccessCheckPolicyDocument'
                access:
                  $ref: '#/components/schemas/AccessList'
                policyType:
                  $ref: '#/components/schemas/AccessCheckPolicyType'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            Validation exception error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            Throttling limit exceeded error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '422':
          description: |-
            The specified entity could not be processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
  /policy/check-no-new-access:
    post:
      operationId: CheckNoNewAccess
      description: |-
        Checks whether new access is allowed for an updated policy when compared to the existing policy.

        You can find examples for reference policies and learn how to set up and run a custom policy check for new access in the [IAM Access Analyzer custom policy checks samples](https://github.com/aws-samples/iam-access-analyzer-custom-policy-check-samples) repository on GitHub. The reference policies in this repository are meant to be passed to the `existingPolicyDocument` request parameter.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                newPolicyDocument:
                  $ref: '#/components/schemas/AccessCheckPolicyDocument'
                existingPolicyDocument:
                  $ref: '#/components/schemas/AccessCheckPolicyDocument'
                policyType:
                  $ref: '#/components/schemas/AccessCheckPolicyType'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            Validation exception error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            Throttling limit exceeded error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '422':
          description: |-
            The specified entity could not be processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
  /policy/check-no-public-access:
    post:
      operationId: CheckNoPublicAccess
      description: |-
        Checks whether a resource policy can grant public access to the specified resource type.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                policyDocument:
                  $ref: '#/components/schemas/AccessCheckPolicyDocument'
                resourceType:
                  $ref: '#/components/schemas/AccessCheckResourceType'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            Validation exception error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            Throttling limit exceeded error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '422':
          description: |-
            The specified entity could not be processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
  /access-preview:
    put:
      operationId: CreateAccessPreview
      description: |-
        Creates an access preview that allows you to preview IAM Access Analyzer findings for your resource before deploying resource permissions.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                analyzerArn:
                  $ref: '#/components/schemas/AnalyzerArn'
                configurations:
                  $ref: '#/components/schemas/ConfigurationsMap'
                clientToken:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            A conflict exception error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            Service quote met error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Throttling limit exceeded error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Validation exception error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListAccessPreviews
      description: |-
        Retrieves a list of access previews for the specified analyzer.
      parameters:
      - name: analyzerArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/AnalyzerArn'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Token'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Throttling limit exceeded error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Validation exception error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /analyzer:
    put:
      operationId: CreateAnalyzer
      description: |-
        Creates an analyzer for your account.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                analyzerName:
                  $ref: '#/components/schemas/Name'
                type:
                  $ref: '#/components/schemas/Type'
                archiveRules:
                  $ref: '#/components/schemas/InlineArchiveRulesList'
                tags:
                  $ref: '#/components/schemas/TagsMap'
                clientToken:
                  $ref: '#/components/schemas/String'
                configuration:
                  $ref: '#/components/schemas/AnalyzerConfiguration'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            A conflict exception error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            Service quote met error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Throttling limit exceeded error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Validation exception error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListAnalyzers
      description: |-
        Retrieves a list of analyzers.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Token'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Integer'
      - name: type
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Type'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            Throttling limit exceeded error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Validation exception error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /analyzer/{analyzerName}/archive-rule:
    put:
      operationId: CreateArchiveRule
      description: |-
        Creates an archive rule for the specified analyzer. Archive rules automatically archive new findings that meet the criteria you define when you create the rule.

        To learn about filter keys that you can use to create an archive rule, see [IAM Access Analyzer filter keys](https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-filter-keys.html) in the **IAM User Guide**.
      parameters:
      - name: analyzerName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Name'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ruleName:
                  $ref: '#/components/schemas/Name'
                filter:
                  $ref: '#/components/schemas/FilterCriteriaMap'
                clientToken:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            A conflict exception error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            Service quote met error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Throttling limit exceeded error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Validation exception error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListArchiveRules
      description: |-
        Retrieves a list of archive rules created for the specified analyzer.
      parameters:
      - name: analyzerName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Name'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Token'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            Throttling limit exceeded error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Validation exception error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /analyzer/{analyzerName}:
    delete:
      operationId: DeleteAnalyzer
      description: |-
        Deletes the specified analyzer. When you delete an analyzer, IAM Access Analyzer is disabled for the account or organization in the current or specific Region. All findings that were generated by the analyzer are deleted. You cannot undo this action.
      parameters:
      - name: analyzerName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Name'
      - name: clientToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Throttling limit exceeded error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Validation exception error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetAnalyzer
      description: |-
        Retrieves information about the specified analyzer.
      parameters:
      - name: analyzerName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Name'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Throttling limit exceeded error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Validation exception error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: UpdateAnalyzer
      description: |-
        Modifies the configuration of an existing analyzer.
      parameters:
      - name: analyzerName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Name'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                configuration:
                  $ref: '#/components/schemas/AnalyzerConfiguration'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            A conflict exception error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Throttling limit exceeded error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Validation exception error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /analyzer/{analyzerName}/archive-rule/{ruleName}:
    delete:
      operationId: DeleteArchiveRule
      description: |-
        Deletes the specified archive rule.
      parameters:
      - name: analyzerName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Name'
      - name: ruleName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Name'
      - name: clientToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Throttling limit exceeded error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Validation exception error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetArchiveRule
      description: |-
        Retrieves information about an archive rule.

        To learn about filter keys that you can use to create an archive rule, see [IAM Access Analyzer filter keys](https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-filter-keys.html) in the **IAM User Guide**.
      parameters:
      - name: analyzerName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Name'
      - name: ruleName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Name'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Throttling limit exceeded error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Validation exception error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: UpdateArchiveRule
      description: |-
        Updates the criteria and values for the specified archive rule.
      parameters:
      - name: analyzerName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Name'
      - name: ruleName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Name'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filter:
                  $ref: '#/components/schemas/FilterCriteriaMap'
                clientToken:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Throttling limit exceeded error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Validation exception error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /recommendation/{id}:
    post:
      operationId: GenerateFindingRecommendation
      description: |-
        Creates a recommendation for an unused permissions finding.
      parameters:
      - name: analyzerArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/AnalyzerArn'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            Throttling limit exceeded error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Validation exception error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetFindingRecommendation
      description: |-
        Retrieves information about a finding recommendation for the specified analyzer.
      parameters:
      - name: analyzerArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/AnalyzerArn'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Integer'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Token'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Throttling limit exceeded error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Validation exception error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /access-preview/{accessPreviewId}:
    get:
      operationId: GetAccessPreview
      description: |-
        Retrieves information about an access preview for the specified analyzer.
      parameters:
      - name: accessPreviewId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AccessPreviewId'
      - name: analyzerArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/AnalyzerArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Throttling limit exceeded error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Validation exception error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: ListAccessPreviewFindings
      description: |-
        Retrieves a list of access preview findings generated by the specified access preview.
      parameters:
      - name: accessPreviewId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AccessPreviewId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                analyzerArn:
                  $ref: '#/components/schemas/AnalyzerArn'
                filter:
                  $ref: '#/components/schemas/FilterCriteriaMap'
                nextToken:
                  $ref: '#/components/schemas/Token'
                maxResults:
                  $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            A conflict exception error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Throttling limit exceeded error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Validation exception error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /analyzed-resource:
    get:
      operationId: GetAnalyzedResource
      description: |-
        Retrieves information about a resource that was analyzed.
      parameters:
      - name: analyzerArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/AnalyzerArn'
      - name: resourceArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ResourceArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Throttling limit exceeded error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Validation exception error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: ListAnalyzedResources
      description: |-
        Retrieves a list of resources of the specified type that have been analyzed by the specified analyzer.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                analyzerArn:
                  $ref: '#/components/schemas/AnalyzerArn'
                resourceType:
                  $ref: '#/components/schemas/ResourceType'
                nextToken:
                  $ref: '#/components/schemas/Token'
                maxResults:
                  $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Throttling limit exceeded error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Validation exception error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /finding/{id}:
    get:
      operationId: GetFinding
      description: |-
        Retrieves information about the specified finding. GetFinding and GetFindingV2 both use `access-analyzer:GetFinding` in the `Action` element of an IAM policy statement. You must have permission to perform the `access-analyzer:GetFinding` action.
      parameters:
      - name: analyzerArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/AnalyzerArn'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FindingId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Throttling limit exceeded error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Validation exception error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /findingv2/{id}:
    get:
      operationId: GetFindingV2
      description: |-
        Retrieves information about the specified finding. GetFinding and GetFindingV2 both use `access-analyzer:GetFinding` in the `Action` element of an IAM policy statement. You must have permission to perform the `access-analyzer:GetFinding` action.
      parameters:
      - name: analyzerArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/AnalyzerArn'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FindingId'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Integer'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Token'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Throttling limit exceeded error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Validation exception error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /analyzer/findings/statistics:
    post:
      operationId: GetFindingsStatistics
      description: |-
        Retrieves a list of aggregated finding statistics for an external access or unused access analyzer.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                analyzerArn:
                  $ref: '#/components/schemas/AnalyzerArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Throttling limit exceeded error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Validation exception error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /finding:
    post:
      operationId: ListFindings
      description: |-
        Retrieves a list of findings generated by the specified analyzer. ListFindings and ListFindingsV2 both use `access-analyzer:ListFindings` in the `Action` element of an IAM policy statement. You must have permission to perform the `access-analyzer:ListFindings` action.

        To learn about filter keys that you can use to retrieve a list of findings, see [IAM Access Analyzer filter keys](https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-filter-keys.html) in the **IAM User Guide**.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                analyzerArn:
                  $ref: '#/components/schemas/AnalyzerArn'
                filter:
                  $ref: '#/components/schemas/FilterCriteriaMap'
                sort:
                  $ref: '#/components/schemas/SortCriteria'
                nextToken:
                  $ref: '#/components/schemas/Token'
                maxResults:
                  $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Throttling limit exceeded error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Validation exception error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: UpdateFindings
      description: |-
        Updates the status for the specified findings.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                analyzerArn:
                  $ref: '#/components/schemas/AnalyzerArn'
                status:
                  $ref: '#/components/schemas/FindingStatusUpdate'
                ids:
                  $ref: '#/components/schemas/FindingIdList'
                resourceArn:
                  $ref: '#/components/schemas/ResourceArn'
                clientToken:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Throttling limit exceeded error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Validation exception error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /findingv2:
    post:
      operationId: ListFindingsV2
      description: |-
        Retrieves a list of findings generated by the specified analyzer. ListFindings and ListFindingsV2 both use `access-analyzer:ListFindings` in the `Action` element of an IAM policy statement. You must have permission to perform the `access-analyzer:ListFindings` action.

        To learn about filter keys that you can use to retrieve a list of findings, see [IAM Access Analyzer filter keys](https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-filter-keys.html) in the **IAM User Guide**.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                analyzerArn:
                  $ref: '#/components/schemas/AnalyzerArn'
                filter:
                  $ref: '#/components/schemas/FilterCriteriaMap'
                maxResults:
                  $ref: '#/components/schemas/Integer'
                nextToken:
                  $ref: '#/components/schemas/Token'
                sort:
                  $ref: '#/components/schemas/SortCriteria'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Throttling limit exceeded error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Validation exception error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /policy/generation:
    get:
      operationId: ListPolicyGenerations
      description: |-
        Lists all of the policy generations requested in the last seven days.
      parameters:
      - name: principalArn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PrincipalArn'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Integer'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Token'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            Throttling limit exceeded error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Validation exception error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: StartPolicyGeneration
      description: |-
        Starts the policy generation request.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                policyGenerationDetails:
                  $ref: '#/components/schemas/PolicyGenerationDetails'
                cloudTrailDetails:
                  $ref: '#/components/schemas/CloudTrailDetails'
                clientToken:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            A conflict exception error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            Service quote met error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Throttling limit exceeded error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Validation exception error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tags/{resourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Retrieves a list of tags applied to the specified resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Throttling limit exceeded error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Validation exception error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: TagResource
      description: |-
        Adds a tag to the specified resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/TagsMap'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Throttling limit exceeded error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Validation exception error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: UntagResource
      description: |-
        Removes a tag from the specified resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeys'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Throttling limit exceeded error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Validation exception error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /resource/scan:
    post:
      operationId: StartResourceScan
      description: |-
        Immediately starts a scan of the policies applied to the specified resource.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                analyzerArn:
                  $ref: '#/components/schemas/AnalyzerArn'
                resourceArn:
                  $ref: '#/components/schemas/ResourceArn'
                resourceOwnerAccount:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Throttling limit exceeded error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Validation exception error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /policy/validation:
    post:
      operationId: ValidatePolicy
      description: |-
        Requests the validation of a policy and returns a list of findings. The findings help you identify issues and provide actionable recommendations to resolve the issue and enable you to author functional policies that meet security best practices.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Integer'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Token'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                locale:
                  $ref: '#/components/schemas/Locale'
                policyDocument:
                  $ref: '#/components/schemas/PolicyDocument'
                policyType:
                  $ref: '#/components/schemas/PolicyType'
                validatePolicyResourceType:
                  $ref: '#/components/schemas/ValidatePolicyResourceType'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            Throttling limit exceeded error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Validation exception error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    Access:
      type: object
      properties:
        actions:
          allOf:
          - $ref: '#/components/schemas/ActionsList'
          description: A list of actions for the access permissions. Any strings that
            can be used as an action in an IAM policy can be used in the list of actions
            to check.
        resources:
          allOf:
          - $ref: '#/components/schemas/ResourcesList'
          description: A list of resources for the access permissions. Any strings
            that can be used as an Amazon Resource Name (ARN) in an IAM policy can
            be used in the list of resources to check. You can only use a wildcard
            in the portion of the ARN that specifies the resource ID.
      description: Contains information about actions and resources that define permissions
        to check against a policy.
    AccessCheckPolicyDocument:
      type: string
    AccessCheckPolicyType:
      type: string
      enum:
      - IDENTITY_POLICY
      - RESOURCE_POLICY
    AccessCheckResourceType:
      type: string
      enum:
      - AWS::DynamoDB::Table
      - AWS::DynamoDB::Stream
      - AWS::EFS::FileSystem
      - AWS::OpenSearchService::Domain
      - AWS::Kinesis::Stream
      - AWS::Kinesis::StreamConsumer
      - AWS::KMS::Key
      - AWS::Lambda::Function
      - AWS::S3::Bucket
      - AWS::S3::AccessPoint
      - AWS::S3Express::DirectoryBucket
      - AWS::S3::Glacier
      - AWS::S3Outposts::Bucket
      - AWS::S3Outposts::AccessPoint
      - AWS::SecretsManager::Secret
      - AWS::SNS::Topic
      - AWS::SQS::Queue
      - AWS::IAM::AssumeRolePolicyDocument
      - AWS::S3Tables::TableBucket
      - AWS::ApiGateway::RestApi
      - AWS::CodeArtifact::Domain
      - AWS::Backup::BackupVault
      - AWS::CloudTrail::Dashboard
      - AWS::CloudTrail::EventDataStore
      - AWS::S3Tables::Table
      - AWS::S3Express::AccessPoint
    AccessDeniedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: You do not have sufficient access to perform this action.
    AccessList:
      type: array
      items:
        $ref: '#/components/schemas/Access'
    AccessPointArn:
      type: string
      pattern: ^arn:[^:]*:s3:[^:]*:[^:]*:accesspoint/.*$
    AccessPointPolicy:
      type: string
    AccessPreview:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/AccessPreviewId'
          description: The unique ID for the access preview.
        analyzerArn:
          allOf:
          - $ref: '#/components/schemas/AnalyzerArn'
          description: The ARN of the analyzer used to generate the access preview.
        configurations:
          allOf:
          - $ref: '#/components/schemas/ConfigurationsMap'
          description: A map of resource ARNs for the proposed resource configuration.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the access preview was created.
        status:
          allOf:
          - $ref: '#/components/schemas/AccessPreviewStatus'
          description: "The status of the access preview.\n\n  * `Creating` \\- The\
            \ access preview creation is in progress.\n\n  * `Completed` \\- The access\
            \ preview is complete. You can preview findings for external access to\
            \ the resource.\n\n  * `Failed` \\- The access preview creation has failed."
        statusReason:
          allOf:
          - $ref: '#/components/schemas/AccessPreviewStatusReason'
          description: 'Provides more details about the current status of the access
            preview.


            For example, if the creation of the access preview fails, a `Failed` status
            is returned. This failure can be due to an internal issue with the analysis
            or due to an invalid resource configuration.'
      required:
      - id
      - analyzerArn
      - configurations
      - createdAt
      - status
      description: Contains information about an access preview.
    AccessPreviewFinding:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/AccessPreviewFindingId'
          description: The ID of the access preview finding. This ID uniquely identifies
            the element in the list of access preview findings and is not related
            to the finding ID in Access Analyzer.
        existingFindingId:
          allOf:
          - $ref: '#/components/schemas/FindingId'
          description: The existing ID of the finding in IAM Access Analyzer, provided
            only for existing findings.
        existingFindingStatus:
          allOf:
          - $ref: '#/components/schemas/FindingStatus'
          description: The existing status of the finding, provided only for existing
            findings.
        principal:
          allOf:
          - $ref: '#/components/schemas/PrincipalMap'
          description: The external principal that has access to a resource within
            the zone of trust.
        action:
          allOf:
          - $ref: '#/components/schemas/ActionList'
          description: The action in the analyzed policy statement that an external
            principal has permission to perform.
        condition:
          allOf:
          - $ref: '#/components/schemas/ConditionKeyMap'
          description: The condition in the analyzed policy statement that resulted
            in a finding.
        resource:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The resource that an external principal has access to. This
            is the resource associated with the access preview.
        isPublic:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether the policy that generated the finding allows
            public access to the resource.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The type of the resource that can be accessed in the finding.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the access preview finding was created.
        changeType:
          allOf:
          - $ref: '#/components/schemas/FindingChangeType'
          description: "Provides context on how the access preview finding compares\
            \ to existing access identified in IAM Access Analyzer.\n\n  * `New` \\\
            - The finding is for newly-introduced access.\n\n  * `Unchanged` \\- The\
            \ preview finding is an existing finding that would remain unchanged.\n\
            \n  * `Changed` \\- The preview finding is an existing finding with a\
            \ change in status.\n\nFor example, a `Changed` finding with preview status\
            \ `Resolved` and existing status `Active` indicates the existing `Active`\
            \ finding would become `Resolved` as a result of the proposed permissions\
            \ change."
        status:
          allOf:
          - $ref: '#/components/schemas/FindingStatus'
          description: The preview status of the finding. This is what the status
            of the finding would be after permissions deployment. For example, a `Changed`
            finding with preview status `Resolved` and existing status `Active` indicates
            the existing `Active` finding would become `Resolved` as a result of the
            proposed permissions change.
        resourceOwnerAccount:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Web Services account ID that owns the resource.
            For most Amazon Web Services resources, the owning account is the account
            in which the resource was created.
        error:
          allOf:
          - $ref: '#/components/schemas/String'
          description: An error.
        sources:
          allOf:
          - $ref: '#/components/schemas/FindingSourceList'
          description: The sources of the finding. This indicates how the access that
            generated the finding is granted. It is populated for Amazon S3 bucket
            findings.
        resourceControlPolicyRestriction:
          allOf:
          - $ref: '#/components/schemas/ResourceControlPolicyRestriction'
          description: The type of restriction applied to the finding by the resource
            owner with an Organizations resource control policy (RCP).
      required:
      - id
      - resourceType
      - createdAt
      - changeType
      - status
      - resourceOwnerAccount
      description: An access preview finding generated by the access preview.
    AccessPreviewFindingId:
      type: string
    AccessPreviewFindingsList:
      type: array
      items:
        $ref: '#/components/schemas/AccessPreviewFinding'
    AccessPreviewId:
      type: string
      pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
    AccessPreviewStatus:
      type: string
      enum:
      - COMPLETED
      - CREATING
      - FAILED
    AccessPreviewStatusReason:
      type: object
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/AccessPreviewStatusReasonCode'
          description: The reason code for the current status of the access preview.
      required:
      - code
      description: Provides more details about the current status of the access preview.
        For example, if the creation of the access preview fails, a `Failed` status
        is returned. This failure can be due to an internal issue with the analysis
        or due to an invalid proposed resource configuration.
    AccessPreviewStatusReasonCode:
      type: string
      enum:
      - INTERNAL_ERROR
      - INVALID_CONFIGURATION
    AccessPreviewSummary:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/AccessPreviewId'
          description: The unique ID for the access preview.
        analyzerArn:
          allOf:
          - $ref: '#/components/schemas/AnalyzerArn'
          description: The ARN of the analyzer used to generate the access preview.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the access preview was created.
        status:
          allOf:
          - $ref: '#/components/schemas/AccessPreviewStatus'
          description: "The status of the access preview.\n\n  * `Creating` \\- The\
            \ access preview creation is in progress.\n\n  * `Completed` \\- The access\
            \ preview is complete and previews the findings for external access to\
            \ the resource.\n\n  * `Failed` \\- The access preview creation has failed."
        statusReason:
          $ref: '#/components/schemas/AccessPreviewStatusReason'
      required:
      - id
      - analyzerArn
      - createdAt
      - status
      description: Contains a summary of information about an access preview.
    AccessPreviewsList:
      type: array
      items:
        $ref: '#/components/schemas/AccessPreviewSummary'
    AccountAggregations:
      type: array
      items:
        $ref: '#/components/schemas/FindingAggregationAccountDetails'
    AccountIdsList:
      type: array
      items:
        type: string
    AclCanonicalId:
      type: string
    AclGrantee:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/AclCanonicalId'
        description: |-
          The value specified is the canonical user ID of an Amazon Web Services account.
      - allOf:
        - $ref: '#/components/schemas/AclUri'
        description: |-
          Used for granting permissions to a predefined group.
      description: |-
        You specify each grantee as a type-value pair using one of these types. You can specify only one type of grantee. For more information, see [PutBucketAcl](https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketAcl.html).
    AclPermission:
      type: string
      enum:
      - READ
      - WRITE
      - READ_ACP
      - WRITE_ACP
      - FULL_CONTROL
    AclUri:
      type: string
    Action:
      type: string
    ActionList:
      type: array
      items:
        type: string
    ActionsList:
      type: array
      items:
        $ref: '#/components/schemas/Action'
    AnalysisRule:
      type: object
      properties:
        exclusions:
          allOf:
          - $ref: '#/components/schemas/AnalysisRuleCriteriaList'
          description: A list of rules for the analyzer containing criteria to exclude
            from analysis. Entities that meet the rule criteria will not generate
            findings.
      description: Contains information about analysis rules for the analyzer. Analysis
        rules determine which entities will generate findings based on the criteria
        you define when you create the rule.
    AnalysisRuleCriteria:
      type: object
      properties:
        accountIds:
          allOf:
          - $ref: '#/components/schemas/AccountIdsList'
          description: A list of Amazon Web Services account IDs to apply to the analysis
            rule criteria. The accounts cannot include the organization analyzer owner
            account. Account IDs can only be applied to the analysis rule criteria
            for organization-level analyzers. The list cannot include more than 2,000
            account IDs.
        resourceTags:
          allOf:
          - $ref: '#/components/schemas/TagsList'
          description: 'An array of key-value pairs to match for your resources. You
            can use the set of Unicode letters, digits, whitespace, `_`, `.`, `/`,
            `=`, `+`, and `-`.


            For the tag key, you can specify a value that is 1 to 128 characters in
            length and cannot be prefixed with `aws:`.


            For the tag value, you can specify a value that is 0 to 256 characters
            in length. If the specified tag value is 0 characters, the rule is applied
            to all principals with the specified tag key.'
      description: The criteria for an analysis rule for an analyzer. The criteria
        determine which entities will generate findings.
    AnalysisRuleCriteriaList:
      type: array
      items:
        $ref: '#/components/schemas/AnalysisRuleCriteria'
    AnalyzedResource:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The ARN of the resource that was analyzed.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The type of the resource that was analyzed.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the finding was created.
        analyzedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the resource was analyzed.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the finding was updated.
        isPublic:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether the policy that generated the finding grants
            public access to the resource.
        actions:
          allOf:
          - $ref: '#/components/schemas/ActionList'
          description: The actions that an external principal is granted permission
            to use by the policy that generated the finding.
        sharedVia:
          allOf:
          - $ref: '#/components/schemas/SharedViaList'
          description: Indicates how the access that generated the finding is granted.
            This is populated for Amazon S3 bucket findings.
        status:
          allOf:
          - $ref: '#/components/schemas/FindingStatus'
          description: The current status of the finding generated from the analyzed
            resource.
        resourceOwnerAccount:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Web Services account ID that owns the resource.
        error:
          allOf:
          - $ref: '#/components/schemas/String'
          description: An error message.
      required:
      - resourceArn
      - resourceType
      - createdAt
      - analyzedAt
      - updatedAt
      - isPublic
      - resourceOwnerAccount
      description: Contains details about the analyzed resource.
    AnalyzedResourceSummary:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The ARN of the analyzed resource.
        resourceOwnerAccount:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Web Services account ID that owns the resource.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The type of resource that was analyzed.
      required:
      - resourceArn
      - resourceOwnerAccount
      - resourceType
      description: Contains the ARN of the analyzed resource.
    AnalyzedResourcesList:
      type: array
      items:
        $ref: '#/components/schemas/AnalyzedResourceSummary'
    AnalyzerArn:
      type: string
      pattern: ^[^:]*:[^:]*:[^:]*:[^:]*:[^:]*:analyzer/.{1,255}$
    AnalyzerConfiguration:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/UnusedAccessConfiguration'
        description: |-
          Specifies the configuration of an unused access analyzer for an Amazon Web Services organization or account.
      description: |-
        Contains information about the configuration of an analyzer for an Amazon Web Services organization or account.
    AnalyzerStatus:
      type: string
      enum:
      - ACTIVE
      - CREATING
      - DISABLED
      - FAILED
    AnalyzerSummary:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AnalyzerArn'
          description: The ARN of the analyzer.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the analyzer.
        type:
          allOf:
          - $ref: '#/components/schemas/Type'
          description: The type of analyzer, which corresponds to the zone of trust
            chosen for the analyzer.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: A timestamp for the time at which the analyzer was created.
        lastResourceAnalyzed:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The resource that was most recently analyzed by the analyzer.
        lastResourceAnalyzedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the most recently analyzed resource was analyzed.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          description: The tags added to the analyzer.
        status:
          allOf:
          - $ref: '#/components/schemas/AnalyzerStatus'
          description: The status of the analyzer. An `Active` analyzer successfully
            monitors supported resources and generates new findings. The analyzer
            is `Disabled` when a user action, such as removing trusted access for
            Identity and Access Management Access Analyzer from Organizations, causes
            the analyzer to stop generating new findings. The status is `Creating`
            when the analyzer creation is in progress and `Failed` when the analyzer
            creation has failed.
        statusReason:
          allOf:
          - $ref: '#/components/schemas/StatusReason'
          description: The `statusReason` provides more details about the current
            status of the analyzer. For example, if the creation for the analyzer
            fails, a `Failed` status is returned. For an analyzer with organization
            as the type, this failure can be due to an issue with creating the service-linked
            roles required in the member accounts of the Amazon Web Services organization.
        configuration:
          allOf:
          - $ref: '#/components/schemas/AnalyzerConfiguration'
          description: Specifies whether the analyzer is an external access or unused
            access analyzer.
      required:
      - arn
      - name
      - type
      - createdAt
      - status
      description: Contains information about the analyzer.
    AnalyzersList:
      type: array
      items:
        $ref: '#/components/schemas/AnalyzerSummary'
    ApplyArchiveRuleRequest:
      type: object
      properties:
        analyzerArn:
          allOf:
          - $ref: '#/components/schemas/AnalyzerArn'
          description: The Amazon resource name (ARN) of the analyzer.
        ruleName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the rule to apply.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A client token.
      required:
      - analyzerArn
      - ruleName
      description: Retroactively applies an archive rule.
    ArchiveRuleSummary:
      type: object
      properties:
        ruleName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the archive rule.
        filter:
          allOf:
          - $ref: '#/components/schemas/FilterCriteriaMap'
          description: A filter used to define the archive rule.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the archive rule was created.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the archive rule was last updated.
      required:
      - ruleName
      - filter
      - createdAt
      - updatedAt
      description: Contains information about an archive rule. Archive rules automatically
        archive new findings that meet the criteria you define when you create the
        rule.
    ArchiveRulesList:
      type: array
      items:
        $ref: '#/components/schemas/ArchiveRuleSummary'
    CancelPolicyGenerationRequest:
      type: object
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The `JobId` that is returned by the `StartPolicyGeneration`
            operation. The `JobId` can be used with `GetGeneratedPolicy` to retrieve
            the generated policies or used with `CancelPolicyGeneration` to cancel
            the policy generation request.
      required:
      - jobId
    CancelPolicyGenerationResponse:
      type: object
      properties: {}
    CheckAccessNotGrantedRequest:
      type: object
      properties:
        policyDocument:
          allOf:
          - $ref: '#/components/schemas/AccessCheckPolicyDocument'
          description: The JSON policy document to use as the content for the policy.
        access:
          allOf:
          - $ref: '#/components/schemas/AccessList'
          description: An access object containing the permissions that shouldn't
            be granted by the specified policy. If only actions are specified, IAM
            Access Analyzer checks for access to peform at least one of the actions
            on any resource in the policy. If only resources are specified, then IAM
            Access Analyzer checks for access to perform any action on at least one
            of the resources. If both actions and resources are specified, IAM Access
            Analyzer checks for access to perform at least one of the specified actions
            on at least one of the specified resources.
        policyType:
          allOf:
          - $ref: '#/components/schemas/AccessCheckPolicyType'
          description: 'The type of policy. Identity policies grant permissions to
            IAM principals. Identity policies include managed and inline policies
            for IAM roles, users, and groups.


            Resource policies grant permissions on Amazon Web Services resources.
            Resource policies include trust policies for IAM roles and bucket policies
            for Amazon S3 buckets.'
      required:
      - policyDocument
      - access
      - policyType
    CheckAccessNotGrantedResponse:
      type: object
      properties:
        result:
          allOf:
          - $ref: '#/components/schemas/CheckAccessNotGrantedResult'
          description: The result of the check for whether the access is allowed.
            If the result is `PASS`, the specified policy doesn't allow any of the
            specified permissions in the access object. If the result is `FAIL`, the
            specified policy might allow some or all of the permissions in the access
            object.
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The message indicating whether the specified access is allowed.
        reasons:
          allOf:
          - $ref: '#/components/schemas/ReasonSummaryList'
          description: A description of the reasoning of the result.
    CheckAccessNotGrantedResult:
      type: string
      enum:
      - PASS
      - FAIL
    CheckNoNewAccessRequest:
      type: object
      properties:
        newPolicyDocument:
          allOf:
          - $ref: '#/components/schemas/AccessCheckPolicyDocument'
          description: The JSON policy document to use as the content for the updated
            policy.
        existingPolicyDocument:
          allOf:
          - $ref: '#/components/schemas/AccessCheckPolicyDocument'
          description: The JSON policy document to use as the content for the existing
            policy.
        policyType:
          allOf:
          - $ref: '#/components/schemas/AccessCheckPolicyType'
          description: 'The type of policy to compare. Identity policies grant permissions
            to IAM principals. Identity policies include managed and inline policies
            for IAM roles, users, and groups.


            Resource policies grant permissions on Amazon Web Services resources.
            Resource policies include trust policies for IAM roles and bucket policies
            for Amazon S3 buckets. You can provide a generic input such as identity
            policy or resource policy or a specific input such as managed policy or
            Amazon S3 bucket policy.'
      required:
      - newPolicyDocument
      - existingPolicyDocument
      - policyType
    CheckNoNewAccessResponse:
      type: object
      properties:
        result:
          allOf:
          - $ref: '#/components/schemas/CheckNoNewAccessResult'
          description: The result of the check for new access. If the result is `PASS`,
            no new access is allowed by the updated policy. If the result is `FAIL`,
            the updated policy might allow new access.
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The message indicating whether the updated policy allows new
            access.
        reasons:
          allOf:
          - $ref: '#/components/schemas/ReasonSummaryList'
          description: A description of the reasoning of the result.
    CheckNoNewAccessResult:
      type: string
      enum:
      - PASS
      - FAIL
    CheckNoPublicAccessRequest:
      type: object
      properties:
        policyDocument:
          allOf:
          - $ref: '#/components/schemas/AccessCheckPolicyDocument'
          description: The JSON policy document to evaluate for public access.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/AccessCheckResourceType'
          description: 'The type of resource to evaluate for public access. For example,
            to check for public access to Amazon S3 buckets, you can choose `AWS::S3::Bucket`
            for the resource type.


            For resource types not supported as valid values, IAM Access Analyzer
            will return an error.'
      required:
      - policyDocument
      - resourceType
    CheckNoPublicAccessResponse:
      type: object
      properties:
        result:
          allOf:
          - $ref: '#/components/schemas/CheckNoPublicAccessResult'
          description: The result of the check for public access to the specified
            resource type. If the result is `PASS`, the policy doesn't allow public
            access to the specified resource type. If the result is `FAIL`, the policy
            might allow public access to the specified resource type.
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The message indicating whether the specified policy allows
            public access to resources.
        reasons:
          allOf:
          - $ref: '#/components/schemas/ReasonSummaryList'
          description: A list of reasons why the specified resource policy grants
            public access for the resource type.
    CheckNoPublicAccessResult:
      type: string
      enum:
      - PASS
      - FAIL
    CloudTrailArn:
      type: string
      pattern: ^arn:[^:]*:cloudtrail:[^:]*:[^:]*:trail/.{1,576}$
    CloudTrailDetails:
      type: object
      properties:
        trails:
          allOf:
          - $ref: '#/components/schemas/TrailList'
          description: A `Trail` object that contains settings for a trail.
        accessRole:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The ARN of the service role that IAM Access Analyzer uses to
            access your CloudTrail trail and service last accessed information.
        startTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The start of the time range for which IAM Access Analyzer reviews
            your CloudTrail events. Events with a timestamp before this time are not
            considered to generate a policy.
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The end of the time range for which IAM Access Analyzer reviews
            your CloudTrail events. Events with a timestamp after this time are not
            considered to generate a policy. If this is not included in the request,
            the default value is the current time.
      required:
      - trails
      - accessRole
      - startTime
      description: Contains information about CloudTrail access.
    CloudTrailProperties:
      type: object
      properties:
        trailProperties:
          allOf:
          - $ref: '#/components/schemas/TrailPropertiesList'
          description: A `TrailProperties` object that contains settings for trail
            properties.
        startTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The start of the time range for which IAM Access Analyzer reviews
            your CloudTrail events. Events with a timestamp before this time are not
            considered to generate a policy.
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The end of the time range for which IAM Access Analyzer reviews
            your CloudTrail events. Events with a timestamp after this time are not
            considered to generate a policy. If this is not included in the request,
            the default value is the current time.
      required:
      - trailProperties
      - startTime
      - endTime
      description: Contains information about CloudTrail access.
    ConditionKeyMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    Configuration:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/EbsSnapshotConfiguration'
        description: |-
          The access control configuration is for an Amazon EBS volume snapshot.
      - allOf:
        - $ref: '#/components/schemas/EcrRepositoryConfiguration'
        description: |-
          The access control configuration is for an Amazon ECR repository.
      - allOf:
        - $ref: '#/components/schemas/IamRoleConfiguration'
        description: |-
          The access control configuration is for an IAM role.
      - allOf:
        - $ref: '#/components/schemas/EfsFileSystemConfiguration'
        description: |-
          The access control configuration is for an Amazon EFS file system.
      - allOf:
        - $ref: '#/components/schemas/KmsKeyConfiguration'
        description: |-
          The access control configuration is for a KMS key.
      - allOf:
        - $ref: '#/components/schemas/RdsDbClusterSnapshotConfiguration'
        description: |-
          The access control configuration is for an Amazon RDS DB cluster snapshot.
      - allOf:
        - $ref: '#/components/schemas/RdsDbSnapshotConfiguration'
        description: |-
          The access control configuration is for an Amazon RDS DB snapshot.
      - allOf:
        - $ref: '#/components/schemas/SecretsManagerSecretConfiguration'
        description: |-
          The access control configuration is for a Secrets Manager secret.
      - allOf:
        - $ref: '#/components/schemas/S3BucketConfiguration'
        description: |-
          The access control configuration is for an Amazon S3 bucket.
      - allOf:
        - $ref: '#/components/schemas/SnsTopicConfiguration'
        description: |-
          The access control configuration is for an Amazon SNS topic
      - allOf:
        - $ref: '#/components/schemas/SqsQueueConfiguration'
        description: |-
          The access control configuration is for an Amazon SQS queue.
      - allOf:
        - $ref: '#/components/schemas/S3ExpressDirectoryBucketConfiguration'
        description: |-
          The access control configuration is for an Amazon S3 directory bucket.
      - allOf:
        - $ref: '#/components/schemas/DynamodbStreamConfiguration'
        description: |-
          The access control configuration is for a DynamoDB stream.
      - allOf:
        - $ref: '#/components/schemas/DynamodbTableConfiguration'
        description: |-
          The access control configuration is for a DynamoDB table or index.
      description: |-
        Access control configuration structures for your resource. You specify the configuration as a type-value pair. You can specify only one type of access control configuration.
    ConfigurationsMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Configuration'
    ConfigurationsMapKey:
      type: string
    ConflictException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        resourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the resource.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The resource type.
      required:
      - message
      - resourceId
      - resourceType
      description: A conflict exception error.
    CreateAccessPreviewRequest:
      type: object
      properties:
        analyzerArn:
          allOf:
          - $ref: '#/components/schemas/AnalyzerArn'
          description: The [ARN of the account analyzer](https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html#permission-resources)
            used to generate the access preview. You can only create an access preview
            for analyzers with an `Account` type and `Active` status.
        configurations:
          allOf:
          - $ref: '#/components/schemas/ConfigurationsMap'
          description: Access control configuration for your resource that is used
            to generate the access preview. The access preview includes findings for
            external access allowed to the resource with the proposed access control
            configuration. The configuration must contain exactly one element.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A client token.
      required:
      - analyzerArn
      - configurations
    CreateAccessPreviewResponse:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/AccessPreviewId'
          description: The unique ID for the access preview.
      required:
      - id
    CreateAnalyzerRequest:
      type: object
      properties:
        analyzerName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the analyzer to create.
        type:
          allOf:
          - $ref: '#/components/schemas/Type'
          description: The type of analyzer to create. Only `ACCOUNT`, `ORGANIZATION`,
            `ACCOUNT_UNUSED_ACCESS`, and `ORGANIZATION_UNUSED_ACCESS` analyzers are
            supported. You can create only one analyzer per account per Region. You
            can create up to 5 analyzers per organization per Region.
        archiveRules:
          allOf:
          - $ref: '#/components/schemas/InlineArchiveRulesList'
          description: Specifies the archive rules to add for the analyzer. Archive
            rules automatically archive findings that meet the criteria you define
            for the rule.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          description: 'An array of key-value pairs to apply to the analyzer. You
            can use the set of Unicode letters, digits, whitespace, `_`, `.`, `/`,
            `=`, `+`, and `-`.


            For the tag key, you can specify a value that is 1 to 128 characters in
            length and cannot be prefixed with `aws:`.


            For the tag value, you can specify a value that is 0 to 256 characters
            in length.'
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A client token.
        configuration:
          allOf:
          - $ref: '#/components/schemas/AnalyzerConfiguration'
          description: Specifies the configuration of the analyzer. If the analyzer
            is an unused access analyzer, the specified scope of unused access is
            used for the configuration.
      required:
      - analyzerName
      - type
      description: Creates an analyzer.
    CreateAnalyzerResponse:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AnalyzerArn'
          description: The ARN of the analyzer that was created by the request.
      description: The response to the request to create an analyzer.
    CreateArchiveRuleRequest:
      type: object
      properties:
        analyzerName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the created analyzer.
        ruleName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the rule to create.
        filter:
          allOf:
          - $ref: '#/components/schemas/FilterCriteriaMap'
          description: The criteria for the rule.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A client token.
      required:
      - analyzerName
      - ruleName
      - filter
      description: Creates an archive rule.
    Criterion:
      type: object
      properties:
        eq:
          allOf:
          - $ref: '#/components/schemas/ValueList'
          description: An "equals" operator to match for the filter used to create
            the rule.
        neq:
          allOf:
          - $ref: '#/components/schemas/ValueList'
          description: A "not equals" operator to match for the filter used to create
            the rule.
        contains:
          allOf:
          - $ref: '#/components/schemas/ValueList'
          description: A "contains" operator to match for the filter used to create
            the rule.
        exists:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: An "exists" operator to match for the filter used to create
            the rule.
      description: The criteria to use in the filter that defines the archive rule.
        For more information on available filter keys, see [IAM Access Analyzer filter
        keys](https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-filter-keys.html).
    DeleteAnalyzerRequest:
      type: object
      properties:
        analyzerName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the analyzer to delete.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A client token.
      required:
      - analyzerName
      description: Deletes an analyzer.
    DeleteArchiveRuleRequest:
      type: object
      properties:
        analyzerName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the analyzer that associated with the archive rule
            to delete.
        ruleName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the rule to delete.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A client token.
      required:
      - analyzerName
      - ruleName
      description: Deletes an archive rule.
    DynamodbStreamConfiguration:
      type: object
      properties:
        streamPolicy:
          allOf:
          - $ref: '#/components/schemas/DynamodbStreamPolicy'
          description: The proposed resource policy defining who can access or manage
            the DynamoDB stream.
      description: "The proposed access control configuration for a DynamoDB stream.\
        \ You can propose a configuration for a new DynamoDB stream or an existing\
        \ DynamoDB stream that you own by specifying the policy for the DynamoDB stream.\
        \ For more information, see [PutResourcePolicy](https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_PutResourcePolicy.html).\n\
        \n  * If the configuration is for an existing DynamoDB stream and you do not\
        \ specify the DynamoDB policy, then the access preview uses the existing DynamoDB\
        \ policy for the stream.\n\n  * If the access preview is for a new resource\
        \ and you do not specify the policy, then the access preview assumes a DynamoDB\
        \ stream without a policy.\n\n  * To propose deletion of an existing DynamoDB\
        \ stream policy, you can specify an empty string for the DynamoDB policy."
    DynamodbStreamPolicy:
      type: string
    DynamodbTableConfiguration:
      type: object
      properties:
        tablePolicy:
          allOf:
          - $ref: '#/components/schemas/DynamodbTablePolicy'
          description: The proposed resource policy defining who can access or manage
            the DynamoDB table.
      description: "The proposed access control configuration for a DynamoDB table\
        \ or index. You can propose a configuration for a new DynamoDB table or index\
        \ or an existing DynamoDB table or index that you own by specifying the policy\
        \ for the DynamoDB table or index. For more information, see [PutResourcePolicy](https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_PutResourcePolicy.html).\n\
        \n  * If the configuration is for an existing DynamoDB table or index and\
        \ you do not specify the DynamoDB policy, then the access preview uses the\
        \ existing DynamoDB policy for the table or index.\n\n  * If the access preview\
        \ is for a new resource and you do not specify the policy, then the access\
        \ preview assumes a DynamoDB table without a policy.\n\n  * To propose deletion\
        \ of an existing DynamoDB table or index policy, you can specify an empty\
        \ string for the DynamoDB policy."
    DynamodbTablePolicy:
      type: string
    EbsGroup:
      type: string
    EbsGroupList:
      type: array
      items:
        $ref: '#/components/schemas/EbsGroup'
    EbsSnapshotConfiguration:
      type: object
      properties:
        userIds:
          allOf:
          - $ref: '#/components/schemas/EbsUserIdList'
          description: "The IDs of the Amazon Web Services accounts that have access\
            \ to the Amazon EBS volume snapshot.\n\n  * If the configuration is for\
            \ an existing Amazon EBS volume snapshot and you do not specify the `userIds`,\
            \ then the access preview uses the existing shared `userIds` for the snapshot.\n\
            \n  * If the access preview is for a new resource and you do not specify\
            \ the `userIds`, then the access preview considers the snapshot without\
            \ any `userIds`.\n\n  * To propose deletion of existing shared `accountIds`,\
            \ you can specify an empty list for `userIds`."
        groups:
          allOf:
          - $ref: '#/components/schemas/EbsGroupList'
          description: "The groups that have access to the Amazon EBS volume snapshot.\
            \ If the value `all` is specified, then the Amazon EBS volume snapshot\
            \ is public.\n\n  * If the configuration is for an existing Amazon EBS\
            \ volume snapshot and you do not specify the `groups`, then the access\
            \ preview uses the existing shared `groups` for the snapshot.\n\n  * If\
            \ the access preview is for a new resource and you do not specify the\
            \ `groups`, then the access preview considers the snapshot without any\
            \ `groups`.\n\n  * To propose deletion of existing shared `groups`, you\
            \ can specify an empty list for `groups`."
        kmsKeyId:
          allOf:
          - $ref: '#/components/schemas/EbsSnapshotDataEncryptionKeyId'
          description: "The KMS key identifier for an encrypted Amazon EBS volume\
            \ snapshot. The KMS key identifier is the key ARN, key ID, alias ARN,\
            \ or alias name for the KMS key.\n\n  * If the configuration is for an\
            \ existing Amazon EBS volume snapshot and you do not specify the `kmsKeyId`,\
            \ or you specify an empty string, then the access preview uses the existing\
            \ `kmsKeyId` of the snapshot.\n\n  * If the access preview is for a new\
            \ resource and you do not specify the `kmsKeyId`, the access preview considers\
            \ the snapshot as unencrypted."
      description: The proposed access control configuration for an Amazon EBS volume
        snapshot. You can propose a configuration for a new Amazon EBS volume snapshot
        or an Amazon EBS volume snapshot that you own by specifying the user IDs,
        groups, and optional KMS encryption key. For more information, see [ModifySnapshotAttribute](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifySnapshotAttribute.html).
    EbsSnapshotDataEncryptionKeyId:
      type: string
    EbsUserId:
      type: string
    EbsUserIdList:
      type: array
      items:
        $ref: '#/components/schemas/EbsUserId'
    EcrRepositoryConfiguration:
      type: object
      properties:
        repositoryPolicy:
          allOf:
          - $ref: '#/components/schemas/EcrRepositoryPolicy'
          description: The JSON repository policy text to apply to the Amazon ECR
            repository. For more information, see [Private repository policy examples](https://docs.aws.amazon.com/AmazonECR/latest/userguide/repository-policy-examples.html)
            in the _Amazon ECR User Guide_.
      description: "The proposed access control configuration for an Amazon ECR repository.\
        \ You can propose a configuration for a new Amazon ECR repository or an existing\
        \ Amazon ECR repository that you own by specifying the Amazon ECR policy.\
        \ For more information, see [Repository](https://docs.aws.amazon.com/AmazonECR/latest/APIReference/API_Repository.html).\n\
        \n  * If the configuration is for an existing Amazon ECR repository and you\
        \ do not specify the Amazon ECR policy, then the access preview uses the existing\
        \ Amazon ECR policy for the repository.\n\n  * If the access preview is for\
        \ a new resource and you do not specify the policy, then the access preview\
        \ assumes an Amazon ECR repository without a policy.\n\n  * To propose deletion\
        \ of an existing Amazon ECR repository policy, you can specify an empty string\
        \ for the Amazon ECR policy."
    EcrRepositoryPolicy:
      type: string
    EfsFileSystemConfiguration:
      type: object
      properties:
        fileSystemPolicy:
          allOf:
          - $ref: '#/components/schemas/EfsFileSystemPolicy'
          description: The JSON policy definition to apply to the Amazon EFS file
            system. For more information on the elements that make up a file system
            policy, see [Amazon EFS Resource-based policies](https://docs.aws.amazon.com/efs/latest/ug/access-control-overview.html#access-control-manage-access-intro-resource-policies).
      description: "The proposed access control configuration for an Amazon EFS file\
        \ system. You can propose a configuration for a new Amazon EFS file system\
        \ or an existing Amazon EFS file system that you own by specifying the Amazon\
        \ EFS policy. For more information, see [Using file systems in Amazon EFS](https://docs.aws.amazon.com/efs/latest/ug/using-fs.html).\n\
        \n  * If the configuration is for an existing Amazon EFS file system and you\
        \ do not specify the Amazon EFS policy, then the access preview uses the existing\
        \ Amazon EFS policy for the file system.\n\n  * If the access preview is for\
        \ a new resource and you do not specify the policy, then the access preview\
        \ assumes an Amazon EFS file system without a policy.\n\n  * To propose deletion\
        \ of an existing Amazon EFS file system policy, you can specify an empty string\
        \ for the Amazon EFS policy."
    EfsFileSystemPolicy:
      type: string
    ExternalAccessDetails:
      type: object
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/ActionList'
          description: The action in the analyzed policy statement that an external
            principal has permission to use.
        condition:
          allOf:
          - $ref: '#/components/schemas/ConditionKeyMap'
          description: The condition in the analyzed policy statement that resulted
            in an external access finding.
        isPublic:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether the external access finding is public.
        principal:
          allOf:
          - $ref: '#/components/schemas/PrincipalMap'
          description: The external principal that has access to a resource within
            the zone of trust.
        sources:
          allOf:
          - $ref: '#/components/schemas/FindingSourceList'
          description: The sources of the external access finding. This indicates
            how the access that generated the finding is granted. It is populated
            for Amazon S3 bucket findings.
        resourceControlPolicyRestriction:
          allOf:
          - $ref: '#/components/schemas/ResourceControlPolicyRestriction'
          description: The type of restriction applied to the finding by the resource
            owner with an Organizations resource control policy (RCP).
      required:
      - condition
      description: Contains information about an external access finding.
    ExternalAccessFindingsStatistics:
      type: object
      properties:
        resourceTypeStatistics:
          allOf:
          - $ref: '#/components/schemas/ResourceTypeStatisticsMap'
          description: The total number of active cross-account and public findings
            for each resource type of the specified external access analyzer.
        totalActiveFindings:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of active findings for the specified external access
            analyzer.
        totalArchivedFindings:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of archived findings for the specified external
            access analyzer.
        totalResolvedFindings:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of resolved findings for the specified external
            access analyzer.
      description: Provides aggregate statistics about the findings for the specified
        external access analyzer.
    FilterCriteriaMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Criterion'
    Finding:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/FindingId'
          description: The ID of the finding.
        principal:
          allOf:
          - $ref: '#/components/schemas/PrincipalMap'
          description: The external principal that has access to a resource within
            the zone of trust.
        action:
          allOf:
          - $ref: '#/components/schemas/ActionList'
          description: The action in the analyzed policy statement that an external
            principal has permission to use.
        resource:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The resource that an external principal has access to.
        isPublic:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether the policy that generated the finding allows
            public access to the resource.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The type of the resource identified in the finding.
        condition:
          allOf:
          - $ref: '#/components/schemas/ConditionKeyMap'
          description: The condition in the analyzed policy statement that resulted
            in a finding.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the finding was generated.
        analyzedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the resource was analyzed.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the finding was updated.
        status:
          allOf:
          - $ref: '#/components/schemas/FindingStatus'
          description: The current status of the finding.
        resourceOwnerAccount:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Web Services account ID that owns the resource.
        error:
          allOf:
          - $ref: '#/components/schemas/String'
          description: An error.
        sources:
          allOf:
          - $ref: '#/components/schemas/FindingSourceList'
          description: The sources of the finding. This indicates how the access that
            generated the finding is granted. It is populated for Amazon S3 bucket
            findings.
        resourceControlPolicyRestriction:
          allOf:
          - $ref: '#/components/schemas/ResourceControlPolicyRestriction'
          description: The type of restriction applied to the finding by the resource
            owner with an Organizations resource control policy (RCP).
      required:
      - id
      - resourceType
      - condition
      - createdAt
      - analyzedAt
      - updatedAt
      - status
      - resourceOwnerAccount
      description: Contains information about a finding.
    FindingAggregationAccountDetails:
      type: object
      properties:
        account:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the Amazon Web Services account for which unused
            access finding details are provided.
        numberOfActiveFindings:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of active unused access findings for the specified
            Amazon Web Services account.
        details:
          allOf:
          - $ref: '#/components/schemas/FindingAggregationAccountDetailsMap'
          description: Provides the number of active findings for each type of unused
            access for the specified Amazon Web Services account.
      description: Contains information about the findings for an Amazon Web Services
        account in an organization unused access analyzer.
    FindingAggregationAccountDetailsMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Integer'
    FindingChangeType:
      type: string
      enum:
      - CHANGED
      - NEW
      - UNCHANGED
    FindingDetails:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/ExternalAccessDetails'
        description: |-
          The details for an external access analyzer finding.
      - allOf:
        - $ref: '#/components/schemas/UnusedPermissionDetails'
        description: |-
          The details for an unused access analyzer finding with an unused permission finding type.
      - allOf:
        - $ref: '#/components/schemas/UnusedIamUserAccessKeyDetails'
        description: |-
          The details for an unused access analyzer finding with an unused IAM user access key finding type.
      - allOf:
        - $ref: '#/components/schemas/UnusedIamRoleDetails'
        description: |-
          The details for an unused access analyzer finding with an unused IAM role finding type.
      - allOf:
        - $ref: '#/components/schemas/UnusedIamUserPasswordDetails'
        description: |-
          The details for an unused access analyzer finding with an unused IAM user password finding type.
      description: |-
        Contains information about an external access or unused access finding. Only one parameter can be used in a `FindingDetails` object.
    FindingDetailsList:
      type: array
      items:
        $ref: '#/components/schemas/FindingDetails'
    FindingId:
      type: string
    FindingIdList:
      type: array
      items:
        $ref: '#/components/schemas/FindingId'
    FindingSource:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/FindingSourceType'
          description: Indicates the type of access that generated the finding.
        detail:
          allOf:
          - $ref: '#/components/schemas/FindingSourceDetail'
          description: Includes details about how the access that generated the finding
            is granted. This is populated for Amazon S3 bucket findings.
      required:
      - type
      description: The source of the finding. This indicates how the access that generated
        the finding is granted. It is populated for Amazon S3 bucket findings.
    FindingSourceDetail:
      type: object
      properties:
        accessPointArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the access point that generated the finding. The
            ARN format depends on whether the ARN represents an access point or a
            multi-region access point.
        accessPointAccount:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The account of the cross-account access point that generated
            the finding.
      description: Includes details about how the access that generated the finding
        is granted. This is populated for Amazon S3 bucket findings.
    FindingSourceList:
      type: array
      items:
        $ref: '#/components/schemas/FindingSource'
    FindingSourceType:
      type: string
      enum:
      - POLICY
      - BUCKET_ACL
      - S3_ACCESS_POINT
      - S3_ACCESS_POINT_ACCOUNT
    FindingStatus:
      type: string
      enum:
      - ACTIVE
      - ARCHIVED
      - RESOLVED
    FindingStatusUpdate:
      type: string
      enum:
      - ACTIVE
      - ARCHIVED
    FindingSummary:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/FindingId'
          description: The ID of the finding.
        principal:
          allOf:
          - $ref: '#/components/schemas/PrincipalMap'
          description: The external principal that has access to a resource within
            the zone of trust.
        action:
          allOf:
          - $ref: '#/components/schemas/ActionList'
          description: The action in the analyzed policy statement that an external
            principal has permission to use.
        resource:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The resource that the external principal has access to.
        isPublic:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether the finding reports a resource that has a
            policy that allows public access.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The type of the resource that the external principal has access
            to.
        condition:
          allOf:
          - $ref: '#/components/schemas/ConditionKeyMap'
          description: The condition in the analyzed policy statement that resulted
            in a finding.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the finding was created.
        analyzedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the resource-based policy that generated
            the finding was analyzed.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the finding was most recently updated.
        status:
          allOf:
          - $ref: '#/components/schemas/FindingStatus'
          description: The status of the finding.
        resourceOwnerAccount:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Web Services account ID that owns the resource.
        error:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The error that resulted in an Error finding.
        sources:
          allOf:
          - $ref: '#/components/schemas/FindingSourceList'
          description: The sources of the finding. This indicates how the access that
            generated the finding is granted. It is populated for Amazon S3 bucket
            findings.
        resourceControlPolicyRestriction:
          allOf:
          - $ref: '#/components/schemas/ResourceControlPolicyRestriction'
          description: The type of restriction applied to the finding by the resource
            owner with an Organizations resource control policy (RCP).
      required:
      - id
      - resourceType
      - condition
      - createdAt
      - analyzedAt
      - updatedAt
      - status
      - resourceOwnerAccount
      description: Contains information about a finding.
    FindingSummaryV2:
      type: object
      properties:
        analyzedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the resource-based policy or IAM entity that
            generated the finding was analyzed.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the finding was created.
        error:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The error that resulted in an Error finding.
        id:
          allOf:
          - $ref: '#/components/schemas/FindingId'
          description: The ID of the finding.
        resource:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The resource that the external principal has access to.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The type of the resource that the external principal has access
            to.
        resourceOwnerAccount:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Web Services account ID that owns the resource.
        status:
          allOf:
          - $ref: '#/components/schemas/FindingStatus'
          description: The status of the finding.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the finding was most recently updated.
        findingType:
          allOf:
          - $ref: '#/components/schemas/FindingType'
          description: The type of the external access or unused access finding.
      required:
      - analyzedAt
      - createdAt
      - id
      - resourceType
      - resourceOwnerAccount
      - status
      - updatedAt
      description: Contains information about a finding.
    FindingType:
      type: string
      enum:
      - ExternalAccess
      - UnusedIAMRole
      - UnusedIAMUserAccessKey
      - UnusedIAMUserPassword
      - UnusedPermission
    FindingsList:
      type: array
      items:
        $ref: '#/components/schemas/FindingSummary'
    FindingsListV2:
      type: array
      items:
        $ref: '#/components/schemas/FindingSummaryV2'
    FindingsStatistics:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/ExternalAccessFindingsStatistics'
        description: |-
          The aggregate statistics for an external access analyzer.
      - allOf:
        - $ref: '#/components/schemas/UnusedAccessFindingsStatistics'
        description: |-
          The aggregate statistics for an unused access analyzer.
      description: |-
        Contains information about the aggregate statistics for an external or unused access analyzer. Only one parameter can be used in a `FindingsStatistics` object.
    FindingsStatisticsList:
      type: array
      items:
        $ref: '#/components/schemas/FindingsStatistics'
    GenerateFindingRecommendationRequest:
      type: object
      properties:
        analyzerArn:
          allOf:
          - $ref: '#/components/schemas/AnalyzerArn'
          description: The [ARN of the analyzer](https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html#permission-resources)
            used to generate the finding recommendation.
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID for the finding recommendation.
      required:
      - analyzerArn
      - id
    GeneratedPolicy:
      type: object
      properties:
        policy:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The text to use as the content for the new policy. The policy
            is created using the [CreatePolicy](https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreatePolicy.html)
            action.
      required:
      - policy
      description: Contains the text for the generated policy.
    GeneratedPolicyList:
      type: array
      items:
        $ref: '#/components/schemas/GeneratedPolicy'
    GeneratedPolicyProperties:
      type: object
      properties:
        isComplete:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: This value is set to `true` if the generated policy contains
            all possible actions for a service that IAM Access Analyzer identified
            from the CloudTrail trail that you specified, and `false` otherwise.
        principalArn:
          allOf:
          - $ref: '#/components/schemas/PrincipalArn'
          description: The ARN of the IAM entity (user or role) for which you are
            generating a policy.
        cloudTrailProperties:
          allOf:
          - $ref: '#/components/schemas/CloudTrailProperties'
          description: Lists details about the `Trail` used to generated policy.
      required:
      - principalArn
      description: Contains the generated policy details.
    GeneratedPolicyResult:
      type: object
      properties:
        properties:
          allOf:
          - $ref: '#/components/schemas/GeneratedPolicyProperties'
          description: A `GeneratedPolicyProperties` object that contains properties
            of the generated policy.
        generatedPolicies:
          allOf:
          - $ref: '#/components/schemas/GeneratedPolicyList'
          description: The text to use as the content for the new policy. The policy
            is created using the [CreatePolicy](https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreatePolicy.html)
            action.
      required:
      - properties
      description: Contains the text for the generated policy and its details.
    GetAccessPreviewRequest:
      type: object
      properties:
        accessPreviewId:
          allOf:
          - $ref: '#/components/schemas/AccessPreviewId'
          description: The unique ID for the access preview.
        analyzerArn:
          allOf:
          - $ref: '#/components/schemas/AnalyzerArn'
          description: The [ARN of the analyzer](https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html#permission-resources)
            used to generate the access preview.
      required:
      - accessPreviewId
      - analyzerArn
    GetAccessPreviewResponse:
      type: object
      properties:
        accessPreview:
          allOf:
          - $ref: '#/components/schemas/AccessPreview'
          description: An object that contains information about the access preview.
      required:
      - accessPreview
    GetAnalyzedResourceRequest:
      type: object
      properties:
        analyzerArn:
          allOf:
          - $ref: '#/components/schemas/AnalyzerArn'
          description: The [ARN of the analyzer](https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html#permission-resources)
            to retrieve information from.
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The ARN of the resource to retrieve information about.
      required:
      - analyzerArn
      - resourceArn
      description: Retrieves an analyzed resource.
    GetAnalyzedResourceResponse:
      type: object
      properties:
        resource:
          allOf:
          - $ref: '#/components/schemas/AnalyzedResource'
          description: An `AnalyzedResource` object that contains information that
            IAM Access Analyzer found when it analyzed the resource.
      description: The response to the request.
    GetAnalyzerRequest:
      type: object
      properties:
        analyzerName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the analyzer retrieved.
      required:
      - analyzerName
      description: Retrieves an analyzer.
    GetAnalyzerResponse:
      type: object
      properties:
        analyzer:
          allOf:
          - $ref: '#/components/schemas/AnalyzerSummary'
          description: An `AnalyzerSummary` object that contains information about
            the analyzer.
      required:
      - analyzer
      description: The response to the request.
    GetArchiveRuleRequest:
      type: object
      properties:
        analyzerName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the analyzer to retrieve rules from.
        ruleName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the rule to retrieve.
      required:
      - analyzerName
      - ruleName
      description: Retrieves an archive rule.
    GetArchiveRuleResponse:
      type: object
      properties:
        archiveRule:
          $ref: '#/components/schemas/ArchiveRuleSummary'
      required:
      - archiveRule
      description: The response to the request.
    GetFindingRecommendationRequest:
      type: object
      properties:
        analyzerArn:
          allOf:
          - $ref: '#/components/schemas/AnalyzerArn'
          description: The [ARN of the analyzer](https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html#permission-resources)
            used to generate the finding recommendation.
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID for the finding recommendation.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of results to return in the response.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: A token used for pagination of results returned.
      required:
      - analyzerArn
      - id
    GetFindingRecommendationResponse:
      type: object
      properties:
        startedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the retrieval of the finding recommendation
            was started.
        completedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the retrieval of the finding recommendation
            was completed.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: A token used for pagination of results returned.
        error:
          allOf:
          - $ref: '#/components/schemas/RecommendationError'
          description: Detailed information about the reason that the retrieval of
            a recommendation for the finding failed.
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The ARN of the resource of the finding.
        recommendedSteps:
          allOf:
          - $ref: '#/components/schemas/RecommendedStepList'
          description: A group of recommended steps for the finding.
        recommendationType:
          allOf:
          - $ref: '#/components/schemas/RecommendationType'
          description: The type of recommendation for the finding.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: The status of the retrieval of the finding recommendation.
      required:
      - startedAt
      - resourceArn
      - recommendationType
      - status
    GetFindingRequest:
      type: object
      properties:
        analyzerArn:
          allOf:
          - $ref: '#/components/schemas/AnalyzerArn'
          description: The [ARN of the analyzer](https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html#permission-resources)
            that generated the finding.
        id:
          allOf:
          - $ref: '#/components/schemas/FindingId'
          description: The ID of the finding to retrieve.
      required:
      - analyzerArn
      - id
      description: Retrieves a finding.
    GetFindingResponse:
      type: object
      properties:
        finding:
          allOf:
          - $ref: '#/components/schemas/Finding'
          description: A `finding` object that contains finding details.
      description: The response to the request.
    GetFindingV2Request:
      type: object
      properties:
        analyzerArn:
          allOf:
          - $ref: '#/components/schemas/AnalyzerArn'
          description: The [ARN of the analyzer](https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html#permission-resources)
            that generated the finding.
        id:
          allOf:
          - $ref: '#/components/schemas/FindingId'
          description: The ID of the finding to retrieve.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of results to return in the response.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: A token used for pagination of results returned.
      required:
      - analyzerArn
      - id
    GetFindingV2Response:
      type: object
      properties:
        analyzedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the resource-based policy or IAM entity that
            generated the finding was analyzed.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the finding was created.
        error:
          allOf:
          - $ref: '#/components/schemas/String'
          description: An error.
        id:
          allOf:
          - $ref: '#/components/schemas/FindingId'
          description: The ID of the finding to retrieve.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: A token used for pagination of results returned.
        resource:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The resource that generated the finding.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The type of the resource identified in the finding.
        resourceOwnerAccount:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Tye Amazon Web Services account ID that owns the resource.
        status:
          allOf:
          - $ref: '#/components/schemas/FindingStatus'
          description: The status of the finding.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the finding was updated.
        findingDetails:
          allOf:
          - $ref: '#/components/schemas/FindingDetailsList'
          description: A localized message that explains the finding and provides
            guidance on how to address it.
        findingType:
          allOf:
          - $ref: '#/components/schemas/FindingType'
          description: The type of the finding. For external access analyzers, the
            type is `ExternalAccess`. For unused access analyzers, the type can be
            `UnusedIAMRole`, `UnusedIAMUserAccessKey`, `UnusedIAMUserPassword`, or
            `UnusedPermission`.
      required:
      - analyzedAt
      - createdAt
      - id
      - resourceType
      - resourceOwnerAccount
      - status
      - updatedAt
      - findingDetails
    GetFindingsStatisticsRequest:
      type: object
      properties:
        analyzerArn:
          allOf:
          - $ref: '#/components/schemas/AnalyzerArn'
          description: The [ARN of the analyzer](https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html#permission-resources)
            used to generate the statistics.
      required:
      - analyzerArn
    GetFindingsStatisticsResponse:
      type: object
      properties:
        findingsStatistics:
          allOf:
          - $ref: '#/components/schemas/FindingsStatisticsList'
          description: A group of external access or unused access findings statistics.
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the retrieval of the findings statistics
            was last updated. If the findings statistics have not been previously
            retrieved for the specified analyzer, this field will not be populated.
    GetGeneratedPolicyRequest:
      type: object
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The `JobId` that is returned by the `StartPolicyGeneration`
            operation. The `JobId` can be used with `GetGeneratedPolicy` to retrieve
            the generated policies or used with `CancelPolicyGeneration` to cancel
            the policy generation request.
        includeResourcePlaceholders:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'The level of detail that you want to generate. You can specify
            whether to generate policies with placeholders for resource ARNs for actions
            that support resource level granularity in policies.


            For example, in the resource section of a policy, you can receive a placeholder
            such as `"Resource":"arn:aws:s3:::${BucketName}"` instead of `"*"`.'
        includeServiceLevelTemplate:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'The level of detail that you want to generate. You can specify
            whether to generate service-level policies.


            IAM Access Analyzer uses `iam:servicelastaccessed` to identify services
            that have been used recently to create this service-level template.'
      required:
      - jobId
    GetGeneratedPolicyResponse:
      type: object
      properties:
        jobDetails:
          allOf:
          - $ref: '#/components/schemas/JobDetails'
          description: A `GeneratedPolicyDetails` object that contains details about
            the generated policy.
        generatedPolicyResult:
          allOf:
          - $ref: '#/components/schemas/GeneratedPolicyResult'
          description: A `GeneratedPolicyResult` object that contains the generated
            policies and associated details.
      required:
      - jobDetails
      - generatedPolicyResult
    GranteePrincipal:
      type: string
    IamRoleConfiguration:
      type: object
      properties:
        trustPolicy:
          allOf:
          - $ref: '#/components/schemas/IamTrustPolicy'
          description: The proposed trust policy for the IAM role.
      description: The proposed access control configuration for an IAM role. You
        can propose a configuration for a new IAM role or an existing IAM role that
        you own by specifying the trust policy. If the configuration is for a new
        IAM role, you must specify the trust policy. If the configuration is for an
        existing IAM role that you own and you do not propose the trust policy, the
        access preview uses the existing trust policy for the role. The proposed trust
        policy cannot be an empty string. For more information about role trust policy
        limits, see [IAM and STS quotas](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html).
    IamTrustPolicy:
      type: string
    InlineArchiveRule:
      type: object
      properties:
        ruleName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the rule.
        filter:
          allOf:
          - $ref: '#/components/schemas/FilterCriteriaMap'
          description: The condition and values for a criterion.
      required:
      - ruleName
      - filter
      description: An criterion statement in an archive rule. Each archive rule may
        have multiple criteria.
    InlineArchiveRulesList:
      type: array
      items:
        $ref: '#/components/schemas/InlineArchiveRule'
    InternalServerException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        retryAfterSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The seconds to wait to retry.
      required:
      - message
      description: Internal server error.
    InternetConfiguration:
      type: object
      properties: {}
      description: This configuration sets the network origin for the Amazon S3 access
        point or multi-region access point to `Internet`.
    InvalidParameterException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The specified parameter is invalid.
    IssueCode:
      type: string
    IssuingAccount:
      type: string
    JobDetails:
      type: object
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The `JobId` that is returned by the `StartPolicyGeneration`
            operation. The `JobId` can be used with `GetGeneratedPolicy` to retrieve
            the generated policies or used with `CancelPolicyGeneration` to cancel
            the policy generation request.
        status:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          description: The status of the job request.
        startedOn:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: A timestamp of when the job was started.
        completedOn:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: A timestamp of when the job was completed.
        jobError:
          allOf:
          - $ref: '#/components/schemas/JobError'
          description: The job error for the policy generation request.
      required:
      - jobId
      - status
      - startedOn
      description: Contains details about the policy generation request.
    JobError:
      type: object
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/JobErrorCode'
          description: The job error code.
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specific information about the error. For example, which service
            quota was exceeded or which resource was not found.
      required:
      - code
      - message
      description: Contains the details about the policy generation error.
    JobErrorCode:
      type: string
      enum:
      - AUTHORIZATION_ERROR
      - RESOURCE_NOT_FOUND_ERROR
      - SERVICE_QUOTA_EXCEEDED_ERROR
      - SERVICE_ERROR
    JobId:
      type: string
    JobStatus:
      type: string
      enum:
      - IN_PROGRESS
      - SUCCEEDED
      - FAILED
      - CANCELED
    KmsConstraintsKey:
      type: string
    KmsConstraintsMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/KmsConstraintsValue'
    KmsConstraintsValue:
      type: string
    KmsGrantConfiguration:
      type: object
      properties:
        operations:
          allOf:
          - $ref: '#/components/schemas/KmsGrantOperationsList'
          description: A list of operations that the grant permits.
        granteePrincipal:
          allOf:
          - $ref: '#/components/schemas/GranteePrincipal'
          description: The principal that is given permission to perform the operations
            that the grant permits.
        retiringPrincipal:
          allOf:
          - $ref: '#/components/schemas/RetiringPrincipal'
          description: The principal that is given permission to retire the grant
            by using [RetireGrant](https://docs.aws.amazon.com/kms/latest/APIReference/API_RetireGrant.html)
            operation.
        constraints:
          allOf:
          - $ref: '#/components/schemas/KmsGrantConstraints'
          description: Use this structure to propose allowing [cryptographic operations](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations)
            in the grant only when the operation request includes the specified [encryption
            context](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context).
        issuingAccount:
          allOf:
          - $ref: '#/components/schemas/IssuingAccount'
          description: The Amazon Web Services account under which the grant was issued.
            The account is used to propose KMS grants issued by accounts other than
            the owner of the key.
      required:
      - operations
      - granteePrincipal
      - issuingAccount
      description: A proposed grant configuration for a KMS key. For more information,
        see [CreateGrant](https://docs.aws.amazon.com/kms/latest/APIReference/API_CreateGrant.html).
    KmsGrantConfigurationsList:
      type: array
      items:
        $ref: '#/components/schemas/KmsGrantConfiguration'
    KmsGrantConstraints:
      type: object
      properties:
        encryptionContextEquals:
          allOf:
          - $ref: '#/components/schemas/KmsConstraintsMap'
          description: A list of key-value pairs that must match the encryption context
            in the [cryptographic operation](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations)
            request. The grant allows the operation only when the encryption context
            in the request is the same as the encryption context specified in this
            constraint.
        encryptionContextSubset:
          allOf:
          - $ref: '#/components/schemas/KmsConstraintsMap'
          description: A list of key-value pairs that must be included in the encryption
            context of the [cryptographic operation](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations)
            request. The grant allows the cryptographic operation only when the encryption
            context in the request includes the key-value pairs specified in this
            constraint, although it can include additional key-value pairs.
      description: Use this structure to propose allowing [cryptographic operations](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations)
        in the grant only when the operation request includes the specified [encryption
        context](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context).
        You can specify only one type of encryption context. An empty map is treated
        as not specified. For more information, see [GrantConstraints](https://docs.aws.amazon.com/kms/latest/APIReference/API_GrantConstraints.html).
    KmsGrantOperation:
      type: string
      enum:
      - CreateGrant
      - Decrypt
      - DescribeKey
      - Encrypt
      - GenerateDataKey
      - GenerateDataKeyPair
      - GenerateDataKeyPairWithoutPlaintext
      - GenerateDataKeyWithoutPlaintext
      - GetPublicKey
      - ReEncryptFrom
      - ReEncryptTo
      - RetireGrant
      - Sign
      - Verify
    KmsGrantOperationsList:
      type: array
      items:
        $ref: '#/components/schemas/KmsGrantOperation'
    KmsKeyConfiguration:
      type: object
      properties:
        keyPolicies:
          allOf:
          - $ref: '#/components/schemas/KmsKeyPoliciesMap'
          description: Resource policy configuration for the KMS key. The only valid
            value for the name of the key policy is `default`. For more information,
            see [Default key policy](https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default).
        grants:
          allOf:
          - $ref: '#/components/schemas/KmsGrantConfigurationsList'
          description: A list of proposed grant configurations for the KMS key. If
            the proposed grant configuration is for an existing key, the access preview
            uses the proposed list of grant configurations in place of the existing
            grants. Otherwise, the access preview uses the existing grants for the
            key.
      description: Proposed access control configuration for a KMS key. You can propose
        a configuration for a new KMS key or an existing KMS key that you own by specifying
        the key policy and KMS grant configuration. If the configuration is for an
        existing key and you do not specify the key policy, the access preview uses
        the existing policy for the key. If the access preview is for a new resource
        and you do not specify the key policy, then the access preview uses the default
        key policy. The proposed key policy cannot be an empty string. For more information,
        see [Default key policy](https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default).
        For more information about key policy limits, see [Resource quotas](https://docs.aws.amazon.com/kms/latest/developerguide/resource-limits.html).
    KmsKeyPoliciesMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/KmsKeyPolicy'
    KmsKeyPolicy:
      type: string
    LearnMoreLink:
      type: string
    ListAccessPreviewFindingsRequest:
      type: object
      properties:
        accessPreviewId:
          allOf:
          - $ref: '#/components/schemas/AccessPreviewId'
          description: The unique ID for the access preview.
        analyzerArn:
          allOf:
          - $ref: '#/components/schemas/AnalyzerArn'
          description: The [ARN of the analyzer](https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html#permission-resources)
            used to generate the access.
        filter:
          allOf:
          - $ref: '#/components/schemas/FilterCriteriaMap'
          description: Criteria to filter the returned findings.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: A token used for pagination of results returned.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of results to return in the response.
      required:
      - accessPreviewId
      - analyzerArn
    ListAccessPreviewFindingsResponse:
      type: object
      properties:
        findings:
          allOf:
          - $ref: '#/components/schemas/AccessPreviewFindingsList'
          description: A list of access preview findings that match the specified
            filter criteria.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: A token used for pagination of results returned.
      required:
      - findings
    ListAccessPreviewsRequest:
      type: object
      properties:
        analyzerArn:
          allOf:
          - $ref: '#/components/schemas/AnalyzerArn'
          description: The [ARN of the analyzer](https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html#permission-resources)
            used to generate the access preview.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: A token used for pagination of results returned.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of results to return in the response.
      required:
      - analyzerArn
    ListAccessPreviewsResponse:
      type: object
      properties:
        accessPreviews:
          allOf:
          - $ref: '#/components/schemas/AccessPreviewsList'
          description: A list of access previews retrieved for the analyzer.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: A token used for pagination of results returned.
      required:
      - accessPreviews
    ListAnalyzedResourcesRequest:
      type: object
      properties:
        analyzerArn:
          allOf:
          - $ref: '#/components/schemas/AnalyzerArn'
          description: The [ARN of the analyzer](https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html#permission-resources)
            to retrieve a list of analyzed resources from.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The type of resource.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: A token used for pagination of results returned.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of results to return in the response.
      required:
      - analyzerArn
      description: Retrieves a list of resources that have been analyzed.
    ListAnalyzedResourcesResponse:
      type: object
      properties:
        analyzedResources:
          allOf:
          - $ref: '#/components/schemas/AnalyzedResourcesList'
          description: A list of resources that were analyzed.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: A token used for pagination of results returned.
      required:
      - analyzedResources
      description: The response to the request.
    ListAnalyzersRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: A token used for pagination of results returned.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of results to return in the response.
        type:
          allOf:
          - $ref: '#/components/schemas/Type'
          description: The type of analyzer.
      description: Retrieves a list of analyzers.
    ListAnalyzersResponse:
      type: object
      properties:
        analyzers:
          allOf:
          - $ref: '#/components/schemas/AnalyzersList'
          description: The analyzers retrieved.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: A token used for pagination of results returned.
      required:
      - analyzers
      description: The response to the request.
    ListArchiveRulesRequest:
      type: object
      properties:
        analyzerName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the analyzer to retrieve rules from.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: A token used for pagination of results returned.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of results to return in the request.
      required:
      - analyzerName
      description: Retrieves a list of archive rules created for the specified analyzer.
    ListArchiveRulesResponse:
      type: object
      properties:
        archiveRules:
          allOf:
          - $ref: '#/components/schemas/ArchiveRulesList'
          description: A list of archive rules created for the specified analyzer.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: A token used for pagination of results returned.
      required:
      - archiveRules
      description: The response to the request.
    ListFindingsRequest:
      type: object
      properties:
        analyzerArn:
          allOf:
          - $ref: '#/components/schemas/AnalyzerArn'
          description: The [ARN of the analyzer](https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html#permission-resources)
            to retrieve findings from.
        filter:
          allOf:
          - $ref: '#/components/schemas/FilterCriteriaMap'
          description: A filter to match for the findings to return.
        sort:
          allOf:
          - $ref: '#/components/schemas/SortCriteria'
          description: The sort order for the findings returned.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: A token used for pagination of results returned.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of results to return in the response.
      required:
      - analyzerArn
      description: Retrieves a list of findings generated by the specified analyzer.
    ListFindingsResponse:
      type: object
      properties:
        findings:
          allOf:
          - $ref: '#/components/schemas/FindingsList'
          description: A list of findings retrieved from the analyzer that match the
            filter criteria specified, if any.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: A token used for pagination of results returned.
      required:
      - findings
      description: The response to the request.
    ListFindingsV2Request:
      type: object
      properties:
        analyzerArn:
          allOf:
          - $ref: '#/components/schemas/AnalyzerArn'
          description: The [ARN of the analyzer](https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html#permission-resources)
            to retrieve findings from.
        filter:
          allOf:
          - $ref: '#/components/schemas/FilterCriteriaMap'
          description: A filter to match for the findings to return.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of results to return in the response.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: A token used for pagination of results returned.
        sort:
          $ref: '#/components/schemas/SortCriteria'
      required:
      - analyzerArn
    ListFindingsV2Response:
      type: object
      properties:
        findings:
          allOf:
          - $ref: '#/components/schemas/FindingsListV2'
          description: A list of findings retrieved from the analyzer that match the
            filter criteria specified, if any.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: A token used for pagination of results returned.
      required:
      - findings
    ListPolicyGenerationsRequest:
      type: object
      properties:
        principalArn:
          allOf:
          - $ref: '#/components/schemas/PrincipalArn'
          description: The ARN of the IAM entity (user or role) for which you are
            generating a policy. Use this with `ListGeneratedPolicies` to filter the
            results to only include results for a specific principal.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of results to return in the response.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: A token used for pagination of results returned.
    ListPolicyGenerationsResponse:
      type: object
      properties:
        policyGenerations:
          allOf:
          - $ref: '#/components/schemas/PolicyGenerationList'
          description: A `PolicyGeneration` object that contains details about the
            generated policy.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: A token used for pagination of results returned.
      required:
      - policyGenerations
    ListTagsForResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the resource to retrieve tags from.
      required:
      - resourceArn
      description: Retrieves a list of tags applied to the specified resource.
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          description: The tags that are applied to the specified resource.
      description: The response to the request.
    Locale:
      type: string
      enum:
      - DE
      - EN
      - ES
      - FR
      - IT
      - JA
      - KO
      - PT_BR
      - ZH_CN
      - ZH_TW
    Location:
      type: object
      properties:
        path:
          allOf:
          - $ref: '#/components/schemas/PathElementList'
          description: A path in a policy, represented as a sequence of path elements.
        span:
          allOf:
          - $ref: '#/components/schemas/Span'
          description: A span in a policy.
      required:
      - path
      - span
      description: A location in a policy that is represented as a path through the
        JSON representation and a corresponding span.
    LocationList:
      type: array
      items:
        $ref: '#/components/schemas/Location'
    Name:
      type: string
      pattern: ^[A-Za-z][A-Za-z0-9_.-]*$
      minLength: 1
      maxLength: 255
    NetworkOriginConfiguration:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/VpcConfiguration'
      - allOf:
        - $ref: '#/components/schemas/InternetConfiguration'
        description: |-
          The configuration for the Amazon S3 access point or multi-region access point with an `Internet` origin.
      description: |-
        The proposed `InternetConfiguration` or `VpcConfiguration` to apply to the Amazon S3 access point. You can make the access point accessible from the internet, or you can specify that all requests made through that access point must originate from a specific virtual private cloud (VPC). You can specify only one type of network configuration. For more information, see [Creating access points](https://docs.aws.amazon.com/AmazonS3/latest/dev/creating-access-points.html).
    OrderBy:
      type: string
      enum:
      - ASC
      - DESC
    PathElement:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/Integer'
        description: |-
          Refers to an index in a JSON array.
      - allOf:
        - $ref: '#/components/schemas/String'
        description: |-
          Refers to a key in a JSON object.
      - allOf:
        - $ref: '#/components/schemas/Substring'
        description: |-
          Refers to a substring of a literal string in a JSON object.
      - allOf:
        - $ref: '#/components/schemas/String'
        description: |-
          Refers to the value associated with a given key in a JSON object.
      description: |-
        A single element in a path through the JSON representation of a policy.
    PathElementList:
      type: array
      items:
        $ref: '#/components/schemas/PathElement'
    PolicyDocument:
      type: string
    PolicyGeneration:
      type: object
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The `JobId` that is returned by the `StartPolicyGeneration`
            operation. The `JobId` can be used with `GetGeneratedPolicy` to retrieve
            the generated policies or used with `CancelPolicyGeneration` to cancel
            the policy generation request.
        principalArn:
          allOf:
          - $ref: '#/components/schemas/PrincipalArn'
          description: The ARN of the IAM entity (user or role) for which you are
            generating a policy.
        status:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          description: The status of the policy generation request.
        startedOn:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: A timestamp of when the policy generation started.
        completedOn:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: A timestamp of when the policy generation was completed.
      required:
      - jobId
      - principalArn
      - status
      - startedOn
      description: Contains details about the policy generation status and properties.
    PolicyGenerationDetails:
      type: object
      properties:
        principalArn:
          allOf:
          - $ref: '#/components/schemas/PrincipalArn'
          description: The ARN of the IAM entity (user or role) for which you are
            generating a policy.
      required:
      - principalArn
      description: Contains the ARN details about the IAM entity for which the policy
        is generated.
    PolicyGenerationList:
      type: array
      items:
        $ref: '#/components/schemas/PolicyGeneration'
    PolicyName:
      type: string
    PolicyType:
      type: string
      enum:
      - IDENTITY_POLICY
      - RESOURCE_POLICY
      - SERVICE_CONTROL_POLICY
      - RESOURCE_CONTROL_POLICY
    Position:
      type: object
      properties:
        line:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The line of the position, starting from 1.
        column:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The column of the position, starting from 0.
        offset:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The offset within the policy that corresponds to the position,
            starting from 0.
      required:
      - line
      - column
      - offset
      description: A position in a policy.
    PrincipalArn:
      type: string
      pattern: ^arn:[^:]*:iam::[^:]*:(role|user)/.{1,576}$
    PrincipalMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    RdsDbClusterSnapshotAccountId:
      type: string
    RdsDbClusterSnapshotAccountIdsList:
      type: array
      items:
        $ref: '#/components/schemas/RdsDbClusterSnapshotAccountId'
    RdsDbClusterSnapshotAttributeName:
      type: string
    RdsDbClusterSnapshotAttributeValue:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/RdsDbClusterSnapshotAccountIdsList'
        description: |-
          The Amazon Web Services account IDs that have access to the manual Amazon RDS DB cluster snapshot. If the value `all` is specified, then the Amazon RDS DB cluster snapshot is public and can be copied or restored by all Amazon Web Services accounts.

            * If the configuration is for an existing Amazon RDS DB cluster snapshot and you do not specify the `accountIds` in `RdsDbClusterSnapshotAttributeValue`, then the access preview uses the existing shared `accountIds` for the snapshot.

            * If the access preview is for a new resource and you do not specify the specify the `accountIds` in `RdsDbClusterSnapshotAttributeValue`, then the access preview considers the snapshot without any attributes.

            * To propose deletion of existing shared `accountIds`, you can specify an empty list for `accountIds` in the `RdsDbClusterSnapshotAttributeValue`.
      description: |-
        The values for a manual Amazon RDS DB cluster snapshot attribute.
    RdsDbClusterSnapshotAttributesMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/RdsDbClusterSnapshotAttributeValue'
    RdsDbClusterSnapshotConfiguration:
      type: object
      properties:
        attributes:
          allOf:
          - $ref: '#/components/schemas/RdsDbClusterSnapshotAttributesMap'
          description: The names and values of manual DB cluster snapshot attributes.
            Manual DB cluster snapshot attributes are used to authorize other Amazon
            Web Services accounts to restore a manual DB cluster snapshot. The only
            valid value for `AttributeName` for the attribute map is `restore`
        kmsKeyId:
          allOf:
          - $ref: '#/components/schemas/RdsDbClusterSnapshotKmsKeyId'
          description: "The KMS key identifier for an encrypted Amazon RDS DB cluster\
            \ snapshot. The KMS key identifier is the key ARN, key ID, alias ARN,\
            \ or alias name for the KMS key.\n\n  * If the configuration is for an\
            \ existing Amazon RDS DB cluster snapshot and you do not specify the `kmsKeyId`,\
            \ or you specify an empty string, then the access preview uses the existing\
            \ `kmsKeyId` of the snapshot.\n\n  * If the access preview is for a new\
            \ resource and you do not specify the specify the `kmsKeyId`, then the\
            \ access preview considers the snapshot as unencrypted."
      description: The proposed access control configuration for an Amazon RDS DB
        cluster snapshot. You can propose a configuration for a new Amazon RDS DB
        cluster snapshot or an Amazon RDS DB cluster snapshot that you own by specifying
        the `RdsDbClusterSnapshotAttributeValue` and optional KMS encryption key.
        For more information, see [ModifyDBClusterSnapshotAttribute](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_ModifyDBClusterSnapshotAttribute.html).
    RdsDbClusterSnapshotKmsKeyId:
      type: string
    RdsDbSnapshotAccountId:
      type: string
    RdsDbSnapshotAccountIdsList:
      type: array
      items:
        $ref: '#/components/schemas/RdsDbSnapshotAccountId'
    RdsDbSnapshotAttributeName:
      type: string
    RdsDbSnapshotAttributeValue:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/RdsDbSnapshotAccountIdsList'
        description: |-
          The Amazon Web Services account IDs that have access to the manual Amazon RDS DB snapshot. If the value `all` is specified, then the Amazon RDS DB snapshot is public and can be copied or restored by all Amazon Web Services accounts.

            * If the configuration is for an existing Amazon RDS DB snapshot and you do not specify the `accountIds` in `RdsDbSnapshotAttributeValue`, then the access preview uses the existing shared `accountIds` for the snapshot.

            * If the access preview is for a new resource and you do not specify the specify the `accountIds` in `RdsDbSnapshotAttributeValue`, then the access preview considers the snapshot without any attributes.

            * To propose deletion of an existing shared `accountIds`, you can specify an empty list for `accountIds` in the `RdsDbSnapshotAttributeValue`.
      description: |-
        The name and values of a manual Amazon RDS DB snapshot attribute. Manual DB snapshot attributes are used to authorize other Amazon Web Services accounts to restore a manual DB snapshot.
    RdsDbSnapshotAttributesMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/RdsDbSnapshotAttributeValue'
    RdsDbSnapshotConfiguration:
      type: object
      properties:
        attributes:
          allOf:
          - $ref: '#/components/schemas/RdsDbSnapshotAttributesMap'
          description: The names and values of manual DB snapshot attributes. Manual
            DB snapshot attributes are used to authorize other Amazon Web Services
            accounts to restore a manual DB snapshot. The only valid value for `attributeName`
            for the attribute map is restore.
        kmsKeyId:
          allOf:
          - $ref: '#/components/schemas/RdsDbSnapshotKmsKeyId'
          description: "The KMS key identifier for an encrypted Amazon RDS DB snapshot.\
            \ The KMS key identifier is the key ARN, key ID, alias ARN, or alias name\
            \ for the KMS key.\n\n  * If the configuration is for an existing Amazon\
            \ RDS DB snapshot and you do not specify the `kmsKeyId`, or you specify\
            \ an empty string, then the access preview uses the existing `kmsKeyId`\
            \ of the snapshot.\n\n  * If the access preview is for a new resource\
            \ and you do not specify the specify the `kmsKeyId`, then the access preview\
            \ considers the snapshot as unencrypted."
      description: The proposed access control configuration for an Amazon RDS DB
        snapshot. You can propose a configuration for a new Amazon RDS DB snapshot
        or an Amazon RDS DB snapshot that you own by specifying the `RdsDbSnapshotAttributeValue`
        and optional KMS encryption key. For more information, see [ModifyDBSnapshotAttribute](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_ModifyDBSnapshotAttribute.html).
    RdsDbSnapshotKmsKeyId:
      type: string
    ReasonCode:
      type: string
      enum:
      - AWS_SERVICE_ACCESS_DISABLED
      - DELEGATED_ADMINISTRATOR_DEREGISTERED
      - ORGANIZATION_DELETED
      - SERVICE_LINKED_ROLE_CREATION_FAILED
    ReasonSummary:
      type: object
      properties:
        description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A description of the reasoning of a result of checking for
            access.
        statementIndex:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The index number of the reason statement.
        statementId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The identifier for the reason statement.
      description: Contains information about the reasoning why a check for access
        passed or failed.
    ReasonSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ReasonSummary'
    RecommendationError:
      type: object
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The error code for a failed retrieval of a recommendation for
            a finding.
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The error message for a failed retrieval of a recommendation
            for a finding.
      required:
      - code
      - message
      description: Contains information about the reason that the retrieval of a recommendation
        for a finding failed.
    RecommendationType:
      type: string
      enum:
      - UnusedPermissionRecommendation
    RecommendedRemediationAction:
      type: string
      enum:
      - CREATE_POLICY
      - DETACH_POLICY
    RecommendedStep:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/UnusedPermissionsRecommendedStep'
        description: |-
          A recommended step for an unused permissions finding.
      description: |-
        Contains information about a recommended step for an unused access analyzer finding.
    RecommendedStepList:
      type: array
      items:
        $ref: '#/components/schemas/RecommendedStep'
    RegionList:
      type: array
      items:
        type: string
    Resource:
      type: string
      maxLength: 2048
    ResourceArn:
      type: string
      pattern: ^arn:[^:]*:[^:]*:[^:]*:[^:]*:.*$
    ResourceControlPolicyRestriction:
      type: string
      enum:
      - APPLICABLE
      - FAILED_TO_EVALUATE_RCP
      - NOT_APPLICABLE
    ResourceNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        resourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the resource.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of the resource.
      required:
      - message
      - resourceId
      - resourceType
      description: The specified resource could not be found.
    ResourceType:
      type: string
      enum:
      - AWS::S3::Bucket
      - AWS::IAM::Role
      - AWS::SQS::Queue
      - AWS::Lambda::Function
      - AWS::Lambda::LayerVersion
      - AWS::KMS::Key
      - AWS::SecretsManager::Secret
      - AWS::EFS::FileSystem
      - AWS::EC2::Snapshot
      - AWS::ECR::Repository
      - AWS::RDS::DBSnapshot
      - AWS::RDS::DBClusterSnapshot
      - AWS::SNS::Topic
      - AWS::S3Express::DirectoryBucket
      - AWS::DynamoDB::Table
      - AWS::DynamoDB::Stream
      - AWS::IAM::User
    ResourceTypeDetails:
      type: object
      properties:
        totalActivePublic:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The total number of active public findings for the resource
            type.
        totalActiveCrossAccount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The total number of active cross-account findings for the resource
            type.
      description: Contains information about the total number of active cross-account
        and public findings for a resource type of an external access analyzer.
    ResourceTypeStatisticsMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ResourceTypeDetails'
    ResourcesList:
      type: array
      items:
        $ref: '#/components/schemas/Resource'
    RetiringPrincipal:
      type: string
    RoleArn:
      type: string
      pattern: ^arn:[^:]*:iam::[^:]*:role/.{1,576}$
    S3AccessPointConfiguration:
      type: object
      properties:
        accessPointPolicy:
          allOf:
          - $ref: '#/components/schemas/AccessPointPolicy'
          description: The access point or multi-region access point policy.
        publicAccessBlock:
          allOf:
          - $ref: '#/components/schemas/S3PublicAccessBlockConfiguration'
          description: The proposed `S3PublicAccessBlock` configuration to apply to
            this Amazon S3 access point or multi-region access point.
        networkOrigin:
          allOf:
          - $ref: '#/components/schemas/NetworkOriginConfiguration'
          description: The proposed `Internet` and `VpcConfiguration` to apply to
            this Amazon S3 access point. `VpcConfiguration` does not apply to multi-region
            access points. If the access preview is for a new resource and neither
            is specified, the access preview uses `Internet` for the network origin.
            If the access preview is for an existing resource and neither is specified,
            the access preview uses the existing network origin.
      description: The configuration for an Amazon S3 access point or multi-region
        access point for the bucket. You can propose up to 10 access points or multi-region
        access points per bucket. If the proposed Amazon S3 access point configuration
        is for an existing bucket, the access preview uses the proposed access point
        configuration in place of the existing access points. To propose an access
        point without a policy, you can provide an empty string as the access point
        policy. For more information, see [Creating access points](https://docs.aws.amazon.com/AmazonS3/latest/dev/creating-access-points.html).
        For more information about access point policy limits, see [Access points
        restrictions and limitations](https://docs.aws.amazon.com/AmazonS3/latest/dev/access-points-restrictions-limitations.html).
    S3AccessPointConfigurationsMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/S3AccessPointConfiguration'
    S3BucketAclGrantConfiguration:
      type: object
      properties:
        permission:
          allOf:
          - $ref: '#/components/schemas/AclPermission'
          description: The permissions being granted.
        grantee:
          allOf:
          - $ref: '#/components/schemas/AclGrantee'
          description: The grantee to whom you’re assigning access rights.
      required:
      - permission
      - grantee
      description: A proposed access control list grant configuration for an Amazon
        S3 bucket. For more information, see [How to Specify an ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#setting-acls).
    S3BucketAclGrantConfigurationsList:
      type: array
      items:
        $ref: '#/components/schemas/S3BucketAclGrantConfiguration'
    S3BucketConfiguration:
      type: object
      properties:
        bucketPolicy:
          allOf:
          - $ref: '#/components/schemas/S3BucketPolicy'
          description: The proposed bucket policy for the Amazon S3 bucket.
        bucketAclGrants:
          allOf:
          - $ref: '#/components/schemas/S3BucketAclGrantConfigurationsList'
          description: The proposed list of ACL grants for the Amazon S3 bucket. You
            can propose up to 100 ACL grants per bucket. If the proposed grant configuration
            is for an existing bucket, the access preview uses the proposed list of
            grant configurations in place of the existing grants. Otherwise, the access
            preview uses the existing grants for the bucket.
        bucketPublicAccessBlock:
          allOf:
          - $ref: '#/components/schemas/S3PublicAccessBlockConfiguration'
          description: The proposed block public access configuration for the Amazon
            S3 bucket.
        accessPoints:
          allOf:
          - $ref: '#/components/schemas/S3AccessPointConfigurationsMap'
          description: The configuration of Amazon S3 access points or multi-region
            access points for the bucket. You can propose up to 10 new access points
            per bucket.
      description: Proposed access control configuration for an Amazon S3 bucket.
        You can propose a configuration for a new Amazon S3 bucket or an existing
        Amazon S3 bucket that you own by specifying the Amazon S3 bucket policy, bucket
        ACLs, bucket BPA settings, Amazon S3 access points, and multi-region access
        points attached to the bucket. If the configuration is for an existing Amazon
        S3 bucket and you do not specify the Amazon S3 bucket policy, the access preview
        uses the existing policy attached to the bucket. If the access preview is
        for a new resource and you do not specify the Amazon S3 bucket policy, the
        access preview assumes a bucket without a policy. To propose deletion of an
        existing bucket policy, you can specify an empty string. For more information
        about bucket policy limits, see [Bucket Policy Examples](https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html).
    S3BucketPolicy:
      type: string
    S3ExpressDirectoryAccessPointArn:
      type: string
      pattern: ^arn:[^:]*:s3express:[^:]*:[^:]*:accesspoint/.*$
    S3ExpressDirectoryAccessPointConfiguration:
      type: object
      properties:
        accessPointPolicy:
          allOf:
          - $ref: '#/components/schemas/AccessPointPolicy'
          description: The proposed access point policy for an Amazon S3 directory
            bucket access point.
        networkOrigin:
          $ref: '#/components/schemas/NetworkOriginConfiguration'
      description: Proposed configuration for an access point attached to an Amazon
        S3 directory bucket. You can propose up to 10 access points per bucket. If
        the proposed access point configuration is for an existing Amazon S3 directory
        bucket, the access preview uses the proposed access point configuration in
        place of the existing access points. To propose an access point without a
        policy, you can provide an empty string as the access point policy. For more
        information about access points for Amazon S3 directory buckets, see [Managing
        access to directory buckets with access points](https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-points-directory-buckets.html)
        in the Amazon Simple Storage Service User Guide.
    S3ExpressDirectoryAccessPointConfigurationsMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/S3ExpressDirectoryAccessPointConfiguration'
    S3ExpressDirectoryBucketConfiguration:
      type: object
      properties:
        bucketPolicy:
          allOf:
          - $ref: '#/components/schemas/S3ExpressDirectoryBucketPolicy'
          description: The proposed bucket policy for the Amazon S3 directory bucket.
        accessPoints:
          allOf:
          - $ref: '#/components/schemas/S3ExpressDirectoryAccessPointConfigurationsMap'
          description: The proposed access points for the Amazon S3 directory bucket.
      description: Proposed access control configuration for an Amazon S3 directory
        bucket. You can propose a configuration for a new Amazon S3 directory bucket
        or an existing Amazon S3 directory bucket that you own by specifying the Amazon
        S3 bucket policy. If the configuration is for an existing Amazon S3 directory
        bucket and you do not specify the Amazon S3 bucket policy, the access preview
        uses the existing policy attached to the directory bucket. If the access preview
        is for a new resource and you do not specify the Amazon S3 bucket policy,
        the access preview assumes an directory bucket without a policy. To propose
        deletion of an existing bucket policy, you can specify an empty string. For
        more information about Amazon S3 directory bucket policies, see [Example bucket
        policies for directory buckets](https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-express-security-iam-example-bucket-policies.html)
        in the Amazon Simple Storage Service User Guide.
    S3ExpressDirectoryBucketPolicy:
      type: string
    S3PublicAccessBlockConfiguration:
      type: object
      properties:
        ignorePublicAcls:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether Amazon S3 should ignore public ACLs for this
            bucket and objects in this bucket.
        restrictPublicBuckets:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether Amazon S3 should restrict public bucket policies
            for this bucket.
      required:
      - ignorePublicAcls
      - restrictPublicBuckets
      description: The `PublicAccessBlock` configuration to apply to this Amazon S3
        bucket. If the proposed configuration is for an existing Amazon S3 bucket
        and the configuration is not specified, the access preview uses the existing
        setting. If the proposed configuration is for a new bucket and the configuration
        is not specified, the access preview uses `false`. If the proposed configuration
        is for a new access point or multi-region access point and the access point
        BPA configuration is not specified, the access preview uses `true`. For more
        information, see [PublicAccessBlockConfiguration](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html).
    SecretsManagerSecretConfiguration:
      type: object
      properties:
        kmsKeyId:
          allOf:
          - $ref: '#/components/schemas/SecretsManagerSecretKmsId'
          description: The proposed ARN, key ID, or alias of the KMS key.
        secretPolicy:
          allOf:
          - $ref: '#/components/schemas/SecretsManagerSecretPolicy'
          description: The proposed resource policy defining who can access or manage
            the secret.
      description: 'The configuration for a Secrets Manager secret. For more information,
        see [CreateSecret](https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_CreateSecret.html).


        You can propose a configuration for a new secret or an existing secret that
        you own by specifying the secret policy and optional KMS encryption key. If
        the configuration is for an existing secret and you do not specify the secret
        policy, the access preview uses the existing policy for the secret. If the
        access preview is for a new resource and you do not specify the policy, the
        access preview assumes a secret without a policy. To propose deletion of an
        existing policy, you can specify an empty string. If the proposed configuration
        is for a new secret and you do not specify the KMS key ID, the access preview
        uses the Amazon Web Services managed key `aws/secretsmanager`. If you specify
        an empty string for the KMS key ID, the access preview uses the Amazon Web
        Services managed key of the Amazon Web Services account. For more information
        about secret policy limits, see [Quotas for Secrets Manager.](https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_limits.html).'
    SecretsManagerSecretKmsId:
      type: string
    SecretsManagerSecretPolicy:
      type: string
    ServiceQuotaExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        resourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The resource ID.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The resource type.
      required:
      - message
      - resourceId
      - resourceType
      description: Service quote met error.
    SharedViaList:
      type: array
      items:
        type: string
    SnsTopicConfiguration:
      type: object
      properties:
        topicPolicy:
          allOf:
          - $ref: '#/components/schemas/SnsTopicPolicy'
          description: The JSON policy text that defines who can access an Amazon
            SNS topic. For more information, see [Example cases for Amazon SNS access
            control](https://docs.aws.amazon.com/sns/latest/dg/sns-access-policy-use-cases.html)
            in the _Amazon SNS Developer Guide_.
      description: The proposed access control configuration for an Amazon SNS topic.
        You can propose a configuration for a new Amazon SNS topic or an existing
        Amazon SNS topic that you own by specifying the policy. If the configuration
        is for an existing Amazon SNS topic and you do not specify the Amazon SNS
        policy, then the access preview uses the existing Amazon SNS policy for the
        topic. If the access preview is for a new resource and you do not specify
        the policy, then the access preview assumes an Amazon SNS topic without a
        policy. To propose deletion of an existing Amazon SNS topic policy, you can
        specify an empty string for the Amazon SNS policy. For more information, see
        [Topic](https://docs.aws.amazon.com/sns/latest/api/API_Topic.html).
    SnsTopicPolicy:
      type: string
      maxLength: 30720
    SortCriteria:
      type: object
      properties:
        attributeName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the attribute to sort on.
        orderBy:
          allOf:
          - $ref: '#/components/schemas/OrderBy'
          description: The sort order, ascending or descending.
      description: The criteria used to sort.
    Span:
      type: object
      properties:
        start:
          allOf:
          - $ref: '#/components/schemas/Position'
          description: The start position of the span (inclusive).
        end:
          allOf:
          - $ref: '#/components/schemas/Position'
          description: The end position of the span (exclusive).
      required:
      - start
      - end
      description: A span in a policy. The span consists of a start position (inclusive)
        and end position (exclusive).
    SqsQueueConfiguration:
      type: object
      properties:
        queuePolicy:
          allOf:
          - $ref: '#/components/schemas/SqsQueuePolicy'
          description: The proposed resource policy for the Amazon SQS queue.
      description: The proposed access control configuration for an Amazon SQS queue.
        You can propose a configuration for a new Amazon SQS queue or an existing
        Amazon SQS queue that you own by specifying the Amazon SQS policy. If the
        configuration is for an existing Amazon SQS queue and you do not specify the
        Amazon SQS policy, the access preview uses the existing Amazon SQS policy
        for the queue. If the access preview is for a new resource and you do not
        specify the policy, the access preview assumes an Amazon SQS queue without
        a policy. To propose deletion of an existing Amazon SQS queue policy, you
        can specify an empty string for the Amazon SQS policy. For more information
        about Amazon SQS policy limits, see [Quotas related to policies](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/quotas-policies.html).
    SqsQueuePolicy:
      type: string
    StartPolicyGenerationRequest:
      type: object
      properties:
        policyGenerationDetails:
          allOf:
          - $ref: '#/components/schemas/PolicyGenerationDetails'
          description: Contains the ARN of the IAM entity (user or role) for which
            you are generating a policy.
        cloudTrailDetails:
          allOf:
          - $ref: '#/components/schemas/CloudTrailDetails'
          description: A `CloudTrailDetails` object that contains details about a
            `Trail` that you want to analyze to generate policies.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. Idempotency ensures that an API request
            completes only once. With an idempotent request, if the original request
            completes successfully, the subsequent retries with the same client token
            return the result from the original successful request and they have no
            additional effect.


            If you do not specify a client token, one is automatically generated by
            the Amazon Web Services SDK.'
      required:
      - policyGenerationDetails
    StartPolicyGenerationResponse:
      type: object
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The `JobId` that is returned by the `StartPolicyGeneration`
            operation. The `JobId` can be used with `GetGeneratedPolicy` to retrieve
            the generated policies or used with `CancelPolicyGeneration` to cancel
            the policy generation request.
      required:
      - jobId
    StartResourceScanRequest:
      type: object
      properties:
        analyzerArn:
          allOf:
          - $ref: '#/components/schemas/AnalyzerArn'
          description: The [ARN of the analyzer](https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html#permission-resources)
            to use to scan the policies applied to the specified resource.
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The ARN of the resource to scan.
        resourceOwnerAccount:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Web Services account ID that owns the resource.
            For most Amazon Web Services resources, the owning account is the account
            in which the resource was created.
      required:
      - analyzerArn
      - resourceArn
      description: Starts a scan of the policies applied to the specified resource.
    Status:
      type: string
      enum:
      - SUCCEEDED
      - FAILED
      - IN_PROGRESS
    StatusReason:
      type: object
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/ReasonCode'
          description: The reason code for the current status of the analyzer.
      required:
      - code
      description: Provides more details about the current status of the analyzer.
        For example, if the creation for the analyzer fails, a `Failed` status is
        returned. For an analyzer with organization as the type, this failure can
        be due to an issue with creating the service-linked roles required in the
        member accounts of the Amazon Web Services organization.
    Substring:
      type: object
      properties:
        start:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The start index of the substring, starting from 0.
        length:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The length of the substring.
      required:
      - start
      - length
      description: A reference to a substring of a literal string in a JSON document.
    TagKeys:
      type: array
      items:
        type: string
    TagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the resource to add the tag to.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          description: The tags to add to the resource.
      required:
      - resourceArn
      - tags
      description: Adds a tag to the specified resource.
    TagResourceResponse:
      type: object
      properties: {}
      description: The response to the request.
    TagsList:
      type: array
      items:
        $ref: '#/components/schemas/TagsMap'
    TagsMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    ThrottlingException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        retryAfterSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The seconds to wait to retry.
      required:
      - message
      description: Throttling limit exceeded error.
    Timestamp:
      type: string
      format: date-time
    Token:
      type: string
    Trail:
      type: object
      properties:
        cloudTrailArn:
          allOf:
          - $ref: '#/components/schemas/CloudTrailArn'
          description: Specifies the ARN of the trail. The format of a trail ARN is
            `arn:aws:cloudtrail:us-east-2:123456789012:trail/MyTrail`.
        regions:
          allOf:
          - $ref: '#/components/schemas/RegionList'
          description: A list of regions to get CloudTrail data from and analyze to
            generate a policy.
        allRegions:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Possible values are `true` or `false`. If set to `true`, IAM
            Access Analyzer retrieves CloudTrail data from all regions to analyze
            and generate a policy.
      required:
      - cloudTrailArn
      description: Contains details about the CloudTrail trail being analyzed to generate
        a policy.
    TrailList:
      type: array
      items:
        $ref: '#/components/schemas/Trail'
    TrailProperties:
      type: object
      properties:
        cloudTrailArn:
          allOf:
          - $ref: '#/components/schemas/CloudTrailArn'
          description: Specifies the ARN of the trail. The format of a trail ARN is
            `arn:aws:cloudtrail:us-east-2:123456789012:trail/MyTrail`.
        regions:
          allOf:
          - $ref: '#/components/schemas/RegionList'
          description: A list of regions to get CloudTrail data from and analyze to
            generate a policy.
        allRegions:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Possible values are `true` or `false`. If set to `true`, IAM
            Access Analyzer retrieves CloudTrail data from all regions to analyze
            and generate a policy.
      required:
      - cloudTrailArn
      description: Contains details about the CloudTrail trail being analyzed to generate
        a policy.
    TrailPropertiesList:
      type: array
      items:
        $ref: '#/components/schemas/TrailProperties'
    Type:
      type: string
      enum:
      - ACCOUNT
      - ORGANIZATION
      - ACCOUNT_UNUSED_ACCESS
      - ORGANIZATION_UNUSED_ACCESS
    UnprocessableEntityException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The specified entity could not be processed.
    UntagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the resource to remove the tag from.
        tagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeys'
          description: The key for the tag to add.
      required:
      - resourceArn
      - tagKeys
      description: Removes a tag from the specified resource.
    UntagResourceResponse:
      type: object
      properties: {}
      description: The response to the request.
    UnusedAccessConfiguration:
      type: object
      properties:
        unusedAccessAge:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The specified access age in days for which to generate findings
            for unused access. For example, if you specify 90 days, the analyzer will
            generate findings for IAM entities within the accounts of the selected
            organization for any access that hasn't been used in 90 or more days since
            the analyzer's last scan. You can choose a value between 1 and 365 days.
        analysisRule:
          $ref: '#/components/schemas/AnalysisRule'
      description: Contains information about an unused access analyzer.
    UnusedAccessFindingsStatistics:
      type: object
      properties:
        unusedAccessTypeStatistics:
          allOf:
          - $ref: '#/components/schemas/UnusedAccessTypeStatisticsList'
          description: A list of details about the total number of findings for each
            type of unused access for the analyzer.
        topAccounts:
          allOf:
          - $ref: '#/components/schemas/AccountAggregations'
          description: A list of one to ten Amazon Web Services accounts that have
            the most active findings for the unused access analyzer.
        totalActiveFindings:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The total number of active findings for the unused access analyzer.
        totalArchivedFindings:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The total number of archived findings for the unused access
            analyzer.
        totalResolvedFindings:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The total number of resolved findings for the unused access
            analyzer.
      description: Provides aggregate statistics about the findings for the specified
        unused access analyzer.
    UnusedAccessTypeStatistics:
      type: object
      properties:
        unusedAccessType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of unused access.
        total:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The total number of findings for the specified unused access
            type.
      description: Contains information about the total number of findings for a type
        of unused access.
    UnusedAccessTypeStatisticsList:
      type: array
      items:
        $ref: '#/components/schemas/UnusedAccessTypeStatistics'
    UnusedAction:
      type: object
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The action for which the unused access finding was generated.
        lastAccessed:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the action was last accessed.
      required:
      - action
      description: Contains information about an unused access finding for an action.
        IAM Access Analyzer charges for unused access analysis based on the number
        of IAM roles and users analyzed per month. For more details on pricing, see
        [IAM Access Analyzer pricing](https://aws.amazon.com/iam/access-analyzer/pricing).
    UnusedActionList:
      type: array
      items:
        $ref: '#/components/schemas/UnusedAction'
    UnusedIamRoleDetails:
      type: object
      properties:
        lastAccessed:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the role was last accessed.
      description: Contains information about an unused access finding for an IAM
        role. IAM Access Analyzer charges for unused access analysis based on the
        number of IAM roles and users analyzed per month. For more details on pricing,
        see [IAM Access Analyzer pricing](https://aws.amazon.com/iam/access-analyzer/pricing).
    UnusedIamUserAccessKeyDetails:
      type: object
      properties:
        accessKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the access key for which the unused access finding
            was generated.
        lastAccessed:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the access key was last accessed.
      required:
      - accessKeyId
      description: Contains information about an unused access finding for an IAM
        user access key. IAM Access Analyzer charges for unused access analysis based
        on the number of IAM roles and users analyzed per month. For more details
        on pricing, see [IAM Access Analyzer pricing](https://aws.amazon.com/iam/access-analyzer/pricing).
    UnusedIamUserPasswordDetails:
      type: object
      properties:
        lastAccessed:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the password was last accessed.
      description: Contains information about an unused access finding for an IAM
        user password. IAM Access Analyzer charges for unused access analysis based
        on the number of IAM roles and users analyzed per month. For more details
        on pricing, see [IAM Access Analyzer pricing](https://aws.amazon.com/iam/access-analyzer/pricing).
    UnusedPermissionDetails:
      type: object
      properties:
        actions:
          allOf:
          - $ref: '#/components/schemas/UnusedActionList'
          description: A list of unused actions for which the unused access finding
            was generated.
        serviceNamespace:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The namespace of the Amazon Web Services service that contains
            the unused actions.
        lastAccessed:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the permission was last accessed.
      required:
      - serviceNamespace
      description: Contains information about an unused access finding for a permission.
        IAM Access Analyzer charges for unused access analysis based on the number
        of IAM roles and users analyzed per month. For more details on pricing, see
        [IAM Access Analyzer pricing](https://aws.amazon.com/iam/access-analyzer/pricing).
    UnusedPermissionsRecommendedStep:
      type: object
      properties:
        policyUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the existing policy for the unused permissions
            finding was last updated.
        recommendedAction:
          allOf:
          - $ref: '#/components/schemas/RecommendedRemediationAction'
          description: A recommendation of whether to create or detach a policy for
            an unused permissions finding.
        recommendedPolicy:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If the recommended action for the unused permissions finding
            is to replace the existing policy, the contents of the recommended policy
            to replace the policy specified in the `existingPolicyId` field.
        existingPolicyId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If the recommended action for the unused permissions finding
            is to detach a policy, the ID of an existing policy to be detached.
      required:
      - recommendedAction
      description: Contains information about the action to take for a policy in an
        unused permissions finding.
    UpdateAnalyzerRequest:
      type: object
      properties:
        analyzerName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the analyzer to modify.
        configuration:
          $ref: '#/components/schemas/AnalyzerConfiguration'
      required:
      - analyzerName
    UpdateAnalyzerResponse:
      type: object
      properties:
        configuration:
          $ref: '#/components/schemas/AnalyzerConfiguration'
    UpdateArchiveRuleRequest:
      type: object
      properties:
        analyzerName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the analyzer to update the archive rules for.
        ruleName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the rule to update.
        filter:
          allOf:
          - $ref: '#/components/schemas/FilterCriteriaMap'
          description: A filter to match for the rules to update. Only rules that
            match the filter are updated.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A client token.
      required:
      - analyzerName
      - ruleName
      - filter
      description: Updates the specified archive rule.
    UpdateFindingsRequest:
      type: object
      properties:
        analyzerArn:
          allOf:
          - $ref: '#/components/schemas/AnalyzerArn'
          description: The [ARN of the analyzer](https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-getting-started.html#permission-resources)
            that generated the findings to update.
        status:
          allOf:
          - $ref: '#/components/schemas/FindingStatusUpdate'
          description: The state represents the action to take to update the finding
            Status. Use `ARCHIVE` to change an Active finding to an Archived finding.
            Use `ACTIVE` to change an Archived finding to an Active finding.
        ids:
          allOf:
          - $ref: '#/components/schemas/FindingIdList'
          description: The IDs of the findings to update.
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The ARN of the resource identified in the finding.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A client token.
      required:
      - analyzerArn
      - status
      description: Updates findings with the new values provided in the request.
    ValidatePolicyFinding:
      type: object
      properties:
        findingDetails:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A localized message that explains the finding and provides
            guidance on how to address it.
        findingType:
          allOf:
          - $ref: '#/components/schemas/ValidatePolicyFindingType'
          description: 'The impact of the finding.


            Security warnings report when the policy allows access that we consider
            overly permissive.


            Errors report when a part of the policy is not functional.


            Warnings report non-security issues when a policy does not conform to
            policy writing best practices.


            Suggestions recommend stylistic improvements in the policy that do not
            impact access.'
        issueCode:
          allOf:
          - $ref: '#/components/schemas/IssueCode'
          description: The issue code provides an identifier of the issue associated
            with this finding.
        learnMoreLink:
          allOf:
          - $ref: '#/components/schemas/LearnMoreLink'
          description: A link to additional documentation about the type of finding.
        locations:
          allOf:
          - $ref: '#/components/schemas/LocationList'
          description: The list of locations in the policy document that are related
            to the finding. The issue code provides a summary of an issue identified
            by the finding.
      required:
      - findingDetails
      - findingType
      - issueCode
      - learnMoreLink
      - locations
      description: A finding in a policy. Each finding is an actionable recommendation
        that can be used to improve the policy.
    ValidatePolicyFindingList:
      type: array
      items:
        $ref: '#/components/schemas/ValidatePolicyFinding'
    ValidatePolicyFindingType:
      type: string
      enum:
      - ERROR
      - SECURITY_WARNING
      - SUGGESTION
      - WARNING
    ValidatePolicyRequest:
      type: object
      properties:
        locale:
          allOf:
          - $ref: '#/components/schemas/Locale'
          description: The locale to use for localizing the findings.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of results to return in the response.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: A token used for pagination of results returned.
        policyDocument:
          allOf:
          - $ref: '#/components/schemas/PolicyDocument'
          description: The JSON policy document to use as the content for the policy.
        policyType:
          allOf:
          - $ref: '#/components/schemas/PolicyType'
          description: 'The type of policy to validate. Identity policies grant permissions
            to IAM principals. Identity policies include managed and inline policies
            for IAM roles, users, and groups.


            Resource policies grant permissions on Amazon Web Services resources.
            Resource policies include trust policies for IAM roles and bucket policies
            for Amazon S3 buckets. You can provide a generic input such as identity
            policy or resource policy or a specific input such as managed policy or
            Amazon S3 bucket policy.


            Service control policies (SCPs) are a type of organization policy attached
            to an Amazon Web Services organization, organizational unit (OU), or an
            account.'
        validatePolicyResourceType:
          allOf:
          - $ref: '#/components/schemas/ValidatePolicyResourceType'
          description: 'The type of resource to attach to your resource policy. Specify
            a value for the policy validation resource type only if the policy type
            is `RESOURCE_POLICY`. For example, to validate a resource policy to attach
            to an Amazon S3 bucket, you can choose `AWS::S3::Bucket` for the policy
            validation resource type.


            For resource types not supported as valid values, IAM Access Analyzer
            runs policy checks that apply to all resource policies. For example, to
            validate a resource policy to attach to a KMS key, do not specify a value
            for the policy validation resource type and IAM Access Analyzer will run
            policy checks that apply to all resource policies.'
      required:
      - policyDocument
      - policyType
    ValidatePolicyResourceType:
      type: string
      enum:
      - AWS::S3::Bucket
      - AWS::S3::AccessPoint
      - AWS::S3::MultiRegionAccessPoint
      - AWS::S3ObjectLambda::AccessPoint
      - AWS::IAM::AssumeRolePolicyDocument
      - AWS::DynamoDB::Table
    ValidatePolicyResponse:
      type: object
      properties:
        findings:
          allOf:
          - $ref: '#/components/schemas/ValidatePolicyFindingList'
          description: The list of findings in a policy returned by IAM Access Analyzer
            based on its suite of policy checks.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: A token used for pagination of results returned.
      required:
      - findings
    ValidationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        reason:
          allOf:
          - $ref: '#/components/schemas/ValidationExceptionReason'
          description: The reason for the exception.
        fieldList:
          allOf:
          - $ref: '#/components/schemas/ValidationExceptionFieldList'
          description: A list of fields that didn't validate.
      required:
      - message
      - reason
      description: Validation exception error.
    ValidationExceptionField:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the validation exception.
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A message about the validation exception.
      required:
      - name
      - message
      description: Contains information about a validation exception.
    ValidationExceptionFieldList:
      type: array
      items:
        $ref: '#/components/schemas/ValidationExceptionField'
    ValidationExceptionReason:
      type: string
      enum:
      - unknownOperation
      - cannotParse
      - fieldValidationFailed
      - other
      - notSupported
    ValueList:
      type: array
      items:
        type: string
    VpcConfiguration:
      type: object
      properties:
        vpcId:
          allOf:
          - $ref: '#/components/schemas/VpcId'
          description: If this field is specified, this access point will only allow
            connections from the specified VPC ID.
      required:
      - vpcId
      description: The proposed virtual private cloud (VPC) configuration for the
        Amazon S3 access point. VPC configuration does not apply to multi-region access
        points. For more information, see [VpcConfiguration](https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_VpcConfiguration.html).
    VpcId:
      type: string
      pattern: ^vpc-([0-9a-f]){8}(([0-9a-f]){9})?$
