openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: connect
  x-aws-serviceName: connect
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2017-08-08'
  title: Amazon Connect Service
  description: |-
    * [Amazon Connect actions](https://docs.aws.amazon.com/connect/latest/APIReference/API_Operations_Amazon_Connect_Service.html)

      * [Amazon Connect data types](https://docs.aws.amazon.com/connect/latest/APIReference/API_Types_Amazon_Connect_Service.html)

    Amazon Connect is a cloud-based contact center solution that you use to set up and manage a customer contact center and provide reliable customer engagement at any scale.

    Amazon Connect provides metrics and real-time reporting that enable you to optimize contact routing. You can also resolve customer issues more efficiently by getting customers in touch with the appropriate agents.

    There are limits to the number of Amazon Connect resources that you can create. There are also limits to the number of requests that you can make per second. For more information, see [Amazon Connect Service Quotas](https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html) in the _Amazon Connect Administrator Guide_.

    You can use an endpoint to connect programmatically to an Amazon Web Services service. For a list of Amazon Connect endpoints, see [Amazon Connect Endpoints](https://docs.aws.amazon.com/general/latest/gr/connect_region.html).
servers:
- description: The Amazon Connect Service regional endpoint
  url: https://connect.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /evaluation-forms/{InstanceId}/{EvaluationFormId}/activate:
    post:
      operationId: ActivateEvaluationForm
      description: |-
        Activates an evaluation form in the specified Amazon Connect instance. After the evaluation form is activated, it is available to start new evaluations based on the form.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: EvaluationFormId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                EvaluationFormVersion:
                  $ref: '#/components/schemas/VersionNumber'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            One or more of the specified parameters are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '409':
          description: |-
            A resource already has that name.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /analytics-data/instance/{InstanceId}/association:
    put:
      operationId: AssociateAnalyticsDataSet
      description: |-
        Associates the specified dataset for a Amazon Connect instance with the target account. You can associate only one dataset in a single call.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DataSetId:
                  $ref: '#/components/schemas/DataSetId'
                TargetAccountId:
                  $ref: '#/components/schemas/AWSAccountId'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    post:
      operationId: DisassociateAnalyticsDataSet
      description: |-
        Removes the dataset ID associated with a given Amazon Connect instance.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DataSetId:
                  $ref: '#/components/schemas/DataSetId'
                TargetAccountId:
                  $ref: '#/components/schemas/AWSAccountId'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: ListAnalyticsDataAssociations
      description: |-
        Lists the association status of requested dataset ID for a given Amazon Connect instance.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: DataSetId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/DataSetId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResult1000'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /instance/{InstanceId}/approved-origin:
    put:
      operationId: AssociateApprovedOrigin
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        Associates an approved origin to an Amazon Connect instance.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Origin:
                  $ref: '#/components/schemas/Origin'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '409':
          description: |-
            A resource already has that name.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    delete:
      operationId: DisassociateApprovedOrigin
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        Revokes access to integrated applications from Amazon Connect.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: origin
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Origin'
      - name: clientToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /instance/{InstanceId}/bot:
    put:
      operationId: AssociateBot
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        Allows the specified Amazon Connect instance to access the specified Amazon Lex or Amazon Lex V2 bot.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                LexBot:
                  $ref: '#/components/schemas/LexBot'
                LexV2Bot:
                  $ref: '#/components/schemas/LexV2Bot'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '409':
          description: |-
            A resource already has that name.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
    post:
      operationId: DisassociateBot
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        Revokes authorization from the specified instance to access the specified Amazon Lex or Amazon Lex V2 bot.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                LexBot:
                  $ref: '#/components/schemas/LexBot'
                LexV2Bot:
                  $ref: '#/components/schemas/LexV2Bot'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /default-vocabulary/{InstanceId}/{LanguageCode}:
    put:
      operationId: AssociateDefaultVocabulary
      description: |-
        Associates an existing vocabulary as the default. Contact Lens for Amazon Connect uses the vocabulary in post-call and real-time analysis sessions for the given language.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: LanguageCode
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/VocabularyLanguageCode'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                VocabularyId:
                  $ref: '#/components/schemas/VocabularyId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /flow-associations/{InstanceId}:
    put:
      operationId: AssociateFlow
      description: |-
        Associates a connect resource to a flow.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ResourceId:
                  $ref: '#/components/schemas/ARN'
                FlowId:
                  $ref: '#/components/schemas/ARN'
                ResourceType:
                  $ref: '#/components/schemas/FlowAssociationResourceType'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /instance/{InstanceId}/storage-config:
    put:
      operationId: AssociateInstanceStorageConfig
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        Associates a storage resource type for the first time. You can only associate one type of storage configuration in a single call. This means, for example, that you can't define an instance with multiple S3 buckets for storing chat transcripts.

        This API does not create a resource that doesn't exist. It only associates it to the instance. Ensure that the resource being specified in the storage configuration, like an S3 bucket, exists when being used for association.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ResourceType:
                  $ref: '#/components/schemas/InstanceStorageResourceType'
                StorageConfig:
                  $ref: '#/components/schemas/InstanceStorageConfig'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '409':
          description: |-
            A resource already has that name.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /instance/{InstanceId}/lambda-function:
    put:
      operationId: AssociateLambdaFunction
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        Allows the specified Amazon Connect instance to access the specified Lambda function.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                FunctionArn:
                  $ref: '#/components/schemas/FunctionArn'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '409':
          description: |-
            A resource already has that name.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    delete:
      operationId: DisassociateLambdaFunction
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        Remove the Lambda function from the dropdown options available in the relevant flow blocks.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: functionArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/FunctionArn'
      - name: clientToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /instance/{InstanceId}/lex-bot:
    put:
      operationId: AssociateLexBot
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        Allows the specified Amazon Connect instance to access the specified Amazon Lex V1 bot. This API only supports the association of Amazon Lex V1 bots.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                LexBot:
                  $ref: '#/components/schemas/LexBot'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '409':
          description: |-
            A resource already has that name.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    delete:
      operationId: DisassociateLexBot
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        Revokes authorization from the specified instance to access the specified Amazon Lex bot.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: botName
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/BotName'
      - name: lexRegion
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/LexRegion'
      - name: clientToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /phone-number/{PhoneNumberId}/contact-flow:
    put:
      operationId: AssociatePhoneNumberContactFlow
      description: |-
        Associates a flow with a phone number claimed to your Amazon Connect instance.

        If the number is claimed to a traffic distribution group, and you are calling this API using an instance in the Amazon Web Services Region where the traffic distribution group was created, you can use either a full phone number ARN or UUID value for the `PhoneNumberId` URI request parameter. However, if the number is claimed to a traffic distribution group and you are calling this API using an instance in the alternate Amazon Web Services Region associated with the traffic distribution group, you must provide a full phone number ARN. If a UUID is provided in this scenario, you will receive a `ResourceNotFoundException`.
      parameters:
      - name: PhoneNumberId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PhoneNumberId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                ContactFlowId:
                  $ref: '#/components/schemas/ContactFlowId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            One or more of the specified parameters are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    delete:
      operationId: DisassociatePhoneNumberContactFlow
      description: |-
        Removes the flow association from a phone number claimed to your Amazon Connect instance.

        If the number is claimed to a traffic distribution group, and you are calling this API using an instance in the Amazon Web Services Region where the traffic distribution group was created, you can use either a full phone number ARN or UUID value for the `PhoneNumberId` URI request parameter. However, if the number is claimed to a traffic distribution group and you are calling this API using an instance in the alternate Amazon Web Services Region associated with the traffic distribution group, you must provide a full phone number ARN. If a UUID is provided in this scenario, you will receive a `ResourceNotFoundException`.
      parameters:
      - name: PhoneNumberId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PhoneNumberId'
      - name: instanceId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            One or more of the specified parameters are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /queues/{InstanceId}/{QueueId}/associate-quick-connects:
    post:
      operationId: AssociateQueueQuickConnects
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        Associates a set of quick connects with a queue.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: QueueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                QuickConnectIds:
                  $ref: '#/components/schemas/QuickConnectsList'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /routing-profiles/{InstanceId}/{RoutingProfileId}/associate-queues:
    post:
      operationId: AssociateRoutingProfileQueues
      description: |-
        Associates a set of queues with a routing profile.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: RoutingProfileId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RoutingProfileId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                QueueConfigs:
                  $ref: '#/components/schemas/RoutingProfileQueueConfigList'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /instance/{InstanceId}/security-key:
    put:
      operationId: AssociateSecurityKey
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        Associates a security key to the instance.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Key:
                  $ref: '#/components/schemas/PEM'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '409':
          description: |-
            A resource already has that name.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /traffic-distribution-group/{TrafficDistributionGroupId}/user:
    put:
      operationId: AssociateTrafficDistributionGroupUser
      description: |-
        Associates an agent with a traffic distribution group. This API can be called only in the Region where the traffic distribution group is created.
      parameters:
      - name: TrafficDistributionGroupId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TrafficDistributionGroupIdOrArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                UserId:
                  $ref: '#/components/schemas/UserId'
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '409':
          description: |-
            A resource already has that name.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    delete:
      operationId: DisassociateTrafficDistributionGroupUser
      description: |-
        Disassociates an agent from a traffic distribution group. This API can be called only in the Region where the traffic distribution group is created.
      parameters:
      - name: TrafficDistributionGroupId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TrafficDistributionGroupIdOrArn'
      - name: UserId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/UserId'
      - name: InstanceId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '409':
          description: |-
            A resource already has that name.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: ListTrafficDistributionGroupUsers
      description: |-
        Lists traffic distribution group users.
      parameters:
      - name: TrafficDistributionGroupId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TrafficDistributionGroupIdOrArn'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResult10'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /users/{InstanceId}/{UserId}/associate-proficiencies:
    post:
      operationId: AssociateUserProficiencies
      description: |-
        Associates a set of proficiencies with a user.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: UserId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UserId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                UserProficiencies:
                  $ref: '#/components/schemas/UserProficiencyList'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /analytics-data/instance/{InstanceId}/associations:
    put:
      operationId: BatchAssociateAnalyticsDataSet
      description: |-
        Associates a list of analytics datasets for a given Amazon Connect instance to a target account. You can associate multiple datasets in a single call.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DataSetIds:
                  $ref: '#/components/schemas/DataSetIds'
                TargetAccountId:
                  $ref: '#/components/schemas/AWSAccountId'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    post:
      operationId: BatchDisassociateAnalyticsDataSet
      description: |-
        Removes a list of analytics datasets associated with a given Amazon Connect instance. You can disassociate multiple datasets in a single call.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DataSetIds:
                  $ref: '#/components/schemas/DataSetIds'
                TargetAccountId:
                  $ref: '#/components/schemas/AWSAccountId'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /attached-files/{InstanceId}:
    post:
      operationId: BatchGetAttachedFileMetadata
      description: |-
        Allows you to retrieve metadata about multiple attached files on an associated resource. Each attached file provided in the input list must be associated with the input AssociatedResourceArn.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: associatedResourceArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                FileIds:
                  $ref: '#/components/schemas/FileIdList'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    put:
      operationId: StartAttachedFileUpload
      description: |-
        Provides a pre-signed Amazon S3 URL in response for uploading your content.

        You may only use this API to upload attachments to an [Amazon Connect Case](https://docs.aws.amazon.com/connect/latest/APIReference/API_connect-cases_CreateCase.html) or [Amazon Connect Email](https://docs.aws.amazon.com/connect/latest/adminguide/setup-email-channel.html).
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: associatedResourceArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
                FileName:
                  $ref: '#/components/schemas/FileName'
                FileSizeInBytes:
                  $ref: '#/components/schemas/FileSizeInBytes'
                UrlExpiryInSeconds:
                  $ref: '#/components/schemas/URLExpiryInSeconds'
                FileUseCaseType:
                  $ref: '#/components/schemas/FileUseCaseType'
                CreatedBy:
                  $ref: '#/components/schemas/CreatedByInfo'
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '409':
          description: |-
            A resource already has that name.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '402':
          description: |-
            The service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /flow-associations-batch/{InstanceId}:
    post:
      operationId: BatchGetFlowAssociation
      description: |-
        Retrieve the flow associations for the given resources.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ResourceIds:
                  $ref: '#/components/schemas/resourceArnListMaxLimit100'
                ResourceType:
                  $ref: '#/components/schemas/ListFlowAssociationResourceType'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /contact/batch/{InstanceId}:
    put:
      operationId: BatchPutContact
      description: |-
        Only the Amazon Connect outbound campaigns service principal is allowed to assume a role in your account and call this API.

        Allows you to create a batch of contacts in Amazon Connect. The outbound campaigns capability ingests dial requests via the [PutDialRequestBatch](https://docs.aws.amazon.com/connect-outbound/latest/APIReference/API_PutDialRequestBatch.html) API. It then uses BatchPutContact to create contacts corresponding to those dial requests. If agents are available, the dial requests are dialed out, which results in a voice call. The resulting voice call uses the same contactId that was created by BatchPutContact.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
                ContactDataRequestList:
                  $ref: '#/components/schemas/ContactDataRequestList'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            An entity with the same name already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotencyException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '429':
          description: |-
            The allowed limit for the resource has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /phone-number/claim:
    post:
      operationId: ClaimPhoneNumber
      description: |-
        Claims an available phone number to your Amazon Connect instance or traffic distribution group. You can call this API only in the same Amazon Web Services Region where the Amazon Connect instance or traffic distribution group was created.

        For more information about how to use this operation, see [Claim a phone number in your country](https://docs.aws.amazon.com/connect/latest/adminguide/claim-phone-number.html) and [Claim phone numbers to traffic distribution groups](https://docs.aws.amazon.com/connect/latest/adminguide/claim-phone-numbers-traffic-distribution-groups.html) in the _Amazon Connect Administrator Guide_.

        You can call the [SearchAvailablePhoneNumbers](https://docs.aws.amazon.com/connect/latest/APIReference/API_SearchAvailablePhoneNumbers.html) API for available phone numbers that you can claim. Call the [DescribePhoneNumber](https://docs.aws.amazon.com/connect/latest/APIReference/API_DescribePhoneNumber.html) API to verify the status of a previous [ClaimPhoneNumber](https://docs.aws.amazon.com/connect/latest/APIReference/API_ClaimPhoneNumber.html) operation.

        If you plan to claim and release numbers frequently, contact us for a service quota exception. Otherwise, it is possible you will be blocked from claiming and releasing any more numbers until up to 180 days past the oldest number released has expired.

        By default you can claim and release up to 200% of your maximum number of active phone numbers. If you claim and release phone numbers using the UI or API during a rolling 180 day cycle that exceeds 200% of your phone number service level quota, you will be blocked from claiming any more numbers until 180 days past the oldest number released has expired.

        For example, if you already have 99 claimed numbers and a service level quota of 99 phone numbers, and in any 180 day period you release 99, claim 99, and then release 99, you will have exceeded the 200% limit. At that point you are blocked from claiming any more numbers until you open an Amazon Web Services support ticket.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TargetArn:
                  $ref: '#/components/schemas/ARN'
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                PhoneNumber:
                  $ref: '#/components/schemas/PhoneNumber'
                PhoneNumberDescription:
                  $ref: '#/components/schemas/PhoneNumberDescription'
                Tags:
                  $ref: '#/components/schemas/TagMap'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            An entity with the same name already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotencyException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            One or more of the specified parameters are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /attached-files/{InstanceId}/{FileId}:
    post:
      operationId: CompleteAttachedFileUpload
      description: |-
        Allows you to confirm that the attached file has been uploaded using the pre-signed URL provided in the StartAttachedFileUpload API.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: FileId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FileId'
      - name: associatedResourceArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    delete:
      operationId: DeleteAttachedFile
      description: |-
        Deletes an attached file along with the underlying S3 Object.

        The attached file is **permanently deleted** if S3 bucket versioning is not enabled.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: FileId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FileId'
      - name: associatedResourceArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: GetAttachedFile
      description: |-
        Provides a pre-signed URL for download of an approved attached file. This API also returns metadata about the attached file. It will only return a downloadURL if the status of the attached file is `APPROVED`.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: FileId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FileId'
      - name: urlExpiryInSeconds
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/URLExpiryInSeconds'
      - name: associatedResourceArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /agent-status/{InstanceId}:
    put:
      operationId: CreateAgentStatus
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        Creates an agent status for the specified Amazon Connect instance.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/AgentStatusName'
                Description:
                  $ref: '#/components/schemas/AgentStatusDescription'
                State:
                  $ref: '#/components/schemas/AgentStatusState'
                DisplayOrder:
                  $ref: '#/components/schemas/AgentStatusOrderNumber'
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '409':
          description: |-
            A resource with the specified name already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    get:
      operationId: ListAgentStatuses
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        Lists agent statuses.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResult1000'
      - name: AgentStatusTypes
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AgentStatusTypes'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /contact/create-contact:
    put:
      operationId: CreateContact
      description: |-
        Only the EMAIL and VOICE channels are supported. The supported initiation methods for EMAIL are: OUTBOUND, AGENT_REPLY, and FLOW. For VOICE the supported initiation methods are TRANSFER and the subtype connect:ExternalAudio.

        Creates a new EMAIL or VOICE contact.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
                RelatedContactId:
                  $ref: '#/components/schemas/ContactId'
                Attributes:
                  $ref: '#/components/schemas/Attributes'
                References:
                  $ref: '#/components/schemas/ContactReferences'
                Channel:
                  $ref: '#/components/schemas/Channel'
                InitiationMethod:
                  $ref: '#/components/schemas/ContactInitiationMethod'
                ExpiryDurationInMinutes:
                  $ref: '#/components/schemas/ExpiryDurationInMinutes'
                UserInfo:
                  $ref: '#/components/schemas/UserInfo'
                InitiateAs:
                  $ref: '#/components/schemas/InitiateAs'
                Name:
                  $ref: '#/components/schemas/Name'
                Description:
                  $ref: '#/components/schemas/Description'
                SegmentAttributes:
                  $ref: '#/components/schemas/SegmentAttributes'
                PreviousContactId:
                  $ref: '#/components/schemas/ContactId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            An entity with the same name already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotencyException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /contact-flows/{InstanceId}:
    put:
      operationId: CreateContactFlow
      description: |-
        Creates a flow for the specified Amazon Connect instance.

        You can also create and update flows using the [Amazon Connect Flow language](https://docs.aws.amazon.com/connect/latest/APIReference/flow-language.html).
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/ContactFlowName'
                Type:
                  $ref: '#/components/schemas/ContactFlowType'
                Description:
                  $ref: '#/components/schemas/ContactFlowDescription'
                Content:
                  $ref: '#/components/schemas/ContactFlowContent'
                Status:
                  $ref: '#/components/schemas/ContactFlowStatus'
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '409':
          description: |-
            A resource with the specified name already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /contact-flow-modules/{InstanceId}:
    put:
      operationId: CreateContactFlowModule
      description: |-
        Creates a flow module for the specified Amazon Connect instance.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/ContactFlowModuleName'
                Description:
                  $ref: '#/components/schemas/ContactFlowModuleDescription'
                Content:
                  $ref: '#/components/schemas/ContactFlowModuleContent'
                Tags:
                  $ref: '#/components/schemas/TagMap'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            An entity with the same name already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotencyException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /contact-flows/{InstanceId}/{ContactFlowId}/version:
    put:
      operationId: CreateContactFlowVersion
      description: |-
        Publishes a new version of the flow provided. Versions are immutable and monotonically increasing. If the `FlowContentSha256` provided is different from the `FlowContentSha256` of the `$LATEST` published flow content, then an error is returned. This API only supports creating versions for flows of type `Campaign`.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: ContactFlowId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  $ref: '#/components/schemas/ContactFlowDescription'
                FlowContentSha256:
                  $ref: '#/components/schemas/FlowContentSha256'
                ContactFlowVersion:
                  $ref: '#/components/schemas/ResourceVersion'
                LastModifiedTime:
                  $ref: '#/components/schemas/Timestamp'
                LastModifiedRegion:
                  $ref: '#/components/schemas/RegionName'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /email-addresses/{InstanceId}:
    put:
      operationId: CreateEmailAddress
      description: |-
        Create new email address in the specified Amazon Connect instance. For more information about email addresses, see [Create email addresses](https://docs.aws.amazon.com/connect/latest/adminguide/create-email-address1.html) in the Amazon Connect Administrator Guide.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  $ref: '#/components/schemas/Description'
                EmailAddress:
                  $ref: '#/components/schemas/EmailAddress'
                DisplayName:
                  $ref: '#/components/schemas/EmailAddressDisplayName'
                Tags:
                  $ref: '#/components/schemas/TagMap'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            A resource already has that name.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /evaluation-forms/{InstanceId}:
    put:
      operationId: CreateEvaluationForm
      description: |-
        Creates an evaluation form in the specified Amazon Connect instance. The form can be used to define questions related to agent performance, and create sections to organize such questions. Question and section identifiers cannot be duplicated within the same evaluation form.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Title:
                  $ref: '#/components/schemas/EvaluationFormTitle'
                Description:
                  $ref: '#/components/schemas/EvaluationFormDescription'
                Items:
                  $ref: '#/components/schemas/EvaluationFormItemsList'
                ScoringStrategy:
                  $ref: '#/components/schemas/EvaluationFormScoringStrategy'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            One or more of the specified parameters are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '409':
          description: |-
            A resource already has that name.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: ListEvaluationForms
      description: |-
        Lists evaluation forms in the specified Amazon Connect instance.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResult100'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            One or more of the specified parameters are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /hours-of-operations/{InstanceId}:
    put:
      operationId: CreateHoursOfOperation
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        Creates hours of operation.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/CommonNameLength127'
                Description:
                  $ref: '#/components/schemas/HoursOfOperationDescription'
                TimeZone:
                  $ref: '#/components/schemas/TimeZone'
                Config:
                  $ref: '#/components/schemas/HoursOfOperationConfigList'
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '409':
          description: |-
            A resource with the specified name already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /hours-of-operations/{InstanceId}/{HoursOfOperationId}/overrides:
    put:
      operationId: CreateHoursOfOperationOverride
      description: |-
        Creates an hours of operation override in an Amazon Connect hours of operation resource
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: HoursOfOperationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/HoursOfOperationId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/CommonHumanReadableName'
                Description:
                  $ref: '#/components/schemas/CommonHumanReadableDescription'
                Config:
                  $ref: '#/components/schemas/HoursOfOperationOverrideConfigList'
                EffectiveFrom:
                  $ref: '#/components/schemas/HoursOfOperationOverrideYearMonthDayDateFormat'
                EffectiveTill:
                  $ref: '#/components/schemas/HoursOfOperationOverrideYearMonthDayDateFormat'
      responses:
        '200': {}
        '409':
          description: |-
            A resource with the specified name already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    get:
      operationId: ListHoursOfOperationOverrides
      description: |-
        List the hours of operation overrides.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: HoursOfOperationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/HoursOfOperationId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResult100'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /instance:
    put:
      operationId: CreateInstance
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        Initiates an Amazon Connect instance with all the supported channels enabled. It does not attach any storage, such as Amazon Simple Storage Service (Amazon S3) or Amazon Kinesis. It also does not allow for any configurations on features, such as Contact Lens for Amazon Connect.

        For more information, see [Create an Amazon Connect instance](https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-instances.html) in the _Amazon Connect Administrator Guide_.

        Amazon Connect enforces a limit on the total number of instances that you can create or delete in 30 days. If you exceed this limit, you will get an error message indicating there has been an excessive number of attempts at creating or deleting instances. You must wait 30 days before you can restart creating and deleting instances in your account.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
                IdentityManagementType:
                  $ref: '#/components/schemas/DirectoryType'
                InstanceAlias:
                  $ref: '#/components/schemas/DirectoryAlias'
                DirectoryId:
                  $ref: '#/components/schemas/DirectoryId'
                InboundCallsEnabled:
                  $ref: '#/components/schemas/InboundCallsEnabled'
                OutboundCallsEnabled:
                  $ref: '#/components/schemas/OutboundCallsEnabled'
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: ListInstances
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        Return a list of instances which are in active state, creation-in-progress state, and failed state. Instances that aren't successfully created (they are in a failed state) are returned only for 24 hours after the CreateInstance API was invoked.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResult10'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
  /instance/{InstanceId}/integration-associations:
    put:
      operationId: CreateIntegrationAssociation
      description: |-
        Creates an Amazon Web Services resource association with an Amazon Connect instance.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                IntegrationType:
                  $ref: '#/components/schemas/IntegrationType'
                IntegrationArn:
                  $ref: '#/components/schemas/ARN'
                SourceApplicationUrl:
                  $ref: '#/components/schemas/URI'
                SourceApplicationName:
                  $ref: '#/components/schemas/SourceApplicationName'
                SourceType:
                  $ref: '#/components/schemas/SourceType'
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '409':
          description: |-
            A resource with the specified name already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: ListIntegrationAssociations
      description: |-
        Provides summary information about the Amazon Web Services resource associations for the specified Amazon Connect instance.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: integrationType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/IntegrationType'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResult100'
      - name: integrationArn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /contact/create-participant:
    post:
      operationId: CreateParticipant
      description: |-
        Adds a new participant into an on-going chat contact. For more information, see [Customize chat flow experiences by integrating custom participants](https://docs.aws.amazon.com/connect/latest/adminguide/chat-customize-flow.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                ContactId:
                  $ref: '#/components/schemas/ContactId'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
                ParticipantDetails:
                  $ref: '#/components/schemas/ParticipantDetailsToAdd'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /contact/persistent-contact-association/{InstanceId}/{InitialContactId}:
    post:
      operationId: CreatePersistentContactAssociation
      description: |-
        Enables rehydration of chats for the lifespan of a contact. For more information about chat rehydration, see [Enable persistent chat](https://docs.aws.amazon.com/connect/latest/adminguide/chat-persistence.html) in the _Amazon Connect Administrator Guide_.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: InitialContactId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ContactId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                RehydrationType:
                  $ref: '#/components/schemas/RehydrationType'
                SourceContactId:
                  $ref: '#/components/schemas/ContactId'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /predefined-attributes/{InstanceId}:
    put:
      operationId: CreatePredefinedAttribute
      description: |-
        Creates a new predefined attribute for the specified Amazon Connect instance. _Predefined attributes_ are attributes in an Amazon Connect instance that can be used to route contacts to an agent or pools of agents within a queue. For more information, see [Create predefined attributes for routing contacts to agents](https://docs.aws.amazon.com/connect/latest/adminguide/predefined-attributes.html).
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/PredefinedAttributeName'
                Values:
                  $ref: '#/components/schemas/PredefinedAttributeValues'
      responses:
        '200': {}
        '409':
          description: |-
            A resource with the specified name already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    get:
      operationId: ListPredefinedAttributes
      description: |-
        Lists predefined attributes for the specified Amazon Connect instance. _Predefined attributes_ are attributes in an Amazon Connect instance that can be used to route contacts to an agent or pools of agents within a queue. For more information, see [Create predefined attributes for routing contacts to agents](https://docs.aws.amazon.com/connect/latest/adminguide/predefined-attributes.html).
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResult100'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /prompts/{InstanceId}:
    put:
      operationId: CreatePrompt
      description: |-
        Creates a prompt. For more information about prompts, such as supported file types and maximum length, see [Create prompts](https://docs.aws.amazon.com/connect/latest/adminguide/prompts.html) in the _Amazon Connect Administrator Guide_.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/CommonNameLength127'
                Description:
                  $ref: '#/components/schemas/PromptDescription'
                S3Uri:
                  $ref: '#/components/schemas/S3Uri'
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '409':
          description: |-
            A resource with the specified name already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /push-notification/{InstanceId}/registrations:
    put:
      operationId: CreatePushNotificationRegistration
      description: |-
        Creates registration for a device token and a chat contact to receive real-time push notifications. For more information about push notifications, see [Set up push notifications in Amazon Connect for mobile chat](https://docs.aws.amazon.com/connect/latest/adminguide/enable-push-notifications-for-mobile-chat.html) in the _Amazon Connect Administrator Guide_.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
                PinpointAppArn:
                  $ref: '#/components/schemas/ARN'
                DeviceToken:
                  $ref: '#/components/schemas/DeviceToken'
                DeviceType:
                  $ref: '#/components/schemas/DeviceType'
                ContactConfiguration:
                  $ref: '#/components/schemas/ContactConfiguration'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            One or more of the specified parameters are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /queues/{InstanceId}:
    put:
      operationId: CreateQueue
      description: |-
        Creates a new queue for the specified Amazon Connect instance.

          * If the phone number is claimed to a traffic distribution group that was created in the same Region as the Amazon Connect instance where you are calling this API, then you can use a full phone number ARN or a UUID for `OutboundCallerIdNumberId`. However, if the phone number is claimed to a traffic distribution group that is in one Region, and you are calling this API from an instance in another Amazon Web Services Region that is associated with the traffic distribution group, you must provide a full phone number ARN. If a UUID is provided in this scenario, you will receive a `ResourceNotFoundException`.

          * Only use the phone number ARN format that doesn't contain `instance` in the path, for example, `arn:aws:connect:us-east-1:1234567890:phone-number/uuid`. This is the same ARN format that is returned when you call the [ListPhoneNumbersV2](https://docs.aws.amazon.com/connect/latest/APIReference/API_ListPhoneNumbersV2.html) API.

          * If you plan to use IAM policies to allow/deny access to this API for phone number resources claimed to a traffic distribution group, see [Allow or Deny queue API actions for phone numbers in a replica Region](https://docs.aws.amazon.com/connect/latest/adminguide/security_iam_resource-level-policy-examples.html#allow-deny-queue-actions-replica-region).
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/CommonNameLength127'
                Description:
                  $ref: '#/components/schemas/QueueDescription'
                OutboundCallerConfig:
                  $ref: '#/components/schemas/OutboundCallerConfig'
                OutboundEmailConfig:
                  $ref: '#/components/schemas/OutboundEmailConfig'
                HoursOfOperationId:
                  $ref: '#/components/schemas/HoursOfOperationId'
                MaxContacts:
                  $ref: '#/components/schemas/QueueMaxContacts'
                QuickConnectIds:
                  $ref: '#/components/schemas/QuickConnectsList'
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '409':
          description: |-
            A resource with the specified name already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /quick-connects/{InstanceId}:
    put:
      operationId: CreateQuickConnect
      description: |-
        Creates a quick connect for the specified Amazon Connect instance.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/QuickConnectName'
                Description:
                  $ref: '#/components/schemas/QuickConnectDescription'
                QuickConnectConfig:
                  $ref: '#/components/schemas/QuickConnectConfig'
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '409':
          description: |-
            A resource with the specified name already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    get:
      operationId: ListQuickConnects
      description: |-
        Provides information about the quick connects for the specified Amazon Connect instance.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResult1000'
      - name: QuickConnectTypes
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/QuickConnectTypes'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /routing-profiles/{InstanceId}:
    put:
      operationId: CreateRoutingProfile
      description: |-
        Creates a new routing profile.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/RoutingProfileName'
                Description:
                  $ref: '#/components/schemas/RoutingProfileDescription'
                DefaultOutboundQueueId:
                  $ref: '#/components/schemas/QueueId'
                QueueConfigs:
                  $ref: '#/components/schemas/RoutingProfileQueueConfigList'
                MediaConcurrencies:
                  $ref: '#/components/schemas/MediaConcurrencies'
                Tags:
                  $ref: '#/components/schemas/TagMap'
                AgentAvailabilityTimer:
                  $ref: '#/components/schemas/AgentAvailabilityTimer'
      responses:
        '200': {}
        '409':
          description: |-
            A resource with the specified name already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /rules/{InstanceId}:
    post:
      operationId: CreateRule
      description: |-
        Creates a rule for the specified Amazon Connect instance.

        Use the [Rules Function language](https://docs.aws.amazon.com/connect/latest/APIReference/connect-rules-language.html) to code conditions for the rule.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/RuleName'
                TriggerEventSource:
                  $ref: '#/components/schemas/RuleTriggerEventSource'
                Function:
                  $ref: '#/components/schemas/RuleFunction'
                Actions:
                  $ref: '#/components/schemas/RuleActions'
                PublishStatus:
                  $ref: '#/components/schemas/RulePublishStatus'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '409':
          description: |-
            A resource already has that name.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: ListRules
      description: |-
        List all rules for the specified Amazon Connect instance.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: publishStatus
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/RulePublishStatus'
      - name: eventSourceName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/EventSourceName'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResult200'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /security-profiles/{InstanceId}:
    put:
      operationId: CreateSecurityProfile
      description: |-
        Creates a security profile.

        For information about security profiles, see [Security Profiles](https://docs.aws.amazon.com/connect/latest/adminguide/connect-security-profiles.html) in the _Amazon Connect Administrator Guide_. For a mapping of the API name and user interface name of the security profile permissions, see [List of security profile permissions](https://docs.aws.amazon.com/connect/latest/adminguide/security-profile-list.html).
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SecurityProfileName:
                  $ref: '#/components/schemas/CreateSecurityProfileName'
                Description:
                  $ref: '#/components/schemas/SecurityProfileDescription'
                Permissions:
                  $ref: '#/components/schemas/PermissionsList'
                Tags:
                  $ref: '#/components/schemas/TagMap'
                AllowedAccessControlTags:
                  $ref: '#/components/schemas/AllowedAccessControlTags'
                TagRestrictedResources:
                  $ref: '#/components/schemas/TagRestrictedResourceList'
                Applications:
                  $ref: '#/components/schemas/Applications'
                HierarchyRestrictedResources:
                  $ref: '#/components/schemas/HierarchyRestrictedResourceList'
                AllowedAccessControlHierarchyGroupId:
                  $ref: '#/components/schemas/HierarchyGroupId'
      responses:
        '200': {}
        '409':
          description: |-
            A resource with the specified name already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /instance/{InstanceId}/task/template:
    put:
      operationId: CreateTaskTemplate
      description: |-
        Creates a new task template in the specified Amazon Connect instance.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/TaskTemplateName'
                Description:
                  $ref: '#/components/schemas/TaskTemplateDescription'
                ContactFlowId:
                  $ref: '#/components/schemas/ContactFlowId'
                SelfAssignFlowId:
                  $ref: '#/components/schemas/ContactFlowId'
                Constraints:
                  $ref: '#/components/schemas/TaskTemplateConstraints'
                Defaults:
                  $ref: '#/components/schemas/TaskTemplateDefaults'
                Status:
                  $ref: '#/components/schemas/TaskTemplateStatus'
                Fields:
                  $ref: '#/components/schemas/TaskTemplateFields'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The property is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyValidationException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: ListTaskTemplates
      description: |-
        Lists task templates for the specified Amazon Connect instance.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResult100'
      - name: status
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/TaskTemplateStatus'
      - name: name
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/TaskTemplateName'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /traffic-distribution-group:
    put:
      operationId: CreateTrafficDistributionGroup
      description: |-
        Creates a traffic distribution group given an Amazon Connect instance that has been replicated.

        The `SignInConfig` distribution is available only on a default `TrafficDistributionGroup` (see the `IsDefault` parameter in the [TrafficDistributionGroup](https://docs.aws.amazon.com/connect/latest/APIReference/API_TrafficDistributionGroup.html) data type). If you call `UpdateTrafficDistribution` with a modified `SignInConfig` and a non-default `TrafficDistributionGroup`, an `InvalidRequestException` is returned.

        For more information about creating traffic distribution groups, see [Set up traffic distribution groups](https://docs.aws.amazon.com/connect/latest/adminguide/setup-traffic-distribution-groups.html) in the _Amazon Connect Administrator Guide_.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/Name128'
                Description:
                  $ref: '#/components/schemas/Description250'
                InstanceId:
                  $ref: '#/components/schemas/InstanceIdOrArn'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '409':
          description: |-
            The resource is not ready.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotReadyException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /instance/{InstanceId}/integration-associations/{IntegrationAssociationId}/use-cases:
    put:
      operationId: CreateUseCase
      description: |-
        Creates a use case for an integration association.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: IntegrationAssociationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IntegrationAssociationId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                UseCaseType:
                  $ref: '#/components/schemas/UseCaseType'
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '409':
          description: |-
            A resource with the specified name already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: ListUseCases
      description: |-
        Lists the use cases for the integration association.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: IntegrationAssociationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IntegrationAssociationId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResult100'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /users/{InstanceId}:
    put:
      operationId: CreateUser
      description: |-
        Creates a user account for the specified Amazon Connect instance.

        Certain [UserIdentityInfo](https://docs.aws.amazon.com/connect/latest/APIReference/API_UserIdentityInfo.html) parameters are required in some situations. For example, `Email` is required if you are using SAML for identity management. `FirstName` and `LastName` are required if you are using Amazon Connect or SAML for identity management.

        For information about how to create users using the Amazon Connect admin website, see [Add Users](https://docs.aws.amazon.com/connect/latest/adminguide/user-management.html) in the _Amazon Connect Administrator Guide_.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Username:
                  $ref: '#/components/schemas/AgentUsername'
                Password:
                  $ref: '#/components/schemas/Password'
                IdentityInfo:
                  $ref: '#/components/schemas/UserIdentityInfo'
                PhoneConfig:
                  $ref: '#/components/schemas/UserPhoneConfig'
                DirectoryUserId:
                  $ref: '#/components/schemas/DirectoryUserId'
                SecurityProfileIds:
                  $ref: '#/components/schemas/SecurityProfileIds'
                RoutingProfileId:
                  $ref: '#/components/schemas/RoutingProfileId'
                HierarchyGroupId:
                  $ref: '#/components/schemas/HierarchyGroupId'
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '409':
          description: |-
            A resource with the specified name already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /user-hierarchy-groups/{InstanceId}:
    put:
      operationId: CreateUserHierarchyGroup
      description: |-
        Creates a new user hierarchy group.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/HierarchyGroupName'
                ParentGroupId:
                  $ref: '#/components/schemas/HierarchyGroupId'
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '409':
          description: |-
            A resource with the specified name already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /views/{InstanceId}:
    put:
      operationId: CreateView
      description: |-
        Creates a new view with the possible status of `SAVED` or `PUBLISHED`.

        The views will have a unique name for each connect instance.

        It performs basic content validation if the status is `SAVED` or full content validation if the status is set to `PUBLISHED`. An error is returned if validation fails. It associates either the `$SAVED` qualifier or both of the `$SAVED` and `$LATEST` qualifiers with the provided view content based on the status. The view is idempotent if ClientToken is provided.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ViewsInstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ClientToken:
                  $ref: '#/components/schemas/ViewsClientToken'
                Status:
                  $ref: '#/components/schemas/ViewStatus'
                Content:
                  $ref: '#/components/schemas/ViewInputContent'
                Description:
                  $ref: '#/components/schemas/ViewDescription'
                Name:
                  $ref: '#/components/schemas/ViewName'
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            That resource is already in use. Please try another.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Displayed when rate-related API limits are exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: ListViews
      description: |-
        Returns views in the given instance.

        Results are sorted primarily by type, and secondarily by name.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ViewsInstanceId'
      - name: type
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ViewType'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ViewsNextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Displayed when rate-related API limits are exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /views/{InstanceId}/{ViewId}/versions:
    put:
      operationId: CreateViewVersion
      description: |-
        Publishes a new version of the view identifier.

        Versions are immutable and monotonically increasing.

        It returns the highest version if there is no change in content compared to that version. An error is displayed if the supplied ViewContentSha256 is different from the ViewContentSha256 of the `$LATEST` alias.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ViewsInstanceId'
      - name: ViewId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ViewId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                VersionDescription:
                  $ref: '#/components/schemas/ViewDescription'
                ViewContentSha256:
                  $ref: '#/components/schemas/ViewContentSha256'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '409':
          description: |-
            That resource is already in use. Please try another.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Displayed when rate-related API limits are exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: ListViewVersions
      description: |-
        Returns all the available versions for the specified Amazon Connect instance and view identifier.

        Results will be sorted from highest to lowest.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ViewsInstanceId'
      - name: ViewId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ViewId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ViewsNextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Displayed when rate-related API limits are exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /vocabulary/{InstanceId}:
    post:
      operationId: CreateVocabulary
      description: |-
        Creates a custom vocabulary associated with your Amazon Connect instance. You can set a custom vocabulary to be your default vocabulary for a given language. Contact Lens for Amazon Connect uses the default vocabulary in post-call and real-time contact analysis sessions for that language.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
                VocabularyName:
                  $ref: '#/components/schemas/VocabularyName'
                LanguageCode:
                  $ref: '#/components/schemas/VocabularyLanguageCode'
                Content:
                  $ref: '#/components/schemas/VocabularyContent'
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '409':
          description: |-
            A resource already has that name.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /evaluation-forms/{InstanceId}/{EvaluationFormId}/deactivate:
    post:
      operationId: DeactivateEvaluationForm
      description: |-
        Deactivates an evaluation form in the specified Amazon Connect instance. After a form is deactivated, it is no longer available for users to start new evaluations based on the form.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: EvaluationFormId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                EvaluationFormVersion:
                  $ref: '#/components/schemas/VersionNumber'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            One or more of the specified parameters are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '409':
          description: |-
            A resource already has that name.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /contact-evaluations/{InstanceId}/{EvaluationId}:
    delete:
      operationId: DeleteContactEvaluation
      description: |-
        Deletes a contact evaluation in the specified Amazon Connect instance.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: EvaluationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceId'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            One or more of the specified parameters are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '409':
          description: |-
            A resource already has that name.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: DescribeContactEvaluation
      description: |-
        Describes a contact evaluation in the specified Amazon Connect instance.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: EvaluationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceId'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            One or more of the specified parameters are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    post:
      operationId: UpdateContactEvaluation
      description: |-
        Updates details about a contact evaluation in the specified Amazon Connect instance. A contact evaluation must be in draft state. Answers included in the request are merged with existing answers for the given evaluation. An answer or note can be deleted by passing an empty object (`{}`) to the question identifier.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: EvaluationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Answers:
                  $ref: '#/components/schemas/EvaluationAnswersInputMap'
                Notes:
                  $ref: '#/components/schemas/EvaluationNotesMap'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            One or more of the specified parameters are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '409':
          description: |-
            A resource already has that name.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /contact-flows/{InstanceId}/{ContactFlowId}:
    delete:
      operationId: DeleteContactFlow
      description: |-
        Deletes a flow for the specified Amazon Connect instance.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: ContactFlowId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ContactFlowId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: DescribeContactFlow
      description: |-
        Describes the specified flow.

        You can also create and update flows using the [Amazon Connect Flow language](https://docs.aws.amazon.com/connect/latest/APIReference/flow-language.html).

        Use the `$SAVED` alias in the request to describe the `SAVED` content of a Flow. For example, `arn:aws:.../contact-flow/{id}:$SAVED`. After a flow is published, `$SAVED` needs to be supplied to view saved content that has not been published.

        Use `arn:aws:.../contact-flow/{id}:{version}` to retrieve the content of a specific flow version.

        In the response, **Status** indicates the flow status as either `SAVED` or `PUBLISHED`. The `PUBLISHED` status will initiate validation on the content. `SAVED` does not initiate validation of the content. `SAVED` | `PUBLISHED`
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: ContactFlowId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ContactFlowId'
      responses:
        '200': {}
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /contact-flow-modules/{InstanceId}/{ContactFlowModuleId}:
    delete:
      operationId: DeleteContactFlowModule
      description: |-
        Deletes the specified flow module.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: ContactFlowModuleId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ContactFlowModuleId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: DescribeContactFlowModule
      description: |-
        Describes the specified flow module.

        Use the `$SAVED` alias in the request to describe the `SAVED` content of a Flow. For example, `arn:aws:.../contact-flow/{id}:$SAVED`. After a flow is published, `$SAVED` needs to be supplied to view saved content that has not been published.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: ContactFlowModuleId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ContactFlowModuleId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /contact-flows/{InstanceId}/{ContactFlowId}/version/{ContactFlowVersion}:
    delete:
      operationId: DeleteContactFlowVersion
      description: |-
        Deletes the particular version specified in flow version identifier.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: ContactFlowId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      - name: ContactFlowVersion
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceVersion'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /email-addresses/{InstanceId}/{EmailAddressId}:
    delete:
      operationId: DeleteEmailAddress
      description: |-
        Deletes email address from the specified Amazon Connect instance.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: EmailAddressId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EmailAddressId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '409':
          description: |-
            A resource already has that name.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: DescribeEmailAddress
      description: |-
        Describe email address form the specified Amazon Connect instance.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: EmailAddressId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EmailAddressId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    post:
      operationId: UpdateEmailAddressMetadata
      description: |-
        Updates an email address metadata. For more information about email addresses, see [Create email addresses](https://docs.aws.amazon.com/connect/latest/adminguide/create-email-address1.html) in the Amazon Connect Administrator Guide.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: EmailAddressId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EmailAddressId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  $ref: '#/components/schemas/Description'
                DisplayName:
                  $ref: '#/components/schemas/EmailAddressDisplayName'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            An entity with the same name already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotencyException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /evaluation-forms/{InstanceId}/{EvaluationFormId}:
    delete:
      operationId: DeleteEvaluationForm
      description: |-
        Deletes an evaluation form in the specified Amazon Connect instance.

          * If the version property is provided, only the specified version of the evaluation form is deleted.

          * If no version is provided, then the full form (all versions) is deleted.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: EvaluationFormId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceId'
      - name: version
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/VersionNumber'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            One or more of the specified parameters are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '409':
          description: |-
            A resource already has that name.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: DescribeEvaluationForm
      description: |-
        Describes an evaluation form in the specified Amazon Connect instance. If the version property is not provided, the latest version of the evaluation form is described.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: EvaluationFormId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceId'
      - name: version
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/VersionNumber'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            One or more of the specified parameters are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    put:
      operationId: UpdateEvaluationForm
      description: |-
        Updates details about a specific evaluation form version in the specified Amazon Connect instance. Question and section identifiers cannot be duplicated within the same evaluation form.

        This operation does not support partial updates. Instead it does a full update of evaluation form content.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: EvaluationFormId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                EvaluationFormVersion:
                  $ref: '#/components/schemas/VersionNumber'
                CreateNewVersion:
                  $ref: '#/components/schemas/BoxedBoolean'
                Title:
                  $ref: '#/components/schemas/EvaluationFormTitle'
                Description:
                  $ref: '#/components/schemas/EvaluationFormDescription'
                Items:
                  $ref: '#/components/schemas/EvaluationFormItemsList'
                ScoringStrategy:
                  $ref: '#/components/schemas/EvaluationFormScoringStrategy'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            One or more of the specified parameters are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '409':
          description: |-
            A resource already has that name.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /hours-of-operations/{InstanceId}/{HoursOfOperationId}:
    delete:
      operationId: DeleteHoursOfOperation
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        Deletes an hours of operation.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: HoursOfOperationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/HoursOfOperationId'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: DescribeHoursOfOperation
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        Describes the hours of operation.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: HoursOfOperationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/HoursOfOperationId'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    post:
      operationId: UpdateHoursOfOperation
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        Updates the hours of operation.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: HoursOfOperationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/HoursOfOperationId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/CommonNameLength127'
                Description:
                  $ref: '#/components/schemas/UpdateHoursOfOperationDescription'
                TimeZone:
                  $ref: '#/components/schemas/TimeZone'
                Config:
                  $ref: '#/components/schemas/HoursOfOperationConfigList'
      responses:
        '200': {}
        '409':
          description: |-
            A resource with the specified name already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /hours-of-operations/{InstanceId}/{HoursOfOperationId}/overrides/{HoursOfOperationOverrideId}:
    delete:
      operationId: DeleteHoursOfOperationOverride
      description: |-
        Deletes an hours of operation override in an Amazon Connect hours of operation resource
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: HoursOfOperationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/HoursOfOperationId'
      - name: HoursOfOperationOverrideId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/HoursOfOperationOverrideId'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: DescribeHoursOfOperationOverride
      description: |-
        Describes the hours of operation override.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: HoursOfOperationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/HoursOfOperationId'
      - name: HoursOfOperationOverrideId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/HoursOfOperationOverrideId'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    post:
      operationId: UpdateHoursOfOperationOverride
      description: |-
        Update the hours of operation override.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: HoursOfOperationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/HoursOfOperationId'
      - name: HoursOfOperationOverrideId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/HoursOfOperationOverrideId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/CommonHumanReadableName'
                Description:
                  $ref: '#/components/schemas/CommonHumanReadableDescription'
                Config:
                  $ref: '#/components/schemas/HoursOfOperationOverrideConfigList'
                EffectiveFrom:
                  $ref: '#/components/schemas/HoursOfOperationOverrideYearMonthDayDateFormat'
                EffectiveTill:
                  $ref: '#/components/schemas/HoursOfOperationOverrideYearMonthDayDateFormat'
      responses:
        '200': {}
        '409':
          description: |-
            A resource with the specified name already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /instance/{InstanceId}:
    delete:
      operationId: DeleteInstance
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        Deletes the Amazon Connect instance. For more information, see [Delete your Amazon Connect instance](https://docs.aws.amazon.com/connect/latest/adminguide/delete-connect-instance.html) in the _Amazon Connect Administrator Guide_.

        Amazon Connect enforces a limit on the total number of instances that you can create or delete in 30 days. If you exceed this limit, you will get an error message indicating there has been an excessive number of attempts at creating or deleting instances. You must wait 30 days before you can restart creating and deleting instances in your account.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: clientToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    get:
      operationId: DescribeInstance
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        Returns the current state of the specified instance identifier. It tracks the instance while it is being created and returns an error status, if applicable.

        If an instance is not created successfully, the instance status reason field returns details relevant to the reason. The instance in a failed state is returned only for 24 hours after the CreateInstance API was invoked.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /instance/{InstanceId}/integration-associations/{IntegrationAssociationId}:
    delete:
      operationId: DeleteIntegrationAssociation
      description: |-
        Deletes an Amazon Web Services resource association from an Amazon Connect instance. The association must not have any use cases associated with it.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: IntegrationAssociationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IntegrationAssociationId'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /predefined-attributes/{InstanceId}/{Name}:
    delete:
      operationId: DeletePredefinedAttribute
      description: |-
        Deletes a predefined attribute from the specified Amazon Connect instance.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PredefinedAttributeName'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '409':
          description: |-
            That resource is already in use. Please try another.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: DescribePredefinedAttribute
      description: |-
        Describes a predefined attribute for the specified Amazon Connect instance. _Predefined attributes_ are attributes in an Amazon Connect instance that can be used to route contacts to an agent or pools of agents within a queue. For more information, see [Create predefined attributes for routing contacts to agents](https://docs.aws.amazon.com/connect/latest/adminguide/predefined-attributes.html).
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PredefinedAttributeName'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    post:
      operationId: UpdatePredefinedAttribute
      description: |-
        Updates a predefined attribute for the specified Amazon Connect instance. _Predefined attributes_ are attributes in an Amazon Connect instance that can be used to route contacts to an agent or pools of agents within a queue. For more information, see [Create predefined attributes for routing contacts to agents](https://docs.aws.amazon.com/connect/latest/adminguide/predefined-attributes.html).
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PredefinedAttributeName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Values:
                  $ref: '#/components/schemas/PredefinedAttributeValues'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /prompts/{InstanceId}/{PromptId}:
    delete:
      operationId: DeletePrompt
      description: |-
        Deletes a prompt.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: PromptId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PromptId'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: DescribePrompt
      description: |-
        Describes the prompt.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: PromptId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PromptId'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    post:
      operationId: UpdatePrompt
      description: |-
        Updates a prompt.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: PromptId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PromptId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/CommonNameLength127'
                Description:
                  $ref: '#/components/schemas/PromptDescription'
                S3Uri:
                  $ref: '#/components/schemas/S3Uri'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /push-notification/{InstanceId}/registrations/{RegistrationId}:
    delete:
      operationId: DeletePushNotificationRegistration
      description: |-
        Deletes registration for a device token and a chat contact.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: RegistrationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RegistrationId'
      - name: contactId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ContactId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            One or more of the specified parameters are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /queues/{InstanceId}/{QueueId}:
    delete:
      operationId: DeleteQueue
      description: |-
        Deletes a queue.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: QueueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '409':
          description: |-
            That resource is already in use. Please try another.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: DescribeQueue
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        Describes the specified queue.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: QueueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /quick-connects/{InstanceId}/{QuickConnectId}:
    delete:
      operationId: DeleteQuickConnect
      description: |-
        Deletes a quick connect.

        After calling [DeleteUser](https://docs.aws.amazon.com/connect/latest/APIReference/API_DeleteUser.html), it's important to call `DeleteQuickConnect` to delete any records related to the deleted users. This will help you:

          * Avoid dangling resources that impact your service quotas.

          * Remove deleted users so they don't appear to agents as transfer options.

          * Avoid the disruption of other Amazon Connect processes, such as instance replication and syncing if you're using [Amazon Connect Global Resiliency](https://docs.aws.amazon.com/connect/latest/adminguide/setup-connect-global-resiliency.html).
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: QuickConnectId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QuickConnectId'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: DescribeQuickConnect
      description: |-
        Describes the quick connect.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: QuickConnectId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QuickConnectId'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /routing-profiles/{InstanceId}/{RoutingProfileId}:
    delete:
      operationId: DeleteRoutingProfile
      description: |-
        Deletes a routing profile.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: RoutingProfileId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RoutingProfileId'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '409':
          description: |-
            That resource is already in use. Please try another.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: DescribeRoutingProfile
      description: |-
        Describes the specified routing profile.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: RoutingProfileId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RoutingProfileId'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /rules/{InstanceId}/{RuleId}:
    delete:
      operationId: DeleteRule
      description: |-
        Deletes a rule for the specified Amazon Connect instance.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: RuleId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RuleId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: DescribeRule
      description: |-
        Describes a rule for the specified Amazon Connect instance.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: RuleId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RuleId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    put:
      operationId: UpdateRule
      description: |-
        Updates a rule for the specified Amazon Connect instance.

        Use the [Rules Function language](https://docs.aws.amazon.com/connect/latest/APIReference/connect-rules-language.html) to code conditions for the rule.
      parameters:
      - name: RuleId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RuleId'
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/RuleName'
                Function:
                  $ref: '#/components/schemas/RuleFunction'
                Actions:
                  $ref: '#/components/schemas/RuleActions'
                PublishStatus:
                  $ref: '#/components/schemas/RulePublishStatus'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '409':
          description: |-
            A resource already has that name.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /security-profiles/{InstanceId}/{SecurityProfileId}:
    delete:
      operationId: DeleteSecurityProfile
      description: |-
        Deletes a security profile.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: SecurityProfileId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SecurityProfileId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '409':
          description: |-
            That resource is already in use. Please try another.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: DescribeSecurityProfile
      description: |-
        Gets basic information about the security profile.

        For information about security profiles, see [Security Profiles](https://docs.aws.amazon.com/connect/latest/adminguide/connect-security-profiles.html) in the _Amazon Connect Administrator Guide_. For a mapping of the API name and user interface name of the security profile permissions, see [List of security profile permissions](https://docs.aws.amazon.com/connect/latest/adminguide/security-profile-list.html).
      parameters:
      - name: SecurityProfileId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SecurityProfileId'
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    post:
      operationId: UpdateSecurityProfile
      description: |-
        Updates a security profile.

        For information about security profiles, see [Security Profiles](https://docs.aws.amazon.com/connect/latest/adminguide/connect-security-profiles.html) in the _Amazon Connect Administrator Guide_. For a mapping of the API name and user interface name of the security profile permissions, see [List of security profile permissions](https://docs.aws.amazon.com/connect/latest/adminguide/security-profile-list.html).
      parameters:
      - name: SecurityProfileId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SecurityProfileId'
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  $ref: '#/components/schemas/SecurityProfileDescription'
                Permissions:
                  $ref: '#/components/schemas/PermissionsList'
                AllowedAccessControlTags:
                  $ref: '#/components/schemas/AllowedAccessControlTags'
                TagRestrictedResources:
                  $ref: '#/components/schemas/TagRestrictedResourceList'
                Applications:
                  $ref: '#/components/schemas/Applications'
                HierarchyRestrictedResources:
                  $ref: '#/components/schemas/HierarchyRestrictedResourceList'
                AllowedAccessControlHierarchyGroupId:
                  $ref: '#/components/schemas/HierarchyGroupId'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /instance/{InstanceId}/task/template/{TaskTemplateId}:
    delete:
      operationId: DeleteTaskTemplate
      description: |-
        Deletes the task template.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: TaskTemplateId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TaskTemplateId'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: GetTaskTemplate
      description: |-
        Gets details about a specific task template in the specified Amazon Connect instance.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: TaskTemplateId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TaskTemplateId'
      - name: snapshotVersion
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SnapshotVersion'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    post:
      operationId: UpdateTaskTemplate
      description: |-
        Updates details about a specific task template in the specified Amazon Connect instance. This operation does not support partial updates. Instead it does a full update of template content.
      parameters:
      - name: TaskTemplateId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TaskTemplateId'
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/TaskTemplateName'
                Description:
                  $ref: '#/components/schemas/TaskTemplateDescription'
                ContactFlowId:
                  $ref: '#/components/schemas/ContactFlowId'
                SelfAssignFlowId:
                  $ref: '#/components/schemas/ContactFlowId'
                Constraints:
                  $ref: '#/components/schemas/TaskTemplateConstraints'
                Defaults:
                  $ref: '#/components/schemas/TaskTemplateDefaults'
                Status:
                  $ref: '#/components/schemas/TaskTemplateStatus'
                Fields:
                  $ref: '#/components/schemas/TaskTemplateFields'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The property is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyValidationException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /traffic-distribution-group/{TrafficDistributionGroupId}:
    delete:
      operationId: DeleteTrafficDistributionGroup
      description: |-
        Deletes a traffic distribution group. This API can be called only in the Region where the traffic distribution group is created.

        For more information about deleting traffic distribution groups, see [Delete traffic distribution groups](https://docs.aws.amazon.com/connect/latest/adminguide/delete-traffic-distribution-groups.html) in the _Amazon Connect Administrator Guide_.
      parameters:
      - name: TrafficDistributionGroupId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TrafficDistributionGroupIdOrArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '409':
          description: |-
            That resource is already in use. Please try another.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: DescribeTrafficDistributionGroup
      description: |-
        Gets details and status of a traffic distribution group.
      parameters:
      - name: TrafficDistributionGroupId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TrafficDistributionGroupIdOrArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /instance/{InstanceId}/integration-associations/{IntegrationAssociationId}/use-cases/{UseCaseId}:
    delete:
      operationId: DeleteUseCase
      description: |-
        Deletes a use case from an integration association.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: IntegrationAssociationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IntegrationAssociationId'
      - name: UseCaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UseCaseId'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /users/{InstanceId}/{UserId}:
    delete:
      operationId: DeleteUser
      description: |-
        Deletes a user account from the specified Amazon Connect instance.

        For information about what happens to a user's data when their account is deleted, see [Delete Users from Your Amazon Connect Instance](https://docs.aws.amazon.com/connect/latest/adminguide/delete-users.html) in the _Amazon Connect Administrator Guide_.

        After calling DeleteUser, call [DeleteQuickConnect](https://docs.aws.amazon.com/connect/latest/APIReference/API_DeleteQuickConnect.html) to delete any records related to the deleted users. This will help you:

          * Avoid dangling resources that impact your service quotas.

          * Remove deleted users so they don't appear to agents as transfer options.

          * Avoid the disruption of other Amazon Connect processes, such as instance replication and syncing if you're using [Amazon Connect Global Resiliency](https://docs.aws.amazon.com/connect/latest/adminguide/setup-connect-global-resiliency.html).
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: UserId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UserId'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: DescribeUser
      description: |-
        Describes the specified user. You can [find the instance ID in the Amazon Connect console](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html) (it’s the final part of the ARN). The console does not display the user IDs. Instead, list the users and note the IDs provided in the output.
      parameters:
      - name: UserId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UserId'
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /user-hierarchy-groups/{InstanceId}/{HierarchyGroupId}:
    delete:
      operationId: DeleteUserHierarchyGroup
      description: |-
        Deletes an existing user hierarchy group. It must not be associated with any agents or have any active child groups.
      parameters:
      - name: HierarchyGroupId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/HierarchyGroupId'
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '409':
          description: |-
            That resource is already in use. Please try another.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: DescribeUserHierarchyGroup
      description: |-
        Describes the specified hierarchy group.
      parameters:
      - name: HierarchyGroupId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/HierarchyGroupId'
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /views/{InstanceId}/{ViewId}:
    delete:
      operationId: DeleteView
      description: |-
        Deletes the view entirely. It deletes the view and all associated qualifiers (versions and aliases).
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ViewsInstanceId'
      - name: ViewId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ViewId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '409':
          description: |-
            That resource is already in use. Please try another.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Displayed when rate-related API limits are exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: DescribeView
      description: |-
        Retrieves the view for the specified Amazon Connect instance and view identifier.

        The view identifier can be supplied as a ViewId or ARN.

        `$SAVED` needs to be supplied if a view is unpublished.

        The view identifier can contain an optional qualifier, for example, `:$SAVED`, which is either an actual version number or an Amazon Connect managed qualifier `$SAVED | $LATEST`. If it is not supplied, then `$LATEST` is assumed for customer managed views and an error is returned if there is no published content available. Version 1 is assumed for Amazon Web Services managed views.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ViewsInstanceId'
      - name: ViewId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ViewId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Displayed when rate-related API limits are exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    post:
      operationId: UpdateViewContent
      description: |-
        Updates the view content of the given view identifier in the specified Amazon Connect instance.

        It performs content validation if `Status` is set to `SAVED` and performs full content validation if `Status` is `PUBLISHED`. Note that the `$SAVED` alias' content will always be updated, but the `$LATEST` alias' content will only be updated if `Status` is `PUBLISHED`.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ViewsInstanceId'
      - name: ViewId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ViewId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Status:
                  $ref: '#/components/schemas/ViewStatus'
                Content:
                  $ref: '#/components/schemas/ViewInputContent'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '409':
          description: |-
            That resource is already in use. Please try another.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Displayed when rate-related API limits are exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /views/{InstanceId}/{ViewId}/versions/{ViewVersion}:
    delete:
      operationId: DeleteViewVersion
      description: |-
        Deletes the particular version specified in `ViewVersion` identifier.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ViewsInstanceId'
      - name: ViewId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ViewId'
      - name: ViewVersion
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ViewVersion'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '409':
          description: |-
            That resource is already in use. Please try another.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Displayed when rate-related API limits are exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /vocabulary-remove/{InstanceId}/{VocabularyId}:
    post:
      operationId: DeleteVocabulary
      description: |-
        Deletes the vocabulary that has the given identifier.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: VocabularyId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/VocabularyId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '409':
          description: |-
            That resource is already in use. Please try another.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /agent-status/{InstanceId}/{AgentStatusId}:
    get:
      operationId: DescribeAgentStatus
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        Describes an agent status.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: AgentStatusId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AgentStatusId'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    post:
      operationId: UpdateAgentStatus
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        Updates agent status.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: AgentStatusId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AgentStatusId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/AgentStatusName'
                Description:
                  $ref: '#/components/schemas/UpdateAgentStatusDescription'
                State:
                  $ref: '#/components/schemas/AgentStatusState'
                DisplayOrder:
                  $ref: '#/components/schemas/AgentStatusOrderNumber'
                ResetOrderNumber:
                  $ref: '#/components/schemas/Boolean'
      responses:
        '200': {}
        '409':
          description: |-
            A resource with the specified name already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /authentication-profiles/{InstanceId}/{AuthenticationProfileId}:
    get:
      operationId: DescribeAuthenticationProfile
      description: |-
        This API is in preview release for Amazon Connect and is subject to change. To request access to this API, contact Amazon Web ServicesSupport.

        Describes the target authentication profile.
      parameters:
      - name: AuthenticationProfileId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AuthenticationProfileId'
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    post:
      operationId: UpdateAuthenticationProfile
      description: |-
        This API is in preview release for Amazon Connect and is subject to change. To request access to this API, contact Amazon Web ServicesSupport.

        Updates the selected authentication profile.
      parameters:
      - name: AuthenticationProfileId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AuthenticationProfileId'
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/AuthenticationProfileName'
                Description:
                  $ref: '#/components/schemas/AuthenticationProfileDescription'
                AllowedIps:
                  $ref: '#/components/schemas/IpCidrList'
                BlockedIps:
                  $ref: '#/components/schemas/IpCidrList'
                PeriodicSessionDuration:
                  $ref: '#/components/schemas/AccessTokenDuration'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /contacts/{InstanceId}/{ContactId}:
    get:
      operationId: DescribeContact
      description: "This API is in preview release for Amazon Connect and is subject\
        \ to change.\n\nDescribes the specified contact.\n\n  * `CustomerEndpoint`\
        \ and `SystemEndpoint` are only populated for EMAIL contacts. \n\n  * Contact\
        \ information remains available in Amazon Connect for 24 months from the `InitiationTimestamp`,\
        \ and then it is deleted. Only contact information that is available in Amazon\
        \ Connect is returned by this API."
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: ContactId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ContactId'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    post:
      operationId: UpdateContact
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        Adds or updates user-defined contact information associated with the specified contact. At least one field to be updated must be present in the request.

        You can add or update user-defined contact information for both ongoing and completed contacts.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: ContactId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ContactId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/Name'
                Description:
                  $ref: '#/components/schemas/Description'
                References:
                  $ref: '#/components/schemas/ContactReferences'
                SegmentAttributes:
                  $ref: '#/components/schemas/SegmentAttributes'
                QueueInfo:
                  $ref: '#/components/schemas/QueueInfoInput'
                UserInfo:
                  $ref: '#/components/schemas/UserInfo'
                CustomerEndpoint:
                  $ref: '#/components/schemas/Endpoint'
                SystemEndpoint:
                  $ref: '#/components/schemas/Endpoint'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Operation cannot be performed at this time as there is a conflict with another operation or contact state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /instance/{InstanceId}/attribute/{AttributeType}:
    get:
      operationId: DescribeInstanceAttribute
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        Describes the specified instance attribute.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: AttributeType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceAttributeType'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    post:
      operationId: UpdateInstanceAttribute
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        Updates the value for the specified attribute type.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: AttributeType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceAttributeType'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Value:
                  $ref: '#/components/schemas/InstanceAttributeValue'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /instance/{InstanceId}/storage-config/{AssociationId}:
    get:
      operationId: DescribeInstanceStorageConfig
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        Retrieves the current storage configurations for the specified resource type, association ID, and instance ID.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: AssociationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AssociationId'
      - name: resourceType
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/InstanceStorageResourceType'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    delete:
      operationId: DisassociateInstanceStorageConfig
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        Removes the storage type configurations for the specified resource type and association ID.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: AssociationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AssociationId'
      - name: resourceType
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/InstanceStorageResourceType'
      - name: clientToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    post:
      operationId: UpdateInstanceStorageConfig
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        Updates an existing configuration for a resource type. This API is idempotent.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: AssociationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AssociationId'
      - name: resourceType
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/InstanceStorageResourceType'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                StorageConfig:
                  $ref: '#/components/schemas/InstanceStorageConfig'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /phone-number/{PhoneNumberId}:
    get:
      operationId: DescribePhoneNumber
      description: |-
        Gets details and status of a phone number that’s claimed to your Amazon Connect instance or traffic distribution group.

        If the number is claimed to a traffic distribution group, and you are calling in the Amazon Web Services Region where the traffic distribution group was created, you can use either a phone number ARN or UUID value for the `PhoneNumberId` URI request parameter. However, if the number is claimed to a traffic distribution group and you are calling this API in the alternate Amazon Web Services Region associated with the traffic distribution group, you must provide a full phone number ARN. If a UUID is provided in this scenario, you receive a `ResourceNotFoundException`.
      parameters:
      - name: PhoneNumberId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PhoneNumberId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            One or more of the specified parameters are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    delete:
      operationId: ReleasePhoneNumber
      description: |-
        Releases a phone number previously claimed to an Amazon Connect instance or traffic distribution group. You can call this API only in the Amazon Web Services Region where the number was claimed.

        To release phone numbers from a traffic distribution group, use the `ReleasePhoneNumber` API, not the Amazon Connect admin website.

        After releasing a phone number, the phone number enters into a cooldown period for up to 180 days. It cannot be searched for or claimed again until the period has ended. If you accidentally release a phone number, contact Amazon Web ServicesSupport.

        If you plan to claim and release numbers frequently, contact us for a service quota exception. Otherwise, it is possible you will be blocked from claiming and releasing any more numbers until up to 180 days past the oldest number released has expired.

        By default you can claim and release up to 200% of your maximum number of active phone numbers. If you claim and release phone numbers using the UI or API during a rolling 180 day cycle that exceeds 200% of your phone number service level quota, you will be blocked from claiming any more numbers until 180 days past the oldest number released has expired.

        For example, if you already have 99 claimed numbers and a service level quota of 99 phone numbers, and in any 180 day period you release 99, claim 99, and then release 99, you will have exceeded the 200% limit. At that point you are blocked from claiming any more numbers until you open an Amazon Web Services support ticket.
      parameters:
      - name: PhoneNumberId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PhoneNumberId'
      - name: clientToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            That resource is already in use. Please try another.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            One or more of the specified parameters are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    put:
      operationId: UpdatePhoneNumber
      description: |-
        Updates your claimed phone number from its current Amazon Connect instance or traffic distribution group to another Amazon Connect instance or traffic distribution group in the same Amazon Web Services Region.

        After using this API, you must verify that the phone number is attached to the correct flow in the target instance or traffic distribution group. You need to do this because the API switches only the phone number to a new instance or traffic distribution group. It doesn't migrate the flow configuration of the phone number, too.

        You can call [DescribePhoneNumber](https://docs.aws.amazon.com/connect/latest/APIReference/API_DescribePhoneNumber.html) API to verify the status of a previous [UpdatePhoneNumber](https://docs.aws.amazon.com/connect/latest/APIReference/API_UpdatePhoneNumber.html) operation.
      parameters:
      - name: PhoneNumberId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PhoneNumberId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TargetArn:
                  $ref: '#/components/schemas/ARN'
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            That resource is already in use. Please try another.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            One or more of the specified parameters are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /user-hierarchy-structure/{InstanceId}:
    get:
      operationId: DescribeUserHierarchyStructure
      description: |-
        Describes the hierarchy structure of the specified Amazon Connect instance.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    post:
      operationId: UpdateUserHierarchyStructure
      description: |-
        Updates the user hierarchy structure: add, remove, and rename user hierarchy levels.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                HierarchyStructure:
                  $ref: '#/components/schemas/HierarchyStructureUpdate'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '409':
          description: |-
            That resource is already in use. Please try another.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /vocabulary/{InstanceId}/{VocabularyId}:
    get:
      operationId: DescribeVocabulary
      description: |-
        Describes the specified vocabulary.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: VocabularyId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/VocabularyId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /flow-associations/{InstanceId}/{ResourceId}/{ResourceType}:
    delete:
      operationId: DisassociateFlow
      description: |-
        Disassociates a connect resource from a flow.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: ResourceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      - name: ResourceType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FlowAssociationResourceType'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: GetFlowAssociation
      description: |-
        Retrieves the flow associated for a given resource.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: ResourceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      - name: ResourceType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FlowAssociationResourceType'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /queues/{InstanceId}/{QueueId}/disassociate-quick-connects:
    post:
      operationId: DisassociateQueueQuickConnects
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        Disassociates a set of quick connects from a queue.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: QueueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                QuickConnectIds:
                  $ref: '#/components/schemas/QuickConnectsList'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /routing-profiles/{InstanceId}/{RoutingProfileId}/disassociate-queues:
    post:
      operationId: DisassociateRoutingProfileQueues
      description: |-
        Disassociates a set of queues from a routing profile.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: RoutingProfileId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RoutingProfileId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                QueueReferences:
                  $ref: '#/components/schemas/RoutingProfileQueueReferenceList'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /instance/{InstanceId}/security-key/{AssociationId}:
    delete:
      operationId: DisassociateSecurityKey
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        Deletes the specified security key.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: AssociationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AssociationId'
      - name: clientToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /users/{InstanceId}/{UserId}/disassociate-proficiencies:
    post:
      operationId: DisassociateUserProficiencies
      description: |-
        Disassociates a set of proficiencies from a user.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: UserId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UserId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                UserProficiencies:
                  $ref: '#/components/schemas/UserProficiencyDisassociateList'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /users/{InstanceId}/{UserId}/contact:
    post:
      operationId: DismissUserContact
      description: |-
        Dismisses contacts from an agent’s CCP and returns the agent to an available state, which allows the agent to receive a new routed contact. Contacts can only be dismissed if they are in a `MISSED`, `ERROR`, `ENDED`, or `REJECTED` state in the [Agent Event Stream](https://docs.aws.amazon.com/connect/latest/adminguide/about-contact-states.html).
      parameters:
      - name: UserId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UserId'
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ContactId:
                  $ref: '#/components/schemas/ContactId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /contact/attributes/{InstanceId}/{InitialContactId}:
    get:
      operationId: GetContactAttributes
      description: |-
        Retrieves the contact attributes for the specified contact.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: InitialContactId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ContactId'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /metrics/current/{InstanceId}:
    post:
      operationId: GetCurrentMetricData
      description: |-
        Gets the real-time metric data from the specified Amazon Connect instance.

        For a description of each metric, see [Real-time Metrics Definitions](https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html) in the _Amazon Connect Administrator Guide_.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Filters:
                  $ref: '#/components/schemas/Filters'
                Groupings:
                  $ref: '#/components/schemas/Groupings'
                CurrentMetrics:
                  $ref: '#/components/schemas/CurrentMetrics'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                MaxResults:
                  $ref: '#/components/schemas/MaxResult100'
                SortCriteria:
                  $ref: '#/components/schemas/CurrentMetricSortCriteriaMaxOne'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /metrics/userdata/{InstanceId}:
    post:
      operationId: GetCurrentUserData
      description: |-
        Gets the real-time active user data from the specified Amazon Connect instance.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Filters:
                  $ref: '#/components/schemas/UserDataFilters'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                MaxResults:
                  $ref: '#/components/schemas/MaxResult100'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /effective-hours-of-operations/{InstanceId}/{HoursOfOperationId}:
    get:
      operationId: GetEffectiveHoursOfOperations
      description: |-
        Get the hours of operations with the effective override applied.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: HoursOfOperationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/HoursOfOperationId'
      - name: fromDate
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/HoursOfOperationOverrideYearMonthDayDateFormat'
      - name: toDate
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/HoursOfOperationOverrideYearMonthDayDateFormat'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /user/federate/{InstanceId}:
    get:
      operationId: GetFederationToken
      description: |-
        Supports SAML sign-in for Amazon Connect. Retrieves a token for federation. The token is for the Amazon Connect user which corresponds to the IAM credentials that were used to invoke this action.

        For more information about how SAML sign-in works in Amazon Connect, see [Configure SAML with IAM for Amazon Connect in the _Amazon Connect Administrator Guide_.](https://docs.aws.amazon.com/connect/latest/adminguide/configure-saml.html )

        This API doesn't support root users. If you try to invoke GetFederationToken with root credentials, an error message similar to the following one appears:

        `Provided identity: Principal: .... User: .... cannot be used for federation with Amazon Connect`
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      responses:
        '200': {}
        '409':
          description: |-
            A resource with the specified name already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            No user with the specified credentials was found in the Amazon Connect instance.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
  /metrics/historical/{InstanceId}:
    post:
      operationId: GetMetricData
      description: |-
        Gets historical metric data from the specified Amazon Connect instance.

        For a description of each historical metric, see [Historical Metrics Definitions](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html) in the _Amazon Connect Administrator Guide_.

        We recommend using the [GetMetricDataV2](https://docs.aws.amazon.com/connect/latest/APIReference/API_GetMetricDataV2.html) API. It provides more flexibility, features, and the ability to query longer time ranges than `GetMetricData`. Use it to retrieve historical agent and contact metrics for the last 3 months, at varying intervals. You can also use it to build custom dashboards to measure historical queue and agent performance. For example, you can track the number of incoming contacts for the last 7 days, with data split by day, to see how contact volume changed per day of the week.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                StartTime:
                  $ref: '#/components/schemas/Timestamp'
                EndTime:
                  $ref: '#/components/schemas/Timestamp'
                Filters:
                  $ref: '#/components/schemas/Filters'
                Groupings:
                  $ref: '#/components/schemas/Groupings'
                HistoricalMetrics:
                  $ref: '#/components/schemas/HistoricalMetrics'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                MaxResults:
                  $ref: '#/components/schemas/MaxResult100'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /metrics/data:
    post:
      operationId: GetMetricDataV2
      description: |-
        Gets metric data from the specified Amazon Connect instance.

        `GetMetricDataV2` offers more features than [GetMetricData](https://docs.aws.amazon.com/connect/latest/APIReference/API_GetMetricData.html), the previous version of this API. It has new metrics, offers filtering at a metric level, and offers the ability to filter and group data by channels, queues, routing profiles, agents, and agent hierarchy levels. It can retrieve historical data for the last 3 months, at varying intervals. It does not support agent queues.

        For a description of the historical metrics that are supported by `GetMetricDataV2` and `GetMetricData`, see [Historical metrics definitions](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html) in the _Amazon Connect Administrator Guide_.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ResourceArn:
                  $ref: '#/components/schemas/ARN'
                StartTime:
                  $ref: '#/components/schemas/Timestamp'
                EndTime:
                  $ref: '#/components/schemas/Timestamp'
                Interval:
                  $ref: '#/components/schemas/IntervalDetails'
                Filters:
                  $ref: '#/components/schemas/FiltersV2List'
                Groupings:
                  $ref: '#/components/schemas/GroupingsV2'
                Metrics:
                  $ref: '#/components/schemas/MetricsV2'
                NextToken:
                  $ref: '#/components/schemas/NextToken2500'
                MaxResults:
                  $ref: '#/components/schemas/MaxResult100'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /prompts/{InstanceId}/{PromptId}/file:
    get:
      operationId: GetPromptFile
      description: |-
        Gets the prompt file.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: PromptId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PromptId'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /traffic-distribution/{Id}:
    get:
      operationId: GetTrafficDistribution
      description: |-
        Retrieves the current traffic distribution for a given traffic distribution group.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TrafficDistributionGroupIdOrArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    put:
      operationId: UpdateTrafficDistribution
      description: |-
        Updates the traffic distribution for a given traffic distribution group.

        When you shift telephony traffic, also shift agents and/or agent sign-ins to ensure they can handle the calls in the other Region. If you don't shift the agents, voice calls will go to the shifted Region but there won't be any agents available to receive the calls.

        The `SignInConfig` distribution is available only on a default `TrafficDistributionGroup` (see the `IsDefault` parameter in the [TrafficDistributionGroup](https://docs.aws.amazon.com/connect/latest/APIReference/API_TrafficDistributionGroup.html) data type). If you call `UpdateTrafficDistribution` with a modified `SignInConfig` and a non-default `TrafficDistributionGroup`, an `InvalidRequestException` is returned.

        For more information about updating a traffic distribution group, see [Update telephony traffic distribution across Amazon Web Services Regions ](https://docs.aws.amazon.com/connect/latest/adminguide/update-telephony-traffic-distribution.html) in the _Amazon Connect Administrator Guide_.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TrafficDistributionGroupIdOrArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TelephonyConfig:
                  $ref: '#/components/schemas/TelephonyConfig'
                SignInConfig:
                  $ref: '#/components/schemas/SignInConfig'
                AgentConfig:
                  $ref: '#/components/schemas/AgentConfig'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '409':
          description: |-
            A resource already has that name.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /phone-number/import:
    post:
      operationId: ImportPhoneNumber
      description: |-
        Imports a claimed phone number from an external service, such as Amazon Web Services End User Messaging, into an Amazon Connect instance. You can call this API only in the same Amazon Web Services Region where the Amazon Connect instance was created.

        Call the [DescribePhoneNumber](https://docs.aws.amazon.com/connect/latest/APIReference/API_DescribePhoneNumber.html) API to verify the status of a previous `ImportPhoneNumber` operation.

        If you plan to claim or import numbers and then release numbers frequently, contact us for a service quota exception. Otherwise, it is possible you will be blocked from claiming and releasing any more numbers until up to 180 days past the oldest number released has expired.

        By default you can claim or import and then release up to 200% of your maximum number of active phone numbers. If you claim or import and then release phone numbers using the UI or API during a rolling 180 day cycle that exceeds 200% of your phone number service level quota, you will be blocked from claiming or importing any more numbers until 180 days past the oldest number released has expired.

        For example, if you already have 99 claimed or imported numbers and a service level quota of 99 phone numbers, and in any 180 day period you release 99, claim 99, and then release 99, you will have exceeded the 200% limit. At that point you are blocked from claiming any more numbers until you open an Amazon Web ServicesSupport ticket.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                SourcePhoneNumberArn:
                  $ref: '#/components/schemas/ARN'
                PhoneNumberDescription:
                  $ref: '#/components/schemas/PhoneNumberDescription'
                Tags:
                  $ref: '#/components/schemas/TagMap'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            An entity with the same name already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotencyException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            One or more of the specified parameters are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /analytics-data/instance/{InstanceId}/datasets:
    get:
      operationId: ListAnalyticsDataLakeDataSets
      description: |-
        Lists the data lake datasets available to associate with for a given Amazon Connect instance.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResult1000'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /instance/{InstanceId}/approved-origins:
    get:
      operationId: ListApprovedOrigins
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        Returns a paginated list of all approved origins associated with the instance.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResult25'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /contact/associated/{InstanceId}:
    get:
      operationId: ListAssociatedContacts
      description: |-
        Provides information about contact tree, a list of associated contacts with a unique identifier.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: contactId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ContactId'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ListAssociatedContactsRequestMaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /authentication-profiles-summary/{InstanceId}:
    get:
      operationId: ListAuthenticationProfiles
      description: |-
        This API is in preview release for Amazon Connect and is subject to change. To request access to this API, contact Amazon Web ServicesSupport.

        Provides summary information about the authentication profiles in a specified Amazon Connect instance.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResult1000'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /instance/{InstanceId}/bots:
    get:
      operationId: ListBots
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        For the specified version of Amazon Lex, returns a paginated list of all the Amazon Lex bots currently associated with the instance. Use this API to return both Amazon Lex V1 and V2 bots.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResult25'
      - name: lexVersion
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/LexVersion'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /contact-evaluations/{InstanceId}:
    get:
      operationId: ListContactEvaluations
      description: |-
        Lists contact evaluations in the specified Amazon Connect instance.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: contactId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ContactId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            One or more of the specified parameters are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    put:
      operationId: StartContactEvaluation
      description: |-
        Starts an empty evaluation in the specified Amazon Connect instance, using the given evaluation form for the particular contact. The evaluation form version used for the contact evaluation corresponds to the currently activated version. If no version is activated for the evaluation form, the contact evaluation cannot be started.

        Evaluations created through the public API do not contain answer values suggested from automation.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ContactId:
                  $ref: '#/components/schemas/ContactId'
                EvaluationFormId:
                  $ref: '#/components/schemas/ResourceId'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            One or more of the specified parameters are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '409':
          description: |-
            A resource already has that name.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /contact-flow-modules-summary/{InstanceId}:
    get:
      operationId: ListContactFlowModules
      description: |-
        Provides information about the flow modules for the specified Amazon Connect instance.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResult1000'
      - name: state
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ContactFlowModuleState'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /contact-flows/{InstanceId}/{ContactFlowId}/versions:
    get:
      operationId: ListContactFlowVersions
      description: |-
        Returns all the available versions for the specified Amazon Connect instance and flow identifier.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: ContactFlowId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResult1000'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /contact-flows-summary/{InstanceId}:
    get:
      operationId: ListContactFlows
      description: |-
        Provides information about the flows for the specified Amazon Connect instance.

        You can also create and update flows using the [Amazon Connect Flow language](https://docs.aws.amazon.com/connect/latest/APIReference/flow-language.html).

        For more information about flows, see [Flows](https://docs.aws.amazon.com/connect/latest/adminguide/concepts-contact-flows.html) in the _Amazon Connect Administrator Guide_.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: contactFlowTypes
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ContactFlowTypes'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResult1000'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /contact/references/{InstanceId}/{ContactId}:
    get:
      operationId: ListContactReferences
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        For the specified `referenceTypes`, returns a list of references associated with the contact. _References_ are links to documents that are related to a contact, such as emails, attachments, or URLs.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: ContactId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ContactId'
      - name: referenceTypes
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ReferenceTypes'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /default-vocabulary-summary/{InstanceId}:
    post:
      operationId: ListDefaultVocabularies
      description: |-
        Lists the default vocabularies for the specified Amazon Connect instance.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                LanguageCode:
                  $ref: '#/components/schemas/VocabularyLanguageCode'
                MaxResults:
                  $ref: '#/components/schemas/MaxResult100'
                NextToken:
                  $ref: '#/components/schemas/VocabularyNextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /evaluation-forms/{InstanceId}/{EvaluationFormId}/versions:
    get:
      operationId: ListEvaluationFormVersions
      description: |-
        Lists versions of an evaluation form in the specified Amazon Connect instance.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: EvaluationFormId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceId'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResult100'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            One or more of the specified parameters are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /flow-associations-summary/{InstanceId}:
    get:
      operationId: ListFlowAssociations
      description: |-
        List the flow association based on the filters.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: ResourceType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ListFlowAssociationResourceType'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResult1000'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /hours-of-operations-summary/{InstanceId}:
    get:
      operationId: ListHoursOfOperations
      description: |-
        Provides information about the hours of operation for the specified Amazon Connect instance.

        For more information about hours of operation, see [Set the Hours of Operation for a Queue](https://docs.aws.amazon.com/connect/latest/adminguide/set-hours-operation.html) in the _Amazon Connect Administrator Guide_.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResult1000'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /instance/{InstanceId}/attributes:
    get:
      operationId: ListInstanceAttributes
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        Returns a paginated list of all attribute types for the given instance.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResult7'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /instance/{InstanceId}/storage-configs:
    get:
      operationId: ListInstanceStorageConfigs
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        Returns a paginated list of storage configs for the identified instance and resource type.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: resourceType
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/InstanceStorageResourceType'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResult10'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /instance/{InstanceId}/lambda-functions:
    get:
      operationId: ListLambdaFunctions
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        Returns a paginated list of all Lambda functions that display in the dropdown options in the relevant flow blocks.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResult25'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /instance/{InstanceId}/lex-bots:
    get:
      operationId: ListLexBots
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        Returns a paginated list of all the Amazon Lex V1 bots currently associated with the instance. To return both Amazon Lex V1 and V2 bots, use the [ListBots](https://docs.aws.amazon.com/connect/latest/APIReference/API_ListBots.html) API.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResult25'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /phone-numbers-summary/{InstanceId}:
    get:
      operationId: ListPhoneNumbers
      description: "Provides information about the phone numbers for the specified\
        \ Amazon Connect instance.\n\nFor more information about phone numbers, see\
        \ [Set Up Phone Numbers for Your Contact Center](https://docs.aws.amazon.com/connect/latest/adminguide/contact-center-phone-number.html)\
        \ in the _Amazon Connect Administrator Guide_.\n\n  * We recommend using [ListPhoneNumbersV2](https://docs.aws.amazon.com/connect/latest/APIReference/API_ListPhoneNumbersV2.html)\
        \ to return phone number types. ListPhoneNumbers doesn't support number types\
        \ `UIFN`, `SHARED`, `THIRD_PARTY_TF`, and `THIRD_PARTY_DID`. While it returns\
        \ numbers of those types, it incorrectly lists them as `TOLL_FREE` or `DID`.\
        \ \n\n  * The phone number `Arn` value that is returned from each of the items\
        \ in the [PhoneNumberSummaryList](https://docs.aws.amazon.com/connect/latest/APIReference/API_ListPhoneNumbers.html#connect-ListPhoneNumbers-response-PhoneNumberSummaryList)\
        \ cannot be used to tag phone number resources. It will fail with a `ResourceNotFoundException`.\
        \ Instead, use the [ListPhoneNumbersV2](https://docs.aws.amazon.com/connect/latest/APIReference/API_ListPhoneNumbersV2.html)\
        \ API. It returns the new phone number ARN that can be used to tag phone number\
        \ resources."
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: phoneNumberTypes
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PhoneNumberTypes'
      - name: phoneNumberCountryCodes
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PhoneNumberCountryCodes'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResult1000'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /phone-number/list:
    post:
      operationId: ListPhoneNumbersV2
      description: |-
        Lists phone numbers claimed to your Amazon Connect instance or traffic distribution group. If the provided `TargetArn` is a traffic distribution group, you can call this API in both Amazon Web Services Regions associated with traffic distribution group.

        For more information about phone numbers, see [Set Up Phone Numbers for Your Contact Center](https://docs.aws.amazon.com/connect/latest/adminguide/contact-center-phone-number.html) in the _Amazon Connect Administrator Guide_.

          * When given an instance ARN, `ListPhoneNumbersV2` returns only the phone numbers claimed to the instance.

          * When given a traffic distribution group ARN `ListPhoneNumbersV2` returns only the phone numbers claimed to the traffic distribution group.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TargetArn:
                  $ref: '#/components/schemas/ARN'
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                MaxResults:
                  $ref: '#/components/schemas/MaxResult1000'
                NextToken:
                  $ref: '#/components/schemas/LargeNextToken'
                PhoneNumberCountryCodes:
                  $ref: '#/components/schemas/PhoneNumberCountryCodes'
                PhoneNumberTypes:
                  $ref: '#/components/schemas/PhoneNumberTypes'
                PhoneNumberPrefix:
                  $ref: '#/components/schemas/PhoneNumberPrefix'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            One or more of the specified parameters are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /prompts-summary/{InstanceId}:
    get:
      operationId: ListPrompts
      description: |-
        Provides information about the prompts for the specified Amazon Connect instance.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResult1000'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /queues/{InstanceId}/{QueueId}/quick-connects:
    get:
      operationId: ListQueueQuickConnects
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        Lists the quick connects associated with a queue.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: QueueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResult100'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /queues-summary/{InstanceId}:
    get:
      operationId: ListQueues
      description: |-
        Provides information about the queues for the specified Amazon Connect instance.

        If you do not specify a `QueueTypes` parameter, both standard and agent queues are returned. This might cause an unexpected truncation of results if you have more than 1000 agents and you limit the number of results of the API call in code.

        For more information about queues, see [Queues: Standard and Agent](https://docs.aws.amazon.com/connect/latest/adminguide/concepts-queues-standard-and-agent.html) in the _Amazon Connect Administrator Guide_.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: queueTypes
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/QueueTypes'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResult1000'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /contact/list-real-time-analysis-segments-v2/{InstanceId}/{ContactId}:
    post:
      operationId: ListRealtimeContactAnalysisSegmentsV2
      description: |-
        Provides a list of analysis segments for a real-time chat analysis session. This API supports CHAT channels only.

        This API does not support VOICE. If you attempt to use it for VOICE, an `InvalidRequestException` occurs.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: ContactId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ContactId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MaxResults:
                  $ref: '#/components/schemas/MaxResult100'
                NextToken:
                  $ref: '#/components/schemas/LargeNextToken'
                OutputType:
                  $ref: '#/components/schemas/RealTimeContactAnalysisOutputType'
                SegmentTypes:
                  $ref: '#/components/schemas/RealTimeContactAnalysisSegmentTypes'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /routing-profiles/{InstanceId}/{RoutingProfileId}/queues:
    get:
      operationId: ListRoutingProfileQueues
      description: |-
        Lists the queues associated with a routing profile.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: RoutingProfileId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RoutingProfileId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResult100'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    post:
      operationId: UpdateRoutingProfileQueues
      description: |-
        Updates the properties associated with a set of queues for a routing profile.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: RoutingProfileId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RoutingProfileId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                QueueConfigs:
                  $ref: '#/components/schemas/RoutingProfileQueueConfigList'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /routing-profiles-summary/{InstanceId}:
    get:
      operationId: ListRoutingProfiles
      description: |-
        Provides summary information about the routing profiles for the specified Amazon Connect instance.

        For more information about routing profiles, see [Routing Profiles](https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing.html) and [Create a Routing Profile](https://docs.aws.amazon.com/connect/latest/adminguide/routing-profiles.html) in the _Amazon Connect Administrator Guide_.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResult1000'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /instance/{InstanceId}/security-keys:
    get:
      operationId: ListSecurityKeys
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        Returns a paginated list of all security keys associated with the instance.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResult2'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /security-profiles-applications/{InstanceId}/{SecurityProfileId}:
    get:
      operationId: ListSecurityProfileApplications
      description: |-
        Returns a list of third-party applications in a specific security profile.
      parameters:
      - name: SecurityProfileId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SecurityProfileId'
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResult1000'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /security-profiles-permissions/{InstanceId}/{SecurityProfileId}:
    get:
      operationId: ListSecurityProfilePermissions
      description: |-
        Lists the permissions granted to a security profile.

        For information about security profiles, see [Security Profiles](https://docs.aws.amazon.com/connect/latest/adminguide/connect-security-profiles.html) in the _Amazon Connect Administrator Guide_. For a mapping of the API name and user interface name of the security profile permissions, see [List of security profile permissions](https://docs.aws.amazon.com/connect/latest/adminguide/security-profile-list.html).
      parameters:
      - name: SecurityProfileId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SecurityProfileId'
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResult1000'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /security-profiles-summary/{InstanceId}:
    get:
      operationId: ListSecurityProfiles
      description: |-
        Provides summary information about the security profiles for the specified Amazon Connect instance.

        For more information about security profiles, see [Security Profiles](https://docs.aws.amazon.com/connect/latest/adminguide/connect-security-profiles.html) in the _Amazon Connect Administrator Guide_. For a mapping of the API name and user interface name of the security profile permissions, see [List of security profile permissions](https://docs.aws.amazon.com/connect/latest/adminguide/security-profile-list.html).
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResult1000'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /tags/{resourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Lists the tags for the specified resource.

        For sample policies that use tags, see [Amazon Connect Identity-Based Policy Examples](https://docs.aws.amazon.com/connect/latest/adminguide/security_iam_id-based-policy-examples.html) in the _Amazon Connect Administrator Guide_.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    post:
      operationId: TagResource
      description: |-
        Adds the specified tags to the specified resource.

        Some of the supported resource types are agents, routing profiles, queues, quick connects, flows, agent statuses, hours of operation, phone numbers, security profiles, and task templates. For a complete list, see [Tagging resources in Amazon Connect](https://docs.aws.amazon.com/connect/latest/adminguide/tagging.html).

        For sample policies that use tags, see [Amazon Connect Identity-Based Policy Examples](https://docs.aws.amazon.com/connect/latest/adminguide/security_iam_id-based-policy-examples.html) in the _Amazon Connect Administrator Guide_.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    delete:
      operationId: UntagResource
      description: |-
        Removes the specified tags from the specified resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeyList'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /traffic-distribution-groups:
    get:
      operationId: ListTrafficDistributionGroups
      description: |-
        Lists traffic distribution groups.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResult10'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: instanceId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/InstanceIdOrArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /user-hierarchy-groups-summary/{InstanceId}:
    get:
      operationId: ListUserHierarchyGroups
      description: |-
        Provides summary information about the hierarchy groups for the specified Amazon Connect instance.

        For more information about agent hierarchies, see [Set Up Agent Hierarchies](https://docs.aws.amazon.com/connect/latest/adminguide/agent-hierarchy.html) in the _Amazon Connect Administrator Guide_.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResult1000'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /users/{InstanceId}/{UserId}/proficiencies:
    get:
      operationId: ListUserProficiencies
      description: |-
        Lists proficiencies associated with a user.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: UserId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UserId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResult100'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    post:
      operationId: UpdateUserProficiencies
      description: |-
        Updates the properties associated with the proficiencies of a user.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: UserId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UserId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                UserProficiencies:
                  $ref: '#/components/schemas/UserProficiencyList'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /users-summary/{InstanceId}:
    get:
      operationId: ListUsers
      description: |-
        Provides summary information about the users for the specified Amazon Connect instance.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResult1000'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /contact/monitor:
    post:
      operationId: MonitorContact
      description: |-
        Initiates silent monitoring of a contact. The Contact Control Panel (CCP) of the user specified by _userId_ will be set to silent monitoring mode on the contact.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                ContactId:
                  $ref: '#/components/schemas/ContactId'
                UserId:
                  $ref: '#/components/schemas/AgentResourceId'
                AllowedMonitorCapabilities:
                  $ref: '#/components/schemas/AllowedMonitorCapabilities'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            An entity with the same name already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotencyException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /contact/pause:
    post:
      operationId: PauseContact
      description: |-
        Allows pausing an ongoing task contact.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ContactId:
                  $ref: '#/components/schemas/ContactId'
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                ContactFlowId:
                  $ref: '#/components/schemas/ContactFlowId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Operation cannot be performed at this time as there is a conflict with another operation or contact state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /users/{InstanceId}/{UserId}/status:
    put:
      operationId: PutUserStatus
      description: |-
        Changes the current status of a user or agent in Amazon Connect. If the agent is currently handling a contact, this sets the agent's next status.

        For more information, see [Agent status](https://docs.aws.amazon.com/connect/latest/adminguide/metrics-agent-status.html) and [Set your next status](https://docs.aws.amazon.com/connect/latest/adminguide/set-next-status.html) in the _Amazon Connect Administrator Guide_.
      parameters:
      - name: UserId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UserId'
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AgentStatusId:
                  $ref: '#/components/schemas/AgentStatusId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /instance/{InstanceId}/replicate:
    post:
      operationId: ReplicateInstance
      description: |-
        Replicates an Amazon Connect instance in the specified Amazon Web Services Region and copies configuration information for Amazon Connect resources across Amazon Web Services Regions.

        For more information about replicating an Amazon Connect instance, see [Create a replica of your existing Amazon Connect instance](https://docs.aws.amazon.com/connect/latest/adminguide/create-replica-connect-instance.html) in the _Amazon Connect Administrator Guide_.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceIdOrArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ReplicaRegion:
                  $ref: '#/components/schemas/AwsRegion'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
                ReplicaAlias:
                  $ref: '#/components/schemas/DirectoryAlias'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '409':
          description: |-
            The resource is not ready.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotReadyException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /contact/resume:
    post:
      operationId: ResumeContact
      description: |-
        Allows resuming a task contact in a paused state.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ContactId:
                  $ref: '#/components/schemas/ContactId'
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                ContactFlowId:
                  $ref: '#/components/schemas/ContactFlowId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Operation cannot be performed at this time as there is a conflict with another operation or contact state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /contact/resume-recording:
    post:
      operationId: ResumeContactRecording
      description: |-
        When a contact is being recorded, and the recording has been suspended using SuspendContactRecording, this API resumes recording whatever recording is selected in the flow configuration: call, screen, or both. If only call recording or only screen recording is enabled, then it would resume.

        Voice and screen recordings are supported.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                ContactId:
                  $ref: '#/components/schemas/ContactId'
                InitialContactId:
                  $ref: '#/components/schemas/ContactId'
                ContactRecordingType:
                  $ref: '#/components/schemas/ContactRecordingType'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /search-agent-statuses:
    post:
      operationId: SearchAgentStatuses
      description: |-
        Searches AgentStatuses in an Amazon Connect instance, with optional filtering.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                NextToken:
                  $ref: '#/components/schemas/NextToken2500'
                MaxResults:
                  $ref: '#/components/schemas/MaxResult100'
                SearchFilter:
                  $ref: '#/components/schemas/AgentStatusSearchFilter'
                SearchCriteria:
                  $ref: '#/components/schemas/AgentStatusSearchCriteria'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /phone-number/search-available:
    post:
      operationId: SearchAvailablePhoneNumbers
      description: |-
        Searches for available phone numbers that you can claim to your Amazon Connect instance or traffic distribution group. If the provided `TargetArn` is a traffic distribution group, you can call this API in both Amazon Web Services Regions associated with the traffic distribution group.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TargetArn:
                  $ref: '#/components/schemas/ARN'
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                PhoneNumberCountryCode:
                  $ref: '#/components/schemas/PhoneNumberCountryCode'
                PhoneNumberType:
                  $ref: '#/components/schemas/PhoneNumberType'
                PhoneNumberPrefix:
                  $ref: '#/components/schemas/PhoneNumberPrefix'
                MaxResults:
                  $ref: '#/components/schemas/MaxResult10'
                NextToken:
                  $ref: '#/components/schemas/LargeNextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            One or more of the specified parameters are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /search-contact-flow-modules:
    post:
      operationId: SearchContactFlowModules
      description: |-
        Searches the flow modules in an Amazon Connect instance, with optional filtering.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                NextToken:
                  $ref: '#/components/schemas/NextToken2500'
                MaxResults:
                  $ref: '#/components/schemas/MaxResult100'
                SearchFilter:
                  $ref: '#/components/schemas/ContactFlowModuleSearchFilter'
                SearchCriteria:
                  $ref: '#/components/schemas/ContactFlowModuleSearchCriteria'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /search-contact-flows:
    post:
      operationId: SearchContactFlows
      description: |-
        Searches the flows in an Amazon Connect instance, with optional filtering.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                NextToken:
                  $ref: '#/components/schemas/NextToken2500'
                MaxResults:
                  $ref: '#/components/schemas/MaxResult100'
                SearchFilter:
                  $ref: '#/components/schemas/ContactFlowSearchFilter'
                SearchCriteria:
                  $ref: '#/components/schemas/ContactFlowSearchCriteria'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /search-contacts:
    post:
      operationId: SearchContacts
      description: |-
        Searches contacts in an Amazon Connect instance.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                TimeRange:
                  $ref: '#/components/schemas/SearchContactsTimeRange'
                SearchCriteria:
                  $ref: '#/components/schemas/SearchCriteria'
                MaxResults:
                  $ref: '#/components/schemas/MaxResult100'
                NextToken:
                  $ref: '#/components/schemas/LargeNextToken'
                Sort:
                  $ref: '#/components/schemas/Sort'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /search-email-addresses:
    post:
      operationId: SearchEmailAddresses
      description: |-
        Searches email address in an instance, with optional filtering.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                MaxResults:
                  $ref: '#/components/schemas/MaxResult100'
                NextToken:
                  $ref: '#/components/schemas/NextToken2500'
                SearchCriteria:
                  $ref: '#/components/schemas/EmailAddressSearchCriteria'
                SearchFilter:
                  $ref: '#/components/schemas/EmailAddressSearchFilter'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /search-hours-of-operation-overrides:
    post:
      operationId: SearchHoursOfOperationOverrides
      description: |-
        Searches the hours of operation overrides.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                NextToken:
                  $ref: '#/components/schemas/NextToken2500'
                MaxResults:
                  $ref: '#/components/schemas/MaxResult100'
                SearchFilter:
                  $ref: '#/components/schemas/HoursOfOperationSearchFilter'
                SearchCriteria:
                  $ref: '#/components/schemas/HoursOfOperationOverrideSearchCriteria'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /search-hours-of-operations:
    post:
      operationId: SearchHoursOfOperations
      description: |-
        Searches the hours of operation in an Amazon Connect instance, with optional filtering.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                NextToken:
                  $ref: '#/components/schemas/NextToken2500'
                MaxResults:
                  $ref: '#/components/schemas/MaxResult100'
                SearchFilter:
                  $ref: '#/components/schemas/HoursOfOperationSearchFilter'
                SearchCriteria:
                  $ref: '#/components/schemas/HoursOfOperationSearchCriteria'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /search-predefined-attributes:
    post:
      operationId: SearchPredefinedAttributes
      description: |-
        Searches predefined attributes that meet certain criteria. _Predefined attributes_ are attributes in an Amazon Connect instance that can be used to route contacts to an agent or pools of agents within a queue. For more information, see [Create predefined attributes for routing contacts to agents](https://docs.aws.amazon.com/connect/latest/adminguide/predefined-attributes.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                NextToken:
                  $ref: '#/components/schemas/NextToken2500'
                MaxResults:
                  $ref: '#/components/schemas/MaxResult100'
                SearchCriteria:
                  $ref: '#/components/schemas/PredefinedAttributeSearchCriteria'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /search-prompts:
    post:
      operationId: SearchPrompts
      description: |-
        Searches prompts in an Amazon Connect instance, with optional filtering.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                NextToken:
                  $ref: '#/components/schemas/NextToken2500'
                MaxResults:
                  $ref: '#/components/schemas/MaxResult100'
                SearchFilter:
                  $ref: '#/components/schemas/PromptSearchFilter'
                SearchCriteria:
                  $ref: '#/components/schemas/PromptSearchCriteria'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /search-queues:
    post:
      operationId: SearchQueues
      description: |-
        Searches queues in an Amazon Connect instance, with optional filtering.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                NextToken:
                  $ref: '#/components/schemas/NextToken2500'
                MaxResults:
                  $ref: '#/components/schemas/MaxResult500'
                SearchFilter:
                  $ref: '#/components/schemas/QueueSearchFilter'
                SearchCriteria:
                  $ref: '#/components/schemas/QueueSearchCriteria'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /search-quick-connects:
    post:
      operationId: SearchQuickConnects
      description: |-
        Searches quick connects in an Amazon Connect instance, with optional filtering.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                NextToken:
                  $ref: '#/components/schemas/NextToken2500'
                MaxResults:
                  $ref: '#/components/schemas/MaxResult100'
                SearchFilter:
                  $ref: '#/components/schemas/QuickConnectSearchFilter'
                SearchCriteria:
                  $ref: '#/components/schemas/QuickConnectSearchCriteria'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /search-resource-tags:
    post:
      operationId: SearchResourceTags
      description: |-
        Searches tags used in an Amazon Connect instance using optional search criteria.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                InstanceId:
                  $ref: '#/components/schemas/InstanceIdOrArn'
                ResourceTypes:
                  $ref: '#/components/schemas/ResourceTypeList'
                NextToken:
                  $ref: '#/components/schemas/NextToken2500'
                MaxResults:
                  $ref: '#/components/schemas/MaxResult100'
                SearchCriteria:
                  $ref: '#/components/schemas/ResourceTagsSearchCriteria'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            Maximum number (1000) of tags have been returned with current request. Consider changing request parameters to get more tags.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaximumResultReturnedException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /search-routing-profiles:
    post:
      operationId: SearchRoutingProfiles
      description: |-
        Searches routing profiles in an Amazon Connect instance, with optional filtering.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                NextToken:
                  $ref: '#/components/schemas/NextToken2500'
                MaxResults:
                  $ref: '#/components/schemas/MaxResult500'
                SearchFilter:
                  $ref: '#/components/schemas/RoutingProfileSearchFilter'
                SearchCriteria:
                  $ref: '#/components/schemas/RoutingProfileSearchCriteria'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /search-security-profiles:
    post:
      operationId: SearchSecurityProfiles
      description: |-
        Searches security profiles in an Amazon Connect instance, with optional filtering.

        For information about security profiles, see [Security Profiles](https://docs.aws.amazon.com/connect/latest/adminguide/connect-security-profiles.html) in the _Amazon Connect Administrator Guide_. For a mapping of the API name and user interface name of the security profile permissions, see [List of security profile permissions](https://docs.aws.amazon.com/connect/latest/adminguide/security-profile-list.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                NextToken:
                  $ref: '#/components/schemas/NextToken2500'
                MaxResults:
                  $ref: '#/components/schemas/MaxResult100'
                SearchCriteria:
                  $ref: '#/components/schemas/SecurityProfileSearchCriteria'
                SearchFilter:
                  $ref: '#/components/schemas/SecurityProfilesSearchFilter'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /search-user-hierarchy-groups:
    post:
      operationId: SearchUserHierarchyGroups
      description: |-
        Searches UserHierarchyGroups in an Amazon Connect instance, with optional filtering.

        The UserHierarchyGroup with `"LevelId": "0"` is the foundation for building levels on top of an instance. It is not user-definable, nor is it visible in the UI.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                NextToken:
                  $ref: '#/components/schemas/NextToken2500'
                MaxResults:
                  $ref: '#/components/schemas/MaxResult100'
                SearchFilter:
                  $ref: '#/components/schemas/UserHierarchyGroupSearchFilter'
                SearchCriteria:
                  $ref: '#/components/schemas/UserHierarchyGroupSearchCriteria'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /search-users:
    post:
      operationId: SearchUsers
      description: |-
        Searches users in an Amazon Connect instance, with optional filtering.

        `AfterContactWorkTimeLimit` is returned in milliseconds.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                NextToken:
                  $ref: '#/components/schemas/NextToken2500'
                MaxResults:
                  $ref: '#/components/schemas/MaxResult500'
                SearchFilter:
                  $ref: '#/components/schemas/UserSearchFilter'
                SearchCriteria:
                  $ref: '#/components/schemas/UserSearchCriteria'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /vocabulary-summary/{InstanceId}:
    post:
      operationId: SearchVocabularies
      description: |-
        Searches for vocabularies within a specific Amazon Connect instance using `State`, `NameStartsWith`, and `LanguageCode`.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MaxResults:
                  $ref: '#/components/schemas/MaxResult100'
                NextToken:
                  $ref: '#/components/schemas/VocabularyNextToken'
                State:
                  $ref: '#/components/schemas/VocabularyState'
                NameStartsWith:
                  $ref: '#/components/schemas/VocabularyName'
                LanguageCode:
                  $ref: '#/components/schemas/VocabularyLanguageCode'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /chat-integration-event:
    post:
      operationId: SendChatIntegrationEvent
      description: |-
        Processes chat integration events from Amazon Web Services or external integrations to Amazon Connect. A chat integration event includes:

          * SourceId, DestinationId, and Subtype: a set of identifiers, uniquely representing a chat

          * ChatEvent: details of the chat action to perform such as sending a message, event, or disconnecting from a chat

        When a chat integration event is sent with chat identifiers that do not map to an active chat contact, a new chat contact is also created before handling chat action.

        Access to this API is currently restricted to Amazon Web Services End User Messaging for supporting SMS integration.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SourceId:
                  $ref: '#/components/schemas/SourceId'
                DestinationId:
                  $ref: '#/components/schemas/DestinationId'
                Subtype:
                  $ref: '#/components/schemas/Subtype'
                Event:
                  $ref: '#/components/schemas/ChatEvent'
                NewSessionDetails:
                  $ref: '#/components/schemas/NewSessionDetails'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /instance/{InstanceId}/outbound-email:
    put:
      operationId: SendOutboundEmail
      description: |-
        Send outbound email for outbound campaigns. For more information about outbound campaigns, see [Set up Amazon Connect outbound campaigns](https://docs.aws.amazon.com/connect/latest/adminguide/enable-outbound-campaigns.html).

        Only the Amazon Connect outbound campaigns service principal is allowed to assume a role in your account and call this API.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                FromEmailAddress:
                  $ref: '#/components/schemas/EmailAddressInfo'
                DestinationEmailAddress:
                  $ref: '#/components/schemas/EmailAddressInfo'
                AdditionalRecipients:
                  $ref: '#/components/schemas/OutboundAdditionalRecipients'
                EmailMessage:
                  $ref: '#/components/schemas/OutboundEmailContent'
                TrafficType:
                  $ref: '#/components/schemas/TrafficType'
                SourceCampaign:
                  $ref: '#/components/schemas/SourceCampaign'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            An entity with the same name already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotencyException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /contact/chat:
    put:
      operationId: StartChatContact
      description: |-
        Initiates a flow to start a new chat for the customer. Response of this API provides a token required to obtain credentials from the [CreateParticipantConnection](https://docs.aws.amazon.com/connect-participant/latest/APIReference/API_CreateParticipantConnection.html) API in the Amazon Connect Participant Service.

        When a new chat contact is successfully created, clients must subscribe to the participant’s connection for the created chat within 5 minutes. This is achieved by invoking [CreateParticipantConnection](https://docs.aws.amazon.com/connect-participant/latest/APIReference/API_CreateParticipantConnection.html) with WEBSOCKET and CONNECTION_CREDENTIALS.

        A 429 error occurs in the following situations:

          * API rate limit is exceeded. API TPS throttling returns a `TooManyRequests` exception.

          * The [quota for concurrent active chats](https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html) is exceeded. Active chat throttling returns a `LimitExceededException`.

        If you use the `ChatDurationInMinutes` parameter and receive a 400 error, your account may not support the ability to configure custom chat durations. For more information, contact Amazon Web ServicesSupport.

        For more information about chat, see the following topics in the _Amazon Connect Administrator Guide_ :

          * [Concepts: Web and mobile messaging capabilities in Amazon Connect](https://docs.aws.amazon.com/connect/latest/adminguide/web-and-mobile-chat.html)

          * [Amazon Connect Chat security best practices](https://docs.aws.amazon.com/connect/latest/adminguide/security-best-practices.html#bp-security-chat)
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                ContactFlowId:
                  $ref: '#/components/schemas/ContactFlowId'
                Attributes:
                  $ref: '#/components/schemas/Attributes'
                ParticipantDetails:
                  $ref: '#/components/schemas/ParticipantDetails'
                InitialMessage:
                  $ref: '#/components/schemas/ChatMessage'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
                ChatDurationInMinutes:
                  $ref: '#/components/schemas/ChatDurationInMinutes'
                SupportedMessagingContentTypes:
                  $ref: '#/components/schemas/SupportedMessagingContentTypes'
                PersistentChat:
                  $ref: '#/components/schemas/PersistentChat'
                RelatedContactId:
                  $ref: '#/components/schemas/ContactId'
                SegmentAttributes:
                  $ref: '#/components/schemas/SegmentAttributes'
                CustomerId:
                  $ref: '#/components/schemas/CustomerIdNonEmpty'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '429':
          description: |-
            The allowed limit for the resource has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /contact/start-recording:
    post:
      operationId: StartContactRecording
      description: |-
        Starts recording the contact:

          * If the API is called _before_ the agent joins the call, recording starts when the agent joins the call.

          * If the API is called _after_ the agent joins the call, recording starts at the time of the API call.

        StartContactRecording is a one-time action. For example, if you use StopContactRecording to stop recording an ongoing call, you can't use StartContactRecording to restart it. For scenarios where the recording has started and you want to suspend and resume it, such as when collecting sensitive information (for example, a credit card number), use SuspendContactRecording and ResumeContactRecording.

        You can use this API to override the recording behavior configured in the [Set recording behavior](https://docs.aws.amazon.com/connect/latest/adminguide/set-recording-behavior.html) block.

        Only voice recordings are supported at this time.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                ContactId:
                  $ref: '#/components/schemas/ContactId'
                InitialContactId:
                  $ref: '#/components/schemas/ContactId'
                VoiceRecordingConfiguration:
                  $ref: '#/components/schemas/VoiceRecordingConfiguration'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /contact/start-streaming:
    post:
      operationId: StartContactStreaming
      description: |-
        Initiates real-time message streaming for a new chat contact.

        For more information about message streaming, see [Enable real-time chat message streaming](https://docs.aws.amazon.com/connect/latest/adminguide/chat-message-streaming.html) in the _Amazon Connect Administrator Guide_.

        For more information about chat, see the following topics in the _Amazon Connect Administrator Guide_ :

          * [Concepts: Web and mobile messaging capabilities in Amazon Connect](https://docs.aws.amazon.com/connect/latest/adminguide/web-and-mobile-chat.html)

          * [Amazon Connect Chat security best practices](https://docs.aws.amazon.com/connect/latest/adminguide/security-best-practices.html#bp-security-chat)
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                ContactId:
                  $ref: '#/components/schemas/ContactId'
                ChatStreamingConfiguration:
                  $ref: '#/components/schemas/ChatStreamingConfiguration'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '429':
          description: |-
            The allowed limit for the resource has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /contact/email:
    put:
      operationId: StartEmailContact
      description: |-
        Creates an inbound email contact and initiates a flow to start the email contact for the customer. Response of this API provides the ContactId of the email contact created.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                FromEmailAddress:
                  $ref: '#/components/schemas/EmailAddressInfo'
                DestinationEmailAddress:
                  $ref: '#/components/schemas/EmailAddress'
                Description:
                  $ref: '#/components/schemas/Description'
                References:
                  $ref: '#/components/schemas/ContactReferences'
                Name:
                  $ref: '#/components/schemas/Name'
                EmailMessage:
                  $ref: '#/components/schemas/InboundEmailContent'
                AdditionalRecipients:
                  $ref: '#/components/schemas/InboundAdditionalRecipients'
                Attachments:
                  $ref: '#/components/schemas/EmailAttachments'
                ContactFlowId:
                  $ref: '#/components/schemas/ContactFlowId'
                RelatedContactId:
                  $ref: '#/components/schemas/ContactId'
                Attributes:
                  $ref: '#/components/schemas/Attributes'
                SegmentAttributes:
                  $ref: '#/components/schemas/SegmentAttributes'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            An entity with the same name already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotencyException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /contact/outbound-chat:
    put:
      operationId: StartOutboundChatContact
      description: |-
        Initiates a new outbound SMS contact to a customer. Response of this API provides the `ContactId` of the outbound SMS contact created.

        **SourceEndpoint** only supports Endpoints with `CONNECT_PHONENUMBER_ARN` as Type and **DestinationEndpoint** only supports Endpoints with `TELEPHONE_NUMBER` as Type. **ContactFlowId** initiates the flow to manage the new SMS contact created.

        This API can be used to initiate outbound SMS contacts for an agent, or it can also deflect an ongoing contact to an outbound SMS contact by using the [StartOutboundChatContact](https://docs.aws.amazon.com/connect/latest/APIReference/API_StartOutboundChatContact.html) Flow Action.

        For more information about using SMS in Amazon Connect, see the following topics in the _Amazon Connect Administrator Guide_ :

          * [Set up SMS messaging](https://docs.aws.amazon.com/connect/latest/adminguide/setup-sms-messaging.html)

          * [Request an SMS-enabled phone number through AWS End User Messaging SMS](https://docs.aws.amazon.com/connect/latest/adminguide/sms-number.html)
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SourceEndpoint:
                  $ref: '#/components/schemas/Endpoint'
                DestinationEndpoint:
                  $ref: '#/components/schemas/Endpoint'
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                SegmentAttributes:
                  $ref: '#/components/schemas/SegmentAttributes'
                Attributes:
                  $ref: '#/components/schemas/Attributes'
                ContactFlowId:
                  $ref: '#/components/schemas/ContactFlowId'
                ChatDurationInMinutes:
                  $ref: '#/components/schemas/ChatDurationInMinutes'
                ParticipantDetails:
                  $ref: '#/components/schemas/ParticipantDetails'
                InitialSystemMessage:
                  $ref: '#/components/schemas/ChatMessage'
                RelatedContactId:
                  $ref: '#/components/schemas/ContactId'
                SupportedMessagingContentTypes:
                  $ref: '#/components/schemas/SupportedMessagingContentTypes'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Operation cannot be performed at this time as there is a conflict with another operation or contact state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /contact/outbound-email:
    put:
      operationId: StartOutboundEmailContact
      description: |-
        Initiates a flow to send an agent reply or outbound email contact (created from the CreateContact API) to a customer.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                ContactId:
                  $ref: '#/components/schemas/ContactId'
                FromEmailAddress:
                  $ref: '#/components/schemas/EmailAddressInfo'
                DestinationEmailAddress:
                  $ref: '#/components/schemas/EmailAddressInfo'
                AdditionalRecipients:
                  $ref: '#/components/schemas/OutboundAdditionalRecipients'
                EmailMessage:
                  $ref: '#/components/schemas/OutboundEmailContent'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            An entity with the same name already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotencyException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /contact/outbound-voice:
    put:
      operationId: StartOutboundVoiceContact
      description: |-
        Places an outbound call to a contact, and then initiates the flow. It performs the actions in the flow that's specified (in `ContactFlowId`).

        Agents do not initiate the outbound API, which means that they do not dial the contact. If the flow places an outbound call to a contact, and then puts the contact in queue, the call is then routed to the agent, like any other inbound case.

        There is a 60-second dialing timeout for this operation. If the call is not connected after 60 seconds, it fails.

        UK numbers with a 447 prefix are not allowed by default. Before you can dial these UK mobile numbers, you must submit a service quota increase request. For more information, see [Amazon Connect Service Quotas](https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html) in the _Amazon Connect Administrator Guide_.

        Campaign calls are not allowed by default. Before you can make a call with `TrafficType` = `CAMPAIGN`, you must submit a service quota increase request to the quota [Amazon Connect campaigns](https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html#outbound-communications-quotas).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/Name'
                Description:
                  $ref: '#/components/schemas/Description'
                References:
                  $ref: '#/components/schemas/ContactReferences'
                RelatedContactId:
                  $ref: '#/components/schemas/ContactId'
                DestinationPhoneNumber:
                  $ref: '#/components/schemas/PhoneNumber'
                ContactFlowId:
                  $ref: '#/components/schemas/ContactFlowId'
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
                SourcePhoneNumber:
                  $ref: '#/components/schemas/PhoneNumber'
                QueueId:
                  $ref: '#/components/schemas/QueueId'
                Attributes:
                  $ref: '#/components/schemas/Attributes'
                AnswerMachineDetectionConfig:
                  $ref: '#/components/schemas/AnswerMachineDetectionConfig'
                CampaignId:
                  $ref: '#/components/schemas/CampaignId'
                TrafficType:
                  $ref: '#/components/schemas/TrafficType'
      responses:
        '200': {}
        '403':
          description: |-
            The contact is not permitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboundContactNotPermittedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '429':
          description: |-
            The allowed limit for the resource has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /contact/screen-sharing:
    put:
      operationId: StartScreenSharing
      description: |-
        Starts screen sharing for a contact. For more information about screen sharing, see [Set up in-app, web, video calling, and screen sharing capabilities](https://docs.aws.amazon.com/connect/latest/adminguide/inapp-calling.html) in the _Amazon Connect Administrator Guide_.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                ContactId:
                  $ref: '#/components/schemas/ContactId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /contact/task:
    put:
      operationId: StartTaskContact
      description: |-
        Initiates a flow to start a new task contact. For more information about task contacts, see [Concepts: Tasks in Amazon Connect](https://docs.aws.amazon.com/connect/latest/adminguide/tasks.html) in the _Amazon Connect Administrator Guide_.

        When using `PreviousContactId` and `RelatedContactId` input parameters, note the following:

          * `PreviousContactId`

            * Any updates to user-defined task contact attributes on any contact linked through the same `PreviousContactId` will affect every contact in the chain.

            * There can be a maximum of 12 linked task contacts in a chain. That is, 12 task contacts can be created that share the same `PreviousContactId`.

          * `RelatedContactId`

            * Copies contact attributes from the related task contact to the new contact.

            * Any update on attributes in a new task contact does not update attributes on previous contact.

            * There’s no limit on the number of task contacts that can be created that use the same `RelatedContactId`.

        In addition, when calling StartTaskContact include only one of these parameters: `ContactFlowID`, `QuickConnectID`, or `TaskTemplateID`. Only one parameter is required as long as the task template has a flow configured to run it. If more than one parameter is specified, or only the `TaskTemplateID` is specified but it does not have a flow configured, the request returns an error because Amazon Connect cannot identify the unique flow to run when the task is created.

        A `ServiceQuotaExceededException` occurs when the number of open tasks exceeds the active tasks quota or there are already 12 tasks referencing the same `PreviousContactId`. For more information about service quotas for task contacts, see [Amazon Connect service quotas](https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html) in the _Amazon Connect Administrator Guide_.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                PreviousContactId:
                  $ref: '#/components/schemas/ContactId'
                ContactFlowId:
                  $ref: '#/components/schemas/ContactFlowId'
                Attributes:
                  $ref: '#/components/schemas/Attributes'
                Name:
                  $ref: '#/components/schemas/Name'
                References:
                  $ref: '#/components/schemas/ContactReferences'
                Description:
                  $ref: '#/components/schemas/Description'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
                ScheduledTime:
                  $ref: '#/components/schemas/Timestamp'
                TaskTemplateId:
                  $ref: '#/components/schemas/TaskTemplateId'
                QuickConnectId:
                  $ref: '#/components/schemas/QuickConnectId'
                RelatedContactId:
                  $ref: '#/components/schemas/ContactId'
                SegmentAttributes:
                  $ref: '#/components/schemas/SegmentAttributes'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /contact/webrtc:
    put:
      operationId: StartWebRTCContact
      description: |-
        Places an inbound in-app, web, or video call to a contact, and then initiates the flow. It performs the actions in the flow that are specified (in ContactFlowId) and present in the Amazon Connect instance (specified as InstanceId).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Attributes:
                  $ref: '#/components/schemas/Attributes'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
                ContactFlowId:
                  $ref: '#/components/schemas/ContactFlowId'
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                AllowedCapabilities:
                  $ref: '#/components/schemas/AllowedCapabilities'
                ParticipantDetails:
                  $ref: '#/components/schemas/ParticipantDetails'
                RelatedContactId:
                  $ref: '#/components/schemas/ContactId'
                References:
                  $ref: '#/components/schemas/ContactReferences'
                Description:
                  $ref: '#/components/schemas/Description'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '429':
          description: |-
            The allowed limit for the resource has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /contact/stop:
    post:
      operationId: StopContact
      description: |-
        Ends the specified contact. Use this API to stop queued callbacks. It does not work for voice contacts that use the following initiation methods:

          * DISCONNECT

          * TRANSFER

          * QUEUE_TRANSFER

          * EXTERNAL_OUTBOUND

          * MONITOR

        Chat and task contacts can be terminated in any state, regardless of initiation method.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ContactId:
                  $ref: '#/components/schemas/ContactId'
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                DisconnectReason:
                  $ref: '#/components/schemas/DisconnectReason'
      responses:
        '200': {}
        '410':
          description: |-
            The contact with the specified ID is not active or does not exist. Applies to Voice calls only, not to Chat or Task contacts.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactNotFoundException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /contact/stop-recording:
    post:
      operationId: StopContactRecording
      description: |-
        Stops recording a call when a contact is being recorded. StopContactRecording is a one-time action. If you use StopContactRecording to stop recording an ongoing call, you can't use StartContactRecording to restart it. For scenarios where the recording has started and you want to suspend it for sensitive information (for example, to collect a credit card number), and then restart it, use SuspendContactRecording and ResumeContactRecording.

        Only voice recordings are supported at this time.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                ContactId:
                  $ref: '#/components/schemas/ContactId'
                InitialContactId:
                  $ref: '#/components/schemas/ContactId'
                ContactRecordingType:
                  $ref: '#/components/schemas/ContactRecordingType'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /contact/stop-streaming:
    post:
      operationId: StopContactStreaming
      description: |-
        Ends message streaming on a specified contact. To restart message streaming on that contact, call the [StartContactStreaming](https://docs.aws.amazon.com/connect/latest/APIReference/API_StartContactStreaming.html) API.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                ContactId:
                  $ref: '#/components/schemas/ContactId'
                StreamingId:
                  $ref: '#/components/schemas/StreamingId'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /contact-evaluations/{InstanceId}/{EvaluationId}/submit:
    post:
      operationId: SubmitContactEvaluation
      description: |-
        Submits a contact evaluation in the specified Amazon Connect instance. Answers included in the request are merged with existing answers for the given evaluation. If no answers or notes are passed, the evaluation is submitted with the existing answers and notes. You can delete an answer or note by passing an empty object (`{}`) to the question identifier.

        If a contact evaluation is already in submitted state, this operation will trigger a resubmission.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: EvaluationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Answers:
                  $ref: '#/components/schemas/EvaluationAnswersInputMap'
                Notes:
                  $ref: '#/components/schemas/EvaluationNotesMap'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            One or more of the specified parameters are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '409':
          description: |-
            A resource already has that name.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /contact/suspend-recording:
    post:
      operationId: SuspendContactRecording
      description: |-
        When a contact is being recorded, this API suspends recording whatever is selected in the flow configuration: call (IVR or agent), screen, or both. If only call recording or only screen recording is enabled, then it would be suspended. For example, you might suspend the screen recording while collecting sensitive information, such as a credit card number. Then use [ResumeContactRecording](https://docs.aws.amazon.com/connect/latest/APIReference/API_ResumeContactRecording.html) to restart recording the screen.

        The period of time that the recording is suspended is filled with silence in the final recording.

        Voice (IVR, agent) and screen recordings are supported.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                ContactId:
                  $ref: '#/components/schemas/ContactId'
                InitialContactId:
                  $ref: '#/components/schemas/ContactId'
                ContactRecordingType:
                  $ref: '#/components/schemas/ContactRecordingType'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /contact/tags:
    post:
      operationId: TagContact
      description: |-
        Adds the specified tags to the contact resource. For more information about this API is used, see [Set up granular billing for a detailed view of your Amazon Connect usage](https://docs.aws.amazon.com/connect/latest/adminguide/granular-billing.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ContactId:
                  $ref: '#/components/schemas/ContactId'
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                Tags:
                  $ref: '#/components/schemas/ContactTagMap'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /contact/transfer:
    post:
      operationId: TransferContact
      description: |-
        Transfers `TASK` or `EMAIL` contacts from one agent or queue to another agent or queue at any point after a contact is created. You can transfer a contact to another queue by providing the flow which orchestrates the contact to the destination queue. This gives you more control over contact handling and helps you adhere to the service level agreement (SLA) guaranteed to your customers.

        Note the following requirements:

          * Transfer is only supported for `TASK` and `EMAIL` contacts.

          * Do not use both `QueueId` and `UserId` in the same call.

          * The following flow types are supported: Inbound flow, Transfer to agent flow, and Transfer to queue flow.

          * The `TransferContact` API can be called only on active contacts.

          * A contact cannot be transferred more than 11 times.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                ContactId:
                  $ref: '#/components/schemas/ContactId'
                QueueId:
                  $ref: '#/components/schemas/QueueId'
                UserId:
                  $ref: '#/components/schemas/AgentResourceId'
                ContactFlowId:
                  $ref: '#/components/schemas/ContactFlowId'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            An entity with the same name already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdempotencyException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /contact/tags/{InstanceId}/{ContactId}:
    delete:
      operationId: UntagContact
      description: |-
        Removes the specified tags from the contact resource. For more information about this API is used, see [Set up granular billing for a detailed view of your Amazon Connect usage](https://docs.aws.amazon.com/connect/latest/adminguide/granular-billing.html).
      parameters:
      - name: ContactId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ContactId'
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: TagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ContactTagKeys'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /contact/attributes:
    post:
      operationId: UpdateContactAttributes
      description: |-
        Creates or updates user-defined contact attributes associated with the specified contact.

        You can create or update user-defined attributes for both ongoing and completed contacts. For example, while the call is active, you can update the customer's name or the reason the customer called. You can add notes about steps that the agent took during the call that display to the next agent that takes the call. You can also update attributes for a contact using data from your CRM application and save the data with the contact in Amazon Connect. You could also flag calls for additional analysis, such as legal review or to identify abusive callers.

        Contact attributes are available in Amazon Connect for 24 months, and are then deleted. For information about contact record retention and the maximum size of the contact record attributes section, see [Feature specifications](https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html#feature-limits) in the _Amazon Connect Administrator Guide_.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                InitialContactId:
                  $ref: '#/components/schemas/ContactId'
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                Attributes:
                  $ref: '#/components/schemas/Attributes'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /contact-flows/{InstanceId}/{ContactFlowId}/content:
    post:
      operationId: UpdateContactFlowContent
      description: |-
        Updates the specified flow.

        You can also create and update flows using the [Amazon Connect Flow language](https://docs.aws.amazon.com/connect/latest/APIReference/flow-language.html).

        Use the `$SAVED` alias in the request to describe the `SAVED` content of a Flow. For example, `arn:aws:.../contact-flow/{id}:$SAVED`. After a flow is published, `$SAVED` needs to be supplied to view saved content that has not been published.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: ContactFlowId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ContactFlowId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Content:
                  $ref: '#/components/schemas/ContactFlowContent'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /contact-flows/{InstanceId}/{ContactFlowId}/metadata:
    post:
      operationId: UpdateContactFlowMetadata
      description: |-
        Updates metadata about specified flow.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: ContactFlowId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ContactFlowId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/ContactFlowName'
                Description:
                  $ref: '#/components/schemas/ContactFlowDescription'
                ContactFlowState:
                  $ref: '#/components/schemas/ContactFlowState'
      responses:
        '200': {}
        '409':
          description: |-
            A resource with the specified name already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /contact-flow-modules/{InstanceId}/{ContactFlowModuleId}/content:
    post:
      operationId: UpdateContactFlowModuleContent
      description: |-
        Updates specified flow module for the specified Amazon Connect instance.

        Use the `$SAVED` alias in the request to describe the `SAVED` content of a Flow. For example, `arn:aws:.../contact-flow/{id}:$SAVED`. After a flow is published, `$SAVED` needs to be supplied to view saved content that has not been published.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: ContactFlowModuleId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ContactFlowModuleId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Content:
                  $ref: '#/components/schemas/ContactFlowModuleContent'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /contact-flow-modules/{InstanceId}/{ContactFlowModuleId}/metadata:
    post:
      operationId: UpdateContactFlowModuleMetadata
      description: |-
        Updates metadata about specified flow module.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: ContactFlowModuleId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ContactFlowModuleId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/ContactFlowModuleName'
                Description:
                  $ref: '#/components/schemas/ContactFlowModuleDescription'
                State:
                  $ref: '#/components/schemas/ContactFlowModuleState'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            A resource with the specified name already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /contact-flows/{InstanceId}/{ContactFlowId}/name:
    post:
      operationId: UpdateContactFlowName
      description: |-
        The name of the flow.

        You can also create and update flows using the [Amazon Connect Flow language](https://docs.aws.amazon.com/connect/latest/APIReference/flow-language.html).
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: ContactFlowId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ContactFlowId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/ContactFlowName'
                Description:
                  $ref: '#/components/schemas/ContactFlowDescription'
      responses:
        '200': {}
        '409':
          description: |-
            A resource with the specified name already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /contacts/{InstanceId}/{ContactId}/routing-data:
    post:
      operationId: UpdateContactRoutingData
      description: |-
        Updates routing priority and age on the contact (**QueuePriority** and **QueueTimeAdjustmentInSeconds**). These properties can be used to change a customer's position in the queue. For example, you can move a contact to the back of the queue by setting a lower routing priority relative to other contacts in queue; or you can move a contact to the front of the queue by increasing the routing age which will make the contact look artificially older and therefore higher up in the first-in-first-out routing order. Note that adjusting the routing age of a contact affects only its position in queue, and not its actual queue wait time as reported through metrics. These properties can also be updated by using [the Set routing priority / age flow block](https://docs.aws.amazon.com/connect/latest/adminguide/change-routing-priority.html).

        Either **QueuePriority** or **QueueTimeAdjustmentInSeconds** should be provided within the request body, but not both.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: ContactId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ContactId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                QueueTimeAdjustmentSeconds:
                  $ref: '#/components/schemas/QueueTimeAdjustmentSeconds'
                QueuePriority:
                  $ref: '#/components/schemas/QueuePriority'
                RoutingCriteria:
                  $ref: '#/components/schemas/RoutingCriteriaInput'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            One or more of the specified parameters are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '409':
          description: |-
            A resource already has that name.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /contact/schedule:
    post:
      operationId: UpdateContactSchedule
      description: |-
        Updates the scheduled time of a task contact that is already scheduled.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                ContactId:
                  $ref: '#/components/schemas/ContactId'
                ScheduledTime:
                  $ref: '#/components/schemas/Timestamp'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /contact/update-participant-authentication:
    post:
      operationId: UpdateParticipantAuthentication
      description: |-
        Instructs Amazon Connect to resume the authentication process. The subsequent actions depend on the request body contents:

          * **If a code is provided** : Connect retrieves the identity information from Amazon Cognito and imports it into Connect Customer Profiles.

          * **If an error is provided** : The error branch of the Authenticate Customer block is executed.

        The API returns a success response to acknowledge the request. However, the interaction and exchange of identity information occur asynchronously after the response is returned.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                State:
                  $ref: '#/components/schemas/ParticipantToken'
                InstanceId:
                  $ref: '#/components/schemas/InstanceId'
                Code:
                  $ref: '#/components/schemas/AuthorizationCode'
                Error:
                  $ref: '#/components/schemas/AuthenticationError'
                ErrorDescription:
                  $ref: '#/components/schemas/AuthenticationErrorDescription'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Operation cannot be performed at this time as there is a conflict with another operation or contact state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /contact/participant-role-config/{InstanceId}/{ContactId}:
    put:
      operationId: UpdateParticipantRoleConfig
      description: |-
        Updates timeouts for when human chat participants are to be considered idle, and when agents are automatically disconnected from a chat due to idleness. You can set four timers:

          * Customer idle timeout

          * Customer auto-disconnect timeout

          * Agent idle timeout

          * Agent auto-disconnect timeout

        For more information about how chat timeouts work, see [Set up chat timeouts for human participants](https://docs.aws.amazon.com/connect/latest/adminguide/setup-chat-timeouts.html).
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: ContactId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ContactId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ChannelConfiguration:
                  $ref: '#/components/schemas/UpdateParticipantRoleConfigChannelInfo'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /phone-number/{PhoneNumberId}/metadata:
    put:
      operationId: UpdatePhoneNumberMetadata
      description: |-
        Updates a phone number’s metadata.

        To verify the status of a previous UpdatePhoneNumberMetadata operation, call the [DescribePhoneNumber](https://docs.aws.amazon.com/connect/latest/APIReference/API_DescribePhoneNumber.html) API.
      parameters:
      - name: PhoneNumberId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PhoneNumberId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                PhoneNumberDescription:
                  $ref: '#/components/schemas/PhoneNumberDescription'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            That resource is already in use. Please try another.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /queues/{InstanceId}/{QueueId}/hours-of-operation:
    post:
      operationId: UpdateQueueHoursOfOperation
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        Updates the hours of operation for the specified queue.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: QueueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                HoursOfOperationId:
                  $ref: '#/components/schemas/HoursOfOperationId'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /queues/{InstanceId}/{QueueId}/max-contacts:
    post:
      operationId: UpdateQueueMaxContacts
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        Updates the maximum number of contacts allowed in a queue before it is considered full.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: QueueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MaxContacts:
                  $ref: '#/components/schemas/QueueMaxContacts'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /queues/{InstanceId}/{QueueId}/name:
    post:
      operationId: UpdateQueueName
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        Updates the name and description of a queue. At least `Name` or `Description` must be provided.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: QueueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/CommonNameLength127'
                Description:
                  $ref: '#/components/schemas/QueueDescription'
      responses:
        '200': {}
        '409':
          description: |-
            A resource with the specified name already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /queues/{InstanceId}/{QueueId}/outbound-caller-config:
    post:
      operationId: UpdateQueueOutboundCallerConfig
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        Updates the outbound caller ID name, number, and outbound whisper flow for a specified queue.

          * If the phone number is claimed to a traffic distribution group that was created in the same Region as the Amazon Connect instance where you are calling this API, then you can use a full phone number ARN or a UUID for `OutboundCallerIdNumberId`. However, if the phone number is claimed to a traffic distribution group that is in one Region, and you are calling this API from an instance in another Amazon Web Services Region that is associated with the traffic distribution group, you must provide a full phone number ARN. If a UUID is provided in this scenario, you will receive a `ResourceNotFoundException`.

          * Only use the phone number ARN format that doesn't contain `instance` in the path, for example, `arn:aws:connect:us-east-1:1234567890:phone-number/uuid`. This is the same ARN format that is returned when you call the [ListPhoneNumbersV2](https://docs.aws.amazon.com/connect/latest/APIReference/API_ListPhoneNumbersV2.html) API.

          * If you plan to use IAM policies to allow/deny access to this API for phone number resources claimed to a traffic distribution group, see [Allow or Deny queue API actions for phone numbers in a replica Region](https://docs.aws.amazon.com/connect/latest/adminguide/security_iam_resource-level-policy-examples.html#allow-deny-queue-actions-replica-region).
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: QueueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                OutboundCallerConfig:
                  $ref: '#/components/schemas/OutboundCallerConfig'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /queues/{InstanceId}/{QueueId}/outbound-email-config:
    post:
      operationId: UpdateQueueOutboundEmailConfig
      description: |-
        Updates the outbound email address Id for a specified queue.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: QueueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                OutboundEmailConfig:
                  $ref: '#/components/schemas/OutboundEmailConfig'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Request processing failed because dependent condition failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConditionalOperationFailedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /queues/{InstanceId}/{QueueId}/status:
    post:
      operationId: UpdateQueueStatus
      description: |-
        This API is in preview release for Amazon Connect and is subject to change.

        Updates the status of the queue.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: QueueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Status:
                  $ref: '#/components/schemas/QueueStatus'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /quick-connects/{InstanceId}/{QuickConnectId}/config:
    post:
      operationId: UpdateQuickConnectConfig
      description: |-
        Updates the configuration settings for the specified quick connect.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: QuickConnectId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QuickConnectId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                QuickConnectConfig:
                  $ref: '#/components/schemas/QuickConnectConfig'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /quick-connects/{InstanceId}/{QuickConnectId}/name:
    post:
      operationId: UpdateQuickConnectName
      description: |-
        Updates the name and description of a quick connect. The request accepts the following data in JSON format. At least `Name` or `Description` must be provided.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: QuickConnectId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QuickConnectId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/QuickConnectName'
                Description:
                  $ref: '#/components/schemas/UpdateQuickConnectDescription'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /routing-profiles/{InstanceId}/{RoutingProfileId}/agent-availability-timer:
    post:
      operationId: UpdateRoutingProfileAgentAvailabilityTimer
      description: |-
        Whether agents with this routing profile will have their routing order calculated based on _time since their last inbound contact_ or _longest idle time_.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: RoutingProfileId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RoutingProfileId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AgentAvailabilityTimer:
                  $ref: '#/components/schemas/AgentAvailabilityTimer'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /routing-profiles/{InstanceId}/{RoutingProfileId}/concurrency:
    post:
      operationId: UpdateRoutingProfileConcurrency
      description: |-
        Updates the channels that agents can handle in the Contact Control Panel (CCP) for a routing profile.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: RoutingProfileId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RoutingProfileId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MediaConcurrencies:
                  $ref: '#/components/schemas/MediaConcurrencies'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /routing-profiles/{InstanceId}/{RoutingProfileId}/default-outbound-queue:
    post:
      operationId: UpdateRoutingProfileDefaultOutboundQueue
      description: |-
        Updates the default outbound queue of a routing profile.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: RoutingProfileId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RoutingProfileId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DefaultOutboundQueueId:
                  $ref: '#/components/schemas/QueueId'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /routing-profiles/{InstanceId}/{RoutingProfileId}/name:
    post:
      operationId: UpdateRoutingProfileName
      description: |-
        Updates the name and description of a routing profile. The request accepts the following data in JSON format. At least `Name` or `Description` must be provided.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: RoutingProfileId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RoutingProfileId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/RoutingProfileName'
                Description:
                  $ref: '#/components/schemas/RoutingProfileDescription'
      responses:
        '200': {}
        '409':
          description: |-
            A resource with the specified name already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /users/{InstanceId}/{UserId}/hierarchy:
    post:
      operationId: UpdateUserHierarchy
      description: |-
        Assigns the specified hierarchy group to the specified user.
      parameters:
      - name: UserId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UserId'
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                HierarchyGroupId:
                  $ref: '#/components/schemas/HierarchyGroupId'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /user-hierarchy-groups/{InstanceId}/{HierarchyGroupId}/name:
    post:
      operationId: UpdateUserHierarchyGroupName
      description: |-
        Updates the name of the user hierarchy group.
      parameters:
      - name: HierarchyGroupId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/HierarchyGroupId'
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/HierarchyGroupName'
      responses:
        '200': {}
        '409':
          description: |-
            A resource with the specified name already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateResourceException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /users/{InstanceId}/{UserId}/identity-info:
    post:
      operationId: UpdateUserIdentityInfo
      description: |-
        Updates the identity information for the specified user.

        We strongly recommend limiting who has the ability to invoke `UpdateUserIdentityInfo`. Someone with that ability can change the login credentials of other users by changing their email address. This poses a security risk to your organization. They can change the email address of a user to the attacker's email address, and then reset the password through email. For more information, see [Best Practices for Security Profiles](https://docs.aws.amazon.com/connect/latest/adminguide/security-profile-best-practices.html) in the _Amazon Connect Administrator Guide_.
      parameters:
      - name: UserId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UserId'
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                IdentityInfo:
                  $ref: '#/components/schemas/UserIdentityInfo'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /users/{InstanceId}/{UserId}/phone-config:
    post:
      operationId: UpdateUserPhoneConfig
      description: |-
        Updates the phone configuration settings for the specified user.
      parameters:
      - name: UserId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UserId'
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                PhoneConfig:
                  $ref: '#/components/schemas/UserPhoneConfig'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /users/{InstanceId}/{UserId}/routing-profile:
    post:
      operationId: UpdateUserRoutingProfile
      description: |-
        Assigns the specified routing profile to the specified user.
      parameters:
      - name: UserId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UserId'
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                RoutingProfileId:
                  $ref: '#/components/schemas/RoutingProfileId'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /users/{InstanceId}/{UserId}/security-profiles:
    post:
      operationId: UpdateUserSecurityProfiles
      description: |-
        Assigns the specified security profiles to the specified user.
      parameters:
      - name: UserId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UserId'
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SecurityProfileIds:
                  $ref: '#/components/schemas/SecurityProfileIds'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The throttling limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /views/{InstanceId}/{ViewId}/metadata:
    post:
      operationId: UpdateViewMetadata
      description: |-
        Updates the view metadata. Note that either `Name` or `Description` must be provided.
      parameters:
      - name: InstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ViewsInstanceId'
      - name: ViewId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ViewId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/ViewName'
                Description:
                  $ref: '#/components/schemas/ViewDescription'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient permissions to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            That resource is already in use. Please try another.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Displayed when rate-related API limits are exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
components:
  schemas:
    ARN:
      type: string
    AWSAccountId:
      type: string
    AccessDeniedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
      description: You do not have sufficient permissions to perform this action.
    AccessTokenDuration:
      type: integer
      minimum: 10
      maximum: 60
    ActionSummaries:
      type: array
      items:
        $ref: '#/components/schemas/ActionSummary'
    ActionSummary:
      type: object
      properties:
        ActionType:
          allOf:
          - $ref: '#/components/schemas/ActionType'
          description: The action type.
      required:
      - ActionType
      description: Information about an action.
    ActionType:
      type: string
      enum:
      - CREATE_TASK
      - ASSIGN_CONTACT_CATEGORY
      - GENERATE_EVENTBRIDGE_EVENT
      - SEND_NOTIFICATION
      - CREATE_CASE
      - UPDATE_CASE
      - ASSIGN_SLA
      - END_ASSOCIATED_TASKS
      - SUBMIT_AUTO_EVALUATION
    ActivateEvaluationFormRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        EvaluationFormId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: The unique identifier for the evaluation form.
        EvaluationFormVersion:
          allOf:
          - $ref: '#/components/schemas/VersionNumber'
          description: The version of the evaluation form to activate. If the version
            property is not provided, the latest version of the evaluation form is
            activated.
      required:
      - InstanceId
      - EvaluationFormId
      - EvaluationFormVersion
    ActivateEvaluationFormResponse:
      type: object
      properties:
        EvaluationFormId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: The unique identifier for the evaluation form.
        EvaluationFormArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for the evaluation form resource.
        EvaluationFormVersion:
          allOf:
          - $ref: '#/components/schemas/VersionNumber'
          description: A version of the evaluation form.
      required:
      - EvaluationFormId
      - EvaluationFormArn
      - EvaluationFormVersion
    AdditionalEmailRecipients:
      type: object
      properties:
        ToList:
          allOf:
          - $ref: '#/components/schemas/EmailRecipientsList'
          description: List of additional TO email recipients for an email contact.
        CcList:
          allOf:
          - $ref: '#/components/schemas/EmailRecipientsList'
          description: List of additional CC email recipients for an email contact.
      description: List of additional email addresses for an email contact.
    AfterContactWorkTimeLimit:
      type: integer
      default: 0
      minimum: 0
    AgentAvailabilityTimer:
      type: string
      enum:
      - TIME_SINCE_LAST_ACTIVITY
      - TIME_SINCE_LAST_INBOUND
    AgentConfig:
      type: object
      properties:
        Distributions:
          allOf:
          - $ref: '#/components/schemas/DistributionList'
          description: Information about traffic distributions.
      required:
      - Distributions
      description: The distribution of agents between the instance and its replica(s).
    AgentContactReference:
      type: object
      properties:
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact in this instance of Amazon Connect.
        Channel:
          allOf:
          - $ref: '#/components/schemas/Channel'
          description: The channel of the contact.
        InitiationMethod:
          allOf:
          - $ref: '#/components/schemas/ContactInitiationMethod'
          description: How the contact was initiated.
        AgentContactState:
          allOf:
          - $ref: '#/components/schemas/ContactState'
          description: 'The [state of the contact](https://docs.aws.amazon.com/connect/latest/adminguide/about-contact-states.html).


            When `AgentContactState` is set to `CONNECTED_ONHOLD`, `StateStartTimestamp`
            is not changed. Instead, `StateStartTimestamp` reflects the time the contact
            was `CONNECTED` to the agent.'
        StateStartTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The epoch timestamp when the contact state started.
        ConnectedToAgentTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the contact was connected to an agent.
        Queue:
          $ref: '#/components/schemas/QueueReference'
      description: Information about the [contact](https://docs.aws.amazon.com/connect/latest/APIReference/API_Contact.html)
        associated to the user.
    AgentContactReferenceList:
      type: array
      items:
        $ref: '#/components/schemas/AgentContactReference'
    AgentFirstName:
      type: string
      minLength: 0
      maxLength: 255
    AgentHierarchyGroup:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the group.
      description: Information about an agent hierarchy group.
    AgentHierarchyGroups:
      type: object
      properties:
        L1Ids:
          allOf:
          - $ref: '#/components/schemas/HierarchyGroupIdList'
          description: The identifiers for level 1 hierarchy groups.
        L2Ids:
          allOf:
          - $ref: '#/components/schemas/HierarchyGroupIdList'
          description: The identifiers for level 2 hierarchy groups.
        L3Ids:
          allOf:
          - $ref: '#/components/schemas/HierarchyGroupIdList'
          description: The identifiers for level 3 hierarchy groups.
        L4Ids:
          allOf:
          - $ref: '#/components/schemas/HierarchyGroupIdList'
          description: The identifiers for level 4 hierarchy groups.
        L5Ids:
          allOf:
          - $ref: '#/components/schemas/HierarchyGroupIdList'
          description: The identifiers for level 5 hierarchy groups.
      description: A structure that defines search criteria for contacts using agent
        hierarchy group levels. For more information about agent hierarchies, see
        [Set Up Agent Hierarchies](https://docs.aws.amazon.com/connect/latest/adminguide/agent-hierarchy.html)
        in the _Amazon Connect Administrator Guide_.
    AgentId:
      type: string
      minLength: 0
      maxLength: 256
    AgentIds:
      type: array
      items:
        $ref: '#/components/schemas/AgentId'
    AgentInfo:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/AgentResourceId'
          description: The identifier of the agent who accepted the contact.
        ConnectedToAgentTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the contact was connected to the agent.
        AgentPauseDurationInSeconds:
          allOf:
          - $ref: '#/components/schemas/AgentPauseDurationInSeconds'
          description: Agent pause duration for a contact in seconds.
        HierarchyGroups:
          allOf:
          - $ref: '#/components/schemas/HierarchyGroups'
          description: The agent hierarchy groups for the agent.
        DeviceInfo:
          allOf:
          - $ref: '#/components/schemas/DeviceInfo'
          description: Information regarding Agent’s device.
        Capabilities:
          $ref: '#/components/schemas/ParticipantCapabilities'
      description: Information about the agent who accepted the contact.
    AgentLastName:
      type: string
      minLength: 0
      maxLength: 300
    AgentPauseDurationInSeconds:
      type: integer
      minimum: 0
    AgentQualityMetrics:
      type: object
      properties:
        Audio:
          allOf:
          - $ref: '#/components/schemas/AudioQualityMetricsInfo'
          description: Information about the audio quality of the Agent
      description: Information about the quality of the Agent's media connection
    AgentResourceId:
      type: string
      minLength: 1
      maxLength: 256
    AgentResourceIdList:
      type: array
      items:
        $ref: '#/components/schemas/AgentResourceId'
    AgentStatus:
      type: object
      properties:
        AgentStatusARN:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the agent status.
        AgentStatusId:
          allOf:
          - $ref: '#/components/schemas/AgentStatusId'
          description: The identifier of the agent status.
        Name:
          allOf:
          - $ref: '#/components/schemas/AgentStatusName'
          description: The name of the agent status.
        Description:
          allOf:
          - $ref: '#/components/schemas/AgentStatusDescription'
          description: The description of the agent status.
        Type:
          allOf:
          - $ref: '#/components/schemas/AgentStatusType'
          description: The type of agent status.
        DisplayOrder:
          allOf:
          - $ref: '#/components/schemas/AgentStatusOrderNumber'
          description: The display order of the agent status.
        State:
          allOf:
          - $ref: '#/components/schemas/AgentStatusState'
          description: The state of the agent status.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The tags used to organize, track, or control access for this
            resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.'
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when this resource was last modified.
        LastModifiedRegion:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          description: The Amazon Web Services Region where this resource was last
            modified.
      description: Contains information about an agent status.
    AgentStatusDescription:
      type: string
      minLength: 1
      maxLength: 250
    AgentStatusId:
      type: string
    AgentStatusList:
      type: array
      items:
        $ref: '#/components/schemas/AgentStatus'
    AgentStatusName:
      type: string
      minLength: 1
      maxLength: 127
    AgentStatusOrderNumber:
      type: integer
      minimum: 1
      maximum: 50
    AgentStatusReference:
      type: object
      properties:
        StatusStartTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The start timestamp of the agent's status.
        StatusArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the agent's status.
        StatusName:
          allOf:
          - $ref: '#/components/schemas/AgentStatusName'
          description: The name of the agent status.
      description: Information about the agent's status.
    AgentStatusSearchConditionList:
      type: array
      items:
        $ref: '#/components/schemas/AgentStatusSearchCriteria'
    AgentStatusSearchCriteria:
      type: object
      properties:
        OrConditions:
          allOf:
          - $ref: '#/components/schemas/AgentStatusSearchConditionList'
          description: A list of conditions which would be applied together with an
            `OR` condition.
        AndConditions:
          allOf:
          - $ref: '#/components/schemas/AgentStatusSearchConditionList'
          description: 'A leaf node condition which can be used to specify a string
            condition.


            The currently supported values for `FieldName` are `name`, `description`,
            `state`, `type`, `displayOrder`, and `resourceID`.'
        StringCondition:
          allOf:
          - $ref: '#/components/schemas/StringCondition'
          description: 'A leaf node condition which can be used to specify a string
            condition.


            The currently supported values for `FieldName` are `name`, `description`,
            `state`, `type`, `displayOrder`, and `resourceID`.'
      description: The search criteria to be used to return agent statuses.
    AgentStatusSearchFilter:
      type: object
      properties:
        AttributeFilter:
          allOf:
          - $ref: '#/components/schemas/ControlPlaneAttributeFilter'
          description: "An object that can be used to specify Tag conditions inside\
            \ the `SearchFilter`. This accepts an `OR` of `AND` (List of List) input\
            \ where:\n\n  * The top level list specifies conditions that need to be\
            \ applied with `OR` operator.\n\n  * The inner list specifies conditions\
            \ that need to be applied with `AND` operator."
      description: Filters to be applied to search results.
    AgentStatusState:
      type: string
      enum:
      - ENABLED
      - DISABLED
    AgentStatusSummary:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/AgentStatusId'
          description: The identifier for an agent status.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for the agent status.
        Name:
          allOf:
          - $ref: '#/components/schemas/AgentStatusName'
          description: The name of the agent status.
        Type:
          allOf:
          - $ref: '#/components/schemas/AgentStatusType'
          description: The type of the agent status.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when this resource was last modified.
        LastModifiedRegion:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          description: The Amazon Web Services Region where this resource was last
            modified.
      description: Summary information for an agent status.
    AgentStatusSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/AgentStatusSummary'
    AgentStatusType:
      type: string
      enum:
      - ROUTABLE
      - CUSTOM
      - OFFLINE
    AgentStatusTypes:
      type: array
      items:
        $ref: '#/components/schemas/AgentStatusType'
    AgentUsername:
      type: string
      minLength: 1
      maxLength: 100
    AgentsCriteria:
      type: object
      properties:
        AgentIds:
          allOf:
          - $ref: '#/components/schemas/AgentIds'
          description: An object to specify a list of agents, by user ID.
      description: Can be used to define a list of preferred agents to target the
        contact to within the queue. Note that agents must have the queue in their
        routing profile in order to be offered the contact.
    AgentsMinOneMaxHundred:
      type: array
      items:
        $ref: '#/components/schemas/UserId'
    AliasArn:
      type: string
      minLength: 1
      maxLength: 100
    AllowedAccessControlTags:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/SecurityProfilePolicyValue'
    AllowedCapabilities:
      type: object
      properties:
        Customer:
          allOf:
          - $ref: '#/components/schemas/ParticipantCapabilities'
          description: Information about the customer's video sharing capabilities.
        Agent:
          allOf:
          - $ref: '#/components/schemas/ParticipantCapabilities'
          description: Information about the agent's video sharing capabilities.
      description: Information about the capabilities enabled for participants of
        the contact.
    AllowedMonitorCapabilities:
      type: array
      items:
        $ref: '#/components/schemas/MonitorCapability'
    AnalyticsDataAssociationResult:
      type: object
      properties:
        DataSetId:
          allOf:
          - $ref: '#/components/schemas/DataSetId'
          description: The identifier of the dataset.
        TargetAccountId:
          allOf:
          - $ref: '#/components/schemas/AWSAccountId'
          description: The identifier of the target account.
        ResourceShareId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Resource Access Manager share ID.
        ResourceShareArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the Resource Access Manager
            share.
        ResourceShareStatus:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Web Services Resource Access Manager status of association.
      description: 'This API is in preview release for Amazon Connect and is subject
        to change.


        Information about associations that are successfully created: `DataSetId`,
        `TargetAccountId`, `ResourceShareId`, `ResourceShareArn`.'
    AnalyticsDataAssociationResults:
      type: array
      items:
        $ref: '#/components/schemas/AnalyticsDataAssociationResult'
    AnalyticsDataSetsResult:
      type: object
      properties:
        DataSetId:
          allOf:
          - $ref: '#/components/schemas/DataSetId'
          description: The identifier of the dataset.
        DataSetName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the dataset.
      description: 'Information about datasets that are available to associate with:
        `DataSetId`, `DataSetName`.'
    AnalyticsDataSetsResults:
      type: array
      items:
        $ref: '#/components/schemas/AnalyticsDataSetsResult'
    AnswerMachineDetectionConfig:
      type: object
      properties:
        EnableAnswerMachineDetection:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: The flag to indicate if answer machine detection analysis needs
            to be performed for a voice call. If set to `true`, `TrafficType` must
            be set as `CAMPAIGN`.
        AwaitAnswerMachinePrompt:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Wait for the answering machine prompt.
      description: Configuration of the answering machine detection.
    AnsweringMachineDetectionStatus:
      type: string
      enum:
      - ANSWERED
      - UNDETECTED
      - ERROR
      - HUMAN_ANSWERED
      - SIT_TONE_DETECTED
      - SIT_TONE_BUSY
      - SIT_TONE_INVALID_NUMBER
      - FAX_MACHINE_DETECTED
      - VOICEMAIL_BEEP
      - VOICEMAIL_NO_BEEP
      - AMD_UNRESOLVED
      - AMD_UNANSWERED
      - AMD_ERROR
      - AMD_NOT_APPLICABLE
    Application:
      type: object
      properties:
        Namespace:
          allOf:
          - $ref: '#/components/schemas/Namespace'
          description: Namespace of the application that you want to give access to.
        ApplicationPermissions:
          allOf:
          - $ref: '#/components/schemas/ApplicationPermissions'
          description: The permissions that the agent is granted on the application.
            Only the `ACCESS` permission is supported.
      description: 'This API is in preview release for Amazon Connect and is subject
        to change.


        A third-party application''s metadata.'
    ApplicationPermissions:
      type: array
      items:
        $ref: '#/components/schemas/Permission'
    Applications:
      type: array
      items:
        $ref: '#/components/schemas/Application'
    ApproximateTotalCount:
      type: integer
      format: int64
    ArtifactId:
      type: string
      minLength: 1
      maxLength: 256
    ArtifactStatus:
      type: string
      enum:
      - APPROVED
      - REJECTED
      - IN_PROGRESS
    AssignContactCategoryActionDefinition:
      type: object
      properties: {}
      description: 'This action must be set if `TriggerEventSource` is one of the
        following values: `OnPostCallAnalysisAvailable` | `OnRealTimeCallAnalysisAvailable`
        | `OnRealTimeChatAnalysisAvailable` | `OnPostChatAnalysisAvailable`. Contact
        is categorized using the rule name.


        `RuleName` is used as `ContactCategory`.'
    AssignSlaActionDefinition:
      type: object
      properties:
        SlaAssignmentType:
          allOf:
          - $ref: '#/components/schemas/SlaAssignmentType'
          description: Type of SLA assignment.
        CaseSlaConfiguration:
          allOf:
          - $ref: '#/components/schemas/CaseSlaConfiguration'
          description: The SLA configuration for Case SLA Assignment.
      required:
      - SlaAssignmentType
      description: The AssignSla action definition.
    AssociateAnalyticsDataSetRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        DataSetId:
          allOf:
          - $ref: '#/components/schemas/DataSetId'
          description: The identifier of the dataset to associate with the target
            account.
        TargetAccountId:
          allOf:
          - $ref: '#/components/schemas/AWSAccountId'
          description: The identifier of the target account. Use to associate a dataset
            to a different account than the one containing the Amazon Connect instance.
            If not specified, by default this value is the Amazon Web Services account
            that has the Amazon Connect instance.
      required:
      - InstanceId
      - DataSetId
    AssociateAnalyticsDataSetResponse:
      type: object
      properties:
        DataSetId:
          allOf:
          - $ref: '#/components/schemas/DataSetId'
          description: The identifier of the dataset that was associated.
        TargetAccountId:
          allOf:
          - $ref: '#/components/schemas/AWSAccountId'
          description: The identifier of the target account.
        ResourceShareId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Resource Access Manager share ID that is generated.
        ResourceShareArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the Resource Access Manager
            share.
    AssociateApprovedOriginRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        Origin:
          allOf:
          - $ref: '#/components/schemas/Origin'
          description: The domain to add to your allow list.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
      required:
      - InstanceId
      - Origin
    AssociateBotRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        LexBot:
          $ref: '#/components/schemas/LexBot'
        LexV2Bot:
          allOf:
          - $ref: '#/components/schemas/LexV2Bot'
          description: The Amazon Lex V2 bot to associate with the instance.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
      required:
      - InstanceId
    AssociateDefaultVocabularyRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        LanguageCode:
          allOf:
          - $ref: '#/components/schemas/VocabularyLanguageCode'
          description: The language code of the vocabulary entries. For a list of
            languages and their corresponding language codes, see [What is Amazon
            Transcribe?](https://docs.aws.amazon.com/transcribe/latest/dg/transcribe-whatis.html)
        VocabularyId:
          allOf:
          - $ref: '#/components/schemas/VocabularyId'
          description: The identifier of the custom vocabulary. If this is empty,
            the default is set to none.
      required:
      - InstanceId
      - LanguageCode
    AssociateDefaultVocabularyResponse:
      type: object
      properties: {}
    AssociateFlowRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: "The identifier of the resource.\n\n  * Amazon Web Services\
            \ End User Messaging SMS phone number ARN when using `SMS_PHONE_NUMBER`\n\
            \n  * Amazon Web Services End User Messaging Social phone number ARN when\
            \ using `WHATSAPP_MESSAGING_PHONE_NUMBER`"
        FlowId:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The identifier of the flow.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/FlowAssociationResourceType'
          description: A valid resource type.
      required:
      - InstanceId
      - ResourceId
      - FlowId
      - ResourceType
    AssociateFlowResponse:
      type: object
      properties: {}
    AssociateInstanceStorageConfigRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/InstanceStorageResourceType'
          description: "A valid resource type. To [enable streaming for real-time\
            \ analysis of contacts](https://docs.aws.amazon.com/connect/latest/adminguide/enable-contact-analysis-segment-streams.html),\
            \ use the following types:\n\n  * For chat contacts, use `REAL_TIME_CONTACT_ANALYSIS_CHAT_SEGMENTS`.\n\
            \n  * For voice contacts, use `REAL_TIME_CONTACT_ANALYSIS_VOICE_SEGMENTS`.\n\
            \n`REAL_TIME_CONTACT_ANALYSIS_SEGMENTS` is deprecated, but it is still\
            \ supported and will apply only to VOICE channel contacts. Use `REAL_TIME_CONTACT_ANALYSIS_VOICE_SEGMENTS`\
            \ for voice contacts moving forward.\n\nIf you have previously associated\
            \ a stream with `REAL_TIME_CONTACT_ANALYSIS_SEGMENTS`, no action is needed\
            \ to update the stream to `REAL_TIME_CONTACT_ANALYSIS_VOICE_SEGMENTS`."
        StorageConfig:
          allOf:
          - $ref: '#/components/schemas/InstanceStorageConfig'
          description: A valid storage type.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
      required:
      - InstanceId
      - ResourceType
      - StorageConfig
    AssociateInstanceStorageConfigResponse:
      type: object
      properties:
        AssociationId:
          allOf:
          - $ref: '#/components/schemas/AssociationId'
          description: The existing association identifier that uniquely identifies
            the resource type and storage config for the given instance ID.
    AssociateLambdaFunctionRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        FunctionArn:
          allOf:
          - $ref: '#/components/schemas/FunctionArn'
          description: The Amazon Resource Name (ARN) for the Lambda function being
            associated. Maximum number of characters allowed is 140.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
      required:
      - InstanceId
      - FunctionArn
    AssociateLexBotRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        LexBot:
          allOf:
          - $ref: '#/components/schemas/LexBot'
          description: The Amazon Lex bot to associate with the instance.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
      required:
      - InstanceId
      - LexBot
    AssociatePhoneNumberContactFlowRequest:
      type: object
      properties:
        PhoneNumberId:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberId'
          description: A unique identifier for the phone number.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        ContactFlowId:
          allOf:
          - $ref: '#/components/schemas/ContactFlowId'
          description: The identifier of the flow.
      required:
      - PhoneNumberId
      - InstanceId
      - ContactFlowId
    AssociateQueueQuickConnectsRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        QueueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The identifier for the queue.
        QuickConnectIds:
          allOf:
          - $ref: '#/components/schemas/QuickConnectsList'
          description: The quick connects to associate with this queue.
      required:
      - InstanceId
      - QueueId
      - QuickConnectIds
    AssociateRoutingProfileQueuesRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        RoutingProfileId:
          allOf:
          - $ref: '#/components/schemas/RoutingProfileId'
          description: The identifier of the routing profile.
        QueueConfigs:
          allOf:
          - $ref: '#/components/schemas/RoutingProfileQueueConfigList'
          description: The queues to associate with this routing profile.
      required:
      - InstanceId
      - RoutingProfileId
      - QueueConfigs
    AssociateSecurityKeyRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        Key:
          allOf:
          - $ref: '#/components/schemas/PEM'
          description: A valid security key in PEM format as a String.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
      required:
      - InstanceId
      - Key
    AssociateSecurityKeyResponse:
      type: object
      properties:
        AssociationId:
          allOf:
          - $ref: '#/components/schemas/AssociationId'
          description: The existing association identifier that uniquely identifies
            the resource type and storage config for the given instance ID.
    AssociateTrafficDistributionGroupUserRequest:
      type: object
      properties:
        TrafficDistributionGroupId:
          allOf:
          - $ref: '#/components/schemas/TrafficDistributionGroupIdOrArn'
          description: The identifier of the traffic distribution group. This can
            be the ID or the ARN of the traffic distribution group.
        UserId:
          allOf:
          - $ref: '#/components/schemas/UserId'
          description: The identifier of the user account. This can be the ID or the
            ARN of the user.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
      required:
      - TrafficDistributionGroupId
      - UserId
      - InstanceId
    AssociateTrafficDistributionGroupUserResponse:
      type: object
      properties: {}
    AssociateUserProficienciesRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can find
            the instance ID in the Amazon Resource Name (ARN of the instance).
        UserId:
          allOf:
          - $ref: '#/components/schemas/UserId'
          description: The identifier of the user account.
        UserProficiencies:
          allOf:
          - $ref: '#/components/schemas/UserProficiencyList'
          description: The proficiencies to associate with the user.
      required:
      - InstanceId
      - UserId
      - UserProficiencies
    AssociatedContactSummary:
      type: object
      properties:
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact in this instance of Amazon Connect.
        ContactArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the contact
        InitiationTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time this contact was initiated, in UTC time.
        DisconnectTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time that the customer endpoint disconnected from
            the current contact, in UTC time. In transfer scenarios, the DisconnectTimestamp
            of the previous contact indicates the date and time when that contact
            ended.
        InitialContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: If this contact is related to other contacts, this is the ID
            of the initial contact.
        PreviousContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: If this contact is not the first contact, this is the ID of
            the previous contact.
        RelatedContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The contactId that is related to this contact.
        InitiationMethod:
          allOf:
          - $ref: '#/components/schemas/ContactInitiationMethod'
          description: Indicates how the contact was initiated.
        Channel:
          allOf:
          - $ref: '#/components/schemas/Channel'
          description: How the contact reached your contact center.
      description: Contact summary of a contact in contact tree associated with unique
        identifier.
    AssociatedContactSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/AssociatedContactSummary'
    AssociatedQueueIdList:
      type: array
      items:
        $ref: '#/components/schemas/QueueId'
    AssociationId:
      type: string
      minLength: 1
      maxLength: 100
    AttachedFile:
      type: object
      properties:
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601Datetime'
          description: 'The time of Creation of the file resource as an ISO timestamp.
            It''s specified in ISO 8601 format: `yyyy-MM-ddThh:mm:ss.SSSZ`. For example,
            `2024-05-03T02:41:28.172Z`.'
        FileArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The unique identifier of the attached file resource (ARN).
        FileId:
          allOf:
          - $ref: '#/components/schemas/FileId'
          description: The unique identifier of the attached file resource.
        FileName:
          allOf:
          - $ref: '#/components/schemas/FileName'
          description: A case-sensitive name of the attached file being uploaded.
        FileSizeInBytes:
          allOf:
          - $ref: '#/components/schemas/FileSizeInBytes'
          description: The size of the attached file in bytes.
        FileStatus:
          allOf:
          - $ref: '#/components/schemas/FileStatusType'
          description: The current status of the attached file.
        CreatedBy:
          allOf:
          - $ref: '#/components/schemas/CreatedByInfo'
          description: Represents the identity that created the file.
        FileUseCaseType:
          allOf:
          - $ref: '#/components/schemas/FileUseCaseType'
          description: The use case for the file.
        AssociatedResourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: 'The resource to which the attached file is (being) uploaded
            to. [Cases](https://docs.aws.amazon.com/connect/latest/APIReference/API_connect-cases_CreateCase.html)
            are the only current supported resource.


            This value must be a valid ARN.'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The tags used to organize, track, or control access for this
            resource. For example, `{ "Tags": {"key1":"value1", "key2":"value2"} }`.'
      required:
      - CreationTime
      - FileArn
      - FileId
      - FileName
      - FileSizeInBytes
      - FileStatus
      description: Information about the attached file.
    AttachedFileError:
      type: object
      properties:
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/ErrorCode'
          description: Status code describing the failure.
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: Why the attached file couldn't be retrieved.
        FileId:
          allOf:
          - $ref: '#/components/schemas/FileId'
          description: The unique identifier of the attached file resource.
      description: Error describing a failure to retrieve attached file metadata through
        BatchGetAttachedFileMetadata action.
    AttachedFileErrorsList:
      type: array
      items:
        $ref: '#/components/schemas/AttachedFileError'
    AttachedFileInvalidRequestExceptionReason:
      type: string
      enum:
      - INVALID_FILE_SIZE
      - INVALID_FILE_TYPE
      - INVALID_FILE_NAME
    AttachedFileServiceQuotaExceededExceptionReason:
      type: string
      enum:
      - TOTAL_FILE_SIZE_EXCEEDED
      - TOTAL_FILE_COUNT_EXCEEDED
    AttachedFilesList:
      type: array
      items:
        $ref: '#/components/schemas/AttachedFile'
    AttachmentName:
      type: string
      minLength: 1
      maxLength: 256
    AttachmentReference:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ReferenceKey'
          description: Identifier of the attachment reference.
        Value:
          allOf:
          - $ref: '#/components/schemas/ReferenceValue'
          description: The location path of the attachment reference.
        Status:
          allOf:
          - $ref: '#/components/schemas/ReferenceStatus'
          description: Status of the attachment reference type.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ReferenceArn'
          description: The Amazon Resource Name (ARN) of the attachment reference.
      description: Information about a reference when the `referenceType` is `ATTACHMENT`.
        Otherwise, null.
    Attendee:
      type: object
      properties:
        AttendeeId:
          allOf:
          - $ref: '#/components/schemas/AttendeeId'
          description: The Amazon Chime SDK attendee ID.
        JoinToken:
          allOf:
          - $ref: '#/components/schemas/JoinToken'
          description: The join token used by the Amazon Chime SDK attendee.
      description: The attendee information, including attendee ID and join token.
    AttendeeId:
      type: string
    Attribute:
      type: object
      properties:
        AttributeType:
          allOf:
          - $ref: '#/components/schemas/InstanceAttributeType'
          description: The type of attribute.
        Value:
          allOf:
          - $ref: '#/components/schemas/InstanceAttributeValue'
          description: The value of the attribute.
      description: A toggle for an individual feature at the instance level.
    AttributeAndCondition:
      type: object
      properties:
        TagConditions:
          allOf:
          - $ref: '#/components/schemas/TagAndConditionList'
          description: A leaf node condition which can be used to specify a tag condition.
        HierarchyGroupCondition:
          $ref: '#/components/schemas/HierarchyGroupCondition'
      description: A list of conditions which would be applied together with an `AND`
        condition.
    AttributeCondition:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/PredefinedAttributeName'
          description: The name of predefined attribute.
        Value:
          allOf:
          - $ref: '#/components/schemas/ProficiencyValue'
          description: The value of predefined attribute.
        ProficiencyLevel:
          allOf:
          - $ref: '#/components/schemas/NullableProficiencyLevel'
          description: The proficiency level of the condition.
        Range:
          allOf:
          - $ref: '#/components/schemas/Range'
          description: An Object to define the minimum and maximum proficiency levels.
        MatchCriteria:
          allOf:
          - $ref: '#/components/schemas/MatchCriteria'
          description: An object to define `AgentsCriteria`.
        ComparisonOperator:
          allOf:
          - $ref: '#/components/schemas/ComparisonOperator'
          description: The operator of the condition.
      description: An object to specify the predefined attribute condition.
    AttributeName:
      type: string
      minLength: 1
      maxLength: 32767
    AttributeOrConditionList:
      type: array
      items:
        $ref: '#/components/schemas/AttributeAndCondition'
    AttributeValue:
      type: string
      minLength: 0
      maxLength: 32767
    Attributes:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/AttributeValue'
    AttributesList:
      type: array
      items:
        $ref: '#/components/schemas/Attribute'
    AudioFeatures:
      type: object
      properties:
        EchoReduction:
          allOf:
          - $ref: '#/components/schemas/MeetingFeatureStatus'
          description: Makes echo reduction available to clients who connect to the
            meeting.
      description: Has audio-specific configurations as the operating parameter for
        Echo Reduction.
    AudioQualityMetricsInfo:
      type: object
      properties:
        QualityScore:
          allOf:
          - $ref: '#/components/schemas/AudioQualityScore'
          description: Number measuring the estimated quality of the media connection.
        PotentialQualityIssues:
          allOf:
          - $ref: '#/components/schemas/PotentialAudioQualityIssues'
          description: 'List of potential issues causing degradation of quality on
            a media connection. If the service did not detect any potential quality
            issues the list is empty.


            Valid values: `HighPacketLoss` | `HighRoundTripTime` | `HighJitterBuffer`'
      description: Contains information for score and potential quality issues for
        Audio
    AudioQualityScore:
      type: number
      format: float
      default: 0
    AuthenticationError:
      type: string
      pattern: ^[\x20-\x21\x23-\x5B\x5D-\x7E]*$
      minLength: 1
      maxLength: 2048
    AuthenticationErrorDescription:
      type: string
      pattern: ^[\x20-\x21\x23-\x5B\x5D-\x7E]*$
      minLength: 1
      maxLength: 2048
    AuthenticationProfile:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/AuthenticationProfileId'
          description: A unique identifier for the authentication profile.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for the authentication profile.
        Name:
          allOf:
          - $ref: '#/components/schemas/AuthenticationProfileName'
          description: The name for the authentication profile.
        Description:
          allOf:
          - $ref: '#/components/schemas/AuthenticationProfileDescription'
          description: The description for the authentication profile.
        AllowedIps:
          allOf:
          - $ref: '#/components/schemas/IpCidrList'
          description: A list of IP address range strings that are allowed to access
            the Amazon Connect instance. For more information about how to configure
            IP addresses, see [Configure IP address based access control](https://docs.aws.amazon.com/connect/latest/adminguide/authentication-profiles.html#configure-ip-based-ac)
            in the _Amazon Connect Administrator Guide_.
        BlockedIps:
          allOf:
          - $ref: '#/components/schemas/IpCidrList'
          description: A list of IP address range strings that are blocked from accessing
            the Amazon Connect instance. For more information about how to configure
            IP addresses, see [Configure IP address based access control](https://docs.aws.amazon.com/connect/latest/adminguide/authentication-profiles.html#configure-ip-based-ac)
            in the _Amazon Connect Administrator Guide_.
        IsDefault:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Shows whether the authentication profile is the default authentication
            profile for the Amazon Connect instance. The default authentication profile
            applies to all agents in an Amazon Connect instance, unless overridden
            by another authentication profile.
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the authentication profile was created.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the authentication profile was last modified.
        LastModifiedRegion:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          description: The Amazon Web Services Region where the authentication profile
            was last modified.
        PeriodicSessionDuration:
          allOf:
          - $ref: '#/components/schemas/AccessTokenDuration'
          description: The short lived session duration configuration for users logged
            in to Amazon Connect, in minutes. This value determines the maximum possible
            time before an agent is authenticated. For more information, see [Configure
            the session duration](https://docs.aws.amazon.com/connect/latest/adminguide/authentication-profiles.html#configure-session-timeouts)
            in the _Amazon Connect Administrator Guide_.
        MaxSessionDuration:
          allOf:
          - $ref: '#/components/schemas/RefreshTokenDuration'
          description: The long lived session duration for users logged in to Amazon
            Connect, in minutes. After this time period, users must log in again.
            For more information, see [Configure the session duration](https://docs.aws.amazon.com/connect/latest/adminguide/authentication-profiles.html#configure-session-timeouts)
            in the _Amazon Connect Administrator Guide_.
      description: 'This API is in preview release for Amazon Connect and is subject
        to change. To request access to this API, contact Amazon Web ServicesSupport.


        Information about an authentication profile. An authentication profile is
        a resource that stores the authentication settings for users in your contact
        center. You use authentication profiles to set up IP address range restrictions
        and session timeouts. For more information, see [Set IP address restrictions
        or session timeouts](https://docs.aws.amazon.com/connect/latest/adminguide/authentication-profiles.html).'
    AuthenticationProfileDescription:
      type: string
      minLength: 1
      maxLength: 250
    AuthenticationProfileId:
      type: string
      minLength: 1
      maxLength: 100
    AuthenticationProfileName:
      type: string
      minLength: 1
      maxLength: 128
    AuthenticationProfileSummary:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/AuthenticationProfileId'
          description: The unique identifier of the authentication profile.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the authentication profile
            summary.
        Name:
          allOf:
          - $ref: '#/components/schemas/AuthenticationProfileName'
          description: The name of the authentication profile summary.
        IsDefault:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Shows whether the authentication profile is the default authentication
            profile for the Amazon Connect instance. The default authentication profile
            applies to all agents in an Amazon Connect instance, unless overridden
            by another authentication profile.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the authentication profile summary was last
            modified.
        LastModifiedRegion:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          description: The Amazon Web Services Region when the authentication profile
            summary was last modified.
      description: 'This API is in preview release for Amazon Connect and is subject
        to change. To request access to this API, contact Amazon Web ServicesSupport.


        A summary of a given authentication profile.'
    AuthenticationProfileSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/AuthenticationProfileSummary'
    AuthorizationCode:
      type: string
      minLength: 1
      maxLength: 2048
    AutoAccept:
      type: boolean
      default: false
    AvailableNumberSummary:
      type: object
      properties:
        PhoneNumber:
          allOf:
          - $ref: '#/components/schemas/PhoneNumber'
          description: The phone number. Phone numbers are formatted `[+] [country
            code] [subscriber number including area code]`.
        PhoneNumberCountryCode:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberCountryCode'
          description: The ISO country code.
        PhoneNumberType:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberType'
          description: The type of phone number.
      description: Information about available phone numbers.
    AvailableNumbersList:
      type: array
      items:
        $ref: '#/components/schemas/AvailableNumberSummary'
    AwsRegion:
      type: string
      pattern: ^[a-z]{2}(-[a-z]+){1,2}(-[0-9])?$
      minLength: 8
      maxLength: 31
    BatchAssociateAnalyticsDataSetRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        DataSetIds:
          allOf:
          - $ref: '#/components/schemas/DataSetIds'
          description: An array of dataset identifiers to associate.
        TargetAccountId:
          allOf:
          - $ref: '#/components/schemas/AWSAccountId'
          description: The identifier of the target account. Use to associate a dataset
            to a different account than the one containing the Amazon Connect instance.
            If not specified, by default this value is the Amazon Web Services account
            that has the Amazon Connect instance.
      required:
      - InstanceId
      - DataSetIds
    BatchAssociateAnalyticsDataSetResponse:
      type: object
      properties:
        Created:
          allOf:
          - $ref: '#/components/schemas/AnalyticsDataAssociationResults'
          description: 'Information about associations that are successfully created:
            `DataSetId`, `TargetAccountId`, `ResourceShareId`, `ResourceShareArn`.'
        Errors:
          allOf:
          - $ref: '#/components/schemas/ErrorResults'
          description: A list of errors for datasets that aren't successfully associated
            with the target account.
    BatchDisassociateAnalyticsDataSetRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        DataSetIds:
          allOf:
          - $ref: '#/components/schemas/DataSetIds'
          description: An array of associated dataset identifiers to remove.
        TargetAccountId:
          allOf:
          - $ref: '#/components/schemas/AWSAccountId'
          description: The identifier of the target account. Use to disassociate a
            dataset from a different account than the one containing the Amazon Connect
            instance. If not specified, by default this value is the Amazon Web Services
            account that has the Amazon Connect instance.
      required:
      - InstanceId
      - DataSetIds
    BatchDisassociateAnalyticsDataSetResponse:
      type: object
      properties:
        Deleted:
          allOf:
          - $ref: '#/components/schemas/DataSetIds'
          description: An array of successfully disassociated dataset identifiers.
        Errors:
          allOf:
          - $ref: '#/components/schemas/ErrorResults'
          description: A list of errors for any datasets not successfully removed.
    BatchGetAttachedFileMetadataRequest:
      type: object
      properties:
        FileIds:
          allOf:
          - $ref: '#/components/schemas/FileIdList'
          description: The unique identifiers of the attached file resource.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The unique identifier of the Connect instance.
        AssociatedResourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: 'The resource to which the attached file is (being) uploaded
            to. The supported resources are [Cases](https://docs.aws.amazon.com/connect/latest/adminguide/cases.html)
            and [Email](https://docs.aws.amazon.com/connect/latest/adminguide/setup-email-channel.html).


            This value must be a valid ARN.'
      required:
      - FileIds
      - InstanceId
      - AssociatedResourceArn
    BatchGetAttachedFileMetadataResponse:
      type: object
      properties:
        Files:
          allOf:
          - $ref: '#/components/schemas/AttachedFilesList'
          description: List of attached files that were successfully retrieved.
        Errors:
          allOf:
          - $ref: '#/components/schemas/AttachedFileErrorsList'
          description: List of errors of attached files that could not be retrieved.
    BatchGetFlowAssociationRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        ResourceIds:
          allOf:
          - $ref: '#/components/schemas/resourceArnListMaxLimit100'
          description: "A list of resource identifiers to retrieve flow associations.\n\
            \n  * Amazon Web Services End User Messaging SMS phone number ARN when\
            \ using `SMS_PHONE_NUMBER`\n\n  * Amazon Web Services End User Messaging\
            \ Social phone number ARN when using `WHATSAPP_MESSAGING_PHONE_NUMBER`"
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ListFlowAssociationResourceType'
          description: The type of resource association.
      required:
      - InstanceId
      - ResourceIds
    BatchGetFlowAssociationResponse:
      type: object
      properties:
        FlowAssociationSummaryList:
          allOf:
          - $ref: '#/components/schemas/FlowAssociationSummaryList'
          description: Information about flow associations.
    BatchPutContactRequest:
      type: object
      properties:
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        ContactDataRequestList:
          allOf:
          - $ref: '#/components/schemas/ContactDataRequestList'
          description: List of individual contact requests.
      required:
      - InstanceId
      - ContactDataRequestList
    BatchPutContactResponse:
      type: object
      properties:
        SuccessfulRequestList:
          allOf:
          - $ref: '#/components/schemas/SuccessfulRequestList'
          description: List of requests for which contact was successfully created.
        FailedRequestList:
          allOf:
          - $ref: '#/components/schemas/FailedRequestList'
          description: List of requests for which contact creation failed.
    BehaviorType:
      type: string
      enum:
      - ROUTE_CURRENT_CHANNEL_ONLY
      - ROUTE_ANY_CHANNEL
    Body:
      type: string
      minLength: 1
      maxLength: 5242880
    Boolean:
      type: boolean
      default: false
    BotName:
      type: string
      minLength: 0
      maxLength: 50
    BoxedBoolean:
      type: boolean
      default: false
    BucketName:
      type: string
      minLength: 1
      maxLength: 128
    Campaign:
      type: object
      properties:
        CampaignId:
          allOf:
          - $ref: '#/components/schemas/CampaignId'
          description: A unique identifier for a campaign.
      description: Information associated with a campaign.
    CampaignId:
      type: string
      minLength: 1
      maxLength: 100
    CaseSlaConfiguration:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/SlaName'
          description: Name of an SLA.
        Type:
          allOf:
          - $ref: '#/components/schemas/SlaType'
          description: Type of SLA for Case SlaAssignmentType.
        FieldId:
          allOf:
          - $ref: '#/components/schemas/FieldValueId'
          description: Unique identifier of a Case field.
        TargetFieldValues:
          allOf:
          - $ref: '#/components/schemas/SlaFieldValueUnionList'
          description: Represents a list of target field values for the fieldId specified
            in CaseSlaConfiguration. The SLA is considered met if any one of these
            target field values matches the actual field value.
        TargetSlaMinutes:
          allOf:
          - $ref: '#/components/schemas/TargetSlaMinutes'
          description: Target duration in minutes within which an SLA should be completed.
      required:
      - Name
      - Type
      - TargetSlaMinutes
      description: The SLA configuration for Case SlaAssignmentType.
    Channel:
      type: string
      enum:
      - VOICE
      - CHAT
      - TASK
      - EMAIL
    ChannelList:
      type: array
      items:
        $ref: '#/components/schemas/Channel'
    ChannelToCountMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/IntegerCount'
    Channels:
      type: array
      items:
        $ref: '#/components/schemas/Channel'
    ChatContent:
      type: string
      minLength: 1
      maxLength: 16384
    ChatContentType:
      type: string
      minLength: 1
      maxLength: 100
    ChatDurationInMinutes:
      type: integer
      minimum: 60
      maximum: 10080
    ChatEvent:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/ChatEventType'
          description: Type of chat integration event.
        ContentType:
          allOf:
          - $ref: '#/components/schemas/ChatContentType'
          description: "Type of content. This is required when `Type` is `MESSAGE`\
            \ or `EVENT`.\n\n  * For allowed message content types, see the `ContentType`\
            \ parameter in the [SendMessage](https://docs.aws.amazon.com/connect-participant/latest/APIReference/API_SendMessage.html)\
            \ topic in the _Amazon Connect Participant Service API Reference_.\n\n\
            \  * For allowed event content types, see the `ContentType` parameter\
            \ in the [SendEvent](https://docs.aws.amazon.com/connect-participant/latest/APIReference/API_SendEvent.html)\
            \ topic in the _Amazon Connect Participant Service API Reference_."
        Content:
          allOf:
          - $ref: '#/components/schemas/ChatContent'
          description: "Content of the message or event. This is required when `Type`\
            \ is `MESSAGE` and for certain `ContentTypes` when `Type` is `EVENT`.\n\
            \n  * For allowed message content, see the `Content` parameter in the\
            \ [SendMessage](https://docs.aws.amazon.com/connect-participant/latest/APIReference/API_SendMessage.html)\
            \ topic in the _Amazon Connect Participant Service API Reference_.\n\n\
            \  * For allowed event content, see the `Content` parameter in the [SendEvent](https://docs.aws.amazon.com/connect-participant/latest/APIReference/API_SendEvent.html)\
            \ topic in the _Amazon Connect Participant Service API Reference_."
      required:
      - Type
      description: "Chat integration event containing payload to perform different\
        \ chat actions such as:\n\n  * Sending a chat message\n\n  * Sending a chat\
        \ event, such as typing\n\n  * Disconnecting from a chat"
    ChatEventType:
      type: string
      enum:
      - DISCONNECT
      - MESSAGE
      - EVENT
    ChatMessage:
      type: object
      properties:
        ContentType:
          allOf:
          - $ref: '#/components/schemas/ChatContentType'
          description: The type of the content. Supported types are `text/plain`,
            `text/markdown`, `application/json`, and `application/vnd.amazonaws.connect.message.interactive.response`.
        Content:
          allOf:
          - $ref: '#/components/schemas/ChatContent'
          description: "The content of the chat message.\n\n  * For `text/plain` and\
            \ `text/markdown`, the Length Constraints are Minimum of 1, Maximum of\
            \ 1024. \n\n  * For `application/json`, the Length Constraints are Minimum\
            \ of 1, Maximum of 12000\\. \n\n  * For `application/vnd.amazonaws.connect.message.interactive.response`,\
            \ the Length Constraints are Minimum of 1, Maximum of 12288."
      required:
      - ContentType
      - Content
      description: A chat message.
    ChatParticipantRoleConfig:
      type: object
      properties:
        ParticipantTimerConfigList:
          allOf:
          - $ref: '#/components/schemas/ParticipantTimerConfigList'
          description: A list of participant timers. You can specify any unique combination
            of role and timer type. Duplicate entries error out the request with a
            400.
      required:
      - ParticipantTimerConfigList
      description: Configuration information for the chat participant role.
    ChatStreamingConfiguration:
      type: object
      properties:
        StreamingEndpointArn:
          allOf:
          - $ref: '#/components/schemas/ChatStreamingEndpointARN'
          description: The Amazon Resource Name (ARN) of the standard Amazon SNS topic.
            The Amazon Resource Name (ARN) of the streaming endpoint that is used
            to publish real-time message streaming for chat conversations.
      required:
      - StreamingEndpointArn
      description: The streaming configuration, such as the Amazon SNS streaming endpoint.
    ChatStreamingEndpointARN:
      type: string
      minLength: 1
      maxLength: 350
    ClaimPhoneNumberRequest:
      type: object
      properties:
        TargetArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for Amazon Connect instances
            or traffic distribution groups that phone number inbound traffic is routed
            through. You must enter `InstanceId` or `TargetArn`.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance that phone numbers
            are claimed to. You can [find the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance. You must enter `InstanceId`
            or `TargetArn`.
        PhoneNumber:
          allOf:
          - $ref: '#/components/schemas/PhoneNumber'
          description: The phone number you want to claim. Phone numbers are formatted
            `[+] [country code] [subscriber number including area code]`.
        PhoneNumberDescription:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberDescription'
          description: The description of the phone number.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The tags used to organize, track, or control access for this
            resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.'
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: 'A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).


            Pattern: `^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$`'
      required:
      - PhoneNumber
    ClaimPhoneNumberResponse:
      type: object
      properties:
        PhoneNumberId:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberId'
          description: A unique identifier for the phone number.
        PhoneNumberArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the phone number.
    ClaimedPhoneNumberSummary:
      type: object
      properties:
        PhoneNumberId:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberId'
          description: A unique identifier for the phone number.
        PhoneNumberArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the phone number.
        PhoneNumber:
          allOf:
          - $ref: '#/components/schemas/PhoneNumber'
          description: The phone number. Phone numbers are formatted `[+] [country
            code] [subscriber number including area code]`.
        PhoneNumberCountryCode:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberCountryCode'
          description: The ISO country code.
        PhoneNumberType:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberType'
          description: The type of phone number.
        PhoneNumberDescription:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberDescription'
          description: The description of the phone number.
        TargetArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for Amazon Connect instances
            or traffic distribution groups that phone number inbound traffic is routed
            through.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance that phone numbers
            are claimed to. You can [find the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The tags used to organize, track, or control access for this
            resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.'
        PhoneNumberStatus:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberStatus'
          description: "The status of the phone number.\n\n  * `CLAIMED` means the\
            \ previous [ClaimPhoneNumber](https://docs.aws.amazon.com/connect/latest/APIReference/API_ClaimPhoneNumber.html)\
            \ or [UpdatePhoneNumber](https://docs.aws.amazon.com/connect/latest/APIReference/API_UpdatePhoneNumber.html)\
            \ operation succeeded.\n\n  * `IN_PROGRESS` means a [ClaimPhoneNumber](https://docs.aws.amazon.com/connect/latest/APIReference/API_ClaimPhoneNumber.html),\
            \ [UpdatePhoneNumber](https://docs.aws.amazon.com/connect/latest/APIReference/API_UpdatePhoneNumber.html),\
            \ or [UpdatePhoneNumberMetadata](https://docs.aws.amazon.com/connect/latest/APIReference/API_UpdatePhoneNumberMetadata.html)\
            \ operation is still in progress and has not yet completed. You can call\
            \ [DescribePhoneNumber](https://docs.aws.amazon.com/connect/latest/APIReference/API_DescribePhoneNumber.html)\
            \ at a later time to verify if the previous operation has completed.\n\
            \n  * `FAILED` indicates that the previous [ClaimPhoneNumber](https://docs.aws.amazon.com/connect/latest/APIReference/API_ClaimPhoneNumber.html)\
            \ or [UpdatePhoneNumber](https://docs.aws.amazon.com/connect/latest/APIReference/API_UpdatePhoneNumber.html)\
            \ operation has failed. It will include a message indicating the failure\
            \ reason. A common reason for a failure may be that the `TargetArn` value\
            \ you are claiming or updating a phone number to has reached its limit\
            \ of total claimed numbers. If you received a `FAILED` status from a `ClaimPhoneNumber`\
            \ API call, you have one day to retry claiming the phone number before\
            \ the number is released back to the inventory for other customers to\
            \ claim.\n\nYou will not be billed for the phone number during the 1-day\
            \ period if number claiming fails."
        SourcePhoneNumberArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The claimed phone number ARN that was previously imported from
            the external service, such as Amazon Web Services End User Messaging.
            If it is from Amazon Web Services End User Messaging, it looks like the
            ARN of the phone number that was imported from Amazon Web Services End
            User Messaging.
      description: Information about a phone number that has been claimed to your
        Amazon Connect instance or traffic distribution group.
    ClientToken:
      type: string
      minLength: 0
      maxLength: 500
    CommonAttributeAndCondition:
      type: object
      properties:
        TagConditions:
          allOf:
          - $ref: '#/components/schemas/TagAndConditionList'
          description: A leaf node condition which can be used to specify a tag condition.
      description: A list of conditions which would be applied together with an `AND`
        condition.
    CommonAttributeOrConditionList:
      type: array
      items:
        $ref: '#/components/schemas/CommonAttributeAndCondition'
    CommonHumanReadableDescription:
      type: string
      pattern: ^[\P{C}\r\n\t]{1,250}$
    CommonHumanReadableName:
      type: string
      pattern: ^[\P{C}\r\n\t]{1,127}$
    CommonNameLength127:
      type: string
      minLength: 1
      maxLength: 127
    Comparison:
      type: string
      enum:
      - LT
    ComparisonOperator:
      type: string
      minLength: 1
      maxLength: 127
    CompleteAttachedFileUploadRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The unique identifier of the Amazon Connect instance.
        FileId:
          allOf:
          - $ref: '#/components/schemas/FileId'
          description: The unique identifier of the attached file resource.
        AssociatedResourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: 'The resource to which the attached file is (being) uploaded
            to. The supported resources are [Cases](https://docs.aws.amazon.com/connect/latest/adminguide/cases.html)
            and [Email](https://docs.aws.amazon.com/connect/latest/adminguide/setup-email-channel.html).


            This value must be a valid ARN.'
      required:
      - InstanceId
      - FileId
      - AssociatedResourceArn
      description: Request to CompleteAttachedFileUpload API
    CompleteAttachedFileUploadResponse:
      type: object
      properties: {}
      description: Response from CompleteAttachedFileUpload API
    Concurrency:
      type: integer
      minimum: 1
      maximum: 10
    Condition:
      type: object
      properties:
        StringCondition:
          allOf:
          - $ref: '#/components/schemas/StringCondition'
          description: 'A leaf node condition which can be used to specify a string
            condition.


            The currently supported values for `FieldName` are `name` and `value`.'
        NumberCondition:
          allOf:
          - $ref: '#/components/schemas/NumberCondition'
          description: A leaf node condition which can be used to specify a numeric
            condition.
      description: A leaf node condition which can be used to specify a ProficiencyName,
        ProficiencyValue and ProficiencyLimit.
    ConditionalOperationFailedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
      description: Request processing failed because dependent condition failed.
    Conditions:
      type: array
      items:
        $ref: '#/components/schemas/Condition'
    ConflictException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
      description: Operation cannot be performed at this time as there is a conflict
        with another operation or contact state.
    ConnectionData:
      type: object
      properties:
        Attendee:
          allOf:
          - $ref: '#/components/schemas/Attendee'
          description: The attendee information, including attendee ID and join token.
        Meeting:
          allOf:
          - $ref: '#/components/schemas/Meeting'
          description: A meeting created using the Amazon Chime SDK.
      description: Information required to join the call.
    Contact:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for the contact.
        Id:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier for the contact.
        InitialContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: If this contact is related to other contacts, this is the ID
            of the initial contact.
        PreviousContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: If this contact is not the first contact, this is the ID of
            the previous contact.
        ContactAssociationId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: This is the root contactId which is used as a unique identifier
            for all subsequent contacts in a contact tree.
        InitiationMethod:
          allOf:
          - $ref: '#/components/schemas/ContactInitiationMethod'
          description: Indicates how the contact was initiated.
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the contact.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the contact.
        Channel:
          allOf:
          - $ref: '#/components/schemas/Channel'
          description: How the contact reached your contact center.
        QueueInfo:
          allOf:
          - $ref: '#/components/schemas/QueueInfo'
          description: If this contact was queued, this contains information about
            the queue.
        AgentInfo:
          allOf:
          - $ref: '#/components/schemas/AgentInfo'
          description: Information about the agent who accepted the contact.
        InitiationTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time this contact was initiated, in UTC time.
            For `INBOUND`, this is when the contact arrived. For `OUTBOUND`, this
            is when the agent began dialing. For `CALLBACK`, this is when the callback
            contact was created. For `TRANSFER` and `QUEUE_TRANSFER`, this is when
            the transfer was initiated. For `API`, this is when the request arrived.
            For `EXTERNAL_OUTBOUND`, this is when the agent started dialing the external
            participant. For `MONITOR`, this is when the supervisor started listening
            to a contact.
        DisconnectTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time that the customer endpoint disconnected from
            the current contact, in UTC time. In transfer scenarios, the DisconnectTimestamp
            of the previous contact indicates the date and time when that contact
            ended.
        LastUpdateTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when contact was last updated.
        LastPausedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the contact was last paused.
        LastResumedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the contact was last resumed.
        TotalPauseCount:
          allOf:
          - $ref: '#/components/schemas/TotalPauseCount'
          description: Total pause count for a contact.
        TotalPauseDurationInSeconds:
          allOf:
          - $ref: '#/components/schemas/TotalPauseDurationInSeconds'
          description: Total pause duration for a contact in seconds.
        ScheduledTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp, in Unix epoch time format, at which to start
            running the inbound flow.
        RelatedContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The contactId that is [related](https://docs.aws.amazon.com/connect/latest/adminguide/chat-persistence.html#relatedcontactid)
            to this contact.
        WisdomInfo:
          allOf:
          - $ref: '#/components/schemas/WisdomInfo'
          description: Information about Amazon Connect Wisdom.
        CustomerId:
          allOf:
          - $ref: '#/components/schemas/CustomerId'
          description: The customer's identification number. For example, the `CustomerId`
            may be a customer number from your CRM. You can create a Lambda function
            to pull the unique customer ID of the caller from your CRM system. If
            you enable Amazon Connect Voice ID capability, this attribute is populated
            with the `CustomerSpeakerId` of the caller.
        CustomerEndpoint:
          allOf:
          - $ref: '#/components/schemas/EndpointInfo'
          description: The customer or external third party participant endpoint.
        SystemEndpoint:
          allOf:
          - $ref: '#/components/schemas/EndpointInfo'
          description: The system endpoint. For `INBOUND`, this is the phone number
            or email address that the customer dialed. For `OUTBOUND` and `EXTERNAL_OUTBOUND`,
            this is the outbound caller ID number assigned to the outbound queue that
            is used to dial the customer. For callback, this shows up as Softphone
            for calls handled by agents with softphone.
        QueueTimeAdjustmentSeconds:
          allOf:
          - $ref: '#/components/schemas/QueueTimeAdjustmentSeconds'
          description: An integer that represents the queue time adjust to be applied
            to the contact, in seconds (longer / larger queue time are routed preferentially).
            Cannot be specified if the QueuePriority is specified. Must be statically
            defined and a valid integer value.
        QueuePriority:
          allOf:
          - $ref: '#/components/schemas/QueuePriority'
          description: An integer that represents the queue priority to be applied
            to the contact (lower priorities are routed preferentially). Cannot be
            specified if the QueueTimeAdjustmentSeconds is specified. Must be statically
            defined, must be larger than zero, and a valid integer value. Default
            Value is 5.
        Tags:
          allOf:
          - $ref: '#/components/schemas/ContactTagMap'
          description: Tags associated with the contact. This contains both Amazon
            Web Services generated and user-defined tags.
        ConnectedToSystemTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when customer endpoint connected to Amazon Connect.
        RoutingCriteria:
          allOf:
          - $ref: '#/components/schemas/RoutingCriteria'
          description: Latest routing criteria on the contact.
        Customer:
          allOf:
          - $ref: '#/components/schemas/Customer'
          description: Information about the Customer on the contact.
        Campaign:
          $ref: '#/components/schemas/Campaign'
        AnsweringMachineDetectionStatus:
          allOf:
          - $ref: '#/components/schemas/AnsweringMachineDetectionStatus'
          description: Indicates how an [outbound campaign](https://docs.aws.amazon.com/connect/latest/adminguide/how-to-create-campaigns.html)
            call is actually disposed if the contact is connected to Amazon Connect.
        CustomerVoiceActivity:
          allOf:
          - $ref: '#/components/schemas/CustomerVoiceActivity'
          description: Information about customer’s voice activity.
        QualityMetrics:
          allOf:
          - $ref: '#/components/schemas/QualityMetrics'
          description: Information about the quality of the participant's media connection.
        DisconnectDetails:
          allOf:
          - $ref: '#/components/schemas/DisconnectDetails'
          description: Information about the call disconnect experience.
        AdditionalEmailRecipients:
          allOf:
          - $ref: '#/components/schemas/AdditionalEmailRecipients'
          description: List of additional email addresses for an email contact.
        SegmentAttributes:
          allOf:
          - $ref: '#/components/schemas/SegmentAttributes'
          description: A set of system defined key-value pairs stored on individual
            contact segments using an attribute map. The attributes are standard Amazon
            Connect attributes and can be accessed in flows. Attribute keys can include
            only alphanumeric, -, and _ characters. This field can be used to show
            channel subtype. For example, `connect:Guide` or `connect:SMS`.
      description: Contains information about a contact.
    ContactAnalysis:
      type: object
      properties:
        Transcript:
          allOf:
          - $ref: '#/components/schemas/Transcript'
          description: Search criteria based on transcript analyzed by Amazon Connect
            Contact Lens.
      description: A structure that defines search criteria for contacts using analysis
        outputs from Amazon Connect Contact Lens.
    ContactConfiguration:
      type: object
      properties:
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact within the Amazon Connect instance.
        ParticipantRole:
          allOf:
          - $ref: '#/components/schemas/ParticipantRole'
          description: 'The role of the participant in the chat conversation.


            Only `CUSTOMER` is currently supported. Any other values other than `CUSTOMER`
            will result in an exception (4xx error).'
        IncludeRawMessage:
          allOf:
          - $ref: '#/components/schemas/IncludeRawMessage'
          description: Whether to include raw connect message in the push notification
            payload. Default is `False`.
      required:
      - ContactId
      description: The contact configuration for push notification registration.
    ContactDataRequest:
      type: object
      properties:
        SystemEndpoint:
          allOf:
          - $ref: '#/components/schemas/Endpoint'
          description: Endpoint associated with the Amazon Connect instance from which
            outbound contact will be initiated for the campaign.
        CustomerEndpoint:
          allOf:
          - $ref: '#/components/schemas/Endpoint'
          description: Endpoint of the customer for which contact will be initiated.
        RequestIdentifier:
          allOf:
          - $ref: '#/components/schemas/RequestIdentifier'
          description: Identifier to uniquely identify individual requests in the
            batch.
        QueueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The identifier of the queue associated with the Amazon Connect
            instance in which contacts that are created will be queued.
        Attributes:
          allOf:
          - $ref: '#/components/schemas/Attributes'
          description: List of attributes to be stored in a contact.
        Campaign:
          allOf:
          - $ref: '#/components/schemas/Campaign'
          description: Structure to store information associated with a campaign.
      description: Request object with information to create a contact.
    ContactDataRequestList:
      type: array
      items:
        $ref: '#/components/schemas/ContactDataRequest'
    ContactFilter:
      type: object
      properties:
        ContactStates:
          allOf:
          - $ref: '#/components/schemas/ContactStates'
          description: A list of up to 9 [contact states](https://docs.aws.amazon.com/connect/latest/adminguide/about-contact-states.html).
      description: Filters user data based on the contact information that is associated
        to the users. It contains a list of [contact states](https://docs.aws.amazon.com/connect/latest/adminguide/about-contact-states.html).
    ContactFlow:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the flow.
        Id:
          allOf:
          - $ref: '#/components/schemas/ContactFlowId'
          description: The identifier of the flow.
        Name:
          allOf:
          - $ref: '#/components/schemas/ContactFlowName'
          description: The name of the flow.
        Type:
          allOf:
          - $ref: '#/components/schemas/ContactFlowType'
          description: The type of the flow. For descriptions of the available types,
            see [Choose a flow type](https://docs.aws.amazon.com/connect/latest/adminguide/create-contact-flow.html#contact-flow-types)
            in the _Amazon Connect Administrator Guide_.
        State:
          allOf:
          - $ref: '#/components/schemas/ContactFlowState'
          description: The type of flow.
        Status:
          allOf:
          - $ref: '#/components/schemas/ContactFlowStatus'
          description: The status of the flow.
        Description:
          allOf:
          - $ref: '#/components/schemas/ContactFlowDescription'
          description: The description of the flow.
        Content:
          allOf:
          - $ref: '#/components/schemas/ContactFlowContent'
          description: 'The JSON string that represents the content of the flow. For
            an example, see [Example flow in Amazon Connect Flow language](https://docs.aws.amazon.com/connect/latest/APIReference/flow-language-example.html).


            Length Constraints: Minimum length of 1. Maximum length of 256000.'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The tags used to organize, track, or control access for this
            resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.'
        FlowContentSha256:
          allOf:
          - $ref: '#/components/schemas/FlowContentSha256'
          description: Indicates the checksum value of the flow content.
        Version:
          allOf:
          - $ref: '#/components/schemas/ResourceVersion'
          description: The identifier of the flow version.
        VersionDescription:
          allOf:
          - $ref: '#/components/schemas/ContactFlowDescription'
          description: The description of the flow version.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the flow was last modified.
        LastModifiedRegion:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          description: The region in which the flow was last modified
      description: Contains information about a flow.
    ContactFlowContent:
      type: string
    ContactFlowDescription:
      type: string
    ContactFlowId:
      type: string
      minLength: 0
      maxLength: 500
    ContactFlowModule:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN).
        Id:
          allOf:
          - $ref: '#/components/schemas/ContactFlowModuleId'
          description: The identifier of the flow module.
        Name:
          allOf:
          - $ref: '#/components/schemas/ContactFlowModuleName'
          description: The name of the flow module.
        Content:
          allOf:
          - $ref: '#/components/schemas/ContactFlowModuleContent'
          description: The JSON string that represents the content of the flow. For
            an example, see [Example flow in Amazon Connect Flow language](https://docs.aws.amazon.com/connect/latest/APIReference/flow-language-example.html).
        Description:
          allOf:
          - $ref: '#/components/schemas/ContactFlowModuleDescription'
          description: The description of the flow module.
        State:
          allOf:
          - $ref: '#/components/schemas/ContactFlowModuleState'
          description: The type of flow module.
        Status:
          allOf:
          - $ref: '#/components/schemas/ContactFlowModuleStatus'
          description: The status of the flow module.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The tags used to organize, track, or control access for this
            resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.'
      description: Contains information about a flow module.
    ContactFlowModuleContent:
      type: string
      minLength: 1
      maxLength: 256000
    ContactFlowModuleDescription:
      type: string
      pattern: \S
      minLength: 0
      maxLength: 500
    ContactFlowModuleId:
      type: string
      minLength: 1
      maxLength: 256
    ContactFlowModuleName:
      type: string
      pattern: \S
      minLength: 1
      maxLength: 127
    ContactFlowModuleSearchConditionList:
      type: array
      items:
        $ref: '#/components/schemas/ContactFlowModuleSearchCriteria'
    ContactFlowModuleSearchCriteria:
      type: object
      properties:
        OrConditions:
          allOf:
          - $ref: '#/components/schemas/ContactFlowModuleSearchConditionList'
          description: A list of conditions which would be applied together with an
            `OR` condition.
        AndConditions:
          allOf:
          - $ref: '#/components/schemas/ContactFlowModuleSearchConditionList'
          description: A list of conditions which would be applied together with an
            `AND` condition.
        StringCondition:
          $ref: '#/components/schemas/StringCondition'
        StateCondition:
          allOf:
          - $ref: '#/components/schemas/ContactFlowModuleState'
          description: The state of the flow.
        StatusCondition:
          allOf:
          - $ref: '#/components/schemas/ContactFlowModuleStatus'
          description: The status of the flow.
      description: The search criteria to be used to return flow modules.
    ContactFlowModuleSearchFilter:
      type: object
      properties:
        TagFilter:
          $ref: '#/components/schemas/ControlPlaneTagFilter'
      description: The search criteria to be used to return flow modules.
    ContactFlowModuleSearchSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ContactFlowModule'
    ContactFlowModuleState:
      type: string
      enum:
      - ACTIVE
      - ARCHIVED
    ContactFlowModuleStatus:
      type: string
      enum:
      - PUBLISHED
      - SAVED
    ContactFlowModuleSummary:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ContactFlowModuleId'
          description: The identifier of the flow module.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the flow module.
        Name:
          allOf:
          - $ref: '#/components/schemas/ContactFlowModuleName'
          description: The name of the flow module.
        State:
          allOf:
          - $ref: '#/components/schemas/ContactFlowModuleState'
          description: The type of flow module.
      description: Contains summary information about a flow.
    ContactFlowModulesSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ContactFlowModuleSummary'
    ContactFlowName:
      type: string
      minLength: 1
    ContactFlowNotPublishedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
      description: The flow has not been published.
    ContactFlowSearchConditionList:
      type: array
      items:
        $ref: '#/components/schemas/ContactFlowSearchCriteria'
    ContactFlowSearchCriteria:
      type: object
      properties:
        OrConditions:
          allOf:
          - $ref: '#/components/schemas/ContactFlowSearchConditionList'
          description: A list of conditions which would be applied together with an
            `OR` condition.
        AndConditions:
          allOf:
          - $ref: '#/components/schemas/ContactFlowSearchConditionList'
          description: A list of conditions which would be applied together with an
            `AND` condition.
        StringCondition:
          $ref: '#/components/schemas/StringCondition'
        TypeCondition:
          allOf:
          - $ref: '#/components/schemas/ContactFlowType'
          description: The type of flow.
        StateCondition:
          allOf:
          - $ref: '#/components/schemas/ContactFlowState'
          description: The state of the flow.
        StatusCondition:
          allOf:
          - $ref: '#/components/schemas/ContactFlowStatus'
          description: The status of the flow.
      description: The search criteria to be used to return flows.
    ContactFlowSearchFilter:
      type: object
      properties:
        TagFilter:
          $ref: '#/components/schemas/ControlPlaneTagFilter'
      description: Filters to be applied to search results.
    ContactFlowSearchSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ContactFlow'
    ContactFlowState:
      type: string
      enum:
      - ACTIVE
      - ARCHIVED
    ContactFlowStatus:
      type: string
      enum:
      - PUBLISHED
      - SAVED
    ContactFlowSummary:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ContactFlowId'
          description: The identifier of the flow.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the flow.
        Name:
          allOf:
          - $ref: '#/components/schemas/ContactFlowName'
          description: The name of the flow.
        ContactFlowType:
          allOf:
          - $ref: '#/components/schemas/ContactFlowType'
          description: The type of flow.
        ContactFlowState:
          allOf:
          - $ref: '#/components/schemas/ContactFlowState'
          description: The type of flow.
        ContactFlowStatus:
          allOf:
          - $ref: '#/components/schemas/ContactFlowStatus'
          description: The status of the flow.
      description: 'Contains summary information about a flow.


        You can also create and update flows using the [Amazon Connect Flow language](https://docs.aws.amazon.com/connect/latest/APIReference/flow-language.html).'
    ContactFlowSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ContactFlowSummary'
    ContactFlowType:
      type: string
      enum:
      - CONTACT_FLOW
      - CUSTOMER_QUEUE
      - CUSTOMER_HOLD
      - CUSTOMER_WHISPER
      - AGENT_HOLD
      - AGENT_WHISPER
      - OUTBOUND_WHISPER
      - AGENT_TRANSFER
      - QUEUE_TRANSFER
      - CAMPAIGN
    ContactFlowTypes:
      type: array
      items:
        $ref: '#/components/schemas/ContactFlowType'
    ContactFlowVersionSummary:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the view version.
        VersionDescription:
          allOf:
          - $ref: '#/components/schemas/ContactFlowDescription'
          description: The description of the flow version.
        Version:
          allOf:
          - $ref: '#/components/schemas/ResourceVersion'
          description: The identifier of the flow version.
      description: A summary of a flow version's metadata.
    ContactFlowVersionSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ContactFlowVersionSummary'
    ContactId:
      type: string
      minLength: 1
      maxLength: 256
    ContactInitiationMethod:
      type: string
      enum:
      - INBOUND
      - OUTBOUND
      - TRANSFER
      - QUEUE_TRANSFER
      - CALLBACK
      - API
      - DISCONNECT
      - MONITOR
      - EXTERNAL_OUTBOUND
      - WEBRTC_API
      - AGENT_REPLY
      - FLOW
    ContactNotFoundException:
      type: object
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/Message'
          description: The message.
      description: The contact with the specified ID is not active or does not exist.
        Applies to Voice calls only, not to Chat or Task contacts.
    ContactRecordingType:
      type: string
      enum:
      - AGENT
      - IVR
      - SCREEN
    ContactReferences:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Reference'
    ContactSearchSummary:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the contact.
        Id:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact summary.
        InitialContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: If this contact is related to other contacts, this is the ID
            of the initial contact.
        PreviousContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: If this contact is not the first contact, this is the ID of
            the previous contact.
        InitiationMethod:
          allOf:
          - $ref: '#/components/schemas/ContactInitiationMethod'
          description: Indicates how the contact was initiated.
        Channel:
          allOf:
          - $ref: '#/components/schemas/Channel'
          description: How the contact reached your contact center.
        QueueInfo:
          allOf:
          - $ref: '#/components/schemas/ContactSearchSummaryQueueInfo'
          description: If this contact was queued, this contains information about
            the queue.
        AgentInfo:
          allOf:
          - $ref: '#/components/schemas/ContactSearchSummaryAgentInfo'
          description: Information about the agent who accepted the contact.
        InitiationTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time this contact was initiated, in UTC time.
            For `INBOUND`, this is when the contact arrived. For `OUTBOUND`, this
            is when the agent began dialing. For `CALLBACK`, this is when the callback
            contact was created. For `TRANSFER` and `QUEUE_TRANSFER`, this is when
            the transfer was initiated. For API, this is when the request arrived.
            For `EXTERNAL_OUTBOUND`, this is when the agent started dialing the external
            participant. For `MONITOR`, this is when the supervisor started listening
            to a contact.
        DisconnectTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the customer endpoint disconnected from
            Amazon Connect.
        ScheduledTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp, in Unix epoch time format, at which to start
            running the inbound flow.
        SegmentAttributes:
          allOf:
          - $ref: '#/components/schemas/ContactSearchSummarySegmentAttributes'
          description: Set of segment attributes for a contact.
      description: Information of returned contact.
    ContactSearchSummaryAgentInfo:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/AgentResourceId'
          description: The identifier of the agent who accepted the contact.
        ConnectedToAgentTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the contact was connected to the agent.
      description: Information about the agent who accepted the contact.
    ContactSearchSummaryQueueInfo:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The unique identifier for the queue.
        EnqueueTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the contact was added to the queue.
      description: If this contact was queued, this contains information about the
        queue.
    ContactSearchSummarySegmentAttributeValue:
      type: object
      properties:
        ValueString:
          allOf:
          - $ref: '#/components/schemas/SegmentAttributeValueString'
          description: The value of a segment attribute represented as a string.
      description: The value of a segment attribute. This is structured as a map with
        a single key-value pair. The key 'valueString' indicates that the attribute
        type is a string, and its corresponding value is the actual string value of
        the segment attribute.
    ContactSearchSummarySegmentAttributes:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ContactSearchSummarySegmentAttributeValue'
    ContactState:
      type: string
      enum:
      - INCOMING
      - PENDING
      - CONNECTING
      - CONNECTED
      - CONNECTED_ONHOLD
      - MISSED
      - ERROR
      - ENDED
      - REJECTED
    ContactStates:
      type: array
      items:
        $ref: '#/components/schemas/ContactState'
    ContactTagKey:
      type: string
      pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
      minLength: 1
      maxLength: 128
    ContactTagKeys:
      type: array
      items:
        $ref: '#/components/schemas/ContactTagKey'
    ContactTagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ContactTagValue'
    ContactTagValue:
      type: string
      minLength: 0
      maxLength: 256
    Contacts:
      type: array
      items:
        $ref: '#/components/schemas/ContactSearchSummary'
    Content:
      type: string
      minLength: 1
      maxLength: 1024
    ContentType:
      type: string
      minLength: 1
      maxLength: 255
    ControlPlaneAttributeFilter:
      type: object
      properties:
        OrConditions:
          allOf:
          - $ref: '#/components/schemas/CommonAttributeOrConditionList'
          description: A list of conditions which would be applied together with an
            `OR` condition.
        AndCondition:
          allOf:
          - $ref: '#/components/schemas/CommonAttributeAndCondition'
          description: A list of conditions which would be applied together with an
            `AND` condition.
        TagCondition:
          $ref: '#/components/schemas/TagCondition'
      description: "An object that can be used to specify Tag conditions inside the\
        \ `SearchFilter`. This accepts an `OR` or `AND` (List of List) input where:\n\
        \n  * The top level list specifies conditions that need to be applied with\
        \ `OR` operator.\n\n  * The inner list specifies conditions that need to be\
        \ applied with `AND` operator."
    ControlPlaneTagFilter:
      type: object
      properties:
        OrConditions:
          allOf:
          - $ref: '#/components/schemas/TagOrConditionList'
          description: A list of conditions which would be applied together with an
            `OR` condition.
        AndConditions:
          allOf:
          - $ref: '#/components/schemas/TagAndConditionList'
          description: A list of conditions which would be applied together with an
            `AND` condition.
        TagCondition:
          allOf:
          - $ref: '#/components/schemas/TagCondition'
          description: A leaf node condition which can be used to specify a tag condition.
      description: "An object that can be used to specify Tag conditions inside the\
        \ `SearchFilter`. This accepts an `OR` of `AND` (List of List) input where:\n\
        \n  * Top level list specifies conditions that need to be applied with `OR`\
        \ operator\n\n  * Inner list specifies conditions that need to be applied\
        \ with `AND` operator."
    ControlPlaneUserAttributeFilter:
      type: object
      properties:
        OrConditions:
          allOf:
          - $ref: '#/components/schemas/AttributeOrConditionList'
          description: A list of conditions which would be applied together with an
            `OR` condition.
        AndCondition:
          allOf:
          - $ref: '#/components/schemas/AttributeAndCondition'
          description: A list of conditions which would be applied together with an
            `AND` condition.
        TagCondition:
          $ref: '#/components/schemas/TagCondition'
        HierarchyGroupCondition:
          $ref: '#/components/schemas/HierarchyGroupCondition'
      description: "An object that can be used to specify Tag conditions or Hierarchy\
        \ Group conditions inside the `SearchFilter`.\n\nThis accepts an `OR` of `AND`\
        \ (List of List) input where:\n\n  * The top level list specifies conditions\
        \ that need to be applied with `OR` operator\n\n  * The inner list specifies\
        \ conditions that need to be applied with `AND` operator.\n\nOnly one field\
        \ can be populated. Maximum number of allowed Tag conditions is 25. Maximum\
        \ number of allowed Hierarchy Group conditions is 20."
    CreateAgentStatusRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        Name:
          allOf:
          - $ref: '#/components/schemas/AgentStatusName'
          description: The name of the status.
        Description:
          allOf:
          - $ref: '#/components/schemas/AgentStatusDescription'
          description: The description of the status.
        State:
          allOf:
          - $ref: '#/components/schemas/AgentStatusState'
          description: The state of the status.
        DisplayOrder:
          allOf:
          - $ref: '#/components/schemas/AgentStatusOrderNumber'
          description: The display order of the status.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The tags used to organize, track, or control access for this
            resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.'
      required:
      - InstanceId
      - Name
      - State
    CreateAgentStatusResponse:
      type: object
      properties:
        AgentStatusARN:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the agent status.
        AgentStatusId:
          allOf:
          - $ref: '#/components/schemas/AgentStatusId'
          description: The identifier of the agent status.
    CreateCaseActionDefinition:
      type: object
      properties:
        Fields:
          allOf:
          - $ref: '#/components/schemas/FieldValues'
          description: An array of objects with `Field ID` and `Value` data.
        TemplateId:
          allOf:
          - $ref: '#/components/schemas/TemplateId'
          description: A unique identifier of a template.
      required:
      - Fields
      - TemplateId
      description: The `CreateCase` action definition.
    CreateContactFlowModuleRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        Name:
          allOf:
          - $ref: '#/components/schemas/ContactFlowModuleName'
          description: The name of the flow module.
        Description:
          allOf:
          - $ref: '#/components/schemas/ContactFlowModuleDescription'
          description: The description of the flow module.
        Content:
          allOf:
          - $ref: '#/components/schemas/ContactFlowModuleContent'
          description: The JSON string that represents the content of the flow. For
            an example, see [Example flow in Amazon Connect Flow language](https://docs.aws.amazon.com/connect/latest/APIReference/flow-language-example.html).
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The tags used to organize, track, or control access for this
            resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.'
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
      required:
      - InstanceId
      - Name
      - Content
    CreateContactFlowModuleResponse:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ContactFlowModuleId'
          description: The identifier of the flow module.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the flow module.
    CreateContactFlowRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance.
        Name:
          allOf:
          - $ref: '#/components/schemas/ContactFlowName'
          description: The name of the flow.
        Type:
          allOf:
          - $ref: '#/components/schemas/ContactFlowType'
          description: The type of the flow. For descriptions of the available types,
            see [Choose a flow type](https://docs.aws.amazon.com/connect/latest/adminguide/create-contact-flow.html#contact-flow-types)
            in the _Amazon Connect Administrator Guide_.
        Description:
          allOf:
          - $ref: '#/components/schemas/ContactFlowDescription'
          description: The description of the flow.
        Content:
          allOf:
          - $ref: '#/components/schemas/ContactFlowContent'
          description: 'The JSON string that represents the content of the flow. For
            an example, see [Example flow in Amazon Connect Flow language](https://docs.aws.amazon.com/connect/latest/APIReference/flow-language-example.html).


            Length Constraints: Minimum length of 1. Maximum length of 256000.'
        Status:
          allOf:
          - $ref: '#/components/schemas/ContactFlowStatus'
          description: Indicates the flow status as either `SAVED` or `PUBLISHED`.
            The `PUBLISHED` status will initiate validation on the content. the `SAVED`
            status does not initiate validation of the content. `SAVED` | `PUBLISHED`.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The tags used to organize, track, or control access for this
            resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.'
      required:
      - InstanceId
      - Name
      - Type
      - Content
    CreateContactFlowResponse:
      type: object
      properties:
        ContactFlowId:
          allOf:
          - $ref: '#/components/schemas/ContactFlowId'
          description: The identifier of the flow.
        ContactFlowArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the flow.
        FlowContentSha256:
          allOf:
          - $ref: '#/components/schemas/FlowContentSha256'
          description: Indicates the checksum value of the latest published flow content.
    CreateContactFlowVersionRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance.
        Description:
          allOf:
          - $ref: '#/components/schemas/ContactFlowDescription'
          description: The description of the flow version.
        ContactFlowId:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The identifier of the flow.
        FlowContentSha256:
          allOf:
          - $ref: '#/components/schemas/FlowContentSha256'
          description: Indicates the checksum value of the flow content.
        ContactFlowVersion:
          allOf:
          - $ref: '#/components/schemas/ResourceVersion'
          description: The identifier of the flow version.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The Amazon Web Services Region where this resource was last
            modified.
        LastModifiedRegion:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          description: The Amazon Web Services Region where this resource was last
            modified.
      required:
      - InstanceId
      - ContactFlowId
    CreateContactFlowVersionResponse:
      type: object
      properties:
        ContactFlowArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the flow.
        Version:
          allOf:
          - $ref: '#/components/schemas/ResourceVersion'
          description: The identifier of the flow version.
    CreateContactRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
        RelatedContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact in this instance of Amazon Connect.
        Attributes:
          allOf:
          - $ref: '#/components/schemas/Attributes'
          description: 'A custom key-value pair using an attribute map. The attributes
            are standard Amazon Connect attributes, and can be accessed in flows just
            like any other contact attributes.


            There can be up to 32,768 UTF-8 bytes across all key-value pairs per contact.
            Attribute keys can include only alphanumeric, dash, and underscore characters.'
        References:
          allOf:
          - $ref: '#/components/schemas/ContactReferences'
          description: 'A formatted URL that is shown to an agent in the Contact Control
            Panel (CCP). Tasks can have the following reference types at the time
            of creation: URL | NUMBER | STRING | DATE | EMAIL | ATTACHMENT.'
        Channel:
          allOf:
          - $ref: '#/components/schemas/Channel'
          description: 'The channel for the contact


            CreateContact only supports the EMAIL and VOICE channels. The following
            information that states other channels are supported is incorrect. We
            are working to update this topic.'
        InitiationMethod:
          allOf:
          - $ref: '#/components/schemas/ContactInitiationMethod'
          description: "Indicates how the contact was initiated.\n\nCreateContact\
            \ only supports the following initiation methods:\n\n  * For EMAIL: OUTBOUND,\
            \ AGENT_REPLY, and FLOW. \n\n  * For VOICE: TRANSFER and the subtype connect:ExternalAudio.\
            \ \n\nThe following information that states other initiation methods are\
            \ supported is incorrect. We are working to update this topic."
        ExpiryDurationInMinutes:
          allOf:
          - $ref: '#/components/schemas/ExpiryDurationInMinutes'
          description: Number of minutes the contact will be active for before expiring
        UserInfo:
          allOf:
          - $ref: '#/components/schemas/UserInfo'
          description: User details for the contact
        InitiateAs:
          allOf:
          - $ref: '#/components/schemas/InitiateAs'
          description: Initial state of the contact when it's created
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of a the contact.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: A description of the contact.
        SegmentAttributes:
          allOf:
          - $ref: '#/components/schemas/SegmentAttributes'
          description: 'A set of system defined key-value pairs stored on individual
            contact segments (unique contact ID) using an attribute map. The attributes
            are standard Amazon Connect attributes. They can be accessed in flows.


            Attribute keys can include only alphanumeric, -, and _.


            This field can be used to set Segment Contact Expiry as a duration in
            minutes.


            To set contact expiry, a ValueMap must be specified containing the integer
            number of minutes the contact will be active for before expiring, with
            `SegmentAttributes` like { ` "connect:ContactExpiry": {"ValueMap" : {
            "ExpiryDuration": { "ValueInteger": 135}}}}`.'
        PreviousContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The ID of the previous contact when creating a transfer contact.
            This value can be provided only for external audio contacts. For more
            information, see [Integrate Amazon Connect Contact Lens with external
            voice systems](https://docs.aws.amazon.com/connect/latest/adminguide/contact-lens-integration.html)
            in the _Amazon Connect Administrator Guide_.
      required:
      - InstanceId
      - Channel
      - InitiationMethod
    CreateContactResponse:
      type: object
      properties:
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact in this instance of Amazon Connect.
        ContactArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the created contact.
    CreateEmailAddressRequest:
      type: object
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the email address.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        EmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          description: The email address with the instance, in [^\s@]+@[^\s@]+\\.[^\s@]+
            format.
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/EmailAddressDisplayName'
          description: The display name of email address
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The tags used to organize, track, or control access for this
            resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.'
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
      required:
      - InstanceId
      - EmailAddress
    CreateEmailAddressResponse:
      type: object
      properties:
        EmailAddressId:
          allOf:
          - $ref: '#/components/schemas/EmailAddressId'
          description: The identifier of the email address.
        EmailAddressArn:
          allOf:
          - $ref: '#/components/schemas/EmailAddressArn'
          description: The Amazon Resource Name (ARN) of the email address.
    CreateEvaluationFormRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        Title:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormTitle'
          description: A title of the evaluation form.
        Description:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormDescription'
          description: The description of the evaluation form.
        Items:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormItemsList'
          description: Items that are part of the evaluation form. The total number
            of sections and questions must not exceed 100 each. Questions must be
            contained in a section.
        ScoringStrategy:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormScoringStrategy'
          description: A scoring strategy of the evaluation form.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
      required:
      - InstanceId
      - Title
      - Items
    CreateEvaluationFormResponse:
      type: object
      properties:
        EvaluationFormId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: The unique identifier for the evaluation form.
        EvaluationFormArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for the evaluation form resource.
      required:
      - EvaluationFormId
      - EvaluationFormArn
    CreateHoursOfOperationOverrideRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance.
        HoursOfOperationId:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationId'
          description: The identifier for the hours of operation
        Name:
          allOf:
          - $ref: '#/components/schemas/CommonHumanReadableName'
          description: The name of the hours of operation override.
        Description:
          allOf:
          - $ref: '#/components/schemas/CommonHumanReadableDescription'
          description: The description of the hours of operation override.
        Config:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationOverrideConfigList'
          description: 'Configuration information for the hours of operation override:
            day, start time, and end time.'
        EffectiveFrom:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationOverrideYearMonthDayDateFormat'
          description: The date from when the hours of operation override would be
            effective.
        EffectiveTill:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationOverrideYearMonthDayDateFormat'
          description: The date until when the hours of operation override would be
            effective.
      required:
      - InstanceId
      - HoursOfOperationId
      - Name
      - Config
      - EffectiveFrom
      - EffectiveTill
    CreateHoursOfOperationOverrideResponse:
      type: object
      properties:
        HoursOfOperationOverrideId:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationOverrideId'
          description: The identifier for the hours of operation override.
    CreateHoursOfOperationRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        Name:
          allOf:
          - $ref: '#/components/schemas/CommonNameLength127'
          description: The name of the hours of operation.
        Description:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationDescription'
          description: The description of the hours of operation.
        TimeZone:
          allOf:
          - $ref: '#/components/schemas/TimeZone'
          description: The time zone of the hours of operation.
        Config:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationConfigList'
          description: 'Configuration information for the hours of operation: day,
            start time, and end time.'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The tags used to organize, track, or control access for this
            resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.'
      required:
      - InstanceId
      - Name
      - TimeZone
      - Config
    CreateHoursOfOperationResponse:
      type: object
      properties:
        HoursOfOperationId:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationId'
          description: The identifier for the hours of operation.
        HoursOfOperationArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for the hours of operation.
    CreateInstanceRequest:
      type: object
      properties:
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: The idempotency token.
        IdentityManagementType:
          allOf:
          - $ref: '#/components/schemas/DirectoryType'
          description: The type of identity management for your Amazon Connect users.
        InstanceAlias:
          allOf:
          - $ref: '#/components/schemas/DirectoryAlias'
          description: The name for your instance.
        DirectoryId:
          allOf:
          - $ref: '#/components/schemas/DirectoryId'
          description: The identifier for the directory.
        InboundCallsEnabled:
          allOf:
          - $ref: '#/components/schemas/InboundCallsEnabled'
          description: Your contact center handles incoming contacts.
        OutboundCallsEnabled:
          allOf:
          - $ref: '#/components/schemas/OutboundCallsEnabled'
          description: Your contact center allows outbound calls.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The tags used to organize, track, or control access for this
            resource. For example, `{ "tags": {"key1":"value1", "key2":"value2"} }`.'
      required:
      - IdentityManagementType
      - InboundCallsEnabled
      - OutboundCallsEnabled
    CreateInstanceResponse:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier for the instance.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the instance.
    CreateIntegrationAssociationRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        IntegrationType:
          allOf:
          - $ref: '#/components/schemas/IntegrationType'
          description: The type of information to be ingested.
        IntegrationArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: 'The Amazon Resource Name (ARN) of the integration.


            When integrating with Amazon Web Services End User Messaging, the Amazon
            Connect and Amazon Web Services End User Messaging instances must be in
            the same account.'
        SourceApplicationUrl:
          allOf:
          - $ref: '#/components/schemas/URI'
          description: The URL for the external application. This field is only required
            for the EVENT integration type.
        SourceApplicationName:
          allOf:
          - $ref: '#/components/schemas/SourceApplicationName'
          description: The name of the external application. This field is only required
            for the EVENT integration type.
        SourceType:
          allOf:
          - $ref: '#/components/schemas/SourceType'
          description: The type of the data source. This field is only required for
            the EVENT integration type.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The tags used to organize, track, or control access for this
            resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.'
      required:
      - InstanceId
      - IntegrationType
      - IntegrationArn
    CreateIntegrationAssociationResponse:
      type: object
      properties:
        IntegrationAssociationId:
          allOf:
          - $ref: '#/components/schemas/IntegrationAssociationId'
          description: The identifier for the integration association.
        IntegrationAssociationArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for the association.
    CreateParticipantRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact in this instance of Amazon Connect.
            Only contacts in the CHAT channel are supported.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
        ParticipantDetails:
          allOf:
          - $ref: '#/components/schemas/ParticipantDetailsToAdd'
          description: 'Information identifying the participant.


            The only Valid value for `ParticipantRole` is `CUSTOM_BOT`.


            `DisplayName` is **Required**.'
      required:
      - InstanceId
      - ContactId
      - ParticipantDetails
    CreateParticipantResponse:
      type: object
      properties:
        ParticipantCredentials:
          allOf:
          - $ref: '#/components/schemas/ParticipantTokenCredentials'
          description: The token used by the chat participant to call `CreateParticipantConnection`.
            The participant token is valid for the lifetime of a chat participant.
        ParticipantId:
          allOf:
          - $ref: '#/components/schemas/ParticipantId'
          description: The identifier for a chat participant. The participantId for
            a chat participant is the same throughout the chat lifecycle.
    CreatePersistentContactAssociationRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        InitialContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: This is the contactId of the current contact that the `CreatePersistentContactAssociation`
            API is being called from.
        RehydrationType:
          allOf:
          - $ref: '#/components/schemas/RehydrationType'
          description: "The contactId chosen for rehydration depends on the type chosen.\n\
            \n  * `ENTIRE_PAST_SESSION`: Rehydrates a chat from the most recently\
            \ terminated past chat contact of the specified past ended chat session.\
            \ To use this type, provide the `initialContactId` of the past ended chat\
            \ session in the `sourceContactId` field. In this type, Amazon Connect\
            \ determines what the most recent chat contact on the past ended chat\
            \ session and uses it to start a persistent chat. \n\n  * `FROM_SEGMENT`:\
            \ Rehydrates a chat from the specified past chat contact provided in the\
            \ `sourceContactId` field. \n\nThe actual contactId used for rehydration\
            \ is provided in the response of this API.\n\nTo illustrate how to use\
            \ rehydration type, consider the following example: A customer starts\
            \ a chat session. Agent a1 accepts the chat and a conversation starts\
            \ between the customer and Agent a1. This first contact creates a contact\
            \ ID **C1**. Agent a1 then transfers the chat to Agent a2. This creates\
            \ another contact ID **C2**. At this point Agent a2 ends the chat. The\
            \ customer is forwarded to the disconnect flow for a post chat survey\
            \ that creates another contact ID **C3**. After the chat survey, the chat\
            \ session ends. Later, the customer returns and wants to resume their\
            \ past chat session. At this point, the customer can have following use\
            \ cases:\n\n  * **Use Case 1** : The customer wants to continue the past\
            \ chat session but they want to hide the post chat survey. For this they\
            \ will use the following configuration:\n\n    * **Configuration**\n\n\
            \      * SourceContactId = \"C2\"\n\n      * RehydrationType = \"FROM_SEGMENT\"\
            \n\n    * **Expected behavior**\n\n      * This starts a persistent chat\
            \ session from the specified past ended contact (C2). Transcripts of past\
            \ chat sessions C2 and C1 are accessible in the current persistent chat\
            \ session. Note that chat segment C3 is dropped from the persistent chat\
            \ session.\n\n  * **Use Case 2** : The customer wants to continue the\
            \ past chat session and see the transcript of the entire past engagement,\
            \ including the post chat survey. For this they will use the following\
            \ configuration:\n\n    * **Configuration**\n\n      * SourceContactId\
            \ = \"C1\"\n\n      * RehydrationType = \"ENTIRE_PAST_SESSION\"\n\n  \
            \  * **Expected behavior**\n\n      * This starts a persistent chat session\
            \ from the most recently ended chat contact (C3). Transcripts of past\
            \ chat sessions C3, C2 and C1 are accessible in the current persistent\
            \ chat session."
        SourceContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The contactId from which a persistent chat session must be
            started.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
      required:
      - InstanceId
      - InitialContactId
      - RehydrationType
      - SourceContactId
    CreatePersistentContactAssociationResponse:
      type: object
      properties:
        ContinuedFromContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The contactId from which a persistent chat session is started.
            This field is populated only for persistent chat.
    CreatePredefinedAttributeRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can find
            the instance ID in the Amazon Resource Name (ARN) of the instance.
        Name:
          allOf:
          - $ref: '#/components/schemas/PredefinedAttributeName'
          description: The name of the predefined attribute.
        Values:
          allOf:
          - $ref: '#/components/schemas/PredefinedAttributeValues'
          description: The values of the predefined attribute.
      required:
      - InstanceId
      - Name
      - Values
    CreatePromptRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        Name:
          allOf:
          - $ref: '#/components/schemas/CommonNameLength127'
          description: The name of the prompt.
        Description:
          allOf:
          - $ref: '#/components/schemas/PromptDescription'
          description: The description of the prompt.
        S3Uri:
          allOf:
          - $ref: '#/components/schemas/S3Uri'
          description: The URI for the S3 bucket where the prompt is stored. You can
            provide S3 pre-signed URLs returned by the [GetPromptFile](https://docs.aws.amazon.com/connect/latest/APIReference/API_GetPromptFile.html)
            API instead of providing S3 URIs.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The tags used to organize, track, or control access for this
            resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.'
      required:
      - InstanceId
      - Name
      - S3Uri
    CreatePromptResponse:
      type: object
      properties:
        PromptARN:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the prompt.
        PromptId:
          allOf:
          - $ref: '#/components/schemas/PromptId'
          description: A unique identifier for the prompt.
    CreatePushNotificationRegistrationRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
        PinpointAppArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the Pinpoint application.
        DeviceToken:
          allOf:
          - $ref: '#/components/schemas/DeviceToken'
          description: The push notification token issued by the Apple or Google gateways.
        DeviceType:
          allOf:
          - $ref: '#/components/schemas/DeviceType'
          description: The device type to use when sending the message.
        ContactConfiguration:
          allOf:
          - $ref: '#/components/schemas/ContactConfiguration'
          description: The contact configuration for push notification registration.
      required:
      - InstanceId
      - PinpointAppArn
      - DeviceToken
      - DeviceType
      - ContactConfiguration
    CreatePushNotificationRegistrationResponse:
      type: object
      properties:
        RegistrationId:
          allOf:
          - $ref: '#/components/schemas/RegistrationId'
          description: The identifier for the registration.
      required:
      - RegistrationId
    CreateQueueRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        Name:
          allOf:
          - $ref: '#/components/schemas/CommonNameLength127'
          description: The name of the queue.
        Description:
          allOf:
          - $ref: '#/components/schemas/QueueDescription'
          description: The description of the queue.
        OutboundCallerConfig:
          allOf:
          - $ref: '#/components/schemas/OutboundCallerConfig'
          description: The outbound caller ID name, number, and outbound whisper flow.
        OutboundEmailConfig:
          allOf:
          - $ref: '#/components/schemas/OutboundEmailConfig'
          description: The outbound email address ID for a specified queue.
        HoursOfOperationId:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationId'
          description: The identifier for the hours of operation.
        MaxContacts:
          allOf:
          - $ref: '#/components/schemas/QueueMaxContacts'
          description: The maximum number of contacts that can be in the queue before
            it is considered full.
        QuickConnectIds:
          allOf:
          - $ref: '#/components/schemas/QuickConnectsList'
          description: The quick connects available to agents who are working the
            queue.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The tags used to organize, track, or control access for this
            resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.'
      required:
      - InstanceId
      - Name
      - HoursOfOperationId
    CreateQueueResponse:
      type: object
      properties:
        QueueArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the queue.
        QueueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The identifier for the queue.
    CreateQuickConnectRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        Name:
          allOf:
          - $ref: '#/components/schemas/QuickConnectName'
          description: A unique name of the quick connect.
        Description:
          allOf:
          - $ref: '#/components/schemas/QuickConnectDescription'
          description: The description of the quick connect.
        QuickConnectConfig:
          allOf:
          - $ref: '#/components/schemas/QuickConnectConfig'
          description: Configuration settings for the quick connect.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The tags used to organize, track, or control access for this
            resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.'
      required:
      - InstanceId
      - Name
      - QuickConnectConfig
    CreateQuickConnectResponse:
      type: object
      properties:
        QuickConnectARN:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for the quick connect.
        QuickConnectId:
          allOf:
          - $ref: '#/components/schemas/QuickConnectId'
          description: The identifier for the quick connect.
    CreateRoutingProfileRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        Name:
          allOf:
          - $ref: '#/components/schemas/RoutingProfileName'
          description: The name of the routing profile. Must not be more than 127
            characters.
        Description:
          allOf:
          - $ref: '#/components/schemas/RoutingProfileDescription'
          description: Description of the routing profile. Must not be more than 250
            characters.
        DefaultOutboundQueueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The default outbound queue for the routing profile.
        QueueConfigs:
          allOf:
          - $ref: '#/components/schemas/RoutingProfileQueueConfigList'
          description: 'The inbound queues associated with the routing profile. If
            no queue is added, the agent can make only outbound calls.


            The limit of 10 array members applies to the maximum number of `RoutingProfileQueueConfig`
            objects that can be passed during a CreateRoutingProfile API request.
            It is different from the quota of 50 queues per routing profile per instance
            that is listed in [Amazon Connect service quotas](https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html).'
        MediaConcurrencies:
          allOf:
          - $ref: '#/components/schemas/MediaConcurrencies'
          description: The channels that agents can handle in the Contact Control
            Panel (CCP) for this routing profile.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The tags used to organize, track, or control access for this
            resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.'
        AgentAvailabilityTimer:
          allOf:
          - $ref: '#/components/schemas/AgentAvailabilityTimer'
          description: Whether agents with this routing profile will have their routing
            order calculated based on _longest idle time_ or _time since their last
            inbound contact_.
      required:
      - InstanceId
      - Name
      - Description
      - DefaultOutboundQueueId
      - MediaConcurrencies
    CreateRoutingProfileResponse:
      type: object
      properties:
        RoutingProfileArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the routing profile.
        RoutingProfileId:
          allOf:
          - $ref: '#/components/schemas/RoutingProfileId'
          description: The identifier of the routing profile.
    CreateRuleRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        Name:
          allOf:
          - $ref: '#/components/schemas/RuleName'
          description: A unique name for the rule.
        TriggerEventSource:
          allOf:
          - $ref: '#/components/schemas/RuleTriggerEventSource'
          description: The event source to trigger the rule.
        Function:
          allOf:
          - $ref: '#/components/schemas/RuleFunction'
          description: The conditions of the rule.
        Actions:
          allOf:
          - $ref: '#/components/schemas/RuleActions'
          description: A list of actions to be run when the rule is triggered.
        PublishStatus:
          allOf:
          - $ref: '#/components/schemas/RulePublishStatus'
          description: The publish status of the rule.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
      required:
      - InstanceId
      - Name
      - TriggerEventSource
      - Function
      - Actions
      - PublishStatus
    CreateRuleResponse:
      type: object
      properties:
        RuleArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the rule.
        RuleId:
          allOf:
          - $ref: '#/components/schemas/RuleId'
          description: A unique identifier for the rule.
      required:
      - RuleArn
      - RuleId
    CreateSecurityProfileName:
      type: string
      pattern: ^[ a-zA-Z0-9_@-]+$
      minLength: 1
      maxLength: 127
    CreateSecurityProfileRequest:
      type: object
      properties:
        SecurityProfileName:
          allOf:
          - $ref: '#/components/schemas/CreateSecurityProfileName'
          description: The name of the security profile.
        Description:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileDescription'
          description: The description of the security profile.
        Permissions:
          allOf:
          - $ref: '#/components/schemas/PermissionsList'
          description: Permissions assigned to the security profile. For a list of
            valid permissions, see [List of security profile permissions](https://docs.aws.amazon.com/connect/latest/adminguide/security-profile-list.html).
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The tags used to organize, track, or control access for this
            resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.'
        AllowedAccessControlTags:
          allOf:
          - $ref: '#/components/schemas/AllowedAccessControlTags'
          description: The list of tags that a security profile uses to restrict access
            to resources in Amazon Connect.
        TagRestrictedResources:
          allOf:
          - $ref: '#/components/schemas/TagRestrictedResourceList'
          description: The list of resources that a security profile applies tag restrictions
            to in Amazon Connect. For a list of Amazon Connect resources that you
            can tag, see [Add tags to resources in Amazon Connect](https://docs.aws.amazon.com/connect/latest/adminguide/tagging.html)
            in the _Amazon Connect Administrator Guide_.
        Applications:
          allOf:
          - $ref: '#/components/schemas/Applications'
          description: A list of third-party applications that the security profile
            will give access to.
        HierarchyRestrictedResources:
          allOf:
          - $ref: '#/components/schemas/HierarchyRestrictedResourceList'
          description: 'The list of resources that a security profile applies hierarchy
            restrictions to in Amazon Connect. Following are acceptable ResourceNames:
            `User`.'
        AllowedAccessControlHierarchyGroupId:
          allOf:
          - $ref: '#/components/schemas/HierarchyGroupId'
          description: The identifier of the hierarchy group that a security profile
            uses to restrict access to resources in Amazon Connect.
      required:
      - SecurityProfileName
      - InstanceId
    CreateSecurityProfileResponse:
      type: object
      properties:
        SecurityProfileId:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileId'
          description: The identifier for the security profle.
        SecurityProfileArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for the security profile.
    CreateTaskTemplateRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        Name:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateName'
          description: The name of the task template.
        Description:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateDescription'
          description: The description of the task template.
        ContactFlowId:
          allOf:
          - $ref: '#/components/schemas/ContactFlowId'
          description: The identifier of the flow that runs by default when a task
            is created by referencing this template.
        SelfAssignFlowId:
          allOf:
          - $ref: '#/components/schemas/ContactFlowId'
          description: The ContactFlowId for the flow that will be run if this template
            is used to create a self-assigned task.
        Constraints:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateConstraints'
          description: Constraints that are applicable to the fields listed.
        Defaults:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateDefaults'
          description: The default values for fields when a task is created by referencing
            this template.
        Status:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateStatus'
          description: Marks a template as `ACTIVE` or `INACTIVE` for a task to refer
            to it. Tasks can only be created from `ACTIVE` templates. If a template
            is marked as `INACTIVE`, then a task that refers to this template cannot
            be created.
        Fields:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateFields'
          description: Fields that are part of the template.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
      required:
      - InstanceId
      - Name
      - Fields
    CreateTaskTemplateResponse:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateId'
          description: The identifier of the task template resource.
        Arn:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateArn'
          description: The Amazon Resource Name (ARN) for the task template resource.
      required:
      - Id
      - Arn
    CreateTrafficDistributionGroupRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name128'
          description: The name for the traffic distribution group.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description250'
          description: A description for the traffic distribution group.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceIdOrArn'
          description: The identifier of the Amazon Connect instance that has been
            replicated. You can find the `instanceId` in the ARN of the instance.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The tags used to organize, track, or control access for this
            resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.'
      required:
      - Name
      - InstanceId
    CreateTrafficDistributionGroupResponse:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/TrafficDistributionGroupId'
          description: The identifier of the traffic distribution group. This can
            be the ID or the ARN of the traffic distribution group.
        Arn:
          allOf:
          - $ref: '#/components/schemas/TrafficDistributionGroupArn'
          description: The Amazon Resource Name (ARN) of the traffic distribution
            group.
    CreateUseCaseRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        IntegrationAssociationId:
          allOf:
          - $ref: '#/components/schemas/IntegrationAssociationId'
          description: The identifier for the integration association.
        UseCaseType:
          allOf:
          - $ref: '#/components/schemas/UseCaseType'
          description: The type of use case to associate to the integration association.
            Each integration association can have only one of each use case type.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The tags used to organize, track, or control access for this
            resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.'
      required:
      - InstanceId
      - IntegrationAssociationId
      - UseCaseType
    CreateUseCaseResponse:
      type: object
      properties:
        UseCaseId:
          allOf:
          - $ref: '#/components/schemas/UseCaseId'
          description: The identifier of the use case.
        UseCaseArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for the use case.
    CreateUserHierarchyGroupRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/HierarchyGroupName'
          description: The name of the user hierarchy group. Must not be more than
            100 characters.
        ParentGroupId:
          allOf:
          - $ref: '#/components/schemas/HierarchyGroupId'
          description: The identifier for the parent hierarchy group. The user hierarchy
            is created at level one if the parent group ID is null.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The tags used to organize, track, or control access for this
            resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.'
      required:
      - Name
      - InstanceId
    CreateUserHierarchyGroupResponse:
      type: object
      properties:
        HierarchyGroupId:
          allOf:
          - $ref: '#/components/schemas/HierarchyGroupId'
          description: The identifier of the hierarchy group.
        HierarchyGroupArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the hierarchy group.
    CreateUserRequest:
      type: object
      properties:
        Username:
          allOf:
          - $ref: '#/components/schemas/AgentUsername'
          description: "The user name for the account. For instances not using SAML\
            \ for identity management, the user name can include up to 20 characters.\
            \ If you are using SAML for identity management, the user name can include\
            \ up to 64 characters from [a-zA-Z0-9_-.\\@]+.\n\nUsername can include\
            \ @ only if used in an email format. For example:\n\n  * Correct: testuser\n\
            \n  * Correct: testuser@example.com\n\n  * Incorrect: testuser@example"
        Password:
          allOf:
          - $ref: '#/components/schemas/Password'
          description: The password for the user account. A password is required if
            you are using Amazon Connect for identity management. Otherwise, it is
            an error to include a password.
        IdentityInfo:
          allOf:
          - $ref: '#/components/schemas/UserIdentityInfo'
          description: The information about the identity of the user.
        PhoneConfig:
          allOf:
          - $ref: '#/components/schemas/UserPhoneConfig'
          description: The phone settings for the user.
        DirectoryUserId:
          allOf:
          - $ref: '#/components/schemas/DirectoryUserId'
          description: 'The identifier of the user account in the directory used for
            identity management. If Amazon Connect cannot access the directory, you
            can specify this identifier to authenticate users. If you include the
            identifier, we assume that Amazon Connect cannot access the directory.
            Otherwise, the identity information is used to authenticate users from
            your directory.


            This parameter is required if you are using an existing directory for
            identity management in Amazon Connect when Amazon Connect cannot access
            your directory to authenticate users. If you are using SAML for identity
            management and include this parameter, an error is returned.'
        SecurityProfileIds:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileIds'
          description: The identifier of the security profile for the user.
        RoutingProfileId:
          allOf:
          - $ref: '#/components/schemas/RoutingProfileId'
          description: The identifier of the routing profile for the user.
        HierarchyGroupId:
          allOf:
          - $ref: '#/components/schemas/HierarchyGroupId'
          description: The identifier of the hierarchy group for the user.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The tags used to organize, track, or control access for this
            resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.'
      required:
      - Username
      - PhoneConfig
      - SecurityProfileIds
      - RoutingProfileId
      - InstanceId
    CreateUserResponse:
      type: object
      properties:
        UserId:
          allOf:
          - $ref: '#/components/schemas/UserId'
          description: The identifier of the user account.
        UserArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the user account.
    CreateViewRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/ViewsInstanceId'
          description: The identifier of the Amazon Connect instance. You can find
            the instanceId in the ARN of the instance.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ViewsClientToken'
          description: A unique Id for each create view request to avoid duplicate
            view creation. For example, the view is idempotent ClientToken is provided.
        Status:
          allOf:
          - $ref: '#/components/schemas/ViewStatus'
          description: Indicates the view status as either `SAVED` or `PUBLISHED`.
            The `PUBLISHED` status will initiate validation on the content.
        Content:
          allOf:
          - $ref: '#/components/schemas/ViewInputContent'
          description: 'View content containing all content necessary to render a
            view except for runtime input data.


            The total uncompressed content has a maximum file size of 400kB.'
        Description:
          allOf:
          - $ref: '#/components/schemas/ViewDescription'
          description: The description of the view.
        Name:
          allOf:
          - $ref: '#/components/schemas/ViewName'
          description: The name of the view.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The tags associated with the view resource (not specific to
            view version).These tags can be used to organize, track, or control access
            for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"}
            }.'
      required:
      - InstanceId
      - Status
      - Content
      - Name
    CreateViewResponse:
      type: object
      properties:
        View:
          allOf:
          - $ref: '#/components/schemas/View'
          description: A view resource object. Contains metadata and content necessary
            to render the view.
    CreateViewVersionRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/ViewsInstanceId'
          description: The identifier of the Amazon Connect instance. You can find
            the instanceId in the ARN of the instance.
        ViewId:
          allOf:
          - $ref: '#/components/schemas/ViewId'
          description: The identifier of the view. Both `ViewArn` and `ViewId` can
            be used.
        VersionDescription:
          allOf:
          - $ref: '#/components/schemas/ViewDescription'
          description: The description for the version being published.
        ViewContentSha256:
          allOf:
          - $ref: '#/components/schemas/ViewContentSha256'
          description: Indicates the checksum value of the latest published view content.
      required:
      - InstanceId
      - ViewId
    CreateViewVersionResponse:
      type: object
      properties:
        View:
          allOf:
          - $ref: '#/components/schemas/View'
          description: All view data is contained within the View object.
    CreateVocabularyRequest:
      type: object
      properties:
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
            If a create request is received more than once with same client token,
            subsequent requests return the previous response without creating a vocabulary
            again.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        VocabularyName:
          allOf:
          - $ref: '#/components/schemas/VocabularyName'
          description: A unique name of the custom vocabulary.
        LanguageCode:
          allOf:
          - $ref: '#/components/schemas/VocabularyLanguageCode'
          description: The language code of the vocabulary entries. For a list of
            languages and their corresponding language codes, see [What is Amazon
            Transcribe?](https://docs.aws.amazon.com/transcribe/latest/dg/transcribe-whatis.html)
        Content:
          allOf:
          - $ref: '#/components/schemas/VocabularyContent'
          description: The content of the custom vocabulary in plain-text format with
            a table of values. Each row in the table represents a word or a phrase,
            described with `Phrase`, `IPA`, `SoundsLike`, and `DisplayAs` fields.
            Separate the fields with TAB characters. The size limit is 50KB. For more
            information, see [Create a custom vocabulary using a table](https://docs.aws.amazon.com/transcribe/latest/dg/custom-vocabulary.html#create-vocabulary-table).
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The tags used to organize, track, or control access for this
            resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.'
      required:
      - InstanceId
      - VocabularyName
      - LanguageCode
      - Content
    CreateVocabularyResponse:
      type: object
      properties:
        VocabularyArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the custom vocabulary.
        VocabularyId:
          allOf:
          - $ref: '#/components/schemas/VocabularyId'
          description: The identifier of the custom vocabulary.
        State:
          allOf:
          - $ref: '#/components/schemas/VocabularyState'
          description: The current state of the custom vocabulary.
      required:
      - VocabularyArn
      - VocabularyId
      - State
    CreatedByInfo:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/ARN'
        description: |-
          An agent ARN representing a [connect user](https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonconnect.html#amazonconnect-resources-for-iam-policies).
      - allOf:
        - $ref: '#/components/schemas/ARN'
        description: |-
          STS or IAM ARN representing the identity of API Caller. SDK users cannot populate this and this value is calculated automatically if `ConnectUserArn` is not provided.
      description: |-
        Information on the identity that created the file.
    Credentials:
      type: object
      properties:
        AccessToken:
          allOf:
          - $ref: '#/components/schemas/SecurityToken'
          description: An access token generated for a federated user to access Amazon
            Connect.
        AccessTokenExpiration:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: A token generated with an expiration time for the session a
            user is logged in to Amazon Connect.
        RefreshToken:
          allOf:
          - $ref: '#/components/schemas/SecurityToken'
          description: Renews a token generated for a user to access the Amazon Connect
            instance.
        RefreshTokenExpiration:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Renews the expiration timer for a generated token.
      description: Contains credentials to use for federation.
    CrossChannelBehavior:
      type: object
      properties:
        BehaviorType:
          allOf:
          - $ref: '#/components/schemas/BehaviorType'
          description: Specifies the other channels that can be routed to an agent
            handling their current channel.
      required:
      - BehaviorType
      description: Defines the cross-channel routing behavior that allows an agent
        working on a contact in one channel to be offered a contact from a different
        channel.
    CurrentMetric:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/CurrentMetricName'
          description: The name of the metric.
        Unit:
          allOf:
          - $ref: '#/components/schemas/Unit'
          description: The unit for the metric.
      description: Contains information about a real-time metric. For a description
        of each metric, see [Real-time Metrics Definitions](https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html)
        in the _Amazon Connect Administrator Guide_.
    CurrentMetricData:
      type: object
      properties:
        Metric:
          allOf:
          - $ref: '#/components/schemas/CurrentMetric'
          description: Information about the metric.
        Value:
          allOf:
          - $ref: '#/components/schemas/Value'
          description: The value of the metric.
      description: Contains the data for a real-time metric.
    CurrentMetricDataCollections:
      type: array
      items:
        $ref: '#/components/schemas/CurrentMetricData'
    CurrentMetricName:
      type: string
      enum:
      - AGENTS_ONLINE
      - AGENTS_AVAILABLE
      - AGENTS_ON_CALL
      - AGENTS_NON_PRODUCTIVE
      - AGENTS_AFTER_CONTACT_WORK
      - AGENTS_ERROR
      - AGENTS_STAFFED
      - CONTACTS_IN_QUEUE
      - OLDEST_CONTACT_AGE
      - CONTACTS_SCHEDULED
      - AGENTS_ON_CONTACT
      - SLOTS_ACTIVE
      - SLOTS_AVAILABLE
      description: <p>The current metric names.</p>
    CurrentMetricResult:
      type: object
      properties:
        Dimensions:
          allOf:
          - $ref: '#/components/schemas/Dimensions'
          description: The dimensions for the metrics.
        Collections:
          allOf:
          - $ref: '#/components/schemas/CurrentMetricDataCollections'
          description: The set of metrics.
      description: Contains information about a set of real-time metrics.
    CurrentMetricResults:
      type: array
      items:
        $ref: '#/components/schemas/CurrentMetricResult'
    CurrentMetricSortCriteria:
      type: object
      properties:
        SortByMetric:
          $ref: '#/components/schemas/CurrentMetricName'
        SortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          description: The way to sort.
      description: The way to sort the resulting response based on metrics. By default
        resources are sorted based on `AGENTS_ONLINE`, `DESCENDING`. The metric collection
        is sorted based on the input metrics.
    CurrentMetricSortCriteriaMaxOne:
      type: array
      items:
        $ref: '#/components/schemas/CurrentMetricSortCriteria'
    CurrentMetrics:
      type: array
      items:
        $ref: '#/components/schemas/CurrentMetric'
    Customer:
      type: object
      properties:
        DeviceInfo:
          allOf:
          - $ref: '#/components/schemas/DeviceInfo'
          description: Information regarding Customer’s device.
        Capabilities:
          $ref: '#/components/schemas/ParticipantCapabilities'
      description: Information about the Customer on the contact.
    CustomerId:
      type: string
      minLength: 0
      maxLength: 128
    CustomerIdNonEmpty:
      type: string
      minLength: 1
      maxLength: 128
    CustomerProfileAttributesSerialized:
      type: string
    CustomerQualityMetrics:
      type: object
      properties:
        Audio:
          allOf:
          - $ref: '#/components/schemas/AudioQualityMetricsInfo'
          description: Information about the audio quality of the Customer
      description: Information about the quality of the Customer's media connection
    CustomerVoiceActivity:
      type: object
      properties:
        GreetingStartTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Timestamp that measures the beginning of the customer greeting
            from an outbound voice call.
        GreetingEndTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Timestamp that measures the end of the customer greeting from
            an outbound voice call.
      description: Information about customer’s voice activity.
    DataSetId:
      type: string
      minLength: 1
      maxLength: 255
    DataSetIds:
      type: array
      items:
        $ref: '#/components/schemas/DataSetId'
    DateComparisonType:
      type: string
      enum:
      - GREATER_THAN
      - LESS_THAN
      - GREATER_THAN_OR_EQUAL_TO
      - LESS_THAN_OR_EQUAL_TO
      - EQUAL_TO
    DateCondition:
      type: object
      properties:
        FieldName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: An object to specify the hours of operation override date field.
        Value:
          allOf:
          - $ref: '#/components/schemas/DateYearMonthDayFormat'
          description: An object to specify the hours of operation override date value.
        ComparisonType:
          allOf:
          - $ref: '#/components/schemas/DateComparisonType'
          description: An object to specify the hours of operation override date condition
            `comparisonType`.
      description: An object to specify the hours of operation override date condition.
    DateReference:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ReferenceKey'
          description: Identifier of the date reference.
        Value:
          allOf:
          - $ref: '#/components/schemas/ReferenceValue'
          description: A valid date.
      description: Information about a reference when the `referenceType` is `DATE`.
        Otherwise, null.
    DateYearMonthDayFormat:
      type: string
      pattern: ^\d{4}-\d{2}-\d{2}$
    DeactivateEvaluationFormRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        EvaluationFormId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: The unique identifier for the evaluation form.
        EvaluationFormVersion:
          allOf:
          - $ref: '#/components/schemas/VersionNumber'
          description: A version of the evaluation form. If the version property is
            not provided, the latest version of the evaluation form is deactivated.
      required:
      - InstanceId
      - EvaluationFormId
      - EvaluationFormVersion
    DeactivateEvaluationFormResponse:
      type: object
      properties:
        EvaluationFormId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: The unique identifier for the evaluation form.
        EvaluationFormArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for the evaluation form resource.
        EvaluationFormVersion:
          allOf:
          - $ref: '#/components/schemas/VersionNumber'
          description: The version of the deactivated evaluation form resource.
      required:
      - EvaluationFormId
      - EvaluationFormArn
      - EvaluationFormVersion
    DefaultVocabulary:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        LanguageCode:
          allOf:
          - $ref: '#/components/schemas/VocabularyLanguageCode'
          description: The language code of the vocabulary entries. For a list of
            languages and their corresponding language codes, see [What is Amazon
            Transcribe?](https://docs.aws.amazon.com/transcribe/latest/dg/transcribe-whatis.html)
        VocabularyId:
          allOf:
          - $ref: '#/components/schemas/VocabularyId'
          description: The identifier of the custom vocabulary.
        VocabularyName:
          allOf:
          - $ref: '#/components/schemas/VocabularyName'
          description: A unique name of the custom vocabulary.
      required:
      - InstanceId
      - LanguageCode
      - VocabularyId
      - VocabularyName
      description: Contains information about a default vocabulary.
    DefaultVocabularyList:
      type: array
      items:
        $ref: '#/components/schemas/DefaultVocabulary'
    Delay:
      type: integer
      default: 0
      minimum: 0
      maximum: 9999
    DeleteAttachedFileRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The unique identifier of the Connect instance.
        FileId:
          allOf:
          - $ref: '#/components/schemas/FileId'
          description: The unique identifier of the attached file resource.
        AssociatedResourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: 'The resource to which the attached file is (being) uploaded
            to. [Cases](https://docs.aws.amazon.com/connect/latest/APIReference/API_connect-cases_CreateCase.html)
            are the only current supported resource.


            This value must be a valid ARN.'
      required:
      - InstanceId
      - FileId
      - AssociatedResourceArn
      description: Request to DeleteAttachedFile API
    DeleteAttachedFileResponse:
      type: object
      properties: {}
      description: Response from DeleteAttachedFile API
    DeleteContactEvaluationRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        EvaluationId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: A unique identifier for the contact evaluation.
      required:
      - InstanceId
      - EvaluationId
    DeleteContactFlowModuleRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        ContactFlowModuleId:
          allOf:
          - $ref: '#/components/schemas/ContactFlowModuleId'
          description: The identifier of the flow module.
      required:
      - InstanceId
      - ContactFlowModuleId
    DeleteContactFlowModuleResponse:
      type: object
      properties: {}
    DeleteContactFlowRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        ContactFlowId:
          allOf:
          - $ref: '#/components/schemas/ContactFlowId'
          description: The identifier of the flow.
      required:
      - InstanceId
      - ContactFlowId
    DeleteContactFlowResponse:
      type: object
      properties: {}
    DeleteContactFlowVersionRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        ContactFlowId:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The identifier of the flow.
        ContactFlowVersion:
          allOf:
          - $ref: '#/components/schemas/ResourceVersion'
          description: The identifier of the flow version.
      required:
      - InstanceId
      - ContactFlowId
      - ContactFlowVersion
    DeleteContactFlowVersionResponse:
      type: object
      properties: {}
    DeleteEmailAddressRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        EmailAddressId:
          allOf:
          - $ref: '#/components/schemas/EmailAddressId'
          description: The identifier of the email address.
      required:
      - InstanceId
      - EmailAddressId
    DeleteEmailAddressResponse:
      type: object
      properties: {}
    DeleteEvaluationFormRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        EvaluationFormId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: The unique identifier for the evaluation form.
        EvaluationFormVersion:
          allOf:
          - $ref: '#/components/schemas/VersionNumber'
          description: The unique identifier for the evaluation form.
      required:
      - InstanceId
      - EvaluationFormId
    DeleteHoursOfOperationOverrideRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance.
        HoursOfOperationId:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationId'
          description: The identifier for the hours of operation.
        HoursOfOperationOverrideId:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationOverrideId'
          description: The identifier for the hours of operation override.
      required:
      - InstanceId
      - HoursOfOperationId
      - HoursOfOperationOverrideId
    DeleteHoursOfOperationRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        HoursOfOperationId:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationId'
          description: The identifier for the hours of operation.
      required:
      - InstanceId
      - HoursOfOperationId
    DeleteInstanceRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
      required:
      - InstanceId
    DeleteIntegrationAssociationRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        IntegrationAssociationId:
          allOf:
          - $ref: '#/components/schemas/IntegrationAssociationId'
          description: The identifier for the integration association.
      required:
      - InstanceId
      - IntegrationAssociationId
    DeletePredefinedAttributeRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can find
            the instance ID in the Amazon Resource Name (ARN) of the instance.
        Name:
          allOf:
          - $ref: '#/components/schemas/PredefinedAttributeName'
          description: The name of the predefined attribute.
      required:
      - InstanceId
      - Name
    DeletePromptRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        PromptId:
          allOf:
          - $ref: '#/components/schemas/PromptId'
          description: A unique identifier for the prompt.
      required:
      - InstanceId
      - PromptId
    DeletePushNotificationRegistrationRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        RegistrationId:
          allOf:
          - $ref: '#/components/schemas/RegistrationId'
          description: The identifier for the registration.
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact within the Amazon Connect instance.
      required:
      - InstanceId
      - RegistrationId
      - ContactId
    DeletePushNotificationRegistrationResponse:
      type: object
      properties: {}
    DeleteQueueRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        QueueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The identifier for the queue.
      required:
      - InstanceId
      - QueueId
    DeleteQuickConnectRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        QuickConnectId:
          allOf:
          - $ref: '#/components/schemas/QuickConnectId'
          description: The identifier for the quick connect.
      required:
      - InstanceId
      - QuickConnectId
    DeleteRoutingProfileRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        RoutingProfileId:
          allOf:
          - $ref: '#/components/schemas/RoutingProfileId'
          description: The identifier of the routing profile.
      required:
      - InstanceId
      - RoutingProfileId
    DeleteRuleRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        RuleId:
          allOf:
          - $ref: '#/components/schemas/RuleId'
          description: A unique identifier for the rule.
      required:
      - InstanceId
      - RuleId
    DeleteSecurityProfileRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        SecurityProfileId:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileId'
          description: The identifier for the security profle.
      required:
      - InstanceId
      - SecurityProfileId
    DeleteTaskTemplateRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        TaskTemplateId:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateId'
          description: A unique identifier for the task template.
      required:
      - InstanceId
      - TaskTemplateId
    DeleteTaskTemplateResponse:
      type: object
      properties: {}
    DeleteTrafficDistributionGroupRequest:
      type: object
      properties:
        TrafficDistributionGroupId:
          allOf:
          - $ref: '#/components/schemas/TrafficDistributionGroupIdOrArn'
          description: The identifier of the traffic distribution group. This can
            be the ID or the ARN of the traffic distribution group.
      required:
      - TrafficDistributionGroupId
    DeleteTrafficDistributionGroupResponse:
      type: object
      properties: {}
    DeleteUseCaseRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        IntegrationAssociationId:
          allOf:
          - $ref: '#/components/schemas/IntegrationAssociationId'
          description: The identifier for the integration association.
        UseCaseId:
          allOf:
          - $ref: '#/components/schemas/UseCaseId'
          description: The identifier for the use case.
      required:
      - InstanceId
      - IntegrationAssociationId
      - UseCaseId
    DeleteUserHierarchyGroupRequest:
      type: object
      properties:
        HierarchyGroupId:
          allOf:
          - $ref: '#/components/schemas/HierarchyGroupId'
          description: The identifier of the hierarchy group.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
      required:
      - HierarchyGroupId
      - InstanceId
    DeleteUserRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        UserId:
          allOf:
          - $ref: '#/components/schemas/UserId'
          description: The identifier of the user.
      required:
      - InstanceId
      - UserId
    DeleteViewRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/ViewsInstanceId'
          description: The identifier of the Amazon Connect instance. You can find
            the instanceId in the ARN of the instance.
        ViewId:
          allOf:
          - $ref: '#/components/schemas/ViewId'
          description: The identifier of the view. Both `ViewArn` and `ViewId` can
            be used.
      required:
      - InstanceId
      - ViewId
    DeleteViewResponse:
      type: object
      properties: {}
    DeleteViewVersionRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/ViewsInstanceId'
          description: The identifier of the Amazon Connect instance. You can find
            the instanceId in the ARN of the instance.
        ViewId:
          allOf:
          - $ref: '#/components/schemas/ViewId'
          description: The identifier of the view. Both `ViewArn` and `ViewId` can
            be used.
        ViewVersion:
          allOf:
          - $ref: '#/components/schemas/ViewVersion'
          description: The version number of the view.
      required:
      - InstanceId
      - ViewId
      - ViewVersion
    DeleteViewVersionResponse:
      type: object
      properties: {}
    DeleteVocabularyRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        VocabularyId:
          allOf:
          - $ref: '#/components/schemas/VocabularyId'
          description: The identifier of the custom vocabulary.
      required:
      - InstanceId
      - VocabularyId
    DeleteVocabularyResponse:
      type: object
      properties:
        VocabularyArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the custom vocabulary.
        VocabularyId:
          allOf:
          - $ref: '#/components/schemas/VocabularyId'
          description: The identifier of the custom vocabulary.
        State:
          allOf:
          - $ref: '#/components/schemas/VocabularyState'
          description: The current state of the custom vocabulary.
      required:
      - VocabularyArn
      - VocabularyId
      - State
    DescribeAgentStatusRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        AgentStatusId:
          allOf:
          - $ref: '#/components/schemas/AgentStatusId'
          description: The identifier for the agent status.
      required:
      - InstanceId
      - AgentStatusId
    DescribeAgentStatusResponse:
      type: object
      properties:
        AgentStatus:
          allOf:
          - $ref: '#/components/schemas/AgentStatus'
          description: The agent status.
    DescribeAuthenticationProfileRequest:
      type: object
      properties:
        AuthenticationProfileId:
          allOf:
          - $ref: '#/components/schemas/AuthenticationProfileId'
          description: A unique identifier for the authentication profile.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
      required:
      - AuthenticationProfileId
      - InstanceId
    DescribeAuthenticationProfileResponse:
      type: object
      properties:
        AuthenticationProfile:
          allOf:
          - $ref: '#/components/schemas/AuthenticationProfile'
          description: The authentication profile object being described.
    DescribeContactEvaluationRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        EvaluationId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: A unique identifier for the contact evaluation.
      required:
      - InstanceId
      - EvaluationId
    DescribeContactEvaluationResponse:
      type: object
      properties:
        Evaluation:
          allOf:
          - $ref: '#/components/schemas/Evaluation'
          description: Information about the evaluation form completed for a specific
            contact.
        EvaluationForm:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormContent'
          description: Information about the evaluation form.
      required:
      - Evaluation
      - EvaluationForm
    DescribeContactFlowModuleRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        ContactFlowModuleId:
          allOf:
          - $ref: '#/components/schemas/ContactFlowModuleId'
          description: The identifier of the flow module.
      required:
      - InstanceId
      - ContactFlowModuleId
    DescribeContactFlowModuleResponse:
      type: object
      properties:
        ContactFlowModule:
          allOf:
          - $ref: '#/components/schemas/ContactFlowModule'
          description: Information about the flow module.
    DescribeContactFlowRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance.
        ContactFlowId:
          allOf:
          - $ref: '#/components/schemas/ContactFlowId'
          description: The identifier of the flow.
      required:
      - InstanceId
      - ContactFlowId
    DescribeContactFlowResponse:
      type: object
      properties:
        ContactFlow:
          allOf:
          - $ref: '#/components/schemas/ContactFlow'
          description: Information about the flow.
    DescribeContactRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact.
      required:
      - InstanceId
      - ContactId
    DescribeContactResponse:
      type: object
      properties:
        Contact:
          allOf:
          - $ref: '#/components/schemas/Contact'
          description: Information about the contact.
    DescribeEmailAddressRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        EmailAddressId:
          allOf:
          - $ref: '#/components/schemas/EmailAddressId'
          description: The identifier of the email address.
      required:
      - InstanceId
      - EmailAddressId
    DescribeEmailAddressResponse:
      type: object
      properties:
        EmailAddressId:
          allOf:
          - $ref: '#/components/schemas/EmailAddressId'
          description: The identifier of the email address.
        EmailAddressArn:
          allOf:
          - $ref: '#/components/schemas/EmailAddressArn'
          description: The Amazon Resource Name (ARN) of the email address.
        EmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          description: The email address with the instance, in [^\s@]+@[^\s@]+\\.[^\s@]+
            format.
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/EmailAddressDisplayName'
          description: The display name of email address
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the email address.
        CreateTimestamp:
          allOf:
          - $ref: '#/components/schemas/ISO8601Datetime'
          description: The email address creation timestamp in ISO 8601 Datetime.
        ModifiedTimestamp:
          allOf:
          - $ref: '#/components/schemas/ISO8601Datetime'
          description: The email address last modification timestamp in ISO 8601 Datetime.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The tags used to organize, track, or control access for this
            resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.'
    DescribeEvaluationFormRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        EvaluationFormId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: A unique identifier for the contact evaluation.
        EvaluationFormVersion:
          allOf:
          - $ref: '#/components/schemas/VersionNumber'
          description: A version of the evaluation form.
      required:
      - InstanceId
      - EvaluationFormId
    DescribeEvaluationFormResponse:
      type: object
      properties:
        EvaluationForm:
          allOf:
          - $ref: '#/components/schemas/EvaluationForm'
          description: Information about the evaluation form.
      required:
      - EvaluationForm
    DescribeHoursOfOperationOverrideRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance.
        HoursOfOperationId:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationId'
          description: The identifier for the hours of operation.
        HoursOfOperationOverrideId:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationOverrideId'
          description: The identifier for the hours of operation override.
      required:
      - InstanceId
      - HoursOfOperationId
      - HoursOfOperationOverrideId
    DescribeHoursOfOperationOverrideResponse:
      type: object
      properties:
        HoursOfOperationOverride:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationOverride'
          description: Information about the hours of operations override.
    DescribeHoursOfOperationRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        HoursOfOperationId:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationId'
          description: The identifier for the hours of operation.
      required:
      - InstanceId
      - HoursOfOperationId
    DescribeHoursOfOperationResponse:
      type: object
      properties:
        HoursOfOperation:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperation'
          description: The hours of operation.
    DescribeInstanceAttributeRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        AttributeType:
          allOf:
          - $ref: '#/components/schemas/InstanceAttributeType'
          description: The type of attribute.
      required:
      - InstanceId
      - AttributeType
    DescribeInstanceAttributeResponse:
      type: object
      properties:
        Attribute:
          allOf:
          - $ref: '#/components/schemas/Attribute'
          description: The type of attribute.
    DescribeInstanceRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
      required:
      - InstanceId
    DescribeInstanceResponse:
      type: object
      properties:
        Instance:
          allOf:
          - $ref: '#/components/schemas/Instance'
          description: The name of the instance.
        ReplicationConfiguration:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfiguration'
          description: Status information about the replication process. This field
            is included only when you are using the [ReplicateInstance](https://docs.aws.amazon.com/connect/latest/APIReference/API_ReplicateInstance.html)
            API to replicate an Amazon Connect instance across Amazon Web Services
            Regions. For information about replicating Amazon Connect instances, see
            [Create a replica of your existing Amazon Connect instance](https://docs.aws.amazon.com/connect/latest/adminguide/create-replica-connect-instance.html)
            in the _Amazon Connect Administrator Guide_.
    DescribeInstanceStorageConfigRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        AssociationId:
          allOf:
          - $ref: '#/components/schemas/AssociationId'
          description: The existing association identifier that uniquely identifies
            the resource type and storage config for the given instance ID.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/InstanceStorageResourceType'
          description: A valid resource type.
      required:
      - InstanceId
      - AssociationId
      - ResourceType
    DescribeInstanceStorageConfigResponse:
      type: object
      properties:
        StorageConfig:
          allOf:
          - $ref: '#/components/schemas/InstanceStorageConfig'
          description: A valid storage type.
    DescribePhoneNumberRequest:
      type: object
      properties:
        PhoneNumberId:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberId'
          description: A unique identifier for the phone number.
      required:
      - PhoneNumberId
    DescribePhoneNumberResponse:
      type: object
      properties:
        ClaimedPhoneNumberSummary:
          allOf:
          - $ref: '#/components/schemas/ClaimedPhoneNumberSummary'
          description: Information about a phone number that's been claimed to your
            Amazon Connect instance or traffic distribution group.
    DescribePredefinedAttributeRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can find
            the instance ID in the Amazon Resource Name (ARN) of the instance.
        Name:
          allOf:
          - $ref: '#/components/schemas/PredefinedAttributeName'
          description: The name of the predefined attribute.
      required:
      - InstanceId
      - Name
    DescribePredefinedAttributeResponse:
      type: object
      properties:
        PredefinedAttribute:
          allOf:
          - $ref: '#/components/schemas/PredefinedAttribute'
          description: Information about the predefined attribute.
    DescribePromptRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        PromptId:
          allOf:
          - $ref: '#/components/schemas/PromptId'
          description: A unique identifier for the prompt.
      required:
      - InstanceId
      - PromptId
    DescribePromptResponse:
      type: object
      properties:
        Prompt:
          allOf:
          - $ref: '#/components/schemas/Prompt'
          description: Information about the prompt.
    DescribeQueueRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        QueueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The identifier for the queue.
      required:
      - InstanceId
      - QueueId
    DescribeQueueResponse:
      type: object
      properties:
        Queue:
          allOf:
          - $ref: '#/components/schemas/Queue'
          description: The name of the queue.
    DescribeQuickConnectRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        QuickConnectId:
          allOf:
          - $ref: '#/components/schemas/QuickConnectId'
          description: The identifier for the quick connect.
      required:
      - InstanceId
      - QuickConnectId
    DescribeQuickConnectResponse:
      type: object
      properties:
        QuickConnect:
          allOf:
          - $ref: '#/components/schemas/QuickConnect'
          description: Information about the quick connect.
    DescribeRoutingProfileRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        RoutingProfileId:
          allOf:
          - $ref: '#/components/schemas/RoutingProfileId'
          description: The identifier of the routing profile.
      required:
      - InstanceId
      - RoutingProfileId
    DescribeRoutingProfileResponse:
      type: object
      properties:
        RoutingProfile:
          allOf:
          - $ref: '#/components/schemas/RoutingProfile'
          description: The routing profile.
    DescribeRuleRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        RuleId:
          allOf:
          - $ref: '#/components/schemas/RuleId'
          description: A unique identifier for the rule.
      required:
      - InstanceId
      - RuleId
    DescribeRuleResponse:
      type: object
      properties:
        Rule:
          allOf:
          - $ref: '#/components/schemas/Rule'
          description: Information about the rule.
      required:
      - Rule
    DescribeSecurityProfileRequest:
      type: object
      properties:
        SecurityProfileId:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileId'
          description: The identifier for the security profle.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
      required:
      - SecurityProfileId
      - InstanceId
    DescribeSecurityProfileResponse:
      type: object
      properties:
        SecurityProfile:
          allOf:
          - $ref: '#/components/schemas/SecurityProfile'
          description: The security profile.
    DescribeTrafficDistributionGroupRequest:
      type: object
      properties:
        TrafficDistributionGroupId:
          allOf:
          - $ref: '#/components/schemas/TrafficDistributionGroupIdOrArn'
          description: The identifier of the traffic distribution group. This can
            be the ID or the ARN if the API is being called in the Region where the
            traffic distribution group was created. The ARN must be provided if the
            call is from the replicated Region.
      required:
      - TrafficDistributionGroupId
    DescribeTrafficDistributionGroupResponse:
      type: object
      properties:
        TrafficDistributionGroup:
          allOf:
          - $ref: '#/components/schemas/TrafficDistributionGroup'
          description: Information about the traffic distribution group.
    DescribeUserHierarchyGroupRequest:
      type: object
      properties:
        HierarchyGroupId:
          allOf:
          - $ref: '#/components/schemas/HierarchyGroupId'
          description: The identifier of the hierarchy group.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
      required:
      - HierarchyGroupId
      - InstanceId
    DescribeUserHierarchyGroupResponse:
      type: object
      properties:
        HierarchyGroup:
          allOf:
          - $ref: '#/components/schemas/HierarchyGroup'
          description: Information about the hierarchy group.
    DescribeUserHierarchyStructureRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
      required:
      - InstanceId
    DescribeUserHierarchyStructureResponse:
      type: object
      properties:
        HierarchyStructure:
          allOf:
          - $ref: '#/components/schemas/HierarchyStructure'
          description: Information about the hierarchy structure.
    DescribeUserRequest:
      type: object
      properties:
        UserId:
          allOf:
          - $ref: '#/components/schemas/UserId'
          description: The identifier of the user account.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
      required:
      - UserId
      - InstanceId
    DescribeUserResponse:
      type: object
      properties:
        User:
          allOf:
          - $ref: '#/components/schemas/User'
          description: Information about the user account and configuration settings.
    DescribeViewRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/ViewsInstanceId'
          description: The identifier of the Amazon Connect instance. You can find
            the instanceId in the ARN of the instance.
        ViewId:
          allOf:
          - $ref: '#/components/schemas/ViewId'
          description: The ViewId of the view. This must be an ARN for Amazon Web
            Services managed views.
      required:
      - InstanceId
      - ViewId
    DescribeViewResponse:
      type: object
      properties:
        View:
          allOf:
          - $ref: '#/components/schemas/View'
          description: All view data is contained within the View object.
    DescribeVocabularyRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        VocabularyId:
          allOf:
          - $ref: '#/components/schemas/VocabularyId'
          description: The identifier of the custom vocabulary.
      required:
      - InstanceId
      - VocabularyId
    DescribeVocabularyResponse:
      type: object
      properties:
        Vocabulary:
          allOf:
          - $ref: '#/components/schemas/Vocabulary'
          description: A list of specific words that you want Contact Lens for Amazon
            Connect to recognize in your audio input. They are generally domain-specific
            words and phrases, words that Contact Lens is not recognizing, or proper
            nouns.
      required:
      - Vocabulary
    Description:
      type: string
      minLength: 0
      maxLength: 4096
    Description250:
      type: string
      pattern: ^(^[\S].*[\S]$)|(^[\S]$)$
      minLength: 1
      maxLength: 250
    DestinationId:
      type: string
      minLength: 1
      maxLength: 255
    DestinationNotAllowedException:
      type: object
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/Message'
          description: The message about the outbound calls.
      description: Outbound calls to the destination number are not allowed.
    DeviceInfo:
      type: object
      properties:
        PlatformName:
          allOf:
          - $ref: '#/components/schemas/PlatformName'
          description: Name of the platform that the participant used for the call.
        PlatformVersion:
          allOf:
          - $ref: '#/components/schemas/PlatformVersion'
          description: Version of the platform that the participant used for the call.
        OperatingSystem:
          allOf:
          - $ref: '#/components/schemas/OperatingSystem'
          description: Operating system that the participant used for the call.
      description: Information regarding the device.
    DeviceToken:
      type: string
      minLength: 1
      maxLength: 500
    DeviceType:
      type: string
      enum:
      - GCM
      - APNS
      - APNS_SANDBOX
    Dimensions:
      type: object
      properties:
        Queue:
          allOf:
          - $ref: '#/components/schemas/QueueReference'
          description: Information about the queue for which metrics are returned.
        Channel:
          allOf:
          - $ref: '#/components/schemas/Channel'
          description: The channel used for grouping and filters.
        RoutingProfile:
          $ref: '#/components/schemas/RoutingProfileReference'
        RoutingStepExpression:
          allOf:
          - $ref: '#/components/schemas/RoutingExpression'
          description: The expression of a step in a routing criteria.
      description: Contains information about the dimensions for a set of metrics.
    DimensionsV2Key:
      type: string
    DimensionsV2Map:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/DimensionsV2Value'
    DimensionsV2Value:
      type: string
    DirectoryAlias:
      type: string
      pattern: ^(?!d-)([\da-zA-Z]+)([-]*[\da-zA-Z])*$
      minLength: 1
      maxLength: 45
    DirectoryId:
      type: string
      pattern: ^d-[0-9a-f]{10}$
      minLength: 12
      maxLength: 12
    DirectoryType:
      type: string
      enum:
      - SAML
      - CONNECT_MANAGED
      - EXISTING_DIRECTORY
    DirectoryUserId:
      type: string
    DisassociateAnalyticsDataSetRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        DataSetId:
          allOf:
          - $ref: '#/components/schemas/DataSetId'
          description: The identifier of the dataset to remove.
        TargetAccountId:
          allOf:
          - $ref: '#/components/schemas/AWSAccountId'
          description: The identifier of the target account. Use to associate a dataset
            to a different account than the one containing the Amazon Connect instance.
            If not specified, by default this value is the Amazon Web Services account
            that has the Amazon Connect instance.
      required:
      - InstanceId
      - DataSetId
    DisassociateApprovedOriginRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        Origin:
          allOf:
          - $ref: '#/components/schemas/Origin'
          description: The domain URL of the integrated application.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
      required:
      - InstanceId
      - Origin
    DisassociateBotRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        LexBot:
          $ref: '#/components/schemas/LexBot'
        LexV2Bot:
          allOf:
          - $ref: '#/components/schemas/LexV2Bot'
          description: The Amazon Lex V2 bot to disassociate from the instance.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
      required:
      - InstanceId
    DisassociateFlowRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: "The identifier of the resource.\n\n  * Amazon Web Services\
            \ End User Messaging SMS phone number ARN when using `SMS_PHONE_NUMBER`\n\
            \n  * Amazon Web Services End User Messaging Social phone number ARN when\
            \ using `WHATSAPP_MESSAGING_PHONE_NUMBER`"
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/FlowAssociationResourceType'
          description: A valid resource type.
      required:
      - InstanceId
      - ResourceId
      - ResourceType
    DisassociateFlowResponse:
      type: object
      properties: {}
    DisassociateInstanceStorageConfigRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        AssociationId:
          allOf:
          - $ref: '#/components/schemas/AssociationId'
          description: The existing association identifier that uniquely identifies
            the resource type and storage config for the given instance ID.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/InstanceStorageResourceType'
          description: A valid resource type.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
      required:
      - InstanceId
      - AssociationId
      - ResourceType
    DisassociateLambdaFunctionRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance..
        FunctionArn:
          allOf:
          - $ref: '#/components/schemas/FunctionArn'
          description: The Amazon Resource Name (ARN) of the Lambda function being
            disassociated.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
      required:
      - InstanceId
      - FunctionArn
    DisassociateLexBotRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        BotName:
          allOf:
          - $ref: '#/components/schemas/BotName'
          description: The name of the Amazon Lex bot. Maximum character limit of
            50.
        LexRegion:
          allOf:
          - $ref: '#/components/schemas/LexRegion'
          description: The Amazon Web Services Region in which the Amazon Lex bot
            has been created.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
      required:
      - InstanceId
      - BotName
      - LexRegion
    DisassociatePhoneNumberContactFlowRequest:
      type: object
      properties:
        PhoneNumberId:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberId'
          description: A unique identifier for the phone number.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
      required:
      - PhoneNumberId
      - InstanceId
    DisassociateQueueQuickConnectsRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        QueueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The identifier for the queue.
        QuickConnectIds:
          allOf:
          - $ref: '#/components/schemas/QuickConnectsList'
          description: The quick connects to disassociate from the queue.
      required:
      - InstanceId
      - QueueId
      - QuickConnectIds
    DisassociateRoutingProfileQueuesRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        RoutingProfileId:
          allOf:
          - $ref: '#/components/schemas/RoutingProfileId'
          description: The identifier of the routing profile.
        QueueReferences:
          allOf:
          - $ref: '#/components/schemas/RoutingProfileQueueReferenceList'
          description: The queues to disassociate from this routing profile.
      required:
      - InstanceId
      - RoutingProfileId
      - QueueReferences
    DisassociateSecurityKeyRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        AssociationId:
          allOf:
          - $ref: '#/components/schemas/AssociationId'
          description: The existing association identifier that uniquely identifies
            the resource type and storage config for the given instance ID.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
      required:
      - InstanceId
      - AssociationId
    DisassociateTrafficDistributionGroupUserRequest:
      type: object
      properties:
        TrafficDistributionGroupId:
          allOf:
          - $ref: '#/components/schemas/TrafficDistributionGroupIdOrArn'
          description: The identifier of the traffic distribution group. This can
            be the ID or the ARN of the traffic distribution group.
        UserId:
          allOf:
          - $ref: '#/components/schemas/UserId'
          description: The identifier for the user. This can be the ID or the ARN
            of the user.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
      required:
      - TrafficDistributionGroupId
      - UserId
      - InstanceId
    DisassociateTrafficDistributionGroupUserResponse:
      type: object
      properties: {}
    DisassociateUserProficienciesRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can find
            the instance ID in the Amazon Resource Name (ARN) of the instance.
        UserId:
          allOf:
          - $ref: '#/components/schemas/UserId'
          description: The identifier of the user account.
        UserProficiencies:
          allOf:
          - $ref: '#/components/schemas/UserProficiencyDisassociateList'
          description: The proficiencies to disassociate from the user.
      required:
      - InstanceId
      - UserId
      - UserProficiencies
    DisconnectDetails:
      type: object
      properties:
        PotentialDisconnectIssue:
          allOf:
          - $ref: '#/components/schemas/PotentialDisconnectIssue'
          description: Indicates the potential disconnection issues for a call. This
            field is not populated if the service does not detect potential issues.
      description: Information about the call disconnect experience.
    DisconnectReason:
      type: object
      properties:
        Code:
          allOf:
          - $ref: '#/components/schemas/DisconnectReasonCode'
          description: A code that indicates how the contact was terminated.
      description: Contains details about why a contact was disconnected. Only Amazon
        Connect outbound campaigns can provide this field.
    DisconnectReasonCode:
      type: string
    DismissUserContactRequest:
      type: object
      properties:
        UserId:
          allOf:
          - $ref: '#/components/schemas/UserId'
          description: The identifier of the user account.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can find
            the instanceId in the ARN of the instance.
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact.
      required:
      - UserId
      - InstanceId
      - ContactId
    DismissUserContactResponse:
      type: object
      properties: {}
    DisplayName:
      type: string
      minLength: 1
      maxLength: 256
    Distribution:
      type: object
      properties:
        Region:
          allOf:
          - $ref: '#/components/schemas/AwsRegion'
          description: The Amazon Web Services Region where the traffic is distributed.
        Percentage:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          description: The percentage of the traffic that is distributed, in increments
            of 10.
      required:
      - Region
      - Percentage
      description: Information about a traffic distribution.
    DistributionList:
      type: array
      items:
        $ref: '#/components/schemas/Distribution'
    Double:
      type: number
      format: double
    DownloadUrlMetadata:
      type: object
      properties:
        Url:
          allOf:
          - $ref: '#/components/schemas/MetadataUrl'
          description: A pre-signed URL that should be used to download the attached
            file.
        UrlExpiry:
          allOf:
          - $ref: '#/components/schemas/ISO8601Datetime'
          description: 'The expiration time of the URL in ISO timestamp. It''s specified
            in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example, 2019-11-08T02:41:28.172Z.'
      description: Metadata used to download the attached file.
    DuplicateResourceException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
      description: A resource with the specified name already exists.
    DurationInSeconds:
      type: integer
    EffectiveHoursOfOperationList:
      type: array
      items:
        $ref: '#/components/schemas/EffectiveHoursOfOperations'
    EffectiveHoursOfOperations:
      type: object
      properties:
        Date:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationOverrideYearMonthDayDateFormat'
          description: The date that the hours of operation or overrides applies to.
        OperationalHours:
          allOf:
          - $ref: '#/components/schemas/OperationalHours'
          description: Information about the hours of operations with the effective
            override applied.
      description: Information about the hours of operations with the effective override
        applied.
    Email:
      type: string
    EmailAddress:
      type: string
      pattern: ^[^\s@]+@[^\s@]+\.[^\s@]+$
      minLength: 1
      maxLength: 255
    EmailAddressArn:
      type: string
      minLength: 1
      maxLength: 500
    EmailAddressDisplayName:
      type: string
      minLength: 0
      maxLength: 256
    EmailAddressId:
      type: string
      minLength: 1
      maxLength: 500
    EmailAddressInfo:
      type: object
      properties:
        EmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          description: The email address with the instance, in [^\s@]+@[^\s@]+\\.[^\s@]+
            format.
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/EmailAddressDisplayName'
          description: The display name of email address.
      required:
      - EmailAddress
      description: Contains information about a source or destination email address
    EmailAddressList:
      type: array
      items:
        $ref: '#/components/schemas/EmailAddressMetadata'
    EmailAddressMetadata:
      type: object
      properties:
        EmailAddressId:
          allOf:
          - $ref: '#/components/schemas/EmailAddressId'
          description: The identifier of the email address.
        EmailAddressArn:
          allOf:
          - $ref: '#/components/schemas/EmailAddressArn'
          description: The Amazon Resource Name (ARN) of the email address.
        EmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          description: The email address with the instance, in [^\s@]+@[^\s@]+\\.[^\s@]+
            format.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the email address.
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/EmailAddressDisplayName'
          description: The display name of email address.
      description: Contains information about an email address for a contact center.
    EmailAddressRecipientList:
      type: array
      items:
        $ref: '#/components/schemas/EmailAddressInfo'
    EmailAddressSearchConditionList:
      type: array
      items:
        $ref: '#/components/schemas/EmailAddressSearchCriteria'
    EmailAddressSearchCriteria:
      type: object
      properties:
        OrConditions:
          allOf:
          - $ref: '#/components/schemas/EmailAddressSearchConditionList'
          description: A list of conditions which would be applied together with an
            OR condition.
        AndConditions:
          allOf:
          - $ref: '#/components/schemas/EmailAddressSearchConditionList'
          description: A list of conditions which would be applied together with an
            AND condition.
        StringCondition:
          $ref: '#/components/schemas/StringCondition'
      description: The search criteria to be used to return email addresses.
    EmailAddressSearchFilter:
      type: object
      properties:
        TagFilter:
          $ref: '#/components/schemas/ControlPlaneTagFilter'
      description: Filters to be applied to search results.
    EmailAttachment:
      type: object
      properties:
        FileName:
          allOf:
          - $ref: '#/components/schemas/FileName'
          description: A case-sensitive name of the attached file being uploaded.
        S3Url:
          allOf:
          - $ref: '#/components/schemas/PreSignedAttachmentUrl'
          description: The pre-signed URLs for the S3 bucket where the email attachment
            is stored.
      required:
      - FileName
      - S3Url
      description: Information about the email attachment files.
    EmailAttachments:
      type: array
      items:
        $ref: '#/components/schemas/EmailAttachment'
      x-sensitive: true
    EmailHeaderType:
      type: string
      enum:
      - REFERENCES
      - MESSAGE_ID
      - IN_REPLY_TO
      - X_SES_SPAM_VERDICT
      - X_SES_VIRUS_VERDICT
    EmailHeaderValue:
      type: string
      minLength: 1
      maxLength: 20000
    EmailHeaders:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/EmailHeaderValue'
    EmailMessageContentType:
      type: string
      minLength: 1
      maxLength: 100
    EmailMessageReference:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ReferenceKey'
          description: The name of the email message reference
        Arn:
          allOf:
          - $ref: '#/components/schemas/ReferenceArn'
          description: The Amazon Resource Name (ARN) of the email message reference
      description: Information about the reference when the referenceType is `EMAIL_MESSAGE`.
        Otherwise, null.
    EmailRecipient:
      type: object
      properties:
        Address:
          allOf:
          - $ref: '#/components/schemas/EndpointAddress'
          description: 'Address of the email recipient.


            Type: String


            Length Constraints: Minimum length of 1. Maximum length of 256.'
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/EndpointDisplayName'
          description: 'Display name of the email recipient.


            Type: String


            Length Constraints: Minimum length of 1. Maximum length of 256.'
      description: Information about the email recipient
    EmailRecipientsList:
      type: array
      items:
        $ref: '#/components/schemas/EmailRecipient'
    EmailReference:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ReferenceKey'
          description: Identifier of the email reference.
        Value:
          allOf:
          - $ref: '#/components/schemas/ReferenceValue'
          description: A valid email address.
      description: Information about a reference when the `referenceType` is `EMAIL`.
        Otherwise, null.
    EmptyFieldValue:
      type: object
      properties: {}
      description: An empty value.
    EncryptionConfig:
      type: object
      properties:
        EncryptionType:
          allOf:
          - $ref: '#/components/schemas/EncryptionType'
          description: The type of encryption.
        KeyId:
          allOf:
          - $ref: '#/components/schemas/KeyId'
          description: 'The full ARN of the encryption key.


            Be sure to provide the full ARN of the encryption key, not just the ID.


            Amazon Connect supports only KMS keys with the default key spec of [ `SYMMETRIC_DEFAULT`
            ](https://docs.aws.amazon.com/kms/latest/developerguide/asymmetric-key-specs.html#key-spec-symmetric-default).'
      required:
      - EncryptionType
      - KeyId
      description: The encryption configuration.
    EncryptionType:
      type: string
      enum:
      - KMS
    EndAssociatedTasksActionDefinition:
      type: object
      properties: {}
      description: End associated tasks related to a case.
    Endpoint:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/EndpointType'
          description: Type of the endpoint.
        Address:
          allOf:
          - $ref: '#/components/schemas/EndpointAddress'
          description: Address of the endpoint.
      description: Information about the endpoint.
    EndpointAddress:
      type: string
      minLength: 0
      maxLength: 256
    EndpointDisplayName:
      type: string
      minLength: 0
      maxLength: 256
    EndpointInfo:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/EndpointType'
          description: Type of endpoint.
        Address:
          allOf:
          - $ref: '#/components/schemas/EndpointAddress'
          description: Address of the endpoint.
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/EndpointDisplayName'
          description: Display name of the endpoint.
      description: Information about the endpoint.
    EndpointType:
      type: string
      enum:
      - TELEPHONE_NUMBER
      - VOIP
      - CONTACT_FLOW
      - CONNECT_PHONENUMBER_ARN
      - EMAIL_ADDRESS
    ErrorCode:
      type: string
    ErrorMessage:
      type: string
    ErrorResult:
      type: object
      properties:
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The error code.
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The corresponding error message for the error code.
      description: 'This API is in preview release for Amazon Connect and is subject
        to change.


        List of errors for dataset association failures.'
    ErrorResults:
      type: array
      items:
        $ref: '#/components/schemas/ErrorResult'
    Evaluation:
      type: object
      properties:
        EvaluationId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: A unique identifier for the contact evaluation.
        EvaluationArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for the contact evaluation resource.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/EvaluationMetadata'
          description: Metadata about the contact evaluation.
        Answers:
          allOf:
          - $ref: '#/components/schemas/EvaluationAnswersOutputMap'
          description: A map of question identifiers to answer value.
        Notes:
          allOf:
          - $ref: '#/components/schemas/EvaluationNotesMap'
          description: A map of question identifiers to note value.
        Status:
          allOf:
          - $ref: '#/components/schemas/EvaluationStatus'
          description: The status of the contact evaluation.
        Scores:
          allOf:
          - $ref: '#/components/schemas/EvaluationScoresMap'
          description: A map of item (section or question) identifiers to score value.
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp for when the evaluation was created.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp for when the evaluation was last updated.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The tags used to organize, track, or control access for this
            resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.'
      required:
      - EvaluationId
      - EvaluationArn
      - Metadata
      - Answers
      - Notes
      - Status
      - CreatedTime
      - LastModifiedTime
      description: Information about a contact evaluation.
    EvaluationAnswerData:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/EvaluationAnswerDataStringValue'
        description: |-
          The string value for an answer in a contact evaluation.
      - allOf:
        - $ref: '#/components/schemas/EvaluationAnswerDataNumericValue'
        description: |-
          The numeric value for an answer in a contact evaluation.
      - allOf:
        - $ref: '#/components/schemas/Boolean'
        description: |-
          The flag to mark the question as not applicable.
      description: |-
        Information about answer data for a contact evaluation. Answer data must be either string, numeric, or not applicable.
    EvaluationAnswerDataNumericValue:
      type: number
      format: double
      default: 0
    EvaluationAnswerDataStringValue:
      type: string
      minLength: 0
      maxLength: 128
    EvaluationAnswerInput:
      type: object
      properties:
        Value:
          allOf:
          - $ref: '#/components/schemas/EvaluationAnswerData'
          description: The value for an answer in a contact evaluation.
      description: Information about input answers for a contact evaluation.
    EvaluationAnswerOutput:
      type: object
      properties:
        Value:
          allOf:
          - $ref: '#/components/schemas/EvaluationAnswerData'
          description: The value for an answer in a contact evaluation.
        SystemSuggestedValue:
          allOf:
          - $ref: '#/components/schemas/EvaluationAnswerData'
          description: The system suggested value for an answer in a contact evaluation.
      description: Information about output answers for a contact evaluation.
    EvaluationAnswersInputMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/EvaluationAnswerInput'
    EvaluationAnswersOutputMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/EvaluationAnswerOutput'
    EvaluationForm:
      type: object
      properties:
        EvaluationFormId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: The unique identifier for the evaluation form.
        EvaluationFormVersion:
          allOf:
          - $ref: '#/components/schemas/VersionNumber'
          description: A version of the evaluation form.
        Locked:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormVersionIsLocked'
          description: The flag indicating whether the evaluation form is locked for
            changes.
        EvaluationFormArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for the evaluation form resource.
        Title:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormTitle'
          description: A title of the evaluation form.
        Description:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormDescription'
          description: The description of the evaluation form.
        Status:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormVersionStatus'
          description: The status of the evaluation form.
        Items:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormItemsList'
          description: Items that are part of the evaluation form. The total number
            of sections and questions must not exceed 100 each. Questions must be
            contained in a section.
        ScoringStrategy:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormScoringStrategy'
          description: A scoring strategy of the evaluation form.
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp for when the evaluation form was created.
        CreatedBy:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the user who created the
            evaluation form.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp for when the evaluation form was last updated.
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the user who last updated
            the evaluation form.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The tags used to organize, track, or control access for this
            resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.'
      required:
      - EvaluationFormId
      - EvaluationFormVersion
      - Locked
      - EvaluationFormArn
      - Title
      - Status
      - Items
      - CreatedTime
      - CreatedBy
      - LastModifiedTime
      - LastModifiedBy
      description: Information about the evaluation form.
    EvaluationFormContent:
      type: object
      properties:
        EvaluationFormVersion:
          allOf:
          - $ref: '#/components/schemas/VersionNumber'
          description: A version of the evaluation form.
        EvaluationFormId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: The unique identifier for the evaluation form.
        EvaluationFormArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for the evaluation form resource.
        Title:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormTitle'
          description: A title of the evaluation form.
        Description:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormDescription'
          description: The description of the evaluation form.
        Items:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormItemsList'
          description: Items that are part of the evaluation form. The total number
            of sections and questions must not exceed 100 each. Questions must be
            contained in a section.
        ScoringStrategy:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormScoringStrategy'
          description: A scoring strategy of the evaluation form.
      required:
      - EvaluationFormVersion
      - EvaluationFormId
      - EvaluationFormArn
      - Title
      - Items
      description: Information about an evaluation form used in a contact evaluation.
    EvaluationFormDescription:
      type: string
      minLength: 0
      maxLength: 1024
    EvaluationFormId:
      type: string
      minLength: 1
      maxLength: 256
    EvaluationFormItem:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/EvaluationFormSection'
        description: |-
          The information of the section.
      - allOf:
        - $ref: '#/components/schemas/EvaluationFormQuestion'
        description: |-
          The information of the question.
      description: |-
        Information about an item from an evaluation form. The item must be either a section or a question.
    EvaluationFormItemWeight:
      type: number
      format: double
      default: 0
      minimum: 0
      maximum: 100
    EvaluationFormItemsList:
      type: array
      items:
        $ref: '#/components/schemas/EvaluationFormItem'
    EvaluationFormNumericQuestionAutomation:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/NumericQuestionPropertyValueAutomation'
        description: |-
          The property value of the automation.
      description: |-
        Information about the automation configuration in numeric questions.
    EvaluationFormNumericQuestionOption:
      type: object
      properties:
        MinValue:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The minimum answer value of the range option.
        MaxValue:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum answer value of the range option.
        Score:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormQuestionAnswerScore'
          description: The score assigned to answer values within the range option.
        AutomaticFail:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: The flag to mark the option as automatic fail. If an automatic
            fail answer is provided, the overall evaluation gets a score of 0.
      required:
      - MinValue
      - MaxValue
      description: Information about the option range used for scoring in numeric
        questions.
    EvaluationFormNumericQuestionOptionList:
      type: array
      items:
        $ref: '#/components/schemas/EvaluationFormNumericQuestionOption'
    EvaluationFormNumericQuestionProperties:
      type: object
      properties:
        MinValue:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The minimum answer value.
        MaxValue:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum answer value.
        Options:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormNumericQuestionOptionList'
          description: The scoring options of the numeric question.
        Automation:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormNumericQuestionAutomation'
          description: The automation properties of the numeric question.
      required:
      - MinValue
      - MaxValue
      description: Information about properties for a numeric question in an evaluation
        form.
    EvaluationFormQuestion:
      type: object
      properties:
        Title:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormQuestionTitle'
          description: The title of the question.
        Instructions:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormQuestionInstructions'
          description: The instructions of the section.
        RefId:
          allOf:
          - $ref: '#/components/schemas/ReferenceId'
          description: The identifier of the question. An identifier must be unique
            within the evaluation form.
        NotApplicableEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: The flag to enable not applicable answers to the question.
        QuestionType:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormQuestionType'
          description: The type of the question.
        QuestionTypeProperties:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormQuestionTypeProperties'
          description: The properties of the type of question. Text questions do not
            have to define question type properties.
        Weight:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormItemWeight'
          description: The scoring weight of the section.
      required:
      - Title
      - RefId
      - QuestionType
      description: Information about a question from an evaluation form.
    EvaluationFormQuestionAnswerScore:
      type: integer
      default: 0
      minimum: 0
      maximum: 10
    EvaluationFormQuestionInstructions:
      type: string
      minLength: 0
      maxLength: 1024
    EvaluationFormQuestionTitle:
      type: string
      minLength: 0
      maxLength: 350
    EvaluationFormQuestionType:
      type: string
      enum:
      - TEXT
      - SINGLESELECT
      - NUMERIC
    EvaluationFormQuestionTypeProperties:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/EvaluationFormNumericQuestionProperties'
        description: |-
          The properties of the numeric question.
      - allOf:
        - $ref: '#/components/schemas/EvaluationFormSingleSelectQuestionProperties'
        description: |-
          The properties of the numeric question.
      description: |-
        Information about properties for a question in an evaluation form. The question type properties must be either for a numeric question or a single select question.
    EvaluationFormScoringMode:
      type: string
      enum:
      - QUESTION_ONLY
      - SECTION_ONLY
    EvaluationFormScoringStatus:
      type: string
      enum:
      - ENABLED
      - DISABLED
    EvaluationFormScoringStrategy:
      type: object
      properties:
        Mode:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormScoringMode'
          description: The scoring mode of the evaluation form.
        Status:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormScoringStatus'
          description: The scoring status of the evaluation form.
      required:
      - Mode
      - Status
      description: Information about scoring strategy for an evaluation form.
    EvaluationFormSection:
      type: object
      properties:
        Title:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormSectionTitle'
          description: The title of the section.
        RefId:
          allOf:
          - $ref: '#/components/schemas/ReferenceId'
          description: The identifier of the section. An identifier must be unique
            within the evaluation form.
        Instructions:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormQuestionInstructions'
          description: The instructions of the section.
        Items:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormItemsList'
          description: The items of the section.
        Weight:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormItemWeight'
          description: The scoring weight of the section.
      required:
      - Title
      - RefId
      - Items
      description: Information about a section from an evaluation form. A section
        can contain sections and/or questions. Evaluation forms can only contain sections
        and subsections (two level nesting).
    EvaluationFormSectionTitle:
      type: string
      minLength: 0
      maxLength: 128
    EvaluationFormSingleSelectQuestionAutomation:
      type: object
      properties:
        Options:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormSingleSelectQuestionAutomationOptionList'
          description: The automation options of the single select question.
        DefaultOptionRefId:
          allOf:
          - $ref: '#/components/schemas/ReferenceId'
          description: The identifier of the default answer option, when none of the
            automation options match the criteria.
      required:
      - Options
      description: Information about the automation configuration in single select
        questions. Automation options are evaluated in order, and the first matched
        option is applied. If no automation option matches, and there is a default
        option, then the default option is applied.
    EvaluationFormSingleSelectQuestionAutomationOption:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/SingleSelectQuestionRuleCategoryAutomation'
        description: |-
          The automation option based on a rule category for the single select question.
      description: |-
        Information about the automation option of a single select question.
    EvaluationFormSingleSelectQuestionAutomationOptionList:
      type: array
      items:
        $ref: '#/components/schemas/EvaluationFormSingleSelectQuestionAutomationOption'
    EvaluationFormSingleSelectQuestionDisplayMode:
      type: string
      enum:
      - DROPDOWN
      - RADIO
    EvaluationFormSingleSelectQuestionOption:
      type: object
      properties:
        RefId:
          allOf:
          - $ref: '#/components/schemas/ReferenceId'
          description: The identifier of the answer option. An identifier must be
            unique within the question.
        Text:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormSingleSelectQuestionOptionText'
          description: The title of the answer option.
        Score:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormQuestionAnswerScore'
          description: The score assigned to the answer option.
        AutomaticFail:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: The flag to mark the option as automatic fail. If an automatic
            fail answer is provided, the overall evaluation gets a score of 0.
      required:
      - RefId
      - Text
      description: Information about the automation configuration in single select
        questions.
    EvaluationFormSingleSelectQuestionOptionList:
      type: array
      items:
        $ref: '#/components/schemas/EvaluationFormSingleSelectQuestionOption'
    EvaluationFormSingleSelectQuestionOptionText:
      type: string
      minLength: 0
      maxLength: 128
    EvaluationFormSingleSelectQuestionProperties:
      type: object
      properties:
        Options:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormSingleSelectQuestionOptionList'
          description: The answer options of the single select question.
        DisplayAs:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormSingleSelectQuestionDisplayMode'
          description: The display mode of the single select question.
        Automation:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormSingleSelectQuestionAutomation'
          description: The display mode of the single select question.
      required:
      - Options
      description: Information about the options in single select questions.
    EvaluationFormSummary:
      type: object
      properties:
        EvaluationFormId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: The unique identifier for the evaluation form.
        EvaluationFormArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for the evaluation form resource.
        Title:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormTitle'
          description: A title of the evaluation form.
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp for when the evaluation form was created.
        CreatedBy:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the user who created the
            evaluation form.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp for when the evaluation form was last updated.
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the user who last updated
            the evaluation form.
        LastActivatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp for when the evaluation form was last activated.
        LastActivatedBy:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the user who last activated
            the evaluation form.
        LatestVersion:
          allOf:
          - $ref: '#/components/schemas/VersionNumber'
          description: The version number of the latest evaluation form version.
        ActiveVersion:
          allOf:
          - $ref: '#/components/schemas/VersionNumber'
          description: The version of the active evaluation form version.
      required:
      - EvaluationFormId
      - EvaluationFormArn
      - Title
      - CreatedTime
      - CreatedBy
      - LastModifiedTime
      - LastModifiedBy
      - LatestVersion
      description: Summary information about an evaluation form.
    EvaluationFormSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/EvaluationFormSummary'
    EvaluationFormTitle:
      type: string
      minLength: 1
      maxLength: 128
    EvaluationFormVersionIsLocked:
      type: boolean
      default: false
    EvaluationFormVersionStatus:
      type: string
      enum:
      - DRAFT
      - ACTIVE
    EvaluationFormVersionSummary:
      type: object
      properties:
        EvaluationFormArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for the evaluation form resource.
        EvaluationFormId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: The unique identifier for the evaluation form.
        EvaluationFormVersion:
          allOf:
          - $ref: '#/components/schemas/VersionNumber'
          description: A version of the evaluation form.
        Locked:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormVersionIsLocked'
          description: The flag indicating whether the evaluation form is locked for
            changes.
        Status:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormVersionStatus'
          description: The status of the evaluation form.
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp for when the evaluation form was created.
        CreatedBy:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the user who created the
            evaluation form.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp for when the evaluation form was last updated.
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the user who last updated
            the evaluation form.
      required:
      - EvaluationFormArn
      - EvaluationFormId
      - EvaluationFormVersion
      - Locked
      - Status
      - CreatedTime
      - CreatedBy
      - LastModifiedTime
      - LastModifiedBy
      description: Summary information about an evaluation form.
    EvaluationFormVersionSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/EvaluationFormVersionSummary'
    EvaluationMetadata:
      type: object
      properties:
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact in this instance of Amazon Connect.
        EvaluatorArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the user who last updated
            the evaluation.
        ContactAgentId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: The identifier of the agent who performed the contact.
        Score:
          allOf:
          - $ref: '#/components/schemas/EvaluationScore'
          description: The overall score of the contact evaluation.
      required:
      - ContactId
      - EvaluatorArn
      description: Metadata information about a contact evaluation.
    EvaluationNote:
      type: object
      properties:
        Value:
          allOf:
          - $ref: '#/components/schemas/EvaluationNoteString'
          description: 'The note for an item (section or question) in a contact evaluation.


            Even though a note in an evaluation can have up to 3072 chars, there is
            also a limit on the total number of chars for all the notes in the evaluation
            combined. Assuming there are N questions in the evaluation being submitted,
            then the max char limit for all notes combined is N x 1024.'
      description: Information about notes for a contact evaluation.
    EvaluationNoteString:
      type: string
      minLength: 0
      maxLength: 3072
    EvaluationNotesMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/EvaluationNote'
    EvaluationScore:
      type: object
      properties:
        Percentage:
          allOf:
          - $ref: '#/components/schemas/EvaluationScorePercentage'
          description: The score percentage for an item in a contact evaluation.
        NotApplicable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: The flag to mark the item as not applicable for scoring.
        AutomaticFail:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: The flag that marks the item as automatic fail. If the item
            or a child item gets an automatic fail answer, this flag will be true.
      description: Information about scores of a contact evaluation item (section
        or question).
    EvaluationScorePercentage:
      type: number
      format: double
      default: 0
      minimum: 0
      maximum: 100
    EvaluationScoresMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/EvaluationScore'
    EvaluationStatus:
      type: string
      enum:
      - DRAFT
      - SUBMITTED
    EvaluationSummary:
      type: object
      properties:
        EvaluationId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: A unique identifier for the contact evaluation.
        EvaluationArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for the contact evaluation resource.
        EvaluationFormTitle:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormTitle'
          description: A title of the evaluation form.
        EvaluationFormId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: The unique identifier for the evaluation form.
        Status:
          allOf:
          - $ref: '#/components/schemas/EvaluationStatus'
          description: The status of the contact evaluation.
        EvaluatorArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the user who last updated
            the evaluation.
        Score:
          allOf:
          - $ref: '#/components/schemas/EvaluationScore'
          description: The overall score of the contact evaluation.
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp for when the evaluation was created.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp for when the evaluation was last updated.
      required:
      - EvaluationId
      - EvaluationArn
      - EvaluationFormTitle
      - EvaluationFormId
      - Status
      - EvaluatorArn
      - CreatedTime
      - LastModifiedTime
      description: Summary information about a contact evaluation.
    EvaluationSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/EvaluationSummary'
    EventBridgeActionDefinition:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/EventBridgeActionName'
          description: The name.
      required:
      - Name
      description: The EventBridge action definition.
    EventBridgeActionName:
      type: string
      minLength: 1
      maxLength: 100
    EventSourceName:
      type: string
      enum:
      - OnPostCallAnalysisAvailable
      - OnRealTimeCallAnalysisAvailable
      - OnRealTimeChatAnalysisAvailable
      - OnPostChatAnalysisAvailable
      - OnZendeskTicketCreate
      - OnZendeskTicketStatusUpdate
      - OnSalesforceCaseCreate
      - OnContactEvaluationSubmit
      - OnMetricDataUpdate
      - OnCaseCreate
      - OnCaseUpdate
      - OnSlaBreach
    Expiry:
      type: object
      properties:
        DurationInSeconds:
          allOf:
          - $ref: '#/components/schemas/DurationInSeconds'
          description: The number of seconds to wait before expiring the routing step.
        ExpiryTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp indicating when the routing step expires.
      description: An object to specify the expiration of a routing step.
    ExpiryDurationInMinutes:
      type: integer
    Expression:
      type: object
      properties:
        AttributeCondition:
          allOf:
          - $ref: '#/components/schemas/AttributeCondition'
          description: An object to specify the predefined attribute condition.
        AndExpression:
          allOf:
          - $ref: '#/components/schemas/Expressions'
          description: List of routing expressions which will be AND-ed together.
        OrExpression:
          allOf:
          - $ref: '#/components/schemas/Expressions'
          description: List of routing expressions which will be OR-ed together.
        NotAttributeCondition:
          $ref: '#/components/schemas/AttributeCondition'
      description: A tagged union to specify expression for a routing step.
    Expressions:
      type: array
      items:
        $ref: '#/components/schemas/Expression'
    FailedRequest:
      type: object
      properties:
        RequestIdentifier:
          allOf:
          - $ref: '#/components/schemas/RequestIdentifier'
          description: Request identifier provided in the API call in the ContactDataRequest
            to create a contact.
        FailureReasonCode:
          allOf:
          - $ref: '#/components/schemas/FailureReasonCode'
          description: Reason code for the failure.
        FailureReasonMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Why the request to create a contact failed.
      description: Request for which contact failed to be generated.
    FailedRequestList:
      type: array
      items:
        $ref: '#/components/schemas/FailedRequest'
    FailureReasonCode:
      type: string
      enum:
      - INVALID_ATTRIBUTE_KEY
      - INVALID_CUSTOMER_ENDPOINT
      - INVALID_SYSTEM_ENDPOINT
      - INVALID_QUEUE
      - MISSING_CAMPAIGN
      - MISSING_CUSTOMER_ENDPOINT
      - MISSING_QUEUE_ID_AND_SYSTEM_ENDPOINT
      - REQUEST_THROTTLED
      - IDEMPOTENCY_EXCEPTION
      - INTERNAL_ERROR
    FieldStringValue:
      type: string
      minLength: 0
      maxLength: 500
    FieldValue:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/FieldValueId'
          description: Unique identifier of a field.
        Value:
          allOf:
          - $ref: '#/components/schemas/FieldValueUnion'
          description: Union of potential field value types.
      required:
      - Id
      - Value
      description: Object for case field values.
    FieldValueId:
      type: string
      minLength: 1
      maxLength: 500
    FieldValueUnion:
      type: object
      properties:
        BooleanValue:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A Boolean number value type.
        DoubleValue:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: A Double number value type.
        EmptyValue:
          allOf:
          - $ref: '#/components/schemas/EmptyFieldValue'
          description: An empty value.
        StringValue:
          allOf:
          - $ref: '#/components/schemas/FieldStringValue'
          description: String value type.
      description: Object to store union of Field values.
    FieldValues:
      type: array
      items:
        $ref: '#/components/schemas/FieldValue'
    FileId:
      type: string
      minLength: 1
      maxLength: 256
    FileIdList:
      type: array
      items:
        $ref: '#/components/schemas/FileId'
    FileName:
      type: string
      pattern: ^\P{C}*$
      minLength: 1
      maxLength: 256
    FileSizeInBytes:
      type: integer
      format: int64
      minimum: 1
    FileStatusType:
      type: string
      enum:
      - APPROVED
      - REJECTED
      - PROCESSING
      - FAILED
    FileUseCaseType:
      type: string
      enum:
      - EMAIL_MESSAGE
      - ATTACHMENT
    FilterV2:
      type: object
      properties:
        FilterKey:
          allOf:
          - $ref: '#/components/schemas/ResourceArnOrId'
          description: The key to use for filtering data. For example, `QUEUE`, `ROUTING_PROFILE,
            AGENT`, `CHANNEL`, `AGENT_HIERARCHY_LEVEL_ONE`, `AGENT_HIERARCHY_LEVEL_TWO`,
            `AGENT_HIERARCHY_LEVEL_THREE`, `AGENT_HIERARCHY_LEVEL_FOUR`, `AGENT_HIERARCHY_LEVEL_FIVE`.
            There must be at least 1 key and a maximum 5 keys.
        FilterValues:
          allOf:
          - $ref: '#/components/schemas/FilterValueList'
          description: The identifiers to use for filtering data. For example, if
            you have a filter key of `QUEUE`, you would add queue IDs or ARNs in `FilterValues`.
      description: Contains the filter to apply when retrieving metrics with the [GetMetricDataV2](https://docs.aws.amazon.com/connect/latest/APIReference/API_GetMetricDataV2.html)
        API.
    FilterValueList:
      type: array
      items:
        $ref: '#/components/schemas/ResourceArnOrId'
    Filters:
      type: object
      properties:
        Queues:
          allOf:
          - $ref: '#/components/schemas/Queues'
          description: The queues to use to filter the metrics. You should specify
            at least one queue, and can specify up to 100 queues per request. The
            `GetCurrentMetricsData` API in particular requires a queue when you include
            a `Filter` in your request.
        Channels:
          allOf:
          - $ref: '#/components/schemas/Channels'
          description: The channel to use to filter the metrics.
        RoutingProfiles:
          allOf:
          - $ref: '#/components/schemas/RoutingProfiles'
          description: A list of up to 100 routing profile IDs or ARNs.
        RoutingStepExpressions:
          allOf:
          - $ref: '#/components/schemas/RoutingExpressions'
          description: A list of expressions as a filter, in which an expression is
            an object of a step in a routing criteria.
      description: Contains the filter to apply when retrieving metrics.
    FiltersV2List:
      type: array
      items:
        $ref: '#/components/schemas/FilterV2'
    FlowAssociationResourceType:
      type: string
      enum:
      - SMS_PHONE_NUMBER
      - INBOUND_EMAIL
      - OUTBOUND_EMAIL
      - ANALYTICS_CONNECTOR
      - WHATSAPP_MESSAGING_PHONE_NUMBER
    FlowAssociationSummary:
      type: object
      properties:
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The identifier of the resource.
        FlowId:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The identifier of the flow.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ListFlowAssociationResourceType'
          description: The type of resource association.
      description: Information about flow associations.
    FlowAssociationSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/FlowAssociationSummary'
    FlowContentSha256:
      type: string
      pattern: ^[a-zA-Z0-9]{64}$
      minLength: 1
      maxLength: 64
    FunctionArn:
      type: string
      minLength: 1
      maxLength: 140
    FunctionArnsList:
      type: array
      items:
        $ref: '#/components/schemas/FunctionArn'
    GetAttachedFileRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The unique identifier of the Amazon Connect instance.
        FileId:
          allOf:
          - $ref: '#/components/schemas/FileId'
          description: The unique identifier of the attached file resource.
        UrlExpiryInSeconds:
          allOf:
          - $ref: '#/components/schemas/URLExpiryInSeconds'
          description: Optional override for the expiry of the pre-signed S3 URL in
            seconds. The default value is 300.
        AssociatedResourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: 'The resource to which the attached file is (being) uploaded
            to. The supported resources are [Cases](https://docs.aws.amazon.com/connect/latest/adminguide/cases.html)
            and [Email](https://docs.aws.amazon.com/connect/latest/adminguide/setup-email-channel.html).


            This value must be a valid ARN.'
      required:
      - InstanceId
      - FileId
      - AssociatedResourceArn
      description: Request to GetAttachedFile API.
    GetAttachedFileResponse:
      type: object
      properties:
        FileArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The unique identifier of the attached file resource (ARN).
        FileId:
          allOf:
          - $ref: '#/components/schemas/FileId'
          description: The unique identifier of the attached file resource.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601Datetime'
          description: 'The time of Creation of the file resource as an ISO timestamp.
            It''s specified in ISO 8601 format: `yyyy-MM-ddThh:mm:ss.SSSZ`. For example,
            `2024-05-03T02:41:28.172Z`.'
        FileStatus:
          allOf:
          - $ref: '#/components/schemas/FileStatusType'
          description: The current status of the attached file.
        FileName:
          allOf:
          - $ref: '#/components/schemas/FileName'
          description: A case-sensitive name of the attached file being uploaded.
        FileSizeInBytes:
          allOf:
          - $ref: '#/components/schemas/FileSizeInBytes'
          description: The size of the attached file in bytes.
        AssociatedResourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The resource to which the attached file is (being) uploaded
            to. [Cases](https://docs.aws.amazon.com/connect/latest/APIReference/API_connect-cases_CreateCase.html)
            are the only current supported resource.
        FileUseCaseType:
          allOf:
          - $ref: '#/components/schemas/FileUseCaseType'
          description: The use case for the file.
        CreatedBy:
          allOf:
          - $ref: '#/components/schemas/CreatedByInfo'
          description: Represents the identity that created the file.
        DownloadUrlMetadata:
          allOf:
          - $ref: '#/components/schemas/DownloadUrlMetadata'
          description: URL and expiry to be used when downloading the attached file.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The tags used to organize, track, or control access for this
            resource. For example, `{ "Tags": {"key1":"value1", "key2":"value2"} }`.'
      required:
      - FileSizeInBytes
      description: Response from GetAttachedFile API.
    GetContactAttributesRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance.
        InitialContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the initial contact.
      required:
      - InstanceId
      - InitialContactId
    GetContactAttributesResponse:
      type: object
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/Attributes'
          description: Information about the attributes.
    GetCurrentMetricDataRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        Filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          description: "The filters to apply to returned metrics. You can filter up\
            \ to the following limits:\n\n  * Queues: 100\n\n  * Routing profiles:\
            \ 100\n\n  * Channels: 3 (VOICE, CHAT, and TASK channels are supported.)\n\
            \n  * RoutingStepExpressions: 50\n\nMetric data is retrieved only for\
            \ the resources associated with the queues or routing profiles, and by\
            \ any channels included in the filter. (You cannot filter by both queue\
            \ AND routing profile.) You can include both resource IDs and resource\
            \ ARNs in the same request.\n\nWhen using the `RoutingStepExpression`\
            \ filter, you need to pass exactly one `QueueId`. The filter is also case\
            \ sensitive so when using the `RoutingStepExpression` filter, grouping\
            \ by `ROUTING_STEP_EXPRESSION` is required.\n\nCurrently tagging is only\
            \ supported on the resources that are passed in the filter."
        Groupings:
          allOf:
          - $ref: '#/components/schemas/Groupings'
          description: "The grouping applied to the metrics returned. For example,\
            \ when grouped by `QUEUE`, the metrics returned apply to each queue rather\
            \ than aggregated for all queues.\n\n  * If you group by `CHANNEL`, you\
            \ should include a Channels filter. VOICE, CHAT, and TASK channels are\
            \ supported.\n\n  * If you group by `ROUTING_PROFILE`, you must include\
            \ either a queue or routing profile filter. In addition, a routing profile\
            \ filter is required for metrics `CONTACTS_SCHEDULED`, `CONTACTS_IN_QUEUE`,\
            \ and ` OLDEST_CONTACT_AGE`.\n\n  * If no `Grouping` is included in the\
            \ request, a summary of metrics is returned.\n\n  * When using the `RoutingStepExpression`\
            \ filter, group by `ROUTING_STEP_EXPRESSION` is required."
        CurrentMetrics:
          allOf:
          - $ref: '#/components/schemas/CurrentMetrics'
          description: "The metrics to retrieve. Specify the name and unit for each\
            \ metric. The following metrics are available. For a description of all\
            \ the metrics, see [Real-time Metrics Definitions](https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html)\
            \ in the _Amazon Connect Administrator Guide_.\n\nAGENTS_AFTER_CONTACT_WORK\n\
            \n    \n\nUnit: COUNT\n\nName in real-time metrics report: [ACW](https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#aftercallwork-real-time)\n\
            \nAGENTS_AVAILABLE\n\n    \n\nUnit: COUNT\n\nName in real-time metrics\
            \ report: [Available](https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#available-real-time)\n\
            \nAGENTS_ERROR\n\n    \n\nUnit: COUNT\n\nName in real-time metrics report:\
            \ [Error](https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#error-real-time)\n\
            \nAGENTS_NON_PRODUCTIVE\n\n    \n\nUnit: COUNT\n\nName in real-time metrics\
            \ report: [NPT (Non-Productive Time)](https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#non-productive-time-real-time)\n\
            \nAGENTS_ON_CALL\n\n    \n\nUnit: COUNT\n\nName in real-time metrics report:\
            \ [On contact](https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#on-call-real-time)\n\
            \nAGENTS_ON_CONTACT\n\n    \n\nUnit: COUNT\n\nName in real-time metrics\
            \ report: [On contact](https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#on-call-real-time)\n\
            \nAGENTS_ONLINE\n\n    \n\nUnit: COUNT\n\nName in real-time metrics report:\
            \ [Online](https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#online-real-time)\n\
            \nAGENTS_STAFFED\n\n    \n\nUnit: COUNT\n\nName in real-time metrics report:\
            \ [Staffed](https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#staffed-real-time)\n\
            \nCONTACTS_IN_QUEUE\n\n    \n\nUnit: COUNT\n\nName in real-time metrics\
            \ report: [In queue](https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#in-queue-real-time)\n\
            \nCONTACTS_SCHEDULED\n\n    \n\nUnit: COUNT\n\nName in real-time metrics\
            \ report: [Scheduled](https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#scheduled-real-time)\n\
            \nOLDEST_CONTACT_AGE\n\n    \n\nUnit: SECONDS\n\nWhen you use groupings,\
            \ Unit says SECONDS and the Value is returned in SECONDS.\n\nWhen you\
            \ do not use groupings, Unit says SECONDS but the Value is returned in\
            \ MILLISECONDS. For example, if you get a response like this:\n\n`{ \"\
            Metric\": { \"Name\": \"OLDEST_CONTACT_AGE\", \"Unit\": \"SECONDS\" },\
            \ \"Value\": 24113.0 `}\n\nThe actual OLDEST_CONTACT_AGE is 24 seconds.\n\
            \nWhen the filter `RoutingStepExpression` is used, this metric is still\
            \ calculated from enqueue time. For example, if a contact that has been\
            \ queued under `` for 10 seconds has expired and `` becomes active, then\
            \ `OLDEST_CONTACT_AGE` for this queue will be counted starting from 10,\
            \ not 0.\n\nName in real-time metrics report: [Oldest](https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#oldest-real-time)\n\
            \nSLOTS_ACTIVE\n\n    \n\nUnit: COUNT\n\nName in real-time metrics report:\
            \ [Active](https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#active-real-time)\n\
            \nSLOTS_AVAILABLE\n\n    \n\nUnit: COUNT\n\nName in real-time metrics\
            \ report: [Availability](https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html#availability-real-time)"
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: 'The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.


            The token expires after 5 minutes from the time it is created. Subsequent
            requests that use the token must use the same request parameters as the
            request that generated the token.'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult100'
          description: The maximum number of results to return per page.
        SortCriteria:
          allOf:
          - $ref: '#/components/schemas/CurrentMetricSortCriteriaMaxOne'
          description: "The way to sort the resulting response based on metrics. You\
            \ can enter one sort criteria. By default resources are sorted based on\
            \ `AGENTS_ONLINE`, `DESCENDING`. The metric collection is sorted based\
            \ on the input metrics.\n\nNote the following:\n\n  * Sorting on `SLOTS_ACTIVE`\
            \ and `SLOTS_AVAILABLE` is not supported."
      required:
      - InstanceId
      - Filters
      - CurrentMetrics
    GetCurrentMetricDataResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: 'If there are additional results, this is the token for the
            next set of results.


            The token expires after 5 minutes from the time it is created. Subsequent
            requests that use the token must use the same request parameters as the
            request that generated the token.'
        MetricResults:
          allOf:
          - $ref: '#/components/schemas/CurrentMetricResults'
          description: Information about the real-time metrics.
        DataSnapshotTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the metrics were retrieved and cached for
            pagination.
        ApproximateTotalCount:
          allOf:
          - $ref: '#/components/schemas/ApproximateTotalCount'
          description: The total count of the result, regardless of the current page
            size.
    GetCurrentUserDataRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        Filters:
          allOf:
          - $ref: '#/components/schemas/UserDataFilters'
          description: "The filters to apply to returned user data. You can filter\
            \ up to the following limits:\n\n  * Queues: 100\n\n  * Routing profiles:\
            \ 100\n\n  * Agents: 100\n\n  * Contact states: 9\n\n  * User hierarchy\
            \ groups: 1\n\nThe user data is retrieved for only the specified values/resources\
            \ in the filter. A maximum of one filter can be passed from queues, routing\
            \ profiles, agents, and user hierarchy groups.\n\nCurrently tagging is\
            \ only supported on the resources that are passed in the filter."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult100'
          description: The maximum number of results to return per page.
      required:
      - InstanceId
      - Filters
    GetCurrentUserDataResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
        UserDataList:
          allOf:
          - $ref: '#/components/schemas/UserDataList'
          description: A list of the user data that is returned.
        ApproximateTotalCount:
          allOf:
          - $ref: '#/components/schemas/ApproximateTotalCount'
          description: The total count of the result, regardless of the current page
            size.
    GetEffectiveHoursOfOperationsRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance.
        HoursOfOperationId:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationId'
          description: The identifier for the hours of operation.
        FromDate:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationOverrideYearMonthDayDateFormat'
          description: The Date from when the hours of operation are listed.
        ToDate:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationOverrideYearMonthDayDateFormat'
          description: The Date until when the hours of operation are listed.
      required:
      - InstanceId
      - HoursOfOperationId
      - FromDate
      - ToDate
    GetEffectiveHoursOfOperationsResponse:
      type: object
      properties:
        EffectiveHoursOfOperationList:
          allOf:
          - $ref: '#/components/schemas/EffectiveHoursOfOperationList'
          description: Information about the effective hours of operations
        TimeZone:
          allOf:
          - $ref: '#/components/schemas/TimeZone'
          description: The time zone for the hours of operation.
    GetFederationTokenRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
      required:
      - InstanceId
    GetFederationTokenResponse:
      type: object
      properties:
        Credentials:
          allOf:
          - $ref: '#/components/schemas/Credentials'
          description: The credentials to use for federation.
        SignInUrl:
          allOf:
          - $ref: '#/components/schemas/Url'
          description: The URL to sign into the user's instance.
        UserArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the user.
        UserId:
          allOf:
          - $ref: '#/components/schemas/AgentResourceId'
          description: The identifier for the user. This can be the ID or the ARN
            of the user.
    GetFlowAssociationRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: "The identifier of the resource.\n\n  * Amazon Web Services\
            \ End User Messaging SMS phone number ARN when using `SMS_PHONE_NUMBER`\n\
            \n  * Amazon Web Services End User Messaging Social phone number ARN when\
            \ using `WHATSAPP_MESSAGING_PHONE_NUMBER`"
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/FlowAssociationResourceType'
          description: A valid resource type.
      required:
      - InstanceId
      - ResourceId
      - ResourceType
    GetFlowAssociationResponse:
      type: object
      properties:
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The identifier of the resource.
        FlowId:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The identifier of the flow.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/FlowAssociationResourceType'
          description: A valid resource type.
    GetMetricDataRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        StartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp, in UNIX Epoch time format, at which to start
            the reporting interval for the retrieval of historical metrics data. The
            time must be specified using a multiple of 5 minutes, such as 10:05, 10:10,
            10:15.


            The start time cannot be earlier than 24 hours before the time of the
            request. Historical metrics are available only for 24 hours.'
        EndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp, in UNIX Epoch time format, at which to end
            the reporting interval for the retrieval of historical metrics data. The
            time must be specified using an interval of 5 minutes, such as 11:00,
            11:05, 11:10, and must be later than the start time timestamp.


            The time range between the start and end time must be less than 24 hours.'
        Filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          description: 'The queues, up to 100, or channels, to use to filter the metrics
            returned. Metric data is retrieved only for the resources associated with
            the queues or channels included in the filter. You can include both queue
            IDs and queue ARNs in the same request. VOICE, CHAT, and TASK channels
            are supported.


            RoutingStepExpression is not a valid filter for GetMetricData and we recommend
            switching to GetMetricDataV2 for more up-to-date features.


            To filter by `Queues`, enter the queue ID/ARN, not the name of the queue.'
        Groupings:
          allOf:
          - $ref: '#/components/schemas/Groupings'
          description: 'The grouping applied to the metrics returned. For example,
            when results are grouped by queue, the metrics returned are grouped by
            queue. The values returned apply to the metrics for each queue rather
            than aggregated for all queues.


            If no grouping is specified, a summary of metrics for all queues is returned.


            RoutingStepExpression is not a valid filter for GetMetricData and we recommend
            switching to GetMetricDataV2 for more up-to-date features.'
        HistoricalMetrics:
          allOf:
          - $ref: '#/components/schemas/HistoricalMetrics'
          description: "The metrics to retrieve. Specify the name, unit, and statistic\
            \ for each metric. The following historical metrics are available. For\
            \ a description of each metric, see [Historical Metrics Definitions](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html)\
            \ in the _Amazon Connect Administrator Guide_.\n\nThis API does not support\
            \ a contacts incoming metric (there's no CONTACTS_INCOMING metric missing\
            \ from the documented list).\n\nABANDON_TIME\n\n    \n\nUnit: SECONDS\n\
            \nStatistic: AVG\n\nAFTER_CONTACT_WORK_TIME\n\n    \n\nUnit: SECONDS\n\
            \nStatistic: AVG\n\nAPI_CONTACTS_HANDLED\n\n    \n\nUnit: COUNT\n\nStatistic:\
            \ SUM\n\nCALLBACK_CONTACTS_HANDLED\n\n    \n\nUnit: COUNT\n\nStatistic:\
            \ SUM\n\nCONTACTS_ABANDONED\n\n    \n\nUnit: COUNT\n\nStatistic: SUM\n\
            \nCONTACTS_AGENT_HUNG_UP_FIRST\n\n    \n\nUnit: COUNT\n\nStatistic: SUM\n\
            \nCONTACTS_CONSULTED\n\n    \n\nUnit: COUNT\n\nStatistic: SUM\n\nCONTACTS_HANDLED\n\
            \n    \n\nUnit: COUNT\n\nStatistic: SUM\n\nCONTACTS_HANDLED_INCOMING\n\
            \n    \n\nUnit: COUNT\n\nStatistic: SUM\n\nCONTACTS_HANDLED_OUTBOUND\n\
            \n    \n\nUnit: COUNT\n\nStatistic: SUM\n\nCONTACTS_HOLD_ABANDONS\n\n\
            \    \n\nUnit: COUNT\n\nStatistic: SUM\n\nCONTACTS_MISSED\n\n    \n\n\
            Unit: COUNT\n\nStatistic: SUM\n\nCONTACTS_QUEUED\n\n    \n\nUnit: COUNT\n\
            \nStatistic: SUM\n\nCONTACTS_TRANSFERRED_IN\n\n    \n\nUnit: COUNT\n\n\
            Statistic: SUM\n\nCONTACTS_TRANSFERRED_IN_FROM_QUEUE\n\n    \n\nUnit:\
            \ COUNT\n\nStatistic: SUM\n\nCONTACTS_TRANSFERRED_OUT\n\n    \n\nUnit:\
            \ COUNT\n\nStatistic: SUM\n\nCONTACTS_TRANSFERRED_OUT_FROM_QUEUE\n\n \
            \   \n\nUnit: COUNT\n\nStatistic: SUM\n\nHANDLE_TIME\n\n    \n\nUnit:\
            \ SECONDS\n\nStatistic: AVG\n\nHOLD_TIME\n\n    \n\nUnit: SECONDS\n\n\
            Statistic: AVG\n\nINTERACTION_AND_HOLD_TIME\n\n    \n\nUnit: SECONDS\n\
            \nStatistic: AVG\n\nINTERACTION_TIME\n\n    \n\nUnit: SECONDS\n\nStatistic:\
            \ AVG\n\nOCCUPANCY\n\n    \n\nUnit: PERCENT\n\nStatistic: AVG\n\nQUEUE_ANSWER_TIME\n\
            \n    \n\nUnit: SECONDS\n\nStatistic: AVG\n\nQUEUED_TIME\n\n    \n\nUnit:\
            \ SECONDS\n\nStatistic: MAX\n\nSERVICE_LEVEL\n\n    \n\nYou can include\
            \ up to 20 SERVICE_LEVEL metrics in a request.\n\nUnit: PERCENT\n\nStatistic:\
            \ AVG\n\nThreshold: For `ThresholdValue`, enter any whole number from\
            \ 1 to 604800 (inclusive), in seconds. For `Comparison`, you must enter\
            \ `LT` (for \"Less than\")."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult100'
          description: The maximum number of results to return per page.
      required:
      - InstanceId
      - StartTime
      - EndTime
      - Filters
      - HistoricalMetrics
    GetMetricDataResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: 'If there are additional results, this is the token for the
            next set of results.


            The token expires after 5 minutes from the time it is created. Subsequent
            requests that use the token must use the same request parameters as the
            request that generated the token.'
        MetricResults:
          allOf:
          - $ref: '#/components/schemas/HistoricalMetricResults'
          description: 'Information about the historical metrics.


            If no grouping is specified, a summary of metric data is returned.'
    GetMetricDataV2Request:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the resource. This includes
            the `instanceId` an Amazon Connect instance.
        StartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp, in UNIX Epoch time format, at which to start
            the reporting interval for the retrieval of historical metrics data. The
            time must be before the end time timestamp. The start and end time depends
            on the `IntervalPeriod` selected. By default the time range between start
            and end time is 35 days. Historical metrics are available for 3 months.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp, in UNIX Epoch time format, at which to end the
            reporting interval for the retrieval of historical metrics data. The time
            must be later than the start time timestamp. It cannot be later than the
            current timestamp.
        Interval:
          allOf:
          - $ref: '#/components/schemas/IntervalDetails'
          description: "The interval period and timezone to apply to returned metrics.\n\
            \n  * `IntervalPeriod`: An aggregated grouping applied to request metrics.\
            \ Valid `IntervalPeriod` values are: `FIFTEEN_MIN` | `THIRTY_MIN` | `HOUR`\
            \ | `DAY` | `WEEK` | `TOTAL`. \n\nFor example, if `IntervalPeriod` is\
            \ selected `THIRTY_MIN`, `StartTime` and `EndTime` differs by 1 day, then\
            \ Amazon Connect returns 48 results in the response. Each result is aggregated\
            \ by the THIRTY_MIN period. By default Amazon Connect aggregates results\
            \ based on the `TOTAL` interval period.\n\nThe following list describes\
            \ restrictions on `StartTime` and `EndTime` based on which `IntervalPeriod`\
            \ is requested.\n\n    * `FIFTEEN_MIN`: The difference between `StartTime`\
            \ and `EndTime` must be less than 3 days.\n\n    * `THIRTY_MIN`: The difference\
            \ between `StartTime` and `EndTime` must be less than 3 days.\n\n    *\
            \ `HOUR`: The difference between `StartTime` and `EndTime` must be less\
            \ than 3 days.\n\n    * `DAY`: The difference between `StartTime` and\
            \ `EndTime` must be less than 35 days.\n\n    * `WEEK`: The difference\
            \ between `StartTime` and `EndTime` must be less than 35 days.\n\n   \
            \ * `TOTAL`: The difference between `StartTime` and `EndTime` must be\
            \ less than 35 days.\n\n  * `TimeZone`: The timezone applied to requested\
            \ metrics."
        Filters:
          allOf:
          - $ref: '#/components/schemas/FiltersV2List'
          description: "The filters to apply to returned metrics. You can filter on\
            \ the following resources:\n\n  * Agents\n\n  * Campaigns\n\n  * Channels\n\
            \n  * Feature\n\n  * Queues\n\n  * Routing profiles\n\n  * Routing step\
            \ expression\n\n  * User hierarchy groups\n\nAt least one filter must\
            \ be passed from queues, routing profiles, agents, or user hierarchy groups.\n\
            \nFor metrics for outbound campaigns analytics, you can also use campaigns\
            \ to satisfy at least one filter requirement.\n\nTo filter by phone number,\
            \ see [Create a historical metrics report](https://docs.aws.amazon.com/connect/latest/adminguide/create-historical-metrics-report.html)\
            \ in the _Amazon Connect Administrator Guide_.\n\nNote the following limits:\n\
            \n  * **Filter keys** : A maximum of 5 filter keys are supported in a\
            \ single request. Valid filter keys: `AGENT` | `AGENT_HIERARCHY_LEVEL_ONE`\
            \ | `AGENT_HIERARCHY_LEVEL_TWO` | `AGENT_HIERARCHY_LEVEL_THREE` | `AGENT_HIERARCHY_LEVEL_FOUR`\
            \ | `AGENT_HIERARCHY_LEVEL_FIVE` | `ANSWERING_MACHINE_DETECTION_STATUS`\
            \ | ` BOT_ID` | `BOT_ALIAS` | `BOT_VERSION` | `BOT_LOCALE` | `BOT_INTENT_NAME`\
            \ | `CAMPAIGN` | `CAMPAIGN_DELIVERY_EVENT_TYPE` |`CASE_TEMPLATE_ARN` |\
            \ `CASE_STATUS` | `CHANNEL` | `contact/segmentAttributes/connect:Subtype`\
            \ | `DISCONNECT_REASON` | `EVALUATION_FORM` | `EVALUATION_SECTION` | `EVALUATION_QUESTION`\
            \ | `EVALUATION_SOURCE` | `FEATURE` | `FLOW_ACTION_ID` | `FLOW_TYPE` |\
            \ `FLOWS_MODULE_RESOURCE_ID` | `FLOWS_NEXT_RESOURCE_ID` | `FLOWS_NEXT_RESOURCE_QUEUE_ID`\
            \ | `FLOWS_OUTCOME_TYPE` | `FLOWS_RESOURCE_ID` | `FORM_VERSION` | `INITIATION_METHOD`\
            \ | `INVOKING_RESOURCE_PUBLISHED_TIMESTAMP` | `INVOKING_RESOURCE_TYPE`\
            \ | `PARENT_FLOWS_RESOURCE_ID` | `RESOURCE_PUBLISHED_TIMESTAMP` | `ROUTING_PROFILE`\
            \ | `ROUTING_STEP_EXPRESSION` | `QUEUE` | `Q_CONNECT_ENABLED` | \n\n \
            \ * **Filter values** : A maximum of 100 filter values are supported in\
            \ a single request. VOICE, CHAT, and TASK are valid `filterValue` for\
            \ the CHANNEL filter key. They do not count towards limitation of 100\
            \ filter values. For example, a GetMetricDataV2 request can filter by\
            \ 50 queues, 35 agents, and 15 routing profiles for a total of 100 filter\
            \ values, along with 3 channel filters. \n\n`contact_lens_conversational_analytics`\
            \ is a valid filterValue for the `FEATURE` filter key. It is available\
            \ only to contacts analyzed by Contact Lens conversational analytics.\n\
            \n`connect:Chat`, `connect:SMS`, `connect:Telephony`, and `connect:WebRTC`\
            \ are valid `filterValue` examples (not exhaustive) for the `contact/segmentAttributes/connect:Subtype\
            \ filter` key.\n\n`ROUTING_STEP_EXPRESSION` is a valid filter key with\
            \ a filter value up to 3000 length. This filter is case and order sensitive.\
            \ JSON string fields must be sorted in ascending order and JSON array\
            \ order should be kept as is.\n\n`Q_CONNECT_ENABLED`. TRUE and FALSE are\
            \ the only valid filterValues for the `Q_CONNECT_ENABLED` filter key.\n\
            \n    * TRUE includes all contacts that had Amazon Q in Connect enabled\
            \ as part of the flow.\n\n    * FALSE includes all contacts that did not\
            \ have Amazon Q in Connect enabled as part of the flow\n\nThis filter\
            \ is available only for contact record-driven metrics.\n\n[Campaign](https://docs.aws.amazon.com/connect/latest/APIReference/API_connect-outbound-campaigns_Campaign.html)\
            \ ARNs are valid `filterValues` for the `CAMPAIGN` filter key."
        Groupings:
          allOf:
          - $ref: '#/components/schemas/GroupingsV2'
          description: 'The grouping applied to the metrics that are returned. For
            example, when results are grouped by queue, the metrics returned are grouped
            by queue. The values that are returned apply to the metrics for each queue.
            They are not aggregated for all queues.


            If no grouping is specified, a summary of all metrics is returned.


            Valid grouping keys: `AGENT` | `AGENT_HIERARCHY_LEVEL_ONE` | `AGENT_HIERARCHY_LEVEL_TWO`
            | `AGENT_HIERARCHY_LEVEL_THREE` | `AGENT_HIERARCHY_LEVEL_FOUR` | `AGENT_HIERARCHY_LEVEL_FIVE`
            | `ANSWERING_MACHINE_DETECTION_STATUS` | `BOT_ID` | `BOT_ALIAS` | `BOT_VERSION`
            | `BOT_LOCALE` | `BOT_INTENT_NAME` | `CAMPAIGN` | `CAMPAIGN_DELIVERY_EVENT_TYPE`
            | `CASE_TEMPLATE_ARN` | `CASE_STATUS` | `CHANNEL` | `contact/segmentAttributes/connect:Subtype`
            | `DISCONNECT_REASON` | `EVALUATION_FORM` | `EVALUATION_SECTION` | `EVALUATION_QUESTION`
            | `EVALUATION_SOURCE` | `FLOWS_RESOURCE_ID` | `FLOWS_MODULE_RESOURCE_ID`
            | `FLOW_ACTION_ID` | `FLOW_TYPE` | `FLOWS_OUTCOME_TYPE` | `FORM_VERSION`
            | `INITIATION_METHOD` | `INVOKING_RESOURCE_PUBLISHED_TIMESTAMP` | `INVOKING_RESOURCE_TYPE`
            | `PARENT_FLOWS_RESOURCE_ID` | `Q_CONNECT_ENABLED` | `QUEUE` | `RESOURCE_PUBLISHED_TIMESTAMP`
            | `ROUTING_PROFILE` | `ROUTING_STEP_EXPRESSION`


            Type: Array of strings


            Array Members: Maximum number of 4 items


            Required: No'
        Metrics:
          allOf:
          - $ref: '#/components/schemas/MetricsV2'
          description: "The metrics to retrieve. Specify the name, groupings, and\
            \ filters for each metric. The following historical metrics are available.\
            \ For a description of each metric, see [Historical metrics definitions](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html)\
            \ in the _Amazon Connect Administrator Guide_.\n\nABANDONMENT_RATE\n\n\
            \    \n\nUnit: Percent\n\nValid groupings and filters: Queue, Channel,\
            \ Routing Profile, Agent, Agent Hierarchy, Feature, contact/segmentAttributes/connect:Subtype,\
            \ Q in Connect\n\nUI name: [Abandonment rate](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#abandonment-rate-historical)\n\
            \nAGENT_ADHERENT_TIME\n\n    \n\nThis metric is available only in Amazon\
            \ Web Services Regions where [Forecasting, capacity planning, and scheduling](https://docs.aws.amazon.com/connect/latest/adminguide/regions.html#optimization_region)\
            \ is available.\n\nUnit: Seconds\n\nValid groupings and filters: Queue,\
            \ Channel, Routing Profile, Agent, Agent Hierarchy\n\nUI name: [Adherent\
            \ time](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#adherent-time-historical)\n\
            \nAGENT_ANSWER_RATE\n\n    \n\nUnit: Percent\n\nValid groupings and filters:\
            \ Queue, Channel, Routing Profile, Agent, Agent Hierarchy\n\nUI name:\
            \ [Agent answer rate](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#agent-answer-rate-historical)\n\
            \nAGENT_NON_ADHERENT_TIME\n\n    \n\nUnit: Seconds\n\nValid groupings\
            \ and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy\n\
            \nUI name: [Non-adherent time](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#non-adherent-time)\n\
            \nAGENT_NON_RESPONSE\n\n    \n\nUnit: Count\n\nValid groupings and filters:\
            \ Queue, Channel, Routing Profile, Agent, Agent Hierarchy\n\nUI name:\
            \ [Agent non-response](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#agent-non-response)\n\
            \nAGENT_NON_RESPONSE_WITHOUT_CUSTOMER_ABANDONS\n\n    \n\nUnit: Count\n\
            \nValid groupings and filters: Queue, Channel, Routing Profile, Agent,\
            \ Agent Hierarchy\n\nData for this metric is available starting from October\
            \ 1, 2023 0:00:00 GMT.\n\nUI name: [Agent non-response without customer\
            \ abandons](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#agent-nonresponse-no-abandon-historical)\n\
            \nAGENT_OCCUPANCY\n\n    \n\nUnit: Percentage\n\nValid groupings and filters:\
            \ Routing Profile, Agent, Agent Hierarchy\n\nUI name: [Occupancy](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#occupancy-historical)\n\
            \nAGENT_SCHEDULE_ADHERENCE\n\n    \n\nThis metric is available only in\
            \ Amazon Web Services Regions where [Forecasting, capacity planning, and\
            \ scheduling](https://docs.aws.amazon.com/connect/latest/adminguide/regions.html#optimization_region)\
            \ is available.\n\nUnit: Percent\n\nValid groupings and filters: Queue,\
            \ Channel, Routing Profile, Agent, Agent Hierarchy\n\nUI name: [Adherence](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#adherence-historical)\n\
            \nAGENT_SCHEDULED_TIME\n\n    \n\nThis metric is available only in Amazon\
            \ Web Services Regions where [Forecasting, capacity planning, and scheduling](https://docs.aws.amazon.com/connect/latest/adminguide/regions.html#optimization_region)\
            \ is available.\n\nUnit: Seconds\n\nValid groupings and filters: Queue,\
            \ Channel, Routing Profile, Agent, Agent Hierarchy\n\nUI name: [Scheduled\
            \ time](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#scheduled-time-historical)\n\
            \nAVG_ABANDON_TIME\n\n    \n\nUnit: Seconds\n\nValid groupings and filters:\
            \ Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature, contact/segmentAttributes/connect:Subtype,\
            \ Q in Connect\n\nUI name: [Average queue abandon time](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#average-queue-abandon-time-historical)\n\
            \nAVG_ACTIVE_TIME\n\n    \n\nUnit: Seconds\n\nValid groupings and filters:\
            \ Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Q in Connect\n\
            \nUI name: [Average active time](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#average-active-time-historical)\n\
            \nAVG_AFTER_CONTACT_WORK_TIME\n\n    \n\nUnit: Seconds\n\nValid metric\
            \ filter key: `INITIATION_METHOD`\n\nValid groupings and filters: Queue,\
            \ Channel, Routing Profile, Agent, Agent Hierarchy, Feature, contact/segmentAttributes/connect:Subtype,\
            \ Q in Connect\n\nUI name: [Average after contact work time](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#average-acw-time-historical)\n\
            \nFeature is a valid filter but not a valid grouping.\n\nAVG_AGENT_CONNECTING_TIME\n\
            \n    \n\nUnit: Seconds\n\nValid metric filter key: `INITIATION_METHOD`.\
            \ For now, this metric only supports the following as `INITIATION_METHOD`:\
            \ `INBOUND` | `OUTBOUND` | `CALLBACK` | `API`\n\nValid groupings and filters:\
            \ Queue, Channel, Routing Profile, Agent, Agent Hierarchy\n\nUI name:\
            \ [Average agent API connecting time](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#htm-avg-agent-api-connecting-time)\n\
            \nThe `Negate` key in metric-level filters is not applicable for this\
            \ metric.\n\nAVG_AGENT_PAUSE_TIME\n\n    \n\nUnit: Seconds\n\nValid groupings\
            \ and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy,\
            \ Q in Connect\n\nUI name: [Average agent pause time](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#average-agent-pause-time-historical)\n\
            \nAVG_BOT_CONVERSATION_TIME\n\n    \n\nUnit: Seconds\n\nValid groupings\
            \ and filters: Channel, contact/segmentAttributes/connect:Subtype, Bot\
            \ ID, Bot alias, Bot version, Bot locale, Flows resource ID, Flows module\
            \ resource ID, Flow type, Flow action ID, Invoking resource published\
            \ timestamp, Initiation method, Invoking resource type, Parent flows resource\
            \ ID\n\nUI name: [Average bot conversation time](https://docs.aws.amazon.com/connect/latest/adminguide/bot-metrics.html#average-bot-conversation-time-metric)\n\
            \nAVG_BOT_CONVERSATION_TURNS\n\n    \n\nUnit: Count\n\nValid groupings\
            \ and filters: Channel, contact/segmentAttributes/connect:Subtype, Bot\
            \ ID, Bot alias, Bot version, Bot locale, Flows resource ID, Flows module\
            \ resource ID, Flow type, Flow action ID, Invoking resource published\
            \ timestamp, Initiation method, Invoking resource type, Parent flows resource\
            \ ID\n\nUI name: [Average bot conversation turns](https://docs.aws.amazon.com/connect/latest/adminguide/bot-metrics.html#average-bot-conversation-turns-metric)\n\
            \nAVG_CASE_RELATED_CONTACTS\n\n    \n\nUnit: Count\n\nRequired filter\
            \ key: CASE_TEMPLATE_ARN\n\nValid groupings and filters: CASE_TEMPLATE_ARN,\
            \ CASE_STATUS\n\nUI name: [Average contacts per case](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#average-contacts-case-historical)\n\
            \nAVG_CASE_RESOLUTION_TIME\n\n    \n\nUnit: Seconds\n\nRequired filter\
            \ key: CASE_TEMPLATE_ARN\n\nValid groupings and filters: CASE_TEMPLATE_ARN,\
            \ CASE_STATUS\n\nUI name: [Average case resolution time](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#average-case-resolution-time-historical)\n\
            \nAVG_CONTACT_DURATION\n\n    \n\nUnit: Seconds\n\nValid groupings and\
            \ filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature,\
            \ contact/segmentAttributes/connect:Subtype, Q in Connect\n\nUI name:\
            \ [Average contact duration](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#average-contact-duration-historical)\n\
            \nFeature is a valid filter but not a valid grouping.\n\nAVG_CONVERSATION_DURATION\n\
            \n    \n\nUnit: Seconds\n\nValid groupings and filters: Queue, Channel,\
            \ Routing Profile, Agent, Agent Hierarchy, Feature, contact/segmentAttributes/connect:Subtype,\
            \ Q in Connect\n\nUI name: [Average conversation duration](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#average-conversation-duration-historical)\n\
            \nAVG_DIALS_PER_MINUTE\n\n    \n\nThis metric is available only for outbound\
            \ campaigns that use the agent assisted voice and automated voice delivery\
            \ modes.\n\nUnit: Count\n\nValid groupings and filters: Agent, Campaign,\
            \ Queue, Routing Profile\n\nUI name: [Average dials per minute](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#average-dials-historical)\n\
            \nAVG_EVALUATION_SCORE\n\n    \n\nUnit: Percent\n\nValid groupings and\
            \ filters: Agent, Agent Hierarchy, Channel, Evaluation Form ID, Evaluation\
            \ Section ID, Evaluation Question ID, Evaluation Source, Form Version,\
            \ Queue, Routing Profile\n\nUI name: [Average agent evaluation score](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#average-agent-evaluation-score-historical)\n\
            \nAVG_FLOW_TIME\n\n    \n\nUnit: Seconds\n\nValid groupings and filters:\
            \ Channel, contact/segmentAttributes/connect:Subtype, Flow type, Flows\
            \ module resource ID, Flows next resource ID, Flows next resource queue\
            \ ID, Flows outcome type, Flows resource ID, Initiation method, Resource\
            \ published timestamp\n\nUI name: [Average flow time](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#average-flow-time-historical)\n\
            \nAVG_GREETING_TIME_AGENT\n\n    \n\nThis metric is available only for\
            \ contacts analyzed by Contact Lens conversational analytics.\n\nUnit:\
            \ Seconds\n\nValid groupings and filters: Queue, Channel, Routing Profile,\
            \ Agent, Agent Hierarchy, contact/segmentAttributes/connect:Subtype, Q\
            \ in Connect\n\nUI name: [Average agent greeting time](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#average-greeting-time-agent-historical)\n\
            \nAVG_HANDLE_TIME\n\n    \n\nUnit: Seconds\n\nValid groupings and filters:\
            \ Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature, contact/segmentAttributes/connect:Subtype,\
            \ RoutingStepExpression\n\nUI name: [Average handle time](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#average-handle-time-historical)\n\
            \nFeature is a valid filter but not a valid grouping.\n\nAVG_HOLD_TIME\n\
            \n    \n\nUnit: Seconds\n\nValid groupings and filters: Queue, Channel,\
            \ Routing Profile, Agent, Agent Hierarchy, Feature, contact/segmentAttributes/connect:Subtype,\
            \ Q in Connect\n\nUI name: [Average customer hold time](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#average-customer-hold-time-historical)\n\
            \nFeature is a valid filter but not a valid grouping.\n\nAVG_HOLD_TIME_ALL_CONTACTS\n\
            \n    \n\nUnit: Seconds\n\nValid groupings and filters: Queue, Channel,\
            \ Routing Profile, Agent, Agent Hierarchy, contact/segmentAttributes/connect:Subtype,\
            \ Q in Connect\n\nUI name: [Average customer hold time all contacts](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#avg-customer-hold-time-all-contacts-historical)\n\
            \nAVG_HOLDS\n\n    \n\nUnit: Count\n\nValid groupings and filters: Queue,\
            \ Channel, Routing Profile, Agent, Agent Hierarchy, Feature, contact/segmentAttributes/connect:Subtype,\
            \ Q in Connect\n\nUI name: [Average holds](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#average-holds-historical)\n\
            \nFeature is a valid filter but not a valid grouping.\n\nAVG_INTERACTION_AND_HOLD_TIME\n\
            \n    \n\nUnit: Seconds\n\nValid groupings and filters: Queue, Channel,\
            \ Routing Profile, Agent, Agent Hierarchy, contact/segmentAttributes/connect:Subtype,\
            \ Q in Connect\n\nUI name: [Average agent interaction and customer hold\
            \ time](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#average-agent-interaction-customer-hold-time-historical)\n\
            \nAVG_INTERACTION_TIME\n\n    \n\nUnit: Seconds\n\nValid metric filter\
            \ key: `INITIATION_METHOD`\n\nValid groupings and filters: Queue, Channel,\
            \ Routing Profile, Feature, contact/segmentAttributes/connect:Subtype,\
            \ Q in Connect\n\nUI name: [Average agent interaction time](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#average-agent-interaction-time-historical)\n\
            \nFeature is a valid filter but not a valid grouping.\n\nAVG_INTERRUPTIONS_AGENT\n\
            \n    \n\nThis metric is available only for contacts analyzed by Contact\
            \ Lens conversational analytics.\n\nUnit: Count\n\nValid groupings and\
            \ filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, contact/segmentAttributes/connect:Subtype,\
            \ Q in Connect\n\nUI name: [Average agent interruptions](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#average-interruptions-agent-historical)\n\
            \nAVG_INTERRUPTION_TIME_AGENT\n\n    \n\nThis metric is available only\
            \ for contacts analyzed by Contact Lens conversational analytics.\n\n\
            Unit: Seconds\n\nValid groupings and filters: Queue, Channel, Routing\
            \ Profile, Agent, Agent Hierarchy, contact/segmentAttributes/connect:Subtype,\
            \ Q in Connect\n\nUI name: [Average agent interruption time](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#average-interruptions-time-agent-historical)\n\
            \nAVG_NON_TALK_TIME\n\n    \n\nThis metric is available only for contacts\
            \ analyzed by Contact Lens conversational analytics.\n\nUnit: Seconds\n\
            \nValid groupings and filters: Queue, Channel, Routing Profile, Agent,\
            \ Agent Hierarchy, contact/segmentAttributes/connect:Subtype, Q in Connect\n\
            \nUI name: [Average non-talk time](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html##average-non-talk-time-historical)\n\
            \nAVG_QUEUE_ANSWER_TIME\n\n    \n\nUnit: Seconds\n\nValid groupings and\
            \ filters: Queue, Channel, Routing Profile, Feature, contact/segmentAttributes/connect:Subtype,\
            \ Q in Connect\n\nUI name: [Average queue answer time](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#average-queue-answer-time-historical)\n\
            \nFeature is a valid filter but not a valid grouping.\n\nAVG_RESOLUTION_TIME\n\
            \n    \n\nUnit: Seconds\n\nValid groupings and filters: Queue, Channel,\
            \ Routing Profile, contact/segmentAttributes/connect:Subtype, Q in Connect\n\
            \nUI name: [Average resolution time](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#average-resolution-time-historical)\n\
            \nAVG_TALK_TIME\n\n    \n\nThis metric is available only for contacts\
            \ analyzed by Contact Lens conversational analytics.\n\nUnit: Seconds\n\
            \nValid groupings and filters: Queue, Channel, Routing Profile, Agent,\
            \ Agent Hierarchy, contact/segmentAttributes/connect:Subtype, Q in Connect\n\
            \nUI name: [Average talk time](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#average-talk-time-historical)\n\
            \nAVG_TALK_TIME_AGENT\n\n    \n\nThis metric is available only for contacts\
            \ analyzed by Contact Lens conversational analytics.\n\nUnit: Seconds\n\
            \nValid groupings and filters: Queue, Channel, Routing Profile, Agent,\
            \ Agent Hierarchy, contact/segmentAttributes/connect:Subtype, Q in Connect\n\
            \nUI name: [Average agent talk time](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#average-talk-time-agent-historical)\n\
            \nAVG_TALK_TIME_CUSTOMER\n\n    \n\nThis metric is available only for\
            \ contacts analyzed by Contact Lens conversational analytics.\n\nUnit:\
            \ Seconds\n\nValid groupings and filters: Queue, Channel, Routing Profile,\
            \ Agent, Agent Hierarchy, contact/segmentAttributes/connect:Subtype, Q\
            \ in Connect\n\nUI name: [Average customer talk time](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#average-talk-time-customer-historical)\n\
            \nAVG_WAIT_TIME_AFTER_CUSTOMER_CONNECTION\n\n    \n\nThis metric is available\
            \ only for outbound campaigns that use the agent assisted voice and automated\
            \ voice delivery modes.\n\nUnit: Seconds\n\nValid groupings and filters:\
            \ Campaign\n\nUI name: [Average wait time after customer connection](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#average-wait-time-historical)\n\
            \nAVG_WEIGHTED_EVALUATION_SCORE\n\n    \n\nUnit: Percent\n\nValid groupings\
            \ and filters: Agent, Agent Hierarchy, Channel, Evaluation Form Id, Evaluation\
            \ Section ID, Evaluation Question ID, Evaluation Source, Form Version,\
            \ Queue, Routing Profile\n\nUI name: [Average weighted agent evaluation\
            \ score](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#average-weighted-agent-evaluation-score-historical)\n\
            \nBOT_CONVERSATIONS_COMPLETED\n\n    \n\nUnit: Count\n\nValid groupings\
            \ and filters: Channel, contact/segmentAttributes/connect:Subtype, Bot\
            \ ID, Bot alias, Bot version, Bot locale, Flows resource ID, Flows module\
            \ resource ID, Flow type, Flow action ID, Invoking resource published\
            \ timestamp, Initiation method, Invoking resource type, Parent flows resource\
            \ ID\n\nUI name: [Bot conversations](https://docs.aws.amazon.com/connect/latest/adminguide/bot-metrics.html#bot-conversations-completed-metric)\n\
            \nBOT_INTENTS_COMPLETED\n\n    \n\nUnit: Count\n\nValid groupings and\
            \ filters: Channel, contact/segmentAttributes/connect:Subtype, Bot ID,\
            \ Bot alias, Bot version, Bot locale, Bot intent name, Flows resource\
            \ ID, Flows module resource ID, Flow type, Flow action ID, Invoking resource\
            \ published timestamp, Initiation method, Invoking resource type, Parent\
            \ flows resource ID\n\nUI name: [Bot intents completed](https://docs.aws.amazon.com/connect/latest/adminguide/bot-metrics.html#bot-intents-completed-metric)\n\
            \nCAMPAIGN_CONTACTS_ABANDONED_AFTER_X\n\n    \n\nThis metric is available\
            \ only for outbound campaigns using the agent assisted voice and automated\
            \ voice delivery modes.\n\nUnit: Count\n\nValid groupings and filters:\
            \ Agent, Campaign\n\nThreshold: For `ThresholdValue`, enter any whole\
            \ number from 1 to 604800 (inclusive), in seconds. For `Comparison`, you\
            \ must enter `GT` (for _Greater than_).\n\nUI name: [Campaign contacts\
            \ abandoned after X](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#campaign-contacts-abandoned-historical)\n\
            \nCAMPAIGN_CONTACTS_ABANDONED_AFTER_X_RATE\n\n    \n\nThis metric is available\
            \ only for outbound campaigns using the agent assisted voice and automated\
            \ voice delivery modes.\n\nUnit: Percent\n\nValid groupings and filters:\
            \ Agent, Campaign\n\nThreshold: For `ThresholdValue`, enter any whole\
            \ number from 1 to 604800 (inclusive), in seconds. For `Comparison`, you\
            \ must enter `GT` (for _Greater than_).\n\nUI name: [Campaign contacts\
            \ abandoned after X rate](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#campaign-contacts-abandoned-rate-historical)\n\
            \nCAMPAIGN_INTERACTIONS\n\n    \n\nThis metric is available only for outbound\
            \ campaigns using the email delivery mode.\n\nUnit: Count\n\nValid metric\
            \ filter key: CAMPAIGN_INTERACTION_EVENT_TYPE\n\nValid groupings and filters:\
            \ Campaign\n\nUI name: [Campaign interactions](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#campaign-interactions-historical)\n\
            \nCAMPAIGN_SEND_ATTEMPTS\n\n    \n\nThis metric is available only for\
            \ outbound campaigns.\n\nUnit: Count\n\nValid groupings and filters: Campaign,\
            \ Channel, contact/segmentAttributes/connect:Subtype\n\nUI name: [Campaign\
            \ send attempts](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#campaign-send-attempts-historical)\n\
            \nCASES_CREATED\n\n    \n\nUnit: Count\n\nRequired filter key: CASE_TEMPLATE_ARN\n\
            \nValid groupings and filters: CASE_TEMPLATE_ARN, CASE_STATUS\n\nUI name:\
            \ [Cases created](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#cases-created-historical)\n\
            \nCONTACTS_CREATED\n\n    \n\nUnit: Count\n\nValid metric filter key:\
            \ `INITIATION_METHOD`\n\nValid groupings and filters: Queue, Channel,\
            \ Routing Profile, Feature, contact/segmentAttributes/connect:Subtype,\
            \ Q in Connect\n\nUI name: [Contacts created](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#contacts-created-historical)\n\
            \nFeature is a valid filter but not a valid grouping.\n\nCONTACTS_HANDLED\n\
            \n    \n\nUnit: Count\n\nValid metric filter key: `INITIATION_METHOD`,\
            \ `DISCONNECT_REASON`\n\nValid groupings and filters: Queue, Channel,\
            \ Routing Profile, Agent, Agent Hierarchy, Feature, contact/segmentAttributes/connect:Subtype,\
            \ RoutingStepExpression, Q in Connect\n\nUI name: [API contacts handled](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#api-contacts-handled-historical)\n\
            \nFeature is a valid filter but not a valid grouping.\n\nCONTACTS_HANDLED_BY_CONNECTED_TO_AGENT\n\
            \n    \n\nUnit: Count\n\nValid metric filter key: `INITIATION_METHOD`\n\
            \nValid groupings and filters: Queue, Channel, Agent, Agent Hierarchy,\
            \ contact/segmentAttributes/connect:Subtype, Q in Connect\n\nUI name:\
            \ [Contacts handled (connected to agent timestamp)](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#contacts-handled-by-connected-to-agent-historical)\n\
            \nCONTACTS_HOLD_ABANDONS\n\n    \n\nUnit: Count\n\nValid groupings and\
            \ filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, contact/segmentAttributes/connect:Subtype,\
            \ Q in Connect\n\nUI name: [Contacts hold disconnect](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#contacts-handled-by-connected-to-agent-historical)\n\
            \nCONTACTS_ON_HOLD_AGENT_DISCONNECT\n\n    \n\nUnit: Count\n\nValid groupings\
            \ and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy,\
            \ Q in Connect\n\nUI name: [Contacts hold agent disconnect](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#contacts-hold-agent-disconnect-historical)\n\
            \nCONTACTS_ON_HOLD_CUSTOMER_DISCONNECT\n\n    \n\nUnit: Count\n\nValid\
            \ groupings and filters: Queue, Channel, Routing Profile, Agent, Agent\
            \ Hierarchy, Q in Connect\n\nUI name: [Contacts hold customer disconnect](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#contacts-hold-customer-disconnect-historical)\n\
            \nCONTACTS_PUT_ON_HOLD\n\n    \n\nUnit: Count\n\nValid groupings and filters:\
            \ Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Q in Connect\n\
            \nUI name: [Contacts put on hold](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#contacts-hold-customer-disconnect-historical)\n\
            \nCONTACTS_TRANSFERRED_OUT_EXTERNAL\n\n    \n\nUnit: Count\n\nValid groupings\
            \ and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy,\
            \ Q in Connect\n\nUI name: [Contacts transferred out external](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#contacts-transferred-out-external-historical)\n\
            \nCONTACTS_TRANSFERRED_OUT_INTERNAL\n\n    \n\nUnit: Percent\n\nValid\
            \ groupings and filters: Queue, Channel, Routing Profile, Agent, Agent\
            \ Hierarchy, Q in Connect\n\nUI name: [Contacts transferred out internal](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#contacts-transferred-out-internal-historical)\n\
            \nCONTACTS_QUEUED\n\n    \n\nUnit: Count\n\nValid groupings and filters:\
            \ Queue, Channel, Routing Profile, Agent, Agent Hierarchy, contact/segmentAttributes/connect:Subtype,\
            \ Q in Connect\n\nUI name: [Contacts queued](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#contacts-queued-historical)\n\
            \nCONTACTS_QUEUED_BY_ENQUEUE\n\n    \n\nUnit: Count\n\nValid groupings\
            \ and filters: Queue, Channel, Agent, Agent Hierarchy, contact/segmentAttributes/connect:Subtype\n\
            \nUI name: [Contacts queued (enqueue timestamp)](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#contacts-queued-by-enqueue-historical)\n\
            \nCONTACTS_REMOVED_FROM_QUEUE_IN_X\n\n    \n\nUnit: Count\n\nValid groupings\
            \ and filters: Queue, Channel, Routing Profile, Q in Connect\n\nThreshold:\
            \ For `ThresholdValue`, enter any whole number from 1 to 604800 (inclusive),\
            \ in seconds. For `Comparison`, you can use `LT` (for \"Less than\") or\
            \ `LTE` (for \"Less than equal\").\n\nUI name: [Contacts removed from\
            \ queue in X seconds](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#contacts-removed-historical)\n\
            \nCONTACTS_RESOLVED_IN_X\n\n    \n\nUnit: Count\n\nValid groupings and\
            \ filters: Queue, Channel, Routing Profile, contact/segmentAttributes/connect:Subtype,\
            \ Q in Connect\n\nThreshold: For `ThresholdValue`, enter any whole number\
            \ from 1 to 604800 (inclusive), in seconds. For `Comparison`, you can\
            \ use `LT` (for \"Less than\") or `LTE` (for \"Less than equal\").\n\n\
            UI name: [Contacts resolved in X](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#contacts-resolved-historical)\n\
            \nCONTACTS_TRANSFERRED_OUT\n\n    \n\nUnit: Count\n\nValid groupings and\
            \ filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Feature,\
            \ contact/segmentAttributes/connect:Subtype, Q in Connect\n\nUI name:\
            \ [Contacts transferred out](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#contacts-transferred-out-historical)\n\
            \nFeature is a valid filter but not a valid grouping.\n\nCONTACTS_TRANSFERRED_OUT_BY_AGENT\n\
            \n    \n\nUnit: Count\n\nValid groupings and filters: Queue, Channel,\
            \ Routing Profile, Agent, Agent Hierarchy, contact/segmentAttributes/connect:Subtype,\
            \ Q in Connect\n\nUI name: [Contacts transferred out by agent](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#contacts-transferred-out-by-agent-historical)\n\
            \nCONTACTS_TRANSFERRED_OUT_FROM_QUEUE\n\n    \n\nUnit: Count\n\nValid\
            \ groupings and filters: Queue, Channel, Routing Profile, Agent, Agent\
            \ Hierarchy, contact/segmentAttributes/connect:Subtype, Q in Connect\n\
            \nUI name: [Contacts transferred out queue](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#contacts-transferred-out-by-agent-historical)\n\
            \nCURRENT_CASES\n\n    \n\nUnit: Count\n\nRequired filter key: CASE_TEMPLATE_ARN\n\
            \nValid groupings and filters: CASE_TEMPLATE_ARN, CASE_STATUS\n\nUI name:\
            \ [Current cases](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#current-cases-historical)\n\
            \nDELIVERY_ATTEMPTS\n\n    \n\nThis metric is available only for outbound\
            \ campaigns.\n\nUnit: Count\n\nValid metric filter key: `ANSWERING_MACHINE_DETECTION_STATUS`,\
            \ `CAMPAIGN_DELIVERY_EVENT_TYPE`, `DISCONNECT_REASON`\n\nValid groupings\
            \ and filters: Agent, Answering Machine Detection Status, Campaign, Campaign\
            \ Delivery EventType, Channel, contact/segmentAttributes/connect:Subtype,\
            \ Disconnect Reason, Queue, Routing Profile\n\nUI name: [Delivery attempts](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#delivery-attempts-historical)\n\
            \nCampaign Delivery EventType filter and grouping are only available for\
            \ SMS and Email campaign delivery modes. Agent, Queue, Routing Profile,\
            \ Answering Machine Detection Status and Disconnect Reason are only available\
            \ for agent assisted voice and automated voice delivery modes.\n\nDELIVERY_ATTEMPT_DISPOSITION_RATE\n\
            \n    \n\nThis metric is available only for outbound campaigns. Dispositions\
            \ for the agent assisted voice and automated voice delivery modes are\
            \ only available with answering machine detection enabled.\n\nUnit: Percent\n\
            \nValid metric filter key: `ANSWERING_MACHINE_DETECTION_STATUS`, `CAMPAIGN_DELIVERY_EVENT_TYPE`,\
            \ `DISCONNECT_REASON`\n\nValid groupings and filters: Agent, Answering\
            \ Machine Detection Status, Campaign, Channel, contact/segmentAttributes/connect:Subtype,\
            \ Disconnect Reason, Queue, Routing Profile\n\nUI name: [Delivery attempt\
            \ disposition rate](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#delivery-attempt-disposition-rate-historical)\n\
            \nCampaign Delivery Event Type filter and grouping are only available\
            \ for SMS and Email campaign delivery modes. Agent, Queue, Routing Profile,\
            \ Answering Machine Detection Status and Disconnect Reason are only available\
            \ for agent assisted voice and automated voice delivery modes.\n\nEVALUATIONS_PERFORMED\n\
            \n    \n\nUnit: Count\n\nValid groupings and filters: Agent, Agent Hierarchy,\
            \ Channel, Evaluation Form ID, Evaluation Source, Form Version, Queue,\
            \ Routing Profile\n\nUI name: [Evaluations performed](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#evaluations-performed-historical)\n\
            \nFLOWS_OUTCOME\n\n    \n\nUnit: Count\n\nValid groupings and filters:\
            \ Channel, contact/segmentAttributes/connect:Subtype, Flow type, Flows\
            \ module resource ID, Flows next resource ID, Flows next resource queue\
            \ ID, Flows outcome type, Flows resource ID, Initiation method, Resource\
            \ published timestamp\n\nUI name: [Flows outcome](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#flows-outcome-historical)\n\
            \nFLOWS_STARTED\n\n    \n\nUnit: Count\n\nValid groupings and filters:\
            \ Channel, contact/segmentAttributes/connect:Subtype, Flow type, Flows\
            \ module resource ID, Flows resource ID, Initiation method, Resource published\
            \ timestamp\n\nUI name: [Flows started](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#flows-started-historical)\n\
            \nHUMAN_ANSWERED_CALLS\n\n    \n\nThis metric is available only for outbound\
            \ campaigns. Dispositions for the agent assisted voice and automated voice\
            \ delivery modes are only available with answering machine detection enabled.\n\
            \nUnit: Count\n\nValid groupings and filters: Agent, Campaign\n\nUI name:\
            \ [Human answered](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#human-answered-historical)\n\
            \nMAX_FLOW_TIME\n\n    \n\nUnit: Seconds\n\nValid groupings and filters:\
            \ Channel, contact/segmentAttributes/connect:Subtype, Flow type, Flows\
            \ module resource ID, Flows next resource ID, Flows next resource queue\
            \ ID, Flows outcome type, Flows resource ID, Initiation method, Resource\
            \ published timestamp\n\nUI name: [Maximum flow time](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#maximum-flow-time-historical)\n\
            \nMAX_QUEUED_TIME\n\n    \n\nUnit: Seconds\n\nValid groupings and filters:\
            \ Queue, Channel, Routing Profile, Agent, Agent Hierarchy, contact/segmentAttributes/connect:Subtype,\
            \ Q in Connect\n\nUI name: [Maximum queued time](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#maximum-queued-time-historical)\n\
            \nMIN_FLOW_TIME\n\n    \n\nUnit: Seconds\n\nValid groupings and filters:\
            \ Channel, contact/segmentAttributes/connect:Subtype, Flow type, Flows\
            \ module resource ID, Flows next resource ID, Flows next resource queue\
            \ ID, Flows outcome type, Flows resource ID, Initiation method, Resource\
            \ published timestamp\n\nUI name: [Minimum flow time](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#minimum-flow-time-historical)\n\
            \nPERCENT_AUTOMATIC_FAILS\n\n    \n\nUnit: Percent\n\nValid groupings\
            \ and filters: Agent, Agent Hierarchy, Channel, Evaluation Form ID, Evaluation\
            \ Source, Form Version, Queue, Routing Profile\n\nUI name: [Automatic\
            \ fails percent](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#percent-evaluation-automatic-failures-historical)\n\
            \nPERCENT_BOT_CONVERSATIONS_OUTCOME\n\n    \n\nUnit: Percent\n\nValid\
            \ groupings and filters: Channel, contact/segmentAttributes/connect:Subtype,\
            \ Bot ID, Bot alias, Bot version, Bot locale, Flows resource ID, Flows\
            \ module resource ID, Flow type, Flow action ID, Invoking resource published\
            \ timestamp, Initiation method, Invoking resource type, Parent flows resource\
            \ ID\n\nUI name: [Percent bot conversations outcome](https://docs.aws.amazon.com/connect/latest/adminguide/bot-metrics.html#percent-bot-conversations-outcome-metric)\n\
            \nPERCENT_BOT_INTENTS_OUTCOME\n\n    \n\nUnit: Percent\n\nValid groupings\
            \ and filters: Channel, contact/segmentAttributes/connect:Subtype, Bot\
            \ ID, Bot alias, Bot version, Bot locale, Bot intent name, Flows resource\
            \ ID, Flows module resource ID, Flow type, Flow action ID, Invoking resource\
            \ published timestamp, Initiation method, Invoking resource type, Parent\
            \ flows resource ID\n\nUI name: [Percent bot intents outcome](https://docs.aws.amazon.com/connect/latest/adminguide/bot-metrics.html#percent-bot-intents-outcome-metric)\n\
            \nPERCENT_CASES_FIRST_CONTACT_RESOLVED\n\n    \n\nUnit: Percent\n\nRequired\
            \ filter key: CASE_TEMPLATE_ARN\n\nValid groupings and filters: CASE_TEMPLATE_ARN,\
            \ CASE_STATUS\n\nUI name: [Cases resolved on first contact](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#cases-resolved-first-contact-historical)\n\
            \nPERCENT_CONTACTS_STEP_EXPIRED\n\n    \n\nUnit: Percent\n\nValid groupings\
            \ and filters: Queue, RoutingStepExpression\n\nUI name: This metric is\
            \ available in Real-time Metrics UI but not on the Historical Metrics\
            \ UI.\n\nPERCENT_CONTACTS_STEP_JOINED\n\n    \n\nUnit: Percent\n\nValid\
            \ groupings and filters: Queue, RoutingStepExpression\n\nUI name: This\
            \ metric is available in Real-time Metrics UI but not on the Historical\
            \ Metrics UI.\n\nPERCENT_FLOWS_OUTCOME\n\n    \n\nUnit: Percent\n\nValid\
            \ metric filter key: `FLOWS_OUTCOME_TYPE`\n\nValid groupings and filters:\
            \ Channel, contact/segmentAttributes/connect:Subtype, Flow type, Flows\
            \ module resource ID, Flows next resource ID, Flows next resource queue\
            \ ID, Flows outcome type, Flows resource ID, Initiation method, Resource\
            \ published timestamp\n\nUI name: [Flows outcome percentage](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#flows-outcome-percentage-historical).\n\
            \nThe `FLOWS_OUTCOME_TYPE` is not a valid grouping.\n\nPERCENT_NON_TALK_TIME\n\
            \n    \n\nThis metric is available only for contacts analyzed by Contact\
            \ Lens conversational analytics.\n\nUnit: Percentage\n\nValid groupings\
            \ and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy,\
            \ contact/segmentAttributes/connect:Subtype, Q in Connect\n\nUI name:\
            \ [Non-talk time percent](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#ntt-historical)\n\
            \nPERCENT_TALK_TIME\n\n    \n\nThis metric is available only for contacts\
            \ analyzed by Contact Lens conversational analytics.\n\nUnit: Percentage\n\
            \nValid groupings and filters: Queue, Channel, Routing Profile, Agent,\
            \ Agent Hierarchy, contact/segmentAttributes/connect:Subtype, Q in Connect\n\
            \nUI name: [Talk time percent](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#tt-historical)\n\
            \nPERCENT_TALK_TIME_AGENT\n\n    \n\nThis metric is available only for\
            \ contacts analyzed by Contact Lens conversational analytics.\n\nUnit:\
            \ Percentage\n\nValid groupings and filters: Queue, Channel, Routing Profile,\
            \ Agent, Agent Hierarchy, contact/segmentAttributes/connect:Subtype, Q\
            \ in Connect\n\nUI name: [Agent talk time percent](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#ttagent-historical)\n\
            \nPERCENT_TALK_TIME_CUSTOMER\n\n    \n\nThis metric is available only\
            \ for contacts analyzed by Contact Lens conversational analytics.\n\n\
            Unit: Percentage\n\nValid groupings and filters: Queue, Channel, Routing\
            \ Profile, Agent, Agent Hierarchy, contact/segmentAttributes/connect:Subtype,\
            \ Q in Connect\n\nUI name: [Customer talk time percent](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#ttcustomer-historical)\n\
            \nREOPENED_CASE_ACTIONS\n\n    \n\nUnit: Count\n\nRequired filter key:\
            \ CASE_TEMPLATE_ARN\n\nValid groupings and filters: CASE_TEMPLATE_ARN,\
            \ CASE_STATUS\n\nUI name: [Cases reopened](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#cases-reopened-historical)\n\
            \nRESOLVED_CASE_ACTIONS\n\n    \n\nUnit: Count\n\nRequired filter key:\
            \ CASE_TEMPLATE_ARN\n\nValid groupings and filters: CASE_TEMPLATE_ARN,\
            \ CASE_STATUS\n\nUI name: [Cases resolved](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#cases-resolved-historical)\n\
            \nSERVICE_LEVEL\n\n    \n\nYou can include up to 20 SERVICE_LEVEL metrics\
            \ in a request.\n\nUnit: Percent\n\nValid groupings and filters: Queue,\
            \ Channel, Routing Profile, Q in Connect\n\nThreshold: For `ThresholdValue`,\
            \ enter any whole number from 1 to 604800 (inclusive), in seconds. For\
            \ `Comparison`, you can use `LT` (for \"Less than\") or `LTE` (for \"\
            Less than equal\").\n\nUI name: [Service level X](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#service-level-historical)\n\
            \nSTEP_CONTACTS_QUEUED\n\n    \n\nUnit: Count\n\nValid groupings and filters:\
            \ Queue, RoutingStepExpression\n\nUI name: This metric is available in\
            \ Real-time Metrics UI but not on the Historical Metrics UI.\n\nSUM_AFTER_CONTACT_WORK_TIME\n\
            \n    \n\nUnit: Seconds\n\nValid groupings and filters: Queue, Channel,\
            \ Routing Profile, Agent, Agent Hierarchy, Q in Connect\n\nUI name: [After\
            \ contact work time](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#acw-historical)\n\
            \nSUM_CONNECTING_TIME_AGENT\n\n    \n\nUnit: Seconds\n\nValid metric filter\
            \ key: `INITIATION_METHOD`. This metric only supports the following filter\
            \ keys as `INITIATION_METHOD`: `INBOUND` | `OUTBOUND` | `CALLBACK` | `API`\n\
            \nValid groupings and filters: Queue, Channel, Routing Profile, Agent,\
            \ Agent Hierarchy\n\nUI name: [Agent API connecting time](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#htm-agent-api-connecting-time)\n\
            \nThe `Negate` key in metric-level filters is not applicable for this\
            \ metric.\n\nCONTACTS_ABANDONED\n\n    \n\nUnit: Count\n\nMetric filter:\n\
            \n  * Valid values: `API`| `Incoming` | `Outbound` | `Transfer` | `Callback`\
            \ | `Queue_Transfer`| `Disconnect`\n\nValid groupings and filters: Queue,\
            \ Channel, Routing Profile, Agent, Agent Hierarchy, contact/segmentAttributes/connect:Subtype,\
            \ RoutingStepExpression, Q in Connect\n\nUI name: [Contact abandoned](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#contacts-abandoned-historical)\n\
            \nSUM_CONTACTS_ABANDONED_IN_X\n\n    \n\nUnit: Count\n\nValid groupings\
            \ and filters: Queue, Channel, Routing Profile, contact/segmentAttributes/connect:Subtype,\
            \ Q in Connect\n\nThreshold: For `ThresholdValue`, enter any whole number\
            \ from 1 to 604800 (inclusive), in seconds. For `Comparison`, you can\
            \ use `LT` (for \"Less than\") or `LTE` (for \"Less than equal\").\n\n\
            UI name: [Contacts abandoned in X seconds](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#contacts-abandoned-x-historical)\n\
            \nSUM_CONTACTS_ANSWERED_IN_X\n\n    \n\nUnit: Count\n\nValid groupings\
            \ and filters: Queue, Channel, Routing Profile, contact/segmentAttributes/connect:Subtype,\
            \ Q in Connect\n\nThreshold: For `ThresholdValue`, enter any whole number\
            \ from 1 to 604800 (inclusive), in seconds. For `Comparison`, you can\
            \ use `LT` (for \"Less than\") or `LTE` (for \"Less than equal\").\n\n\
            UI name: [Contacts answered in X seconds](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#contacts-answered-x-historical)\n\
            \nSUM_CONTACT_FLOW_TIME\n\n    \n\nUnit: Seconds\n\nValid groupings and\
            \ filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Q\
            \ in Connect\n\nUI name: [Contact flow time](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#contact-flow-time-historical)\n\
            \nSUM_CONTACT_TIME_AGENT\n\n    \n\nUnit: Seconds\n\nValid groupings and\
            \ filters: Routing Profile, Agent, Agent Hierarchy\n\nUI name: [Agent\
            \ on contact time](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#agent-on-contact-time-historical)\n\
            \nSUM_CONTACTS_DISCONNECTED\n\n    \n\nValid metric filter key: `DISCONNECT_REASON`\n\
            \nUnit: Count\n\nValid groupings and filters: Queue, Channel, Routing\
            \ Profile, Agent, Agent Hierarchy, contact/segmentAttributes/connect:Subtype,\
            \ Q in Connect\n\nUI name: [Contact disconnected](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#contact-disconnected-historical)\n\
            \nSUM_ERROR_STATUS_TIME_AGENT\n\n    \n\nUnit: Seconds\n\nValid groupings\
            \ and filters: Routing Profile, Agent, Agent Hierarchy\n\nUI name: [Error\
            \ status time](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#error-status-time-historical)\n\
            \nSUM_HANDLE_TIME\n\n    \n\nUnit: Seconds\n\nValid groupings and filters:\
            \ Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Q in Connect\n\
            \nUI name: [Contact handle time](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#contact-handle-time-historical)\n\
            \nSUM_HOLD_TIME\n\n    \n\nUnit: Count\n\nValid groupings and filters:\
            \ Queue, Channel, Routing Profile, Agent, Agent Hierarchy, Q in Connect\n\
            \nUI name: [Customer hold time](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#customer-hold-time-historical)\n\
            \nSUM_IDLE_TIME_AGENT\n\n    \n\nUnit: Seconds\n\nValid groupings and\
            \ filters: Routing Profile, Agent, Agent Hierarchy\n\nUI name: [Agent\
            \ idle time](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#agent-idle-time-historica)\n\
            \nSUM_INTERACTION_AND_HOLD_TIME\n\n    \n\nUnit: Seconds\n\nValid groupings\
            \ and filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy,\
            \ Q in Connect\n\nUI name: [Agent interaction and hold time](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#agent-interaction-hold-time-historical)\n\
            \nSUM_INTERACTION_TIME\n\n    \n\nUnit: Seconds\n\nValid groupings and\
            \ filters: Queue, Channel, Routing Profile, Agent, Agent Hierarchy\n\n\
            UI name: [Agent interaction time](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#agent-interaction-time-historical)\n\
            \nSUM_NON_PRODUCTIVE_TIME_AGENT\n\n    \n\nUnit: Seconds\n\nValid groupings\
            \ and filters: Routing Profile, Agent, Agent Hierarchy\n\nUI name: [Non-Productive\
            \ Time](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#npt-historical)\n\
            \nSUM_ONLINE_TIME_AGENT\n\n    \n\nUnit: Seconds\n\nValid groupings and\
            \ filters: Routing Profile, Agent, Agent Hierarchy\n\nUI name: [Online\
            \ time](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#online-time-historical)\n\
            \nSUM_RETRY_CALLBACK_ATTEMPTS\n\n    \n\nUnit: Count\n\nValid groupings\
            \ and filters: Queue, Channel, Routing Profile, contact/segmentAttributes/connect:Subtype,\
            \ Q in Connect\n\nUI name: [Callback attempts](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#callback-attempts-historical)"
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken2500'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult100'
          description: The maximum number of results to return per page.
      required:
      - ResourceArn
      - StartTime
      - EndTime
      - Filters
      - Metrics
    GetMetricDataV2Response:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken2500'
          description: If there are additional results, this is the token for the
            next set of results.
        MetricResults:
          allOf:
          - $ref: '#/components/schemas/MetricResultsV2'
          description: Information about the metrics requested in the API request
            If no grouping is specified, a summary of metric data is returned.
    GetPromptFileRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        PromptId:
          allOf:
          - $ref: '#/components/schemas/PromptId'
          description: A unique identifier for the prompt.
      required:
      - InstanceId
      - PromptId
    GetPromptFileResponse:
      type: object
      properties:
        PromptPresignedUrl:
          allOf:
          - $ref: '#/components/schemas/PromptPresignedUrl'
          description: A generated URL to the prompt that can be given to an unauthorized
            user so they can access the prompt in S3.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when this resource was last modified.
        LastModifiedRegion:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          description: The Amazon Web Services Region where this resource was last
            modified.
    GetTaskTemplateRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        TaskTemplateId:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateId'
          description: A unique identifier for the task template.
        SnapshotVersion:
          allOf:
          - $ref: '#/components/schemas/SnapshotVersion'
          description: The system generated version of a task template that is associated
            with a task, when the task is created.
      required:
      - InstanceId
      - TaskTemplateId
    GetTaskTemplateResponse:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        Id:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateId'
          description: A unique identifier for the task template.
        Arn:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateArn'
          description: The Amazon Resource Name (ARN).
        Name:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateName'
          description: The name of the task template.
        Description:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateDescription'
          description: The description of the task template.
        ContactFlowId:
          allOf:
          - $ref: '#/components/schemas/ContactFlowId'
          description: The identifier of the flow that runs by default when a task
            is created by referencing this template.
        SelfAssignFlowId:
          allOf:
          - $ref: '#/components/schemas/ContactFlowId'
          description: ContactFlowId for the flow that will be run if this template
            is used to create a self-assigned task
        Constraints:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateConstraints'
          description: Constraints that are applicable to the fields listed.
        Defaults:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateDefaults'
          description: The default values for fields when a task is created by referencing
            this template.
        Fields:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateFields'
          description: Fields that are part of the template.
        Status:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateStatus'
          description: Marks a template as `ACTIVE` or `INACTIVE` for a task to refer
            to it. Tasks can only be created from `ACTIVE` templates. If a template
            is marked as `INACTIVE`, then a task that refers to this template cannot
            be created.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the task template was last modified.
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the task template was created.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The tags used to organize, track, or control access for this
            resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.'
      required:
      - Id
      - Arn
      - Name
    GetTrafficDistributionRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/TrafficDistributionGroupIdOrArn'
          description: The identifier of the traffic distribution group. This can
            be the ID or the ARN if the API is being called in the Region where the
            traffic distribution group was created. The ARN must be provided if the
            call is from the replicated Region.
      required:
      - Id
    GetTrafficDistributionResponse:
      type: object
      properties:
        TelephonyConfig:
          allOf:
          - $ref: '#/components/schemas/TelephonyConfig'
          description: The distribution of traffic between the instance and its replicas.
        Id:
          allOf:
          - $ref: '#/components/schemas/TrafficDistributionGroupId'
          description: The identifier of the traffic distribution group. This can
            be the ID or the ARN if the API is being called in the Region where the
            traffic distribution group was created. The ARN must be provided if the
            call is from the replicated Region.
        Arn:
          allOf:
          - $ref: '#/components/schemas/TrafficDistributionGroupArn'
          description: The Amazon Resource Name (ARN) of the traffic distribution
            group.
        SignInConfig:
          allOf:
          - $ref: '#/components/schemas/SignInConfig'
          description: The distribution that determines which Amazon Web Services
            Regions should be used to sign in agents in to both the instance and its
            replica(s).
        AgentConfig:
          allOf:
          - $ref: '#/components/schemas/AgentConfig'
          description: The distribution of agents between the instance and its replica(s).
    GlobalSignInEndpoint:
      type: string
      minLength: 1
      maxLength: 128
    Grouping:
      type: string
      enum:
      - QUEUE
      - CHANNEL
      - ROUTING_PROFILE
      - ROUTING_STEP_EXPRESSION
    GroupingV2:
      type: string
    Groupings:
      type: array
      items:
        $ref: '#/components/schemas/Grouping'
    GroupingsV2:
      type: array
      items:
        $ref: '#/components/schemas/GroupingV2'
    HierarchyGroup:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/HierarchyGroupId'
          description: The identifier of the hierarchy group.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the hierarchy group.
        Name:
          allOf:
          - $ref: '#/components/schemas/HierarchyGroupName'
          description: The name of the hierarchy group.
        LevelId:
          allOf:
          - $ref: '#/components/schemas/HierarchyLevelId'
          description: The identifier of the level in the hierarchy group.
        HierarchyPath:
          allOf:
          - $ref: '#/components/schemas/HierarchyPath'
          description: Information about the levels in the hierarchy group.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The tags used to organize, track, or control access for this
            resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.'
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when this resource was last modified.
        LastModifiedRegion:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          description: The Amazon Web Services Region where this resource was last
            modified.
      description: Contains information about a hierarchy group.
    HierarchyGroupCondition:
      type: object
      properties:
        Value:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The value in the hierarchy group condition.
        HierarchyGroupMatchType:
          allOf:
          - $ref: '#/components/schemas/HierarchyGroupMatchType'
          description: The type of hierarchy group match.
      description: A leaf node condition which can be used to specify a hierarchy
        group condition.
    HierarchyGroupId:
      type: string
    HierarchyGroupIdList:
      type: array
      items:
        $ref: '#/components/schemas/HierarchyGroupId'
    HierarchyGroupMatchType:
      type: string
      enum:
      - EXACT
      - WITH_CHILD_GROUPS
    HierarchyGroupName:
      type: string
    HierarchyGroupSummary:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/HierarchyGroupId'
          description: The identifier of the hierarchy group.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the hierarchy group.
        Name:
          allOf:
          - $ref: '#/components/schemas/HierarchyGroupName'
          description: The name of the hierarchy group.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when this resource was last modified.
        LastModifiedRegion:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          description: The Amazon Web Services Region where this resource was last
            modified.
      description: Contains summary information about a hierarchy group.
    HierarchyGroupSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/HierarchyGroupSummary'
    HierarchyGroupSummaryReference:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/HierarchyGroupId'
          description: The unique identifier for the hierarchy group.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for the hierarchy group.
      description: Information about the hierarchy group.
    HierarchyGroups:
      type: object
      properties:
        Level1:
          allOf:
          - $ref: '#/components/schemas/AgentHierarchyGroup'
          description: The group at level one of the agent hierarchy.
        Level2:
          allOf:
          - $ref: '#/components/schemas/AgentHierarchyGroup'
          description: The group at level two of the agent hierarchy.
        Level3:
          allOf:
          - $ref: '#/components/schemas/AgentHierarchyGroup'
          description: The group at level three of the agent hierarchy.
        Level4:
          allOf:
          - $ref: '#/components/schemas/AgentHierarchyGroup'
          description: The group at level four of the agent hierarchy.
        Level5:
          allOf:
          - $ref: '#/components/schemas/AgentHierarchyGroup'
          description: The group at level five of the agent hierarchy.
      description: Information about the agent hierarchy. Hierarchies can be configured
        with up to five levels.
    HierarchyLevel:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/HierarchyLevelId'
          description: The identifier of the hierarchy level.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the hierarchy level.
        Name:
          allOf:
          - $ref: '#/components/schemas/HierarchyLevelName'
          description: The name of the hierarchy level.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when this resource was last modified.
        LastModifiedRegion:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          description: The Amazon Web Services Region where this resource was last
            modified.
      description: Contains information about a hierarchy level.
    HierarchyLevelId:
      type: string
    HierarchyLevelName:
      type: string
    HierarchyLevelUpdate:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/HierarchyLevelName'
          description: The name of the user hierarchy level. Must not be more than
            50 characters.
      required:
      - Name
      description: Contains information about the hierarchy level to update.
    HierarchyPath:
      type: object
      properties:
        LevelOne:
          allOf:
          - $ref: '#/components/schemas/HierarchyGroupSummary'
          description: Information about level one.
        LevelTwo:
          allOf:
          - $ref: '#/components/schemas/HierarchyGroupSummary'
          description: Information about level two.
        LevelThree:
          allOf:
          - $ref: '#/components/schemas/HierarchyGroupSummary'
          description: Information about level three.
        LevelFour:
          allOf:
          - $ref: '#/components/schemas/HierarchyGroupSummary'
          description: Information about level four.
        LevelFive:
          allOf:
          - $ref: '#/components/schemas/HierarchyGroupSummary'
          description: Information about level five.
      description: Contains information about the levels of a hierarchy group.
    HierarchyPathReference:
      type: object
      properties:
        LevelOne:
          allOf:
          - $ref: '#/components/schemas/HierarchyGroupSummaryReference'
          description: Information about level one.
        LevelTwo:
          allOf:
          - $ref: '#/components/schemas/HierarchyGroupSummaryReference'
          description: Information about level two.
        LevelThree:
          allOf:
          - $ref: '#/components/schemas/HierarchyGroupSummaryReference'
          description: Information about level three.
        LevelFour:
          allOf:
          - $ref: '#/components/schemas/HierarchyGroupSummaryReference'
          description: Information about level four.
        LevelFive:
          allOf:
          - $ref: '#/components/schemas/HierarchyGroupSummaryReference'
          description: Information about level five.
      description: Information about the levels in the hierarchy group.
    HierarchyRestrictedResourceList:
      type: array
      items:
        $ref: '#/components/schemas/HierarchyRestrictedResourceName'
    HierarchyRestrictedResourceName:
      type: string
      minLength: 1
      maxLength: 128
    HierarchyStructure:
      type: object
      properties:
        LevelOne:
          allOf:
          - $ref: '#/components/schemas/HierarchyLevel'
          description: Information about level one.
        LevelTwo:
          allOf:
          - $ref: '#/components/schemas/HierarchyLevel'
          description: Information about level two.
        LevelThree:
          allOf:
          - $ref: '#/components/schemas/HierarchyLevel'
          description: Information about level three.
        LevelFour:
          allOf:
          - $ref: '#/components/schemas/HierarchyLevel'
          description: Information about level four.
        LevelFive:
          allOf:
          - $ref: '#/components/schemas/HierarchyLevel'
          description: Information about level five.
      description: Contains information about a hierarchy structure.
    HierarchyStructureUpdate:
      type: object
      properties:
        LevelOne:
          allOf:
          - $ref: '#/components/schemas/HierarchyLevelUpdate'
          description: The update for level one.
        LevelTwo:
          allOf:
          - $ref: '#/components/schemas/HierarchyLevelUpdate'
          description: The update for level two.
        LevelThree:
          allOf:
          - $ref: '#/components/schemas/HierarchyLevelUpdate'
          description: The update for level three.
        LevelFour:
          allOf:
          - $ref: '#/components/schemas/HierarchyLevelUpdate'
          description: The update for level four.
        LevelFive:
          allOf:
          - $ref: '#/components/schemas/HierarchyLevelUpdate'
          description: The update for level five.
      description: Contains information about the level hierarchy to update.
    HistoricalMetric:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/HistoricalMetricName'
          description: The name of the metric.
        Threshold:
          allOf:
          - $ref: '#/components/schemas/Threshold'
          description: The threshold for the metric, used with service level metrics.
        Statistic:
          allOf:
          - $ref: '#/components/schemas/Statistic'
          description: The statistic for the metric.
        Unit:
          allOf:
          - $ref: '#/components/schemas/Unit'
          description: The unit for the metric.
      description: Contains information about a historical metric. For a description
        of each metric, see [Historical Metrics Definitions](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html)
        in the _Amazon Connect Administrator Guide_.
    HistoricalMetricData:
      type: object
      properties:
        Metric:
          allOf:
          - $ref: '#/components/schemas/HistoricalMetric'
          description: Information about the metric.
        Value:
          allOf:
          - $ref: '#/components/schemas/Value'
          description: The value of the metric.
      description: Contains the data for a historical metric.
    HistoricalMetricDataCollections:
      type: array
      items:
        $ref: '#/components/schemas/HistoricalMetricData'
    HistoricalMetricName:
      type: string
      enum:
      - CONTACTS_QUEUED
      - CONTACTS_HANDLED
      - CONTACTS_ABANDONED
      - CONTACTS_CONSULTED
      - CONTACTS_AGENT_HUNG_UP_FIRST
      - CONTACTS_HANDLED_INCOMING
      - CONTACTS_HANDLED_OUTBOUND
      - CONTACTS_HOLD_ABANDONS
      - CONTACTS_TRANSFERRED_IN
      - CONTACTS_TRANSFERRED_OUT
      - CONTACTS_TRANSFERRED_IN_FROM_QUEUE
      - CONTACTS_TRANSFERRED_OUT_FROM_QUEUE
      - CONTACTS_MISSED
      - CALLBACK_CONTACTS_HANDLED
      - API_CONTACTS_HANDLED
      - OCCUPANCY
      - HANDLE_TIME
      - AFTER_CONTACT_WORK_TIME
      - QUEUED_TIME
      - ABANDON_TIME
      - QUEUE_ANSWER_TIME
      - HOLD_TIME
      - INTERACTION_TIME
      - INTERACTION_AND_HOLD_TIME
      - SERVICE_LEVEL
      description: <p>The historical metric names.</p>
    HistoricalMetricResult:
      type: object
      properties:
        Dimensions:
          allOf:
          - $ref: '#/components/schemas/Dimensions'
          description: The dimension for the metrics.
        Collections:
          allOf:
          - $ref: '#/components/schemas/HistoricalMetricDataCollections'
          description: The set of metrics.
      description: Contains information about the historical metrics retrieved.
    HistoricalMetricResults:
      type: array
      items:
        $ref: '#/components/schemas/HistoricalMetricResult'
    HistoricalMetrics:
      type: array
      items:
        $ref: '#/components/schemas/HistoricalMetric'
    Hours:
      type: integer
      default: 0
      minimum: 0
      maximum: 87600
    Hours24Format:
      type: integer
      default: 0
      minimum: 0
      maximum: 23
    HoursOfOperation:
      type: object
      properties:
        HoursOfOperationId:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationId'
          description: The identifier for the hours of operation.
        HoursOfOperationArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for the hours of operation.
        Name:
          allOf:
          - $ref: '#/components/schemas/CommonNameLength127'
          description: The name for the hours of operation.
        Description:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationDescription'
          description: The description for the hours of operation.
        TimeZone:
          allOf:
          - $ref: '#/components/schemas/TimeZone'
          description: The time zone for the hours of operation.
        Config:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationConfigList'
          description: Configuration information for the hours of operation.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The tags used to organize, track, or control access for this
            resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.'
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when this resource was last modified.
        LastModifiedRegion:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          description: The Amazon Web Services Region where this resource was last
            modified.
      description: Information about of the hours of operation.
    HoursOfOperationConfig:
      type: object
      properties:
        Day:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationDays'
          description: The day that the hours of operation applies to.
        StartTime:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationTimeSlice'
          description: The start time that your contact center opens.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationTimeSlice'
          description: The end time that your contact center closes.
      required:
      - Day
      - StartTime
      - EndTime
      description: Contains information about the hours of operation.
    HoursOfOperationConfigList:
      type: array
      items:
        $ref: '#/components/schemas/HoursOfOperationConfig'
    HoursOfOperationDays:
      type: string
      enum:
      - SUNDAY
      - MONDAY
      - TUESDAY
      - WEDNESDAY
      - THURSDAY
      - FRIDAY
      - SATURDAY
    HoursOfOperationDescription:
      type: string
      minLength: 1
      maxLength: 250
    HoursOfOperationId:
      type: string
    HoursOfOperationList:
      type: array
      items:
        $ref: '#/components/schemas/HoursOfOperation'
    HoursOfOperationName:
      type: string
    HoursOfOperationOverride:
      type: object
      properties:
        HoursOfOperationOverrideId:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationOverrideId'
          description: The identifier for the hours of operation override.
        HoursOfOperationId:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationId'
          description: The identifier for the hours of operation.
        HoursOfOperationArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for the hours of operation.
        Name:
          allOf:
          - $ref: '#/components/schemas/CommonHumanReadableName'
          description: The name of the hours of operation override.
        Description:
          allOf:
          - $ref: '#/components/schemas/CommonHumanReadableDescription'
          description: The description of the hours of operation override.
        Config:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationOverrideConfigList'
          description: 'Configuration information for the hours of operation override:
            day, start time, and end time.'
        EffectiveFrom:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationOverrideYearMonthDayDateFormat'
          description: The date from which the hours of operation override would be
            effective.
        EffectiveTill:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationOverrideYearMonthDayDateFormat'
          description: The date till which the hours of operation override would be
            effective.
      description: Information about the hours of operations override.
    HoursOfOperationOverrideConfig:
      type: object
      properties:
        Day:
          allOf:
          - $ref: '#/components/schemas/OverrideDays'
          description: The day that the hours of operation override applies to.
        StartTime:
          allOf:
          - $ref: '#/components/schemas/OverrideTimeSlice'
          description: The start time when your contact center opens if overrides
            are applied.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/OverrideTimeSlice'
          description: The end time that your contact center closes if overrides are
            applied.
      description: 'Information about the hours of operation override config: day,
        start time, and end time.'
    HoursOfOperationOverrideConfigList:
      type: array
      items:
        $ref: '#/components/schemas/HoursOfOperationOverrideConfig'
    HoursOfOperationOverrideId:
      type: string
      minLength: 1
      maxLength: 36
    HoursOfOperationOverrideList:
      type: array
      items:
        $ref: '#/components/schemas/HoursOfOperationOverride'
    HoursOfOperationOverrideSearchConditionList:
      type: array
      items:
        $ref: '#/components/schemas/HoursOfOperationOverrideSearchCriteria'
    HoursOfOperationOverrideSearchCriteria:
      type: object
      properties:
        OrConditions:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationOverrideSearchConditionList'
          description: A list of conditions which would be applied together with an
            OR condition.
        AndConditions:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationOverrideSearchConditionList'
          description: A list of conditions which would be applied together with an
            AND condition.
        StringCondition:
          $ref: '#/components/schemas/StringCondition'
        DateCondition:
          allOf:
          - $ref: '#/components/schemas/DateCondition'
          description: A leaf node condition which can be used to specify a date condition.
      description: The search criteria to be used to return hours of operations overrides.
    HoursOfOperationOverrideYearMonthDayDateFormat:
      type: string
      pattern: ^\d{4}-\d{2}-\d{2}$
    HoursOfOperationSearchConditionList:
      type: array
      items:
        $ref: '#/components/schemas/HoursOfOperationSearchCriteria'
    HoursOfOperationSearchCriteria:
      type: object
      properties:
        OrConditions:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationSearchConditionList'
          description: A list of conditions which would be applied together with an
            OR condition.
        AndConditions:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationSearchConditionList'
          description: A list of conditions which would be applied together with an
            AND condition.
        StringCondition:
          allOf:
          - $ref: '#/components/schemas/StringCondition'
          description: 'A leaf node condition which can be used to specify a string
            condition.


            The currently supported values for `FieldName` are `name`, `description`,
            `timezone`, and `resourceID`.'
      description: The search criteria to be used to return hours of operations.
    HoursOfOperationSearchFilter:
      type: object
      properties:
        TagFilter:
          $ref: '#/components/schemas/ControlPlaneTagFilter'
      description: Filters to be applied to search results.
    HoursOfOperationSummary:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationId'
          description: The identifier of the hours of operation.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the hours of operation.
        Name:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationName'
          description: The name of the hours of operation.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when this resource was last modified.
        LastModifiedRegion:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          description: The Amazon Web Services Region where this resource was last
            modified.
      description: Contains summary information about hours of operation for a contact
        center.
    HoursOfOperationSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/HoursOfOperationSummary'
    HoursOfOperationTimeSlice:
      type: object
      properties:
        Hours:
          allOf:
          - $ref: '#/components/schemas/Hours24Format'
          description: The hours.
        Minutes:
          allOf:
          - $ref: '#/components/schemas/MinutesLimit60'
          description: The minutes.
      required:
      - Hours
      - Minutes
      description: The start time or end time for an hours of operation.
    ISO8601Datetime:
      type: string
    IdempotencyException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
      description: An entity with the same name already exists.
    ImportPhoneNumberRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        SourcePhoneNumberArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The claimed phone number ARN being imported from the external
            service, such as Amazon Web Services End User Messaging. If it is from
            Amazon Web Services End User Messaging, it looks like the ARN of the phone
            number to import from Amazon Web Services End User Messaging.
        PhoneNumberDescription:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberDescription'
          description: The description of the phone number.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The tags used to organize, track, or control access for this
            resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.'
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
      required:
      - InstanceId
      - SourcePhoneNumberArn
    ImportPhoneNumberResponse:
      type: object
      properties:
        PhoneNumberId:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberId'
          description: A unique identifier for the phone number.
        PhoneNumberArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the phone number.
    InboundAdditionalRecipients:
      type: object
      properties:
        ToAddresses:
          allOf:
          - $ref: '#/components/schemas/EmailAddressRecipientList'
          description: The additional recipients information present in to list.
        CcAddresses:
          allOf:
          - $ref: '#/components/schemas/EmailAddressRecipientList'
          description: The additional recipients information present in cc list.
      description: The additional TO CC recipients information of inbound email.
    InboundCallsEnabled:
      type: boolean
    InboundEmailContent:
      type: object
      properties:
        MessageSourceType:
          allOf:
          - $ref: '#/components/schemas/InboundMessageSourceType'
          description: The message source type, that is, `RAW`.
        RawMessage:
          allOf:
          - $ref: '#/components/schemas/InboundRawMessage'
          description: The raw email body content.
      required:
      - MessageSourceType
      description: Information about email body content.
    InboundMessageSourceType:
      type: string
      enum:
      - RAW
    InboundRawMessage:
      type: object
      properties:
        Subject:
          allOf:
          - $ref: '#/components/schemas/InboundSubject'
          description: The email subject.
        Body:
          allOf:
          - $ref: '#/components/schemas/Body'
          description: The email message body.
        ContentType:
          allOf:
          - $ref: '#/components/schemas/EmailMessageContentType'
          description: Type of content, that is, `text/plain` or `text/html`.
        Headers:
          allOf:
          - $ref: '#/components/schemas/EmailHeaders'
          description: Headers present in inbound email.
      required:
      - Subject
      - Body
      - ContentType
      description: Information about the raw email body content.
    InboundSubject:
      type: string
      minLength: 0
      maxLength: 998
    IncludeRawMessage:
      type: boolean
      default: false
    Index:
      type: integer
    InitiateAs:
      type: string
      enum:
      - CONNECTED_TO_USER
    InitiationMethodList:
      type: array
      items:
        $ref: '#/components/schemas/ContactInitiationMethod'
    Instance:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the instance.
        IdentityManagementType:
          allOf:
          - $ref: '#/components/schemas/DirectoryType'
          description: The identity management type.
        InstanceAlias:
          allOf:
          - $ref: '#/components/schemas/DirectoryAlias'
          description: The alias of instance.
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: When the instance was created.
        ServiceRole:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The service role of the instance.
        InstanceStatus:
          allOf:
          - $ref: '#/components/schemas/InstanceStatus'
          description: The state of the instance.
        StatusReason:
          allOf:
          - $ref: '#/components/schemas/InstanceStatusReason'
          description: Relevant details why the instance was not successfully created.
        InboundCallsEnabled:
          allOf:
          - $ref: '#/components/schemas/InboundCallsEnabled'
          description: Whether inbound calls are enabled.
        OutboundCallsEnabled:
          allOf:
          - $ref: '#/components/schemas/OutboundCallsEnabled'
          description: Whether outbound calls are enabled.
        InstanceAccessUrl:
          allOf:
          - $ref: '#/components/schemas/Url'
          description: This URL allows contact center users to access the Amazon Connect
            admin website.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags of an instance.
      description: The Amazon Connect instance.
    InstanceArn:
      type: string
      pattern: ^arn:(aws|aws-us-gov):connect:[a-z]{2}-[a-z]+-[0-9-]{1}:[0-9]{1,20}:instance/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
    InstanceAttributeType:
      type: string
      enum:
      - INBOUND_CALLS
      - OUTBOUND_CALLS
      - CONTACTFLOW_LOGS
      - CONTACT_LENS
      - AUTO_RESOLVE_BEST_VOICES
      - USE_CUSTOM_TTS_VOICES
      - EARLY_MEDIA
      - MULTI_PARTY_CONFERENCE
      - HIGH_VOLUME_OUTBOUND
      - ENHANCED_CONTACT_MONITORING
      - ENHANCED_CHAT_MONITORING
      - MULTI_PARTY_CHAT_CONFERENCE
    InstanceAttributeValue:
      type: string
      minLength: 1
      maxLength: 100
    InstanceId:
      type: string
      minLength: 1
      maxLength: 100
    InstanceIdOrArn:
      type: string
      pattern: ^(arn:(aws|aws-us-gov):connect:[a-z]{2}-[a-z]+-[0-9]{1}:[0-9]{1,20}:instance/)?[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
      minLength: 1
      maxLength: 250
    InstanceReplicationStatus:
      type: string
      enum:
      - INSTANCE_REPLICATION_COMPLETE
      - INSTANCE_REPLICATION_IN_PROGRESS
      - INSTANCE_REPLICATION_FAILED
      - INSTANCE_REPLICA_DELETING
      - INSTANCE_REPLICATION_DELETION_FAILED
      - RESOURCE_REPLICATION_NOT_STARTED
    InstanceStatus:
      type: string
      enum:
      - CREATION_IN_PROGRESS
      - ACTIVE
      - CREATION_FAILED
    InstanceStatusReason:
      type: object
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The message.
      description: Relevant details why the instance was not successfully created.
    InstanceStorageConfig:
      type: object
      properties:
        AssociationId:
          allOf:
          - $ref: '#/components/schemas/AssociationId'
          description: The existing association identifier that uniquely identifies
            the resource type and storage config for the given instance ID.
        StorageType:
          allOf:
          - $ref: '#/components/schemas/StorageType'
          description: A valid storage type.
        S3Config:
          allOf:
          - $ref: '#/components/schemas/S3Config'
          description: The S3 bucket configuration.
        KinesisVideoStreamConfig:
          allOf:
          - $ref: '#/components/schemas/KinesisVideoStreamConfig'
          description: The configuration of the Kinesis video stream.
        KinesisStreamConfig:
          allOf:
          - $ref: '#/components/schemas/KinesisStreamConfig'
          description: The configuration of the Kinesis data stream.
        KinesisFirehoseConfig:
          allOf:
          - $ref: '#/components/schemas/KinesisFirehoseConfig'
          description: The configuration of the Kinesis Firehose delivery stream.
      required:
      - StorageType
      description: The storage configuration for the instance.
    InstanceStorageConfigs:
      type: array
      items:
        $ref: '#/components/schemas/InstanceStorageConfig'
    InstanceStorageResourceType:
      type: string
      enum:
      - CHAT_TRANSCRIPTS
      - CALL_RECORDINGS
      - SCHEDULED_REPORTS
      - MEDIA_STREAMS
      - CONTACT_TRACE_RECORDS
      - AGENT_EVENTS
      - REAL_TIME_CONTACT_ANALYSIS_SEGMENTS
      - ATTACHMENTS
      - CONTACT_EVALUATIONS
      - SCREEN_RECORDINGS
      - REAL_TIME_CONTACT_ANALYSIS_CHAT_SEGMENTS
      - REAL_TIME_CONTACT_ANALYSIS_VOICE_SEGMENTS
      - EMAIL_MESSAGES
    InstanceSummary:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the instance.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the instance.
        IdentityManagementType:
          allOf:
          - $ref: '#/components/schemas/DirectoryType'
          description: The identity management type of the instance.
        InstanceAlias:
          allOf:
          - $ref: '#/components/schemas/DirectoryAlias'
          description: The alias of the instance.
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: When the instance was created.
        ServiceRole:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The service role of the instance.
        InstanceStatus:
          allOf:
          - $ref: '#/components/schemas/InstanceStatus'
          description: The state of the instance.
        InboundCallsEnabled:
          allOf:
          - $ref: '#/components/schemas/InboundCallsEnabled'
          description: Whether inbound calls are enabled.
        OutboundCallsEnabled:
          allOf:
          - $ref: '#/components/schemas/OutboundCallsEnabled'
          description: Whether outbound calls are enabled.
        InstanceAccessUrl:
          allOf:
          - $ref: '#/components/schemas/Url'
          description: This URL allows contact center users to access the Amazon Connect
            admin website.
      description: Information about the instance.
    InstanceSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/InstanceSummary'
    Integer:
      type: integer
      default: 0
    IntegerCount:
      type: integer
      minimum: 0
    IntegrationAssociationId:
      type: string
      minLength: 1
      maxLength: 200
    IntegrationAssociationSummary:
      type: object
      properties:
        IntegrationAssociationId:
          allOf:
          - $ref: '#/components/schemas/IntegrationAssociationId'
          description: The identifier for the AppIntegration association.
        IntegrationAssociationArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for the AppIntegration association.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        IntegrationType:
          allOf:
          - $ref: '#/components/schemas/IntegrationType'
          description: The integration type.
        IntegrationArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for the AppIntegration.
        SourceApplicationUrl:
          allOf:
          - $ref: '#/components/schemas/URI'
          description: The URL for the external application.
        SourceApplicationName:
          allOf:
          - $ref: '#/components/schemas/SourceApplicationName'
          description: The user-provided, friendly name for the external application.
        SourceType:
          allOf:
          - $ref: '#/components/schemas/SourceType'
          description: The name of the source.
      description: Contains summary information about the associated AppIntegrations.
    IntegrationAssociationSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/IntegrationAssociationSummary'
    IntegrationType:
      type: string
      enum:
      - EVENT
      - VOICE_ID
      - PINPOINT_APP
      - WISDOM_ASSISTANT
      - WISDOM_KNOWLEDGE_BASE
      - WISDOM_QUICK_RESPONSES
      - Q_MESSAGE_TEMPLATES
      - CASES_DOMAIN
      - APPLICATION
      - FILE_SCANNER
      - SES_IDENTITY
      - ANALYTICS_CONNECTOR
      - CALL_TRANSFER_CONNECTOR
      - COGNITO_USER_POOL
    InternalServiceException:
      type: object
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/Message'
          description: The message.
      description: Request processing failed because of an error or failure with the
        service.
    IntervalDetails:
      type: object
      properties:
        TimeZone:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The timezone applied to requested metrics.
        IntervalPeriod:
          allOf:
          - $ref: '#/components/schemas/IntervalPeriod'
          description: "`IntervalPeriod`: An aggregated grouping applied to request\
            \ metrics. Valid `IntervalPeriod` values are: `FIFTEEN_MIN` | `THIRTY_MIN`\
            \ | `HOUR` | `DAY` | `WEEK` | `TOTAL`. \n\nFor example, if `IntervalPeriod`\
            \ is selected `THIRTY_MIN`, `StartTime` and `EndTime` differs by 1 day,\
            \ then Amazon Connect returns 48 results in the response. Each result\
            \ is aggregated by the THIRTY_MIN period. By default Amazon Connect aggregates\
            \ results based on the `TOTAL` interval period.\n\nThe following list\
            \ describes restrictions on `StartTime` and `EndTime` based on what `IntervalPeriod`\
            \ is requested.\n\n  * `FIFTEEN_MIN`: The difference between `StartTime`\
            \ and `EndTime` must be less than 3 days.\n\n  * `THIRTY_MIN`: The difference\
            \ between `StartTime` and `EndTime` must be less than 3 days.\n\n  * `HOUR`:\
            \ The difference between `StartTime` and `EndTime` must be less than 3\
            \ days.\n\n  * `DAY`: The difference between `StartTime` and `EndTime`\
            \ must be less than 35 days.\n\n  * `WEEK`: The difference between `StartTime`\
            \ and `EndTime` must be less than 35 days.\n\n  * `TOTAL`: The difference\
            \ between `StartTime` and `EndTime` must be less than 35 days."
      description: Information about the interval period to use for returning results.
    IntervalPeriod:
      type: string
      enum:
      - FIFTEEN_MIN
      - THIRTY_MIN
      - HOUR
      - DAY
      - WEEK
      - TOTAL
    InvalidContactFlowException:
      type: object
      properties:
        problems:
          allOf:
          - $ref: '#/components/schemas/Problems'
          description: The problems with the flow. Please fix before trying again.
      description: The flow is not valid.
    InvalidContactFlowModuleException:
      type: object
      properties:
        Problems:
          $ref: '#/components/schemas/Problems'
      description: The problems with the module. Please fix before trying again.
    InvalidParameterException:
      type: object
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/Message'
          description: The message about the parameters.
      description: One or more of the specified parameters are not valid.
    InvalidRequestException:
      type: object
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/Message'
          description: The message about the request.
        Reason:
          $ref: '#/components/schemas/InvalidRequestExceptionReason'
      description: The request is not valid.
    InvalidRequestExceptionReason:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/AttachedFileInvalidRequestExceptionReason'
        description: |-
          Reason why the StartAttachedFiledUpload request was invalid.
      description: |-
        Reason why the request was invalid.
    InvisibleFieldInfo:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateFieldIdentifier'
          description: Identifier of the invisible field.
      description: A field that is invisible to an agent.
    InvisibleTaskTemplateFields:
      type: array
      items:
        $ref: '#/components/schemas/InvisibleFieldInfo'
    IpCidr:
      type: string
      pattern: ^[A-Za-z0-9:/]*$
      minLength: 2
      maxLength: 50
    IpCidrList:
      type: array
      items:
        $ref: '#/components/schemas/IpCidr'
    IvrRecordingTrack:
      type: string
      enum:
      - ALL
    JoinToken:
      type: string
    KeyId:
      type: string
      minLength: 1
      maxLength: 128
    KinesisFirehoseConfig:
      type: object
      properties:
        FirehoseArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the delivery stream.
      required:
      - FirehoseArn
      description: Configuration information of a Kinesis Data Firehose delivery stream.
    KinesisStreamConfig:
      type: object
      properties:
        StreamArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the data stream.
      required:
      - StreamArn
      description: Configuration information of a Kinesis data stream.
    KinesisVideoStreamConfig:
      type: object
      properties:
        Prefix:
          allOf:
          - $ref: '#/components/schemas/Prefix'
          description: The prefix of the video stream.
        RetentionPeriodHours:
          allOf:
          - $ref: '#/components/schemas/Hours'
          description: 'The number of hours data is retained in the stream. Kinesis
            Video Streams retains the data in a data store that is associated with
            the stream.


            The default value is 0, indicating that the stream does not persist data.'
        EncryptionConfig:
          allOf:
          - $ref: '#/components/schemas/EncryptionConfig'
          description: The encryption configuration.
      required:
      - Prefix
      - RetentionPeriodHours
      - EncryptionConfig
      description: Configuration information of a Kinesis video stream.
    LargeNextToken:
      type: string
      minLength: 1
      maxLength: 100000
    LexBot:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/BotName'
          description: The name of the Amazon Lex bot.
        LexRegion:
          allOf:
          - $ref: '#/components/schemas/LexRegion'
          description: The Amazon Web Services Region where the Amazon Lex bot was
            created.
      required:
      - Name
      - LexRegion
      description: Configuration information of an Amazon Lex bot.
    LexBotConfig:
      type: object
      properties:
        LexBot:
          $ref: '#/components/schemas/LexBot'
        LexV2Bot:
          allOf:
          - $ref: '#/components/schemas/LexV2Bot'
          description: Configuration information of an Amazon Lex V2 bot.
      description: Configuration information of an Amazon Lex or Amazon Lex V2 bot.
    LexBotConfigList:
      type: array
      items:
        $ref: '#/components/schemas/LexBotConfig'
    LexBotsList:
      type: array
      items:
        $ref: '#/components/schemas/LexBot'
    LexRegion:
      type: string
      minLength: 0
      maxLength: 60
    LexV2Bot:
      type: object
      properties:
        AliasArn:
          allOf:
          - $ref: '#/components/schemas/AliasArn'
          description: The Amazon Resource Name (ARN) of the Amazon Lex V2 bot.
      description: Configuration information of an Amazon Lex V2 bot.
    LexVersion:
      type: string
      enum:
      - V1
      - V2
    LimitExceededException:
      type: object
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/Message'
          description: The message about the limit.
      description: The allowed limit for the resource has been exceeded.
    ListAgentStatusRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult1000'
          description: The maximum number of results to return per page.
        AgentStatusTypes:
          allOf:
          - $ref: '#/components/schemas/AgentStatusTypes'
          description: Available agent status types.
      required:
      - InstanceId
    ListAgentStatusResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
        AgentStatusSummaryList:
          allOf:
          - $ref: '#/components/schemas/AgentStatusSummaryList'
          description: A summary of agent statuses.
    ListAnalyticsDataAssociationsRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        DataSetId:
          allOf:
          - $ref: '#/components/schemas/DataSetId'
          description: The identifier of the dataset to get the association status.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult1000'
          description: The maximum number of results to return per page.
      required:
      - InstanceId
    ListAnalyticsDataAssociationsResponse:
      type: object
      properties:
        Results:
          allOf:
          - $ref: '#/components/schemas/AnalyticsDataAssociationResults'
          description: 'An array of successful results: `DataSetId`, `TargetAccountId`,
            `ResourceShareId`, `ResourceShareArn`. This is a paginated API, so `nextToken`
            is given if there are more results to be returned.'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
    ListAnalyticsDataLakeDataSetsRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult1000'
          description: The maximum number of results to return per page.
      required:
      - InstanceId
    ListAnalyticsDataLakeDataSetsResponse:
      type: object
      properties:
        Results:
          allOf:
          - $ref: '#/components/schemas/AnalyticsDataSetsResults'
          description: 'An array of successful results: `DataSetId`, `DataSetName`.
            This is a paginated API, so `nextToken` is given if there are more results
            to be returned.'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
    ListApprovedOriginsRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult25'
          description: The maximum number of results to return per page.
      required:
      - InstanceId
    ListApprovedOriginsResponse:
      type: object
      properties:
        Origins:
          allOf:
          - $ref: '#/components/schemas/OriginsList'
          description: The approved origins.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
    ListAssociatedContactsRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact in this instance of Amazon Connect.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ListAssociatedContactsRequestMaxResults'
          description: 'The maximum number of results to return per page.


            The maximum number of results to return per page. The default MaxResult
            size is 25.


            Valid Range: Minimum value of 1. Maximum value of 100.'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
      required:
      - InstanceId
      - ContactId
    ListAssociatedContactsRequestMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    ListAssociatedContactsResponse:
      type: object
      properties:
        ContactSummaryList:
          allOf:
          - $ref: '#/components/schemas/AssociatedContactSummaryList'
          description: List of the contact summary for all the contacts in contact
            tree associated with unique identifier.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
    ListAuthenticationProfilesRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult1000'
          description: The maximum number of results to return per page.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
      required:
      - InstanceId
    ListAuthenticationProfilesResponse:
      type: object
      properties:
        AuthenticationProfileSummaryList:
          allOf:
          - $ref: '#/components/schemas/AuthenticationProfileSummaryList'
          description: A summary of a given authentication profile.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
    ListBotsRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult25'
          description: The maximum number of results to return per page.
        LexVersion:
          allOf:
          - $ref: '#/components/schemas/LexVersion'
          description: The version of Amazon Lex or Amazon Lex V2.
      required:
      - InstanceId
      - LexVersion
    ListBotsResponse:
      type: object
      properties:
        LexBots:
          allOf:
          - $ref: '#/components/schemas/LexBotConfigList'
          description: The names and Amazon Web Services Regions of the Amazon Lex
            or Amazon Lex V2 bots associated with the specified instance.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
    ListCondition:
      type: object
      properties:
        TargetListType:
          allOf:
          - $ref: '#/components/schemas/TargetListType'
          description: The type of target list that will be used to filter the users.
        Conditions:
          allOf:
          - $ref: '#/components/schemas/Conditions'
          description: A list of Condition objects which would be applied together
            with an AND condition.
      description: A leaf node condition which can be used to specify a List condition
        to search users with attributes included in Lists like Proficiencies.
    ListContactEvaluationsRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact in this instance of Amazon Connect.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: 'The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.


            This is not expected to be set because the value returned in the previous
            response is always null.'
      required:
      - InstanceId
      - ContactId
    ListContactEvaluationsResponse:
      type: object
      properties:
        EvaluationSummaryList:
          allOf:
          - $ref: '#/components/schemas/EvaluationSummaryList'
          description: Provides details about a list of contact evaluations belonging
            to an instance.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: 'If there are additional results, this is the token for the
            next set of results.


            This is always returned as null in the response.'
      required:
      - EvaluationSummaryList
    ListContactFlowModulesRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult1000'
          description: The maximum number of results to return per page.
        ContactFlowModuleState:
          allOf:
          - $ref: '#/components/schemas/ContactFlowModuleState'
          description: The state of the flow module.
      required:
      - InstanceId
    ListContactFlowModulesResponse:
      type: object
      properties:
        ContactFlowModulesSummaryList:
          allOf:
          - $ref: '#/components/schemas/ContactFlowModulesSummaryList'
          description: Information about the flow module.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
    ListContactFlowVersionsRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance.
        ContactFlowId:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The identifier of the flow.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult1000'
          description: The maximum number of results to return per page. The default
            MaxResult size is 100.
      required:
      - InstanceId
      - ContactFlowId
    ListContactFlowVersionsResponse:
      type: object
      properties:
        ContactFlowVersionSummaryList:
          allOf:
          - $ref: '#/components/schemas/ContactFlowVersionSummaryList'
          description: A list of flow version summaries.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
    ListContactFlowsRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        ContactFlowTypes:
          allOf:
          - $ref: '#/components/schemas/ContactFlowTypes'
          description: The type of flow.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult1000'
          description: The maximum number of results to return per page. The default
            MaxResult size is 100.
      required:
      - InstanceId
    ListContactFlowsResponse:
      type: object
      properties:
        ContactFlowSummaryList:
          allOf:
          - $ref: '#/components/schemas/ContactFlowSummaryList'
          description: Information about the flows.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
    ListContactReferencesRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the initial contact.
        ReferenceTypes:
          allOf:
          - $ref: '#/components/schemas/ReferenceTypes'
          description: The type of reference.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: 'The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.


            This is not expected to be set, because the value returned in the previous
            response is always null.'
      required:
      - InstanceId
      - ContactId
      - ReferenceTypes
    ListContactReferencesResponse:
      type: object
      properties:
        ReferenceSummaryList:
          allOf:
          - $ref: '#/components/schemas/ReferenceSummaryList'
          description: Information about the flows.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: 'If there are additional results, this is the token for the
            next set of results.


            This is always returned as null in the response.'
    ListDefaultVocabulariesRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        LanguageCode:
          allOf:
          - $ref: '#/components/schemas/VocabularyLanguageCode'
          description: The language code of the vocabulary entries. For a list of
            languages and their corresponding language codes, see [What is Amazon
            Transcribe?](https://docs.aws.amazon.com/transcribe/latest/dg/transcribe-whatis.html)
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult100'
          description: The maximum number of results to return per page.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/VocabularyNextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
      required:
      - InstanceId
    ListDefaultVocabulariesResponse:
      type: object
      properties:
        DefaultVocabularyList:
          allOf:
          - $ref: '#/components/schemas/DefaultVocabularyList'
          description: A list of default vocabularies.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/VocabularyNextToken'
          description: If there are additional results, this is the token for the
            next set of results.
      required:
      - DefaultVocabularyList
    ListEvaluationFormVersionsRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        EvaluationFormId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: The unique identifier for the evaluation form.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult100'
          description: The maximum number of results to return per page.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
      required:
      - InstanceId
      - EvaluationFormId
    ListEvaluationFormVersionsResponse:
      type: object
      properties:
        EvaluationFormVersionSummaryList:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormVersionSummaryList'
          description: Provides details about a list of evaluation forms belonging
            to an instance.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
      required:
      - EvaluationFormVersionSummaryList
    ListEvaluationFormsRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult100'
          description: The maximum number of results to return per page.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
      required:
      - InstanceId
    ListEvaluationFormsResponse:
      type: object
      properties:
        EvaluationFormSummaryList:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormSummaryList'
          description: Provides details about a list of evaluation forms belonging
            to an instance.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
      required:
      - EvaluationFormSummaryList
    ListFlowAssociationResourceType:
      type: string
      enum:
      - WHATSAPP_MESSAGING_PHONE_NUMBER
      - VOICE_PHONE_NUMBER
      - INBOUND_EMAIL
      - OUTBOUND_EMAIL
      - ANALYTICS_CONNECTOR
    ListFlowAssociationsRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ListFlowAssociationResourceType'
          description: A valid resource type.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult1000'
          description: The maximum number of results to return per page.
      required:
      - InstanceId
    ListFlowAssociationsResponse:
      type: object
      properties:
        FlowAssociationSummaryList:
          allOf:
          - $ref: '#/components/schemas/FlowAssociationSummaryList'
          description: Summary of flow associations.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
    ListHoursOfOperationOverridesRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance.
        HoursOfOperationId:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationId'
          description: The identifier for the hours of operation
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult100'
          description: 'The maximum number of results to return per page. The default
            MaxResult size is 100. Valid Range: Minimum value of 1. Maximum value
            of 1000.'
      required:
      - InstanceId
      - HoursOfOperationId
    ListHoursOfOperationOverridesResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        HoursOfOperationOverrideList:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationOverrideList'
          description: Information about the hours of operation override.
        LastModifiedRegion:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          description: The AWS Region where this resource was last modified.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when this resource was last modified.
    ListHoursOfOperationsRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult1000'
          description: The maximum number of results to return per page. The default
            MaxResult size is 100.
      required:
      - InstanceId
    ListHoursOfOperationsResponse:
      type: object
      properties:
        HoursOfOperationSummaryList:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationSummaryList'
          description: Information about the hours of operation.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
    ListInstanceAttributesRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult7'
          description: The maximum number of results to return per page.
      required:
      - InstanceId
    ListInstanceAttributesResponse:
      type: object
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/AttributesList'
          description: The attribute types.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
    ListInstanceStorageConfigsRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/InstanceStorageResourceType'
          description: A valid resource type.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult10'
          description: The maximum number of results to return per page.
      required:
      - InstanceId
      - ResourceType
    ListInstanceStorageConfigsResponse:
      type: object
      properties:
        StorageConfigs:
          allOf:
          - $ref: '#/components/schemas/InstanceStorageConfigs'
          description: A valid storage type.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
    ListInstancesRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult10'
          description: The maximum number of results to return per page.
    ListInstancesResponse:
      type: object
      properties:
        InstanceSummaryList:
          allOf:
          - $ref: '#/components/schemas/InstanceSummaryList'
          description: Information about the instances.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
    ListIntegrationAssociationsRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        IntegrationType:
          allOf:
          - $ref: '#/components/schemas/IntegrationType'
          description: The integration type.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult100'
          description: The maximum number of results to return per page.
        IntegrationArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the integration.
      required:
      - InstanceId
    ListIntegrationAssociationsResponse:
      type: object
      properties:
        IntegrationAssociationSummaryList:
          allOf:
          - $ref: '#/components/schemas/IntegrationAssociationSummaryList'
          description: The associations.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
    ListLambdaFunctionsRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult25'
          description: The maximum number of results to return per page.
      required:
      - InstanceId
    ListLambdaFunctionsResponse:
      type: object
      properties:
        LambdaFunctions:
          allOf:
          - $ref: '#/components/schemas/FunctionArnsList'
          description: The Lambdafunction ARNs associated with the specified instance.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
    ListLexBotsRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult25'
          description: The maximum number of results to return per page. If no value
            is specified, the default is 10.
      required:
      - InstanceId
    ListLexBotsResponse:
      type: object
      properties:
        LexBots:
          allOf:
          - $ref: '#/components/schemas/LexBotsList'
          description: The names and Amazon Web Services Regions of the Amazon Lex
            bots associated with the specified instance.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
    ListPhoneNumbersRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        PhoneNumberTypes:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberTypes'
          description: 'The type of phone number.


            We recommend using [ListPhoneNumbersV2](https://docs.aws.amazon.com/connect/latest/APIReference/API_ListPhoneNumbersV2.html)
            to return phone number types. While ListPhoneNumbers returns number types
            `UIFN`, `SHARED`, `THIRD_PARTY_TF`, and `THIRD_PARTY_DID`, it incorrectly
            lists them as `TOLL_FREE` or `DID`.'
        PhoneNumberCountryCodes:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberCountryCodes'
          description: The ISO country code.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult1000'
          description: The maximum number of results to return per page. The default
            MaxResult size is 100.
      required:
      - InstanceId
    ListPhoneNumbersResponse:
      type: object
      properties:
        PhoneNumberSummaryList:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberSummaryList'
          description: Information about the phone numbers.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
    ListPhoneNumbersSummary:
      type: object
      properties:
        PhoneNumberId:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberId'
          description: A unique identifier for the phone number.
        PhoneNumberArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the phone number.
        PhoneNumber:
          allOf:
          - $ref: '#/components/schemas/PhoneNumber'
          description: The phone number. Phone numbers are formatted `[+] [country
            code] [subscriber number including area code]`.
        PhoneNumberCountryCode:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberCountryCode'
          description: The ISO country code.
        PhoneNumberType:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberType'
          description: The type of phone number.
        TargetArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for Amazon Connect instances
            or traffic distribution groups that phone number inbound traffic is routed
            through.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance that phone numbers
            are claimed to. You can [find the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        PhoneNumberDescription:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberDescription'
          description: The description of the phone number.
        SourcePhoneNumberArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The claimed phone number ARN that was previously imported from
            the external service, such as Amazon Web Services End User Messaging.
            If it is from Amazon Web Services End User Messaging, it looks like the
            ARN of the phone number that was imported from Amazon Web Services End
            User Messaging.
      description: Information about phone numbers that have been claimed to your
        Amazon Connect instance or traffic distribution group.
    ListPhoneNumbersSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ListPhoneNumbersSummary'
    ListPhoneNumbersV2Request:
      type: object
      properties:
        TargetArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for Amazon Connect instances
            or traffic distribution groups that phone number inbound traffic is routed
            through. If both `TargetArn` and `InstanceId` input are not provided,
            this API lists numbers claimed to all the Amazon Connect instances belonging
            to your account in the same Amazon Web Services Region as the request.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance that phone numbers
            are claimed to. You can [find the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance. If both `TargetArn`
            and `InstanceId` are not provided, this API lists numbers claimed to all
            the Amazon Connect instances belonging to your account in the same AWS
            Region as the request.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult1000'
          description: The maximum number of results to return per page.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/LargeNextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        PhoneNumberCountryCodes:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberCountryCodes'
          description: The ISO country code.
        PhoneNumberTypes:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberTypes'
          description: The type of phone number.
        PhoneNumberPrefix:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberPrefix'
          description: The prefix of the phone number. If provided, it must contain
            `+` as part of the country code.
    ListPhoneNumbersV2Response:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/LargeNextToken'
          description: If there are additional results, this is the token for the
            next set of results.
        ListPhoneNumbersSummaryList:
          allOf:
          - $ref: '#/components/schemas/ListPhoneNumbersSummaryList'
          description: Information about phone numbers that have been claimed to your
            Amazon Connect instances or traffic distribution groups.
    ListPredefinedAttributesRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can find
            the instance ID in the Amazon Resource Name (ARN) of the instance.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult100'
          description: The maximum number of results to return per page.
      required:
      - InstanceId
    ListPredefinedAttributesResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
        PredefinedAttributeSummaryList:
          allOf:
          - $ref: '#/components/schemas/PredefinedAttributeSummaryList'
          description: Summary of the predefined attributes.
    ListPromptsRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult1000'
          description: The maximum number of results to return per page. The default
            MaxResult size is 100.
      required:
      - InstanceId
    ListPromptsResponse:
      type: object
      properties:
        PromptSummaryList:
          allOf:
          - $ref: '#/components/schemas/PromptSummaryList'
          description: Information about the prompts.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
    ListQueueQuickConnectsRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        QueueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The identifier for the queue.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult100'
          description: The maximum number of results to return per page. The default
            MaxResult size is 100.
      required:
      - InstanceId
      - QueueId
    ListQueueQuickConnectsResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
        QuickConnectSummaryList:
          allOf:
          - $ref: '#/components/schemas/QuickConnectSummaryList'
          description: Information about the quick connects.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when this resource was last modified.
        LastModifiedRegion:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          description: The Amazon Web Services Region where this resource was last
            modified.
    ListQueuesRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        QueueTypes:
          allOf:
          - $ref: '#/components/schemas/QueueTypes'
          description: The type of queue.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult1000'
          description: The maximum number of results to return per page. The default
            MaxResult size is 100.
      required:
      - InstanceId
    ListQueuesResponse:
      type: object
      properties:
        QueueSummaryList:
          allOf:
          - $ref: '#/components/schemas/QueueSummaryList'
          description: Information about the queues.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
    ListQuickConnectsRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult1000'
          description: The maximum number of results to return per page. The default
            MaxResult size is 100.
        QuickConnectTypes:
          allOf:
          - $ref: '#/components/schemas/QuickConnectTypes'
          description: 'The type of quick connect. In the Amazon Connect admin website,
            when you create a quick connect, you are prompted to assign one of the
            following types: Agent (USER), External (PHONE_NUMBER), or Queue (QUEUE).'
      required:
      - InstanceId
    ListQuickConnectsResponse:
      type: object
      properties:
        QuickConnectSummaryList:
          allOf:
          - $ref: '#/components/schemas/QuickConnectSummaryList'
          description: Information about the quick connects.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
    ListRealtimeContactAnalysisSegmentsV2Request:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact in this instance of Amazon Connect.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult100'
          description: The maximum number of results to return per page.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/LargeNextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        OutputType:
          allOf:
          - $ref: '#/components/schemas/RealTimeContactAnalysisOutputType'
          description: The Contact Lens output type to be returned.
        SegmentTypes:
          allOf:
          - $ref: '#/components/schemas/RealTimeContactAnalysisSegmentTypes'
          description: Enum with segment types . Each value corresponds to a segment
            type returned in the segments list of the API. Each segment type has its
            own structure. Different channels may have different sets of supported
            segment types.
      required:
      - InstanceId
      - ContactId
      - OutputType
      - SegmentTypes
    ListRealtimeContactAnalysisSegmentsV2Response:
      type: object
      properties:
        Channel:
          allOf:
          - $ref: '#/components/schemas/RealTimeContactAnalysisSupportedChannel'
          description: 'The channel of the contact.


            Only `CHAT` is supported. This API does not support `VOICE`. If you attempt
            to use it for the VOICE channel, an `InvalidRequestException` error occurs.'
        Status:
          allOf:
          - $ref: '#/components/schemas/RealTimeContactAnalysisStatus'
          description: Status of real-time contact analysis.
        Segments:
          allOf:
          - $ref: '#/components/schemas/RealtimeContactAnalysisSegments'
          description: An analyzed transcript or category.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/LargeNextToken'
          description: If there are additional results, this is the token for the
            next set of results.
      required:
      - Channel
      - Status
      - Segments
    ListRoutingProfileQueuesRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        RoutingProfileId:
          allOf:
          - $ref: '#/components/schemas/RoutingProfileId'
          description: The identifier of the routing profile.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult100'
          description: The maximum number of results to return per page. The default
            MaxResult size is 100.
      required:
      - InstanceId
      - RoutingProfileId
    ListRoutingProfileQueuesResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
        RoutingProfileQueueConfigSummaryList:
          allOf:
          - $ref: '#/components/schemas/RoutingProfileQueueConfigSummaryList'
          description: Information about the routing profiles.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when this resource was last modified.
        LastModifiedRegion:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          description: The Amazon Web Services Region where this resource was last
            modified.
    ListRoutingProfilesRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult1000'
          description: The maximum number of results to return per page. The default
            MaxResult size is 100.
      required:
      - InstanceId
    ListRoutingProfilesResponse:
      type: object
      properties:
        RoutingProfileSummaryList:
          allOf:
          - $ref: '#/components/schemas/RoutingProfileSummaryList'
          description: Information about the routing profiles.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
    ListRulesRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        PublishStatus:
          allOf:
          - $ref: '#/components/schemas/RulePublishStatus'
          description: The publish status of the rule.
        EventSourceName:
          allOf:
          - $ref: '#/components/schemas/EventSourceName'
          description: The name of the event source.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult200'
          description: The maximum number of results to return per page.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
      required:
      - InstanceId
    ListRulesResponse:
      type: object
      properties:
        RuleSummaryList:
          allOf:
          - $ref: '#/components/schemas/RuleSummaryList'
          description: Summary information about a rule.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
      required:
      - RuleSummaryList
    ListSecurityKeysRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult2'
          description: The maximum number of results to return per page.
      required:
      - InstanceId
    ListSecurityKeysResponse:
      type: object
      properties:
        SecurityKeys:
          allOf:
          - $ref: '#/components/schemas/SecurityKeysList'
          description: The security keys.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
    ListSecurityProfileApplicationsRequest:
      type: object
      properties:
        SecurityProfileId:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileId'
          description: The identifier for the security profle.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult1000'
          description: The maximum number of results to return per page.
      required:
      - SecurityProfileId
      - InstanceId
    ListSecurityProfileApplicationsResponse:
      type: object
      properties:
        Applications:
          allOf:
          - $ref: '#/components/schemas/Applications'
          description: A list of the third-party application's metadata.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when this resource was last modified.
        LastModifiedRegion:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          description: The Amazon Web Services Region where this resource was last
            modified.
    ListSecurityProfilePermissionsRequest:
      type: object
      properties:
        SecurityProfileId:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileId'
          description: The identifier for the security profle.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult1000'
          description: The maximum number of results to return per page.
      required:
      - SecurityProfileId
      - InstanceId
    ListSecurityProfilePermissionsResponse:
      type: object
      properties:
        Permissions:
          allOf:
          - $ref: '#/components/schemas/PermissionsList'
          description: The permissions granted to the security profile. For a complete
            list of valid permissions, see [List of security profile permissions](https://docs.aws.amazon.com/connect/latest/adminguide/security-profile-list.html).
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when this resource was last modified.
        LastModifiedRegion:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          description: The Amazon Web Services Region where this resource was last
            modified.
    ListSecurityProfilesRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult1000'
          description: The maximum number of results to return per page. The default
            MaxResult size is 100.
      required:
      - InstanceId
    ListSecurityProfilesResponse:
      type: object
      properties:
        SecurityProfileSummaryList:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileSummaryList'
          description: Information about the security profiles.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
    ListTagsForResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the resource. All Amazon
            Connect resources (instances, queues, flows, routing profiles, etc) have
            an ARN. To locate the ARN for an instance, for example, see [Find your
            Amazon Connect instance ID/ARN](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html).
      required:
      - resourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Information about the tags.
    ListTaskTemplatesRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: 'The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.


            It is not expected that you set this because the value returned in the
            previous response is always null.'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult100'
          description: 'The maximum number of results to return per page.


            It is not expected that you set this.'
        Status:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateStatus'
          description: Marks a template as `ACTIVE` or `INACTIVE` for a task to refer
            to it. Tasks can only be created from `ACTIVE` templates. If a template
            is marked as `INACTIVE`, then a task that refers to this template cannot
            be created.
        Name:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateName'
          description: The name of the task template.
      required:
      - InstanceId
    ListTaskTemplatesResponse:
      type: object
      properties:
        TaskTemplates:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateList'
          description: Provides details about a list of task templates belonging to
            an instance.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: 'If there are additional results, this is the token for the
            next set of results.


            This is always returned as a null in the response.'
    ListTrafficDistributionGroupUsersRequest:
      type: object
      properties:
        TrafficDistributionGroupId:
          allOf:
          - $ref: '#/components/schemas/TrafficDistributionGroupIdOrArn'
          description: The identifier of the traffic distribution group. This can
            be the ID or the ARN if the API is being called in the Region where the
            traffic distribution group was created. The ARN must be provided if the
            call is from the replicated Region.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult10'
          description: The maximum number of results to return per page.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
      required:
      - TrafficDistributionGroupId
    ListTrafficDistributionGroupUsersResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
        TrafficDistributionGroupUserSummaryList:
          allOf:
          - $ref: '#/components/schemas/TrafficDistributionGroupUserSummaryList'
          description: A list of traffic distribution group users.
    ListTrafficDistributionGroupsRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult10'
          description: The maximum number of results to return per page.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceIdOrArn'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
    ListTrafficDistributionGroupsResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
        TrafficDistributionGroupSummaryList:
          allOf:
          - $ref: '#/components/schemas/TrafficDistributionGroupSummaryList'
          description: A list of traffic distribution groups.
    ListUseCasesRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        IntegrationAssociationId:
          allOf:
          - $ref: '#/components/schemas/IntegrationAssociationId'
          description: The identifier for the integration association.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult100'
          description: The maximum number of results to return per page.
      required:
      - InstanceId
      - IntegrationAssociationId
      description: Provides summary information about the use cases for the specified
        integration association.
    ListUseCasesResponse:
      type: object
      properties:
        UseCaseSummaryList:
          allOf:
          - $ref: '#/components/schemas/UseCaseSummaryList'
          description: The use cases.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
    ListUserHierarchyGroupsRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult1000'
          description: The maximum number of results to return per page. The default
            MaxResult size is 100.
      required:
      - InstanceId
    ListUserHierarchyGroupsResponse:
      type: object
      properties:
        UserHierarchyGroupSummaryList:
          allOf:
          - $ref: '#/components/schemas/HierarchyGroupSummaryList'
          description: Information about the hierarchy groups.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
    ListUserProficienciesRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can find
            the instance ID in the Amazon Resource Name (ARN) of the instance.
        UserId:
          allOf:
          - $ref: '#/components/schemas/UserId'
          description: The identifier of the user account.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult100'
          description: The maximum number of results to return per page.
      required:
      - InstanceId
      - UserId
    ListUserProficienciesResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
        UserProficiencyList:
          allOf:
          - $ref: '#/components/schemas/UserProficiencyList'
          description: Information about the user proficiencies.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The last time that the user's proficiencies are were modified.
        LastModifiedRegion:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          description: The region in which a user's proficiencies were last modified.
    ListUsersRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult1000'
          description: The maximum number of results to return per page. The default
            MaxResult size is 100.
      required:
      - InstanceId
    ListUsersResponse:
      type: object
      properties:
        UserSummaryList:
          allOf:
          - $ref: '#/components/schemas/UserSummaryList'
          description: Information about the users.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
    ListViewVersionsRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/ViewsInstanceId'
          description: The identifier of the Amazon Connect instance. You can find
            the instanceId in the ARN of the instance.
        ViewId:
          allOf:
          - $ref: '#/components/schemas/ViewId'
          description: The identifier of the view. Both `ViewArn` and `ViewId` can
            be used.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/ViewsNextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return per page. The default
            MaxResult size is 100.
      required:
      - InstanceId
      - ViewId
    ListViewVersionsResponse:
      type: object
      properties:
        ViewVersionSummaryList:
          allOf:
          - $ref: '#/components/schemas/ViewVersionSummaryList'
          description: A list of view version summaries.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/ViewsNextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
    ListViewsRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/ViewsInstanceId'
          description: The identifier of the Amazon Connect instance. You can find
            the instanceId in the ARN of the instance.
        Type:
          allOf:
          - $ref: '#/components/schemas/ViewType'
          description: The type of the view.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/ViewsNextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return per page. The default
            MaxResult size is 100.
      required:
      - InstanceId
    ListViewsResponse:
      type: object
      properties:
        ViewsSummaryList:
          allOf:
          - $ref: '#/components/schemas/ViewsSummaryList'
          description: A list of view summaries.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/ViewsNextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
    Long:
      type: integer
      format: int64
    MatchCriteria:
      type: object
      properties:
        AgentsCriteria:
          allOf:
          - $ref: '#/components/schemas/AgentsCriteria'
          description: An object to define agentIds.
      description: An object to define AgentsCriteria.
    MaxResult10:
      type: integer
      minimum: 1
      maximum: 10
    MaxResult100:
      type: integer
      minimum: 1
      maximum: 100
    MaxResult1000:
      type: integer
      minimum: 1
      maximum: 1000
    MaxResult2:
      type: integer
      minimum: 1
      maximum: 2
    MaxResult200:
      type: integer
      minimum: 1
      maximum: 200
    MaxResult25:
      type: integer
      minimum: 1
      maximum: 25
    MaxResult500:
      type: integer
      minimum: 1
      maximum: 500
    MaxResult7:
      type: integer
      minimum: 1
      maximum: 7
    MaxResults:
      type: integer
      default: 0
      minimum: 1
      maximum: 100
    MaximumResultReturnedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
      description: Maximum number (1000) of tags have been returned with current request.
        Consider changing request parameters to get more tags.
    MediaConcurrencies:
      type: array
      items:
        $ref: '#/components/schemas/MediaConcurrency'
    MediaConcurrency:
      type: object
      properties:
        Channel:
          allOf:
          - $ref: '#/components/schemas/Channel'
          description: The channels that agents can handle in the Contact Control
            Panel (CCP).
        Concurrency:
          allOf:
          - $ref: '#/components/schemas/Concurrency'
          description: 'The number of contacts an agent can have on a channel simultaneously.


            Valid Range for `VOICE`: Minimum value of 1. Maximum value of 1.


            Valid Range for `CHAT`: Minimum value of 1. Maximum value of 10.


            Valid Range for `TASK`: Minimum value of 1. Maximum value of 10.'
        CrossChannelBehavior:
          allOf:
          - $ref: '#/components/schemas/CrossChannelBehavior'
          description: Defines the cross-channel routing behavior for each channel
            that is enabled for this Routing Profile. For example, this allows you
            to offer an agent a different contact from another channel when they are
            currently working with a contact from a Voice channel.
      required:
      - Channel
      - Concurrency
      description: Contains information about which channels are supported, and how
        many contacts an agent can have on a channel simultaneously.
    MediaPlacement:
      type: object
      properties:
        AudioHostUrl:
          allOf:
          - $ref: '#/components/schemas/URI'
          description: The audio host URL.
        AudioFallbackUrl:
          allOf:
          - $ref: '#/components/schemas/URI'
          description: The audio fallback URL.
        SignalingUrl:
          allOf:
          - $ref: '#/components/schemas/URI'
          description: The signaling URL.
        TurnControlUrl:
          allOf:
          - $ref: '#/components/schemas/URI'
          description: The turn control URL.
        EventIngestionUrl:
          allOf:
          - $ref: '#/components/schemas/URI'
          description: The event ingestion URL to which you send client meeting events.
      description: A set of endpoints used by clients to connect to the media service
        group for an Amazon Chime SDK meeting.
    MediaRegion:
      type: string
    Meeting:
      type: object
      properties:
        MediaRegion:
          allOf:
          - $ref: '#/components/schemas/MediaRegion'
          description: The Amazon Web Services Region in which you create the meeting.
        MediaPlacement:
          allOf:
          - $ref: '#/components/schemas/MediaPlacement'
          description: The media placement for the meeting.
        MeetingFeatures:
          allOf:
          - $ref: '#/components/schemas/MeetingFeaturesConfiguration'
          description: The configuration settings of the features available to a meeting.
        MeetingId:
          allOf:
          - $ref: '#/components/schemas/MeetingId'
          description: The Amazon Chime SDK meeting ID.
      description: A meeting created using the Amazon Chime SDK.
    MeetingFeatureStatus:
      type: string
      enum:
      - AVAILABLE
      - UNAVAILABLE
    MeetingFeaturesConfiguration:
      type: object
      properties:
        Audio:
          allOf:
          - $ref: '#/components/schemas/AudioFeatures'
          description: The configuration settings for the audio features available
            to a meeting.
      description: The configuration settings of the features available to a meeting.
    MeetingId:
      type: string
    Message:
      type: string
    MessageTemplateId:
      type: string
      minLength: 1
      maxLength: 500
    MessageTemplateKnowledgeBaseId:
      type: string
      minLength: 1
      maxLength: 500
    MetadataUrl:
      type: string
      minLength: 1
      maxLength: 2000
    MetricDataCollectionsV2:
      type: array
      items:
        $ref: '#/components/schemas/MetricDataV2'
    MetricDataV2:
      type: object
      properties:
        Metric:
          allOf:
          - $ref: '#/components/schemas/MetricV2'
          description: The metric name, thresholds, and metric filters of the returned
            metric.
        Value:
          allOf:
          - $ref: '#/components/schemas/Value'
          description: The corresponding value of the metric returned in the response.
      description: Contains the name, thresholds, and metric filters.
    MetricFilterV2:
      type: object
      properties:
        MetricFilterKey:
          allOf:
          - $ref: '#/components/schemas/String'
          description: "The key to use for filtering data.\n\nValid metric filter\
            \ keys:\n\n  * ANSWERING_MACHINE_DETECTION_STATUS\n\n  * CASE_STATUS\n\
            \n  * DISCONNECT_REASON\n\n  * FLOWS_ACTION_IDENTIFIER\n\n  * FLOWS_NEXT_ACTION_IDENTIFIER\n\
            \n  * FLOWS_OUTCOME_TYPE\n\n  * FLOWS_RESOURCE_TYPE\n\n  * INITIATION_METHOD"
        MetricFilterValues:
          allOf:
          - $ref: '#/components/schemas/MetricFilterValueList'
          description: 'The values to use for filtering data. Values for metric-level
            filters can be either a fixed set of values or a customized list, depending
            on the use case.


            For valid values of metric-level filters `INITIATION_METHOD`, `DISCONNECT_REASON`,
            and `ANSWERING_MACHINE_DETECTION_STATUS`, see [ContactTraceRecord](https://docs.aws.amazon.com/connect/latest/adminguide/ctr-data-model.html#ctr-ContactTraceRecord)
            in the _Amazon Connect Administrator Guide_.


            For valid values of the metric-level filter `FLOWS_OUTCOME_TYPE`, see
            the description for the [Flow outcome](https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html#flows-outcome-historical)
            metric in the _Amazon Connect Administrator Guide_.


            For valid values of the metric-level filter `BOT_CONVERSATION_OUTCOME_TYPE`,
            see the description for the [Bot conversations completed](https://docs.aws.amazon.com/connect/latest/adminguide/bot-metrics.html#bot-conversations-completed-metric)
            in the _Amazon Connect Administrator Guide_.


            For valid values of the metric-level filter `BOT_INTENT_OUTCOME_TYPE`,
            see the description for the [Bot intents completed](https://docs.aws.amazon.com/connect/latest/adminguide/bot-metrics.html#bot-intents-completed-metric)
            metric in the _Amazon Connect Administrator Guide_.'
        Negate:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: If set to `true`, the API response contains results that filter
            out the results matched by the metric-level filters condition. By default,
            `Negate` is set to `false`.
      description: 'Contains information about the filter used when retrieving metrics.
        `MetricFiltersV2` can be used on the following metrics: `AVG_AGENT_CONNECTING_TIME`,
        `CONTACTS_CREATED`, `CONTACTS_HANDLED`, `SUM_CONTACTS_DISCONNECTED`.'
    MetricFilterValueList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    MetricFiltersV2List:
      type: array
      items:
        $ref: '#/components/schemas/MetricFilterV2'
    MetricInterval:
      type: object
      properties:
        Interval:
          allOf:
          - $ref: '#/components/schemas/IntervalPeriod'
          description: The interval period provided in the API request.
        StartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp, in UNIX Epoch time format. Start time is based
            on the interval period selected.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp, in UNIX Epoch time format. End time is based
            on the interval period selected. For example, If `IntervalPeriod` is selected
            `THIRTY_MIN`, `StartTime` and `EndTime` in the API request differs by
            1 day, then 48 results are returned in the response. Each result is aggregated
            by the 30 minutes period, with each `StartTime` and `EndTime` differing
            by 30 minutes.
      description: The interval period with the start and end time for the metrics.
    MetricNameV2:
      type: string
    MetricResultV2:
      type: object
      properties:
        Dimensions:
          allOf:
          - $ref: '#/components/schemas/DimensionsV2Map'
          description: The dimension for the metrics.
        MetricInterval:
          allOf:
          - $ref: '#/components/schemas/MetricInterval'
          description: The interval period with the start and end time for the metrics.
        Collections:
          allOf:
          - $ref: '#/components/schemas/MetricDataCollectionsV2'
          description: The set of metrics.
      description: Contains information about the metric results.
    MetricResultsV2:
      type: array
      items:
        $ref: '#/components/schemas/MetricResultV2'
    MetricV2:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/MetricNameV2'
          description: 'The name of the metric.


            This parameter is required. The following Required = No is incorrect.'
        Threshold:
          allOf:
          - $ref: '#/components/schemas/ThresholdCollections'
          description: Contains information about the threshold for service level
            metrics.
        MetricFilters:
          allOf:
          - $ref: '#/components/schemas/MetricFiltersV2List'
          description: Contains the filters to be used when returning data.
      description: Contains information about the metric.
    MetricsV2:
      type: array
      items:
        $ref: '#/components/schemas/MetricV2'
    MinutesLimit60:
      type: integer
      default: 0
      minimum: 0
      maximum: 59
    MonitorCapability:
      type: string
      enum:
      - SILENT_MONITOR
      - BARGE
    MonitorContactRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can find
            the instanceId in the ARN of the instance.
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact.
        UserId:
          allOf:
          - $ref: '#/components/schemas/AgentResourceId'
          description: The identifier of the user account.
        AllowedMonitorCapabilities:
          allOf:
          - $ref: '#/components/schemas/AllowedMonitorCapabilities'
          description: Specify which monitoring actions the user is allowed to take.
            For example, whether the user is allowed to escalate from silent monitoring
            to barge. AllowedMonitorCapabilities is required if barge is enabled.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
      required:
      - InstanceId
      - ContactId
      - UserId
    MonitorContactResponse:
      type: object
      properties:
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact.
        ContactArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the contact.
    Name:
      type: string
      minLength: 0
      maxLength: 1024
    Name128:
      type: string
      pattern: ^(^[\S].*[\S]$)|(^[\S]$)$
      minLength: 1
      maxLength: 128
    Namespace:
      type: string
      minLength: 1
      maxLength: 128
    NewChatCreated:
      type: boolean
    NewSessionDetails:
      type: object
      properties:
        SupportedMessagingContentTypes:
          allOf:
          - $ref: '#/components/schemas/SupportedMessagingContentTypes'
          description: 'The supported chat message content types. Supported types
            are `text/plain`, `text/markdown`, `application/json`, `application/vnd.amazonaws.connect.message.interactive`,
            and `application/vnd.amazonaws.connect.message.interactive.response`.


            Content types must always contain ` text/plain`. You can then put any
            other supported type in the list. For example, all the following lists
            are valid because they contain `text/plain`: `[text/plain, text/markdown,
            application/json]`, ` [text/markdown, text/plain]`, `[text/plain, application/json,
            application/vnd.amazonaws.connect.message.interactive.response]`.'
        ParticipantDetails:
          $ref: '#/components/schemas/ParticipantDetails'
        Attributes:
          allOf:
          - $ref: '#/components/schemas/Attributes'
          description: 'A custom key-value pair using an attribute map. The attributes
            are standard Amazon Connect attributes. They can be accessed in flows
            just like any other contact attributes.


            There can be up to 32,768 UTF-8 bytes across all key-value pairs per contact.
            Attribute keys can include only alphanumeric, dash, and underscore characters.'
        StreamingConfiguration:
          $ref: '#/components/schemas/ChatStreamingConfiguration'
      description: Payload of chat properties to apply when starting a new contact.
    NextToken:
      type: string
    NextToken2500:
      type: string
      minLength: 1
      maxLength: 2500
    NotificationContentType:
      type: string
      enum:
      - PLAIN_TEXT
    NotificationDeliveryType:
      type: string
      enum:
      - EMAIL
    NotificationRecipientType:
      type: object
      properties:
        UserTags:
          allOf:
          - $ref: '#/components/schemas/UserTagMap'
          description: 'The tags used to organize, track, or control access for this
            resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.
            Amazon Connect users with the specified tags will be notified.'
        UserIds:
          allOf:
          - $ref: '#/components/schemas/UserIdList'
          description: A list of user IDs. Supports variable injection of `$.ContactLens.ContactEvaluation.Agent.AgentId`
            for `OnContactEvaluationSubmit` event source.
      description: The type of notification recipient.
    NullableProficiencyLevel:
      type: number
      format: float
      minimum: 1.0
      maximum: 5.0
    NullableProficiencyLimitValue:
      type: integer
    NumberComparisonType:
      type: string
      enum:
      - GREATER_OR_EQUAL
      - GREATER
      - LESSER_OR_EQUAL
      - LESSER
      - EQUAL
      - NOT_EQUAL
      - RANGE
    NumberCondition:
      type: object
      properties:
        FieldName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the field in the number condition.
        MinValue:
          allOf:
          - $ref: '#/components/schemas/NullableProficiencyLimitValue'
          description: The minValue to be used while evaluating the number condition.
        MaxValue:
          allOf:
          - $ref: '#/components/schemas/NullableProficiencyLimitValue'
          description: The maxValue to be used while evaluating the number condition.
        ComparisonType:
          allOf:
          - $ref: '#/components/schemas/NumberComparisonType'
          description: The type of comparison to be made when evaluating the number
            condition.
      description: 'A leaf node condition which can be used to specify a numeric condition.


        The currently supported value for `FieldName` is `limit`.'
    NumberReference:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ReferenceKey'
          description: Identifier of the number reference.
        Value:
          allOf:
          - $ref: '#/components/schemas/ReferenceValue'
          description: A valid number.
      description: Information about a reference when the `referenceType` is `NUMBER`.
        Otherwise, null.
    NumericQuestionPropertyAutomationLabel:
      type: string
      enum:
      - OVERALL_CUSTOMER_SENTIMENT_SCORE
      - OVERALL_AGENT_SENTIMENT_SCORE
      - NON_TALK_TIME
      - NON_TALK_TIME_PERCENTAGE
      - NUMBER_OF_INTERRUPTIONS
      - CONTACT_DURATION
      - AGENT_INTERACTION_DURATION
      - CUSTOMER_HOLD_TIME
    NumericQuestionPropertyValueAutomation:
      type: object
      properties:
        Label:
          allOf:
          - $ref: '#/components/schemas/NumericQuestionPropertyAutomationLabel'
          description: The property label of the automation.
      required:
      - Label
      description: "Information about the property value used in automation of a numeric\
        \ questions. Label values are associated with minimum and maximum values for\
        \ the numeric question.\n\n  * Sentiment scores have a minimum value of -5\
        \ and maximum value of 5.\n\n  * Duration labels, such as `NON_TALK_TIME`,\
        \ `CONTACT_DURATION`, `AGENT_INTERACTION_DURATION`, `CUSTOMER_HOLD_TIME` have\
        \ a minimum value of 0 and maximum value of 63072000.\n\n  * Percentages have\
        \ a minimum value of 0 and maximum value of 100. \n\n  * `NUMBER_OF_INTERRUPTIONS`\
        \ has a minimum value of 0 and maximum value of 1000."
    OperatingSystem:
      type: string
      minLength: 0
      maxLength: 128
    OperationalHour:
      type: object
      properties:
        Start:
          allOf:
          - $ref: '#/components/schemas/OverrideTimeSlice'
          description: The start time that your contact center opens.
        End:
          allOf:
          - $ref: '#/components/schemas/OverrideTimeSlice'
          description: The end time that your contact center closes.
      description: Information about the hours of operations with the effective override
        applied.
    OperationalHours:
      type: array
      items:
        $ref: '#/components/schemas/OperationalHour'
    Origin:
      type: string
      minLength: 0
      maxLength: 267
    OriginsList:
      type: array
      items:
        $ref: '#/components/schemas/Origin'
    OutboundAdditionalRecipients:
      type: object
      properties:
        CcEmailAddresses:
          allOf:
          - $ref: '#/components/schemas/EmailAddressRecipientList'
          description: The additional CC email address recipients information.
      description: The additional recipients information of outbound email.
    OutboundCallerConfig:
      type: object
      properties:
        OutboundCallerIdName:
          allOf:
          - $ref: '#/components/schemas/OutboundCallerIdName'
          description: The caller ID name.
        OutboundCallerIdNumberId:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberId'
          description: The caller ID number.
        OutboundFlowId:
          allOf:
          - $ref: '#/components/schemas/ContactFlowId'
          description: The outbound whisper flow to be used during an outbound call.
      description: The outbound caller ID name, number, and outbound whisper flow.
    OutboundCallerIdName:
      type: string
      minLength: 1
      maxLength: 255
    OutboundCallsEnabled:
      type: boolean
    OutboundContactNotPermittedException:
      type: object
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/Message'
          description: The message about the contact.
      description: The contact is not permitted.
    OutboundEmailConfig:
      type: object
      properties:
        OutboundEmailAddressId:
          allOf:
          - $ref: '#/components/schemas/EmailAddressId'
          description: The identifier of the email address.
      description: The outbound email address Id.
    OutboundEmailContent:
      type: object
      properties:
        MessageSourceType:
          allOf:
          - $ref: '#/components/schemas/OutboundMessageSourceType'
          description: The message source type, that is, `RAW` or `TEMPLATE`.
        TemplatedMessageConfig:
          allOf:
          - $ref: '#/components/schemas/TemplatedMessageConfig'
          description: Information about template message configuration.
        RawMessage:
          allOf:
          - $ref: '#/components/schemas/OutboundRawMessage'
          description: The raw email body content.
      required:
      - MessageSourceType
      description: Information about email body content.
    OutboundMessageSourceType:
      type: string
      enum:
      - TEMPLATE
      - RAW
    OutboundRawMessage:
      type: object
      properties:
        Subject:
          allOf:
          - $ref: '#/components/schemas/OutboundSubject'
          description: The email subject.
        Body:
          allOf:
          - $ref: '#/components/schemas/Body'
          description: The email message body.
        ContentType:
          allOf:
          - $ref: '#/components/schemas/EmailMessageContentType'
          description: Type of content, that is, `text/plain` or `text/html`.
      required:
      - Subject
      - Body
      - ContentType
      description: Information about the raw email body content.
    OutboundRequestId:
      type: string
      minLength: 36
      maxLength: 36
    OutboundSubject:
      type: string
      minLength: 1
      maxLength: 998
    OutputTypeNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
      description: Thrown for analyzed content when requested OutputType was not enabled
        for a given contact. For example, if an OutputType.Raw was requested for a
        contact that had `RedactedOnly` Redaction policy set in the flow.
    OverrideDays:
      type: string
      enum:
      - SUNDAY
      - MONDAY
      - TUESDAY
      - WEDNESDAY
      - THURSDAY
      - FRIDAY
      - SATURDAY
    OverrideTimeSlice:
      type: object
      properties:
        Hours:
          allOf:
          - $ref: '#/components/schemas/Hours24Format'
          description: The hours.
        Minutes:
          allOf:
          - $ref: '#/components/schemas/MinutesLimit60'
          description: The minutes.
      required:
      - Hours
      - Minutes
      description: The start time or end time for an hours of operation override.
    PEM:
      type: string
      minLength: 1
      maxLength: 1024
    ParticipantCapabilities:
      type: object
      properties:
        Video:
          allOf:
          - $ref: '#/components/schemas/VideoCapability'
          description: The configuration having the video and screen sharing capabilities
            for participants over the call.
        ScreenShare:
          allOf:
          - $ref: '#/components/schemas/ScreenShareCapability'
          description: The screen sharing capability that is enabled for the participant.
            `SEND` indicates the participant can share their screen.
      description: The configuration for the allowed video and screen sharing capabilities
        for participants present over the call. For more information, see [Set up
        in-app, web, video calling, and screen sharing capabilities](https://docs.aws.amazon.com/connect/latest/adminguide/inapp-calling.html)
        in the _Amazon Connect Administrator Guide_.
    ParticipantDetails:
      type: object
      properties:
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: Display name of the participant.
      required:
      - DisplayName
      description: The customer's details.
    ParticipantDetailsToAdd:
      type: object
      properties:
        ParticipantRole:
          allOf:
          - $ref: '#/components/schemas/ParticipantRole'
          description: The role of the participant being added.
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: The display name of the participant.
      description: The details to add for the participant.
    ParticipantId:
      type: string
      minLength: 1
      maxLength: 256
    ParticipantRole:
      type: string
      enum:
      - AGENT
      - CUSTOMER
      - SYSTEM
      - CUSTOM_BOT
      - SUPERVISOR
    ParticipantTimerAction:
      type: string
      enum:
      - Unset
    ParticipantTimerConfigList:
      type: array
      items:
        $ref: '#/components/schemas/ParticipantTimerConfiguration'
    ParticipantTimerConfiguration:
      type: object
      properties:
        ParticipantRole:
          allOf:
          - $ref: '#/components/schemas/TimerEligibleParticipantRoles'
          description: The role of the participant in the chat conversation.
        TimerType:
          allOf:
          - $ref: '#/components/schemas/ParticipantTimerType'
          description: The type of timer. `IDLE` indicates the timer applies for considering
            a human chat participant as idle. `DISCONNECT_NONCUSTOMER` indicates the
            timer applies to automatically disconnecting a chat participant due to
            idleness.
        TimerValue:
          allOf:
          - $ref: '#/components/schemas/ParticipantTimerValue'
          description: The value of the timer. Either the timer action (Unset to delete
            the timer), or the duration of the timer in minutes. Only one value can
            be set.
      required:
      - ParticipantRole
      - TimerType
      - TimerValue
      description: 'Configuration information for the timer. After the timer configuration
        is set, it persists for the duration of the chat. It persists across new contacts
        in the chain, for example, transfer contacts.


        For more information about how chat timeouts work, see [Set up chat timeouts
        for human participants](https://docs.aws.amazon.com/connect/latest/adminguide/setup-chat-timeouts.html).'
    ParticipantTimerDurationInMinutes:
      type: integer
      minimum: 2
      maximum: 480
    ParticipantTimerType:
      type: string
      enum:
      - IDLE
      - DISCONNECT_NONCUSTOMER
    ParticipantTimerValue:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/ParticipantTimerAction'
        description: |-
          The timer action. Currently only one value is allowed: `Unset`. It deletes a timer.
      - allOf:
        - $ref: '#/components/schemas/ParticipantTimerDurationInMinutes'
        description: |-
          The duration of a timer, in minutes.
      description: |-
        The value of the timer. Either the timer action (`Unset` to delete the timer), or the duration of the timer in minutes. Only one value can be set.

        For more information about how chat timeouts work, see [Set up chat timeouts for human participants](https://docs.aws.amazon.com/connect/latest/adminguide/setup-chat-timeouts.html).
    ParticipantToken:
      type: string
      minLength: 1
      maxLength: 1000
    ParticipantTokenCredentials:
      type: object
      properties:
        ParticipantToken:
          allOf:
          - $ref: '#/components/schemas/ParticipantToken'
          description: The token used by the chat participant to call [CreateParticipantConnection](https://docs.aws.amazon.com/connect-participant/latest/APIReference/API_CreateParticipantConnection.html).
            The participant token is valid for the lifetime of a chat participant.
        Expiry:
          allOf:
          - $ref: '#/components/schemas/ISO8601Datetime'
          description: 'The expiration of the token. It''s specified in ISO 8601 format:
            yyyy-MM-ddThh:mm:ss.SSSZ. For example, 2019-11-08T02:41:28.172Z.'
      description: The credentials used by the participant.
    Password:
      type: string
      pattern: ^/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z\d\S]{8,64}$/$
    PauseContactRequest:
      type: object
      properties:
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can find
            the `instanceId` in the ARN of the instance.
        ContactFlowId:
          allOf:
          - $ref: '#/components/schemas/ContactFlowId'
          description: The identifier of the flow.
      required:
      - ContactId
      - InstanceId
    PauseContactResponse:
      type: object
      properties: {}
    Percentage:
      type: integer
      default: 0
      minimum: 0
      maximum: 100
    Permission:
      type: string
      minLength: 1
      maxLength: 128
    PermissionsList:
      type: array
      items:
        $ref: '#/components/schemas/SecurityProfilePermission'
    PersistentChat:
      type: object
      properties:
        RehydrationType:
          allOf:
          - $ref: '#/components/schemas/RehydrationType'
          description: "The contactId that is used for rehydration depends on the\
            \ rehydration type. RehydrationType is required for persistent chat.\n\
            \n  * `ENTIRE_PAST_SESSION`: Rehydrates a chat from the most recently\
            \ terminated past chat contact of the specified past ended chat session.\
            \ To use this type, provide the `initialContactId` of the past ended chat\
            \ session in the `sourceContactId` field. In this type, Amazon Connect\
            \ determines the most recent chat contact on the specified chat session\
            \ that has ended, and uses it to start a persistent chat. \n\n  * `FROM_SEGMENT`:\
            \ Rehydrates a chat from the past chat contact that is specified in the\
            \ `sourceContactId` field. \n\nThe actual contactId used for rehydration\
            \ is provided in the response of this API."
        SourceContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The contactId from which a persistent chat session must be
            started.
      description: Enable persistent chats. For more information about enabling persistent
        chat, and for example use cases and how to configure for them, see [Enable
        persistent chat](https://docs.aws.amazon.com/connect/latest/adminguide/chat-persistence.html).
    PhoneNumber:
      type: string
      pattern: ^\\+[1-9]\\d{1,14}$
    PhoneNumberCountryCode:
      type: string
      enum:
      - AF
      - AL
      - DZ
      - AS
      - AD
      - AO
      - AI
      - AQ
      - AG
      - AR
      - AM
      - AW
      - AU
      - AT
      - AZ
      - BS
      - BH
      - BD
      - BB
      - BY
      - BE
      - BZ
      - BJ
      - BM
      - BT
      - BO
      - BA
      - BW
      - BR
      - IO
      - VG
      - BN
      - BG
      - BF
      - BI
      - KH
      - CM
      - CA
      - CV
      - KY
      - CF
      - TD
      - CL
      - CN
      - CX
      - CC
      - CO
      - KM
      - CK
      - CR
      - HR
      - CU
      - CW
      - CY
      - CZ
      - CD
      - DK
      - DJ
      - DM
      - DO
      - TL
      - EC
      - EG
      - SV
      - GQ
      - ER
      - EE
      - ET
      - FK
      - FO
      - FJ
      - FI
      - FR
      - PF
      - GA
      - GM
      - GE
      - DE
      - GH
      - GI
      - GR
      - GL
      - GD
      - GU
      - GT
      - GG
      - GN
      - GW
      - GY
      - HT
      - HN
      - HK
      - HU
      - IS
      - IN
      - ID
      - IR
      - IQ
      - IE
      - IM
      - IL
      - IT
      - CI
      - JM
      - JP
      - JE
      - JO
      - KZ
      - KE
      - KI
      - KW
      - KG
      - LA
      - LV
      - LB
      - LS
      - LR
      - LY
      - LI
      - LT
      - LU
      - MO
      - MK
      - MG
      - MW
      - MY
      - MV
      - ML
      - MT
      - MH
      - MR
      - MU
      - YT
      - MX
      - FM
      - MD
      - MC
      - MN
      - ME
      - MS
      - MA
      - MZ
      - MM
      - NA
      - NR
      - NP
      - NL
      - AN
      - NC
      - NZ
      - NI
      - NE
      - NG
      - NU
      - KP
      - MP
      - 'NO'
      - OM
      - PK
      - PW
      - PA
      - PG
      - PY
      - PE
      - PH
      - PN
      - PL
      - PT
      - PR
      - QA
      - CG
      - RE
      - RO
      - RU
      - RW
      - BL
      - SH
      - KN
      - LC
      - MF
      - PM
      - VC
      - WS
      - SM
      - ST
      - SA
      - SN
      - RS
      - SC
      - SL
      - SG
      - SX
      - SK
      - SI
      - SB
      - SO
      - ZA
      - KR
      - ES
      - LK
      - SD
      - SR
      - SJ
      - SZ
      - SE
      - CH
      - SY
      - TW
      - TJ
      - TZ
      - TH
      - TG
      - TK
      - TO
      - TT
      - TN
      - TR
      - TM
      - TC
      - TV
      - VI
      - UG
      - UA
      - AE
      - GB
      - US
      - UY
      - UZ
      - VU
      - VA
      - VE
      - VN
      - WF
      - EH
      - YE
      - ZM
      - ZW
    PhoneNumberCountryCodes:
      type: array
      items:
        $ref: '#/components/schemas/PhoneNumberCountryCode'
    PhoneNumberDescription:
      type: string
      pattern: ^[\W\S_]*$
      minLength: 0
      maxLength: 500
    PhoneNumberId:
      type: string
    PhoneNumberPrefix:
      type: string
      pattern: ^\\+?[0-9]{1,11}$
    PhoneNumberQuickConnectConfig:
      type: object
      properties:
        PhoneNumber:
          allOf:
          - $ref: '#/components/schemas/PhoneNumber'
          description: The phone number in E.164 format.
      required:
      - PhoneNumber
      description: Contains information about a phone number for a quick connect.
    PhoneNumberStatus:
      type: object
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberWorkflowStatus'
          description: The status.
        Message:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberWorkflowMessage'
          description: The status message.
      description: "The status of the phone number.\n\n  * `CLAIMED` means the previous\
        \ [ClaimPhoneNumber](https://docs.aws.amazon.com/connect/latest/APIReference/API_ClaimPhoneNumber.html)\
        \ or [UpdatePhoneNumber](https://docs.aws.amazon.com/connect/latest/APIReference/API_UpdatePhoneNumber.html)\
        \ operation succeeded.\n\n  * `IN_PROGRESS` means a [ClaimPhoneNumber](https://docs.aws.amazon.com/connect/latest/APIReference/API_ClaimPhoneNumber.html),\
        \ [UpdatePhoneNumber](https://docs.aws.amazon.com/connect/latest/APIReference/API_UpdatePhoneNumber.html),\
        \ or [UpdatePhoneNumberMetadata](https://docs.aws.amazon.com/connect/latest/APIReference/API_UpdatePhoneNumberMetadata.html)\
        \ operation is still in progress and has not yet completed. You can call [DescribePhoneNumber](https://docs.aws.amazon.com/connect/latest/APIReference/API_DescribePhoneNumber.html)\
        \ at a later time to verify if the previous operation has completed.\n\n \
        \ * `FAILED` indicates that the previous [ClaimPhoneNumber](https://docs.aws.amazon.com/connect/latest/APIReference/API_ClaimPhoneNumber.html)\
        \ or [UpdatePhoneNumber](https://docs.aws.amazon.com/connect/latest/APIReference/API_UpdatePhoneNumber.html)\
        \ operation has failed. It will include a message indicating the failure reason.\
        \ A common reason for a failure may be that the `TargetArn` value you are\
        \ claiming or updating a phone number to has reached its limit of total claimed\
        \ numbers. If you received a `FAILED` status from a `ClaimPhoneNumber` API\
        \ call, you have one day to retry claiming the phone number before the number\
        \ is released back to the inventory for other customers to claim."
    PhoneNumberSummary:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberId'
          description: The identifier of the phone number.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the phone number.
        PhoneNumber:
          allOf:
          - $ref: '#/components/schemas/PhoneNumber'
          description: The phone number.
        PhoneNumberType:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberType'
          description: The type of phone number.
        PhoneNumberCountryCode:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberCountryCode'
          description: The ISO country code.
      description: Contains summary information about a phone number for a contact
        center.
    PhoneNumberSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/PhoneNumberSummary'
    PhoneNumberType:
      type: string
      enum:
      - TOLL_FREE
      - DID
      - UIFN
      - SHARED
      - THIRD_PARTY_TF
      - THIRD_PARTY_DID
      - SHORT_CODE
    PhoneNumberTypes:
      type: array
      items:
        $ref: '#/components/schemas/PhoneNumberType'
    PhoneNumberWorkflowMessage:
      type: string
      pattern: ^[\W\S_]*$
      minLength: 0
      maxLength: 255
    PhoneNumberWorkflowStatus:
      type: string
      enum:
      - CLAIMED
      - IN_PROGRESS
      - FAILED
    PhoneType:
      type: string
      enum:
      - SOFT_PHONE
      - DESK_PHONE
    PlatformName:
      type: string
      minLength: 0
      maxLength: 128
    PlatformVersion:
      type: string
      minLength: 0
      maxLength: 128
    PotentialAudioQualityIssue:
      type: string
      minLength: 0
      maxLength: 128
    PotentialAudioQualityIssues:
      type: array
      items:
        $ref: '#/components/schemas/PotentialAudioQualityIssue'
    PotentialDisconnectIssue:
      type: string
      minLength: 0
      maxLength: 128
    PreSignedAttachmentUrl:
      type: string
      minLength: 1
      maxLength: 2000
    PredefinedAttribute:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/PredefinedAttributeName'
          description: The name of the predefined attribute.
        Values:
          allOf:
          - $ref: '#/components/schemas/PredefinedAttributeValues'
          description: The values of the predefined attribute.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Last modified time.
        LastModifiedRegion:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          description: Last modified region.
      description: Information about a predefined attribute.
    PredefinedAttributeName:
      type: string
      minLength: 1
      maxLength: 64
    PredefinedAttributeSearchConditionList:
      type: array
      items:
        $ref: '#/components/schemas/PredefinedAttributeSearchCriteria'
    PredefinedAttributeSearchCriteria:
      type: object
      properties:
        OrConditions:
          allOf:
          - $ref: '#/components/schemas/PredefinedAttributeSearchConditionList'
          description: A list of conditions which would be applied together with an
            `OR` condition.
        AndConditions:
          allOf:
          - $ref: '#/components/schemas/PredefinedAttributeSearchConditionList'
          description: A list of conditions which would be applied together with an
            `AND` condition.
        StringCondition:
          $ref: '#/components/schemas/StringCondition'
      description: The search criteria to be used to return predefined attributes.
    PredefinedAttributeSearchSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/PredefinedAttribute'
    PredefinedAttributeStringValue:
      type: string
      minLength: 1
      maxLength: 64
    PredefinedAttributeStringValuesList:
      type: array
      items:
        $ref: '#/components/schemas/PredefinedAttributeStringValue'
    PredefinedAttributeSummary:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/PredefinedAttributeName'
          description: The name of the predefined attribute.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Last modified time.
        LastModifiedRegion:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          description: Last modified region.
      description: Summary of a predefined attribute.
    PredefinedAttributeSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/PredefinedAttributeSummary'
    PredefinedAttributeValues:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/PredefinedAttributeStringValuesList'
        description: |-
          Predefined attribute values of type string list.
      description: |-
        Information about values of a predefined attribute.
    Prefix:
      type: string
      minLength: 1
      maxLength: 128
    Priority:
      type: integer
      minimum: 1
      maximum: 99
    ProblemDetail:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ProblemMessageString'
          description: The problem detail's message.
      description: Information about a problem detail.
    ProblemMessageString:
      type: string
      minLength: 1
      maxLength: 256
    Problems:
      type: array
      items:
        $ref: '#/components/schemas/ProblemDetail'
    ProficiencyLevel:
      type: number
      format: float
      minimum: 1.0
      maximum: 5.0
    ProficiencyValue:
      type: string
      minLength: 1
      maxLength: 128
    Prompt:
      type: object
      properties:
        PromptARN:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the prompt.
        PromptId:
          allOf:
          - $ref: '#/components/schemas/PromptId'
          description: A unique identifier for the prompt.
        Name:
          allOf:
          - $ref: '#/components/schemas/CommonNameLength127'
          description: The name of the prompt.
        Description:
          allOf:
          - $ref: '#/components/schemas/PromptDescription'
          description: The description of the prompt.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The tags used to organize, track, or control access for this
            resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.'
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when this resource was last modified.
        LastModifiedRegion:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          description: The Amazon Web Services Region where this resource was last
            modified.
      description: Information about a prompt.
    PromptDescription:
      type: string
      minLength: 1
      maxLength: 250
    PromptId:
      type: string
      minLength: 1
      maxLength: 256
    PromptList:
      type: array
      items:
        $ref: '#/components/schemas/Prompt'
    PromptName:
      type: string
      minLength: 1
      maxLength: 256
    PromptPresignedUrl:
      type: string
      minLength: 1
      maxLength: 2000
    PromptSearchConditionList:
      type: array
      items:
        $ref: '#/components/schemas/PromptSearchCriteria'
    PromptSearchCriteria:
      type: object
      properties:
        OrConditions:
          allOf:
          - $ref: '#/components/schemas/PromptSearchConditionList'
          description: A list of conditions which would be applied together with an
            OR condition.
        AndConditions:
          allOf:
          - $ref: '#/components/schemas/PromptSearchConditionList'
          description: A list of conditions which would be applied together with an
            AND condition.
        StringCondition:
          allOf:
          - $ref: '#/components/schemas/StringCondition'
          description: 'A leaf node condition which can be used to specify a string
            condition.


            The currently supported values for `FieldName` are `name`, `description`,
            and `resourceID`.'
      description: The search criteria to be used to return prompts.
    PromptSearchFilter:
      type: object
      properties:
        TagFilter:
          $ref: '#/components/schemas/ControlPlaneTagFilter'
      description: Filters to be applied to search results.
    PromptSummary:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/PromptId'
          description: The identifier of the prompt.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the prompt.
        Name:
          allOf:
          - $ref: '#/components/schemas/PromptName'
          description: The name of the prompt.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when this resource was last modified.
        LastModifiedRegion:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          description: The Amazon Web Services Region where this resource was last
            modified.
      description: Contains information about the prompt.
    PromptSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/PromptSummary'
    PropertyValidationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
        PropertyList:
          $ref: '#/components/schemas/PropertyValidationExceptionPropertyList'
      required:
      - Message
      description: The property is not valid.
    PropertyValidationExceptionProperty:
      type: object
      properties:
        PropertyPath:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The full property path.
        Reason:
          allOf:
          - $ref: '#/components/schemas/PropertyValidationExceptionReason'
          description: Why the property is not valid.
        Message:
          allOf:
          - $ref: '#/components/schemas/Message'
          description: A message describing why the property is not valid.
      required:
      - PropertyPath
      - Reason
      - Message
      description: Contains information about why a property is not valid.
    PropertyValidationExceptionPropertyList:
      type: array
      items:
        $ref: '#/components/schemas/PropertyValidationExceptionProperty'
    PropertyValidationExceptionReason:
      type: string
      enum:
      - INVALID_FORMAT
      - UNIQUE_CONSTRAINT_VIOLATED
      - REFERENCED_RESOURCE_NOT_FOUND
      - RESOURCE_NAME_ALREADY_EXISTS
      - REQUIRED_PROPERTY_MISSING
      - NOT_SUPPORTED
    PutUserStatusRequest:
      type: object
      properties:
        UserId:
          allOf:
          - $ref: '#/components/schemas/UserId'
          description: The identifier of the user.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        AgentStatusId:
          allOf:
          - $ref: '#/components/schemas/AgentStatusId'
          description: The identifier of the agent status.
      required:
      - UserId
      - InstanceId
      - AgentStatusId
    PutUserStatusResponse:
      type: object
      properties: {}
    QualityMetrics:
      type: object
      properties:
        Agent:
          allOf:
          - $ref: '#/components/schemas/AgentQualityMetrics'
          description: Information about the quality of Agent media connection.
        Customer:
          allOf:
          - $ref: '#/components/schemas/CustomerQualityMetrics'
          description: Information about the quality of Customer media connection.
      description: Information about the quality of the participant's media connection.
    Queue:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/CommonNameLength127'
          description: The name of the queue.
        QueueArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for the queue.
        QueueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The identifier for the queue.
        Description:
          allOf:
          - $ref: '#/components/schemas/QueueDescription'
          description: The description of the queue.
        OutboundCallerConfig:
          allOf:
          - $ref: '#/components/schemas/OutboundCallerConfig'
          description: The outbound caller ID name, number, and outbound whisper flow.
        OutboundEmailConfig:
          allOf:
          - $ref: '#/components/schemas/OutboundEmailConfig'
          description: The outbound email address ID for a specified queue.
        HoursOfOperationId:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationId'
          description: The identifier for the hours of operation.
        MaxContacts:
          allOf:
          - $ref: '#/components/schemas/QueueMaxContacts'
          description: The maximum number of contacts that can be in the queue before
            it is considered full.
        Status:
          allOf:
          - $ref: '#/components/schemas/QueueStatus'
          description: The status of the queue.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The tags used to organize, track, or control access for this
            resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.'
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when this resource was last modified.
        LastModifiedRegion:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          description: The Amazon Web Services Region where this resource was last
            modified.
      description: Contains information about a queue.
    QueueDescription:
      type: string
      minLength: 1
      maxLength: 250
    QueueId:
      type: string
    QueueIdList:
      type: array
      items:
        $ref: '#/components/schemas/QueueId'
    QueueInfo:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The unique identifier for the queue.
        EnqueueTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the contact was added to the queue.
      description: If this contact was queued, this contains information about the
        queue.
    QueueInfoInput:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The identifier of the queue.
      description: Information about a queue.
    QueueMaxContacts:
      type: integer
      default: 0
      minimum: 0
    QueueName:
      type: string
      minLength: 1
      maxLength: 256
    QueuePriority:
      type: integer
      format: int64
      minimum: 1
      maximum: 9223372036854775807
    QueueQuickConnectConfig:
      type: object
      properties:
        QueueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The identifier for the queue.
        ContactFlowId:
          allOf:
          - $ref: '#/components/schemas/ContactFlowId'
          description: The identifier of the flow.
      required:
      - QueueId
      - ContactFlowId
      description: Contains information about a queue for a quick connect. The flow
        must be of type Transfer to Queue.
    QueueReference:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The identifier of the queue.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the queue.
      description: Contains information about a queue resource for which metrics are
        returned.
    QueueSearchConditionList:
      type: array
      items:
        $ref: '#/components/schemas/QueueSearchCriteria'
    QueueSearchCriteria:
      type: object
      properties:
        OrConditions:
          allOf:
          - $ref: '#/components/schemas/QueueSearchConditionList'
          description: A list of conditions which would be applied together with an
            OR condition.
        AndConditions:
          allOf:
          - $ref: '#/components/schemas/QueueSearchConditionList'
          description: A list of conditions which would be applied together with an
            AND condition.
        StringCondition:
          allOf:
          - $ref: '#/components/schemas/StringCondition'
          description: 'A leaf node condition which can be used to specify a string
            condition.


            The currently supported values for `FieldName` are `name`, `description`,
            and `resourceID`.'
        QueueTypeCondition:
          allOf:
          - $ref: '#/components/schemas/SearchableQueueType'
          description: The type of queue.
      description: 'The search criteria to be used to return queues.


        The `name` and `description` fields support "contains" queries with a minimum
        of 2 characters and a maximum of 25 characters. Any queries with character
        lengths outside of this range will throw invalid results.'
    QueueSearchFilter:
      type: object
      properties:
        TagFilter:
          $ref: '#/components/schemas/ControlPlaneTagFilter'
      description: Filters to be applied to search results.
    QueueSearchSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/Queue'
    QueueStatus:
      type: string
      enum:
      - ENABLED
      - DISABLED
    QueueSummary:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The identifier of the queue.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the queue.
        Name:
          allOf:
          - $ref: '#/components/schemas/QueueName'
          description: The name of the queue.
        QueueType:
          allOf:
          - $ref: '#/components/schemas/QueueType'
          description: The type of queue.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when this resource was last modified.
        LastModifiedRegion:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          description: The Amazon Web Services Region where this resource was last
            modified.
      description: Contains summary information about a queue.
    QueueSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/QueueSummary'
    QueueTimeAdjustmentSeconds:
      type: integer
    QueueType:
      type: string
      enum:
      - STANDARD
      - AGENT
    QueueTypes:
      type: array
      items:
        $ref: '#/components/schemas/QueueType'
    Queues:
      type: array
      items:
        $ref: '#/components/schemas/QueueId'
    QuickConnect:
      type: object
      properties:
        QuickConnectARN:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the quick connect.
        QuickConnectId:
          allOf:
          - $ref: '#/components/schemas/QuickConnectId'
          description: The identifier for the quick connect.
        Name:
          allOf:
          - $ref: '#/components/schemas/QuickConnectName'
          description: The name of the quick connect.
        Description:
          allOf:
          - $ref: '#/components/schemas/QuickConnectDescription'
          description: The description.
        QuickConnectConfig:
          allOf:
          - $ref: '#/components/schemas/QuickConnectConfig'
          description: Contains information about the quick connect.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The tags used to organize, track, or control access for this
            resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.'
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when this resource was last modified.
        LastModifiedRegion:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          description: The Amazon Web Services Region where this resource was last
            modified.
      description: Contains information about a quick connect.
    QuickConnectConfig:
      type: object
      properties:
        QuickConnectType:
          allOf:
          - $ref: '#/components/schemas/QuickConnectType'
          description: 'The type of quick connect. In the Amazon Connect admin website,
            when you create a quick connect, you are prompted to assign one of the
            following types: Agent (USER), External (PHONE_NUMBER), or Queue (QUEUE).'
        UserConfig:
          allOf:
          - $ref: '#/components/schemas/UserQuickConnectConfig'
          description: The user configuration. This is required only if QuickConnectType
            is USER.
        QueueConfig:
          allOf:
          - $ref: '#/components/schemas/QueueQuickConnectConfig'
          description: The queue configuration. This is required only if QuickConnectType
            is QUEUE.
        PhoneConfig:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberQuickConnectConfig'
          description: The phone configuration. This is required only if QuickConnectType
            is PHONE_NUMBER.
      required:
      - QuickConnectType
      description: Contains configuration settings for a quick connect.
    QuickConnectDescription:
      type: string
      minLength: 1
      maxLength: 250
    QuickConnectId:
      type: string
    QuickConnectName:
      type: string
      minLength: 1
      maxLength: 127
    QuickConnectSearchConditionList:
      type: array
      items:
        $ref: '#/components/schemas/QuickConnectSearchCriteria'
    QuickConnectSearchCriteria:
      type: object
      properties:
        OrConditions:
          allOf:
          - $ref: '#/components/schemas/QuickConnectSearchConditionList'
          description: A list of conditions which would be applied together with an
            OR condition.
        AndConditions:
          allOf:
          - $ref: '#/components/schemas/QuickConnectSearchConditionList'
          description: A list of conditions which would be applied together with an
            AND condition.
        StringCondition:
          allOf:
          - $ref: '#/components/schemas/StringCondition'
          description: 'A leaf node condition which can be used to specify a string
            condition.


            The currently supported values for `FieldName` are `name`, `description`,
            and `resourceID`.'
      description: The search criteria to be used to return quick connects.
    QuickConnectSearchFilter:
      type: object
      properties:
        TagFilter:
          $ref: '#/components/schemas/ControlPlaneTagFilter'
      description: Filters to be applied to search results.
    QuickConnectSearchSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/QuickConnect'
    QuickConnectSummary:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/QuickConnectId'
          description: The identifier for the quick connect.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the quick connect.
        Name:
          allOf:
          - $ref: '#/components/schemas/QuickConnectName'
          description: The name of the quick connect.
        QuickConnectType:
          allOf:
          - $ref: '#/components/schemas/QuickConnectType'
          description: 'The type of quick connect. In the Amazon Connect admin website,
            when you create a quick connect, you are prompted to assign one of the
            following types: Agent (USER), External (PHONE_NUMBER), or Queue (QUEUE).'
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when this resource was last modified.
        LastModifiedRegion:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          description: The Amazon Web Services Region where this resource was last
            modified.
      description: Contains summary information about a quick connect.
    QuickConnectSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/QuickConnectSummary'
    QuickConnectType:
      type: string
      enum:
      - USER
      - QUEUE
      - PHONE_NUMBER
    QuickConnectTypes:
      type: array
      items:
        $ref: '#/components/schemas/QuickConnectType'
    QuickConnectsList:
      type: array
      items:
        $ref: '#/components/schemas/QuickConnectId'
    Range:
      type: object
      properties:
        MinProficiencyLevel:
          allOf:
          - $ref: '#/components/schemas/NullableProficiencyLevel'
          description: The minimum proficiency level of the range.
        MaxProficiencyLevel:
          allOf:
          - $ref: '#/components/schemas/NullableProficiencyLevel'
          description: The maximum proficiency level of the range.
      description: An Object to define the minimum and maximum proficiency levels.
    ReadOnlyFieldInfo:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateFieldIdentifier'
          description: Identifier of the read-only field.
      description: Indicates a field that is read-only to an agent.
    ReadOnlyTaskTemplateFields:
      type: array
      items:
        $ref: '#/components/schemas/ReadOnlyFieldInfo'
    RealTimeContactAnalysisAttachment:
      type: object
      properties:
        AttachmentName:
          allOf:
          - $ref: '#/components/schemas/AttachmentName'
          description: A case-sensitive name of the attachment being uploaded. Can
            be redacted.
        ContentType:
          allOf:
          - $ref: '#/components/schemas/ContentType'
          description: Describes the MIME file type of the attachment. For a list
            of supported file types, see [Feature specifications](https://docs.aws.amazon.com/connect/latest/adminguide/feature-limits.html)
            in the _Amazon Connect Administrator Guide_.
        AttachmentId:
          allOf:
          - $ref: '#/components/schemas/ArtifactId'
          description: A unique identifier for the attachment.
        Status:
          allOf:
          - $ref: '#/components/schemas/ArtifactStatus'
          description: Status of the attachment.
      required:
      - AttachmentName
      - AttachmentId
      description: Object that describes attached file.
    RealTimeContactAnalysisAttachments:
      type: array
      items:
        $ref: '#/components/schemas/RealTimeContactAnalysisAttachment'
    RealTimeContactAnalysisCategoryDetails:
      type: object
      properties:
        PointsOfInterest:
          allOf:
          - $ref: '#/components/schemas/RealTimeContactAnalysisPointsOfInterest'
          description: List of PointOfInterest - objects describing a single match
            of a rule.
      required:
      - PointsOfInterest
      description: Provides information about the category rule that was matched.
    RealTimeContactAnalysisCategoryName:
      type: string
      minLength: 1
      maxLength: 256
    RealTimeContactAnalysisCharacterInterval:
      type: object
      properties:
        BeginOffsetChar:
          allOf:
          - $ref: '#/components/schemas/RealTimeContactAnalysisOffset'
          description: The beginning of the character interval.
        EndOffsetChar:
          allOf:
          - $ref: '#/components/schemas/RealTimeContactAnalysisOffset'
          description: The end of the character interval.
      required:
      - BeginOffsetChar
      - EndOffsetChar
      description: Begin and end offsets for a part of text.
    RealTimeContactAnalysisCharacterIntervals:
      type: array
      items:
        $ref: '#/components/schemas/RealTimeContactAnalysisCharacterInterval'
    RealTimeContactAnalysisContentType:
      type: string
      minLength: 1
      maxLength: 256
    RealTimeContactAnalysisEventType:
      type: string
      minLength: 1
      maxLength: 128
    RealTimeContactAnalysisId256:
      type: string
      minLength: 1
      maxLength: 256
    RealTimeContactAnalysisIssueDetected:
      type: object
      properties:
        TranscriptItems:
          allOf:
          - $ref: '#/components/schemas/RealTimeContactAnalysisTranscriptItemsWithContent'
          description: List of the transcript items (segments) that are associated
            with a given issue.
      required:
      - TranscriptItems
      description: Potential issues that are detected based on an artificial intelligence
        analysis of each turn in the conversation.
    RealTimeContactAnalysisIssuesDetected:
      type: array
      items:
        $ref: '#/components/schemas/RealTimeContactAnalysisIssueDetected'
    RealTimeContactAnalysisMatchedDetails:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/RealTimeContactAnalysisCategoryDetails'
    RealTimeContactAnalysisOffset:
      type: integer
      default: 0
      minimum: 0
    RealTimeContactAnalysisOutputType:
      type: string
      enum:
      - Raw
      - Redacted
    RealTimeContactAnalysisPointOfInterest:
      type: object
      properties:
        TranscriptItems:
          allOf:
          - $ref: '#/components/schemas/RealTimeContactAnalysisTranscriptItemsWithCharacterOffsets'
          description: List of the transcript items (segments) that are associated
            with a given point of interest.
      description: The section of the contact transcript segment that category rule
        was detected.
    RealTimeContactAnalysisPointsOfInterest:
      type: array
      items:
        $ref: '#/components/schemas/RealTimeContactAnalysisPointOfInterest'
    RealTimeContactAnalysisPostContactSummaryContent:
      type: string
      minLength: 1
      maxLength: 1270
    RealTimeContactAnalysisPostContactSummaryFailureCode:
      type: string
      enum:
      - QUOTA_EXCEEDED
      - INSUFFICIENT_CONVERSATION_CONTENT
      - FAILED_SAFETY_GUIDELINES
      - INVALID_ANALYSIS_CONFIGURATION
      - INTERNAL_ERROR
    RealTimeContactAnalysisPostContactSummaryStatus:
      type: string
      enum:
      - FAILED
      - COMPLETED
    RealTimeContactAnalysisSegmentAttachments:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/RealTimeContactAnalysisId256'
          description: The identifier of the segment.
        ParticipantId:
          allOf:
          - $ref: '#/components/schemas/ParticipantId'
          description: The identifier of the participant.
        ParticipantRole:
          allOf:
          - $ref: '#/components/schemas/ParticipantRole'
          description: The role of the participant. For example, is it a customer,
            agent, or system.
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: The display name of the participant. Can be redacted.
        Attachments:
          allOf:
          - $ref: '#/components/schemas/RealTimeContactAnalysisAttachments'
          description: List of objects describing an individual attachment.
        Time:
          allOf:
          - $ref: '#/components/schemas/RealTimeContactAnalysisTimeData'
          description: Field describing the time of the event. It can have different
            representations of time.
      required:
      - Id
      - ParticipantId
      - ParticipantRole
      - Attachments
      - Time
      description: Segment containing list of attachments.
    RealTimeContactAnalysisSegmentCategories:
      type: object
      properties:
        MatchedDetails:
          allOf:
          - $ref: '#/components/schemas/RealTimeContactAnalysisMatchedDetails'
          description: Map between the name of the matched rule and RealTimeContactAnalysisCategoryDetails.
      required:
      - MatchedDetails
      description: The matched category rules.
    RealTimeContactAnalysisSegmentEvent:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/RealTimeContactAnalysisId256'
          description: The identifier of the contact event.
        ParticipantId:
          allOf:
          - $ref: '#/components/schemas/ParticipantId'
          description: The identifier of the participant.
        ParticipantRole:
          allOf:
          - $ref: '#/components/schemas/ParticipantRole'
          description: The role of the participant. For example, is it a customer,
            agent, or system.
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: The display name of the participant. Can be redacted.
        EventType:
          allOf:
          - $ref: '#/components/schemas/RealTimeContactAnalysisEventType'
          description: Type of the event. For example, `application/vnd.amazonaws.connect.event.participant.left`.
        Time:
          allOf:
          - $ref: '#/components/schemas/RealTimeContactAnalysisTimeData'
          description: Field describing the time of the event. It can have different
            representations of time.
      required:
      - Id
      - EventType
      - Time
      description: Segment type describing a contact event.
    RealTimeContactAnalysisSegmentIssues:
      type: object
      properties:
        IssuesDetected:
          allOf:
          - $ref: '#/components/schemas/RealTimeContactAnalysisIssuesDetected'
          description: List of the issues detected.
      required:
      - IssuesDetected
      description: Segment type containing a list of detected issues.
    RealTimeContactAnalysisSegmentPostContactSummary:
      type: object
      properties:
        Content:
          allOf:
          - $ref: '#/components/schemas/RealTimeContactAnalysisPostContactSummaryContent'
          description: The content of the summary.
        Status:
          allOf:
          - $ref: '#/components/schemas/RealTimeContactAnalysisPostContactSummaryStatus'
          description: Whether the summary was successfully COMPLETED or FAILED to
            be generated.
        FailureCode:
          allOf:
          - $ref: '#/components/schemas/RealTimeContactAnalysisPostContactSummaryFailureCode'
          description: "If the summary failed to be generated, one of the following\
            \ failure codes occurs:\n\n  * `QUOTA_EXCEEDED`: The number of concurrent\
            \ analytics jobs reached your service quota.\n\n  * `INSUFFICIENT_CONVERSATION_CONTENT`:\
            \ The conversation needs to have at least one turn from both the participants\
            \ in order to generate the summary.\n\n  * `FAILED_SAFETY_GUIDELINES`:\
            \ The generated summary cannot be provided because it failed to meet system\
            \ safety guidelines.\n\n  * `INVALID_ANALYSIS_CONFIGURATION`: This code\
            \ occurs when, for example, you're using a [language](https://docs.aws.amazon.com/connect/latest/adminguide/supported-languages.html#supported-languages-contact-lens)\
            \ that isn't supported by generative AI-powered post-contact summaries.\
            \ \n\n  * `INTERNAL_ERROR`: Internal system error."
      required:
      - Status
      description: Information about the post-contact summary for a real-time contact
        segment.
    RealTimeContactAnalysisSegmentTranscript:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/RealTimeContactAnalysisId256'
          description: The identifier of the transcript.
        ParticipantId:
          allOf:
          - $ref: '#/components/schemas/ParticipantId'
          description: The identifier of the participant.
        ParticipantRole:
          allOf:
          - $ref: '#/components/schemas/ParticipantRole'
          description: The role of the participant. For example, is it a customer,
            agent, or system.
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: The display name of the participant.
        Content:
          allOf:
          - $ref: '#/components/schemas/RealTimeContactAnalysisTranscriptContent'
          description: The content of the transcript. Can be redacted.
        ContentType:
          allOf:
          - $ref: '#/components/schemas/RealTimeContactAnalysisContentType'
          description: The type of content of the item. For example, `text/plain`.
        Time:
          allOf:
          - $ref: '#/components/schemas/RealTimeContactAnalysisTimeData'
          description: Field describing the time of the event. It can have different
            representations of time.
        Redaction:
          allOf:
          - $ref: '#/components/schemas/RealTimeContactAnalysisTranscriptItemRedaction'
          description: Object describing redaction that was applied to the transcript.
            If transcript has the field it means part of the transcript was redacted.
        Sentiment:
          allOf:
          - $ref: '#/components/schemas/RealTimeContactAnalysisSentimentLabel'
          description: The sentiment detected for this piece of transcript.
      required:
      - Id
      - ParticipantId
      - ParticipantRole
      - Content
      - Time
      description: The analyzed transcript segment.
    RealTimeContactAnalysisSegmentType:
      type: string
      enum:
      - Transcript
      - Categories
      - Issues
      - Event
      - Attachments
      - PostContactSummary
    RealTimeContactAnalysisSegmentTypes:
      type: array
      items:
        $ref: '#/components/schemas/RealTimeContactAnalysisSegmentType'
    RealTimeContactAnalysisSentimentLabel:
      type: string
      enum:
      - POSITIVE
      - NEGATIVE
      - NEUTRAL
    RealTimeContactAnalysisStatus:
      type: string
      enum:
      - IN_PROGRESS
      - FAILED
      - COMPLETED
    RealTimeContactAnalysisSupportedChannel:
      type: string
      enum:
      - VOICE
      - CHAT
    RealTimeContactAnalysisTimeData:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/RealTimeContactAnalysisTimeInstant'
        description: |-
          Time represented in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example, 2019-11-08T02:41:28.172Z.
      description: |-
        Object describing time with which the segment is associated. It can have different representations of time. Currently supported: absoluteTime
    RealTimeContactAnalysisTimeInstant:
      type: string
      format: date-time
    RealTimeContactAnalysisTranscriptContent:
      type: string
      minLength: 1
      maxLength: 16384
    RealTimeContactAnalysisTranscriptItemRedaction:
      type: object
      properties:
        CharacterOffsets:
          allOf:
          - $ref: '#/components/schemas/RealTimeContactAnalysisCharacterIntervals'
          description: List of character intervals each describing a part of the text
            that was redacted. For `OutputType.Raw`, part of the original text that
            contains data that can be redacted. For ` OutputType.Redacted`, part of
            the string with redaction tag.
      description: Object describing redaction applied to the segment.
    RealTimeContactAnalysisTranscriptItemWithCharacterOffsets:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/RealTimeContactAnalysisId256'
          description: Transcript identifier. Matches the identifier from one of the
            TranscriptSegments.
        CharacterOffsets:
          allOf:
          - $ref: '#/components/schemas/RealTimeContactAnalysisCharacterInterval'
          description: List of character intervals within transcript content/text.
      required:
      - Id
      description: Transcript representation containing Id and list of character intervals
        that are associated with analysis data. For example, this object within a
        `RealTimeContactAnalysisPointOfInterest` in `Category.MatchedDetails` would
        have character interval describing part of the text that matched category.
    RealTimeContactAnalysisTranscriptItemWithContent:
      type: object
      properties:
        Content:
          allOf:
          - $ref: '#/components/schemas/RealTimeContactAnalysisTranscriptContent'
          description: Part of the transcript content that contains identified issue.
            Can be redacted
        Id:
          allOf:
          - $ref: '#/components/schemas/RealTimeContactAnalysisId256'
          description: Transcript identifier. Matches the identifier from one of the
            TranscriptSegments.
        CharacterOffsets:
          $ref: '#/components/schemas/RealTimeContactAnalysisCharacterInterval'
      required:
      - Id
      description: Transcript representation containing Id, Content and list of character
        intervals that are associated with analysis data. For example, this object
        within an issue detected would describe both content that contains identified
        issue and intervals where that content is taken from.
    RealTimeContactAnalysisTranscriptItemsWithCharacterOffsets:
      type: array
      items:
        $ref: '#/components/schemas/RealTimeContactAnalysisTranscriptItemWithCharacterOffsets'
    RealTimeContactAnalysisTranscriptItemsWithContent:
      type: array
      items:
        $ref: '#/components/schemas/RealTimeContactAnalysisTranscriptItemWithContent'
    RealtimeContactAnalysisSegment:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/RealTimeContactAnalysisSegmentTranscript'
      - allOf:
        - $ref: '#/components/schemas/RealTimeContactAnalysisSegmentCategories'
      - allOf:
        - $ref: '#/components/schemas/RealTimeContactAnalysisSegmentIssues'
      - allOf:
        - $ref: '#/components/schemas/RealTimeContactAnalysisSegmentEvent'
      - allOf:
        - $ref: '#/components/schemas/RealTimeContactAnalysisSegmentAttachments'
        description: |-
          The analyzed attachments.
      - allOf:
        - $ref: '#/components/schemas/RealTimeContactAnalysisSegmentPostContactSummary'
        description: |-
          Information about the post-contact summary.
      description: |-
        An analyzed segment for a real-time analysis session.
    RealtimeContactAnalysisSegments:
      type: array
      items:
        $ref: '#/components/schemas/RealtimeContactAnalysisSegment'
    Reference:
      type: object
      properties:
        Value:
          allOf:
          - $ref: '#/components/schemas/ReferenceValue'
          description: A valid value for the reference. For example, for a URL reference,
            a formatted URL that is displayed to an agent in the Contact Control Panel
            (CCP).
        Type:
          allOf:
          - $ref: '#/components/schemas/ReferenceType'
          description: The type of the reference. `DATE` must be of type Epoch timestamp.
        Status:
          allOf:
          - $ref: '#/components/schemas/ReferenceStatus'
          description: Status of the attachment reference type.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ReferenceArn'
          description: The Amazon Resource Name (ARN) of the reference
        StatusReason:
          allOf:
          - $ref: '#/components/schemas/ReferenceStatusReason'
          description: Relevant details why the reference was not successfully created.
      required:
      - Type
      description: Well-formed data on a contact, used by agents to complete a contact
        request. You can have up to 4,096 UTF-8 bytes across all references for a
        contact.
    ReferenceArn:
      type: string
      pattern: ^[-:/A-Za-z0-9]+$
      minLength: 20
      maxLength: 256
    ReferenceId:
      type: string
      minLength: 1
      maxLength: 40
    ReferenceKey:
      type: string
      minLength: 1
      maxLength: 4096
    ReferenceStatus:
      type: string
      enum:
      - AVAILABLE
      - DELETED
      - APPROVED
      - REJECTED
      - PROCESSING
      - FAILED
    ReferenceStatusReason:
      type: string
      minLength: 0
      maxLength: 100
    ReferenceSummary:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/UrlReference'
        description: |-
          Information about the reference when the `referenceType` is `URL`. Otherwise, null.
      - allOf:
        - $ref: '#/components/schemas/AttachmentReference'
        description: |-
          Information about the reference when the `referenceType` is `ATTACHMENT`. Otherwise, null.
      - allOf:
        - $ref: '#/components/schemas/EmailMessageReference'
        description: |-
          Information about the reference when the referenceType is `EMAIL_MESSAGE`. Otherwise, null.
      - allOf:
        - $ref: '#/components/schemas/StringReference'
        description: |-
          Information about a reference when the `referenceType` is `STRING`. Otherwise, null.
      - allOf:
        - $ref: '#/components/schemas/NumberReference'
        description: |-
          Information about a reference when the `referenceType` is `NUMBER`. Otherwise, null.
      - allOf:
        - $ref: '#/components/schemas/DateReference'
        description: |-
          Information about a reference when the `referenceType` is `DATE`. Otherwise, null.
      - allOf:
        - $ref: '#/components/schemas/EmailReference'
        description: |-
          Information about a reference when the `referenceType` is `EMAIL`. Otherwise, null.
      description: |-
        Contains summary information about a reference. `ReferenceSummary` contains only one non null field between the URL and attachment based on the reference type.
    ReferenceSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ReferenceSummary'
    ReferenceType:
      type: string
      enum:
      - URL
      - ATTACHMENT
      - CONTACT_ANALYSIS
      - NUMBER
      - STRING
      - DATE
      - EMAIL
      - EMAIL_MESSAGE
    ReferenceTypes:
      type: array
      items:
        $ref: '#/components/schemas/ReferenceType'
    ReferenceValue:
      type: string
      minLength: 0
      maxLength: 4096
    RefreshTokenDuration:
      type: integer
      minimum: 360
      maximum: 720
    RegionName:
      type: string
      pattern: ^[a-z]{2}(-[a-z]+){1,2}(-[0-9])?$
    RegistrationId:
      type: string
      minLength: 1
      maxLength: 256
    RehydrationType:
      type: string
      enum:
      - ENTIRE_PAST_SESSION
      - FROM_SEGMENT
    ReleasePhoneNumberRequest:
      type: object
      properties:
        PhoneNumberId:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberId'
          description: A unique identifier for the phone number.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
      required:
      - PhoneNumberId
    ReplicateInstanceRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceIdOrArn'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance. You can provide the
            `InstanceId`, or the entire ARN.
        ReplicaRegion:
          allOf:
          - $ref: '#/components/schemas/AwsRegion'
          description: The Amazon Web Services Region where to replicate the Amazon
            Connect instance.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
        ReplicaAlias:
          allOf:
          - $ref: '#/components/schemas/DirectoryAlias'
          description: The alias for the replicated instance. The `ReplicaAlias` must
            be unique.
      required:
      - InstanceId
      - ReplicaRegion
      - ReplicaAlias
    ReplicateInstanceResponse:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the replicated instance. You can find the
            `instanceId` in the ARN of the instance. The replicated instance has the
            same identifier as the instance it was replicated from.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the replicated instance.
    ReplicationConfiguration:
      type: object
      properties:
        ReplicationStatusSummaryList:
          allOf:
          - $ref: '#/components/schemas/ReplicationStatusSummaryList'
          description: A list of replication status summaries. The summaries contain
            details about the replication of configuration information for Amazon
            Connect resources, for each Amazon Web Services Region.
        SourceRegion:
          allOf:
          - $ref: '#/components/schemas/AwsRegion'
          description: The Amazon Web Services Region where the source Amazon Connect
            instance was created. This is the Region where the [ReplicateInstance](https://docs.aws.amazon.com/connect/latest/APIReference/API_ReplicateInstance.html)
            API was called to start the replication process.
        GlobalSignInEndpoint:
          allOf:
          - $ref: '#/components/schemas/GlobalSignInEndpoint'
          description: The URL that is used to sign-in to your Amazon Connect instance
            according to your traffic distribution group configuration. For more information
            about sign-in and traffic distribution groups, see [Important things to
            know](https://docs.aws.amazon.com/connect/latest/adminguide/setup-traffic-distribution-groups.html)
            in the _Create traffic distribution groups_ topic in the _Amazon Connect
            Administrator Guide_.
      description: Details about the status of the replication of a source Amazon
        Connect instance across Amazon Web Services Regions. Use these details to
        understand the general status of a given replication. For information about
        why a replication process may fail, see [Why a ReplicateInstance call fails](https://docs.aws.amazon.com/connect/latest/adminguide/create-replica-connect-instance.html#why-replicateinstance-fails)
        in the _Create a replica of your existing Amazon Connect instance_ topic in
        the _Amazon Connect Administrator Guide_.
    ReplicationStatusReason:
      type: string
      minLength: 0
      maxLength: 1024
    ReplicationStatusSummary:
      type: object
      properties:
        Region:
          allOf:
          - $ref: '#/components/schemas/AwsRegion'
          description: The Amazon Web Services Region. This can be either the source
            or the replica Region, depending where it appears in the summary list.
        ReplicationStatus:
          allOf:
          - $ref: '#/components/schemas/InstanceReplicationStatus'
          description: The state of the replication.
        ReplicationStatusReason:
          allOf:
          - $ref: '#/components/schemas/ReplicationStatusReason'
          description: A description of the replication status. Use this information
            to resolve any issues that are preventing the successful replication of
            your Amazon Connect instance to another Region.
      description: Status information about the replication process, where you use
        the [ReplicateInstance](https://docs.aws.amazon.com/connect/latest/APIReference/API_ReplicateInstance.html)
        API to create a replica of your Amazon Connect instance in another Amazon
        Web Services Region. For more information, see [Set up Amazon Connect Global
        Resiliency](https://docs.aws.amazon.com/connect/latest/adminguide/setup-connect-global-resiliency.html)
        in the _Amazon Connect Administrator Guide_.
    ReplicationStatusSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ReplicationStatusSummary'
    RequestIdentifier:
      type: string
      minLength: 0
      maxLength: 80
    RequiredFieldInfo:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateFieldIdentifier'
          description: The unique identifier for the field.
      description: Information about a required field.
    RequiredTaskTemplateFields:
      type: array
      items:
        $ref: '#/components/schemas/RequiredFieldInfo'
    ResourceArnOrId:
      type: string
      minLength: 1
      maxLength: 250
    ResourceConflictException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
      description: A resource already has that name.
    ResourceId:
      type: string
      minLength: 1
      maxLength: 500
    ResourceInUseException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The type of resource.
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The identifier for the resource.
      description: That resource is already in use. Please try another.
    ResourceNotFoundException:
      type: object
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/Message'
          description: The message about the resource.
      description: The specified resource was not found.
    ResourceNotReadyException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
      description: The resource is not ready.
    ResourceTagsSearchCriteria:
      type: object
      properties:
        TagSearchCondition:
          allOf:
          - $ref: '#/components/schemas/TagSearchCondition'
          description: The search criteria to be used to return tags.
      description: The search criteria to be used to search tags.
    ResourceType:
      type: string
      enum:
      - CONTACT
      - CONTACT_FLOW
      - INSTANCE
      - PARTICIPANT
      - HIERARCHY_LEVEL
      - HIERARCHY_GROUP
      - USER
      - PHONE_NUMBER
    ResourceTypeList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    ResourceVersion:
      type: integer
      format: int64
      minimum: 1
    ResumeContactRecordingRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact.
        InitialContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact. This is the identifier of the
            contact associated with the first interaction with the contact center.
        ContactRecordingType:
          allOf:
          - $ref: '#/components/schemas/ContactRecordingType'
          description: The type of recording being operated on.
      required:
      - InstanceId
      - ContactId
      - InitialContactId
    ResumeContactRecordingResponse:
      type: object
      properties: {}
    ResumeContactRequest:
      type: object
      properties:
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can find
            the `instanceId` in the ARN of the instance.
        ContactFlowId:
          allOf:
          - $ref: '#/components/schemas/ContactFlowId'
          description: The identifier of the flow.
      required:
      - ContactId
      - InstanceId
    ResumeContactResponse:
      type: object
      properties: {}
    RoutingCriteria:
      type: object
      properties:
        Steps:
          allOf:
          - $ref: '#/components/schemas/Steps'
          description: List of routing steps. When Amazon Connect does not find an
            available agent meeting the requirements in a step for a given step duration,
            the routing criteria will move on to the next step sequentially until
            a join is completed with an agent. When all steps are exhausted, the contact
            will be offered to any agent in the queue.
        ActivationTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp indicating when the routing criteria is set to
            active. A routing criteria is activated when contact is transferred to
            a queue. ActivationTimestamp will be set on routing criteria for contacts
            in agent queue even though Routing criteria is never activated for contacts
            in agent queue.
        Index:
          allOf:
          - $ref: '#/components/schemas/Index'
          description: Information about the index of the routing criteria.
      description: Latest routing criteria on the contact.
    RoutingCriteriaInput:
      type: object
      properties:
        Steps:
          allOf:
          - $ref: '#/components/schemas/RoutingCriteriaInputSteps'
          description: When Amazon Connect does not find an available agent meeting
            the requirements in a step for a given step duration, the routing criteria
            will move on to the next step sequentially until a join is completed with
            an agent. When all steps are exhausted, the contact will be offered to
            any agent in the queue.
      description: An object to define the RoutingCriteria.
    RoutingCriteriaInputStep:
      type: object
      properties:
        Expiry:
          allOf:
          - $ref: '#/components/schemas/RoutingCriteriaInputStepExpiry'
          description: An object to specify the expiration of a routing step.
        Expression:
          allOf:
          - $ref: '#/components/schemas/Expression'
          description: A tagged union to specify expression for a routing step.
      description: Step defines the list of agents to be routed or route based on
        the agent requirements such as ProficiencyLevel, Name, or Value.
    RoutingCriteriaInputStepExpiry:
      type: object
      properties:
        DurationInSeconds:
          allOf:
          - $ref: '#/components/schemas/DurationInSeconds'
          description: The number of seconds that the contact will be routed only
            to agents matching this routing step, if expiry was configured for this
            routing step.
      description: Specify whether this routing criteria step should apply for only
        a limited amount of time, or if it should never expire.
    RoutingCriteriaInputSteps:
      type: array
      items:
        $ref: '#/components/schemas/RoutingCriteriaInputStep'
    RoutingCriteriaStepStatus:
      type: string
      enum:
      - ACTIVE
      - INACTIVE
      - JOINED
      - EXPIRED
    RoutingExpression:
      type: string
      minLength: 1
      maxLength: 3000
    RoutingExpressions:
      type: array
      items:
        $ref: '#/components/schemas/RoutingExpression'
    RoutingProfile:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        Name:
          allOf:
          - $ref: '#/components/schemas/RoutingProfileName'
          description: The name of the routing profile.
        RoutingProfileArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the routing profile.
        RoutingProfileId:
          allOf:
          - $ref: '#/components/schemas/RoutingProfileId'
          description: The identifier of the routing profile.
        Description:
          allOf:
          - $ref: '#/components/schemas/RoutingProfileDescription'
          description: The description of the routing profile.
        MediaConcurrencies:
          allOf:
          - $ref: '#/components/schemas/MediaConcurrencies'
          description: The channels agents can handle in the Contact Control Panel
            (CCP) for this routing profile.
        DefaultOutboundQueueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The identifier of the default outbound queue for this routing
            profile.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The tags used to organize, track, or control access for this
            resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.'
        NumberOfAssociatedQueues:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The number of associated queues in routing profile.
        NumberOfAssociatedUsers:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The number of associated users in routing profile.
        AgentAvailabilityTimer:
          allOf:
          - $ref: '#/components/schemas/AgentAvailabilityTimer'
          description: Whether agents with this routing profile will have their routing
            order calculated based on _time since their last inbound contact_ or _longest
            idle time_.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when this resource was last modified.
        LastModifiedRegion:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          description: The Amazon Web Services Region where this resource was last
            modified.
        IsDefault:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether this a default routing profile.
        AssociatedQueueIds:
          allOf:
          - $ref: '#/components/schemas/AssociatedQueueIdList'
          description: The IDs of the associated queue.
      description: Contains information about a routing profile.
    RoutingProfileDescription:
      type: string
      minLength: 1
      maxLength: 250
    RoutingProfileId:
      type: string
    RoutingProfileList:
      type: array
      items:
        $ref: '#/components/schemas/RoutingProfile'
    RoutingProfileName:
      type: string
      minLength: 1
      maxLength: 127
    RoutingProfileQueueConfig:
      type: object
      properties:
        QueueReference:
          allOf:
          - $ref: '#/components/schemas/RoutingProfileQueueReference'
          description: Contains information about a queue resource.
        Priority:
          allOf:
          - $ref: '#/components/schemas/Priority'
          description: 'The order in which contacts are to be handled for the queue.
            For more information, see [Queues: priority and delay](https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing-profiles-priority.html).'
        Delay:
          allOf:
          - $ref: '#/components/schemas/Delay'
          description: 'The delay, in seconds, a contact should be in the queue before
            they are routed to an available agent. For more information, see [Queues:
            priority and delay](https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing-profiles-priority.html)
            in the _Amazon Connect Administrator Guide_.'
      required:
      - QueueReference
      - Priority
      - Delay
      description: Contains information about the queue and channel for which priority
        and delay can be set.
    RoutingProfileQueueConfigList:
      type: array
      items:
        $ref: '#/components/schemas/RoutingProfileQueueConfig'
    RoutingProfileQueueConfigSummary:
      type: object
      properties:
        QueueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The identifier for the queue.
        QueueArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the queue.
        QueueName:
          allOf:
          - $ref: '#/components/schemas/QueueName'
          description: The name of the queue.
        Priority:
          allOf:
          - $ref: '#/components/schemas/Priority'
          description: 'The order in which contacts are to be handled for the queue.
            For more information, see [Queues: priority and delay](https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing-profiles-priority.html).'
        Delay:
          allOf:
          - $ref: '#/components/schemas/Delay'
          description: 'The delay, in seconds, that a contact should be in the queue
            before they are routed to an available agent. For more information, see
            [Queues: priority and delay](https://docs.aws.amazon.com/connect/latest/adminguide/concepts-routing-profiles-priority.html)
            in the _Amazon Connect Administrator Guide_.'
        Channel:
          allOf:
          - $ref: '#/components/schemas/Channel'
          description: The channels this queue supports.
      required:
      - QueueId
      - QueueArn
      - QueueName
      - Priority
      - Delay
      - Channel
      description: Contains summary information about a routing profile queue.
    RoutingProfileQueueConfigSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/RoutingProfileQueueConfigSummary'
    RoutingProfileQueueReference:
      type: object
      properties:
        QueueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The identifier for the queue.
        Channel:
          allOf:
          - $ref: '#/components/schemas/Channel'
          description: The channels agents can handle in the Contact Control Panel
            (CCP) for this routing profile.
      required:
      - QueueId
      - Channel
      description: Contains the channel and queue identifier for a routing profile.
    RoutingProfileQueueReferenceList:
      type: array
      items:
        $ref: '#/components/schemas/RoutingProfileQueueReference'
    RoutingProfileReference:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/RoutingProfileId'
          description: The identifier of the routing profile.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the routing profile.
      description: Information about the routing profile assigned to the user.
    RoutingProfileSearchConditionList:
      type: array
      items:
        $ref: '#/components/schemas/RoutingProfileSearchCriteria'
    RoutingProfileSearchCriteria:
      type: object
      properties:
        OrConditions:
          allOf:
          - $ref: '#/components/schemas/RoutingProfileSearchConditionList'
          description: A list of conditions which would be applied together with an
            OR condition.
        AndConditions:
          allOf:
          - $ref: '#/components/schemas/RoutingProfileSearchConditionList'
          description: A list of conditions which would be applied together with an
            AND condition.
        StringCondition:
          allOf:
          - $ref: '#/components/schemas/StringCondition'
          description: 'A leaf node condition which can be used to specify a string
            condition.


            The currently supported values for `FieldName` are `associatedQueueIds`,
            `name`, `description`, and `resourceID`.'
      description: 'The search criteria to be used to return routing profiles.


        The `name` and `description` fields support "contains" queries with a minimum
        of 2 characters and a maximum of 25 characters. Any queries with character
        lengths outside of this range will throw invalid results.'
    RoutingProfileSearchFilter:
      type: object
      properties:
        TagFilter:
          $ref: '#/components/schemas/ControlPlaneTagFilter'
      description: Filters to be applied to search results.
    RoutingProfileSummary:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/RoutingProfileId'
          description: The identifier of the routing profile.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the routing profile.
        Name:
          allOf:
          - $ref: '#/components/schemas/RoutingProfileName'
          description: The name of the routing profile.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when this resource was last modified.
        LastModifiedRegion:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          description: The Amazon Web Services Region where this resource was last
            modified.
      description: Contains summary information about a routing profile.
    RoutingProfileSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/RoutingProfileSummary'
    RoutingProfiles:
      type: array
      items:
        $ref: '#/components/schemas/RoutingProfileId'
    Rule:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/RuleName'
          description: The name of the rule.
        RuleId:
          allOf:
          - $ref: '#/components/schemas/RuleId'
          description: A unique identifier for the rule.
        RuleArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the rule.
        TriggerEventSource:
          allOf:
          - $ref: '#/components/schemas/RuleTriggerEventSource'
          description: The event source to trigger the rule.
        Function:
          allOf:
          - $ref: '#/components/schemas/RuleFunction'
          description: The conditions of the rule.
        Actions:
          allOf:
          - $ref: '#/components/schemas/RuleActions'
          description: A list of actions to be run when the rule is triggered.
        PublishStatus:
          allOf:
          - $ref: '#/components/schemas/RulePublishStatus'
          description: The publish status of the rule.
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp for when the rule was created.
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp for the when the rule was last updated.
        LastUpdatedBy:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the user who last updated
            the rule.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The tags used to organize, track, or control access for this
            resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.'
      required:
      - Name
      - RuleId
      - RuleArn
      - TriggerEventSource
      - Function
      - Actions
      - PublishStatus
      - CreatedTime
      - LastUpdatedTime
      - LastUpdatedBy
      description: Information about a rule.
    RuleAction:
      type: object
      properties:
        ActionType:
          allOf:
          - $ref: '#/components/schemas/ActionType'
          description: The type of action that creates a rule.
        TaskAction:
          allOf:
          - $ref: '#/components/schemas/TaskActionDefinition'
          description: 'Information about the task action. This field is required
            if `TriggerEventSource` is one of the following values: `OnZendeskTicketCreate`
            | `OnZendeskTicketStatusUpdate` | `OnSalesforceCaseCreate`'
        EventBridgeAction:
          allOf:
          - $ref: '#/components/schemas/EventBridgeActionDefinition'
          description: 'Information about the EventBridge action.


            Supported only for `TriggerEventSource` values: `OnPostCallAnalysisAvailable`
            | `OnRealTimeCallAnalysisAvailable` | `OnRealTimeChatAnalysisAvailable`
            | `OnPostChatAnalysisAvailable` | `OnContactEvaluationSubmit` | `OnMetricDataUpdate`'
        AssignContactCategoryAction:
          allOf:
          - $ref: '#/components/schemas/AssignContactCategoryActionDefinition'
          description: 'Information about the contact category action.


            Supported only for `TriggerEventSource` values: `OnPostCallAnalysisAvailable`
            | `OnRealTimeCallAnalysisAvailable` | `OnRealTimeChatAnalysisAvailable`
            | `OnPostChatAnalysisAvailable` | `OnZendeskTicketCreate` | `OnZendeskTicketStatusUpdate`
            | `OnSalesforceCaseCreate`'
        SendNotificationAction:
          allOf:
          - $ref: '#/components/schemas/SendNotificationActionDefinition'
          description: 'Information about the send notification action.


            Supported only for `TriggerEventSource` values: `OnPostCallAnalysisAvailable`
            | `OnRealTimeCallAnalysisAvailable` | `OnRealTimeChatAnalysisAvailable`
            | `OnPostChatAnalysisAvailable` | `OnContactEvaluationSubmit` | `OnMetricDataUpdate`'
        CreateCaseAction:
          allOf:
          - $ref: '#/components/schemas/CreateCaseActionDefinition'
          description: 'Information about the create case action.


            Supported only for `TriggerEventSource` values: `OnPostCallAnalysisAvailable`
            | `OnPostChatAnalysisAvailable`.'
        UpdateCaseAction:
          allOf:
          - $ref: '#/components/schemas/UpdateCaseActionDefinition'
          description: 'Information about the update case action.


            Supported only for `TriggerEventSource` values: `OnCaseCreate` | `OnCaseUpdate`.'
        AssignSlaAction:
          allOf:
          - $ref: '#/components/schemas/AssignSlaActionDefinition'
          description: Information about the assign SLA action.
        EndAssociatedTasksAction:
          allOf:
          - $ref: '#/components/schemas/EndAssociatedTasksActionDefinition'
          description: 'Information about the end associated tasks action.


            Supported only for `TriggerEventSource` values: `OnCaseUpdate`.'
        SubmitAutoEvaluationAction:
          allOf:
          - $ref: '#/components/schemas/SubmitAutoEvaluationActionDefinition'
          description: Information about the submit automated evaluation action.
      required:
      - ActionType
      description: Information about the action to be performed when a rule is triggered.
    RuleActions:
      type: array
      items:
        $ref: '#/components/schemas/RuleAction'
    RuleFunction:
      type: string
    RuleId:
      type: string
      minLength: 1
      maxLength: 256
    RuleName:
      type: string
      pattern: ^[0-9a-zA-Z._-]+$
      minLength: 1
      maxLength: 200
    RulePublishStatus:
      type: string
      enum:
      - DRAFT
      - PUBLISHED
    RuleSummary:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/RuleName'
          description: The name of the rule.
        RuleId:
          allOf:
          - $ref: '#/components/schemas/RuleId'
          description: A unique identifier for the rule.
        RuleArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the rule.
        EventSourceName:
          allOf:
          - $ref: '#/components/schemas/EventSourceName'
          description: The name of the event source.
        PublishStatus:
          allOf:
          - $ref: '#/components/schemas/RulePublishStatus'
          description: The publish status of the rule.
        ActionSummaries:
          allOf:
          - $ref: '#/components/schemas/ActionSummaries'
          description: A list of ActionTypes associated with a rule.
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp for when the rule was created.
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp for when the rule was last updated.
      required:
      - Name
      - RuleId
      - RuleArn
      - EventSourceName
      - PublishStatus
      - ActionSummaries
      - CreatedTime
      - LastUpdatedTime
      description: A list of `ActionTypes` associated with a rule.
    RuleSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/RuleSummary'
    RuleTriggerEventSource:
      type: object
      properties:
        EventSourceName:
          allOf:
          - $ref: '#/components/schemas/EventSourceName'
          description: The name of the event source.
        IntegrationAssociationId:
          allOf:
          - $ref: '#/components/schemas/IntegrationAssociationId'
          description: The identifier for the integration association.
      required:
      - EventSourceName
      description: 'The name of the event source. This field is required if `TriggerEventSource`
        is one of the following values: `OnZendeskTicketCreate` | `OnZendeskTicketStatusUpdate`
        | `OnSalesforceCaseCreate` | `OnContactEvaluationSubmit` | `OnMetricDataUpdate`.'
    S3Config:
      type: object
      properties:
        BucketName:
          allOf:
          - $ref: '#/components/schemas/BucketName'
          description: The S3 bucket name.
        BucketPrefix:
          allOf:
          - $ref: '#/components/schemas/Prefix'
          description: The S3 bucket prefix.
        EncryptionConfig:
          allOf:
          - $ref: '#/components/schemas/EncryptionConfig'
          description: The Amazon S3 encryption configuration.
      required:
      - BucketName
      - BucketPrefix
      description: Information about the Amazon Simple Storage Service (Amazon S3)
        storage type.
    S3Uri:
      type: string
      pattern: ^s3://\S+/.+|https://\\S+\\.s3\\.\\S+\\.amazonaws\\.com/\\S+$
      minLength: 1
      maxLength: 2000
    ScreenShareCapability:
      type: string
      enum:
      - SEND
    SearchAgentStatusesRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can find
            the instanceId in the ARN of the instance.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken2500'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult100'
          description: The maximum number of results to return per page.
        SearchFilter:
          allOf:
          - $ref: '#/components/schemas/AgentStatusSearchFilter'
          description: Filters to be applied to search results.
        SearchCriteria:
          allOf:
          - $ref: '#/components/schemas/AgentStatusSearchCriteria'
          description: The search criteria to be used to return agent statuses.
      required:
      - InstanceId
    SearchAgentStatusesResponse:
      type: object
      properties:
        AgentStatuses:
          allOf:
          - $ref: '#/components/schemas/AgentStatusList'
          description: The search criteria to be used to return agent statuses.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken2500'
          description: If there are additional results, this is the token for the
            next set of results.
        ApproximateTotalCount:
          allOf:
          - $ref: '#/components/schemas/ApproximateTotalCount'
          description: The total number of agent statuses which matched your search
            query.
    SearchAvailablePhoneNumbersRequest:
      type: object
      properties:
        TargetArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for Amazon Connect instances
            or traffic distribution groups that phone number inbound traffic is routed
            through. You must enter `InstanceId` or `TargetArn`.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance that phone numbers
            are claimed to. You can [find the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance. You must enter `InstanceId`
            or `TargetArn`.
        PhoneNumberCountryCode:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberCountryCode'
          description: The ISO country code.
        PhoneNumberType:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberType'
          description: The type of phone number.
        PhoneNumberPrefix:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberPrefix'
          description: The prefix of the phone number. If provided, it must contain
            `+` as part of the country code.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult10'
          description: The maximum number of results to return per page.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/LargeNextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
      required:
      - PhoneNumberCountryCode
      - PhoneNumberType
    SearchAvailablePhoneNumbersResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/LargeNextToken'
          description: If there are additional results, this is the token for the
            next set of results.
        AvailableNumbersList:
          allOf:
          - $ref: '#/components/schemas/AvailableNumbersList'
          description: A list of available phone numbers that you can claim to your
            Amazon Connect instance or traffic distribution group.
    SearchContactFlowModulesRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can find
            the instance ID in the Amazon Resource Name (ARN) of the instance.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken2500'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult100'
          description: The maximum number of results to return per page.
        SearchFilter:
          allOf:
          - $ref: '#/components/schemas/ContactFlowModuleSearchFilter'
          description: Filters to be applied to search results.
        SearchCriteria:
          allOf:
          - $ref: '#/components/schemas/ContactFlowModuleSearchCriteria'
          description: 'The search criteria to be used to return flow modules.


            The `name` and `description` fields support "contains" queries with a
            minimum of 2 characters and a maximum of 25 characters. Any queries with
            character lengths outside of this range will result in invalid results.'
      required:
      - InstanceId
    SearchContactFlowModulesResponse:
      type: object
      properties:
        ContactFlowModules:
          allOf:
          - $ref: '#/components/schemas/ContactFlowModuleSearchSummaryList'
          description: The search criteria to be used to return flow modules.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken2500'
          description: If there are additional results, this is the token for the
            next set of results.
        ApproximateTotalCount:
          allOf:
          - $ref: '#/components/schemas/ApproximateTotalCount'
          description: The total number of flows which matched your search query.
    SearchContactFlowsRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can find
            the instance ID in the Amazon Resource Name (ARN) of the instance.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken2500'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult100'
          description: The maximum number of results to return per page.
        SearchFilter:
          allOf:
          - $ref: '#/components/schemas/ContactFlowSearchFilter'
          description: Filters to be applied to search results.
        SearchCriteria:
          allOf:
          - $ref: '#/components/schemas/ContactFlowSearchCriteria'
          description: 'The search criteria to be used to return flows.


            The `name` and `description` fields support "contains" queries with a
            minimum of 2 characters and a maximum of 25 characters. Any queries with
            character lengths outside of this range will result in invalid results.'
      required:
      - InstanceId
    SearchContactFlowsResponse:
      type: object
      properties:
        ContactFlows:
          allOf:
          - $ref: '#/components/schemas/ContactFlowSearchSummaryList'
          description: Information about the flows.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken2500'
          description: If there are additional results, this is the token for the
            next set of results.
        ApproximateTotalCount:
          allOf:
          - $ref: '#/components/schemas/ApproximateTotalCount'
          description: The total number of flows which matched your search query.
    SearchContactsMatchType:
      type: string
      enum:
      - MATCH_ALL
      - MATCH_ANY
    SearchContactsRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of Amazon Connect instance. You can find the
            instance ID in the Amazon Resource Name (ARN) of the instance.
        TimeRange:
          allOf:
          - $ref: '#/components/schemas/SearchContactsTimeRange'
          description: Time range that you want to search results.
        SearchCriteria:
          allOf:
          - $ref: '#/components/schemas/SearchCriteria'
          description: The search criteria to be used to return contacts.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult100'
          description: The maximum number of results to return per page.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/LargeNextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        Sort:
          allOf:
          - $ref: '#/components/schemas/Sort'
          description: Specifies a field to sort by and a sort order.
      required:
      - InstanceId
      - TimeRange
    SearchContactsResponse:
      type: object
      properties:
        Contacts:
          allOf:
          - $ref: '#/components/schemas/Contacts'
          description: Information about the contacts.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/LargeNextToken'
          description: If there are additional results, this is the token for the
            next set of results.
        TotalCount:
          allOf:
          - $ref: '#/components/schemas/TotalCount'
          description: The total number of contacts which matched your search query.
      required:
      - Contacts
    SearchContactsTimeRange:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/SearchContactsTimeRangeType'
          description: The type of timestamp to search.
        StartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The start time of the time range.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The end time of the time range.
      required:
      - Type
      - StartTime
      - EndTime
      description: A structure of time range that you want to search results.
    SearchContactsTimeRangeType:
      type: string
      enum:
      - INITIATION_TIMESTAMP
      - SCHEDULED_TIMESTAMP
      - CONNECTED_TO_AGENT_TIMESTAMP
      - DISCONNECT_TIMESTAMP
    SearchCriteria:
      type: object
      properties:
        AgentIds:
          allOf:
          - $ref: '#/components/schemas/AgentResourceIdList'
          description: The identifiers of agents who handled the contacts.
        AgentHierarchyGroups:
          allOf:
          - $ref: '#/components/schemas/AgentHierarchyGroups'
          description: The agent hierarchy groups of the agent at the time of handling
            the contact.
        Channels:
          allOf:
          - $ref: '#/components/schemas/ChannelList'
          description: The list of channels associated with contacts.
        ContactAnalysis:
          allOf:
          - $ref: '#/components/schemas/ContactAnalysis'
          description: Search criteria based on analysis outputs from Amazon Connect
            Contact Lens.
        InitiationMethods:
          allOf:
          - $ref: '#/components/schemas/InitiationMethodList'
          description: The list of initiation methods associated with contacts.
        QueueIds:
          allOf:
          - $ref: '#/components/schemas/QueueIdList'
          description: The list of queue IDs associated with contacts.
        SearchableContactAttributes:
          allOf:
          - $ref: '#/components/schemas/SearchableContactAttributes'
          description: 'The search criteria based on user-defined contact attributes
            that have been configured for contact search. For more information, see
            [Search by custom contact attributes](https://docs.aws.amazon.com/connect/latest/adminguide/search-custom-attributes.html)
            in the _Amazon Connect Administrator Guide_.


            To use `SearchableContactAttributes` in a search request, the `GetContactAttributes`
            action is required to perform an API request. For more information, see
            <https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonconnect.html#amazonconnect-actions-as-permissions>Actions
            defined by Amazon Connect.'
        SearchableSegmentAttributes:
          allOf:
          - $ref: '#/components/schemas/SearchableSegmentAttributes'
          description: The search criteria based on searchable segment attributes
            of a contact.
      description: A structure of search criteria to be used to return contacts.
    SearchEmailAddressesRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult100'
          description: The maximum number of results to return per page.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken2500'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        SearchCriteria:
          allOf:
          - $ref: '#/components/schemas/EmailAddressSearchCriteria'
          description: The search criteria to be used to return email addresses.
        SearchFilter:
          allOf:
          - $ref: '#/components/schemas/EmailAddressSearchFilter'
          description: Filters to be applied to search results.
      required:
      - InstanceId
    SearchEmailAddressesResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
        EmailAddresses:
          allOf:
          - $ref: '#/components/schemas/EmailAddressList'
          description: List of email addresses matching SearchFilter and SearchCriteria
        ApproximateTotalCount:
          allOf:
          - $ref: '#/components/schemas/ApproximateTotalCount'
          description: The total number of email addresses which matched your search
            query.
    SearchHoursOfOperationOverridesRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken2500'
          description: 'The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results. Length Constraints: Minimum length of 1. Maximum length of
            2500.'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult100'
          description: 'The maximum number of results to return per page. Valid Range:
            Minimum value of 1. Maximum value of 100.'
        SearchFilter:
          $ref: '#/components/schemas/HoursOfOperationSearchFilter'
        SearchCriteria:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationOverrideSearchCriteria'
          description: The search criteria to be used to return hours of operations
            overrides.
      required:
      - InstanceId
    SearchHoursOfOperationOverridesResponse:
      type: object
      properties:
        HoursOfOperationOverrides:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationOverrideList'
          description: Information about the hours of operations overrides.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken2500'
          description: 'The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results. Length Constraints: Minimum length of 1. Maximum length of
            2500.'
        ApproximateTotalCount:
          allOf:
          - $ref: '#/components/schemas/ApproximateTotalCount'
          description: The total number of hours of operations which matched your
            search query.
    SearchHoursOfOperationsRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken2500'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult100'
          description: The maximum number of results to return per page.
        SearchFilter:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationSearchFilter'
          description: Filters to be applied to search results.
        SearchCriteria:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationSearchCriteria'
          description: The search criteria to be used to return hours of operations.
      required:
      - InstanceId
    SearchHoursOfOperationsResponse:
      type: object
      properties:
        HoursOfOperations:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationList'
          description: Information about the hours of operations.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken2500'
          description: If there are additional results, this is the token for the
            next set of results.
        ApproximateTotalCount:
          allOf:
          - $ref: '#/components/schemas/ApproximateTotalCount'
          description: The total number of hours of operations which matched your
            search query.
    SearchPredefinedAttributesRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can find
            the instance ID in the Amazon Resource Name (ARN) of the instance.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken2500'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult100'
          description: The maximum number of results to return per page.
        SearchCriteria:
          allOf:
          - $ref: '#/components/schemas/PredefinedAttributeSearchCriteria'
          description: The search criteria to be used to return predefined attributes.
      required:
      - InstanceId
    SearchPredefinedAttributesResponse:
      type: object
      properties:
        PredefinedAttributes:
          allOf:
          - $ref: '#/components/schemas/PredefinedAttributeSearchSummaryList'
          description: Predefined attributes matched by the search criteria.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken2500'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        ApproximateTotalCount:
          allOf:
          - $ref: '#/components/schemas/ApproximateTotalCount'
          description: The approximate number of predefined attributes which matched
            your search query.
    SearchPromptsRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken2500'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult100'
          description: The maximum number of results to return per page.
        SearchFilter:
          allOf:
          - $ref: '#/components/schemas/PromptSearchFilter'
          description: Filters to be applied to search results.
        SearchCriteria:
          allOf:
          - $ref: '#/components/schemas/PromptSearchCriteria'
          description: The search criteria to be used to return prompts.
      required:
      - InstanceId
    SearchPromptsResponse:
      type: object
      properties:
        Prompts:
          allOf:
          - $ref: '#/components/schemas/PromptList'
          description: Information about the prompts.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken2500'
          description: If there are additional results, this is the token for the
            next set of results.
        ApproximateTotalCount:
          allOf:
          - $ref: '#/components/schemas/ApproximateTotalCount'
          description: The total number of quick connects which matched your search
            query.
    SearchQueuesRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken2500'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult500'
          description: The maximum number of results to return per page.
        SearchFilter:
          allOf:
          - $ref: '#/components/schemas/QueueSearchFilter'
          description: Filters to be applied to search results.
        SearchCriteria:
          allOf:
          - $ref: '#/components/schemas/QueueSearchCriteria'
          description: 'The search criteria to be used to return queues.


            The `name` and `description` fields support "contains" queries with a
            minimum of 2 characters and a maximum of 25 characters. Any queries with
            character lengths outside of this range will throw invalid results.'
      required:
      - InstanceId
    SearchQueuesResponse:
      type: object
      properties:
        Queues:
          allOf:
          - $ref: '#/components/schemas/QueueSearchSummaryList'
          description: Information about the queues.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken2500'
          description: If there are additional results, this is the token for the
            next set of results.
        ApproximateTotalCount:
          allOf:
          - $ref: '#/components/schemas/ApproximateTotalCount'
          description: The total number of queues which matched your search query.
    SearchQuickConnectsRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken2500'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult100'
          description: The maximum number of results to return per page.
        SearchFilter:
          allOf:
          - $ref: '#/components/schemas/QuickConnectSearchFilter'
          description: Filters to be applied to search results.
        SearchCriteria:
          allOf:
          - $ref: '#/components/schemas/QuickConnectSearchCriteria'
          description: The search criteria to be used to return quick connects.
      required:
      - InstanceId
    SearchQuickConnectsResponse:
      type: object
      properties:
        QuickConnects:
          allOf:
          - $ref: '#/components/schemas/QuickConnectSearchSummaryList'
          description: Information about the quick connects.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken2500'
          description: If there are additional results, this is the token for the
            next set of results.
        ApproximateTotalCount:
          allOf:
          - $ref: '#/components/schemas/ApproximateTotalCount'
          description: The total number of quick connects which matched your search
            query.
    SearchResourceTagsRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceIdOrArn'
          description: The identifier of the Amazon Connect instance. You can find
            the instanceId in the Amazon Resource Name (ARN) of the instance.
        ResourceTypes:
          allOf:
          - $ref: '#/components/schemas/ResourceTypeList'
          description: "The list of resource types to be used to search tags from.\
            \ If not provided or if any empty list is provided, this API will search\
            \ from all supported resource types. Note that lowercase and \\- are required.\n\
            \n**Supported resource types**\n\n  * agent\n\n  * agent-state\n\n  *\
            \ routing-profile\n\n  * standard-queue\n\n  * security-profile\n\n  *\
            \ operating-hours\n\n  * prompt\n\n  * contact-flow\n\n  * flow- module\n\
            \n  * transfer-destination (also known as quick connect)"
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken2500'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult100'
          description: The maximum number of results to return per page.
        SearchCriteria:
          allOf:
          - $ref: '#/components/schemas/ResourceTagsSearchCriteria'
          description: The search criteria to be used to return tags.
      required:
      - InstanceId
    SearchResourceTagsResponse:
      type: object
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagsList'
          description: A list of tags used in the Amazon Connect instance.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken2500'
          description: If there are additional results, this is the token for the
            next set of results.
    SearchRoutingProfilesRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken2500'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult500'
          description: The maximum number of results to return per page.
        SearchFilter:
          allOf:
          - $ref: '#/components/schemas/RoutingProfileSearchFilter'
          description: Filters to be applied to search results.
        SearchCriteria:
          allOf:
          - $ref: '#/components/schemas/RoutingProfileSearchCriteria'
          description: 'The search criteria to be used to return routing profiles.


            The `name` and `description` fields support "contains" queries with a
            minimum of 2 characters and a maximum of 25 characters. Any queries with
            character lengths outside of this range will throw invalid results.'
      required:
      - InstanceId
    SearchRoutingProfilesResponse:
      type: object
      properties:
        RoutingProfiles:
          allOf:
          - $ref: '#/components/schemas/RoutingProfileList'
          description: Information about the routing profiles.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken2500'
          description: If there are additional results, this is the token for the
            next set of results.
        ApproximateTotalCount:
          allOf:
          - $ref: '#/components/schemas/ApproximateTotalCount'
          description: The total number of routing profiles which matched your search
            query.
    SearchSecurityProfilesRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken2500'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult100'
          description: The maximum number of results to return per page.
        SearchCriteria:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileSearchCriteria'
          description: 'The search criteria to be used to return security profiles.


            The `name` field support "contains" queries with a minimum of 2 characters
            and maximum of 25 characters. Any queries with character lengths outside
            of this range will throw invalid results.


            The currently supported value for `FieldName`: `name`'
        SearchFilter:
          allOf:
          - $ref: '#/components/schemas/SecurityProfilesSearchFilter'
          description: Filters to be applied to search results.
      required:
      - InstanceId
    SearchSecurityProfilesResponse:
      type: object
      properties:
        SecurityProfiles:
          allOf:
          - $ref: '#/components/schemas/SecurityProfilesSearchSummaryList'
          description: Information about the security profiles.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken2500'
          description: If there are additional results, this is the token for the
            next set of results.
        ApproximateTotalCount:
          allOf:
          - $ref: '#/components/schemas/ApproximateTotalCount'
          description: The total number of security profiles which matched your search
            query.
    SearchText:
      type: string
      minLength: 0
      maxLength: 128
    SearchTextList:
      type: array
      items:
        $ref: '#/components/schemas/SearchText'
    SearchUserHierarchyGroupsRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can find
            the instanceId in the ARN of the instance.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken2500'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult100'
          description: The maximum number of results to return per page.
        SearchFilter:
          allOf:
          - $ref: '#/components/schemas/UserHierarchyGroupSearchFilter'
          description: Filters to be applied to search results.
        SearchCriteria:
          allOf:
          - $ref: '#/components/schemas/UserHierarchyGroupSearchCriteria'
          description: The search criteria to be used to return UserHierarchyGroups.
      required:
      - InstanceId
    SearchUserHierarchyGroupsResponse:
      type: object
      properties:
        UserHierarchyGroups:
          allOf:
          - $ref: '#/components/schemas/UserHierarchyGroupList'
          description: Information about the userHierarchyGroups.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken2500'
          description: If there are additional results, this is the token for the
            next set of results.
        ApproximateTotalCount:
          allOf:
          - $ref: '#/components/schemas/ApproximateTotalCount'
          description: The total number of userHierarchyGroups which matched your
            search query.
    SearchUsersRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken2500'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult500'
          description: The maximum number of results to return per page.
        SearchFilter:
          allOf:
          - $ref: '#/components/schemas/UserSearchFilter'
          description: Filters to be applied to search results.
        SearchCriteria:
          $ref: '#/components/schemas/UserSearchCriteria'
      required:
      - InstanceId
    SearchUsersResponse:
      type: object
      properties:
        Users:
          allOf:
          - $ref: '#/components/schemas/UserSearchSummaryList'
          description: Information about the users.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken2500'
          description: If there are additional results, this is the token for the
            next set of results.
        ApproximateTotalCount:
          allOf:
          - $ref: '#/components/schemas/ApproximateTotalCount'
          description: The total number of users who matched your search query.
    SearchVocabulariesRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResult100'
          description: The maximum number of results to return per page.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/VocabularyNextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        State:
          allOf:
          - $ref: '#/components/schemas/VocabularyState'
          description: The current state of the custom vocabulary.
        NameStartsWith:
          allOf:
          - $ref: '#/components/schemas/VocabularyName'
          description: The starting pattern of the name of the vocabulary.
        LanguageCode:
          allOf:
          - $ref: '#/components/schemas/VocabularyLanguageCode'
          description: The language code of the vocabulary entries. For a list of
            languages and their corresponding language codes, see [What is Amazon
            Transcribe?](https://docs.aws.amazon.com/transcribe/latest/dg/transcribe-whatis.html)
      required:
      - InstanceId
    SearchVocabulariesResponse:
      type: object
      properties:
        VocabularySummaryList:
          allOf:
          - $ref: '#/components/schemas/VocabularySummaryList'
          description: The list of the available custom vocabularies.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/VocabularyNextToken'
          description: If there are additional results, this is the token for the
            next set of results.
    SearchableContactAttributeKey:
      type: string
      minLength: 1
      maxLength: 100
    SearchableContactAttributeValue:
      type: string
      minLength: 0
      maxLength: 100
    SearchableContactAttributeValueList:
      type: array
      items:
        $ref: '#/components/schemas/SearchableContactAttributeValue'
    SearchableContactAttributes:
      type: object
      properties:
        Criteria:
          allOf:
          - $ref: '#/components/schemas/SearchableContactAttributesCriteriaList'
          description: The list of criteria based on user-defined contact attributes
            that are configured for contact search.
        MatchType:
          allOf:
          - $ref: '#/components/schemas/SearchContactsMatchType'
          description: The match type combining search criteria using multiple searchable
            contact attributes.
      required:
      - Criteria
      description: A structure that defines search criteria based on user-defined
        contact attributes that are configured for contact search.
    SearchableContactAttributesCriteria:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/SearchableContactAttributeKey'
          description: The key containing a searchable user-defined contact attribute.
        Values:
          allOf:
          - $ref: '#/components/schemas/SearchableContactAttributeValueList'
          description: The list of values to search for within a user-defined contact
            attribute.
      required:
      - Key
      - Values
      description: The search criteria based on user-defined contact attribute key
        and values to search on.
    SearchableContactAttributesCriteriaList:
      type: array
      items:
        $ref: '#/components/schemas/SearchableContactAttributesCriteria'
    SearchableQueueType:
      type: string
      enum:
      - STANDARD
    SearchableSegmentAttributeKey:
      type: string
      minLength: 1
      maxLength: 64
    SearchableSegmentAttributeValue:
      type: string
      minLength: 0
      maxLength: 128
    SearchableSegmentAttributeValueList:
      type: array
      items:
        $ref: '#/components/schemas/SearchableSegmentAttributeValue'
      x-sensitive: true
    SearchableSegmentAttributes:
      type: object
      properties:
        Criteria:
          allOf:
          - $ref: '#/components/schemas/SearchableSegmentAttributesCriteriaList'
          description: The list of criteria based on searchable segment attributes.
        MatchType:
          allOf:
          - $ref: '#/components/schemas/SearchContactsMatchType'
          description: The match type combining search criteria using multiple searchable
            segment attributes.
      required:
      - Criteria
      description: The search criteria based on searchable segment attributes of a
        contact
    SearchableSegmentAttributesCriteria:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/SearchableSegmentAttributeKey'
          description: The key containing a searchable segment attribute.
        Values:
          allOf:
          - $ref: '#/components/schemas/SearchableSegmentAttributeValueList'
          description: The list of values to search for within a searchable segment
            attribute.
      required:
      - Key
      - Values
      description: The search criteria based on searchable segment attribute key and
        values to search on.
    SearchableSegmentAttributesCriteriaList:
      type: array
      items:
        $ref: '#/components/schemas/SearchableSegmentAttributesCriteria'
    SecurityKey:
      type: object
      properties:
        AssociationId:
          allOf:
          - $ref: '#/components/schemas/AssociationId'
          description: The existing association identifier that uniquely identifies
            the resource type and storage config for the given instance ID.
        Key:
          allOf:
          - $ref: '#/components/schemas/PEM'
          description: The key of the security key.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: When the security key was created.
      description: Configuration information of the security key.
    SecurityKeysList:
      type: array
      items:
        $ref: '#/components/schemas/SecurityKey'
    SecurityProfile:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileId'
          description: The identifier for the security profile.
        OrganizationResourceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The organization resource identifier for the security profile.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for the security profile.
        SecurityProfileName:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileName'
          description: The name for the security profile.
        Description:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileDescription'
          description: The description of the security profile.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The tags used to organize, track, or control access for this
            resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.'
        AllowedAccessControlTags:
          allOf:
          - $ref: '#/components/schemas/AllowedAccessControlTags'
          description: The list of tags that a security profile uses to restrict access
            to resources in Amazon Connect.
        TagRestrictedResources:
          allOf:
          - $ref: '#/components/schemas/TagRestrictedResourceList'
          description: The list of resources that a security profile applies tag restrictions
            to in Amazon Connect.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when this resource was last modified.
        LastModifiedRegion:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          description: The Amazon Web Services Region where this resource was last
            modified.
        HierarchyRestrictedResources:
          allOf:
          - $ref: '#/components/schemas/HierarchyRestrictedResourceList'
          description: 'The list of resources that a security profile applies hierarchy
            restrictions to in Amazon Connect. Following are acceptable ResourceNames:
            `User`.'
        AllowedAccessControlHierarchyGroupId:
          allOf:
          - $ref: '#/components/schemas/HierarchyGroupId'
          description: The identifier of the hierarchy group that a security profile
            uses to restrict access to resources in Amazon Connect.
      description: Contains information about a security profile.
    SecurityProfileDescription:
      type: string
      minLength: 0
      maxLength: 250
    SecurityProfileId:
      type: string
    SecurityProfileIds:
      type: array
      items:
        $ref: '#/components/schemas/SecurityProfileId'
    SecurityProfileName:
      type: string
    SecurityProfilePermission:
      type: string
      minLength: 1
      maxLength: 128
    SecurityProfilePolicyKey:
      type: string
      minLength: 1
      maxLength: 128
    SecurityProfilePolicyValue:
      type: string
      minLength: 0
      maxLength: 256
    SecurityProfileSearchConditionList:
      type: array
      items:
        $ref: '#/components/schemas/SecurityProfileSearchCriteria'
    SecurityProfileSearchCriteria:
      type: object
      properties:
        OrConditions:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileSearchConditionList'
          description: A list of conditions which would be applied together with an
            OR condition.
        AndConditions:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileSearchConditionList'
          description: A list of conditions which would be applied together with an
            AND condition.
        StringCondition:
          $ref: '#/components/schemas/StringCondition'
      description: 'The search criteria to be used to return security profiles.


        The `name` field support "contains" queries with a minimum of 2 characters
        and maximum of 25 characters. Any queries with character lengths outside of
        this range will throw invalid results.'
    SecurityProfileSearchSummary:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileId'
          description: The identifier of the security profile.
        OrganizationResourceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The organization resource identifier.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the security profile.
        SecurityProfileName:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileName'
          description: The name of the security profile.
        Description:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileDescription'
          description: The description of the security profile.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The tags used to organize, track, or control access for this
            resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.'
      description: Information about the returned security profiles.
    SecurityProfileSummary:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileId'
          description: The identifier of the security profile.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the security profile.
        Name:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileName'
          description: The name of the security profile.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when this resource was last modified.
        LastModifiedRegion:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          description: The Amazon Web Services Region where this resource was last
            modified.
      description: Contains information about a security profile.
    SecurityProfileSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/SecurityProfileSummary'
    SecurityProfilesSearchFilter:
      type: object
      properties:
        TagFilter:
          $ref: '#/components/schemas/ControlPlaneTagFilter'
      description: Filters to be applied to search results.
    SecurityProfilesSearchSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/SecurityProfileSearchSummary'
    SecurityToken:
      type: string
    SegmentAttributeName:
      type: string
      minLength: 1
      maxLength: 128
    SegmentAttributeValue:
      type: object
      properties:
        ValueString:
          allOf:
          - $ref: '#/components/schemas/SegmentAttributeValueString'
          description: The value of a segment attribute.
        ValueMap:
          allOf:
          - $ref: '#/components/schemas/SegmentAttributeValueMap'
          description: The value of a segment attribute.
        ValueInteger:
          allOf:
          - $ref: '#/components/schemas/SegmentAttributeValueInteger'
          description: The value of a segment attribute.
      description: A value for a segment attribute. This is structured as a map where
        the key is `valueString` and the value is a string.
    SegmentAttributeValueInteger:
      type: integer
    SegmentAttributeValueMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/SegmentAttributeValue'
    SegmentAttributeValueString:
      type: string
      minLength: 0
      maxLength: 1024
    SegmentAttributes:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/SegmentAttributeValue'
    SendChatIntegrationEventRequest:
      type: object
      properties:
        SourceId:
          allOf:
          - $ref: '#/components/schemas/SourceId'
          description: External identifier of chat customer participant, used in part
            to uniquely identify a chat. For SMS, this is the E164 phone number of
            the chat customer participant.
        DestinationId:
          allOf:
          - $ref: '#/components/schemas/DestinationId'
          description: Chat system identifier, used in part to uniquely identify chat.
            This is associated with the Amazon Connect instance and flow to be used
            to start chats. For Server Migration Service, this is the phone number
            destination of inbound Server Migration Service messages represented by
            an Amazon Web Services End User Messaging phone number ARN.
        Subtype:
          allOf:
          - $ref: '#/components/schemas/Subtype'
          description: 'Classification of a channel. This is used in part to uniquely
            identify chat.


            Valid value: `["connect:sms", connect:"WhatsApp"]`'
        Event:
          allOf:
          - $ref: '#/components/schemas/ChatEvent'
          description: Chat integration event payload
        NewSessionDetails:
          allOf:
          - $ref: '#/components/schemas/NewSessionDetails'
          description: Contact properties to apply when starting a new chat. If the
            integration event is handled with an existing chat, this is ignored.
      required:
      - SourceId
      - DestinationId
      - Event
    SendChatIntegrationEventResponse:
      type: object
      properties:
        InitialContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: Identifier of chat contact used to handle integration event.
            This may be null if the integration event is not valid without an already
            existing chat contact.
        NewChatCreated:
          allOf:
          - $ref: '#/components/schemas/NewChatCreated'
          description: Whether handling the integration event resulted in creating
            a new chat or acting on existing chat.
    SendNotificationActionDefinition:
      type: object
      properties:
        DeliveryMethod:
          allOf:
          - $ref: '#/components/schemas/NotificationDeliveryType'
          description: Notification delivery method.
        Subject:
          allOf:
          - $ref: '#/components/schemas/Subject'
          description: The subject of the email if the delivery method is `EMAIL`.
            Supports variable injection. For more information, see [JSONPath reference](https://docs.aws.amazon.com/connect/latest/adminguide/contact-lens-variable-injection.html)
            in the _Amazon Connect Administrators Guide_.
        Content:
          allOf:
          - $ref: '#/components/schemas/Content'
          description: Notification content. Supports variable injection. For more
            information, see [JSONPath reference](https://docs.aws.amazon.com/connect/latest/adminguide/contact-lens-variable-injection.html)
            in the _Amazon Connect Administrators Guide_.
        ContentType:
          allOf:
          - $ref: '#/components/schemas/NotificationContentType'
          description: Content type format.
        Recipient:
          allOf:
          - $ref: '#/components/schemas/NotificationRecipientType'
          description: Notification recipient.
      required:
      - DeliveryMethod
      - Content
      - ContentType
      - Recipient
      description: Information about the send notification action.
    SendOutboundEmailRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        FromEmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddressInfo'
          description: The email address to be used for sending email.
        DestinationEmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddressInfo'
          description: The email address to send the email to.
        AdditionalRecipients:
          allOf:
          - $ref: '#/components/schemas/OutboundAdditionalRecipients'
          description: The additional recipients address of the email in CC.
        EmailMessage:
          allOf:
          - $ref: '#/components/schemas/OutboundEmailContent'
          description: The email message body to be sent to the newly created email.
        TrafficType:
          allOf:
          - $ref: '#/components/schemas/TrafficType'
          description: 'Denotes the class of traffic.


            Only the CAMPAIGN traffic type is supported.'
        SourceCampaign:
          allOf:
          - $ref: '#/components/schemas/SourceCampaign'
          description: A Campaign object need for Campaign traffic type.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
      required:
      - InstanceId
      - FromEmailAddress
      - DestinationEmailAddress
      - EmailMessage
      - TrafficType
    SendOutboundEmailResponse:
      type: object
      properties: {}
    ServiceQuotaExceededException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
        Reason:
          $ref: '#/components/schemas/ServiceQuotaExceededExceptionReason'
      description: The service quota has been exceeded.
    ServiceQuotaExceededExceptionReason:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/AttachedFileServiceQuotaExceededExceptionReason'
        description: |-
          Total file size of all files or total number of files exceeds the service quota
      description: |-
        The reason for the exception.
    SignInConfig:
      type: object
      properties:
        Distributions:
          allOf:
          - $ref: '#/components/schemas/SignInDistributionList'
          description: Information about traffic distributions.
      required:
      - Distributions
      description: The distribution that determines which Amazon Web Services Regions
        should be used to sign in agents in to both the instance and its replica(s).
    SignInDistribution:
      type: object
      properties:
        Region:
          allOf:
          - $ref: '#/components/schemas/AwsRegion'
          description: The Amazon Web Services Region of the sign in distribution.
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether sign in distribution is enabled.
      required:
      - Region
      - Enabled
      description: The distribution of sign in traffic between the instance and its
        replica(s).
    SignInDistributionList:
      type: array
      items:
        $ref: '#/components/schemas/SignInDistribution'
    SingleSelectOptions:
      type: array
      items:
        $ref: '#/components/schemas/TaskTemplateSingleSelectOption'
    SingleSelectQuestionRuleCategoryAutomation:
      type: object
      properties:
        Category:
          allOf:
          - $ref: '#/components/schemas/SingleSelectQuestionRuleCategoryAutomationLabel'
          description: The category name, as defined in Rules.
        Condition:
          allOf:
          - $ref: '#/components/schemas/SingleSelectQuestionRuleCategoryAutomationCondition'
          description: The condition to apply for the automation option. If the condition
            is `PRESENT`, then the option is applied when the contact data includes
            the category. Similarly, if the condition is `NOT_PRESENT`, then the option
            is applied when the contact data does not include the category.
        OptionRefId:
          allOf:
          - $ref: '#/components/schemas/ReferenceId'
          description: The identifier of the answer option.
      required:
      - Category
      - Condition
      - OptionRefId
      description: Information about the automation option based on a rule category
        for a single select question.
    SingleSelectQuestionRuleCategoryAutomationCondition:
      type: string
      enum:
      - PRESENT
      - NOT_PRESENT
    SingleSelectQuestionRuleCategoryAutomationLabel:
      type: string
      minLength: 1
      maxLength: 50
    SlaAssignmentType:
      type: string
      enum:
      - CASES
    SlaFieldValueUnionList:
      type: array
      items:
        $ref: '#/components/schemas/FieldValueUnion'
    SlaName:
      type: string
      pattern: ^.*[\S]$
      minLength: 1
      maxLength: 500
    SlaType:
      type: string
      enum:
      - CaseField
    SnapshotVersion:
      type: string
    Sort:
      type: object
      properties:
        FieldName:
          allOf:
          - $ref: '#/components/schemas/SortableFieldName'
          description: The name of the field on which to sort.
        Order:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          description: An ascending or descending sort.
      required:
      - FieldName
      - Order
      description: A structure that defines the field name to sort by and a sort order.
    SortOrder:
      type: string
      enum:
      - ASCENDING
      - DESCENDING
    SortableFieldName:
      type: string
      enum:
      - INITIATION_TIMESTAMP
      - SCHEDULED_TIMESTAMP
      - CONNECTED_TO_AGENT_TIMESTAMP
      - DISCONNECT_TIMESTAMP
      - INITIATION_METHOD
      - CHANNEL
    SourceApplicationName:
      type: string
      pattern: ^[a-zA-Z0-9_ -]+$
      minLength: 1
      maxLength: 100
    SourceCampaign:
      type: object
      properties:
        CampaignId:
          allOf:
          - $ref: '#/components/schemas/CampaignId'
          description: A unique identifier for a campaign.
        OutboundRequestId:
          allOf:
          - $ref: '#/components/schemas/OutboundRequestId'
          description: A unique identifier for a each request part of same campaign.
      description: Information about the campaign.
    SourceId:
      type: string
      minLength: 1
      maxLength: 255
    SourceType:
      type: string
      enum:
      - SALESFORCE
      - ZENDESK
      - CASES
    StartAttachedFileUploadRequest:
      type: object
      properties:
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The unique identifier of the Amazon Connect instance.
        FileName:
          allOf:
          - $ref: '#/components/schemas/FileName'
          description: A case-sensitive name of the attached file being uploaded.
        FileSizeInBytes:
          allOf:
          - $ref: '#/components/schemas/FileSizeInBytes'
          description: The size of the attached file in bytes.
        UrlExpiryInSeconds:
          allOf:
          - $ref: '#/components/schemas/URLExpiryInSeconds'
          description: Optional override for the expiry of the pre-signed S3 URL in
            seconds. The default value is 300.
        FileUseCaseType:
          allOf:
          - $ref: '#/components/schemas/FileUseCaseType'
          description: 'The use case for the file.


            Only `ATTACHMENTS` are supported.'
        AssociatedResourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: 'The resource to which the attached file is (being) uploaded
            to. The supported resources are [Cases](https://docs.aws.amazon.com/connect/latest/adminguide/cases.html)
            and [Email](https://docs.aws.amazon.com/connect/latest/adminguide/setup-email-channel.html).


            This value must be a valid ARN.'
        CreatedBy:
          allOf:
          - $ref: '#/components/schemas/CreatedByInfo'
          description: Represents the identity that created the file.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The tags used to organize, track, or control access for this
            resource. For example, `{ "Tags": {"key1":"value1", "key2":"value2"} }`.'
      required:
      - InstanceId
      - FileName
      - FileSizeInBytes
      - FileUseCaseType
      - AssociatedResourceArn
    StartAttachedFileUploadResponse:
      type: object
      properties:
        FileArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The unique identifier of the attached file resource (ARN).
        FileId:
          allOf:
          - $ref: '#/components/schemas/FileId'
          description: The unique identifier of the attached file resource.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601Datetime'
          description: 'The time of Creation of the file resource as an ISO timestamp.
            It''s specified in ISO 8601 format: `yyyy-MM-ddThh:mm:ss.SSSZ`. For example,
            `2024-05-03T02:41:28.172Z`.'
        FileStatus:
          allOf:
          - $ref: '#/components/schemas/FileStatusType'
          description: The current status of the attached file.
        CreatedBy:
          allOf:
          - $ref: '#/components/schemas/CreatedByInfo'
          description: Represents the identity that created the file.
        UploadUrlMetadata:
          allOf:
          - $ref: '#/components/schemas/UploadUrlMetadata'
          description: The headers to be provided while uploading the file to the
            URL.
      description: Response from StartAttachedFileUpload API.
    StartChatContactRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        ContactFlowId:
          allOf:
          - $ref: '#/components/schemas/ContactFlowId'
          description: 'The identifier of the flow for initiating the chat. To see
            the ContactFlowId in the Amazon Connect admin website, on the navigation
            menu go to **Routing** , **Flows**. Choose the flow. On the flow page,
            under the name of the flow, choose **Show additional flow information**.
            The ContactFlowId is the last part of the ARN, shown here in bold:


            arn:aws:connect:us-west-2:xxxxxxxxxxxx:instance/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/contact-flow/**846ec553-a005-41c0-8341-xxxxxxxxxxxx**'
        Attributes:
          allOf:
          - $ref: '#/components/schemas/Attributes'
          description: 'A custom key-value pair using an attribute map. The attributes
            are standard Amazon Connect attributes. They can be accessed in flows
            just like any other contact attributes.


            There can be up to 32,768 UTF-8 bytes across all key-value pairs per contact.
            Attribute keys can include only alphanumeric, dash, and underscore characters.'
        ParticipantDetails:
          allOf:
          - $ref: '#/components/schemas/ParticipantDetails'
          description: Information identifying the participant.
        InitialMessage:
          allOf:
          - $ref: '#/components/schemas/ChatMessage'
          description: The initial message to be sent to the newly created chat. If
            you have a Lex bot in your flow, the initial message is not delivered
            to the Lex bot.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
        ChatDurationInMinutes:
          allOf:
          - $ref: '#/components/schemas/ChatDurationInMinutes'
          description: The total duration of the newly started chat session. If not
            specified, the chat session duration defaults to 25 hour. The minimum
            configurable time is 60 minutes. The maximum configurable time is 10,080
            minutes (7 days).
        SupportedMessagingContentTypes:
          allOf:
          - $ref: '#/components/schemas/SupportedMessagingContentTypes'
          description: 'The supported chat message content types. Supported types
            are `text/plain`, `text/markdown`, `application/json`, `application/vnd.amazonaws.connect.message.interactive`,
            and `application/vnd.amazonaws.connect.message.interactive.response`.


            Content types must always contain `text/plain`. You can then put any other
            supported type in the list. For example, all the following lists are valid
            because they contain `text/plain`: `[text/plain, text/markdown, application/json]`,
            `[text/markdown, text/plain]`, `[text/plain, application/json, application/vnd.amazonaws.connect.message.interactive.response]`.


            The type `application/vnd.amazonaws.connect.message.interactive` is required
            to use the [Show view](https://docs.aws.amazon.com/connect/latest/adminguide/show-view-block.html)
            flow block.'
        PersistentChat:
          allOf:
          - $ref: '#/components/schemas/PersistentChat'
          description: Enable persistent chats. For more information about enabling
            persistent chat, and for example use cases and how to configure for them,
            see [Enable persistent chat](https://docs.aws.amazon.com/connect/latest/adminguide/chat-persistence.html).
        RelatedContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: 'The unique identifier for an Amazon Connect contact. This
            identifier is related to the chat starting.


            You cannot provide data for both RelatedContactId and PersistentChat.'
        SegmentAttributes:
          allOf:
          - $ref: '#/components/schemas/SegmentAttributes'
          description: 'A set of system defined key-value pairs stored on individual
            contact segments using an attribute map. The attributes are standard Amazon
            Connect attributes. They can be accessed in flows.


            Attribute keys can include only alphanumeric, -, and _.


            This field can be used to show channel subtype, such as `connect:Guide`.


            The types `application/vnd.amazonaws.connect.message.interactive` and
            `application/vnd.amazonaws.connect.message.interactive.response` must
            be present in the SupportedMessagingContentTypes field of this API in
            order to set `SegmentAttributes` as {` "connect:Subtype": {"valueString"
            : "connect:Guide" }}`.'
        CustomerId:
          allOf:
          - $ref: '#/components/schemas/CustomerIdNonEmpty'
          description: The customer's identification number. For example, the `CustomerId`
            may be a customer number from your CRM.
      required:
      - InstanceId
      - ContactFlowId
      - ParticipantDetails
    StartChatContactResponse:
      type: object
      properties:
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of this contact within the Amazon Connect instance.
        ParticipantId:
          allOf:
          - $ref: '#/components/schemas/ParticipantId'
          description: The identifier for a chat participant. The participantId for
            a chat participant is the same throughout the chat lifecycle.
        ParticipantToken:
          allOf:
          - $ref: '#/components/schemas/ParticipantToken'
          description: The token used by the chat participant to call [CreateParticipantConnection](https://docs.aws.amazon.com/connect-participant/latest/APIReference/API_CreateParticipantConnection.html).
            The participant token is valid for the lifetime of a chat participant.
        ContinuedFromContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The contactId from which a persistent chat session is started.
            This field is populated only for persistent chats.
    StartContactEvaluationRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact in this instance of Amazon Connect.
        EvaluationFormId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: The unique identifier for the evaluation form.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
      required:
      - InstanceId
      - ContactId
      - EvaluationFormId
    StartContactEvaluationResponse:
      type: object
      properties:
        EvaluationId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: A unique identifier for the contact evaluation.
        EvaluationArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for the contact evaluation resource.
      required:
      - EvaluationId
      - EvaluationArn
    StartContactRecordingRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact.
        InitialContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact. This is the identifier of the
            contact associated with the first interaction with the contact center.
        VoiceRecordingConfiguration:
          allOf:
          - $ref: '#/components/schemas/VoiceRecordingConfiguration'
          description: The person being recorded.
      required:
      - InstanceId
      - ContactId
      - InitialContactId
      - VoiceRecordingConfiguration
    StartContactRecordingResponse:
      type: object
      properties: {}
    StartContactStreamingRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact. This is the identifier of the
            contact associated with the first interaction with the contact center.
        ChatStreamingConfiguration:
          allOf:
          - $ref: '#/components/schemas/ChatStreamingConfiguration'
          description: The streaming configuration, such as the Amazon SNS streaming
            endpoint.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
      required:
      - InstanceId
      - ContactId
      - ChatStreamingConfiguration
      - ClientToken
    StartContactStreamingResponse:
      type: object
      properties:
        StreamingId:
          allOf:
          - $ref: '#/components/schemas/StreamingId'
          description: The identifier of the streaming configuration enabled.
      required:
      - StreamingId
    StartEmailContactRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        FromEmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddressInfo'
          description: The email address of the customer.
        DestinationEmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          description: The email address associated with the instance.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: A description of the email contact.
        References:
          allOf:
          - $ref: '#/components/schemas/ContactReferences'
          description: 'A formatted URL that is shown to an agent in the Contact Control
            Panel (CCP). Emails can have the following reference types at the time
            of creation: `URL` | `NUMBER` | `STRING` | `DATE`. `EMAIL` | `EMAIL_MESSAGE`
            |`ATTACHMENT` are not a supported reference type during email creation.'
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of a email that is shown to an agent in the Contact
            Control Panel (CCP).
        EmailMessage:
          allOf:
          - $ref: '#/components/schemas/InboundEmailContent'
          description: The email message body to be sent to the newly created email.
        AdditionalRecipients:
          allOf:
          - $ref: '#/components/schemas/InboundAdditionalRecipients'
          description: The addtional recipients address of the email.
        Attachments:
          allOf:
          - $ref: '#/components/schemas/EmailAttachments'
          description: List of S3 presigned URLs of email attachments and their file
            name.
        ContactFlowId:
          allOf:
          - $ref: '#/components/schemas/ContactFlowId'
          description: 'The identifier of the flow for initiating the emails. To see
            the ContactFlowId in the Amazon Connect admin website, on the navigation
            menu go to **Routing** , **Flows**. Choose the flow. On the flow page,
            under the name of the flow, choose **Show additional flow information**.
            The ContactFlowId is the last part of the ARN, shown here in bold:


            arn:aws:connect:us-west-2:xxxxxxxxxxxx:instance/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/contact-flow/**846ec553-a005-41c0-8341-xxxxxxxxxxxx**'
        RelatedContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The contactId that is related to this contact. Linking emails
            together by using `RelatedContactID` copies over contact attributes from
            the related email contact to the new email contact. All updates to user-defined
            attributes in the new email contact are limited to the individual contact
            ID. There are no limits to the number of contacts that can be linked by
            using `RelatedContactId`.
        Attributes:
          allOf:
          - $ref: '#/components/schemas/Attributes'
          description: 'A custom key-value pair using an attribute map. The attributes
            are standard Amazon Connect attributes, and can be accessed in flows just
            like any other contact attributes.


            There can be up to 32,768 UTF-8 bytes across all key-value pairs per contact.
            Attribute keys can include only alphanumeric, dash, and underscore characters.'
        SegmentAttributes:
          allOf:
          - $ref: '#/components/schemas/SegmentAttributes'
          description: 'A set of system defined key-value pairs stored on individual
            contact segments using an attribute map. The attributes are standard Amazon
            Connect attributes. They can be accessed in flows.


            Attribute keys can include only alphanumeric, -, and _.


            This field can be used to show channel subtype, such as `connect:Guide`.


            To set contact expiry, a `ValueMap` must be specified containing the integer
            number of minutes the contact will be active for before expiring, with
            `SegmentAttributes` like { ` "connect:ContactExpiry": {"ValueMap" : {
            "ExpiryDuration": { "ValueInteger":135}}}}`.'
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
      required:
      - InstanceId
      - FromEmailAddress
      - DestinationEmailAddress
      - EmailMessage
    StartEmailContactResponse:
      type: object
      properties:
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of this contact within the Amazon Connect instance.
    StartOutboundChatContactRequest:
      type: object
      properties:
        SourceEndpoint:
          $ref: '#/components/schemas/Endpoint'
        DestinationEndpoint:
          $ref: '#/components/schemas/Endpoint'
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can find
            the instance ID in the Amazon Resource Name (ARN) of the instance.
        SegmentAttributes:
          allOf:
          - $ref: '#/components/schemas/SegmentAttributes'
          description: "A set of system defined key-value pairs stored on individual\
            \ contact segments using an attribute map. The attributes are standard\
            \ Amazon Connect attributes. They can be accessed in flows.\n\n  * Attribute\
            \ keys can include only alphanumeric, `-`, and `_`.\n\n  * This field\
            \ can be used to show channel subtype, such as `connect:Guide` and `connect:SMS`."
        Attributes:
          allOf:
          - $ref: '#/components/schemas/Attributes'
          description: A custom key-value pair using an attribute map. The attributes
            are standard Amazon Connect attributes, and can be accessed in flows just
            like any other contact attributes.
        ContactFlowId:
          allOf:
          - $ref: '#/components/schemas/ContactFlowId'
          description: "The identifier of the flow for the call. To see the ContactFlowId\
            \ in the Amazon Connect console user interface, on the navigation menu\
            \ go to **Routing, Contact Flows**. Choose the flow. On the flow page,\
            \ under the name of the flow, choose **Show additional flow information**.\
            \ The ContactFlowId is the last part of the ARN, shown here in bold:\n\
            \n  * arn:aws:connect:us-west-2:xxxxxxxxxxxx:instance/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/contact-flow/**123ec456-a007-89c0-1234-xxxxxxxxxxxx**"
        ChatDurationInMinutes:
          allOf:
          - $ref: '#/components/schemas/ChatDurationInMinutes'
          description: The total duration of the newly started chat session. If not
            specified, the chat session duration defaults to 25 hour. The minimum
            configurable time is 60 minutes. The maximum configurable time is 10,080
            minutes (7 days).
        ParticipantDetails:
          $ref: '#/components/schemas/ParticipantDetails'
        InitialSystemMessage:
          $ref: '#/components/schemas/ChatMessage'
        RelatedContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The unique identifier for an Amazon Connect contact. This identifier
            is related to the contact starting.
        SupportedMessagingContentTypes:
          allOf:
          - $ref: '#/components/schemas/SupportedMessagingContentTypes'
          description: "The supported chat message content types. Supported types\
            \ are:\n\n  * `text/plain`\n\n  * `text/markdown`\n\n  * `application/json,\
            \ application/vnd.amazonaws.connect.message.interactive`\n\n  * `application/vnd.amazonaws.connect.message.interactive.response`\n\
            \nContent types must always contain `text/plain`. You can then put any\
            \ other supported type in the list. For example, all the following lists\
            \ are valid because they contain `text/plain`:\n\n  * `[text/plain, text/markdown,\
            \ application/json]`\n\n  * `[text/markdown, text/plain]`\n\n  * `[text/plain,\
            \ application/json, application/vnd.amazonaws.connect.message.interactive.response]`"
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the AWS SDK populates
            this field. For more information about idempotency, see [Making retries
            safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
            The token is valid for 7 days after creation. If a contact is already
            started, the contact ID is returned.
      required:
      - SourceEndpoint
      - DestinationEndpoint
      - InstanceId
      - SegmentAttributes
      - ContactFlowId
    StartOutboundChatContactResponse:
      type: object
      properties:
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of this contact within the Amazon Connect instance.
    StartOutboundEmailContactRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact in this instance of Amazon Connect.
        FromEmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddressInfo'
          description: The email address associated with the instance.
        DestinationEmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddressInfo'
          description: The email address of the customer.
        AdditionalRecipients:
          allOf:
          - $ref: '#/components/schemas/OutboundAdditionalRecipients'
          description: The addtional recipients address of email in CC.
        EmailMessage:
          allOf:
          - $ref: '#/components/schemas/OutboundEmailContent'
          description: The email message body to be sent to the newly created email.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
      required:
      - InstanceId
      - ContactId
      - DestinationEmailAddress
      - EmailMessage
    StartOutboundEmailContactResponse:
      type: object
      properties:
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact in this instance of Amazon Connect.
    StartOutboundVoiceContactRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of a voice contact that is shown to an agent in the
            Contact Control Panel (CCP).
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: A description of the voice contact that appears in the agent's
            snapshot in the CCP logs. For more information about CCP logs, see [Download
            and review CCP logs](https://docs.aws.amazon.com/connect/latest/adminguide/download-ccp-logs.html)
            in the _Amazon Connect Administrator Guide_.
        References:
          allOf:
          - $ref: '#/components/schemas/ContactReferences'
          description: 'A formatted URL that is shown to an agent in the Contact Control
            Panel (CCP). Contacts can have the following reference types at the time
            of creation: `URL` | `NUMBER` | `STRING` | `DATE` | `EMAIL`. `ATTACHMENT`
            is not a supported reference type during voice contact creation.'
        RelatedContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The `contactId` that is related to this contact. Linking voice,
            task, or chat by using `RelatedContactID` copies over contact attributes
            from the related contact to the new contact. All updates to user-defined
            attributes in the new contact are limited to the individual contact ID.
            There are no limits to the number of contacts that can be linked by using
            `RelatedContactId`.
        DestinationPhoneNumber:
          allOf:
          - $ref: '#/components/schemas/PhoneNumber'
          description: The phone number of the customer, in E.164 format.
        ContactFlowId:
          allOf:
          - $ref: '#/components/schemas/ContactFlowId'
          description: 'The identifier of the flow for the outbound call. To see the
            ContactFlowId in the Amazon Connect admin website, on the navigation menu
            go to **Routing** , **Contact Flows**. Choose the flow. On the flow page,
            under the name of the flow, choose **Show additional flow information**.
            The ContactFlowId is the last part of the ARN, shown here in bold:


            arn:aws:connect:us-west-2:xxxxxxxxxxxx:instance/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/contact-flow/**846ec553-a005-41c0-8341-xxxxxxxxxxxx**'
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
            The token is valid for 7 days after creation. If a contact is already
            started, the contact ID is returned.
        SourcePhoneNumber:
          allOf:
          - $ref: '#/components/schemas/PhoneNumber'
          description: The phone number associated with the Amazon Connect instance,
            in E.164 format. If you do not specify a source phone number, you must
            specify a queue.
        QueueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue for the call. If you specify a queue, the phone displayed
            for caller ID is the phone number specified in the queue. If you do not
            specify a queue, the queue defined in the flow is used. If you do not
            specify a queue, you must specify a source phone number.
        Attributes:
          allOf:
          - $ref: '#/components/schemas/Attributes'
          description: 'A custom key-value pair using an attribute map. The attributes
            are standard Amazon Connect attributes, and can be accessed in flows just
            like any other contact attributes.


            There can be up to 32,768 UTF-8 bytes across all key-value pairs per contact.
            Attribute keys can include only alphanumeric, dash, and underscore characters.'
        AnswerMachineDetectionConfig:
          allOf:
          - $ref: '#/components/schemas/AnswerMachineDetectionConfig'
          description: Configuration of the answering machine detection for this outbound
            call.
        CampaignId:
          allOf:
          - $ref: '#/components/schemas/CampaignId'
          description: The campaign identifier of the outbound communication.
        TrafficType:
          allOf:
          - $ref: '#/components/schemas/TrafficType'
          description: Denotes the class of traffic. Calls with different traffic
            types are handled differently by Amazon Connect. The default value is
            `GENERAL`. Use `CAMPAIGN` if `EnableAnswerMachineDetection` is set to
            `true`. For all other cases, use `GENERAL`.
      required:
      - DestinationPhoneNumber
      - ContactFlowId
      - InstanceId
    StartOutboundVoiceContactResponse:
      type: object
      properties:
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of this contact within the Amazon Connect instance.
    StartScreenSharingRequest:
      type: object
      properties:
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact in this instance of Amazon Connect.
      required:
      - InstanceId
      - ContactId
    StartScreenSharingResponse:
      type: object
      properties: {}
    StartTaskContactRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        PreviousContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the previous chat, voice, or task contact.
            Any updates to user-defined attributes to task contacts linked using the
            same `PreviousContactID` will affect every contact in the chain. There
            can be a maximum of 12 linked task contacts in a chain.
        ContactFlowId:
          allOf:
          - $ref: '#/components/schemas/ContactFlowId'
          description: 'The identifier of the flow for initiating the tasks. To see
            the ContactFlowId in the Amazon Connect admin website, on the navigation
            menu go to **Routing** , **Flows**. Choose the flow. On the flow page,
            under the name of the flow, choose **Show additional flow information**.
            The ContactFlowId is the last part of the ARN, shown here in bold:


            arn:aws:connect:us-west-2:xxxxxxxxxxxx:instance/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/contact-flow/**846ec553-a005-41c0-8341-xxxxxxxxxxxx**'
        Attributes:
          allOf:
          - $ref: '#/components/schemas/Attributes'
          description: 'A custom key-value pair using an attribute map. The attributes
            are standard Amazon Connect attributes, and can be accessed in flows just
            like any other contact attributes.


            There can be up to 32,768 UTF-8 bytes across all key-value pairs per contact.
            Attribute keys can include only alphanumeric, dash, and underscore characters.'
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of a task that is shown to an agent in the Contact
            Control Panel (CCP).
        References:
          allOf:
          - $ref: '#/components/schemas/ContactReferences'
          description: 'A formatted URL that is shown to an agent in the Contact Control
            Panel (CCP). Tasks can have the following reference types at the time
            of creation: `URL` | `NUMBER` | `STRING` | `DATE` | `EMAIL`. `ATTACHMENT`
            is not a supported reference type during task creation.'
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: A description of the task that is shown to an agent in the
            Contact Control Panel (CCP).
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
        ScheduledTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp, in Unix Epoch seconds format, at which to start
            running the inbound flow. The scheduled time cannot be in the past. It
            must be within up to 6 days in future.
        TaskTemplateId:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateId'
          description: A unique identifier for the task template. For more information
            about task templates, see [Create task templates](https://docs.aws.amazon.com/connect/latest/adminguide/task-templates.html)
            in the _Amazon Connect Administrator Guide_.
        QuickConnectId:
          allOf:
          - $ref: '#/components/schemas/QuickConnectId'
          description: The identifier for the quick connect. Tasks that are created
            by using `QuickConnectId` will use the flow that is defined on agent or
            queue quick connect. For more information about quick connects, see [Create
            quick connects](https://docs.aws.amazon.com/connect/latest/adminguide/quick-connects.html).
        RelatedContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The contactId that is [related](https://docs.aws.amazon.com/connect/latest/adminguide/tasks.html#linked-tasks)
            to this contact. Linking tasks together by using `RelatedContactID` copies
            over contact attributes from the related task contact to the new task
            contact. All updates to user-defined attributes in the new task contact
            are limited to the individual contact ID, unlike what happens when tasks
            are linked by using `PreviousContactID`. There are no limits to the number
            of contacts that can be linked by using `RelatedContactId`.
        SegmentAttributes:
          allOf:
          - $ref: '#/components/schemas/SegmentAttributes'
          description: 'A set of system defined key-value pairs stored on individual
            contact segments (unique contact ID) using an attribute map. The attributes
            are standard Amazon Connect attributes. They can be accessed in flows.


            Attribute keys can include only alphanumeric, -, and _.


            This field can be used to set Contact Expiry as a duration in minutes
            and set a UserId for the User who created a task.


            To set contact expiry, a ValueMap must be specified containing the integer
            number of minutes the contact will be active for before expiring, with
            `SegmentAttributes` like { ` "connect:ContactExpiry": {"ValueMap" : {
            "ExpiryDuration": { "ValueInteger": 135}}}}`.


            To set the created by user, a valid AgentResourceId must be supplied,
            with `SegmentAttributes` like { `"connect:CreatedByUser" { "ValueString":
            "arn:aws:connect:us-west-2:xxxxxxxxxxxx:instance/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/agent/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"}}}`.'
      required:
      - InstanceId
      - Name
    StartTaskContactResponse:
      type: object
      properties:
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of this contact within the Amazon Connect instance.
    StartWebRTCContactRequest:
      type: object
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/Attributes'
          description: 'A custom key-value pair using an attribute map. The attributes
            are standard Amazon Connect attributes, and can be accessed in flows just
            like any other contact attributes.


            There can be up to 32,768 UTF-8 bytes across all key-value pairs per contact.
            Attribute keys can include only alphanumeric, -, and _ characters.'
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: 'A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).


            The token is valid for 7 days after creation. If a contact is already
            started, the contact ID is returned.'
        ContactFlowId:
          allOf:
          - $ref: '#/components/schemas/ContactFlowId'
          description: 'The identifier of the flow for the call. To see the ContactFlowId
            in the Amazon Connect admin website, on the navigation menu go to **Routing**
            , **Flows**. Choose the flow. On the flow page, under the name of the
            flow, choose **Show additional flow information**. The ContactFlowId is
            the last part of the ARN, shown here in bold:


            arn:aws:connect:us-west-2:xxxxxxxxxxxx:instance/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/contact-flow/**846ec553-a005-41c0-8341-xxxxxxxxxxxx**'
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        AllowedCapabilities:
          allOf:
          - $ref: '#/components/schemas/AllowedCapabilities'
          description: Information about the video sharing capabilities of the participants
            (customer, agent).
        ParticipantDetails:
          $ref: '#/components/schemas/ParticipantDetails'
        RelatedContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The unique identifier for an Amazon Connect contact. This identifier
            is related to the contact starting.
        References:
          allOf:
          - $ref: '#/components/schemas/ContactReferences'
          description: 'A formatted URL that is shown to an agent in the Contact Control
            Panel (CCP). Tasks can have the following reference types at the time
            of creation: `URL` | `NUMBER` | `STRING` | `DATE` | `EMAIL`. `ATTACHMENT`
            is not a supported reference type during task creation.'
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: A description of the task that is shown to an agent in the
            Contact Control Panel (CCP).
      required:
      - ContactFlowId
      - InstanceId
      - ParticipantDetails
    StartWebRTCContactResponse:
      type: object
      properties:
        ConnectionData:
          allOf:
          - $ref: '#/components/schemas/ConnectionData'
          description: Information required for the client application (mobile application
            or website) to connect to the call.
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact in this instance of Amazon Connect.
        ParticipantId:
          allOf:
          - $ref: '#/components/schemas/ParticipantId'
          description: The identifier for a contact participant. The `ParticipantId`
            for a contact participant is the same throughout the contact lifecycle.
        ParticipantToken:
          allOf:
          - $ref: '#/components/schemas/ParticipantToken'
          description: The token used by the contact participant to call the [CreateParticipantConnection](https://docs.aws.amazon.com/connect-participant/latest/APIReference/API_CreateParticipantConnection.html)
            API. The participant token is valid for the lifetime of a contact participant.
    Statistic:
      type: string
      enum:
      - SUM
      - MAX
      - AVG
    Step:
      type: object
      properties:
        Expiry:
          allOf:
          - $ref: '#/components/schemas/Expiry'
          description: An object to specify the expiration of a routing step.
        Expression:
          allOf:
          - $ref: '#/components/schemas/Expression'
          description: A tagged union to specify expression for a routing step.
        Status:
          allOf:
          - $ref: '#/components/schemas/RoutingCriteriaStepStatus'
          description: Represents status of the Routing step.
      description: Step signifies the criteria to be used for routing to an agent
    Steps:
      type: array
      items:
        $ref: '#/components/schemas/Step'
    StopContactRecordingRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact.
        InitialContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact. This is the identifier of the
            contact associated with the first interaction with the contact center.
        ContactRecordingType:
          allOf:
          - $ref: '#/components/schemas/ContactRecordingType'
          description: The type of recording being operated on.
      required:
      - InstanceId
      - ContactId
      - InitialContactId
    StopContactRecordingResponse:
      type: object
      properties: {}
    StopContactRequest:
      type: object
      properties:
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The ID of the contact.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        DisconnectReason:
          allOf:
          - $ref: '#/components/schemas/DisconnectReason'
          description: The reason a contact can be disconnected. Only Amazon Connect
            outbound campaigns can provide this field.
      required:
      - ContactId
      - InstanceId
    StopContactResponse:
      type: object
      properties: {}
    StopContactStreamingRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact. This is the identifier of the
            contact that is associated with the first interaction with the contact
            center.
        StreamingId:
          allOf:
          - $ref: '#/components/schemas/StreamingId'
          description: The identifier of the streaming configuration enabled.
      required:
      - InstanceId
      - ContactId
      - StreamingId
    StopContactStreamingResponse:
      type: object
      properties: {}
    StorageType:
      type: string
      enum:
      - S3
      - KINESIS_VIDEO_STREAM
      - KINESIS_STREAM
      - KINESIS_FIREHOSE
    StreamingId:
      type: string
      minLength: 1
      maxLength: 100
    String:
      type: string
    StringComparisonType:
      type: string
      enum:
      - STARTS_WITH
      - CONTAINS
      - EXACT
    StringCondition:
      type: object
      properties:
        FieldName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the field in the string condition.
        Value:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The value of the string.
        ComparisonType:
          allOf:
          - $ref: '#/components/schemas/StringComparisonType'
          description: The type of comparison to be made when evaluating the string
            condition.
      description: A leaf node condition which can be used to specify a string condition.
    StringReference:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ReferenceKey'
          description: Identifier of the string reference.
        Value:
          allOf:
          - $ref: '#/components/schemas/ReferenceValue'
          description: A valid string.
      description: Information about a reference when the `referenceType` is `STRING`.
        Otherwise, null.
    Subject:
      type: string
      minLength: 1
      maxLength: 200
    SubmitAutoEvaluationActionDefinition:
      type: object
      properties:
        EvaluationFormId:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormId'
          description: The identifier of the auto-evaluation enabled form.
      required:
      - EvaluationFormId
      description: Information about the submit automated evaluation action.
    SubmitContactEvaluationRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        EvaluationId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: A unique identifier for the contact evaluation.
        Answers:
          allOf:
          - $ref: '#/components/schemas/EvaluationAnswersInputMap'
          description: A map of question identifiers to answer value.
        Notes:
          allOf:
          - $ref: '#/components/schemas/EvaluationNotesMap'
          description: A map of question identifiers to note value.
      required:
      - InstanceId
      - EvaluationId
    SubmitContactEvaluationResponse:
      type: object
      properties:
        EvaluationId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: A unique identifier for the contact evaluation.
        EvaluationArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for the contact evaluation resource.
      required:
      - EvaluationId
      - EvaluationArn
    Subtype:
      type: string
      minLength: 1
      maxLength: 100
    SuccessfulRequest:
      type: object
      properties:
        RequestIdentifier:
          allOf:
          - $ref: '#/components/schemas/RequestIdentifier'
          description: Request identifier provided in the API call in the ContactDataRequest
            to create a contact.
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The contactId of the contact that was created successfully.
      description: Request for which contact was successfully created.
    SuccessfulRequestList:
      type: array
      items:
        $ref: '#/components/schemas/SuccessfulRequest'
    SupportedMessagingContentType:
      type: string
      minLength: 1
      maxLength: 100
    SupportedMessagingContentTypes:
      type: array
      items:
        $ref: '#/components/schemas/SupportedMessagingContentType'
    SuspendContactRecordingRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact.
        InitialContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact. This is the identifier of the
            contact associated with the first interaction with the contact center.
        ContactRecordingType:
          allOf:
          - $ref: '#/components/schemas/ContactRecordingType'
          description: The type of recording being operated on.
      required:
      - InstanceId
      - ContactId
      - InitialContactId
    SuspendContactRecordingResponse:
      type: object
      properties: {}
    TagAndConditionList:
      type: array
      items:
        $ref: '#/components/schemas/TagCondition'
    TagCondition:
      type: object
      properties:
        TagKey:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The tag key in the tag condition.
        TagValue:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The tag value in the tag condition.
      description: A leaf node condition which can be used to specify a tag condition,
        for example, `HAVE BPO = 123`.
    TagContactRequest:
      type: object
      properties:
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact in this instance of Amazon Connect.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        Tags:
          allOf:
          - $ref: '#/components/schemas/ContactTagMap'
          description: 'The tags to be assigned to the contact resource. For example,
            { "Tags": {"key1":"value1", "key2":"value2"} }.


            Authorization is not supported by this tag.'
      required:
      - ContactId
      - InstanceId
      - Tags
    TagContactResponse:
      type: object
      properties: {}
    TagKey:
      type: string
      pattern: ^(?!aws:)[\p{L}\p{Z}\p{N}_.:/=+\-@]*$
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagKeyString:
      type: string
      minLength: 0
      maxLength: 128
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TagOrConditionList:
      type: array
      items:
        $ref: '#/components/schemas/TagAndConditionList'
    TagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the resource.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The tags used to organize, track, or control access for this
            resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.'
      required:
      - resourceArn
      - tags
    TagRestrictedResourceList:
      type: array
      items:
        $ref: '#/components/schemas/TagRestrictedResourceName'
    TagRestrictedResourceName:
      type: string
      minLength: 1
      maxLength: 128
    TagSearchCondition:
      type: object
      properties:
        tagKey:
          allOf:
          - $ref: '#/components/schemas/TagKeyString'
          description: The tag key used in the tag search condition.
        tagValue:
          allOf:
          - $ref: '#/components/schemas/TagValueString'
          description: The tag value used in the tag search condition.
        tagKeyComparisonType:
          allOf:
          - $ref: '#/components/schemas/StringComparisonType'
          description: The type of comparison to be made when evaluating the tag key
            in tag search condition.
        tagValueComparisonType:
          allOf:
          - $ref: '#/components/schemas/StringComparisonType'
          description: The type of comparison to be made when evaluating the tag value
            in tag search condition.
      description: The search criteria to be used to return tags.
    TagSet:
      type: object
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          description: The tag key in the TagSet.
        value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          description: The tag value in the tagSet.
      description: A tag set contains tag key and tag value.
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    TagValueString:
      type: string
      minLength: 0
      maxLength: 256
    TagsList:
      type: array
      items:
        $ref: '#/components/schemas/TagSet'
    TargetListType:
      type: string
      enum:
      - PROFICIENCIES
    TargetSlaMinutes:
      type: integer
      format: int64
      minimum: 1
      maximum: 129600
    TaskActionDefinition:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/TaskNameExpression'
          description: The name. Supports variable injection. For more information,
            see [JSONPath reference](https://docs.aws.amazon.com/connect/latest/adminguide/contact-lens-variable-injection.html)
            in the _Amazon Connect Administrators Guide_.
        Description:
          allOf:
          - $ref: '#/components/schemas/TaskDescriptionExpression'
          description: The description. Supports variable injection. For more information,
            see [JSONPath reference](https://docs.aws.amazon.com/connect/latest/adminguide/contact-lens-variable-injection.html)
            in the _Amazon Connect Administrators Guide_.
        ContactFlowId:
          allOf:
          - $ref: '#/components/schemas/ContactFlowId'
          description: The identifier of the flow.
        References:
          allOf:
          - $ref: '#/components/schemas/ContactReferences'
          description: Information about the reference when the `referenceType` is
            `URL`. Otherwise, null. (Supports variable injection in the `Value` field.)
      required:
      - Name
      - ContactFlowId
      description: Information about the task action.
    TaskDescriptionExpression:
      type: string
      minLength: 0
      maxLength: 4096
    TaskNameExpression:
      type: string
      minLength: 1
      maxLength: 512
    TaskTemplateArn:
      type: string
      minLength: 1
      maxLength: 500
    TaskTemplateConstraints:
      type: object
      properties:
        RequiredFields:
          allOf:
          - $ref: '#/components/schemas/RequiredTaskTemplateFields'
          description: Lists the fields that are required to be filled by agents.
        ReadOnlyFields:
          allOf:
          - $ref: '#/components/schemas/ReadOnlyTaskTemplateFields'
          description: Lists the fields that are read-only to agents, and cannot be
            edited.
        InvisibleFields:
          allOf:
          - $ref: '#/components/schemas/InvisibleTaskTemplateFields'
          description: Lists the fields that are invisible to agents.
      description: Describes constraints that apply to the template fields.
    TaskTemplateDefaultFieldValue:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateFieldIdentifier'
          description: Identifier of a field.
        DefaultValue:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateFieldValue'
          description: Default value for the field.
      description: Describes a default field and its corresponding value.
    TaskTemplateDefaultFieldValueList:
      type: array
      items:
        $ref: '#/components/schemas/TaskTemplateDefaultFieldValue'
    TaskTemplateDefaults:
      type: object
      properties:
        DefaultFieldValues:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateDefaultFieldValueList'
          description: Default value for the field.
      description: Describes default values for fields on a template.
    TaskTemplateDescription:
      type: string
      minLength: 1
      maxLength: 255
    TaskTemplateField:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateFieldIdentifier'
          description: The unique identifier for the field.
        Description:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateFieldDescription'
          description: The description of the field.
        Type:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateFieldType'
          description: Indicates the type of field.
        SingleSelectOptions:
          allOf:
          - $ref: '#/components/schemas/SingleSelectOptions'
          description: A list of options for a single select field.
      required:
      - Id
      description: Describes a single task template field.
    TaskTemplateFieldDescription:
      type: string
      minLength: 1
      maxLength: 255
    TaskTemplateFieldIdentifier:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateFieldName'
          description: The name of the task template field.
      description: The identifier of the task template field.
    TaskTemplateFieldName:
      type: string
      minLength: 1
      maxLength: 100
    TaskTemplateFieldType:
      type: string
      enum:
      - NAME
      - DESCRIPTION
      - SCHEDULED_TIME
      - QUICK_CONNECT
      - URL
      - NUMBER
      - TEXT
      - TEXT_AREA
      - DATE_TIME
      - BOOLEAN
      - SINGLE_SELECT
      - EMAIL
      - SELF_ASSIGN
      - EXPIRY_DURATION
    TaskTemplateFieldValue:
      type: string
      minLength: 0
      maxLength: 4096
    TaskTemplateFields:
      type: array
      items:
        $ref: '#/components/schemas/TaskTemplateField'
    TaskTemplateId:
      type: string
      minLength: 1
      maxLength: 500
    TaskTemplateList:
      type: array
      items:
        $ref: '#/components/schemas/TaskTemplateMetadata'
    TaskTemplateMetadata:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateId'
          description: A unique identifier for the task template.
        Arn:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateArn'
          description: The Amazon Resource Name (ARN) of the task template.
        Name:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateName'
          description: The name of the task template.
        Description:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateDescription'
          description: The description of the task template.
        Status:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateStatus'
          description: Marks a template as `ACTIVE` or `INACTIVE` for a task to refer
            to it. Tasks can only be created from `ACTIVE` templates. If a template
            is marked as `INACTIVE`, then a task that refers to this template cannot
            be created.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the task template was last modified.
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the task template was created.
      description: Contains summary information about the task template.
    TaskTemplateName:
      type: string
      minLength: 1
      maxLength: 100
    TaskTemplateSingleSelectOption:
      type: string
      minLength: 1
      maxLength: 100
    TaskTemplateStatus:
      type: string
      enum:
      - ACTIVE
      - INACTIVE
    TelephonyConfig:
      type: object
      properties:
        Distributions:
          allOf:
          - $ref: '#/components/schemas/DistributionList'
          description: Information about traffic distributions.
      required:
      - Distributions
      description: The distribution of traffic between the instance and its replicas.
    TemplateAttributes:
      type: object
      properties:
        CustomAttributes:
          allOf:
          - $ref: '#/components/schemas/Attributes'
          description: An object that specifies the custom attributes values to use
            for variables in the message template. This object contains different
            categories of key-value pairs. Each key defines a variable or placeholder
            in the message template.
        CustomerProfileAttributes:
          allOf:
          - $ref: '#/components/schemas/CustomerProfileAttributesSerialized'
          description: An object that specifies the customer profile attributes values
            to use for variables in the message template. This object contains different
            categories of key-value pairs. Each key defines a variable or placeholder
            in the message template.
      description: Information about the template attributes.
    TemplateId:
      type: string
      minLength: 1
      maxLength: 500
    TemplatedMessageConfig:
      type: object
      properties:
        KnowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateKnowledgeBaseId'
          description: The identifier of the knowledge base. Can be either the ID
            or the ARN. URLs cannot contain the ARN.
        MessageTemplateId:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateId'
          description: The identifier of the message template Id.
        TemplateAttributes:
          allOf:
          - $ref: '#/components/schemas/TemplateAttributes'
          description: Information about template attributes, that is, CustomAttributes
            or CustomerProfileAttributes.
      required:
      - KnowledgeBaseId
      - MessageTemplateId
      - TemplateAttributes
      description: Information about template message configuration.
    Threshold:
      type: object
      properties:
        Comparison:
          allOf:
          - $ref: '#/components/schemas/Comparison'
          description: The type of comparison. Only "less than" (LT) comparisons are
            supported.
        ThresholdValue:
          allOf:
          - $ref: '#/components/schemas/ThresholdValue'
          description: The threshold value to compare.
      description: Contains information about the threshold for service level metrics.
    ThresholdCollections:
      type: array
      items:
        $ref: '#/components/schemas/ThresholdV2'
    ThresholdV2:
      type: object
      properties:
        Comparison:
          allOf:
          - $ref: '#/components/schemas/ResourceArnOrId'
          description: The type of comparison. Currently, "less than" (LT), "less
            than equal" (LTE), and "greater than" (GT) comparisons are supported.
        ThresholdValue:
          allOf:
          - $ref: '#/components/schemas/ThresholdValue'
          description: The threshold value to compare.
      description: Contains information about the threshold for service level metrics.
    ThresholdValue:
      type: number
      format: double
    ThrottlingException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
      description: The throttling limit has been exceeded.
    TimeZone:
      type: string
    TimerEligibleParticipantRoles:
      type: string
      enum:
      - CUSTOMER
      - AGENT
    Timestamp:
      type: string
      format: date-time
    TooManyRequestsException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
      description: Displayed when rate-related API limits are exceeded.
    TotalCount:
      type: integer
      format: int64
    TotalPauseCount:
      type: integer
      minimum: 0
      maximum: 10
    TotalPauseDurationInSeconds:
      type: integer
      minimum: 0
    TrafficDistributionGroup:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/TrafficDistributionGroupId'
          description: The identifier of the traffic distribution group. This can
            be the ID or the ARN if the API is being called in the Region where the
            traffic distribution group was created. The ARN must be provided if the
            call is from the replicated Region.
        Arn:
          allOf:
          - $ref: '#/components/schemas/TrafficDistributionGroupArn'
          description: The Amazon Resource Name (ARN) of the traffic distribution
            group.
        Name:
          allOf:
          - $ref: '#/components/schemas/Name128'
          description: The name of the traffic distribution group.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description250'
          description: The description of the traffic distribution group.
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/InstanceArn'
          description: The Amazon Resource Name (ARN).
        Status:
          allOf:
          - $ref: '#/components/schemas/TrafficDistributionGroupStatus'
          description: "The status of the traffic distribution group.\n\n  * `CREATION_IN_PROGRESS`\
            \ means the previous [CreateTrafficDistributionGroup](https://docs.aws.amazon.com/connect/latest/APIReference/API_CreateTrafficDistributionGroup.html)\
            \ operation is still in progress and has not yet completed.\n\n  * `ACTIVE`\
            \ means the previous [CreateTrafficDistributionGroup](https://docs.aws.amazon.com/connect/latest/APIReference/API_CreateTrafficDistributionGroup.html)\
            \ operation has succeeded.\n\n  * `CREATION_FAILED` indicates that the\
            \ previous [CreateTrafficDistributionGroup](https://docs.aws.amazon.com/connect/latest/APIReference/API_CreateTrafficDistributionGroup.html)\
            \ operation has failed.\n\n  * `PENDING_DELETION` means the previous [DeleteTrafficDistributionGroup](https://docs.aws.amazon.com/connect/latest/APIReference/API_DeleteTrafficDistributionGroup.html)\
            \ operation is still in progress and has not yet completed.\n\n  * `DELETION_FAILED`\
            \ means the previous [DeleteTrafficDistributionGroup](https://docs.aws.amazon.com/connect/latest/APIReference/API_DeleteTrafficDistributionGroup.html)\
            \ operation has failed.\n\n  * `UPDATE_IN_PROGRESS` means the previous\
            \ [UpdateTrafficDistribution](https://docs.aws.amazon.com/connect/latest/APIReference/API_UpdateTrafficDistribution.html)\
            \ operation is still in progress and has not yet completed."
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The tags used to organize, track, or control access for this
            resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.'
        IsDefault:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'Whether this is the default traffic distribution group created
            during instance replication. The default traffic distribution group cannot
            be deleted by the `DeleteTrafficDistributionGroup` API. The default traffic
            distribution group is deleted as part of the process for deleting a replica.


            The `SignInConfig` distribution is available only on a default `TrafficDistributionGroup`
            (see the `IsDefault` parameter in the [TrafficDistributionGroup](https://docs.aws.amazon.com/connect/latest/APIReference/API_TrafficDistributionGroup.html)
            data type). If you call `UpdateTrafficDistribution` with a modified `SignInConfig`
            and a non-default `TrafficDistributionGroup`, an `InvalidRequestException`
            is returned.'
      description: Information about a traffic distribution group.
    TrafficDistributionGroupArn:
      type: string
      pattern: ^arn:(aws|aws-us-gov):connect:[a-z]{2}-[a-z]+-[0-9]{1}:[0-9]{1,20}:traffic-distribution-group/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
    TrafficDistributionGroupId:
      type: string
      pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
    TrafficDistributionGroupIdOrArn:
      type: string
      pattern: ^(arn:(aws|aws-us-gov):connect:[a-z]{2}-[a-z-]+-[0-9]{1}:[0-9]{1,20}:traffic-distribution-group/)?[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
    TrafficDistributionGroupStatus:
      type: string
      enum:
      - CREATION_IN_PROGRESS
      - ACTIVE
      - CREATION_FAILED
      - PENDING_DELETION
      - DELETION_FAILED
      - UPDATE_IN_PROGRESS
    TrafficDistributionGroupSummary:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/TrafficDistributionGroupId'
          description: The identifier of the traffic distribution group. This can
            be the ID or the ARN if the API is being called in the Region where the
            traffic distribution group was created. The ARN must be provided if the
            call is from the replicated Region.
        Arn:
          allOf:
          - $ref: '#/components/schemas/TrafficDistributionGroupArn'
          description: The Amazon Resource Name (ARN) of the traffic distribution
            group.
        Name:
          allOf:
          - $ref: '#/components/schemas/Name128'
          description: The name of the traffic distribution group.
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/InstanceArn'
          description: The Amazon Resource Name (ARN) of the traffic distribution
            group.
        Status:
          allOf:
          - $ref: '#/components/schemas/TrafficDistributionGroupStatus'
          description: "The status of the traffic distribution group.\n\n  * `CREATION_IN_PROGRESS`\
            \ means the previous [CreateTrafficDistributionGroup](https://docs.aws.amazon.com/connect/latest/APIReference/API_CreateTrafficDistributionGroup.html)\
            \ operation is still in progress and has not yet completed.\n\n  * `ACTIVE`\
            \ means the previous [CreateTrafficDistributionGroup](https://docs.aws.amazon.com/connect/latest/APIReference/API_CreateTrafficDistributionGroup.html)\
            \ operation has succeeded.\n\n  * `CREATION_FAILED` indicates that the\
            \ previous [CreateTrafficDistributionGroup](https://docs.aws.amazon.com/connect/latest/APIReference/API_CreateTrafficDistributionGroup.html)\
            \ operation has failed.\n\n  * `PENDING_DELETION` means the previous [DeleteTrafficDistributionGroup](https://docs.aws.amazon.com/connect/latest/APIReference/API_DeleteTrafficDistributionGroup.html)\
            \ operation is still in progress and has not yet completed.\n\n  * `DELETION_FAILED`\
            \ means the previous [DeleteTrafficDistributionGroup](https://docs.aws.amazon.com/connect/latest/APIReference/API_DeleteTrafficDistributionGroup.html)\
            \ operation has failed.\n\n  * `UPDATE_IN_PROGRESS` means the previous\
            \ [UpdateTrafficDistributionGroup](https://docs.aws.amazon.com/connect/latest/APIReference/API_UpdateTrafficDistributionGroup.html)\
            \ operation is still in progress and has not yet completed."
        IsDefault:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether this is the default traffic distribution group created
            during instance replication. The default traffic distribution group cannot
            be deleted by the `DeleteTrafficDistributionGroup` API. The default traffic
            distribution group is deleted as part of the process for deleting a replica.
      description: Information about traffic distribution groups.
    TrafficDistributionGroupSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/TrafficDistributionGroupSummary'
    TrafficDistributionGroupUserSummary:
      type: object
      properties:
        UserId:
          allOf:
          - $ref: '#/components/schemas/UserId'
          description: The identifier for the user. This can be the ID or the ARN
            of the user.
      description: Summary information about a traffic distribution group user.
    TrafficDistributionGroupUserSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/TrafficDistributionGroupUserSummary'
    TrafficType:
      type: string
      enum:
      - GENERAL
      - CAMPAIGN
    Transcript:
      type: object
      properties:
        Criteria:
          allOf:
          - $ref: '#/components/schemas/TranscriptCriteriaList'
          description: The list of search criteria based on Contact Lens conversational
            analytics transcript.
        MatchType:
          allOf:
          - $ref: '#/components/schemas/SearchContactsMatchType'
          description: The match type combining search criteria using multiple transcript
            criteria.
      required:
      - Criteria
      description: A structure that defines search criteria and matching logic to
        search for contacts by matching text with transcripts analyzed by Amazon Connect
        Contact Lens.
    TranscriptCriteria:
      type: object
      properties:
        ParticipantRole:
          allOf:
          - $ref: '#/components/schemas/ParticipantRole'
          description: The participant role in a transcript
        SearchText:
          allOf:
          - $ref: '#/components/schemas/SearchTextList'
          description: The words or phrases used to search within a transcript.
        MatchType:
          allOf:
          - $ref: '#/components/schemas/SearchContactsMatchType'
          description: The match type combining search criteria using multiple search
            texts in a transcript criteria.
      required:
      - ParticipantRole
      - SearchText
      - MatchType
      description: A structure that defines search criteria base on words or phrases,
        participants in the Contact Lens conversational analytics transcript.
    TranscriptCriteriaList:
      type: array
      items:
        $ref: '#/components/schemas/TranscriptCriteria'
    TransferContactRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact in this instance of Amazon Connect.
        QueueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The identifier for the queue.
        UserId:
          allOf:
          - $ref: '#/components/schemas/AgentResourceId'
          description: The identifier for the user. This can be the ID or the ARN
            of the user.
        ContactFlowId:
          allOf:
          - $ref: '#/components/schemas/ContactFlowId'
          description: The identifier of the flow.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
      required:
      - InstanceId
      - ContactId
      - ContactFlowId
    TransferContactResponse:
      type: object
      properties:
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact in this instance of Amazon Connect.
        ContactArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the contact.
    URI:
      type: string
      minLength: 1
      maxLength: 2000
    URLExpiryInSeconds:
      type: integer
      minimum: 5
      maximum: 300
    Unit:
      type: string
      enum:
      - SECONDS
      - COUNT
      - PERCENT
    UntagContactRequest:
      type: object
      properties:
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact in this instance of Amazon Connect.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/ContactTagKeys'
          description: A list of tag keys. Existing tags on the contact whose keys
            are members of this list will be removed.
      required:
      - ContactId
      - InstanceId
      - TagKeys
    UntagContactResponse:
      type: object
      properties: {}
    UntagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the resource.
        tagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: The tag keys.
      required:
      - resourceArn
      - tagKeys
    UpdateAgentStatusDescription:
      type: string
      minLength: 0
      maxLength: 250
    UpdateAgentStatusRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        AgentStatusId:
          allOf:
          - $ref: '#/components/schemas/AgentStatusId'
          description: The identifier of the agent status.
        Name:
          allOf:
          - $ref: '#/components/schemas/AgentStatusName'
          description: The name of the agent status.
        Description:
          allOf:
          - $ref: '#/components/schemas/UpdateAgentStatusDescription'
          description: The description of the agent status.
        State:
          allOf:
          - $ref: '#/components/schemas/AgentStatusState'
          description: The state of the agent status.
        DisplayOrder:
          allOf:
          - $ref: '#/components/schemas/AgentStatusOrderNumber'
          description: The display order of the agent status.
        ResetOrderNumber:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A number indicating the reset order of the agent status.
      required:
      - InstanceId
      - AgentStatusId
    UpdateAuthenticationProfileRequest:
      type: object
      properties:
        AuthenticationProfileId:
          allOf:
          - $ref: '#/components/schemas/AuthenticationProfileId'
          description: A unique identifier for the authentication profile.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        Name:
          allOf:
          - $ref: '#/components/schemas/AuthenticationProfileName'
          description: The name for the authentication profile.
        Description:
          allOf:
          - $ref: '#/components/schemas/AuthenticationProfileDescription'
          description: The description for the authentication profile.
        AllowedIps:
          allOf:
          - $ref: '#/components/schemas/IpCidrList'
          description: A list of IP address range strings that are allowed to access
            the instance. For more information on how to configure IP addresses, see[Configure
            session timeouts](https://docs.aws.amazon.com/connect/latest/adminguide/authentication-profiles.html#configure-session-timeouts)
            in the _Amazon Connect Administrator Guide_.
        BlockedIps:
          allOf:
          - $ref: '#/components/schemas/IpCidrList'
          description: A list of IP address range strings that are blocked from accessing
            the instance. For more information on how to configure IP addresses, For
            more information on how to configure IP addresses, see [Configure IP-based
            access control](https://docs.aws.amazon.com/connect/latest/adminguide/authentication-profiles.html#configure-ip-based-ac)
            in the _Amazon Connect Administrator Guide_.
        PeriodicSessionDuration:
          allOf:
          - $ref: '#/components/schemas/AccessTokenDuration'
          description: The short lived session duration configuration for users logged
            in to Amazon Connect, in minutes. This value determines the maximum possible
            time before an agent is authenticated. For more information, For more
            information on how to configure IP addresses, see [Configure session timeouts](https://docs.aws.amazon.com/connect/latest/adminguide/authentication-profiles.html#configure-session-timeouts)
            in the _Amazon Connect Administrator Guide_.
      required:
      - AuthenticationProfileId
      - InstanceId
    UpdateCaseActionDefinition:
      type: object
      properties:
        Fields:
          allOf:
          - $ref: '#/components/schemas/FieldValues'
          description: An array of objects with `Field ID` and Value data.
      required:
      - Fields
      description: The `UpdateCase` action definition.
    UpdateContactAttributesRequest:
      type: object
      properties:
        InitialContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact. This is the identifier of the
            contact associated with the first interaction with the contact center.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        Attributes:
          allOf:
          - $ref: '#/components/schemas/Attributes'
          description: "The Amazon Connect attributes. These attributes can be accessed\
            \ in flows just like any other contact attributes.\n\nYou can have up\
            \ to 32,768 UTF-8 bytes across all attributes for a contact. Attribute\
            \ keys can include only alphanumeric, dash, and underscore characters.\n\
            \nIn the [Set contact attributes](https://docs.aws.amazon.com/connect/latest/adminguide/set-contact-attributes.html)\
            \ block, when the attributes for a contact exceed 32 KB, the contact is\
            \ routed down the Error branch of the flow. As a mitigation, consider\
            \ the following options:\n\n  * Remove unnecessary attributes by setting\
            \ their values to empty.\n\n  * If the attributes are only used in one\
            \ flow and don't need to be referred to outside of that flow (for example,\
            \ by a Lambda or another flow), then use flow attributes. This way you\
            \ aren't needlessly persisting the 32 KB of information from one flow\
            \ to another. For more information, see [Flow block: Set contact attributes](https://docs.aws.amazon.com/connect/latest/adminguide/set-contact-attributes.html)\
            \ in the _Amazon Connect Administrator Guide_."
      required:
      - InitialContactId
      - InstanceId
      - Attributes
    UpdateContactAttributesResponse:
      type: object
      properties: {}
    UpdateContactEvaluationRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        EvaluationId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: A unique identifier for the contact evaluation.
        Answers:
          allOf:
          - $ref: '#/components/schemas/EvaluationAnswersInputMap'
          description: A map of question identifiers to answer value.
        Notes:
          allOf:
          - $ref: '#/components/schemas/EvaluationNotesMap'
          description: A map of question identifiers to note value.
      required:
      - InstanceId
      - EvaluationId
    UpdateContactEvaluationResponse:
      type: object
      properties:
        EvaluationId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: A unique identifier for the contact evaluation.
        EvaluationArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for the contact evaluation resource.
      required:
      - EvaluationId
      - EvaluationArn
    UpdateContactFlowContentRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance.
        ContactFlowId:
          allOf:
          - $ref: '#/components/schemas/ContactFlowId'
          description: The identifier of the flow.
        Content:
          allOf:
          - $ref: '#/components/schemas/ContactFlowContent'
          description: 'The JSON string that represents the content of the flow. For
            an example, see [Example flow in Amazon Connect Flow language](https://docs.aws.amazon.com/connect/latest/APIReference/flow-language-example.html).


            Length Constraints: Minimum length of 1. Maximum length of 256000.'
      required:
      - InstanceId
      - ContactFlowId
      - Content
    UpdateContactFlowContentResponse:
      type: object
      properties: {}
    UpdateContactFlowMetadataRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        ContactFlowId:
          allOf:
          - $ref: '#/components/schemas/ContactFlowId'
          description: The identifier of the flow.
        Name:
          allOf:
          - $ref: '#/components/schemas/ContactFlowName'
          description: The name of the flow.
        Description:
          allOf:
          - $ref: '#/components/schemas/ContactFlowDescription'
          description: The description of the flow.
        ContactFlowState:
          allOf:
          - $ref: '#/components/schemas/ContactFlowState'
          description: The state of flow.
      required:
      - InstanceId
      - ContactFlowId
    UpdateContactFlowMetadataResponse:
      type: object
      properties: {}
    UpdateContactFlowModuleContentRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        ContactFlowModuleId:
          allOf:
          - $ref: '#/components/schemas/ContactFlowModuleId'
          description: The identifier of the flow module.
        Content:
          allOf:
          - $ref: '#/components/schemas/ContactFlowModuleContent'
          description: The JSON string that represents the content of the flow. For
            an example, see [Example flow in Amazon Connect Flow language](https://docs.aws.amazon.com/connect/latest/APIReference/flow-language-example.html).
      required:
      - InstanceId
      - ContactFlowModuleId
      - Content
    UpdateContactFlowModuleContentResponse:
      type: object
      properties: {}
    UpdateContactFlowModuleMetadataRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        ContactFlowModuleId:
          allOf:
          - $ref: '#/components/schemas/ContactFlowModuleId'
          description: The identifier of the flow module.
        Name:
          allOf:
          - $ref: '#/components/schemas/ContactFlowModuleName'
          description: The name of the flow module.
        Description:
          allOf:
          - $ref: '#/components/schemas/ContactFlowModuleDescription'
          description: The description of the flow module.
        State:
          allOf:
          - $ref: '#/components/schemas/ContactFlowModuleState'
          description: The state of flow module.
      required:
      - InstanceId
      - ContactFlowModuleId
    UpdateContactFlowModuleMetadataResponse:
      type: object
      properties: {}
    UpdateContactFlowNameRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance.
        ContactFlowId:
          allOf:
          - $ref: '#/components/schemas/ContactFlowId'
          description: The identifier of the flow.
        Name:
          allOf:
          - $ref: '#/components/schemas/ContactFlowName'
          description: The name of the flow.
        Description:
          allOf:
          - $ref: '#/components/schemas/ContactFlowDescription'
          description: The description of the flow.
      required:
      - InstanceId
      - ContactFlowId
    UpdateContactFlowNameResponse:
      type: object
      properties: {}
    UpdateContactRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact. This is the identifier of the
            contact associated with the first interaction with your contact center.
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the contact.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the contact.
        References:
          allOf:
          - $ref: '#/components/schemas/ContactReferences'
          description: Well-formed data on contact, shown to agents on Contact Control
            Panel (CCP).
        SegmentAttributes:
          allOf:
          - $ref: '#/components/schemas/SegmentAttributes'
          description: 'A set of system defined key-value pairs stored on individual
            contact segments (unique contact ID) using an attribute map. The attributes
            are standard Amazon Connect attributes. They can be accessed in flows.


            Attribute keys can include only alphanumeric, -, and _.


            This field can be used to show channel subtype, such as `connect:Guide`.


            Currently Contact Expiry is the only segment attribute which can be updated
            by using the UpdateContact API.'
        QueueInfo:
          allOf:
          - $ref: '#/components/schemas/QueueInfoInput'
          description: Information about the queue associated with a contact. This
            parameter can only be updated for external audio contacts. It is used
            when you integrate third-party systems with Contact Lens for analytics.
            For more information, see [Amazon Connect Contact Lens integration](https://docs.aws.amazon.com/connect/latest/adminguide/contact-lens-integration.html)
            in the _Amazon Connect Administrator Guide_.
        UserInfo:
          allOf:
          - $ref: '#/components/schemas/UserInfo'
          description: Information about the agent associated with a contact. This
            parameter can only be updated for external audio contacts. It is used
            when you integrate third-party systems with Contact Lens for analytics.
            For more information, see [Amazon Connect Contact Lens integration](https://docs.aws.amazon.com/connect/latest/adminguide/contact-lens-integration.html)
            in the _Amazon Connect Administrator Guide_.
        CustomerEndpoint:
          allOf:
          - $ref: '#/components/schemas/Endpoint'
          description: The endpoint of the customer for which the contact was initiated.
            For external audio contacts, this is usually the end customer's phone
            number. This value can only be updated for external audio contacts. For
            more information, see [Amazon Connect Contact Lens integration](https://docs.aws.amazon.com/connect/latest/adminguide/contact-lens-integration.html)
            in the _Amazon Connect Administrator Guide_.
        SystemEndpoint:
          allOf:
          - $ref: '#/components/schemas/Endpoint'
          description: External system endpoint for the contact was initiated. For
            external audio contacts, this is the phone number of the external system
            such as the contact center. This value can only be updated for external
            audio contacts. For more information, see [Amazon Connect Contact Lens
            integration](https://docs.aws.amazon.com/connect/latest/adminguide/contact-lens-integration.html)
            in the _Amazon Connect Administrator Guide_.
      required:
      - InstanceId
      - ContactId
    UpdateContactResponse:
      type: object
      properties: {}
    UpdateContactRoutingDataRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact in this instance of Amazon Connect.
        QueueTimeAdjustmentSeconds:
          allOf:
          - $ref: '#/components/schemas/QueueTimeAdjustmentSeconds'
          description: The number of seconds to add or subtract from the contact's
            routing age. Contacts are routed to agents on a first-come, first-serve
            basis. This means that changing their amount of time in queue compared
            to others also changes their position in queue.
        QueuePriority:
          allOf:
          - $ref: '#/components/schemas/QueuePriority'
          description: Priority of the contact in the queue. The default priority
            for new contacts is 5. You can raise the priority of a contact compared
            to other contacts in the queue by assigning them a higher priority, such
            as 1 or 2.
        RoutingCriteria:
          allOf:
          - $ref: '#/components/schemas/RoutingCriteriaInput'
          description: Updates the routing criteria on the contact. These properties
            can be used to change how a contact is routed within the queue.
      required:
      - InstanceId
      - ContactId
    UpdateContactRoutingDataResponse:
      type: object
      properties: {}
    UpdateContactScheduleRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact.
        ScheduledTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp, in Unix Epoch seconds format, at which to start
            running the inbound flow. The scheduled time cannot be in the past. It
            must be within up to 6 days in future.
      required:
      - InstanceId
      - ContactId
      - ScheduledTime
    UpdateContactScheduleResponse:
      type: object
      properties: {}
    UpdateEmailAddressMetadataRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        EmailAddressId:
          allOf:
          - $ref: '#/components/schemas/EmailAddressId'
          description: The identifier of the email address.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the email address.
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/EmailAddressDisplayName'
          description: The display name of email address.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
      required:
      - InstanceId
      - EmailAddressId
    UpdateEmailAddressMetadataResponse:
      type: object
      properties:
        EmailAddressId:
          allOf:
          - $ref: '#/components/schemas/EmailAddressId'
          description: The identifier of the email address.
        EmailAddressArn:
          allOf:
          - $ref: '#/components/schemas/EmailAddressArn'
          description: The Amazon Resource Name (ARN) of the email address.
    UpdateEvaluationFormRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        EvaluationFormId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: The unique identifier for the evaluation form.
        EvaluationFormVersion:
          allOf:
          - $ref: '#/components/schemas/VersionNumber'
          description: A version of the evaluation form to update.
        CreateNewVersion:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          description: A flag indicating whether the operation must create a new version.
        Title:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormTitle'
          description: A title of the evaluation form.
        Description:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormDescription'
          description: The description of the evaluation form.
        Items:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormItemsList'
          description: Items that are part of the evaluation form. The total number
            of sections and questions must not exceed 100 each. Questions must be
            contained in a section.
        ScoringStrategy:
          allOf:
          - $ref: '#/components/schemas/EvaluationFormScoringStrategy'
          description: A scoring strategy of the evaluation form.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
      required:
      - InstanceId
      - EvaluationFormId
      - EvaluationFormVersion
      - Title
      - Items
    UpdateEvaluationFormResponse:
      type: object
      properties:
        EvaluationFormId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: The unique identifier for the evaluation form.
        EvaluationFormArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for the contact evaluation resource.
        EvaluationFormVersion:
          allOf:
          - $ref: '#/components/schemas/VersionNumber'
          description: The version of the updated evaluation form resource.
      required:
      - EvaluationFormId
      - EvaluationFormArn
      - EvaluationFormVersion
    UpdateHoursOfOperationDescription:
      type: string
      minLength: 0
      maxLength: 250
    UpdateHoursOfOperationOverrideRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance.
        HoursOfOperationId:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationId'
          description: The identifier for the hours of operation.
        HoursOfOperationOverrideId:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationOverrideId'
          description: The identifier for the hours of operation override.
        Name:
          allOf:
          - $ref: '#/components/schemas/CommonHumanReadableName'
          description: The name of the hours of operation override.
        Description:
          allOf:
          - $ref: '#/components/schemas/CommonHumanReadableDescription'
          description: The description of the hours of operation override.
        Config:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationOverrideConfigList'
          description: 'Configuration information for the hours of operation override:
            day, start time, and end time.'
        EffectiveFrom:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationOverrideYearMonthDayDateFormat'
          description: The date from when the hours of operation override would be
            effective.
        EffectiveTill:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationOverrideYearMonthDayDateFormat'
          description: The date till when the hours of operation override would be
            effective.
      required:
      - InstanceId
      - HoursOfOperationId
      - HoursOfOperationOverrideId
    UpdateHoursOfOperationRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        HoursOfOperationId:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationId'
          description: The identifier of the hours of operation.
        Name:
          allOf:
          - $ref: '#/components/schemas/CommonNameLength127'
          description: The name of the hours of operation.
        Description:
          allOf:
          - $ref: '#/components/schemas/UpdateHoursOfOperationDescription'
          description: The description of the hours of operation.
        TimeZone:
          allOf:
          - $ref: '#/components/schemas/TimeZone'
          description: The time zone of the hours of operation.
        Config:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationConfigList'
          description: Configuration information of the hours of operation.
      required:
      - InstanceId
      - HoursOfOperationId
    UpdateInstanceAttributeRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        AttributeType:
          allOf:
          - $ref: '#/components/schemas/InstanceAttributeType'
          description: 'The type of attribute.


            Only allowlisted customers can consume USE_CUSTOM_TTS_VOICES. To access
            this feature, contact Amazon Web ServicesSupport for allowlisting.'
        Value:
          allOf:
          - $ref: '#/components/schemas/InstanceAttributeValue'
          description: The value for the attribute. Maximum character limit is 100.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
      required:
      - InstanceId
      - AttributeType
      - Value
    UpdateInstanceStorageConfigRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        AssociationId:
          allOf:
          - $ref: '#/components/schemas/AssociationId'
          description: The existing association identifier that uniquely identifies
            the resource type and storage config for the given instance ID.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/InstanceStorageResourceType'
          description: A valid resource type.
        StorageConfig:
          $ref: '#/components/schemas/InstanceStorageConfig'
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
      required:
      - InstanceId
      - AssociationId
      - ResourceType
      - StorageConfig
    UpdateParticipantAuthenticationRequest:
      type: object
      properties:
        State:
          allOf:
          - $ref: '#/components/schemas/ParticipantToken'
          description: The `state` query parameter that was provided by Cognito in
            the `redirectUri`. This will also match the `state` parameter provided
            in the `AuthenticationUrl` from the [GetAuthenticationUrl](https://docs.aws.amazon.com/connect/latest/APIReference/API_GetAuthenticationUrl.html)
            response.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        Code:
          allOf:
          - $ref: '#/components/schemas/AuthorizationCode'
          description: The `code` query parameter provided by Cognito in the `redirectUri`.
        Error:
          allOf:
          - $ref: '#/components/schemas/AuthenticationError'
          description: The `error` query parameter provided by Cognito in the `redirectUri`.
        ErrorDescription:
          allOf:
          - $ref: '#/components/schemas/AuthenticationErrorDescription'
          description: The `error_description` parameter provided by Cognito in the
            `redirectUri`.
      required:
      - State
      - InstanceId
    UpdateParticipantAuthenticationResponse:
      type: object
      properties: {}
    UpdateParticipantRoleConfigChannelInfo:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/ChatParticipantRoleConfig'
        description: |-
          Configuration information for the chat participant role.
      description: |-
        Configuration information for the chat participant role.
    UpdateParticipantRoleConfigRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The identifier of the contact in this instance of Amazon Connect.
        ChannelConfiguration:
          allOf:
          - $ref: '#/components/schemas/UpdateParticipantRoleConfigChannelInfo'
          description: The Amazon Connect channel you want to configure.
      required:
      - InstanceId
      - ContactId
      - ChannelConfiguration
    UpdateParticipantRoleConfigResponse:
      type: object
      properties: {}
    UpdatePhoneNumberMetadataRequest:
      type: object
      properties:
        PhoneNumberId:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberId'
          description: The Amazon Resource Name (ARN) or resource ID of the phone
            number.
        PhoneNumberDescription:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberDescription'
          description: The description of the phone number.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
      required:
      - PhoneNumberId
    UpdatePhoneNumberRequest:
      type: object
      properties:
        PhoneNumberId:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberId'
          description: A unique identifier for the phone number.
        TargetArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for Amazon Connect instances
            or traffic distribution groups that phone number inbound traffic is routed
            through. You must enter `InstanceId` or `TargetArn`.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance that phone numbers
            are claimed to. You can [find the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance. You must enter `InstanceId`
            or `TargetArn`.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
      required:
      - PhoneNumberId
    UpdatePhoneNumberResponse:
      type: object
      properties:
        PhoneNumberId:
          allOf:
          - $ref: '#/components/schemas/PhoneNumberId'
          description: A unique identifier for the phone number.
        PhoneNumberArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the phone number.
    UpdatePredefinedAttributeRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can find
            the instance ID in the Amazon Resource Name (ARN) of the instance.
        Name:
          allOf:
          - $ref: '#/components/schemas/PredefinedAttributeName'
          description: The name of the predefined attribute.
        Values:
          allOf:
          - $ref: '#/components/schemas/PredefinedAttributeValues'
          description: The values of the predefined attribute.
      required:
      - InstanceId
      - Name
    UpdatePromptRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        PromptId:
          allOf:
          - $ref: '#/components/schemas/PromptId'
          description: A unique identifier for the prompt.
        Name:
          allOf:
          - $ref: '#/components/schemas/CommonNameLength127'
          description: The name of the prompt.
        Description:
          allOf:
          - $ref: '#/components/schemas/PromptDescription'
          description: A description of the prompt.
        S3Uri:
          allOf:
          - $ref: '#/components/schemas/S3Uri'
          description: The URI for the S3 bucket where the prompt is stored. You can
            provide S3 pre-signed URLs returned by the [GetPromptFile](https://docs.aws.amazon.com/connect/latest/APIReference/API_GetPromptFile.html)
            API instead of providing S3 URIs.
      required:
      - InstanceId
      - PromptId
    UpdatePromptResponse:
      type: object
      properties:
        PromptARN:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the prompt.
        PromptId:
          allOf:
          - $ref: '#/components/schemas/PromptId'
          description: A unique identifier for the prompt.
    UpdateQueueHoursOfOperationRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        QueueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The identifier for the queue.
        HoursOfOperationId:
          allOf:
          - $ref: '#/components/schemas/HoursOfOperationId'
          description: The identifier for the hours of operation.
      required:
      - InstanceId
      - QueueId
      - HoursOfOperationId
    UpdateQueueMaxContactsRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        QueueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The identifier for the queue.
        MaxContacts:
          allOf:
          - $ref: '#/components/schemas/QueueMaxContacts'
          description: The maximum number of contacts that can be in the queue before
            it is considered full.
      required:
      - InstanceId
      - QueueId
    UpdateQueueNameRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        QueueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The identifier for the queue.
        Name:
          allOf:
          - $ref: '#/components/schemas/CommonNameLength127'
          description: The name of the queue.
        Description:
          allOf:
          - $ref: '#/components/schemas/QueueDescription'
          description: The description of the queue.
      required:
      - InstanceId
      - QueueId
    UpdateQueueOutboundCallerConfigRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        QueueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The identifier for the queue.
        OutboundCallerConfig:
          allOf:
          - $ref: '#/components/schemas/OutboundCallerConfig'
          description: The outbound caller ID name, number, and outbound whisper flow.
      required:
      - InstanceId
      - QueueId
      - OutboundCallerConfig
    UpdateQueueOutboundEmailConfigRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        QueueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The identifier for the queue.
        OutboundEmailConfig:
          allOf:
          - $ref: '#/components/schemas/OutboundEmailConfig'
          description: The outbound email address ID for a specified queue.
      required:
      - InstanceId
      - QueueId
      - OutboundEmailConfig
    UpdateQueueStatusRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        QueueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The identifier for the queue.
        Status:
          allOf:
          - $ref: '#/components/schemas/QueueStatus'
          description: The status of the queue.
      required:
      - InstanceId
      - QueueId
      - Status
    UpdateQuickConnectConfigRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        QuickConnectId:
          allOf:
          - $ref: '#/components/schemas/QuickConnectId'
          description: The identifier for the quick connect.
        QuickConnectConfig:
          allOf:
          - $ref: '#/components/schemas/QuickConnectConfig'
          description: Information about the configuration settings for the quick
            connect.
      required:
      - InstanceId
      - QuickConnectId
      - QuickConnectConfig
    UpdateQuickConnectDescription:
      type: string
      minLength: 0
      maxLength: 250
    UpdateQuickConnectNameRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        QuickConnectId:
          allOf:
          - $ref: '#/components/schemas/QuickConnectId'
          description: The identifier for the quick connect.
        Name:
          allOf:
          - $ref: '#/components/schemas/QuickConnectName'
          description: The name of the quick connect.
        Description:
          allOf:
          - $ref: '#/components/schemas/UpdateQuickConnectDescription'
          description: The description of the quick connect.
      required:
      - InstanceId
      - QuickConnectId
    UpdateRoutingProfileAgentAvailabilityTimerRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        RoutingProfileId:
          allOf:
          - $ref: '#/components/schemas/RoutingProfileId'
          description: The identifier of the routing profile.
        AgentAvailabilityTimer:
          allOf:
          - $ref: '#/components/schemas/AgentAvailabilityTimer'
          description: Whether agents with this routing profile will have their routing
            order calculated based on _time since their last inbound contact_ or _longest
            idle time_.
      required:
      - InstanceId
      - RoutingProfileId
      - AgentAvailabilityTimer
    UpdateRoutingProfileConcurrencyRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        RoutingProfileId:
          allOf:
          - $ref: '#/components/schemas/RoutingProfileId'
          description: The identifier of the routing profile.
        MediaConcurrencies:
          allOf:
          - $ref: '#/components/schemas/MediaConcurrencies'
          description: The channels that agents can handle in the Contact Control
            Panel (CCP).
      required:
      - InstanceId
      - RoutingProfileId
      - MediaConcurrencies
    UpdateRoutingProfileDefaultOutboundQueueRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        RoutingProfileId:
          allOf:
          - $ref: '#/components/schemas/RoutingProfileId'
          description: The identifier of the routing profile.
        DefaultOutboundQueueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The identifier for the default outbound queue.
      required:
      - InstanceId
      - RoutingProfileId
      - DefaultOutboundQueueId
    UpdateRoutingProfileNameRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        RoutingProfileId:
          allOf:
          - $ref: '#/components/schemas/RoutingProfileId'
          description: The identifier of the routing profile.
        Name:
          allOf:
          - $ref: '#/components/schemas/RoutingProfileName'
          description: The name of the routing profile. Must not be more than 127
            characters.
        Description:
          allOf:
          - $ref: '#/components/schemas/RoutingProfileDescription'
          description: The description of the routing profile. Must not be more than
            250 characters.
      required:
      - InstanceId
      - RoutingProfileId
    UpdateRoutingProfileQueuesRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        RoutingProfileId:
          allOf:
          - $ref: '#/components/schemas/RoutingProfileId'
          description: The identifier of the routing profile.
        QueueConfigs:
          allOf:
          - $ref: '#/components/schemas/RoutingProfileQueueConfigList'
          description: The queues to be updated for this routing profile. Queues must
            first be associated to the routing profile. You can do this using AssociateRoutingProfileQueues.
      required:
      - InstanceId
      - RoutingProfileId
      - QueueConfigs
    UpdateRuleRequest:
      type: object
      properties:
        RuleId:
          allOf:
          - $ref: '#/components/schemas/RuleId'
          description: A unique identifier for the rule.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        Name:
          allOf:
          - $ref: '#/components/schemas/RuleName'
          description: 'The name of the rule. You can change the name only if `TriggerEventSource`
            is one of the following values: `OnZendeskTicketCreate` | `OnZendeskTicketStatusUpdate`
            | `OnSalesforceCaseCreate`'
        Function:
          allOf:
          - $ref: '#/components/schemas/RuleFunction'
          description: The conditions of the rule.
        Actions:
          allOf:
          - $ref: '#/components/schemas/RuleActions'
          description: A list of actions to be run when the rule is triggered.
        PublishStatus:
          allOf:
          - $ref: '#/components/schemas/RulePublishStatus'
          description: The publish status of the rule.
      required:
      - RuleId
      - InstanceId
      - Name
      - Function
      - Actions
      - PublishStatus
    UpdateSecurityProfileRequest:
      type: object
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileDescription'
          description: The description of the security profile.
        Permissions:
          allOf:
          - $ref: '#/components/schemas/PermissionsList'
          description: The permissions granted to a security profile. For a list of
            valid permissions, see [List of security profile permissions](https://docs.aws.amazon.com/connect/latest/adminguide/security-profile-list.html).
        SecurityProfileId:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileId'
          description: The identifier for the security profle.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        AllowedAccessControlTags:
          allOf:
          - $ref: '#/components/schemas/AllowedAccessControlTags'
          description: The list of tags that a security profile uses to restrict access
            to resources in Amazon Connect.
        TagRestrictedResources:
          allOf:
          - $ref: '#/components/schemas/TagRestrictedResourceList'
          description: The list of resources that a security profile applies tag restrictions
            to in Amazon Connect.
        Applications:
          allOf:
          - $ref: '#/components/schemas/Applications'
          description: A list of the third-party application's metadata.
        HierarchyRestrictedResources:
          allOf:
          - $ref: '#/components/schemas/HierarchyRestrictedResourceList'
          description: 'The list of resources that a security profile applies hierarchy
            restrictions to in Amazon Connect. Following are acceptable ResourceNames:
            `User`.'
        AllowedAccessControlHierarchyGroupId:
          allOf:
          - $ref: '#/components/schemas/HierarchyGroupId'
          description: The identifier of the hierarchy group that a security profile
            uses to restrict access to resources in Amazon Connect.
      required:
      - SecurityProfileId
      - InstanceId
    UpdateTaskTemplateRequest:
      type: object
      properties:
        TaskTemplateId:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateId'
          description: A unique identifier for the task template.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        Name:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateName'
          description: The name of the task template.
        Description:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateDescription'
          description: The description of the task template.
        ContactFlowId:
          allOf:
          - $ref: '#/components/schemas/ContactFlowId'
          description: The identifier of the flow that runs by default when a task
            is created by referencing this template.
        SelfAssignFlowId:
          allOf:
          - $ref: '#/components/schemas/ContactFlowId'
          description: The ContactFlowId for the flow that will be run if this template
            is used to create a self-assigned task.
        Constraints:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateConstraints'
          description: Constraints that are applicable to the fields listed.
        Defaults:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateDefaults'
          description: The default values for fields when a task is created by referencing
            this template.
        Status:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateStatus'
          description: Marks a template as `ACTIVE` or `INACTIVE` for a task to refer
            to it. Tasks can only be created from `ACTIVE` templates. If a template
            is marked as `INACTIVE`, then a task that refers to this template cannot
            be created.
        Fields:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateFields'
          description: Fields that are part of the template.
      required:
      - TaskTemplateId
      - InstanceId
    UpdateTaskTemplateResponse:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
        Id:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateId'
          description: The identifier of the task template resource.
        Arn:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateArn'
          description: The Amazon Resource Name (ARN) for the task template resource.
        Name:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateName'
          description: The name of the task template.
        Description:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateDescription'
          description: The description of the task template.
        ContactFlowId:
          allOf:
          - $ref: '#/components/schemas/ContactFlowId'
          description: The identifier of the flow that runs by default when a task
            is created by referencing this template.
        SelfAssignFlowId:
          allOf:
          - $ref: '#/components/schemas/ContactFlowId'
          description: The ContactFlowId for the flow that will be run if this template
            is used to create a self-assigned task.
        Constraints:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateConstraints'
          description: Constraints that are applicable to the fields listed.
        Defaults:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateDefaults'
          description: The default values for fields when a task is created by referencing
            this template.
        Fields:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateFields'
          description: Fields that are part of the template.
        Status:
          allOf:
          - $ref: '#/components/schemas/TaskTemplateStatus'
          description: Marks a template as `ACTIVE` or `INACTIVE` for a task to refer
            to it. Tasks can only be created from `ACTIVE` templates. If a template
            is marked as `INACTIVE`, then a task that refers to this template cannot
            be created.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the task template was last modified.
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the task template was created.
    UpdateTrafficDistributionRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/TrafficDistributionGroupIdOrArn'
          description: The identifier of the traffic distribution group. This can
            be the ID or the ARN if the API is being called in the Region where the
            traffic distribution group was created. The ARN must be provided if the
            call is from the replicated Region.
        TelephonyConfig:
          allOf:
          - $ref: '#/components/schemas/TelephonyConfig'
          description: The distribution of traffic between the instance and its replica(s).
        SignInConfig:
          allOf:
          - $ref: '#/components/schemas/SignInConfig'
          description: The distribution that determines which Amazon Web Services
            Regions should be used to sign in agents in to both the instance and its
            replica(s).
        AgentConfig:
          allOf:
          - $ref: '#/components/schemas/AgentConfig'
          description: The distribution of agents between the instance and its replica(s).
      required:
      - Id
    UpdateTrafficDistributionResponse:
      type: object
      properties: {}
    UpdateUserHierarchyGroupNameRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/HierarchyGroupName'
          description: The name of the hierarchy group. Must not be more than 100
            characters.
        HierarchyGroupId:
          allOf:
          - $ref: '#/components/schemas/HierarchyGroupId'
          description: The identifier of the hierarchy group.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
      required:
      - Name
      - HierarchyGroupId
      - InstanceId
    UpdateUserHierarchyRequest:
      type: object
      properties:
        HierarchyGroupId:
          allOf:
          - $ref: '#/components/schemas/HierarchyGroupId'
          description: The identifier of the hierarchy group.
        UserId:
          allOf:
          - $ref: '#/components/schemas/UserId'
          description: The identifier of the user account.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
      required:
      - UserId
      - InstanceId
    UpdateUserHierarchyStructureRequest:
      type: object
      properties:
        HierarchyStructure:
          allOf:
          - $ref: '#/components/schemas/HierarchyStructureUpdate'
          description: The hierarchy levels to update.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
      required:
      - HierarchyStructure
      - InstanceId
    UpdateUserIdentityInfoRequest:
      type: object
      properties:
        IdentityInfo:
          allOf:
          - $ref: '#/components/schemas/UserIdentityInfo'
          description: The identity information for the user.
        UserId:
          allOf:
          - $ref: '#/components/schemas/UserId'
          description: The identifier of the user account.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
      required:
      - IdentityInfo
      - UserId
      - InstanceId
    UpdateUserPhoneConfigRequest:
      type: object
      properties:
        PhoneConfig:
          allOf:
          - $ref: '#/components/schemas/UserPhoneConfig'
          description: Information about phone configuration settings for the user.
        UserId:
          allOf:
          - $ref: '#/components/schemas/UserId'
          description: The identifier of the user account.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
      required:
      - PhoneConfig
      - UserId
      - InstanceId
    UpdateUserProficienciesRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can find
            the instance ID in the Amazon Resource Name (ARN) of the instance.
        UserId:
          allOf:
          - $ref: '#/components/schemas/UserId'
          description: The identifier of the user account.
        UserProficiencies:
          allOf:
          - $ref: '#/components/schemas/UserProficiencyList'
          description: The proficiencies to be updated for the user. Proficiencies
            must first be associated to the user. You can do this using AssociateUserProficiencies
            API.
      required:
      - InstanceId
      - UserId
      - UserProficiencies
    UpdateUserRoutingProfileRequest:
      type: object
      properties:
        RoutingProfileId:
          allOf:
          - $ref: '#/components/schemas/RoutingProfileId'
          description: The identifier of the routing profile for the user.
        UserId:
          allOf:
          - $ref: '#/components/schemas/UserId'
          description: The identifier of the user account.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
      required:
      - RoutingProfileId
      - UserId
      - InstanceId
    UpdateUserSecurityProfilesRequest:
      type: object
      properties:
        SecurityProfileIds:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileIds'
          description: The identifiers of the security profiles for the user.
        UserId:
          allOf:
          - $ref: '#/components/schemas/UserId'
          description: The identifier of the user account.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The identifier of the Amazon Connect instance. You can [find
            the instance ID](https://docs.aws.amazon.com/connect/latest/adminguide/find-instance-arn.html)
            in the Amazon Resource Name (ARN) of the instance.
      required:
      - SecurityProfileIds
      - UserId
      - InstanceId
    UpdateViewContentRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/ViewsInstanceId'
          description: The identifier of the Amazon Connect instance. You can find
            the instanceId in the ARN of the instance.
        ViewId:
          allOf:
          - $ref: '#/components/schemas/ViewId'
          description: The identifier of the view. Both `ViewArn` and `ViewId` can
            be used.
        Status:
          allOf:
          - $ref: '#/components/schemas/ViewStatus'
          description: Indicates the view status as either `SAVED` or `PUBLISHED`.
            The `PUBLISHED` status will initiate validation on the content.
        Content:
          allOf:
          - $ref: '#/components/schemas/ViewInputContent'
          description: 'View content containing all content necessary to render a
            view except for runtime input data and the runtime input schema, which
            is auto-generated by this operation.


            The total uncompressed content has a maximum file size of 400kB.'
      required:
      - InstanceId
      - ViewId
      - Status
      - Content
    UpdateViewContentResponse:
      type: object
      properties:
        View:
          allOf:
          - $ref: '#/components/schemas/View'
          description: A view resource object. Contains metadata and content necessary
            to render the view.
    UpdateViewMetadataRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/ViewsInstanceId'
          description: The identifier of the Amazon Connect instance. You can find
            the instanceId in the ARN of the instance.
        ViewId:
          allOf:
          - $ref: '#/components/schemas/ViewId'
          description: The identifier of the view. Both `ViewArn` and `ViewId` can
            be used.
        Name:
          allOf:
          - $ref: '#/components/schemas/ViewName'
          description: The name of the view.
        Description:
          allOf:
          - $ref: '#/components/schemas/ViewDescription'
          description: The description of the view.
      required:
      - InstanceId
      - ViewId
    UpdateViewMetadataResponse:
      type: object
      properties: {}
    UploadUrlMetadata:
      type: object
      properties:
        Url:
          allOf:
          - $ref: '#/components/schemas/MetadataUrl'
          description: A pre-signed S3 URL that should be used for uploading the attached
            file.
        UrlExpiry:
          allOf:
          - $ref: '#/components/schemas/ISO8601Datetime'
          description: 'The expiration time of the URL in ISO timestamp. It''s specified
            in ISO 8601 format: `yyyy-MM-ddThh:mm:ss.SSSZ`. For example, `2019-11-08T02:41:28.172Z`.'
        HeadersToInclude:
          allOf:
          - $ref: '#/components/schemas/UrlMetadataSignedHeaders'
          description: A map of headers that should be provided when uploading the
            attached file.
      description: Fields required when uploading an attached file.
    Url:
      type: string
    UrlMetadataSignedHeaders:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/UrlMetadataSignedHeadersValue'
    UrlMetadataSignedHeadersKey:
      type: string
      minLength: 1
      maxLength: 128
    UrlMetadataSignedHeadersValue:
      type: string
      minLength: 1
      maxLength: 256
    UrlReference:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ReferenceKey'
          description: Identifier of the URL reference.
        Value:
          allOf:
          - $ref: '#/components/schemas/ReferenceValue'
          description: A valid URL.
      description: The URL reference.
    UseCase:
      type: object
      properties:
        UseCaseId:
          allOf:
          - $ref: '#/components/schemas/UseCaseId'
          description: The identifier for the use case.
        UseCaseArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for the use case.
        UseCaseType:
          allOf:
          - $ref: '#/components/schemas/UseCaseType'
          description: The type of use case to associate to the integration association.
            Each integration association can have only one of each use case type.
      description: Contains the use case.
    UseCaseId:
      type: string
      minLength: 1
      maxLength: 200
    UseCaseSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/UseCase'
    UseCaseType:
      type: string
      enum:
      - RULES_EVALUATION
      - CONNECT_CAMPAIGNS
    User:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/UserId'
          description: The identifier of the user account.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the user account.
        Username:
          allOf:
          - $ref: '#/components/schemas/AgentUsername'
          description: The user name assigned to the user account.
        IdentityInfo:
          allOf:
          - $ref: '#/components/schemas/UserIdentityInfo'
          description: Information about the user identity.
        PhoneConfig:
          allOf:
          - $ref: '#/components/schemas/UserPhoneConfig'
          description: Information about the phone configuration for the user.
        DirectoryUserId:
          allOf:
          - $ref: '#/components/schemas/DirectoryUserId'
          description: The identifier of the user account in the directory used for
            identity management.
        SecurityProfileIds:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileIds'
          description: The identifiers of the security profiles for the user.
        RoutingProfileId:
          allOf:
          - $ref: '#/components/schemas/RoutingProfileId'
          description: The identifier of the routing profile for the user.
        HierarchyGroupId:
          allOf:
          - $ref: '#/components/schemas/HierarchyGroupId'
          description: The identifier of the hierarchy group for the user.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when this resource was last modified.
        LastModifiedRegion:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          description: The Amazon Web Services Region where this resource was last
            modified.
      description: Contains information about a user account for an Amazon Connect
        instance.
    UserData:
      type: object
      properties:
        User:
          allOf:
          - $ref: '#/components/schemas/UserReference'
          description: Information about the user for the data that is returned. It
            contains the `resourceId` and ARN of the user.
        RoutingProfile:
          allOf:
          - $ref: '#/components/schemas/RoutingProfileReference'
          description: Information about the routing profile that is assigned to the
            user.
        HierarchyPath:
          allOf:
          - $ref: '#/components/schemas/HierarchyPathReference'
          description: Contains information about the levels of a hierarchy group
            assigned to a user.
        Status:
          allOf:
          - $ref: '#/components/schemas/AgentStatusReference'
          description: The status of the agent that they manually set in their Contact
            Control Panel (CCP), or that the supervisor manually changes in the real-time
            metrics report.
        AvailableSlotsByChannel:
          allOf:
          - $ref: '#/components/schemas/ChannelToCountMap'
          description: 'A map of available slots by channel. The key is a channel
            name. The value is an integer: the available number of slots.'
        MaxSlotsByChannel:
          allOf:
          - $ref: '#/components/schemas/ChannelToCountMap'
          description: 'A map of maximum slots by channel. The key is a channel name.
            The value is an integer: the maximum number of slots. This is calculated
            from [MediaConcurrency](https://docs.aws.amazon.com/connect/latest/APIReference/API_MediaConcurrency.html)
            of the `RoutingProfile` assigned to the agent.'
        ActiveSlotsByChannel:
          allOf:
          - $ref: '#/components/schemas/ChannelToCountMap'
          description: 'A map of active slots by channel. The key is a channel name.
            The value is an integer: the number of active slots.'
        Contacts:
          allOf:
          - $ref: '#/components/schemas/AgentContactReferenceList'
          description: A list of contact reference information.
        NextStatus:
          allOf:
          - $ref: '#/components/schemas/AgentStatusName'
          description: The Next status of the agent.
      description: Data for a user.
    UserDataFilters:
      type: object
      properties:
        Queues:
          allOf:
          - $ref: '#/components/schemas/Queues'
          description: A list of up to 100 queues or ARNs.
        ContactFilter:
          allOf:
          - $ref: '#/components/schemas/ContactFilter'
          description: A filter for the user data based on the contact information
            that is associated to the user. It contains a list of contact states.
        RoutingProfiles:
          allOf:
          - $ref: '#/components/schemas/RoutingProfiles'
          description: A list of up to 100 routing profile IDs or ARNs.
        Agents:
          allOf:
          - $ref: '#/components/schemas/AgentsMinOneMaxHundred'
          description: A list of up to 100 agent IDs or ARNs.
        UserHierarchyGroups:
          allOf:
          - $ref: '#/components/schemas/UserDataHierarchyGroups'
          description: A UserHierarchyGroup ID or ARN.
      description: A filter for the user data.
    UserDataHierarchyGroups:
      type: array
      items:
        $ref: '#/components/schemas/HierarchyGroupId'
    UserDataList:
      type: array
      items:
        $ref: '#/components/schemas/UserData'
    UserHierarchyGroupList:
      type: array
      items:
        $ref: '#/components/schemas/HierarchyGroup'
    UserHierarchyGroupSearchConditionList:
      type: array
      items:
        $ref: '#/components/schemas/UserHierarchyGroupSearchCriteria'
    UserHierarchyGroupSearchCriteria:
      type: object
      properties:
        OrConditions:
          allOf:
          - $ref: '#/components/schemas/UserHierarchyGroupSearchConditionList'
          description: A list of conditions which would be applied together with an
            OR condition.
        AndConditions:
          allOf:
          - $ref: '#/components/schemas/UserHierarchyGroupSearchConditionList'
          description: A list of conditions which would be applied together with an
            AND condition.
        StringCondition:
          allOf:
          - $ref: '#/components/schemas/StringCondition'
          description: 'A leaf node condition which can be used to specify a string
            condition.


            The currently supported values for `FieldName` are `name`, `parentId`,
            `levelId`, and `resourceID`.'
      description: The search criteria to be used to return userHierarchyGroup.
    UserHierarchyGroupSearchFilter:
      type: object
      properties:
        AttributeFilter:
          allOf:
          - $ref: '#/components/schemas/ControlPlaneAttributeFilter'
          description: "An object that can be used to specify Tag conditions inside\
            \ the SearchFilter. This accepts an OR or AND (List of List) input where:\n\
            \n  * The top level list specifies conditions that need to be applied\
            \ with `OR` operator.\n\n  * The inner list specifies conditions that\
            \ need to be applied with `AND` operator."
      description: Filters to be applied to search results.
    UserId:
      type: string
    UserIdList:
      type: array
      items:
        $ref: '#/components/schemas/UserId'
    UserIdentityInfo:
      type: object
      properties:
        FirstName:
          allOf:
          - $ref: '#/components/schemas/AgentFirstName'
          description: The first name. This is required if you are using Amazon Connect
            or SAML for identity management. Inputs must be in Unicode Normalization
            Form C (NFC). Text containing characters in a non-NFC form (for example,
            decomposed characters or combining marks) are not accepted.
        LastName:
          allOf:
          - $ref: '#/components/schemas/AgentLastName'
          description: The last name. This is required if you are using Amazon Connect
            or SAML for identity management. Inputs must be in Unicode Normalization
            Form C (NFC). Text containing characters in a non-NFC form (for example,
            decomposed characters or combining marks) are not accepted.
        Email:
          allOf:
          - $ref: '#/components/schemas/Email'
          description: The email address. If you are using SAML for identity management
            and include this parameter, an error is returned.
        SecondaryEmail:
          allOf:
          - $ref: '#/components/schemas/Email'
          description: 'The user''s secondary email address. If you provide a secondary
            email, the user receives email notifications - other than password reset
            notifications - to this email address instead of to their primary email
            address.


            Pattern: `(?=^.{0,265}$)[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,63}`'
        Mobile:
          allOf:
          - $ref: '#/components/schemas/PhoneNumber'
          description: The user's mobile number.
      description: 'Contains information about the identity of a user.


        For Amazon Connect instances that are created with the `EXISTING_DIRECTORY`
        identity management type, `FirstName`, `LastName`, and `Email` cannot be updated
        from within Amazon Connect because they are managed by the directory.


        The `FirstName` and `LastName` length constraints below apply only to instances
        using SAML for identity management. If you are using Amazon Connect for identity
        management, the length constraints are 1-255 for `FirstName`, and 1-256 for
        `LastName`.'
    UserIdentityInfoLite:
      type: object
      properties:
        FirstName:
          allOf:
          - $ref: '#/components/schemas/AgentFirstName'
          description: The user's first name.
        LastName:
          allOf:
          - $ref: '#/components/schemas/AgentLastName'
          description: The user's last name.
      description: The user's first name and last name.
    UserInfo:
      type: object
      properties:
        UserId:
          allOf:
          - $ref: '#/components/schemas/AgentResourceId'
          description: The user identifier for the contact.
      description: The user details for the contact.
    UserNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
      description: No user with the specified credentials was found in the Amazon
        Connect instance.
    UserPhoneConfig:
      type: object
      properties:
        PhoneType:
          allOf:
          - $ref: '#/components/schemas/PhoneType'
          description: The phone type.
        AutoAccept:
          allOf:
          - $ref: '#/components/schemas/AutoAccept'
          description: The Auto accept setting.
        AfterContactWorkTimeLimit:
          allOf:
          - $ref: '#/components/schemas/AfterContactWorkTimeLimit'
          description: 'The After Call Work (ACW) timeout setting, in seconds. This
            parameter has a minimum value of 0 and a maximum value of 2,000,000 seconds
            (24 days). Enter 0 if you don''t want to allocate a specific amount of
            ACW time. It essentially means an indefinite amount of time. When the
            conversation ends, ACW starts; the agent must choose Close contact to
            end ACW.


            When returned by a `SearchUsers` call, `AfterContactWorkTimeLimit` is
            returned in milliseconds.'
        DeskPhoneNumber:
          allOf:
          - $ref: '#/components/schemas/PhoneNumber'
          description: The phone number for the user's desk phone.
      required:
      - PhoneType
      description: Contains information about the phone configuration settings for
        a user.
    UserProficiency:
      type: object
      properties:
        AttributeName:
          allOf:
          - $ref: '#/components/schemas/PredefinedAttributeName'
          description: The name of user's proficiency. You must use name of predefined
            attribute present in the Amazon Connect instance.
        AttributeValue:
          allOf:
          - $ref: '#/components/schemas/PredefinedAttributeStringValue'
          description: The value of user's proficiency. You must use value of predefined
            attribute present in the Amazon Connect instance.
        Level:
          allOf:
          - $ref: '#/components/schemas/ProficiencyLevel'
          description: The level of the proficiency. The valid values are 1, 2, 3,
            4 and 5.
      required:
      - AttributeName
      - AttributeValue
      - Level
      description: Information about proficiency of a user.
    UserProficiencyDisassociate:
      type: object
      properties:
        AttributeName:
          allOf:
          - $ref: '#/components/schemas/PredefinedAttributeName'
          description: The name of user's proficiency.
        AttributeValue:
          allOf:
          - $ref: '#/components/schemas/PredefinedAttributeStringValue'
          description: The value of user's proficiency.
      required:
      - AttributeName
      - AttributeValue
      description: Information about proficiency to be disassociated from the user.
    UserProficiencyDisassociateList:
      type: array
      items:
        $ref: '#/components/schemas/UserProficiencyDisassociate'
    UserProficiencyList:
      type: array
      items:
        $ref: '#/components/schemas/UserProficiency'
    UserQuickConnectConfig:
      type: object
      properties:
        UserId:
          allOf:
          - $ref: '#/components/schemas/UserId'
          description: The identifier of the user.
        ContactFlowId:
          allOf:
          - $ref: '#/components/schemas/ContactFlowId'
          description: The identifier of the flow.
      required:
      - UserId
      - ContactFlowId
      description: Contains information about the quick connect configuration settings
        for a user. The contact flow must be of type Transfer to Agent.
    UserReference:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/UserId'
          description: The unique identifier for the user.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) for the user.
      description: Information about the user.
    UserSearchConditionList:
      type: array
      items:
        $ref: '#/components/schemas/UserSearchCriteria'
    UserSearchCriteria:
      type: object
      properties:
        OrConditions:
          allOf:
          - $ref: '#/components/schemas/UserSearchConditionList'
          description: A list of conditions which would be applied together with an
            `OR` condition.
        AndConditions:
          allOf:
          - $ref: '#/components/schemas/UserSearchConditionList'
          description: A list of conditions which would be applied together with an
            `AND` condition.
        StringCondition:
          allOf:
          - $ref: '#/components/schemas/StringCondition'
          description: 'A leaf node condition which can be used to specify a string
            condition.


            The currently supported values for `FieldName` are `Username`, `FirstName`,
            `LastName`, `RoutingProfileId`, `SecurityProfileId`, `ResourceId`.'
        ListCondition:
          allOf:
          - $ref: '#/components/schemas/ListCondition'
          description: A leaf node condition which can be used to specify a List condition
            to search users with attributes included in Lists like Proficiencies.
        HierarchyGroupCondition:
          allOf:
          - $ref: '#/components/schemas/HierarchyGroupCondition'
          description: A leaf node condition which can be used to specify a hierarchy
            group condition.
      description: 'The search criteria to be used to return users.


        The `name` and `description` fields support "contains" queries with a minimum
        of 2 characters and a maximum of 25 characters. Any queries with character
        lengths outside of this range will throw invalid results.'
    UserSearchFilter:
      type: object
      properties:
        TagFilter:
          $ref: '#/components/schemas/ControlPlaneTagFilter'
        UserAttributeFilter:
          allOf:
          - $ref: '#/components/schemas/ControlPlaneUserAttributeFilter'
          description: "An object that can be used to specify Tag conditions or Hierarchy\
            \ Group conditions inside the SearchFilter.\n\nThis accepts an `OR` of\
            \ `AND` (List of List) input where:\n\n  * The top level list specifies\
            \ conditions that need to be applied with `OR` operator.\n\n  * The inner\
            \ list specifies conditions that need to be applied with `AND` operator.\n\
            \nOnly one field can be populated. This object can’t be used along with\
            \ TagFilter. Request can either contain TagFilter or UserAttributeFilter\
            \ if SearchFilter is specified, combination of both is not supported and\
            \ such request will throw AccessDeniedException."
      description: Filters to be applied to search results.
    UserSearchSummary:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the user.
        DirectoryUserId:
          allOf:
          - $ref: '#/components/schemas/DirectoryUserId'
          description: The directory identifier of the user.
        HierarchyGroupId:
          allOf:
          - $ref: '#/components/schemas/HierarchyGroupId'
          description: The identifier of the user's hierarchy group.
        Id:
          allOf:
          - $ref: '#/components/schemas/UserId'
          description: The identifier of the user's summary.
        IdentityInfo:
          allOf:
          - $ref: '#/components/schemas/UserIdentityInfoLite'
          description: The user's first name and last name.
        PhoneConfig:
          $ref: '#/components/schemas/UserPhoneConfig'
        RoutingProfileId:
          allOf:
          - $ref: '#/components/schemas/RoutingProfileId'
          description: The identifier of the user's routing profile.
        SecurityProfileIds:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileIds'
          description: The identifiers of the user's security profiles.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The tags used to organize, track, or control access for this
            resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.'
        Username:
          allOf:
          - $ref: '#/components/schemas/AgentUsername'
          description: The name of the user.
      description: Information about the returned users.
    UserSearchSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/UserSearchSummary'
    UserSummary:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/UserId'
          description: The identifier of the user account.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the user account.
        Username:
          allOf:
          - $ref: '#/components/schemas/AgentUsername'
          description: The Amazon Connect user name of the user account.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when this resource was last modified.
        LastModifiedRegion:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          description: The Amazon Web Services Region where this resource was last
            modified.
      description: Contains summary information about a user.
    UserSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/UserSummary'
    UserTagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    Value:
      type: number
      format: double
    VersionNumber:
      type: integer
      default: 0
      minimum: 1
    VideoCapability:
      type: string
      enum:
      - SEND
    View:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ViewId'
          description: The identifier of the view.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the view.
        Name:
          allOf:
          - $ref: '#/components/schemas/ViewName'
          description: The name of the view.
        Status:
          allOf:
          - $ref: '#/components/schemas/ViewStatus'
          description: Indicates the view status as either `SAVED` or `PUBLISHED`.
            The `PUBLISHED` status will initiate validation on the content.
        Type:
          allOf:
          - $ref: '#/components/schemas/ViewType'
          description: The type of the view - `CUSTOMER_MANAGED`.
        Description:
          allOf:
          - $ref: '#/components/schemas/ViewDescription'
          description: The description of the view.
        Version:
          allOf:
          - $ref: '#/components/schemas/ViewVersion'
          description: Current version of the view.
        VersionDescription:
          allOf:
          - $ref: '#/components/schemas/ViewDescription'
          description: The description of the version.
        Content:
          allOf:
          - $ref: '#/components/schemas/ViewContent'
          description: View content containing all content necessary to render a view
            except for runtime input data.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags associated with the view resource (not specific to
            view version).
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp of when the view was created.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Latest timestamp of the `UpdateViewContent` or `CreateViewVersion`
            operations.
        ViewContentSha256:
          allOf:
          - $ref: '#/components/schemas/ViewContentSha256'
          description: Indicates the checksum value of the latest published view content.
      description: A view resource object. Contains metadata and content necessary
        to render the view.
    ViewAction:
      type: string
      pattern: ^([\p{L}\p{N}_.:\/=+\-@()']+[\p{L}\p{Z}\p{N}_.:\/=+\-@()']*)$
      minLength: 1
      maxLength: 255
    ViewActions:
      type: array
      items:
        $ref: '#/components/schemas/ViewAction'
    ViewContent:
      type: object
      properties:
        InputSchema:
          allOf:
          - $ref: '#/components/schemas/ViewInputSchema'
          description: The data schema matching data that the view template must be
            provided to render.
        Template:
          allOf:
          - $ref: '#/components/schemas/ViewTemplate'
          description: The view template representing the structure of the view.
        Actions:
          allOf:
          - $ref: '#/components/schemas/ViewActions'
          description: A list of possible actions from the view.
      description: View content containing all content necessary to render a view
        except for runtime input data.
    ViewContentSha256:
      type: string
      pattern: ^[a-zA-Z0-9]$
      minLength: 1
      maxLength: 64
    ViewDescription:
      type: string
      pattern: ^([\p{L}\p{N}_.:\/=+\-@,()']+[\p{L}\p{Z}\p{N}_.:\/=+\-@,()']*)$
      minLength: 1
      maxLength: 4096
    ViewId:
      type: string
      pattern: ^[a-zA-Z0-9\_\-:\/$]+$
      minLength: 1
      maxLength: 500
    ViewInputContent:
      type: object
      properties:
        Template:
          allOf:
          - $ref: '#/components/schemas/ViewTemplate'
          description: The view template representing the structure of the view.
        Actions:
          allOf:
          - $ref: '#/components/schemas/ViewActions'
          description: A list of possible actions from the view.
      description: View content containing all content necessary to render a view
        except for runtime input data and the runtime input schema, which is auto-generated
        by this operation.
    ViewInputSchema:
      type: string
    ViewName:
      type: string
      pattern: ^([\p{L}\p{N}_.:\/=+\-@()']+[\p{L}\p{Z}\p{N}_.:\/=+\-@()']*)$
      minLength: 1
      maxLength: 255
    ViewStatus:
      type: string
      enum:
      - PUBLISHED
      - SAVED
    ViewSummary:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ViewId'
          description: The identifier of the view.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the view.
        Name:
          allOf:
          - $ref: '#/components/schemas/ViewName'
          description: The name of the view.
        Type:
          allOf:
          - $ref: '#/components/schemas/ViewType'
          description: The type of the view.
        Status:
          allOf:
          - $ref: '#/components/schemas/ViewStatus'
          description: Indicates the view status as either `SAVED` or `PUBLISHED`.
            The `PUBLISHED` status will initiate validation on the content.
        Description:
          allOf:
          - $ref: '#/components/schemas/ViewDescription'
          description: The description of the view.
      description: A summary of a view's metadata.
    ViewTemplate:
      type: string
    ViewType:
      type: string
      enum:
      - CUSTOMER_MANAGED
      - AWS_MANAGED
    ViewVersion:
      type: integer
      default: 0
    ViewVersionSummary:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ViewId'
          description: The identifier of the view version.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the view version.
        Description:
          allOf:
          - $ref: '#/components/schemas/ViewDescription'
          description: The description of the view version.
        Name:
          allOf:
          - $ref: '#/components/schemas/ViewName'
          description: The name of the view version.
        Type:
          allOf:
          - $ref: '#/components/schemas/ViewType'
          description: The type of the view version.
        Version:
          allOf:
          - $ref: '#/components/schemas/ViewVersion'
          description: The sequentially incremented version of the view version.
        VersionDescription:
          allOf:
          - $ref: '#/components/schemas/ViewDescription'
          description: The description of the view version.
      description: A summary of a view version's metadata.
    ViewVersionSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ViewVersionSummary'
    ViewsClientToken:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:\/=+\-@]*)$
      minLength: 0
      maxLength: 500
    ViewsInstanceId:
      type: string
      pattern: ^[a-zA-Z0-9\_\-:\/]+$
      minLength: 1
      maxLength: 100
    ViewsNextToken:
      type: string
      pattern: ^[a-zA-Z0-9=\/+_.-]+$
      minLength: 1
      maxLength: 4096
    ViewsSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ViewSummary'
    Vocabulary:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/VocabularyName'
          description: A unique name of the custom vocabulary.
        Id:
          allOf:
          - $ref: '#/components/schemas/VocabularyId'
          description: The identifier of the custom vocabulary.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the custom vocabulary.
        LanguageCode:
          allOf:
          - $ref: '#/components/schemas/VocabularyLanguageCode'
          description: The language code of the vocabulary entries. For a list of
            languages and their corresponding language codes, see [What is Amazon
            Transcribe?](https://docs.aws.amazon.com/transcribe/latest/dg/transcribe-whatis.html)
        State:
          allOf:
          - $ref: '#/components/schemas/VocabularyState'
          description: The current state of the custom vocabulary.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/VocabularyLastModifiedTime'
          description: The timestamp when the custom vocabulary was last modified.
        FailureReason:
          allOf:
          - $ref: '#/components/schemas/VocabularyFailureReason'
          description: The reason why the custom vocabulary was not created.
        Content:
          allOf:
          - $ref: '#/components/schemas/VocabularyContent'
          description: The content of the custom vocabulary in plain-text format with
            a table of values. Each row in the table represents a word or a phrase,
            described with `Phrase`, `IPA`, `SoundsLike`, and `DisplayAs` fields.
            Separate the fields with TAB characters. For more information, see [Create
            a custom vocabulary using a table](https://docs.aws.amazon.com/transcribe/latest/dg/custom-vocabulary.html#create-vocabulary-table).
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The tags used to organize, track, or control access for this
            resource. For example, { "Tags": {"key1":"value1", "key2":"value2"} }.'
      required:
      - Name
      - Id
      - Arn
      - LanguageCode
      - State
      - LastModifiedTime
      description: Contains information about a custom vocabulary.
    VocabularyContent:
      type: string
      minLength: 1
      maxLength: 60000
    VocabularyFailureReason:
      type: string
    VocabularyId:
      type: string
      minLength: 1
      maxLength: 500
    VocabularyLanguageCode:
      type: string
      enum:
      - ar-AE
      - de-CH
      - de-DE
      - en-AB
      - en-AU
      - en-GB
      - en-IE
      - en-IN
      - en-US
      - en-WL
      - es-ES
      - es-US
      - fr-CA
      - fr-FR
      - hi-IN
      - it-IT
      - ja-JP
      - ko-KR
      - pt-BR
      - pt-PT
      - zh-CN
      - en-NZ
      - en-ZA
      - ca-ES
      - da-DK
      - fi-FI
      - id-ID
      - ms-MY
      - nl-NL
      - no-NO
      - pl-PL
      - sv-SE
      - tl-PH
    VocabularyLastModifiedTime:
      type: string
      format: date-time
    VocabularyName:
      type: string
      pattern: ^[0-9a-zA-Z._-]+$
      minLength: 1
      maxLength: 140
    VocabularyNextToken:
      type: string
      pattern: \S
      minLength: 1
      maxLength: 131070
    VocabularyState:
      type: string
      enum:
      - CREATION_IN_PROGRESS
      - ACTIVE
      - CREATION_FAILED
      - DELETE_IN_PROGRESS
    VocabularySummary:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/VocabularyName'
          description: A unique name of the custom vocabulary.
        Id:
          allOf:
          - $ref: '#/components/schemas/VocabularyId'
          description: The identifier of the custom vocabulary.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the custom vocabulary.
        LanguageCode:
          allOf:
          - $ref: '#/components/schemas/VocabularyLanguageCode'
          description: The language code of the vocabulary entries. For a list of
            languages and their corresponding language codes, see [What is Amazon
            Transcribe?](https://docs.aws.amazon.com/transcribe/latest/dg/transcribe-whatis.html)
        State:
          allOf:
          - $ref: '#/components/schemas/VocabularyState'
          description: The current state of the custom vocabulary.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/VocabularyLastModifiedTime'
          description: The timestamp when the custom vocabulary was last modified.
        FailureReason:
          allOf:
          - $ref: '#/components/schemas/VocabularyFailureReason'
          description: The reason why the custom vocabulary was not created.
      required:
      - Name
      - Id
      - Arn
      - LanguageCode
      - State
      - LastModifiedTime
      description: Contains summary information about the custom vocabulary.
    VocabularySummaryList:
      type: array
      items:
        $ref: '#/components/schemas/VocabularySummary'
    VoiceRecordingConfiguration:
      type: object
      properties:
        VoiceRecordingTrack:
          allOf:
          - $ref: '#/components/schemas/VoiceRecordingTrack'
          description: Identifies which track is being recorded.
        IvrRecordingTrack:
          allOf:
          - $ref: '#/components/schemas/IvrRecordingTrack'
          description: 'Identifies which IVR track is being recorded.


            One and only one of the track configurations should be presented in the
            request.'
      description: Contains information about the recording configuration settings.
    VoiceRecordingTrack:
      type: string
      enum:
      - FROM_AGENT
      - TO_AGENT
      - ALL
    WisdomInfo:
      type: object
      properties:
        SessionArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the Wisdom session.
      description: Information about Amazon Connect Wisdom.
    resourceArnListMaxLimit100:
      type: array
      items:
        $ref: '#/components/schemas/ARN'
