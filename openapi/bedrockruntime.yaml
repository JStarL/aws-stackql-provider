openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: bedrock_runtime
  x-aws-serviceName: bedrockruntime
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2023-09-30'
  title: Amazon Bedrock Runtime
  description: |-
    Describes the API operations for running inference using Amazon Bedrock models.
servers:
- description: The Amazon Bedrock Runtime regional endpoint
  url: https://bedrock-runtime.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /guardrail/{guardrailIdentifier}/version/{guardrailVersion}/apply:
    post:
      operationId: ApplyGuardrail
      description: |-
        The action to apply a guardrail.

        For troubleshooting some of the common errors you might encounter when using the `ApplyGuardrail` API, see [Troubleshooting Amazon Bedrock API Error Codes](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html) in the Amazon Bedrock User Guide
      parameters:
      - name: guardrailIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GuardrailIdentifier'
      - name: guardrailVersion
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GuardrailVersion'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                source:
                  $ref: '#/components/schemas/GuardrailContentSource'
                content:
                  $ref: '#/components/schemas/GuardrailContentBlockList'
                outputScope:
                  $ref: '#/components/schemas/GuardrailOutputScope'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because you do not have sufficient permissions to perform the requested action. For troubleshooting this error, see [AccessDeniedException](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-access-denied) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. For troubleshooting this error, see [InternalFailure](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-internal-failure) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource ARN was not found. For troubleshooting this error, see [ResourceNotFound](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-resource-not-found) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by _Amazon Bedrock_. For troubleshooting this error, see [ValidationError](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-validation-error) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            Your request was denied due to exceeding the account quotas for _Amazon Bedrock_. For troubleshooting this error, see [ThrottlingException](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-throttling-exception) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /model/{modelId}/converse:
    post:
      operationId: Converse
      description: |-
        Sends messages to the specified Amazon Bedrock model. `Converse` provides a consistent interface that works with all models that support messages. This allows you to write code once and use it with different models. If a model has unique inference parameters, you can also pass those unique parameters to the model.

        Amazon Bedrock doesn't store any text, images, or documents that you provide as content. The data is only used to generate the response.

        You can submit a prompt by including it in the `messages` field, specifying the `modelId` of a foundation model or inference profile to run inference on it, and including any other fields that are relevant to your use case.

        You can also submit a prompt from Prompt management by specifying the ARN of the prompt version and including a map of variables to values in the `promptVariables` field. You can append more messages to the prompt by using the `messages` field. If you use a prompt from Prompt management, you can't include the following fields in the request: `additionalModelRequestFields`, `inferenceConfig`, `system`, or `toolConfig`. Instead, these fields must be defined through Prompt management. For more information, see [Use a prompt from Prompt management](https://docs.aws.amazon.com/bedrock/latest/userguide/prompt-management-use.html).

        For information about the Converse API, see _Use the Converse API_ in the _Amazon Bedrock User Guide_. To use a guardrail, see _Use a guardrail with the Converse API_ in the _Amazon Bedrock User Guide_. To use a tool with a model, see _Tool use (Function calling)_ in the _Amazon Bedrock User Guide_

        For example code, see _Converse API examples_ in the _Amazon Bedrock User Guide_.

        This operation requires permission for the `bedrock:InvokeModel` action.

        To deny all inference access to resources that you specify in the modelId field, you need to deny access to the `bedrock:InvokeModel` and `bedrock:InvokeModelWithResponseStream` actions. Doing this also denies access to the resource through the base inference actions ([InvokeModel](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_runtime_InvokeModel.html) and [InvokeModelWithResponseStream](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_runtime_InvokeModelWithResponseStream.html)). For more information see [Deny access for inference on specific models](https://docs.aws.amazon.com/bedrock/latest/userguide/security_iam_id-based-policy-examples.html#security_iam_id-based-policy-examples-deny-inference).

        For troubleshooting some of the common errors you might encounter when using the `Converse` API, see [Troubleshooting Amazon Bedrock API Error Codes](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html) in the Amazon Bedrock User Guide
      parameters:
      - name: modelId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConversationalModelId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                messages:
                  $ref: '#/components/schemas/Messages'
                system:
                  $ref: '#/components/schemas/SystemContentBlocks'
                inferenceConfig:
                  $ref: '#/components/schemas/InferenceConfiguration'
                toolConfig:
                  $ref: '#/components/schemas/ToolConfiguration'
                guardrailConfig:
                  $ref: '#/components/schemas/GuardrailConfiguration'
                additionalModelRequestFields:
                  $ref: '#/components/schemas/Document'
                promptVariables:
                  $ref: '#/components/schemas/PromptVariableMap'
                additionalModelResponseFieldPaths:
                  $ref: '#/components/schemas/AdditionalModelResponseFieldPaths'
                requestMetadata:
                  $ref: '#/components/schemas/RequestMetadata'
                performanceConfig:
                  $ref: '#/components/schemas/PerformanceConfiguration'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because you do not have sufficient permissions to perform the requested action. For troubleshooting this error, see [AccessDeniedException](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-access-denied) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. For troubleshooting this error, see [InternalFailure](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-internal-failure) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '424':
          description: |-
            The request failed due to an error while processing the model.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelErrorException'
        '429':
          description: |-
            Your request was denied due to exceeding the account quotas for _Amazon Bedrock_. For troubleshooting this error, see [ThrottlingException](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-throttling-exception) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '408':
          description: |-
            The request took too long to process. Processing time exceeded the model timeout length.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelTimeoutException'
        '404':
          description: |-
            The specified resource ARN was not found. For troubleshooting this error, see [ResourceNotFound](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-resource-not-found) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service isn't currently available. For troubleshooting this error, see [ServiceUnavailable](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-service-unavailable) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by _Amazon Bedrock_. For troubleshooting this error, see [ValidationError](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-validation-error) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /model/{modelId}/converse-stream:
    post:
      operationId: ConverseStream
      description: |-
        Sends messages to the specified Amazon Bedrock model and returns the response in a stream. `ConverseStream` provides a consistent API that works with all Amazon Bedrock models that support messages. This allows you to write code once and use it with different models. Should a model have unique inference parameters, you can also pass those unique parameters to the model.

        To find out if a model supports streaming, call [GetFoundationModel](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_GetFoundationModel.html) and check the `responseStreamingSupported` field in the response.

        The CLI doesn't support streaming operations in Amazon Bedrock, including `ConverseStream`.

        Amazon Bedrock doesn't store any text, images, or documents that you provide as content. The data is only used to generate the response.

        You can submit a prompt by including it in the `messages` field, specifying the `modelId` of a foundation model or inference profile to run inference on it, and including any other fields that are relevant to your use case.

        You can also submit a prompt from Prompt management by specifying the ARN of the prompt version and including a map of variables to values in the `promptVariables` field. You can append more messages to the prompt by using the `messages` field. If you use a prompt from Prompt management, you can't include the following fields in the request: `additionalModelRequestFields`, `inferenceConfig`, `system`, or `toolConfig`. Instead, these fields must be defined through Prompt management. For more information, see [Use a prompt from Prompt management](https://docs.aws.amazon.com/bedrock/latest/userguide/prompt-management-use.html).

        For information about the Converse API, see _Use the Converse API_ in the _Amazon Bedrock User Guide_. To use a guardrail, see _Use a guardrail with the Converse API_ in the _Amazon Bedrock User Guide_. To use a tool with a model, see _Tool use (Function calling)_ in the _Amazon Bedrock User Guide_

        For example code, see _Conversation streaming example_ in the _Amazon Bedrock User Guide_.

        This operation requires permission for the `bedrock:InvokeModelWithResponseStream` action.

        To deny all inference access to resources that you specify in the modelId field, you need to deny access to the `bedrock:InvokeModel` and `bedrock:InvokeModelWithResponseStream` actions. Doing this also denies access to the resource through the base inference actions ([InvokeModel](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_runtime_InvokeModel.html) and [InvokeModelWithResponseStream](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_runtime_InvokeModelWithResponseStream.html)). For more information see [Deny access for inference on specific models](https://docs.aws.amazon.com/bedrock/latest/userguide/security_iam_id-based-policy-examples.html#security_iam_id-based-policy-examples-deny-inference).

        For troubleshooting some of the common errors you might encounter when using the `ConverseStream` API, see [Troubleshooting Amazon Bedrock API Error Codes](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html) in the Amazon Bedrock User Guide
      parameters:
      - name: modelId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConversationalModelId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                messages:
                  $ref: '#/components/schemas/Messages'
                system:
                  $ref: '#/components/schemas/SystemContentBlocks'
                inferenceConfig:
                  $ref: '#/components/schemas/InferenceConfiguration'
                toolConfig:
                  $ref: '#/components/schemas/ToolConfiguration'
                guardrailConfig:
                  $ref: '#/components/schemas/GuardrailStreamConfiguration'
                additionalModelRequestFields:
                  $ref: '#/components/schemas/Document'
                promptVariables:
                  $ref: '#/components/schemas/PromptVariableMap'
                additionalModelResponseFieldPaths:
                  $ref: '#/components/schemas/AdditionalModelResponseFieldPaths'
                requestMetadata:
                  $ref: '#/components/schemas/RequestMetadata'
                performanceConfig:
                  $ref: '#/components/schemas/PerformanceConfiguration'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because you do not have sufficient permissions to perform the requested action. For troubleshooting this error, see [AccessDeniedException](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-access-denied) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. For troubleshooting this error, see [InternalFailure](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-internal-failure) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '424':
          description: |-
            The request failed due to an error while processing the model.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelErrorException'
        '429':
          description: |-
            Your request was denied due to exceeding the account quotas for _Amazon Bedrock_. For troubleshooting this error, see [ThrottlingException](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-throttling-exception) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '408':
          description: |-
            The request took too long to process. Processing time exceeded the model timeout length.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelTimeoutException'
        '404':
          description: |-
            The specified resource ARN was not found. For troubleshooting this error, see [ResourceNotFound](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-resource-not-found) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service isn't currently available. For troubleshooting this error, see [ServiceUnavailable](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-service-unavailable) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by _Amazon Bedrock_. For troubleshooting this error, see [ValidationError](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-validation-error) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /async-invoke/{invocationArn}:
    get:
      operationId: GetAsyncInvoke
      description: |-
        Retrieve information about an asynchronous invocation.
      parameters:
      - name: invocationArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InvocationArn'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because you do not have sufficient permissions to perform the requested action. For troubleshooting this error, see [AccessDeniedException](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-access-denied) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. For troubleshooting this error, see [InternalFailure](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-internal-failure) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            Your request was denied due to exceeding the account quotas for _Amazon Bedrock_. For troubleshooting this error, see [ThrottlingException](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-throttling-exception) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by _Amazon Bedrock_. For troubleshooting this error, see [ValidationError](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-validation-error) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /model/{modelId}/invoke:
    post:
      operationId: InvokeModel
      description: |-
        Invokes the specified Amazon Bedrock model to run inference using the prompt and inference parameters provided in the request body. You use model inference to generate text, images, and embeddings.

        For example code, see _Invoke model code examples_ in the _Amazon Bedrock User Guide_.

        This operation requires permission for the `bedrock:InvokeModel` action.

        To deny all inference access to resources that you specify in the modelId field, you need to deny access to the `bedrock:InvokeModel` and `bedrock:InvokeModelWithResponseStream` actions. Doing this also denies access to the resource through the Converse API actions ([Converse](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_runtime_Converse.html) and [ConverseStream](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_runtime_ConverseStream.html)). For more information see [Deny access for inference on specific models](https://docs.aws.amazon.com/bedrock/latest/userguide/security_iam_id-based-policy-examples.html#security_iam_id-based-policy-examples-deny-inference).

        For troubleshooting some of the common errors you might encounter when using the `InvokeModel` API, see [Troubleshooting Amazon Bedrock API Error Codes](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html) in the Amazon Bedrock User Guide
      parameters:
      - name: Content-Type
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/MimeType'
      - name: Accept
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/MimeType'
      - name: modelId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InvokeModelIdentifier'
      - name: X-Amzn-Bedrock-Trace
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/Trace'
      - name: X-Amzn-Bedrock-GuardrailIdentifier
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/GuardrailIdentifier'
      - name: X-Amzn-Bedrock-GuardrailVersion
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/GuardrailVersion'
      - name: X-Amzn-Bedrock-PerformanceConfig-Latency
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/PerformanceConfigLatency'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  $ref: '#/components/schemas/Body'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because you do not have sufficient permissions to perform the requested action. For troubleshooting this error, see [AccessDeniedException](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-access-denied) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. For troubleshooting this error, see [InternalFailure](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-internal-failure) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '424':
          description: |-
            The request failed due to an error while processing the model.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelErrorException'
        '429':
          description: |-
            Your request was denied due to exceeding the account quotas for _Amazon Bedrock_. For troubleshooting this error, see [ThrottlingException](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-throttling-exception) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '408':
          description: |-
            The request took too long to process. Processing time exceeded the model timeout length.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelTimeoutException'
        '404':
          description: |-
            The specified resource ARN was not found. For troubleshooting this error, see [ResourceNotFound](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-resource-not-found) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by _Amazon Bedrock_. For troubleshooting this error, see [ValidationError](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-validation-error) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '503':
          description: |-
            The service isn't currently available. For troubleshooting this error, see [ServiceUnavailable](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-service-unavailable) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /model/{modelId}/invoke-with-bidirectional-stream:
    post:
      operationId: InvokeModelWithBidirectionalStream
      description: |-
        Invoke the specified Amazon Bedrock model to run inference using the bidirectional stream. The response is returned in a stream that remains open for 8 minutes. A single session can contain multiple prompts and responses from the model. The prompts to the model are provided as audio files and the model's responses are spoken back to the user and transcribed.

        It is possible for users to interrupt the model's response with a new prompt, which will halt the response speech. The model will retain contextual awareness of the conversation while pivoting to respond to the new prompt.
      parameters:
      - name: modelId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InvokeModelIdentifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  $ref: '#/components/schemas/InvokeModelWithBidirectionalStreamInput'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because you do not have sufficient permissions to perform the requested action. For troubleshooting this error, see [AccessDeniedException](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-access-denied) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. For troubleshooting this error, see [InternalFailure](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-internal-failure) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '424':
          description: |-
            An error occurred while streaming the response. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelStreamErrorException'
        '429':
          description: |-
            Your request was denied due to exceeding the account quotas for _Amazon Bedrock_. For troubleshooting this error, see [ThrottlingException](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-throttling-exception) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '408':
          description: |-
            The request took too long to process. Processing time exceeded the model timeout length.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelTimeoutException'
        '404':
          description: |-
            The specified resource ARN was not found. For troubleshooting this error, see [ResourceNotFound](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-resource-not-found) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by _Amazon Bedrock_. For troubleshooting this error, see [ValidationError](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-validation-error) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '503':
          description: |-
            The service isn't currently available. For troubleshooting this error, see [ServiceUnavailable](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-service-unavailable) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /model/{modelId}/invoke-with-response-stream:
    post:
      operationId: InvokeModelWithResponseStream
      description: |-
        Invoke the specified Amazon Bedrock model to run inference using the prompt and inference parameters provided in the request body. The response is returned in a stream.

        To see if a model supports streaming, call [GetFoundationModel](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_GetFoundationModel.html) and check the `responseStreamingSupported` field in the response.

        The CLI doesn't support streaming operations in Amazon Bedrock, including `InvokeModelWithResponseStream`.

        For example code, see _Invoke model with streaming code example_ in the _Amazon Bedrock User Guide_.

        This operation requires permissions to perform the `bedrock:InvokeModelWithResponseStream` action.

        To deny all inference access to resources that you specify in the modelId field, you need to deny access to the `bedrock:InvokeModel` and `bedrock:InvokeModelWithResponseStream` actions. Doing this also denies access to the resource through the Converse API actions ([Converse](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_runtime_Converse.html) and [ConverseStream](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_runtime_ConverseStream.html)). For more information see [Deny access for inference on specific models](https://docs.aws.amazon.com/bedrock/latest/userguide/security_iam_id-based-policy-examples.html#security_iam_id-based-policy-examples-deny-inference).

        For troubleshooting some of the common errors you might encounter when using the `InvokeModelWithResponseStream` API, see [Troubleshooting Amazon Bedrock API Error Codes](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html) in the Amazon Bedrock User Guide
      parameters:
      - name: Content-Type
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/MimeType'
      - name: X-Amzn-Bedrock-Accept
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/MimeType'
      - name: modelId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InvokeModelIdentifier'
      - name: X-Amzn-Bedrock-Trace
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/Trace'
      - name: X-Amzn-Bedrock-GuardrailIdentifier
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/GuardrailIdentifier'
      - name: X-Amzn-Bedrock-GuardrailVersion
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/GuardrailVersion'
      - name: X-Amzn-Bedrock-PerformanceConfig-Latency
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/PerformanceConfigLatency'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  $ref: '#/components/schemas/Body'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because you do not have sufficient permissions to perform the requested action. For troubleshooting this error, see [AccessDeniedException](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-access-denied) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. For troubleshooting this error, see [InternalFailure](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-internal-failure) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '424':
          description: |-
            An error occurred while streaming the response. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelStreamErrorException'
        '429':
          description: |-
            Your request was denied due to exceeding the account quotas for _Amazon Bedrock_. For troubleshooting this error, see [ThrottlingException](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-throttling-exception) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '408':
          description: |-
            The request took too long to process. Processing time exceeded the model timeout length.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelTimeoutException'
        '404':
          description: |-
            The specified resource ARN was not found. For troubleshooting this error, see [ResourceNotFound](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-resource-not-found) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by _Amazon Bedrock_. For troubleshooting this error, see [ValidationError](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-validation-error) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '503':
          description: |-
            The service isn't currently available. For troubleshooting this error, see [ServiceUnavailable](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-service-unavailable) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /async-invoke:
    get:
      operationId: ListAsyncInvokes
      description: |-
        Lists asynchronous invocations.
      parameters:
      - name: submitTimeAfter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: submitTimeBefore
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: statusEquals
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AsyncInvokeStatus'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: sortBy
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SortAsyncInvocationBy'
      - name: sortOrder
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SortOrder'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because you do not have sufficient permissions to perform the requested action. For troubleshooting this error, see [AccessDeniedException](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-access-denied) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. For troubleshooting this error, see [InternalFailure](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-internal-failure) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            Your request was denied due to exceeding the account quotas for _Amazon Bedrock_. For troubleshooting this error, see [ThrottlingException](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-throttling-exception) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by _Amazon Bedrock_. For troubleshooting this error, see [ValidationError](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-validation-error) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: StartAsyncInvoke
      description: |-
        Starts an asynchronous invocation.

        This operation requires permission for the `bedrock:InvokeModel` action.

        To deny all inference access to resources that you specify in the modelId field, you need to deny access to the `bedrock:InvokeModel` and `bedrock:InvokeModelWithResponseStream` actions. Doing this also denies access to the resource through the Converse API actions ([Converse](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_runtime_Converse.html) and [ConverseStream](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_runtime_ConverseStream.html)). For more information see [Deny access for inference on specific models](https://docs.aws.amazon.com/bedrock/latest/userguide/security_iam_id-based-policy-examples.html#security_iam_id-based-policy-examples-deny-inference).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientRequestToken:
                  $ref: '#/components/schemas/AsyncInvokeIdempotencyToken'
                modelId:
                  $ref: '#/components/schemas/AsyncInvokeIdentifier'
                modelInput:
                  $ref: '#/components/schemas/ModelInputPayload'
                outputDataConfig:
                  $ref: '#/components/schemas/AsyncInvokeOutputDataConfig'
                tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because you do not have sufficient permissions to perform the requested action. For troubleshooting this error, see [AccessDeniedException](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-access-denied) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by _Amazon Bedrock_. For troubleshooting this error, see [ValidationError](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-validation-error) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            An internal server error occurred. For troubleshooting this error, see [InternalFailure](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-internal-failure) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource ARN was not found. For troubleshooting this error, see [ResourceNotFound](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-resource-not-found) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service isn't currently available. For troubleshooting this error, see [ServiceUnavailable](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-service-unavailable) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            Your request was denied due to exceeding the account quotas for _Amazon Bedrock_. For troubleshooting this error, see [ThrottlingException](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-throttling-exception) in the Amazon Bedrock User Guide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
components:
  schemas:
    AccessDeniedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/NonBlankString'
      description: The request is denied because you do not have sufficient permissions
        to perform the requested action. For troubleshooting this error, see [AccessDeniedException](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-access-denied)
        in the Amazon Bedrock User Guide
    AccountId:
      type: string
      pattern: ^[0-9]{12}$
    AdditionalModelResponseFieldPaths:
      type: array
      items:
        type: string
    AnyToolChoice:
      type: object
      properties: {}
      description: 'The model must request at least one tool (no text is generated).
        For example, `{"any" : {}}`.'
    ApplyGuardrailRequest:
      type: object
      properties:
        guardrailIdentifier:
          allOf:
          - $ref: '#/components/schemas/GuardrailIdentifier'
          description: The guardrail identifier used in the request to apply the guardrail.
        guardrailVersion:
          allOf:
          - $ref: '#/components/schemas/GuardrailVersion'
          description: The guardrail version used in the request to apply the guardrail.
        source:
          allOf:
          - $ref: '#/components/schemas/GuardrailContentSource'
          description: The source of data used in the request to apply the guardrail.
        content:
          allOf:
          - $ref: '#/components/schemas/GuardrailContentBlockList'
          description: The content details used in the request to apply the guardrail.
        outputScope:
          allOf:
          - $ref: '#/components/schemas/GuardrailOutputScope'
          description: 'Specifies the scope of the output that you get in the response.
            Set to `FULL` to return the entire output, including any detected and
            non-detected entries in the response for enhanced debugging.


            Note that the full output scope doesn''t apply to word filters or regex
            in sensitive information filters. It does apply to all other filtering
            policies, including sensitive information with filters that can detect
            personally identifiable information (PII).'
      required:
      - guardrailIdentifier
      - guardrailVersion
      - source
      - content
    ApplyGuardrailResponse:
      type: object
      properties:
        usage:
          allOf:
          - $ref: '#/components/schemas/GuardrailUsage'
          description: The usage details in the response from the guardrail.
        action:
          allOf:
          - $ref: '#/components/schemas/GuardrailAction'
          description: The action taken in the response from the guardrail.
        actionReason:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The reason for the action taken when harmful content is detected.
        outputs:
          allOf:
          - $ref: '#/components/schemas/GuardrailOutputContentList'
          description: The output details in the response from the guardrail.
        assessments:
          allOf:
          - $ref: '#/components/schemas/GuardrailAssessmentList'
          description: The assessment details in the response from the guardrail.
        guardrailCoverage:
          allOf:
          - $ref: '#/components/schemas/GuardrailCoverage'
          description: The guardrail coverage details in the apply guardrail response.
      required:
      - usage
      - action
      - outputs
      - assessments
    AsyncInvokeArn:
      type: string
      pattern: ^arn:[a-z0-9\-]+:bedrock:[a-z0-9\-]*:[0-9]*:(provisioned-model|foundation-model)/.+$
      minLength: 1
      maxLength: 2048
    AsyncInvokeIdempotencyToken:
      type: string
      pattern: ^[!-~]*$
      minLength: 1
      maxLength: 256
    AsyncInvokeIdentifier:
      type: string
      pattern: ^[a-zA-Z_\.\-/0-9:]+$
      minLength: 1
      maxLength: 256
    AsyncInvokeMessage:
      type: string
      maxLength: 2048
    AsyncInvokeOutputDataConfig:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/AsyncInvokeS3OutputDataConfig'
        description: |-
          A storage location for the output data in an S3 bucket
      description: |-
        Asynchronous invocation output data settings.
    AsyncInvokeS3OutputDataConfig:
      type: object
      properties:
        s3Uri:
          allOf:
          - $ref: '#/components/schemas/S3Uri'
          description: An object URI starting with `s3://`.
        kmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKeyId'
          description: A KMS encryption key ID.
        bucketOwner:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: If the bucket belongs to another AWS account, specify that
            account's ID.
      required:
      - s3Uri
      description: Asynchronous invocation output data settings.
    AsyncInvokeStatus:
      type: string
      enum:
      - InProgress
      - Completed
      - Failed
    AsyncInvokeSummaries:
      type: array
      items:
        $ref: '#/components/schemas/AsyncInvokeSummary'
    AsyncInvokeSummary:
      type: object
      properties:
        invocationArn:
          allOf:
          - $ref: '#/components/schemas/InvocationArn'
          description: The invocation's ARN.
        modelArn:
          allOf:
          - $ref: '#/components/schemas/AsyncInvokeArn'
          description: The invoked model's ARN.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/AsyncInvokeIdempotencyToken'
          description: The invocation's idempotency token.
        status:
          allOf:
          - $ref: '#/components/schemas/AsyncInvokeStatus'
          description: The invocation's status.
        failureMessage:
          allOf:
          - $ref: '#/components/schemas/AsyncInvokeMessage'
          description: An error message.
        submitTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: When the invocation was submitted.
        lastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: When the invocation was last modified.
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: When the invocation ended.
        outputDataConfig:
          allOf:
          - $ref: '#/components/schemas/AsyncInvokeOutputDataConfig'
          description: The invocation's output data settings.
      required:
      - invocationArn
      - modelArn
      - submitTime
      - outputDataConfig
      description: A summary of an asynchronous invocation.
    AutoToolChoice:
      type: object
      properties: {}
      description: 'The Model automatically decides if a tool should be called or
        whether to generate text instead. For example, `{"auto" : {}}`.'
    BidirectionalInputPayloadPart:
      type: object
      properties:
        bytes:
          allOf:
          - $ref: '#/components/schemas/PartBody'
          description: The audio content for the bidirectional input.
      description: Payload content for the bidirectional input. The input is an audio
        stream.
    BidirectionalOutputPayloadPart:
      type: object
      properties:
        bytes:
          allOf:
          - $ref: '#/components/schemas/PartBody'
          description: The speech output of the bidirectional stream.
      description: Output from the bidirectional stream. The output is speech and
        a text transcription.
    Body:
      type: string
      format: byte
      maxLength: 25000000
      x-sensitive: true
    CachePointBlock:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/CachePointType'
          description: Specifies the type of cache point within the CachePointBlock.
      required:
      - type
      description: Defines a section of content to be cached for reuse in subsequent
        API calls.
    CachePointType:
      type: string
      enum:
      - default
    ConflictException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/NonBlankString'
      description: Error occurred because of a conflict while performing an operation.
    ContentBlock:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/String'
        description: |-
          Text to include in the message.
      - allOf:
        - $ref: '#/components/schemas/ImageBlock'
        description: |-
          Image to include in the message.

          This field is only supported by Anthropic Claude 3 models.
      - allOf:
        - $ref: '#/components/schemas/DocumentBlock'
        description: |-
          A document to include in the message.
      - allOf:
        - $ref: '#/components/schemas/VideoBlock'
        description: |-
          Video to include in the message.
      - allOf:
        - $ref: '#/components/schemas/ToolUseBlock'
        description: |-
          Information about a tool use request from a model.
      - allOf:
        - $ref: '#/components/schemas/ToolResultBlock'
        description: |-
          The result for a tool request that a model makes.
      - allOf:
        - $ref: '#/components/schemas/GuardrailConverseContentBlock'
        description: |-
          Contains the content to assess with the guardrail. If you don't specify `guardContent` in a call to the Converse API, the guardrail (if passed in the Converse API) assesses the entire message.

          For more information, see _Use a guardrail with the Converse API_ in the _Amazon Bedrock User Guide_.
      - allOf:
        - $ref: '#/components/schemas/CachePointBlock'
        description: |-
          CachePoint to include in the message.
      - allOf:
        - $ref: '#/components/schemas/ReasoningContentBlock'
        description: |-
          Contains content regarding the reasoning that is carried out by the model. Reasoning refers to a Chain of Thought (CoT) that the model generates to enhance the accuracy of its final response.
      description: |-
        A block of content for a message that you pass to, or receive from, a model with the [Converse](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_runtime_Converse.html) or [ConverseStream](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_runtime_ConverseStream.html) API operations.
    ContentBlockDelta:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/String'
        description: |-
          The content text.
      - allOf:
        - $ref: '#/components/schemas/ToolUseBlockDelta'
        description: |-
          Information about a tool that the model is requesting to use.
      - allOf:
        - $ref: '#/components/schemas/ReasoningContentBlockDelta'
        description: |-
          Contains content regarding the reasoning that is carried out by the model. Reasoning refers to a Chain of Thought (CoT) that the model generates to enhance the accuracy of its final response.
      description: |-
        A block of content in a streaming response.
    ContentBlockDeltaEvent:
      type: object
      properties:
        delta:
          allOf:
          - $ref: '#/components/schemas/ContentBlockDelta'
          description: The delta for a content block delta event.
        contentBlockIndex:
          allOf:
          - $ref: '#/components/schemas/NonNegativeInteger'
          description: The block index for a content block delta event.
      required:
      - delta
      - contentBlockIndex
      description: The content block delta event.
    ContentBlockStart:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/ToolUseBlockStart'
        description: |-
          Information about a tool that the model is requesting to use.
      description: |-
        Content block start information.
    ContentBlockStartEvent:
      type: object
      properties:
        start:
          allOf:
          - $ref: '#/components/schemas/ContentBlockStart'
          description: Start information about a content block start event.
        contentBlockIndex:
          allOf:
          - $ref: '#/components/schemas/NonNegativeInteger'
          description: The index for a content block start event.
      required:
      - start
      - contentBlockIndex
      description: Content block start event.
    ContentBlockStopEvent:
      type: object
      properties:
        contentBlockIndex:
          allOf:
          - $ref: '#/components/schemas/NonNegativeInteger'
          description: The index for a content block.
      required:
      - contentBlockIndex
      description: A content block stop event.
    ContentBlocks:
      type: array
      items:
        $ref: '#/components/schemas/ContentBlock'
    ConversationRole:
      type: string
      enum:
      - user
      - assistant
    ConversationalModelId:
      type: string
      pattern: ^(arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:(([0-9]{12}:custom-model/[a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}/[a-z0-9]{12})|(:foundation-model/[a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}([.:]?[a-z0-9-]{1,63}))|([0-9]{12}:imported-model/[a-z0-9]{12})|([0-9]{12}:provisioned-model/[a-z0-9]{12})|([0-9]{12}:(inference-profile|application-inference-profile)/[a-zA-Z0-9-:.]+)))|([a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}([.:]?[a-z0-9-]{1,63}))|(([0-9a-zA-Z][_-]?)+)|([a-zA-Z0-9-:.]+)|(^(arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:prompt/[0-9a-zA-Z]{10}(?::[0-9]{1,5})?))$|(^arn:aws:sagemaker:[a-z0-9-]+:[0-9]{12}:endpoint/[a-zA-Z0-9-]+$)|(^arn:aws(-[^:]+)?:bedrock:([0-9a-z-]{1,20}):([0-9]{12}):(default-)?prompt-router/[a-zA-Z0-9-:.]+$)$
      minLength: 1
      maxLength: 2048
    ConverseMetrics:
      type: object
      properties:
        latencyMs:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The latency of the call to `Converse`, in milliseconds.
      required:
      - latencyMs
      description: Metrics for a call to [Converse](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_runtime_Converse.html).
    ConverseOutput:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/Message'
        description: |-
          The message that the model generates.
      description: |-
        The output from a call to [Converse](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_runtime_Converse.html).
    ConverseRequest:
      type: object
      properties:
        modelId:
          allOf:
          - $ref: '#/components/schemas/ConversationalModelId'
          description: "Specifies the model or throughput with which to run inference,\
            \ or the prompt resource to use in inference. The value depends on the\
            \ resource that you use:\n\n  * If you use a base model, specify the model\
            \ ID or its ARN. For a list of model IDs for base models, see [Amazon\
            \ Bedrock base model IDs (on-demand throughput)](https://docs.aws.amazon.com/bedrock/latest/userguide/model-ids.html#model-ids-arns)\
            \ in the Amazon Bedrock User Guide.\n\n  * If you use an inference profile,\
            \ specify the inference profile ID or its ARN. For a list of inference\
            \ profile IDs, see [Supported Regions and models for cross-region inference](https://docs.aws.amazon.com/bedrock/latest/userguide/cross-region-inference-support.html)\
            \ in the Amazon Bedrock User Guide.\n\n  * If you use a provisioned model,\
            \ specify the ARN of the Provisioned Throughput. For more information,\
            \ see [Run inference using a Provisioned Throughput](https://docs.aws.amazon.com/bedrock/latest/userguide/prov-thru-use.html)\
            \ in the Amazon Bedrock User Guide.\n\n  * If you use a custom model,\
            \ first purchase Provisioned Throughput for it. Then specify the ARN of\
            \ the resulting provisioned model. For more information, see [Use a custom\
            \ model in Amazon Bedrock](https://docs.aws.amazon.com/bedrock/latest/userguide/model-customization-use.html)\
            \ in the Amazon Bedrock User Guide.\n\n  * To include a prompt that was\
            \ defined in [Prompt management](https://docs.aws.amazon.com/bedrock/latest/userguide/prompt-management.html),\
            \ specify the ARN of the prompt version to use.\n\nThe Converse API doesn't\
            \ support [imported models](https://docs.aws.amazon.com/bedrock/latest/userguide/model-customization-import-model.html)."
        messages:
          allOf:
          - $ref: '#/components/schemas/Messages'
          description: The messages that you want to send to the model.
        system:
          allOf:
          - $ref: '#/components/schemas/SystemContentBlocks'
          description: A prompt that provides instructions or context to the model
            about the task it should perform, or the persona it should adopt during
            the conversation.
        inferenceConfig:
          allOf:
          - $ref: '#/components/schemas/InferenceConfiguration'
          description: Inference parameters to pass to the model. `Converse` and `ConverseStream`
            support a base set of inference parameters. If you need to pass additional
            parameters that the model supports, use the `additionalModelRequestFields`
            request field.
        toolConfig:
          allOf:
          - $ref: '#/components/schemas/ToolConfiguration'
          description: 'Configuration information for the tools that the model can
            use when generating a response.


            For information about models that support tool use, see [Supported models
            and model features](https://docs.aws.amazon.com/bedrock/latest/userguide/conversation-inference.html#conversation-inference-supported-models-features).'
        guardrailConfig:
          allOf:
          - $ref: '#/components/schemas/GuardrailConfiguration'
          description: Configuration information for a guardrail that you want to
            use in the request. If you include `guardContent` blocks in the `content`
            field in the `messages` field, the guardrail operates only on those messages.
            If you include no `guardContent` blocks, the guardrail operates on all
            messages in the request body and in any included prompt resource.
        additionalModelRequestFields:
          allOf:
          - $ref: '#/components/schemas/Document'
          description: Additional inference parameters that the model supports, beyond
            the base set of inference parameters that `Converse` and `ConverseStream`
            support in the `inferenceConfig` field. For more information, see [Model
            parameters](https://docs.aws.amazon.com/bedrock/latest/userguide/model-parameters.html).
        promptVariables:
          allOf:
          - $ref: '#/components/schemas/PromptVariableMap'
          description: Contains a map of variables in a prompt from Prompt management
            to objects containing the values to fill in for them when running model
            invocation. This field is ignored if you don't specify a prompt resource
            in the `modelId` field.
        additionalModelResponseFieldPaths:
          allOf:
          - $ref: '#/components/schemas/AdditionalModelResponseFieldPaths'
          description: 'Additional model parameters field paths to return in the response.
            `Converse` and `ConverseStream` return the requested fields as a JSON
            Pointer object in the `additionalModelResponseFields` field. The following
            is example JSON for `additionalModelResponseFieldPaths`.


            `[ "/stop_sequence" ]`


            For information about the JSON Pointer syntax, see the [Internet Engineering
            Task Force (IETF)](https://datatracker.ietf.org/doc/html/rfc6901) documentation.


            `Converse` and `ConverseStream` reject an empty JSON Pointer or incorrectly
            structured JSON Pointer with a `400` error code. if the JSON Pointer is
            valid, but the requested field is not in the model response, it is ignored
            by `Converse`.'
        requestMetadata:
          allOf:
          - $ref: '#/components/schemas/RequestMetadata'
          description: Key-value pairs that you can use to filter invocation logs.
        performanceConfig:
          allOf:
          - $ref: '#/components/schemas/PerformanceConfiguration'
          description: Model performance settings for the request.
      required:
      - modelId
    ConverseResponse:
      type: object
      properties:
        output:
          allOf:
          - $ref: '#/components/schemas/ConverseOutput'
          description: The result from the call to `Converse`.
        stopReason:
          allOf:
          - $ref: '#/components/schemas/StopReason'
          description: The reason why the model stopped generating output.
        usage:
          allOf:
          - $ref: '#/components/schemas/TokenUsage'
          description: The total number of tokens used in the call to `Converse`.
            The total includes the tokens input to the model and the tokens generated
            by the model.
        metrics:
          allOf:
          - $ref: '#/components/schemas/ConverseMetrics'
          description: Metrics for the call to `Converse`.
        additionalModelResponseFields:
          allOf:
          - $ref: '#/components/schemas/Document'
          description: Additional fields in the response that are unique to the model.
        trace:
          allOf:
          - $ref: '#/components/schemas/ConverseTrace'
          description: A trace object that contains information about the Guardrail
            behavior.
        performanceConfig:
          allOf:
          - $ref: '#/components/schemas/PerformanceConfiguration'
          description: Model performance settings for the request.
      required:
      - output
      - stopReason
      - usage
      - metrics
    ConverseStreamMetadataEvent:
      type: object
      properties:
        usage:
          allOf:
          - $ref: '#/components/schemas/TokenUsage'
          description: Usage information for the conversation stream event.
        metrics:
          allOf:
          - $ref: '#/components/schemas/ConverseStreamMetrics'
          description: The metrics for the conversation stream metadata event.
        trace:
          allOf:
          - $ref: '#/components/schemas/ConverseStreamTrace'
          description: The trace object in the response from [ConverseStream](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_runtime_ConverseStream.html)
            that contains information about the guardrail behavior.
        performanceConfig:
          allOf:
          - $ref: '#/components/schemas/PerformanceConfiguration'
          description: Model performance configuration metadata for the conversation
            stream event.
      required:
      - usage
      - metrics
      description: A conversation stream metadata event.
    ConverseStreamMetrics:
      type: object
      properties:
        latencyMs:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The latency for the streaming request, in milliseconds.
      required:
      - latencyMs
      description: Metrics for the stream.
    ConverseStreamOutput:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/MessageStartEvent'
        description: |-
          Message start information.
      - allOf:
        - $ref: '#/components/schemas/ContentBlockStartEvent'
        description: |-
          Start information for a content block.
      - allOf:
        - $ref: '#/components/schemas/ContentBlockDeltaEvent'
        description: |-
          The messages output content block delta.
      - allOf:
        - $ref: '#/components/schemas/ContentBlockStopEvent'
        description: |-
          Stop information for a content block.
      - allOf:
        - $ref: '#/components/schemas/MessageStopEvent'
        description: |-
          Message stop information.
      - allOf:
        - $ref: '#/components/schemas/ConverseStreamMetadataEvent'
        description: |-
          Metadata for the converse output stream.
      - allOf:
        - $ref: '#/components/schemas/InternalServerException'
        description: |-
          An internal server error occurred. Retry your request.
      - allOf:
        - $ref: '#/components/schemas/ModelStreamErrorException'
        description: |-
          A streaming error occurred. Retry your request.
      - allOf:
        - $ref: '#/components/schemas/ValidationException'
        description: |-
          The input fails to satisfy the constraints specified by _Amazon Bedrock_. For troubleshooting this error, see [ValidationError](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-validation-error) in the Amazon Bedrock User Guide
      - allOf:
        - $ref: '#/components/schemas/ThrottlingException'
        description: |-
          Your request was denied due to exceeding the account quotas for _Amazon Bedrock_. For troubleshooting this error, see [ThrottlingException](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-throttling-exception) in the Amazon Bedrock User Guide
      - allOf:
        - $ref: '#/components/schemas/ServiceUnavailableException'
        description: |-
          The service isn't currently available. For troubleshooting this error, see [ServiceUnavailable](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-service-unavailable) in the Amazon Bedrock User Guide
      description: |-
        The messages output stream
    ConverseStreamRequest:
      type: object
      properties:
        modelId:
          allOf:
          - $ref: '#/components/schemas/ConversationalModelId'
          description: "Specifies the model or throughput with which to run inference,\
            \ or the prompt resource to use in inference. The value depends on the\
            \ resource that you use:\n\n  * If you use a base model, specify the model\
            \ ID or its ARN. For a list of model IDs for base models, see [Amazon\
            \ Bedrock base model IDs (on-demand throughput)](https://docs.aws.amazon.com/bedrock/latest/userguide/model-ids.html#model-ids-arns)\
            \ in the Amazon Bedrock User Guide.\n\n  * If you use an inference profile,\
            \ specify the inference profile ID or its ARN. For a list of inference\
            \ profile IDs, see [Supported Regions and models for cross-region inference](https://docs.aws.amazon.com/bedrock/latest/userguide/cross-region-inference-support.html)\
            \ in the Amazon Bedrock User Guide.\n\n  * If you use a provisioned model,\
            \ specify the ARN of the Provisioned Throughput. For more information,\
            \ see [Run inference using a Provisioned Throughput](https://docs.aws.amazon.com/bedrock/latest/userguide/prov-thru-use.html)\
            \ in the Amazon Bedrock User Guide.\n\n  * If you use a custom model,\
            \ first purchase Provisioned Throughput for it. Then specify the ARN of\
            \ the resulting provisioned model. For more information, see [Use a custom\
            \ model in Amazon Bedrock](https://docs.aws.amazon.com/bedrock/latest/userguide/model-customization-use.html)\
            \ in the Amazon Bedrock User Guide.\n\n  * To include a prompt that was\
            \ defined in [Prompt management](https://docs.aws.amazon.com/bedrock/latest/userguide/prompt-management.html),\
            \ specify the ARN of the prompt version to use.\n\nThe Converse API doesn't\
            \ support [imported models](https://docs.aws.amazon.com/bedrock/latest/userguide/model-customization-import-model.html)."
        messages:
          allOf:
          - $ref: '#/components/schemas/Messages'
          description: The messages that you want to send to the model.
        system:
          allOf:
          - $ref: '#/components/schemas/SystemContentBlocks'
          description: A prompt that provides instructions or context to the model
            about the task it should perform, or the persona it should adopt during
            the conversation.
        inferenceConfig:
          allOf:
          - $ref: '#/components/schemas/InferenceConfiguration'
          description: Inference parameters to pass to the model. `Converse` and `ConverseStream`
            support a base set of inference parameters. If you need to pass additional
            parameters that the model supports, use the `additionalModelRequestFields`
            request field.
        toolConfig:
          allOf:
          - $ref: '#/components/schemas/ToolConfiguration'
          description: 'Configuration information for the tools that the model can
            use when generating a response.


            For information about models that support streaming tool use, see [Supported
            models and model features](https://docs.aws.amazon.com/bedrock/latest/userguide/conversation-inference.html#conversation-inference-supported-models-features).'
        guardrailConfig:
          allOf:
          - $ref: '#/components/schemas/GuardrailStreamConfiguration'
          description: Configuration information for a guardrail that you want to
            use in the request. If you include `guardContent` blocks in the `content`
            field in the `messages` field, the guardrail operates only on those messages.
            If you include no `guardContent` blocks, the guardrail operates on all
            messages in the request body and in any included prompt resource.
        additionalModelRequestFields:
          allOf:
          - $ref: '#/components/schemas/Document'
          description: Additional inference parameters that the model supports, beyond
            the base set of inference parameters that `Converse` and `ConverseStream`
            support in the `inferenceConfig` field. For more information, see [Model
            parameters](https://docs.aws.amazon.com/bedrock/latest/userguide/model-parameters.html).
        promptVariables:
          allOf:
          - $ref: '#/components/schemas/PromptVariableMap'
          description: Contains a map of variables in a prompt from Prompt management
            to objects containing the values to fill in for them when running model
            invocation. This field is ignored if you don't specify a prompt resource
            in the `modelId` field.
        additionalModelResponseFieldPaths:
          allOf:
          - $ref: '#/components/schemas/AdditionalModelResponseFieldPaths'
          description: 'Additional model parameters field paths to return in the response.
            `Converse` and `ConverseStream` return the requested fields as a JSON
            Pointer object in the `additionalModelResponseFields` field. The following
            is example JSON for `additionalModelResponseFieldPaths`.


            `[ "/stop_sequence" ]`


            For information about the JSON Pointer syntax, see the [Internet Engineering
            Task Force (IETF)](https://datatracker.ietf.org/doc/html/rfc6901) documentation.


            `Converse` and `ConverseStream` reject an empty JSON Pointer or incorrectly
            structured JSON Pointer with a `400` error code. if the JSON Pointer is
            valid, but the requested field is not in the model response, it is ignored
            by `Converse`.'
        requestMetadata:
          allOf:
          - $ref: '#/components/schemas/RequestMetadata'
          description: Key-value pairs that you can use to filter invocation logs.
        performanceConfig:
          allOf:
          - $ref: '#/components/schemas/PerformanceConfiguration'
          description: Model performance settings for the request.
      required:
      - modelId
    ConverseStreamResponse:
      type: object
      properties:
        stream:
          allOf:
          - $ref: '#/components/schemas/ConverseStreamOutput'
          description: The output stream that the model generated.
    ConverseStreamTrace:
      type: object
      properties:
        guardrail:
          allOf:
          - $ref: '#/components/schemas/GuardrailTraceAssessment'
          description: The guardrail trace object.
        promptRouter:
          allOf:
          - $ref: '#/components/schemas/PromptRouterTrace'
          description: The request's prompt router.
      description: The trace object in a response from [ConverseStream](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_runtime_ConverseStream.html).
        Currently, you can only trace guardrails.
    ConverseTrace:
      type: object
      properties:
        guardrail:
          allOf:
          - $ref: '#/components/schemas/GuardrailTraceAssessment'
          description: The guardrail trace object.
        promptRouter:
          allOf:
          - $ref: '#/components/schemas/PromptRouterTrace'
          description: The request's prompt router.
      description: The trace object in a response from [Converse](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_runtime_Converse.html).
        Currently, you can only trace guardrails.
    DocumentBlock:
      type: object
      properties:
        format:
          allOf:
          - $ref: '#/components/schemas/DocumentFormat'
          description: The format of a document, or its extension.
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: "A name for the document. The name can only contain the following\
            \ characters:\n\n  * Alphanumeric characters\n\n  * Whitespace characters\
            \ (no more than one in a row)\n\n  * Hyphens\n\n  * Parentheses\n\n  *\
            \ Square brackets\n\nThis field is vulnerable to prompt injections, because\
            \ the model might inadvertently interpret it as instructions. Therefore,\
            \ we recommend that you specify a neutral name."
        source:
          allOf:
          - $ref: '#/components/schemas/DocumentSource'
          description: Contains the content of the document.
      required:
      - format
      - name
      - source
      description: A document to include in a message.
    DocumentFormat:
      type: string
      enum:
      - pdf
      - csv
      - doc
      - docx
      - xls
      - xlsx
      - html
      - txt
      - md
    DocumentSource:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/Blob'
        description: |-
          The raw bytes for the document. If you use an Amazon Web Services SDK, you don't need to encode the bytes in base64.
      - allOf:
        - $ref: '#/components/schemas/S3Location'
        description: |-
          The location of a document object in an Amazon S3 bucket. To see which models support S3 uploads, see [Supported models and features for Converse](https://docs.aws.amazon.com/bedrock/latest/userguide/conversation-inference-supported-models-features.html).
      description: |-
        Contains the content of a document.
    GetAsyncInvokeRequest:
      type: object
      properties:
        invocationArn:
          allOf:
          - $ref: '#/components/schemas/InvocationArn'
          description: The invocation's ARN.
      required:
      - invocationArn
    GetAsyncInvokeResponse:
      type: object
      properties:
        invocationArn:
          allOf:
          - $ref: '#/components/schemas/InvocationArn'
          description: The invocation's ARN.
        modelArn:
          allOf:
          - $ref: '#/components/schemas/AsyncInvokeArn'
          description: The invocation's model ARN.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/AsyncInvokeIdempotencyToken'
          description: The invocation's idempotency token.
        status:
          allOf:
          - $ref: '#/components/schemas/AsyncInvokeStatus'
          description: The invocation's status.
        failureMessage:
          allOf:
          - $ref: '#/components/schemas/AsyncInvokeMessage'
          description: An error message.
        submitTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: When the invocation request was submitted.
        lastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The invocation's last modified time.
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: When the invocation ended.
        outputDataConfig:
          allOf:
          - $ref: '#/components/schemas/AsyncInvokeOutputDataConfig'
          description: Output data settings.
      required:
      - invocationArn
      - modelArn
      - status
      - submitTime
      - outputDataConfig
    GuardrailAction:
      type: string
      enum:
      - NONE
      - GUARDRAIL_INTERVENED
    GuardrailAssessment:
      type: object
      properties:
        topicPolicy:
          allOf:
          - $ref: '#/components/schemas/GuardrailTopicPolicyAssessment'
          description: The topic policy.
        contentPolicy:
          allOf:
          - $ref: '#/components/schemas/GuardrailContentPolicyAssessment'
          description: The content policy.
        wordPolicy:
          allOf:
          - $ref: '#/components/schemas/GuardrailWordPolicyAssessment'
          description: The word policy.
        sensitiveInformationPolicy:
          allOf:
          - $ref: '#/components/schemas/GuardrailSensitiveInformationPolicyAssessment'
          description: The sensitive information policy.
        contextualGroundingPolicy:
          allOf:
          - $ref: '#/components/schemas/GuardrailContextualGroundingPolicyAssessment'
          description: The contextual grounding policy used for the guardrail assessment.
        invocationMetrics:
          allOf:
          - $ref: '#/components/schemas/GuardrailInvocationMetrics'
          description: The invocation metrics for the guardrail assessment.
      description: A behavior assessment of the guardrail policies used in a call
        to the Converse API.
    GuardrailAssessmentList:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailAssessment'
    GuardrailAssessmentListMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/GuardrailAssessmentList'
    GuardrailAssessmentMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/GuardrailAssessment'
    GuardrailConfiguration:
      type: object
      properties:
        guardrailIdentifier:
          allOf:
          - $ref: '#/components/schemas/GuardrailIdentifier'
          description: The identifier for the guardrail.
        guardrailVersion:
          allOf:
          - $ref: '#/components/schemas/GuardrailVersion'
          description: The version of the guardrail.
        trace:
          allOf:
          - $ref: '#/components/schemas/GuardrailTrace'
          description: The trace behavior for the guardrail.
      required:
      - guardrailIdentifier
      - guardrailVersion
      description: Configuration information for a guardrail that you use with the
        [Converse](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_runtime_Converse.html)
        operation.
    GuardrailContentBlock:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/GuardrailTextBlock'
        description: |-
          Text within content block to be evaluated by the guardrail.
      - allOf:
        - $ref: '#/components/schemas/GuardrailImageBlock'
        description: |-
          Image within guardrail content block to be evaluated by the guardrail.
      description: |-
        The content block to be evaluated by the guardrail.
    GuardrailContentBlockList:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailContentBlock'
    GuardrailContentFilter:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/GuardrailContentFilterType'
          description: The guardrail type.
        confidence:
          allOf:
          - $ref: '#/components/schemas/GuardrailContentFilterConfidence'
          description: The guardrail confidence.
        filterStrength:
          allOf:
          - $ref: '#/components/schemas/GuardrailContentFilterStrength'
          description: The filter strength setting for the guardrail content filter.
        action:
          allOf:
          - $ref: '#/components/schemas/GuardrailContentPolicyAction'
          description: The guardrail action.
        detected:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether content that breaches the guardrail configuration
            is detected.
      required:
      - type
      - confidence
      - action
      description: The content filter for a guardrail.
    GuardrailContentFilterConfidence:
      type: string
      enum:
      - NONE
      - LOW
      - MEDIUM
      - HIGH
    GuardrailContentFilterList:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailContentFilter'
    GuardrailContentFilterStrength:
      type: string
      enum:
      - NONE
      - LOW
      - MEDIUM
      - HIGH
    GuardrailContentFilterType:
      type: string
      enum:
      - INSULTS
      - HATE
      - SEXUAL
      - VIOLENCE
      - MISCONDUCT
      - PROMPT_ATTACK
    GuardrailContentPolicyAction:
      type: string
      enum:
      - BLOCKED
      - NONE
    GuardrailContentPolicyAssessment:
      type: object
      properties:
        filters:
          allOf:
          - $ref: '#/components/schemas/GuardrailContentFilterList'
          description: The content policy filters.
      required:
      - filters
      description: An assessment of a content policy for a guardrail.
    GuardrailContentPolicyImageUnitsProcessed:
      type: integer
    GuardrailContentPolicyUnitsProcessed:
      type: integer
    GuardrailContentQualifier:
      type: string
      enum:
      - grounding_source
      - query
      - guard_content
    GuardrailContentQualifierList:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailContentQualifier'
    GuardrailContentSource:
      type: string
      enum:
      - INPUT
      - OUTPUT
    GuardrailContextualGroundingFilter:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/GuardrailContextualGroundingFilterType'
          description: The contextual grounding filter type.
        threshold:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The threshold used by contextual grounding filter to determine
            whether the content is grounded or not.
        score:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The score generated by contextual grounding filter.
        action:
          allOf:
          - $ref: '#/components/schemas/GuardrailContextualGroundingPolicyAction'
          description: The action performed by the guardrails contextual grounding
            filter.
        detected:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether content that fails the contextual grounding
            evaluation (grounding or relevance score less than the corresponding threshold)
            was detected.
      required:
      - type
      - threshold
      - score
      - action
      description: The details for the guardrails contextual grounding filter.
    GuardrailContextualGroundingFilterType:
      type: string
      enum:
      - GROUNDING
      - RELEVANCE
    GuardrailContextualGroundingFilters:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailContextualGroundingFilter'
    GuardrailContextualGroundingPolicyAction:
      type: string
      enum:
      - BLOCKED
      - NONE
    GuardrailContextualGroundingPolicyAssessment:
      type: object
      properties:
        filters:
          allOf:
          - $ref: '#/components/schemas/GuardrailContextualGroundingFilters'
          description: The filter details for the guardrails contextual grounding
            filter.
      description: The policy assessment details for the guardrails contextual grounding
        filter.
    GuardrailContextualGroundingPolicyUnitsProcessed:
      type: integer
    GuardrailConverseContentBlock:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/GuardrailConverseTextBlock'
        description: |-
          The text to guard.
      - allOf:
        - $ref: '#/components/schemas/GuardrailConverseImageBlock'
        description: |-
          Image within converse content block to be evaluated by the guardrail.
      description: |-
        A content block for selective guarding with the [Converse](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_runtime_Converse.html) or [ConverseStream](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_runtime_ConverseStream.html) API operations.
    GuardrailConverseContentQualifier:
      type: string
      enum:
      - grounding_source
      - query
      - guard_content
    GuardrailConverseContentQualifierList:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailConverseContentQualifier'
    GuardrailConverseImageBlock:
      type: object
      properties:
        format:
          allOf:
          - $ref: '#/components/schemas/GuardrailConverseImageFormat'
          description: The format details for the image type of the guardrail converse
            image block.
        source:
          allOf:
          - $ref: '#/components/schemas/GuardrailConverseImageSource'
          description: The image source (image bytes) of the guardrail converse image
            block.
      required:
      - format
      - source
      description: An image block that contains images that you want to assess with
        a guardrail.
    GuardrailConverseImageFormat:
      type: string
      enum:
      - png
      - jpeg
    GuardrailConverseImageSource:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/Blob'
        description: |-
          The raw image bytes for the image.
      description: |-
        The image source (image bytes) of the guardrail converse image source.
      x-sensitive: true
    GuardrailConverseTextBlock:
      type: object
      properties:
        text:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The text that you want to guard.
        qualifiers:
          allOf:
          - $ref: '#/components/schemas/GuardrailConverseContentQualifierList'
          description: The qualifier details for the guardrails contextual grounding
            filter.
      required:
      - text
      description: A text block that contains text that you want to assess with a
        guardrail. For more information, see GuardrailConverseContentBlock.
    GuardrailCoverage:
      type: object
      properties:
        textCharacters:
          allOf:
          - $ref: '#/components/schemas/GuardrailTextCharactersCoverage'
          description: The text characters of the guardrail coverage details.
        images:
          allOf:
          - $ref: '#/components/schemas/GuardrailImageCoverage'
          description: The guardrail coverage for images (the number of images that
            guardrails guarded).
      description: The action of the guardrail coverage details.
    GuardrailCustomWord:
      type: object
      properties:
        match:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The match for the custom word.
        action:
          allOf:
          - $ref: '#/components/schemas/GuardrailWordPolicyAction'
          description: The action for the custom word.
        detected:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether custom word content that breaches the guardrail
            configuration is detected.
      required:
      - match
      - action
      description: A custom word configured in a guardrail.
    GuardrailCustomWordList:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailCustomWord'
    GuardrailIdentifier:
      type: string
      pattern: ^(([a-z0-9]+)|(arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:guardrail/[a-z0-9]+))$
      maxLength: 2048
    GuardrailImageBlock:
      type: object
      properties:
        format:
          allOf:
          - $ref: '#/components/schemas/GuardrailImageFormat'
          description: The format details for the file type of the image blocked by
            the guardrail.
        source:
          allOf:
          - $ref: '#/components/schemas/GuardrailImageSource'
          description: The image source (image bytes) details of the image blocked
            by the guardrail.
      required:
      - format
      - source
      description: Contain an image which user wants guarded. This block is accepted
        by the guardrails independent API.
    GuardrailImageCoverage:
      type: object
      properties:
        guarded:
          allOf:
          - $ref: '#/components/schemas/ImagesGuarded'
          description: The count (integer) of images guardrails guarded.
        total:
          allOf:
          - $ref: '#/components/schemas/ImagesTotal'
          description: Represents the total number of images (integer) that were in
            the request (guarded and unguarded).
      description: The details of the guardrail image coverage.
    GuardrailImageFormat:
      type: string
      enum:
      - png
      - jpeg
    GuardrailImageSource:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/Blob'
        description: |-
          The bytes details of the guardrail image source. Object used in independent api.
      description: |-
        The image source (image bytes) of the guardrail image source. Object used in independent api.
      x-sensitive: true
    GuardrailInvocationMetrics:
      type: object
      properties:
        guardrailProcessingLatency:
          allOf:
          - $ref: '#/components/schemas/GuardrailProcessingLatency'
          description: The processing latency details for the guardrail invocation
            metrics.
        usage:
          allOf:
          - $ref: '#/components/schemas/GuardrailUsage'
          description: The usage details for the guardrail invocation metrics.
        guardrailCoverage:
          allOf:
          - $ref: '#/components/schemas/GuardrailCoverage'
          description: The coverage details for the guardrail invocation metrics.
      description: The invocation metrics for the guardrail.
    GuardrailManagedWord:
      type: object
      properties:
        match:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The match for the managed word.
        type:
          allOf:
          - $ref: '#/components/schemas/GuardrailManagedWordType'
          description: The type for the managed word.
        action:
          allOf:
          - $ref: '#/components/schemas/GuardrailWordPolicyAction'
          description: The action for the managed word.
        detected:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether managed word content that breaches the guardrail
            configuration is detected.
      required:
      - match
      - type
      - action
      description: A managed word configured in a guardrail.
    GuardrailManagedWordList:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailManagedWord'
    GuardrailManagedWordType:
      type: string
      enum:
      - PROFANITY
    GuardrailOutputContent:
      type: object
      properties:
        text:
          allOf:
          - $ref: '#/components/schemas/GuardrailOutputText'
          description: The specific text for the output content produced by the guardrail.
      description: The output content produced by the guardrail.
    GuardrailOutputContentList:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailOutputContent'
    GuardrailOutputScope:
      type: string
      enum:
      - INTERVENTIONS
      - FULL
    GuardrailOutputText:
      type: string
    GuardrailPiiEntityFilter:
      type: object
      properties:
        match:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The PII entity filter match.
        type:
          allOf:
          - $ref: '#/components/schemas/GuardrailPiiEntityType'
          description: The PII entity filter type.
        action:
          allOf:
          - $ref: '#/components/schemas/GuardrailSensitiveInformationPolicyAction'
          description: The PII entity filter action.
        detected:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether personally identifiable information (PII)
            that breaches the guardrail configuration is detected.
      required:
      - match
      - type
      - action
      description: A Personally Identifiable Information (PII) entity configured in
        a guardrail.
    GuardrailPiiEntityFilterList:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailPiiEntityFilter'
    GuardrailPiiEntityType:
      type: string
      enum:
      - ADDRESS
      - AGE
      - AWS_ACCESS_KEY
      - AWS_SECRET_KEY
      - CA_HEALTH_NUMBER
      - CA_SOCIAL_INSURANCE_NUMBER
      - CREDIT_DEBIT_CARD_CVV
      - CREDIT_DEBIT_CARD_EXPIRY
      - CREDIT_DEBIT_CARD_NUMBER
      - DRIVER_ID
      - EMAIL
      - INTERNATIONAL_BANK_ACCOUNT_NUMBER
      - IP_ADDRESS
      - LICENSE_PLATE
      - MAC_ADDRESS
      - NAME
      - PASSWORD
      - PHONE
      - PIN
      - SWIFT_CODE
      - UK_NATIONAL_HEALTH_SERVICE_NUMBER
      - UK_NATIONAL_INSURANCE_NUMBER
      - UK_UNIQUE_TAXPAYER_REFERENCE_NUMBER
      - URL
      - USERNAME
      - US_BANK_ACCOUNT_NUMBER
      - US_BANK_ROUTING_NUMBER
      - US_INDIVIDUAL_TAX_IDENTIFICATION_NUMBER
      - US_PASSPORT_NUMBER
      - US_SOCIAL_SECURITY_NUMBER
      - VEHICLE_IDENTIFICATION_NUMBER
    GuardrailProcessingLatency:
      type: integer
      format: int64
    GuardrailRegexFilter:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The regex filter name.
        match:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The regesx filter match.
        regex:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The regex query.
        action:
          allOf:
          - $ref: '#/components/schemas/GuardrailSensitiveInformationPolicyAction'
          description: The region filter action.
        detected:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether custom regex entities that breach the guardrail
            configuration are detected.
      required:
      - action
      description: A Regex filter configured in a guardrail.
    GuardrailRegexFilterList:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailRegexFilter'
    GuardrailSensitiveInformationPolicyAction:
      type: string
      enum:
      - ANONYMIZED
      - BLOCKED
      - NONE
    GuardrailSensitiveInformationPolicyAssessment:
      type: object
      properties:
        piiEntities:
          allOf:
          - $ref: '#/components/schemas/GuardrailPiiEntityFilterList'
          description: The PII entities in the assessment.
        regexes:
          allOf:
          - $ref: '#/components/schemas/GuardrailRegexFilterList'
          description: The regex queries in the assessment.
      required:
      - piiEntities
      - regexes
      description: The assessment for aPersonally Identifiable Information (PII) policy.
    GuardrailSensitiveInformationPolicyFreeUnitsProcessed:
      type: integer
    GuardrailSensitiveInformationPolicyUnitsProcessed:
      type: integer
    GuardrailStreamConfiguration:
      type: object
      properties:
        guardrailIdentifier:
          allOf:
          - $ref: '#/components/schemas/GuardrailIdentifier'
          description: The identifier for the guardrail.
        guardrailVersion:
          allOf:
          - $ref: '#/components/schemas/GuardrailVersion'
          description: The version of the guardrail.
        trace:
          allOf:
          - $ref: '#/components/schemas/GuardrailTrace'
          description: The trace behavior for the guardrail.
        streamProcessingMode:
          allOf:
          - $ref: '#/components/schemas/GuardrailStreamProcessingMode'
          description: 'The processing mode.


            The processing mode. For more information, see _Configure streaming response
            behavior_ in the _Amazon Bedrock User Guide_.'
      required:
      - guardrailIdentifier
      - guardrailVersion
      description: Configuration information for a guardrail that you use with the
        ConverseStream action.
    GuardrailStreamProcessingMode:
      type: string
      enum:
      - sync
      - async
    GuardrailTextBlock:
      type: object
      properties:
        text:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The input text details to be evaluated by the guardrail.
        qualifiers:
          allOf:
          - $ref: '#/components/schemas/GuardrailContentQualifierList'
          description: The qualifiers describing the text block.
      required:
      - text
      description: The text block to be evaluated by the guardrail.
    GuardrailTextCharactersCoverage:
      type: object
      properties:
        guarded:
          allOf:
          - $ref: '#/components/schemas/TextCharactersGuarded'
          description: The text characters that were guarded by the guardrail coverage.
        total:
          allOf:
          - $ref: '#/components/schemas/TextCharactersTotal'
          description: The total text characters by the guardrail coverage.
      description: The guardrail coverage for the text characters.
    GuardrailTopic:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name for the guardrail.
        type:
          allOf:
          - $ref: '#/components/schemas/GuardrailTopicType'
          description: The type behavior that the guardrail should perform when the
            model detects the topic.
        action:
          allOf:
          - $ref: '#/components/schemas/GuardrailTopicPolicyAction'
          description: The action the guardrail should take when it intervenes on
            a topic.
        detected:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether topic content that breaches the guardrail
            configuration is detected.
      required:
      - name
      - type
      - action
      description: Information about a topic guardrail.
    GuardrailTopicList:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailTopic'
    GuardrailTopicPolicyAction:
      type: string
      enum:
      - BLOCKED
      - NONE
    GuardrailTopicPolicyAssessment:
      type: object
      properties:
        topics:
          allOf:
          - $ref: '#/components/schemas/GuardrailTopicList'
          description: The topics in the assessment.
      required:
      - topics
      description: A behavior assessment of a topic policy.
    GuardrailTopicPolicyUnitsProcessed:
      type: integer
    GuardrailTopicType:
      type: string
      enum:
      - DENY
    GuardrailTrace:
      type: string
      enum:
      - enabled
      - disabled
      - enabled_full
    GuardrailTraceAssessment:
      type: object
      properties:
        modelOutput:
          allOf:
          - $ref: '#/components/schemas/ModelOutputs'
          description: The output from the model.
        inputAssessment:
          allOf:
          - $ref: '#/components/schemas/GuardrailAssessmentMap'
          description: The input assessment.
        outputAssessments:
          allOf:
          - $ref: '#/components/schemas/GuardrailAssessmentListMap'
          description: the output assessments.
        actionReason:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Provides the reason for the action taken when harmful content
            is detected.
      description: A Top level guardrail trace object. For more information, see ConverseTrace.
    GuardrailUsage:
      type: object
      properties:
        topicPolicyUnits:
          allOf:
          - $ref: '#/components/schemas/GuardrailTopicPolicyUnitsProcessed'
          description: The topic policy units processed by the guardrail.
        contentPolicyUnits:
          allOf:
          - $ref: '#/components/schemas/GuardrailContentPolicyUnitsProcessed'
          description: The content policy units processed by the guardrail.
        wordPolicyUnits:
          allOf:
          - $ref: '#/components/schemas/GuardrailWordPolicyUnitsProcessed'
          description: The word policy units processed by the guardrail.
        sensitiveInformationPolicyUnits:
          allOf:
          - $ref: '#/components/schemas/GuardrailSensitiveInformationPolicyUnitsProcessed'
          description: The sensitive information policy units processed by the guardrail.
        sensitiveInformationPolicyFreeUnits:
          allOf:
          - $ref: '#/components/schemas/GuardrailSensitiveInformationPolicyFreeUnitsProcessed'
          description: The sensitive information policy free units processed by the
            guardrail.
        contextualGroundingPolicyUnits:
          allOf:
          - $ref: '#/components/schemas/GuardrailContextualGroundingPolicyUnitsProcessed'
          description: The contextual grounding policy units processed by the guardrail.
        contentPolicyImageUnits:
          allOf:
          - $ref: '#/components/schemas/GuardrailContentPolicyImageUnitsProcessed'
          description: The content policy image units processed by the guardrail.
      required:
      - topicPolicyUnits
      - contentPolicyUnits
      - wordPolicyUnits
      - sensitiveInformationPolicyUnits
      - sensitiveInformationPolicyFreeUnits
      - contextualGroundingPolicyUnits
      description: The details on the use of the guardrail.
    GuardrailVersion:
      type: string
      pattern: ^(([1-9][0-9]{0,7})|(DRAFT))$
    GuardrailWordPolicyAction:
      type: string
      enum:
      - BLOCKED
      - NONE
    GuardrailWordPolicyAssessment:
      type: object
      properties:
        customWords:
          allOf:
          - $ref: '#/components/schemas/GuardrailCustomWordList'
          description: Custom words in the assessment.
        managedWordLists:
          allOf:
          - $ref: '#/components/schemas/GuardrailManagedWordList'
          description: Managed word lists in the assessment.
      required:
      - customWords
      - managedWordLists
      description: The word policy assessment.
    GuardrailWordPolicyUnitsProcessed:
      type: integer
    ImageBlock:
      type: object
      properties:
        format:
          allOf:
          - $ref: '#/components/schemas/ImageFormat'
          description: The format of the image.
        source:
          allOf:
          - $ref: '#/components/schemas/ImageSource'
          description: The source for the image.
      required:
      - format
      - source
      description: Image content for a message.
    ImageFormat:
      type: string
      enum:
      - png
      - jpeg
      - gif
      - webp
    ImageSource:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/Blob'
        description: |-
          The raw image bytes for the image. If you use an AWS SDK, you don't need to encode the image bytes in base64.
      - allOf:
        - $ref: '#/components/schemas/S3Location'
        description: |-
          The location of an image object in an Amazon S3 bucket. To see which models support S3 uploads, see [Supported models and features for Converse](https://docs.aws.amazon.com/bedrock/latest/userguide/conversation-inference-supported-models-features.html).
      description: |-
        The source for an image.
    ImagesGuarded:
      type: integer
    ImagesTotal:
      type: integer
    InferenceConfiguration:
      type: object
      properties:
        maxTokens:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of tokens to allow in the generated response.
            The default value is the maximum allowed value for the model that you
            are using. For more information, see [Inference parameters for foundation
            models](https://docs.aws.amazon.com/bedrock/latest/userguide/model-parameters.html).
        temperature:
          allOf:
          - $ref: '#/components/schemas/Float'
          description: 'The likelihood of the model selecting higher-probability options
            while generating a response. A lower value makes the model more likely
            to choose higher-probability options, while a higher value makes the model
            more likely to choose lower-probability options.


            The default value is the default value for the model that you are using.
            For more information, see [Inference parameters for foundation models](https://docs.aws.amazon.com/bedrock/latest/userguide/model-parameters.html).'
        topP:
          allOf:
          - $ref: '#/components/schemas/Float'
          description: 'The percentage of most-likely candidates that the model considers
            for the next token. For example, if you choose a value of 0.8 for `topP`,
            the model selects from the top 80% of the probability distribution of
            tokens that could be next in the sequence.


            The default value is the default value for the model that you are using.
            For more information, see [Inference parameters for foundation models](https://docs.aws.amazon.com/bedrock/latest/userguide/model-parameters.html).'
        stopSequences:
          allOf:
          - $ref: '#/components/schemas/NonEmptyStringList'
          description: A list of stop sequences. A stop sequence is a sequence of
            characters that causes the model to stop generating the response.
      description: 'Base inference parameters to pass to a model in a call to [Converse](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_runtime_Converse.html)
        or [ConverseStream](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_runtime_ConverseStream.html).
        For more information, see [Inference parameters for foundation models](https://docs.aws.amazon.com/bedrock/latest/userguide/model-parameters.html).


        If you need to pass additional parameters that the model supports, use the
        `additionalModelRequestFields` request field in the call to `Converse` or
        `ConverseStream`. For more information, see [Model parameters](https://docs.aws.amazon.com/bedrock/latest/userguide/model-parameters.html).'
    InternalServerException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/NonBlankString'
      description: An internal server error occurred. For troubleshooting this error,
        see [InternalFailure](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-internal-failure)
        in the Amazon Bedrock User Guide
    InvocationArn:
      type: string
      pattern: ^arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:async-invoke/[a-z0-9]{12}$
      minLength: 1
      maxLength: 2048
    InvokeModelIdentifier:
      type: string
      pattern: ^(arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:(([0-9]{12}:custom-model/[a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}/[a-z0-9]{12})|(:foundation-model/[a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}([.:]?[a-z0-9-]{1,63}))|([0-9]{12}:imported-model/[a-z0-9]{12})|([0-9]{12}:provisioned-model/[a-z0-9]{12})|([0-9]{12}:(inference-profile|application-inference-profile)/[a-zA-Z0-9-:.]+)))|([a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}([.:]?[a-z0-9-]{1,63}))|(([0-9a-zA-Z][_-]?)+)|([a-zA-Z0-9-:.]+)$|(^(arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:prompt/[0-9a-zA-Z]{10}(?::[0-9]{1,5})?))$|(^arn:aws:sagemaker:[a-z0-9-]+:[0-9]{12}:endpoint/[a-zA-Z0-9-]+$)|(^arn:aws(-[^:]+)?:bedrock:([0-9a-z-]{1,20}):([0-9]{12}):(default-)?prompt-router/[a-zA-Z0-9-:.]+$)$
      minLength: 1
      maxLength: 2048
    InvokeModelRequest:
      type: object
      properties:
        body:
          allOf:
          - $ref: '#/components/schemas/Body'
          description: The prompt and inference parameters in the format specified
            in the `contentType` in the header. You must provide the body in JSON
            format. To see the format and content of the request and response bodies
            for different models, refer to [Inference parameters](https://docs.aws.amazon.com/bedrock/latest/userguide/model-parameters.html).
            For more information, see [Run inference](https://docs.aws.amazon.com/bedrock/latest/userguide/api-methods-run.html)
            in the Bedrock User Guide.
        contentType:
          allOf:
          - $ref: '#/components/schemas/MimeType'
          description: The MIME type of the input data in the request. You must specify
            `application/json`.
        accept:
          allOf:
          - $ref: '#/components/schemas/MimeType'
          description: The desired MIME type of the inference body in the response.
            The default value is `application/json`.
        modelId:
          allOf:
          - $ref: '#/components/schemas/InvokeModelIdentifier'
          description: "The unique identifier of the model to invoke to run inference.\n\
            \nThe `modelId` to provide depends on the type of model or throughput\
            \ that you use:\n\n  * If you use a base model, specify the model ID or\
            \ its ARN. For a list of model IDs for base models, see [Amazon Bedrock\
            \ base model IDs (on-demand throughput)](https://docs.aws.amazon.com/bedrock/latest/userguide/model-ids.html#model-ids-arns)\
            \ in the Amazon Bedrock User Guide.\n\n  * If you use an inference profile,\
            \ specify the inference profile ID or its ARN. For a list of inference\
            \ profile IDs, see [Supported Regions and models for cross-region inference](https://docs.aws.amazon.com/bedrock/latest/userguide/cross-region-inference-support.html)\
            \ in the Amazon Bedrock User Guide.\n\n  * If you use a provisioned model,\
            \ specify the ARN of the Provisioned Throughput. For more information,\
            \ see [Run inference using a Provisioned Throughput](https://docs.aws.amazon.com/bedrock/latest/userguide/prov-thru-use.html)\
            \ in the Amazon Bedrock User Guide.\n\n  * If you use a custom model,\
            \ first purchase Provisioned Throughput for it. Then specify the ARN of\
            \ the resulting provisioned model. For more information, see [Use a custom\
            \ model in Amazon Bedrock](https://docs.aws.amazon.com/bedrock/latest/userguide/model-customization-use.html)\
            \ in the Amazon Bedrock User Guide.\n\n  * If you use an [imported model](https://docs.aws.amazon.com/bedrock/latest/userguide/model-customization-import-model.html),\
            \ specify the ARN of the imported model. You can get the model ARN from\
            \ a successful call to [CreateModelImportJob](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_CreateModelImportJob.html)\
            \ or from the Imported models page in the Amazon Bedrock console."
        trace:
          allOf:
          - $ref: '#/components/schemas/Trace'
          description: Specifies whether to enable or disable the Bedrock trace. If
            enabled, you can see the full Bedrock trace.
        guardrailIdentifier:
          allOf:
          - $ref: '#/components/schemas/GuardrailIdentifier'
          description: "The unique identifier of the guardrail that you want to use.\
            \ If you don't provide a value, no guardrail is applied to the invocation.\n\
            \nAn error will be thrown in the following situations.\n\n  * You don't\
            \ provide a guardrail identifier but you specify the `amazon-bedrock-guardrailConfig`\
            \ field in the request body.\n\n  * You enable the guardrail but the `contentType`\
            \ isn't `application/json`.\n\n  * You provide a guardrail identifier,\
            \ but `guardrailVersion` isn't specified."
        guardrailVersion:
          allOf:
          - $ref: '#/components/schemas/GuardrailVersion'
          description: The version number for the guardrail. The value can also be
            `DRAFT`.
        performanceConfigLatency:
          allOf:
          - $ref: '#/components/schemas/PerformanceConfigLatency'
          description: Model performance settings for the request.
      required:
      - modelId
    InvokeModelResponse:
      type: object
      properties:
        body:
          allOf:
          - $ref: '#/components/schemas/Body'
          description: Inference response from the model in the format specified in
            the `contentType` header. To see the format and content of the request
            and response bodies for different models, refer to [Inference parameters](https://docs.aws.amazon.com/bedrock/latest/userguide/model-parameters.html).
        contentType:
          allOf:
          - $ref: '#/components/schemas/MimeType'
          description: The MIME type of the inference result.
        performanceConfigLatency:
          allOf:
          - $ref: '#/components/schemas/PerformanceConfigLatency'
          description: Model performance settings for the request.
      required:
      - body
      - contentType
    InvokeModelWithBidirectionalStreamInput:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/BidirectionalInputPayloadPart'
        description: |-
          The audio chunk that is used as input for the invocation step.
      description: |-
        Payload content, the speech chunk, for the bidirectional input of the invocation step.
    InvokeModelWithBidirectionalStreamOutput:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/BidirectionalOutputPayloadPart'
        description: |-
          The speech chunk that was provided as output from the invocation step.
      - allOf:
        - $ref: '#/components/schemas/InternalServerException'
        description: |-
          The request encountered an unknown internal error.
      - allOf:
        - $ref: '#/components/schemas/ModelStreamErrorException'
        description: |-
          The request encountered an error with the model stream.
      - allOf:
        - $ref: '#/components/schemas/ValidationException'
        description: |-
          The input fails to satisfy the constraints specified by an Amazon Web Services service.
      - allOf:
        - $ref: '#/components/schemas/ThrottlingException'
        description: |-
          The request was denied due to request throttling.
      - allOf:
        - $ref: '#/components/schemas/ModelTimeoutException'
        description: |-
          The connection was closed because a request was not received within the timeout period.
      - allOf:
        - $ref: '#/components/schemas/ServiceUnavailableException'
        description: |-
          The request has failed due to a temporary failure of the server.
      description: |-
        Output from the bidirectional stream that was used for model invocation.
    InvokeModelWithBidirectionalStreamRequest:
      type: object
      properties:
        modelId:
          allOf:
          - $ref: '#/components/schemas/InvokeModelIdentifier'
          description: The model ID or ARN of the model ID to use. Currently, only
            `amazon.nova-sonic-v1:0` is supported.
        body:
          allOf:
          - $ref: '#/components/schemas/InvokeModelWithBidirectionalStreamInput'
          description: The prompt and inference parameters in the format specified
            in the `BidirectionalInputPayloadPart` in the header. You must provide
            the body in JSON format. To see the format and content of the request
            and response bodies for different models, refer to [Inference parameters](https://docs.aws.amazon.com/bedrock/latest/userguide/model-parameters.html).
            For more information, see [Run inference](https://docs.aws.amazon.com/bedrock/latest/userguide/api-methods-run.html)
            in the Bedrock User Guide.
      required:
      - modelId
      - body
    InvokeModelWithBidirectionalStreamResponse:
      type: object
      properties:
        body:
          allOf:
          - $ref: '#/components/schemas/InvokeModelWithBidirectionalStreamOutput'
          description: Streaming response from the model in the format specified by
            the `BidirectionalOutputPayloadPart` header.
      required:
      - body
    InvokeModelWithResponseStreamRequest:
      type: object
      properties:
        body:
          allOf:
          - $ref: '#/components/schemas/Body'
          description: The prompt and inference parameters in the format specified
            in the `contentType` in the header. You must provide the body in JSON
            format. To see the format and content of the request and response bodies
            for different models, refer to [Inference parameters](https://docs.aws.amazon.com/bedrock/latest/userguide/model-parameters.html).
            For more information, see [Run inference](https://docs.aws.amazon.com/bedrock/latest/userguide/api-methods-run.html)
            in the Bedrock User Guide.
        contentType:
          allOf:
          - $ref: '#/components/schemas/MimeType'
          description: The MIME type of the input data in the request. You must specify
            `application/json`.
        accept:
          allOf:
          - $ref: '#/components/schemas/MimeType'
          description: The desired MIME type of the inference body in the response.
            The default value is `application/json`.
        modelId:
          allOf:
          - $ref: '#/components/schemas/InvokeModelIdentifier'
          description: "The unique identifier of the model to invoke to run inference.\n\
            \nThe `modelId` to provide depends on the type of model or throughput\
            \ that you use:\n\n  * If you use a base model, specify the model ID or\
            \ its ARN. For a list of model IDs for base models, see [Amazon Bedrock\
            \ base model IDs (on-demand throughput)](https://docs.aws.amazon.com/bedrock/latest/userguide/model-ids.html#model-ids-arns)\
            \ in the Amazon Bedrock User Guide.\n\n  * If you use an inference profile,\
            \ specify the inference profile ID or its ARN. For a list of inference\
            \ profile IDs, see [Supported Regions and models for cross-region inference](https://docs.aws.amazon.com/bedrock/latest/userguide/cross-region-inference-support.html)\
            \ in the Amazon Bedrock User Guide.\n\n  * If you use a provisioned model,\
            \ specify the ARN of the Provisioned Throughput. For more information,\
            \ see [Run inference using a Provisioned Throughput](https://docs.aws.amazon.com/bedrock/latest/userguide/prov-thru-use.html)\
            \ in the Amazon Bedrock User Guide.\n\n  * If you use a custom model,\
            \ first purchase Provisioned Throughput for it. Then specify the ARN of\
            \ the resulting provisioned model. For more information, see [Use a custom\
            \ model in Amazon Bedrock](https://docs.aws.amazon.com/bedrock/latest/userguide/model-customization-use.html)\
            \ in the Amazon Bedrock User Guide.\n\n  * If you use an [imported model](https://docs.aws.amazon.com/bedrock/latest/userguide/model-customization-import-model.html),\
            \ specify the ARN of the imported model. You can get the model ARN from\
            \ a successful call to [CreateModelImportJob](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_CreateModelImportJob.html)\
            \ or from the Imported models page in the Amazon Bedrock console."
        trace:
          allOf:
          - $ref: '#/components/schemas/Trace'
          description: Specifies whether to enable or disable the Bedrock trace. If
            enabled, you can see the full Bedrock trace.
        guardrailIdentifier:
          allOf:
          - $ref: '#/components/schemas/GuardrailIdentifier'
          description: "The unique identifier of the guardrail that you want to use.\
            \ If you don't provide a value, no guardrail is applied to the invocation.\n\
            \nAn error is thrown in the following situations.\n\n  * You don't provide\
            \ a guardrail identifier but you specify the `amazon-bedrock-guardrailConfig`\
            \ field in the request body.\n\n  * You enable the guardrail but the `contentType`\
            \ isn't `application/json`.\n\n  * You provide a guardrail identifier,\
            \ but `guardrailVersion` isn't specified."
        guardrailVersion:
          allOf:
          - $ref: '#/components/schemas/GuardrailVersion'
          description: The version number for the guardrail. The value can also be
            `DRAFT`.
        performanceConfigLatency:
          allOf:
          - $ref: '#/components/schemas/PerformanceConfigLatency'
          description: Model performance settings for the request.
      required:
      - modelId
    InvokeModelWithResponseStreamResponse:
      type: object
      properties:
        body:
          allOf:
          - $ref: '#/components/schemas/ResponseStream'
          description: Inference response from the model in the format specified by
            the `contentType` header. To see the format and content of this field
            for different models, refer to [Inference parameters](https://docs.aws.amazon.com/bedrock/latest/userguide/model-parameters.html).
        contentType:
          allOf:
          - $ref: '#/components/schemas/MimeType'
          description: The MIME type of the inference result.
        performanceConfigLatency:
          allOf:
          - $ref: '#/components/schemas/PerformanceConfigLatency'
          description: Model performance settings for the request.
      required:
      - body
      - contentType
    InvokedModelId:
      type: string
      pattern: ^(arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}::foundation-model/[a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}([a-z0-9-]{1,63}[.]){0,2}[a-z0-9-]{1,63}([:][a-z0-9-]{1,63}){0,2})|(arn:aws(|-us-gov|-cn|-iso|-iso-b):bedrock:(|[0-9a-z-]{1,20}):(|[0-9]{12}):inference-profile/[a-zA-Z0-9-:.]+)$
    KmsKeyId:
      type: string
      pattern: ^arn:aws(-[^:]+)?:kms:[a-zA-Z0-9-]*:[0-9]{12}:((key/[a-zA-Z0-9-]{36})|(alias/[a-zA-Z0-9-_/]+))$
      minLength: 1
      maxLength: 2048
    ListAsyncInvokesRequest:
      type: object
      properties:
        submitTimeAfter:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Include invocations submitted after this time.
        submitTimeBefore:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Include invocations submitted before this time.
        statusEquals:
          allOf:
          - $ref: '#/components/schemas/AsyncInvokeStatus'
          description: Filter invocations by status.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of invocations to return in one page of
            results.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: Specify the pagination token from a previous request to retrieve
            the next page of results.
        sortBy:
          allOf:
          - $ref: '#/components/schemas/SortAsyncInvocationBy'
          description: How to sort the response.
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          description: The sorting order for the response.
    ListAsyncInvokesResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: Specify the pagination token from a previous request to retrieve
            the next page of results.
        asyncInvokeSummaries:
          allOf:
          - $ref: '#/components/schemas/AsyncInvokeSummaries'
          description: A list of invocation summaries.
    MaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    Message:
      type: object
      properties:
        role:
          allOf:
          - $ref: '#/components/schemas/ConversationRole'
          description: The role that the message plays in the message.
        content:
          allOf:
          - $ref: '#/components/schemas/ContentBlocks'
          description: "The message content. Note the following restrictions:\n\n\
            \  * You can include up to 20 images. Each image's size, height, and width\
            \ must be no more than 3.75 MB, 8000 px, and 8000 px, respectively.\n\n\
            \  * You can include up to five documents. Each document's size must be\
            \ no more than 4.5 MB.\n\n  * If you include a `ContentBlock` with a `document`\
            \ field in the array, you must also include a `ContentBlock` with a `text`\
            \ field.\n\n  * You can only include images and documents if the `role`\
            \ is `user`."
      required:
      - role
      - content
      description: A message input, or returned from, a call to [Converse](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_runtime_Converse.html)
        or [ConverseStream](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_runtime_ConverseStream.html).
    MessageStartEvent:
      type: object
      properties:
        role:
          allOf:
          - $ref: '#/components/schemas/ConversationRole'
          description: The role for the message.
      required:
      - role
      description: The start of a message.
    MessageStopEvent:
      type: object
      properties:
        stopReason:
          allOf:
          - $ref: '#/components/schemas/StopReason'
          description: The reason why the model stopped generating output.
        additionalModelResponseFields:
          allOf:
          - $ref: '#/components/schemas/Document'
          description: The additional model response fields.
      required:
      - stopReason
      description: The stop event for a message.
    Messages:
      type: array
      items:
        $ref: '#/components/schemas/Message'
    MimeType:
      type: string
    ModelErrorException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/NonBlankString'
        originalStatusCode:
          allOf:
          - $ref: '#/components/schemas/StatusCode'
          description: The original status code.
        resourceName:
          allOf:
          - $ref: '#/components/schemas/NonBlankString'
          description: The resource name.
      description: The request failed due to an error while processing the model.
    ModelInputPayload:
      type: object
      additionalProperties: true
      x-sensitive: true
    ModelNotReadyException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/NonBlankString'
      description: The model specified in the request is not ready to serve inference
        requests. The AWS SDK will automatically retry the operation up to 5 times.
        For information about configuring automatic retries, see [Retry behavior](https://docs.aws.amazon.com/sdkref/latest/guide/feature-retry-behavior.html)
        in the _AWS SDKs and Tools_ reference guide.
    ModelOutputs:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailOutputText'
    ModelStreamErrorException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/NonBlankString'
        originalStatusCode:
          allOf:
          - $ref: '#/components/schemas/StatusCode'
          description: The original status code.
        originalMessage:
          allOf:
          - $ref: '#/components/schemas/NonBlankString'
          description: The original message.
      description: An error occurred while streaming the response. Retry your request.
    ModelTimeoutException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/NonBlankString'
      description: The request took too long to process. Processing time exceeded
        the model timeout length.
    NonBlankString:
      type: string
      pattern: ^[\s\S]*$
    NonEmptyString:
      type: string
      minLength: 1
    NonEmptyStringList:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
    NonNegativeInteger:
      type: integer
      minimum: 0
    PaginationToken:
      type: string
      pattern: ^\S*$
      minLength: 1
      maxLength: 2048
    PartBody:
      type: string
      format: byte
      maxLength: 1000000
      x-sensitive: true
    PayloadPart:
      type: object
      properties:
        bytes:
          allOf:
          - $ref: '#/components/schemas/PartBody'
          description: Base64-encoded bytes of payload data.
      description: Payload content included in the response.
    PerformanceConfigLatency:
      type: string
      enum:
      - standard
      - optimized
    PerformanceConfiguration:
      type: object
      properties:
        latency:
          allOf:
          - $ref: '#/components/schemas/PerformanceConfigLatency'
          description: To use a latency-optimized version of the model, set to `optimized`.
      description: Performance settings for a model.
    PromptRouterTrace:
      type: object
      properties:
        invokedModelId:
          allOf:
          - $ref: '#/components/schemas/InvokedModelId'
          description: The ID of the invoked model.
      description: A prompt router trace.
    PromptVariableMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/PromptVariableValues'
    PromptVariableValues:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/String'
        description: |-
          The text value that the variable maps to.
      description: |-
        Contains a map of variables in a prompt from Prompt management to an object containing the values to fill in for them when running model invocation. For more information, see [How Prompt management works](https://docs.aws.amazon.com/bedrock/latest/userguide/prompt-management-how.html).
    ReasoningContentBlock:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/ReasoningTextBlock'
        description: |-
          The reasoning that the model used to return the output.
      - allOf:
        - $ref: '#/components/schemas/Blob'
        description: |-
          The content in the reasoning that was encrypted by the model provider for safety reasons. The encryption doesn't affect the quality of responses.
      description: |-
        Contains content regarding the reasoning that is carried out by the model with respect to the content in the content block. Reasoning refers to a Chain of Thought (CoT) that the model generates to enhance the accuracy of its final response.
      x-sensitive: true
    ReasoningContentBlockDelta:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/String'
        description: |-
          The reasoning that the model used to return the output.
      - allOf:
        - $ref: '#/components/schemas/Blob'
        description: |-
          The content in the reasoning that was encrypted by the model provider for safety reasons. The encryption doesn't affect the quality of responses.
      - allOf:
        - $ref: '#/components/schemas/String'
        description: |-
          A token that verifies that the reasoning text was generated by the model. If you pass a reasoning block back to the API in a multi-turn conversation, include the text and its signature unmodified.
      description: |-
        Contains content regarding the reasoning that is carried out by the model with respect to the content in the content block. Reasoning refers to a Chain of Thought (CoT) that the model generates to enhance the accuracy of its final response.
      x-sensitive: true
    ReasoningTextBlock:
      type: object
      properties:
        text:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The reasoning that the model used to return the output.
        signature:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A token that verifies that the reasoning text was generated
            by the model. If you pass a reasoning block back to the API in a multi-turn
            conversation, include the text and its signature unmodified.
      required:
      - text
      description: Contains the reasoning that the model used to return the output.
    RequestMetadata:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    ResourceNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/NonBlankString'
      description: The specified resource ARN was not found. For troubleshooting this
        error, see [ResourceNotFound](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-resource-not-found)
        in the Amazon Bedrock User Guide
    ResponseStream:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/PayloadPart'
        description: |-
          Content included in the response.
      - allOf:
        - $ref: '#/components/schemas/InternalServerException'
        description: |-
          An internal server error occurred. Retry your request.
      - allOf:
        - $ref: '#/components/schemas/ModelStreamErrorException'
        description: |-
          An error occurred while streaming the response. Retry your request.
      - allOf:
        - $ref: '#/components/schemas/ValidationException'
        description: |-
          Input validation failed. Check your request parameters and retry the request.
      - allOf:
        - $ref: '#/components/schemas/ThrottlingException'
        description: |-
          Your request was throttled because of service-wide limitations. Resubmit your request later or in a different region. You can also purchase [Provisioned Throughput](https://docs.aws.amazon.com/bedrock/latest/userguide/prov-throughput.html) to increase the rate or number of tokens you can process.
      - allOf:
        - $ref: '#/components/schemas/ModelTimeoutException'
        description: |-
          The request took too long to process. Processing time exceeded the model timeout length.
      - allOf:
        - $ref: '#/components/schemas/ServiceUnavailableException'
        description: |-
          The service isn't available. Try again later.
      description: |-
        Definition of content in the response stream.
    S3Location:
      type: object
      properties:
        uri:
          allOf:
          - $ref: '#/components/schemas/S3Uri'
          description: An object URI starting with `s3://`.
        bucketOwner:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: If the bucket belongs to another AWS account, specify that
            account's ID.
      required:
      - uri
      description: A storage location in an Amazon S3 bucket.
    S3Uri:
      type: string
      pattern: ^s3://[a-z0-9][\.\-a-z0-9]{1,61}[a-z0-9](/.*)?$
      minLength: 1
      maxLength: 1024
    ServiceQuotaExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/NonBlankString'
      description: Your request exceeds the service quota for your account. You can
        view your quotas at [Viewing service quotas](https://docs.aws.amazon.com/servicequotas/latest/userguide/gs-request-quota.html).
        You can resubmit your request later.
    ServiceUnavailableException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/NonBlankString'
      description: The service isn't currently available. For troubleshooting this
        error, see [ServiceUnavailable](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-service-unavailable)
        in the Amazon Bedrock User Guide
    SortAsyncInvocationBy:
      type: string
      enum:
      - SubmissionTime
    SortOrder:
      type: string
      enum:
      - Ascending
      - Descending
    SpecificToolChoice:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ToolName'
          description: The name of the tool that the model must request.
      required:
      - name
      description: 'The model must request a specific tool. For example, `{"tool"
        : {"name" : "Your tool name"}}`.


        This field is only supported by Anthropic Claude 3 models.'
    StartAsyncInvokeRequest:
      type: object
      properties:
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/AsyncInvokeIdempotencyToken'
          description: Specify idempotency token to ensure that requests are not duplicated.
        modelId:
          allOf:
          - $ref: '#/components/schemas/AsyncInvokeIdentifier'
          description: The model to invoke.
        modelInput:
          allOf:
          - $ref: '#/components/schemas/ModelInputPayload'
          description: Input to send to the model.
        outputDataConfig:
          allOf:
          - $ref: '#/components/schemas/AsyncInvokeOutputDataConfig'
          description: Where to store the output.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: Tags to apply to the invocation.
      required:
      - modelId
      - modelInput
      - outputDataConfig
    StartAsyncInvokeResponse:
      type: object
      properties:
        invocationArn:
          allOf:
          - $ref: '#/components/schemas/InvocationArn'
          description: The ARN of the invocation.
      required:
      - invocationArn
    StatusCode:
      type: integer
      minimum: 100
      maximum: 599
    StopReason:
      type: string
      enum:
      - end_turn
      - tool_use
      - max_tokens
      - stop_sequence
      - guardrail_intervened
      - content_filtered
    SystemContentBlock:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/NonEmptyString'
        description: |-
          A system prompt for the model.
      - allOf:
        - $ref: '#/components/schemas/GuardrailConverseContentBlock'
        description: |-
          A content block to assess with the guardrail. Use with the [Converse](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_runtime_Converse.html) or [ConverseStream](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_runtime_ConverseStream.html) API operations.

          For more information, see _Use a guardrail with the Converse API_ in the _Amazon Bedrock User Guide_.
      - allOf:
        - $ref: '#/components/schemas/CachePointBlock'
        description: |-
          CachePoint to include in the system prompt.
      description: |-
        A system content block.
    SystemContentBlocks:
      type: array
      items:
        $ref: '#/components/schemas/SystemContentBlock'
    Tag:
      type: object
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          description: The tag's key.
        value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          description: The tag's value.
      required:
      - key
      - value
      description: A tag.
    TagKey:
      type: string
      pattern: ^[a-zA-Z0-9\s._:/=+@-]*$
      minLength: 1
      maxLength: 128
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    TagValue:
      type: string
      pattern: ^[a-zA-Z0-9\s._:/=+@-]*$
      minLength: 0
      maxLength: 256
    TextCharactersGuarded:
      type: integer
    TextCharactersTotal:
      type: integer
    ThrottlingException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/NonBlankString'
      description: Your request was denied due to exceeding the account quotas for
        _Amazon Bedrock_. For troubleshooting this error, see [ThrottlingException](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-throttling-exception)
        in the Amazon Bedrock User Guide
    Timestamp:
      type: string
      format: date-time
    TokenUsage:
      type: object
      properties:
        inputTokens:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of tokens sent in the request to the model.
        outputTokens:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of tokens that the model generated for the request.
        totalTokens:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The total of input tokens and tokens generated by the model.
        cacheReadInputTokens:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of input tokens read from the cache for the request.
        cacheWriteInputTokens:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of input tokens written to the cache for the request.
      required:
      - inputTokens
      - outputTokens
      - totalTokens
      description: The tokens used in a message API inference call.
    Tool:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/ToolSpecification'
        description: |-
          The specfication for the tool.
      - allOf:
        - $ref: '#/components/schemas/CachePointBlock'
        description: |-
          CachePoint to include in the tool configuration.
      description: |-
        Information about a tool that you can use with the Converse API. For more information, see [Tool use (function calling)](https://docs.aws.amazon.com/bedrock/latest/userguide/tool-use.html) in the Amazon Bedrock User Guide.
    ToolChoice:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/AutoToolChoice'
        description: |-
          (Default). The Model automatically decides if a tool should be called or whether to generate text instead.
      - allOf:
        - $ref: '#/components/schemas/AnyToolChoice'
        description: |-
          The model must request at least one tool (no text is generated).
      - allOf:
        - $ref: '#/components/schemas/SpecificToolChoice'
        description: |-
          The Model must request the specified tool. Only supported by Anthropic Claude 3 models.
      description: |-
        Determines which tools the model should request in a call to `Converse` or `ConverseStream`. `ToolChoice` is only supported by Anthropic Claude 3 models and by Mistral AI Mistral Large.
    ToolConfiguration:
      type: object
      properties:
        tools:
          allOf:
          - $ref: '#/components/schemas/Tools'
          description: An array of tools that you want to pass to a model.
        toolChoice:
          allOf:
          - $ref: '#/components/schemas/ToolChoice'
          description: If supported by model, forces the model to request a tool.
      required:
      - tools
      description: Configuration information for the tools that you pass to a model.
        For more information, see [Tool use (function calling)](https://docs.aws.amazon.com/bedrock/latest/userguide/tool-use.html)
        in the Amazon Bedrock User Guide.
    ToolInputSchema:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/Document'
        description: |-
          The JSON schema for the tool. For more information, see [JSON Schema Reference](https://json-schema.org/understanding-json-schema/reference).
      description: |-
        The schema for the tool. The top level schema type must be `object`.
    ToolName:
      type: string
      pattern: ^[a-zA-Z0-9_-]+$
      minLength: 1
      maxLength: 64
    ToolResultBlock:
      type: object
      properties:
        toolUseId:
          allOf:
          - $ref: '#/components/schemas/ToolUseId'
          description: The ID of the tool request that this is the result for.
        content:
          allOf:
          - $ref: '#/components/schemas/ToolResultContentBlocks'
          description: The content for tool result content block.
        status:
          allOf:
          - $ref: '#/components/schemas/ToolResultStatus'
          description: 'The status for the tool result content block.


            This field is only supported Anthropic Claude 3 models.'
      required:
      - toolUseId
      - content
      description: A tool result block that contains the results for a tool request
        that the model previously made.
    ToolResultContentBlock:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/Document'
        description: |-
          A tool result that is JSON format data.
      - allOf:
        - $ref: '#/components/schemas/String'
        description: |-
          A tool result that is text.
      - allOf:
        - $ref: '#/components/schemas/ImageBlock'
        description: |-
          A tool result that is an image.

          This field is only supported by Anthropic Claude 3 models.
      - allOf:
        - $ref: '#/components/schemas/DocumentBlock'
        description: |-
          A tool result that is a document.
      - allOf:
        - $ref: '#/components/schemas/VideoBlock'
        description: |-
          A tool result that is video.
      description: |-
        The tool result content block.
    ToolResultContentBlocks:
      type: array
      items:
        $ref: '#/components/schemas/ToolResultContentBlock'
    ToolResultStatus:
      type: string
      enum:
      - success
      - error
    ToolSpecification:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ToolName'
          description: The name for the tool.
        description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The description for the tool.
        inputSchema:
          allOf:
          - $ref: '#/components/schemas/ToolInputSchema'
          description: The input schema for the tool in JSON format.
      required:
      - name
      - inputSchema
      description: The specification for the tool.
    ToolUseBlock:
      type: object
      properties:
        toolUseId:
          allOf:
          - $ref: '#/components/schemas/ToolUseId'
          description: The ID for the tool request.
        name:
          allOf:
          - $ref: '#/components/schemas/ToolName'
          description: The name of the tool that the model wants to use.
        input:
          allOf:
          - $ref: '#/components/schemas/Document'
          description: The input to pass to the tool.
      required:
      - toolUseId
      - name
      - input
      description: A tool use content block. Contains information about a tool that
        the model is requesting be run., The model uses the result from the tool to
        generate a response.
    ToolUseBlockDelta:
      type: object
      properties:
        input:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The input for a requested tool.
      required:
      - input
      description: The delta for a tool use block.
    ToolUseBlockStart:
      type: object
      properties:
        toolUseId:
          allOf:
          - $ref: '#/components/schemas/ToolUseId'
          description: The ID for the tool request.
        name:
          allOf:
          - $ref: '#/components/schemas/ToolName'
          description: The name of the tool that the model is requesting to use.
      required:
      - toolUseId
      - name
      description: The start of a tool use block.
    ToolUseId:
      type: string
      pattern: ^[a-zA-Z0-9_-]+$
      minLength: 1
      maxLength: 64
    Tools:
      type: array
      items:
        $ref: '#/components/schemas/Tool'
    Trace:
      type: string
      enum:
      - ENABLED
      - DISABLED
      - ENABLED_FULL
    ValidationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/NonBlankString'
      description: The input fails to satisfy the constraints specified by _Amazon
        Bedrock_. For troubleshooting this error, see [ValidationError](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-validation-error)
        in the Amazon Bedrock User Guide
    VideoBlock:
      type: object
      properties:
        format:
          allOf:
          - $ref: '#/components/schemas/VideoFormat'
          description: The block's format.
        source:
          allOf:
          - $ref: '#/components/schemas/VideoSource'
          description: The block's source.
      required:
      - format
      - source
      description: A video block.
    VideoFormat:
      type: string
      enum:
      - mkv
      - mov
      - mp4
      - webm
      - flv
      - mpeg
      - mpg
      - wmv
      - three_gp
    VideoSource:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/Blob'
        description: |-
          Video content encoded in base64.
      - allOf:
        - $ref: '#/components/schemas/S3Location'
        description: |-
          The location of a video object in an Amazon S3 bucket. To see which models support S3 uploads, see [Supported models and features for Converse](https://docs.aws.amazon.com/bedrock/latest/userguide/conversation-inference-supported-models-features.html).
      description: |-
        A video source. You can upload a smaller video as a base64-encoded string as long as the encoded file is less than 25MB. You can also transfer videos up to 1GB in size from an S3 bucket.
