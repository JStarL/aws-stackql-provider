openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: bedrock_runtime
  x-aws-serviceName: bedrockruntime
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-05'
  version: '2023-09-30'
  title: Amazon Bedrock Runtime
  description: |-
    Describes the API operations for running inference using Amazon Bedrock models.
servers:
- description: The Amazon Bedrock Runtime regional endpoint
  url: https://bedrock-runtime.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths: {}
components:
  schemas:
    AccountId:
      type: string
      pattern: ^[0-9]{12}$
    AsyncInvokeArn:
      type: string
      pattern: ^arn:[a-z0-9\-]+:bedrock:[a-z0-9\-]*:[0-9]*:(provisioned-model|foundation-model)/.+$
      minLength: 1
      maxLength: 2048
    AsyncInvokeIdempotencyToken:
      type: string
      pattern: ^[!-~]*$
      minLength: 1
      maxLength: 256
    AsyncInvokeIdentifier:
      type: string
      pattern: ^[a-zA-Z_\.\-/0-9:]+$
      minLength: 1
      maxLength: 256
    AsyncInvokeMessage:
      type: string
      maxLength: 2048
    ConversationalModelId:
      type: string
      pattern: ^(arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:(([0-9]{12}:custom-model/[a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}/[a-z0-9]{12})|(:foundation-model/[a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}([.:]?[a-z0-9-]{1,63}))|([0-9]{12}:imported-model/[a-z0-9]{12})|([0-9]{12}:provisioned-model/[a-z0-9]{12})|([0-9]{12}:(inference-profile|application-inference-profile)/[a-zA-Z0-9-:.]+)))|([a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}([.:]?[a-z0-9-]{1,63}))|(([0-9a-zA-Z][_-]?)+)|([a-zA-Z0-9-:.]+)|(^(arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:prompt/[0-9a-zA-Z]{10}(?::[0-9]{1,5})?))$|(^arn:aws:sagemaker:[a-z0-9-]+:[0-9]{12}:endpoint/[a-zA-Z0-9-]+$)|(^arn:aws(-[^:]+)?:bedrock:([0-9a-z-]{1,20}):([0-9]{12}):(default-)?prompt-router/[a-zA-Z0-9-:.]+$)$
      minLength: 1
      maxLength: 2048
    GuardrailContentPolicyImageUnitsProcessed:
      type: integer
    GuardrailContentPolicyUnitsProcessed:
      type: integer
    GuardrailContextualGroundingPolicyUnitsProcessed:
      type: integer
    GuardrailIdentifier:
      type: string
      pattern: ^(([a-z0-9]+)|(arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:guardrail/[a-z0-9]+))$
      maxLength: 2048
    GuardrailOutputText:
      type: string
    GuardrailSensitiveInformationPolicyFreeUnitsProcessed:
      type: integer
    GuardrailSensitiveInformationPolicyUnitsProcessed:
      type: integer
    GuardrailTopicPolicyUnitsProcessed:
      type: integer
    GuardrailVersion:
      type: string
      pattern: ^(([1-9][0-9]{0,7})|(DRAFT))$
    GuardrailWordPolicyUnitsProcessed:
      type: integer
    ImagesGuarded:
      type: integer
    ImagesTotal:
      type: integer
    InvocationArn:
      type: string
      pattern: ^arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:async-invoke/[a-z0-9]{12}$
      minLength: 1
      maxLength: 2048
    InvokeModelIdentifier:
      type: string
      pattern: ^(arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:(([0-9]{12}:custom-model/[a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}/[a-z0-9]{12})|(:foundation-model/[a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}([.:]?[a-z0-9-]{1,63}))|([0-9]{12}:imported-model/[a-z0-9]{12})|([0-9]{12}:provisioned-model/[a-z0-9]{12})|([0-9]{12}:(inference-profile|application-inference-profile)/[a-zA-Z0-9-:.]+)))|([a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}([.:]?[a-z0-9-]{1,63}))|(([0-9a-zA-Z][_-]?)+)|([a-zA-Z0-9-:.]+)$|(^(arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:prompt/[0-9a-zA-Z]{10}(?::[0-9]{1,5})?))$|(^arn:aws:sagemaker:[a-z0-9-]+:[0-9]{12}:endpoint/[a-zA-Z0-9-]+$)|(^arn:aws(-[^:]+)?:bedrock:([0-9a-z-]{1,20}):([0-9]{12}):(default-)?prompt-router/[a-zA-Z0-9-:.]+$)$
      minLength: 1
      maxLength: 2048
    InvokedModelId:
      type: string
      pattern: ^(arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}::foundation-model/[a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}([a-z0-9-]{1,63}[.]){0,2}[a-z0-9-]{1,63}([:][a-z0-9-]{1,63}){0,2})|(arn:aws(|-us-gov|-cn|-iso|-iso-b):bedrock:(|[0-9a-z-]{1,20}):(|[0-9]{12}):inference-profile/[a-zA-Z0-9-:.]+)$
    KmsKeyId:
      type: string
      pattern: ^arn:aws(-[^:]+)?:kms:[a-zA-Z0-9-]*:[0-9]{12}:((key/[a-zA-Z0-9-]{36})|(alias/[a-zA-Z0-9-_/]+))$
      minLength: 1
      maxLength: 2048
    MaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    MimeType:
      type: string
    NonBlankString:
      type: string
      pattern: ^[\s\S]*$
    NonEmptyString:
      type: string
      minLength: 1
    NonNegativeInteger:
      type: integer
      minimum: 0
    PaginationToken:
      type: string
      pattern: ^\S*$
      minLength: 1
      maxLength: 2048
    S3Uri:
      type: string
      pattern: ^s3://[a-z0-9][\.\-a-z0-9]{1,61}[a-z0-9](/.*)?$
      minLength: 1
      maxLength: 1024
    StatusCode:
      type: integer
      minimum: 100
      maximum: 599
    TagKey:
      type: string
      pattern: ^[a-zA-Z0-9\s._:/=+@-]*$
      minLength: 1
      maxLength: 128
    TagValue:
      type: string
      pattern: ^[a-zA-Z0-9\s._:/=+@-]*$
      minLength: 0
      maxLength: 256
    TextCharactersGuarded:
      type: integer
    TextCharactersTotal:
      type: integer
    ToolName:
      type: string
      pattern: ^[a-zA-Z0-9_-]+$
      minLength: 1
      maxLength: 64
    ToolUseId:
      type: string
      pattern: ^[a-zA-Z0-9_-]+$
      minLength: 1
      maxLength: 64
