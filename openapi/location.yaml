openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: location
  x-aws-serviceName: location
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2020-11-19'
  title: Amazon Location Service
  description: |-
    "Suite of geospatial services including Maps, Places, Routes, Tracking, and Geofencing"
servers:
- description: The Amazon Location Service regional endpoint
  url: https://geo.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /tracking/v0/trackers/{TrackerName}/consumers:
    post:
      operationId: AssociateTrackerConsumer
      description: |-
        Creates an association between a geofence collection and a tracker resource. This allows the tracker resource to communicate location data to the linked geofence collection.

        You can associate up to five geofence collections to each tracker resource.

        Currently not supported — Cross-account configurations, such as creating associations between a tracker resource in one account and a geofence collection in another account.
      parameters:
      - name: TrackerName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ConsumerArn:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request was unsuccessful because of a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The operation was denied because the request would exceed the maximum [quota](https://docs.aws.amazon.com/location/latest/developerguide/location-quotas.html) set for Amazon Location Service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tracking/v0/trackers/{TrackerName}/delete-positions:
    post:
      operationId: BatchDeleteDevicePositionHistory
      description: |-
        Deletes the position history of one or more devices from a tracker resource.
      parameters:
      - name: TrackerName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DeviceIds:
                  $ref: '#/components/schemas/DeviceIdsList'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /geofencing/v0/collections/{CollectionName}/delete-geofences:
    post:
      operationId: BatchDeleteGeofence
      description: |-
        Deletes a batch of geofences from a geofence collection.

        This operation deletes the resource permanently.
      parameters:
      - name: CollectionName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                GeofenceIds:
                  $ref: '#/components/schemas/IdList'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /geofencing/v0/collections/{CollectionName}/positions:
    post:
      operationId: BatchEvaluateGeofences
      description: |-
        Evaluates device positions against the geofence geometries from a given geofence collection.

        This operation always returns an empty response because geofences are asynchronously evaluated. The evaluation determines if the device has entered or exited a geofenced area, and then publishes one of the following events to Amazon EventBridge:

          * `ENTER` if Amazon Location determines that the tracked device has entered a geofenced area.

          * `EXIT` if Amazon Location determines that the tracked device has exited a geofenced area.

        The last geofence that a device was observed within is tracked for 30 days after the most recent device position update.

        Geofence evaluation uses the given device position. It does not account for the optional `Accuracy` of a `DevicePositionUpdate`.

        The `DeviceID` is used as a string to represent the device. You do not need to have a `Tracker` associated with the `DeviceID`.
      parameters:
      - name: CollectionName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DevicePositionUpdates:
                  $ref: '#/components/schemas/DevicePositionUpdateList'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tracking/v0/trackers/{TrackerName}/get-positions:
    post:
      operationId: BatchGetDevicePosition
      description: |-
        Lists the latest device positions for requested devices.
      parameters:
      - name: TrackerName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DeviceIds:
                  $ref: '#/components/schemas/IdList'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /geofencing/v0/collections/{CollectionName}/put-geofences:
    post:
      operationId: BatchPutGeofence
      description: |-
        A batch request for storing geofence geometries into a given geofence collection, or updates the geometry of an existing geofence if a geofence ID is included in the request.
      parameters:
      - name: CollectionName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Entries:
                  $ref: '#/components/schemas/BatchPutGeofenceRequestEntryList'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tracking/v0/trackers/{TrackerName}/positions:
    post:
      operationId: BatchUpdateDevicePosition
      description: |-
        Uploads position update data for one or more devices to a tracker resource (up to 10 devices per batch). Amazon Location uses the data when it reports the last known device position and position history. Amazon Location retains location data for 30 days.

        Position updates are handled based on the `PositionFiltering` property of the tracker. When `PositionFiltering` is set to `TimeBased`, updates are evaluated against linked geofence collections, and location data is stored at a maximum of one position per 30 second interval. If your update frequency is more often than every 30 seconds, only one update per 30 seconds is stored for each unique device ID.

        When `PositionFiltering` is set to `DistanceBased` filtering, location data is stored and evaluated against linked geofence collections only if the device has moved more than 30 m (98.4 ft).

        When `PositionFiltering` is set to `AccuracyBased` filtering, location data is stored and evaluated against linked geofence collections only if the device has moved more than the measured accuracy. For example, if two consecutive updates from a device have a horizontal accuracy of 5 m and 10 m, the second update is neither stored or evaluated if the device has moved less than 15 m. If `PositionFiltering` is set to `AccuracyBased` filtering, Amazon Location uses the default value `{ "Horizontal": 0}` when accuracy is not provided on a `DevicePositionUpdate`.
      parameters:
      - name: TrackerName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Updates:
                  $ref: '#/components/schemas/DevicePositionUpdateList'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /routes/v0/calculators/{CalculatorName}/calculate/route:
    post:
      operationId: CalculateRoute
      description: "[Calculates a route](https://docs.aws.amazon.com/location/latest/developerguide/calculate-route.html)\
        \ given the following required parameters: `DeparturePosition` and `DestinationPosition`.\
        \ Requires that you first [create a route calculator resource](https://docs.aws.amazon.com/location-routes/latest/APIReference/API_CreateRouteCalculator.html).\n\
        \nBy default, a request that doesn't specify a departure time uses the best\
        \ time of day to travel with the best traffic conditions when calculating\
        \ the route.\n\nAdditional options include:\n\n  * [Specifying a departure\
        \ time](https://docs.aws.amazon.com/location/latest/developerguide/departure-time.html)\
        \ using either `DepartureTime` or `DepartNow`. This calculates a route based\
        \ on predictive traffic data at the given time. \n\nYou can't specify both\
        \ `DepartureTime` and `DepartNow` in a single request. Specifying both parameters\
        \ returns a validation error.\n\n  * [Specifying a travel mode](https://docs.aws.amazon.com/location/latest/developerguide/travel-mode.html)\
        \ using TravelMode sets the transportation mode used to calculate the routes.\
        \ This also lets you specify additional route preferences in `CarModeOptions`\
        \ if traveling by `Car`, or `TruckModeOptions` if traveling by `Truck`.\n\n\
        If you specify `walking` for the travel mode and your data provider is Esri,\
        \ the start and destination must be within 40km."
      parameters:
      - name: CalculatorName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: key
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ApiKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DeparturePosition:
                  $ref: '#/components/schemas/Position'
                DestinationPosition:
                  $ref: '#/components/schemas/Position'
                WaypointPositions:
                  $ref: '#/components/schemas/WaypointPositionList'
                TravelMode:
                  $ref: '#/components/schemas/TravelMode'
                DepartureTime:
                  $ref: '#/components/schemas/Timestamp'
                DepartNow:
                  $ref: '#/components/schemas/Boolean'
                DistanceUnit:
                  $ref: '#/components/schemas/DistanceUnit'
                IncludeLegGeometry:
                  $ref: '#/components/schemas/Boolean'
                CarModeOptions:
                  $ref: '#/components/schemas/CalculateRouteCarModeOptions'
                TruckModeOptions:
                  $ref: '#/components/schemas/CalculateRouteTruckModeOptions'
                ArrivalTime:
                  $ref: '#/components/schemas/Timestamp'
                OptimizeFor:
                  $ref: '#/components/schemas/OptimizationMode'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /routes/v0/calculators/{CalculatorName}/calculate/route-matrix:
    post:
      operationId: CalculateRouteMatrix
      description: "[ Calculates a route matrix](https://docs.aws.amazon.com/location/latest/developerguide/calculate-route-matrix.html)\
        \ given the following required parameters: `DeparturePositions` and `DestinationPositions`.\
        \ `CalculateRouteMatrix` calculates routes and returns the travel time and\
        \ travel distance from each departure position to each destination position\
        \ in the request. For example, given departure positions A and B, and destination\
        \ positions X and Y, `CalculateRouteMatrix` will return time and distance\
        \ for routes from A to X, A to Y, B to X, and B to Y (in that order). The\
        \ number of results returned (and routes calculated) will be the number of\
        \ `DeparturePositions` times the number of `DestinationPositions`.\n\nYour\
        \ account is charged for each route calculated, not the number of requests.\n\
        \nRequires that you first [create a route calculator resource](https://docs.aws.amazon.com/location-routes/latest/APIReference/API_CreateRouteCalculator.html).\n\
        \nBy default, a request that doesn't specify a departure time uses the best\
        \ time of day to travel with the best traffic conditions when calculating\
        \ routes.\n\nAdditional options include:\n\n  * [ Specifying a departure time](https://docs.aws.amazon.com/location/latest/developerguide/departure-time.html)\
        \ using either `DepartureTime` or `DepartNow`. This calculates routes based\
        \ on predictive traffic data at the given time. \n\nYou can't specify both\
        \ `DepartureTime` and `DepartNow` in a single request. Specifying both parameters\
        \ returns a validation error.\n\n  * [Specifying a travel mode](https://docs.aws.amazon.com/location/latest/developerguide/travel-mode.html)\
        \ using TravelMode sets the transportation mode used to calculate the routes.\
        \ This also lets you specify additional route preferences in `CarModeOptions`\
        \ if traveling by `Car`, or `TruckModeOptions` if traveling by `Truck`."
      parameters:
      - name: CalculatorName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: key
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ApiKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DeparturePositions:
                  $ref: '#/components/schemas/PositionList'
                DestinationPositions:
                  $ref: '#/components/schemas/PositionList'
                TravelMode:
                  $ref: '#/components/schemas/TravelMode'
                DepartureTime:
                  $ref: '#/components/schemas/Timestamp'
                DepartNow:
                  $ref: '#/components/schemas/Boolean'
                DistanceUnit:
                  $ref: '#/components/schemas/DistanceUnit'
                CarModeOptions:
                  $ref: '#/components/schemas/CalculateRouteCarModeOptions'
                TruckModeOptions:
                  $ref: '#/components/schemas/CalculateRouteTruckModeOptions'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /geofencing/v0/collections:
    post:
      operationId: CreateGeofenceCollection
      description: |-
        Creates a geofence collection, which manages and stores geofences.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                CollectionName:
                  $ref: '#/components/schemas/ResourceName'
                PricingPlan:
                  $ref: '#/components/schemas/PricingPlan'
                PricingPlanDataSource:
                  $ref: '#/components/schemas/String'
                Description:
                  $ref: '#/components/schemas/ResourceDescription'
                Tags:
                  $ref: '#/components/schemas/TagMap'
                KmsKeyId:
                  $ref: '#/components/schemas/KmsKeyId'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request was unsuccessful because of a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            The operation was denied because the request would exceed the maximum [quota](https://docs.aws.amazon.com/location/latest/developerguide/location-quotas.html) set for Amazon Location Service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /metadata/v0/keys:
    post:
      operationId: CreateKey
      description: |-
        Creates an API key resource in your Amazon Web Services account, which lets you grant actions for Amazon Location resources to the API key bearer.

        For more information, see [Using API keys](https://docs.aws.amazon.com/location/latest/developerguide/using-apikeys.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                KeyName:
                  $ref: '#/components/schemas/ResourceName'
                Restrictions:
                  $ref: '#/components/schemas/ApiKeyRestrictions'
                Description:
                  $ref: '#/components/schemas/ResourceDescription'
                ExpireTime:
                  $ref: '#/components/schemas/Timestamp'
                NoExpiry:
                  $ref: '#/components/schemas/Boolean'
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request was unsuccessful because of a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            The operation was denied because the request would exceed the maximum [quota](https://docs.aws.amazon.com/location/latest/developerguide/location-quotas.html) set for Amazon Location Service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /maps/v0/maps:
    post:
      operationId: CreateMap
      description: |-
        Creates a map resource in your Amazon Web Services account, which provides map tiles of different styles sourced from global location data providers.

        If your application is tracking or routing assets you use in your business, such as delivery vehicles or employees, you must not use Esri as your geolocation provider. See section 82 of the [Amazon Web Services service terms](http://aws.amazon.com/service-terms) for more details.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MapName:
                  $ref: '#/components/schemas/ResourceName'
                Configuration:
                  $ref: '#/components/schemas/MapConfiguration'
                PricingPlan:
                  $ref: '#/components/schemas/PricingPlan'
                Description:
                  $ref: '#/components/schemas/ResourceDescription'
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request was unsuccessful because of a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            The operation was denied because the request would exceed the maximum [quota](https://docs.aws.amazon.com/location/latest/developerguide/location-quotas.html) set for Amazon Location Service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /places/v0/indexes:
    post:
      operationId: CreatePlaceIndex
      description: |-
        Creates a place index resource in your Amazon Web Services account. Use a place index resource to geocode addresses and other text queries by using the `SearchPlaceIndexForText` operation, and reverse geocode coordinates by using the `SearchPlaceIndexForPosition` operation, and enable autosuggestions by using the `SearchPlaceIndexForSuggestions` operation.

        If your application is tracking or routing assets you use in your business, such as delivery vehicles or employees, you must not use Esri as your geolocation provider. See section 82 of the [Amazon Web Services service terms](http://aws.amazon.com/service-terms) for more details.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                IndexName:
                  $ref: '#/components/schemas/ResourceName'
                DataSource:
                  $ref: '#/components/schemas/String'
                PricingPlan:
                  $ref: '#/components/schemas/PricingPlan'
                Description:
                  $ref: '#/components/schemas/ResourceDescription'
                DataSourceConfiguration:
                  $ref: '#/components/schemas/DataSourceConfiguration'
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request was unsuccessful because of a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            The operation was denied because the request would exceed the maximum [quota](https://docs.aws.amazon.com/location/latest/developerguide/location-quotas.html) set for Amazon Location Service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /routes/v0/calculators:
    post:
      operationId: CreateRouteCalculator
      description: |-
        Creates a route calculator resource in your Amazon Web Services account.

        You can send requests to a route calculator resource to estimate travel time, distance, and get directions. A route calculator sources traffic and road network data from your chosen data provider.

        If your application is tracking or routing assets you use in your business, such as delivery vehicles or employees, you must not use Esri as your geolocation provider. See section 82 of the [Amazon Web Services service terms](http://aws.amazon.com/service-terms) for more details.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                CalculatorName:
                  $ref: '#/components/schemas/ResourceName'
                DataSource:
                  $ref: '#/components/schemas/String'
                PricingPlan:
                  $ref: '#/components/schemas/PricingPlan'
                Description:
                  $ref: '#/components/schemas/ResourceDescription'
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request was unsuccessful because of a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            The operation was denied because the request would exceed the maximum [quota](https://docs.aws.amazon.com/location/latest/developerguide/location-quotas.html) set for Amazon Location Service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tracking/v0/trackers:
    post:
      operationId: CreateTracker
      description: |-
        Creates a tracker resource in your Amazon Web Services account, which lets you retrieve current and historical location of devices.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TrackerName:
                  $ref: '#/components/schemas/ResourceName'
                PricingPlan:
                  $ref: '#/components/schemas/PricingPlan'
                KmsKeyId:
                  $ref: '#/components/schemas/KmsKeyId'
                PricingPlanDataSource:
                  $ref: '#/components/schemas/String'
                Description:
                  $ref: '#/components/schemas/ResourceDescription'
                Tags:
                  $ref: '#/components/schemas/TagMap'
                PositionFiltering:
                  $ref: '#/components/schemas/PositionFiltering'
                EventBridgeEnabled:
                  $ref: '#/components/schemas/Boolean'
                KmsKeyEnableGeospatialQueries:
                  $ref: '#/components/schemas/Boolean'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request was unsuccessful because of a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            The operation was denied because the request would exceed the maximum [quota](https://docs.aws.amazon.com/location/latest/developerguide/location-quotas.html) set for Amazon Location Service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /geofencing/v0/collections/{CollectionName}:
    delete:
      operationId: DeleteGeofenceCollection
      description: |-
        Deletes a geofence collection from your Amazon Web Services account.

        This operation deletes the resource permanently. If the geofence collection is the target of a tracker resource, the devices will no longer be monitored.
      parameters:
      - name: CollectionName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: DescribeGeofenceCollection
      description: |-
        Retrieves the geofence collection details.
      parameters:
      - name: CollectionName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateGeofenceCollection
      description: |-
        Updates the specified properties of a given geofence collection.
      parameters:
      - name: CollectionName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                PricingPlan:
                  $ref: '#/components/schemas/PricingPlan'
                PricingPlanDataSource:
                  $ref: '#/components/schemas/String'
                Description:
                  $ref: '#/components/schemas/ResourceDescription'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /metadata/v0/keys/{KeyName}:
    delete:
      operationId: DeleteKey
      description: |-
        Deletes the specified API key. The API key must have been deactivated more than 90 days previously.
      parameters:
      - name: KeyName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: forceDelete
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Boolean'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: DescribeKey
      description: |-
        Retrieves the API key resource details.
      parameters:
      - name: KeyName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateKey
      description: |-
        Updates the specified properties of a given API key resource.
      parameters:
      - name: KeyName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  $ref: '#/components/schemas/ResourceDescription'
                ExpireTime:
                  $ref: '#/components/schemas/Timestamp'
                NoExpiry:
                  $ref: '#/components/schemas/Boolean'
                ForceUpdate:
                  $ref: '#/components/schemas/Boolean'
                Restrictions:
                  $ref: '#/components/schemas/ApiKeyRestrictions'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /maps/v0/maps/{MapName}:
    delete:
      operationId: DeleteMap
      description: |-
        Deletes a map resource from your Amazon Web Services account.

        This operation deletes the resource permanently. If the map is being used in an application, the map may not render.
      parameters:
      - name: MapName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: DescribeMap
      description: |-
        Retrieves the map resource details.
      parameters:
      - name: MapName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateMap
      description: |-
        Updates the specified properties of a given map resource.
      parameters:
      - name: MapName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                PricingPlan:
                  $ref: '#/components/schemas/PricingPlan'
                Description:
                  $ref: '#/components/schemas/ResourceDescription'
                ConfigurationUpdate:
                  $ref: '#/components/schemas/MapConfigurationUpdate'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /places/v0/indexes/{IndexName}:
    delete:
      operationId: DeletePlaceIndex
      description: |-
        Deletes a place index resource from your Amazon Web Services account.

        This operation deletes the resource permanently.
      parameters:
      - name: IndexName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: DescribePlaceIndex
      description: |-
        Retrieves the place index resource details.
      parameters:
      - name: IndexName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdatePlaceIndex
      description: |-
        Updates the specified properties of a given place index resource.
      parameters:
      - name: IndexName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                PricingPlan:
                  $ref: '#/components/schemas/PricingPlan'
                Description:
                  $ref: '#/components/schemas/ResourceDescription'
                DataSourceConfiguration:
                  $ref: '#/components/schemas/DataSourceConfiguration'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /routes/v0/calculators/{CalculatorName}:
    delete:
      operationId: DeleteRouteCalculator
      description: |-
        Deletes a route calculator resource from your Amazon Web Services account.

        This operation deletes the resource permanently.
      parameters:
      - name: CalculatorName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: DescribeRouteCalculator
      description: |-
        Retrieves the route calculator resource details.
      parameters:
      - name: CalculatorName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateRouteCalculator
      description: |-
        Updates the specified properties for a given route calculator resource.
      parameters:
      - name: CalculatorName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                PricingPlan:
                  $ref: '#/components/schemas/PricingPlan'
                Description:
                  $ref: '#/components/schemas/ResourceDescription'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tracking/v0/trackers/{TrackerName}:
    delete:
      operationId: DeleteTracker
      description: |-
        Deletes a tracker resource from your Amazon Web Services account.

        This operation deletes the resource permanently. If the tracker resource is in use, you may encounter an error. Make sure that the target resource isn't a dependency for your applications.
      parameters:
      - name: TrackerName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: DescribeTracker
      description: |-
        Retrieves the tracker resource details.
      parameters:
      - name: TrackerName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateTracker
      description: |-
        Updates the specified properties of a given tracker resource.
      parameters:
      - name: TrackerName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                PricingPlan:
                  $ref: '#/components/schemas/PricingPlan'
                PricingPlanDataSource:
                  $ref: '#/components/schemas/String'
                Description:
                  $ref: '#/components/schemas/ResourceDescription'
                PositionFiltering:
                  $ref: '#/components/schemas/PositionFiltering'
                EventBridgeEnabled:
                  $ref: '#/components/schemas/Boolean'
                KmsKeyEnableGeospatialQueries:
                  $ref: '#/components/schemas/Boolean'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tracking/v0/trackers/{TrackerName}/consumers/{ConsumerArn}:
    delete:
      operationId: DisassociateTrackerConsumer
      description: |-
        Removes the association between a tracker resource and a geofence collection.

        Once you unlink a tracker resource from a geofence collection, the tracker positions will no longer be automatically evaluated against geofences.
      parameters:
      - name: TrackerName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: ConsumerArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /geofencing/v0/collections/{CollectionName}/forecast-geofence-events:
    post:
      operationId: ForecastGeofenceEvents
      description: |-
        Evaluates device positions against geofence geometries from a given geofence collection. The event forecasts three states for which a device can be in relative to a geofence:

        `ENTER`: If a device is outside of a geofence, but would breach the fence if the device is moving at its current speed within time horizon window.

        `EXIT`: If a device is inside of a geofence, but would breach the fence if the device is moving at its current speed within time horizon window.

        `IDLE`: If a device is inside of a geofence, and the device is not moving.
      parameters:
      - name: CollectionName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DeviceState:
                  $ref: '#/components/schemas/ForecastGeofenceEventsDeviceState'
                TimeHorizonMinutes:
                  $ref: '#/components/schemas/Double'
                DistanceUnit:
                  $ref: '#/components/schemas/DistanceUnit'
                SpeedUnit:
                  $ref: '#/components/schemas/SpeedUnit'
                NextToken:
                  $ref: '#/components/schemas/LargeToken'
                MaxResults:
                  $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tracking/v0/trackers/{TrackerName}/devices/{DeviceId}/positions/latest:
    get:
      operationId: GetDevicePosition
      description: |-
        Retrieves a device's most recent position according to its sample time.

        Device positions are deleted after 30 days.
      parameters:
      - name: TrackerName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: DeviceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Id'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tracking/v0/trackers/{TrackerName}/devices/{DeviceId}/list-positions:
    post:
      operationId: GetDevicePositionHistory
      description: |-
        Retrieves the device position history from a tracker resource within a specified range of time.

        Device positions are deleted after 30 days.
      parameters:
      - name: TrackerName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: DeviceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                NextToken:
                  $ref: '#/components/schemas/Token'
                StartTimeInclusive:
                  $ref: '#/components/schemas/Timestamp'
                EndTimeExclusive:
                  $ref: '#/components/schemas/Timestamp'
                MaxResults:
                  $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /geofencing/v0/collections/{CollectionName}/geofences/{GeofenceId}:
    get:
      operationId: GetGeofence
      description: |-
        Retrieves the geofence details from a geofence collection.

        The returned geometry will always match the geometry format used when the geofence was created.
      parameters:
      - name: CollectionName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: GeofenceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Id'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: PutGeofence
      description: |-
        Stores a geofence geometry in a given geofence collection, or updates the geometry of an existing geofence if a geofence ID is included in the request.
      parameters:
      - name: CollectionName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: GeofenceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Geometry:
                  $ref: '#/components/schemas/GeofenceGeometry'
                GeofenceProperties:
                  $ref: '#/components/schemas/PropertyMap'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request was unsuccessful because of a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /maps/v0/maps/{MapName}/glyphs/{FontStack}/{FontUnicodeRange}:
    get:
      operationId: GetMapGlyphs
      description: |-
        Retrieves glyphs used to display labels on a map.
      parameters:
      - name: MapName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: FontStack
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: FontUnicodeRange
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: key
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ApiKey'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /maps/v0/maps/{MapName}/sprites/{FileName}:
    get:
      operationId: GetMapSprites
      description: |-
        Retrieves the sprite sheet corresponding to a map resource. The sprite sheet is a PNG image paired with a JSON document describing the offsets of individual icons that will be displayed on a rendered map.
      parameters:
      - name: MapName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: FileName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: key
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ApiKey'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /maps/v0/maps/{MapName}/style-descriptor:
    get:
      operationId: GetMapStyleDescriptor
      description: |-
        Retrieves the map style descriptor from a map resource.

        The style descriptor contains speciﬁcations on how features render on a map. For example, what data to display, what order to display the data in, and the style for the data. Style descriptors follow the Mapbox Style Specification.
      parameters:
      - name: MapName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: key
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ApiKey'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /maps/v0/maps/{MapName}/tiles/{Z}/{X}/{Y}:
    get:
      operationId: GetMapTile
      description: |-
        Retrieves a vector data tile from the map resource. Map tiles are used by clients to render a map. they're addressed using a grid arrangement with an X coordinate, Y coordinate, and Z (zoom) level.

        The origin (0, 0) is the top left of the map. Increasing the zoom level by 1 doubles both the X and Y dimensions, so a tile containing data for the entire world at (0/0/0) will be split into 4 tiles at zoom 1 (1/0/0, 1/0/1, 1/1/0, 1/1/1).
      parameters:
      - name: MapName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: Z
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: X
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: Y
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: key
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ApiKey'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /places/v0/indexes/{IndexName}/places/{PlaceId}:
    get:
      operationId: GetPlace
      description: |-
        Finds a place by its unique ID. A `PlaceId` is returned by other search operations.

        A PlaceId is valid only if all of the following are the same in the original search request and the call to `GetPlace`.

          * Customer Amazon Web Services account

          * Amazon Web Services Region

          * Data provider specified in the place index resource
      parameters:
      - name: IndexName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: PlaceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PlaceId'
      - name: language
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/LanguageTag'
      - name: key
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ApiKey'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tracking/v0/trackers/{TrackerName}/list-positions:
    post:
      operationId: ListDevicePositions
      description: |-
        A batch request to retrieve all device positions.
      parameters:
      - name: TrackerName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MaxResults:
                  $ref: '#/components/schemas/Integer'
                NextToken:
                  $ref: '#/components/schemas/Token'
                FilterGeometry:
                  $ref: '#/components/schemas/TrackingFilterGeometry'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /geofencing/v0/list-collections:
    post:
      operationId: ListGeofenceCollections
      description: |-
        Lists geofence collections in your Amazon Web Services account.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MaxResults:
                  $ref: '#/components/schemas/Integer'
                NextToken:
                  $ref: '#/components/schemas/Token'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /geofencing/v0/collections/{CollectionName}/list-geofences:
    post:
      operationId: ListGeofences
      description: |-
        Lists geofences stored in a given geofence collection.
      parameters:
      - name: CollectionName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                NextToken:
                  $ref: '#/components/schemas/LargeToken'
                MaxResults:
                  $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /metadata/v0/list-keys:
    post:
      operationId: ListKeys
      description: |-
        Lists API key resources in your Amazon Web Services account.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MaxResults:
                  $ref: '#/components/schemas/Integer'
                NextToken:
                  $ref: '#/components/schemas/Token'
                Filter:
                  $ref: '#/components/schemas/ApiKeyFilter'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /maps/v0/list-maps:
    post:
      operationId: ListMaps
      description: |-
        Lists map resources in your Amazon Web Services account.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MaxResults:
                  $ref: '#/components/schemas/Integer'
                NextToken:
                  $ref: '#/components/schemas/Token'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /places/v0/list-indexes:
    post:
      operationId: ListPlaceIndexes
      description: |-
        Lists place index resources in your Amazon Web Services account.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MaxResults:
                  $ref: '#/components/schemas/Integer'
                NextToken:
                  $ref: '#/components/schemas/Token'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /routes/v0/list-calculators:
    post:
      operationId: ListRouteCalculators
      description: |-
        Lists route calculator resources in your Amazon Web Services account.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MaxResults:
                  $ref: '#/components/schemas/Integer'
                NextToken:
                  $ref: '#/components/schemas/Token'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tags/{ResourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Returns a list of tags that are applied to the specified Amazon Location resource.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: TagResource
      description: |-
        Assigns one or more tags (key-value pairs) to the specified Amazon Location Service resource.

        Tags can help you organize and categorize your resources. You can also use them to scope user permissions, by granting a user permission to access or change only resources with certain tag values.

        You can use the `TagResource` operation with an Amazon Location Service resource that already has tags. If you specify a new tag key for the resource, this tag is appended to the tags already associated with the resource. If you specify a tag key that's already associated with the resource, the new tag value that you specify replaces the previous value for that tag.

        You can associate up to 50 tags with a resource.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: UntagResource
      description: |-
        Removes one or more tags from the specified Amazon Location resource.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeys'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tracking/v0/trackers/{TrackerName}/list-consumers:
    post:
      operationId: ListTrackerConsumers
      description: |-
        Lists geofence collections currently associated to the given tracker resource.
      parameters:
      - name: TrackerName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MaxResults:
                  $ref: '#/components/schemas/Integer'
                NextToken:
                  $ref: '#/components/schemas/Token'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tracking/v0/list-trackers:
    post:
      operationId: ListTrackers
      description: |-
        Lists tracker resources in your Amazon Web Services account.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MaxResults:
                  $ref: '#/components/schemas/Integer'
                NextToken:
                  $ref: '#/components/schemas/Token'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /places/v0/indexes/{IndexName}/search/position:
    post:
      operationId: SearchPlaceIndexForPosition
      description: |-
        Reverse geocodes a given coordinate and returns a legible address. Allows you to search for Places or points of interest near a given position.
      parameters:
      - name: IndexName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: key
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ApiKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Position:
                  $ref: '#/components/schemas/Position'
                MaxResults:
                  $ref: '#/components/schemas/PlaceIndexSearchResultLimit'
                Language:
                  $ref: '#/components/schemas/LanguageTag'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /places/v0/indexes/{IndexName}/search/suggestions:
    post:
      operationId: SearchPlaceIndexForSuggestions
      description: |-
        Generates suggestions for addresses and points of interest based on partial or misspelled free-form text. This operation is also known as autocomplete, autosuggest, or fuzzy matching.

        Optional parameters let you narrow your search results by bounding box or country, or bias your search toward a specific position on the globe.

        You can search for suggested place names near a specified position by using `BiasPosition`, or filter results within a bounding box by using `FilterBBox`. These parameters are mutually exclusive; using both `BiasPosition` and `FilterBBox` in the same command returns an error.
      parameters:
      - name: IndexName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: key
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ApiKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Text:
                  $ref: '#/components/schemas/SensitiveString'
                BiasPosition:
                  $ref: '#/components/schemas/Position'
                FilterBBox:
                  $ref: '#/components/schemas/BoundingBox'
                FilterCountries:
                  $ref: '#/components/schemas/CountryCodeList'
                MaxResults:
                  $ref: '#/components/schemas/Integer'
                Language:
                  $ref: '#/components/schemas/LanguageTag'
                FilterCategories:
                  $ref: '#/components/schemas/FilterPlaceCategoryList'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /places/v0/indexes/{IndexName}/search/text:
    post:
      operationId: SearchPlaceIndexForText
      description: |-
        Geocodes free-form text, such as an address, name, city, or region to allow you to search for Places or points of interest.

        Optional parameters let you narrow your search results by bounding box or country, or bias your search toward a specific position on the globe.

        You can search for places near a given position using `BiasPosition`, or filter results within a bounding box using `FilterBBox`. Providing both parameters simultaneously returns an error.

        Search results are returned in order of highest to lowest relevance.
      parameters:
      - name: IndexName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: key
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ApiKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Text:
                  $ref: '#/components/schemas/SensitiveString'
                BiasPosition:
                  $ref: '#/components/schemas/Position'
                FilterBBox:
                  $ref: '#/components/schemas/BoundingBox'
                FilterCountries:
                  $ref: '#/components/schemas/CountryCodeList'
                MaxResults:
                  $ref: '#/components/schemas/PlaceIndexSearchResultLimit'
                Language:
                  $ref: '#/components/schemas/LanguageTag'
                FilterCategories:
                  $ref: '#/components/schemas/FilterPlaceCategoryList'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tracking/v0/trackers/{TrackerName}/positions/verify:
    post:
      operationId: VerifyDevicePosition
      description: |-
        Verifies the integrity of the device's position by determining if it was reported behind a proxy, and by comparing it to an inferred position estimated based on the device's state.
      parameters:
      - name: TrackerName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DeviceState:
                  $ref: '#/components/schemas/DeviceState'
                DistanceUnit:
                  $ref: '#/components/schemas/DistanceUnit'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed to process because of an unknown server error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that you've entered was not found in your AWS account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied because of request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    AccessDeniedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      required:
      - Message
      description: The request was denied because of insufficient access or permissions.
        Check with an administrator to verify your permissions.
    ApiKey:
      type: string
      maxLength: 1000
    ApiKeyAction:
      type: string
      pattern: ^(geo|geo-routes|geo-places|geo-maps):\w*\*?$
      minLength: 5
      maxLength: 200
    ApiKeyActionList:
      type: array
      items:
        $ref: '#/components/schemas/ApiKeyAction'
    ApiKeyFilter:
      type: object
      properties:
        KeyStatus:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: Filter on `Active` or `Expired` API keys.
      description: Options for filtering API keys.
    ApiKeyRestrictions:
      type: object
      properties:
        AllowActions:
          allOf:
          - $ref: '#/components/schemas/ApiKeyActionList'
          description: "A list of allowed actions that an API key resource grants\
            \ permissions to perform. You must have at least one action for each type\
            \ of resource. For example, if you have a place resource, you must include\
            \ at least one place action.\n\nThe following are valid values for the\
            \ actions.\n\n  * **Map actions**\n\n    * `geo:GetMap*` \\- Allows all\
            \ actions needed for map rendering.\n\n  * **Place actions**\n\n    *\
            \ `geo:SearchPlaceIndexForText` \\- Allows geocoding.\n\n    * `geo:SearchPlaceIndexForPosition`\
            \ \\- Allows reverse geocoding.\n\n    * `geo:SearchPlaceIndexForSuggestions`\
            \ \\- Allows generating suggestions from text.\n\n    * `GetPlace` \\\
            - Allows finding a place by place ID.\n\n  * **Route actions**\n\n   \
            \ * `geo:CalculateRoute` \\- Allows point to point routing.\n\n    * `geo:CalculateRouteMatrix`\
            \ \\- Allows calculating a matrix of routes.\n\nYou must use these strings\
            \ exactly. For example, to provide access to map rendering, the only valid\
            \ action is `geo:GetMap*` as an input to the list. `[\"geo:GetMap*\"]`\
            \ is valid but `[\"geo:GetMapTile\"]` is not. Similarly, you cannot use\
            \ `[\"geo:SearchPlaceIndexFor*\"]` \\- you must list each of the Place\
            \ actions separately."
        AllowResources:
          allOf:
          - $ref: '#/components/schemas/GeoArnList'
          description: "A list of allowed resource ARNs that a API key bearer can\
            \ perform actions on.\n\n  * The ARN must be the correct ARN for a map,\
            \ place, or route ARN. You may include wildcards in the resource-id to\
            \ match multiple resources of the same type.\n\n  * The resources must\
            \ be in the same `partition`, `region`, and `account-id` as the key that\
            \ is being created.\n\n  * Other than wildcards, you must include the\
            \ full ARN, including the `arn`, `partition`, `service`, `region`, `account-id`\
            \ and `resource-id` delimited by colons (:).\n\n  * No spaces allowed,\
            \ even with wildcards. For example, `arn:aws:geo:region:_account-id_ :map/ExampleMap*`.\n\
            \nFor more information about ARN format, see [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)."
        AllowReferers:
          allOf:
          - $ref: '#/components/schemas/RefererPatternList'
          description: "An optional list of allowed HTTP referers for which requests\
            \ must originate from. Requests using this API key from other domains\
            \ will not be allowed.\n\nRequirements:\n\n  * Contain only alphanumeric\
            \ characters (A–Z, a–z, 0–9) or any symbols in this list `$\\-._+!*`(),;/?:@=&`\n\
            \n  * May contain a percent (%) if followed by 2 hexadecimal digits (A-F,\
            \ a-f, 0-9); this is used for URL encoding purposes.\n\n  * May contain\
            \ wildcard characters question mark (?) and asterisk (*).\n\nQuestion\
            \ mark (?) will replace any single character (including hexadecimal digits).\n\
            \nAsterisk (*) will replace any multiple characters (including multiple\
            \ hexadecimal digits).\n\n  * No spaces allowed. For example, `https://example.com`."
      required:
      - AllowActions
      - AllowResources
      description: API Restrictions on the allowed actions, resources, and referers
        for an API key resource.
    Arn:
      type: string
      pattern: ^arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:([^/].*)?$
      maxLength: 1600
    ArnList:
      type: array
      items:
        $ref: '#/components/schemas/Arn'
    AssociateTrackerConsumerRequest:
      type: object
      properties:
        TrackerName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the tracker resource to be associated with a geofence
            collection.
        ConsumerArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: "The Amazon Resource Name (ARN) for the geofence collection\
            \ to be associated to tracker resource. Used when you need to specify\
            \ a resource across all Amazon Web Services.\n\n  * Format example: `arn:aws:geo:region:account-id:geofence-collection/ExampleGeofenceCollectionConsumer`"
      required:
      - TrackerName
      - ConsumerArn
    AssociateTrackerConsumerResponse:
      type: object
      properties: {}
    Base64EncodedGeobuf:
      type: string
      format: byte
      maxLength: 600000
      x-sensitive: true
    BatchDeleteDevicePositionHistoryError:
      type: object
      properties:
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The ID of the device for this position.
        Error:
          $ref: '#/components/schemas/BatchItemError'
      required:
      - DeviceId
      - Error
      description: Contains the tracker resource details.
    BatchDeleteDevicePositionHistoryErrorList:
      type: array
      items:
        $ref: '#/components/schemas/BatchDeleteDevicePositionHistoryError'
    BatchDeleteDevicePositionHistoryRequest:
      type: object
      properties:
        TrackerName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the tracker resource to delete the device position
            history from.
        DeviceIds:
          allOf:
          - $ref: '#/components/schemas/DeviceIdsList'
          description: "Devices whose position history you want to delete.\n\n  *\
            \ For example, for two devices: `“DeviceIds” : [DeviceId1,DeviceId2]`"
      required:
      - TrackerName
      - DeviceIds
    BatchDeleteDevicePositionHistoryResponse:
      type: object
      properties:
        Errors:
          allOf:
          - $ref: '#/components/schemas/BatchDeleteDevicePositionHistoryErrorList'
          description: Contains error details for each device history that failed
            to delete.
      required:
      - Errors
    BatchDeleteGeofenceError:
      type: object
      properties:
        GeofenceId:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The geofence associated with the error message.
        Error:
          allOf:
          - $ref: '#/components/schemas/BatchItemError'
          description: Contains details associated to the batch error.
      required:
      - GeofenceId
      - Error
      description: Contains error details for each geofence that failed to delete
        from the geofence collection.
    BatchDeleteGeofenceErrorList:
      type: array
      items:
        $ref: '#/components/schemas/BatchDeleteGeofenceError'
    BatchDeleteGeofenceRequest:
      type: object
      properties:
        CollectionName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The geofence collection storing the geofences to be deleted.
        GeofenceIds:
          allOf:
          - $ref: '#/components/schemas/IdList'
          description: The batch of geofences to be deleted.
      required:
      - CollectionName
      - GeofenceIds
    BatchDeleteGeofenceResponse:
      type: object
      properties:
        Errors:
          allOf:
          - $ref: '#/components/schemas/BatchDeleteGeofenceErrorList'
          description: Contains error details for each geofence that failed to delete.
      required:
      - Errors
    BatchEvaluateGeofencesError:
      type: object
      properties:
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The device associated with the position evaluation error.
        SampleTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'Specifies a timestamp for when the error occurred in [ISO
            8601](https://www.iso.org/iso-8601-date-and-time-format.html) format:
            `YYYY-MM-DDThh:mm:ss.sssZ`'
        Error:
          allOf:
          - $ref: '#/components/schemas/BatchItemError'
          description: Contains details associated to the batch error.
      required:
      - DeviceId
      - SampleTime
      - Error
      description: Contains error details for each device that failed to evaluate
        its position against the geofences in a given geofence collection.
    BatchEvaluateGeofencesErrorList:
      type: array
      items:
        $ref: '#/components/schemas/BatchEvaluateGeofencesError'
    BatchEvaluateGeofencesRequest:
      type: object
      properties:
        CollectionName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The geofence collection used in evaluating the position of
            devices against its geofences.
        DevicePositionUpdates:
          allOf:
          - $ref: '#/components/schemas/DevicePositionUpdateList'
          description: Contains device details for each device to be evaluated against
            the given geofence collection.
      required:
      - CollectionName
      - DevicePositionUpdates
    BatchEvaluateGeofencesResponse:
      type: object
      properties:
        Errors:
          allOf:
          - $ref: '#/components/schemas/BatchEvaluateGeofencesErrorList'
          description: Contains error details for each device that failed to evaluate
            its position against the given geofence collection.
      required:
      - Errors
    BatchGetDevicePositionError:
      type: object
      properties:
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The ID of the device that didn't return a position.
        Error:
          allOf:
          - $ref: '#/components/schemas/BatchItemError'
          description: Contains details related to the error code.
      required:
      - DeviceId
      - Error
      description: Contains error details for each device that didn't return a position.
    BatchGetDevicePositionErrorList:
      type: array
      items:
        $ref: '#/components/schemas/BatchGetDevicePositionError'
    BatchGetDevicePositionRequest:
      type: object
      properties:
        TrackerName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The tracker resource retrieving the device position.
        DeviceIds:
          allOf:
          - $ref: '#/components/schemas/IdList'
          description: "Devices whose position you want to retrieve.\n\n  * For example,\
            \ for two devices: `device-ids=DeviceId1&device-ids=DeviceId2`"
      required:
      - TrackerName
      - DeviceIds
    BatchGetDevicePositionResponse:
      type: object
      properties:
        Errors:
          allOf:
          - $ref: '#/components/schemas/BatchGetDevicePositionErrorList'
          description: Contains error details for each device that failed to send
            its position to the tracker resource.
        DevicePositions:
          allOf:
          - $ref: '#/components/schemas/DevicePositionList'
          description: Contains device position details such as the device ID, position,
            and timestamps for when the position was received and sampled.
      required:
      - Errors
      - DevicePositions
    BatchItemError:
      type: object
      properties:
        Code:
          allOf:
          - $ref: '#/components/schemas/BatchItemErrorCode'
          description: The error code associated with the batch request error.
        Message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A message with the reason for the batch request error.
      description: Contains the batch request error details associated with the request.
    BatchItemErrorCode:
      type: string
      enum:
      - AccessDeniedError
      - ConflictError
      - InternalServerError
      - ResourceNotFoundError
      - ThrottlingError
      - ValidationError
    BatchPutGeofenceError:
      type: object
      properties:
        GeofenceId:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The geofence associated with the error message.
        Error:
          allOf:
          - $ref: '#/components/schemas/BatchItemError'
          description: Contains details associated to the batch error.
      required:
      - GeofenceId
      - Error
      description: Contains error details for each geofence that failed to be stored
        in a given geofence collection.
    BatchPutGeofenceErrorList:
      type: array
      items:
        $ref: '#/components/schemas/BatchPutGeofenceError'
    BatchPutGeofenceRequest:
      type: object
      properties:
        CollectionName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The geofence collection storing the geofences.
        Entries:
          allOf:
          - $ref: '#/components/schemas/BatchPutGeofenceRequestEntryList'
          description: The batch of geofences to be stored in a geofence collection.
      required:
      - CollectionName
      - Entries
    BatchPutGeofenceRequestEntry:
      type: object
      properties:
        GeofenceId:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The identifier for the geofence to be stored in a given geofence
            collection.
        Geometry:
          allOf:
          - $ref: '#/components/schemas/GeofenceGeometry'
          description: 'Contains the details to specify the position of the geofence.
            Can be a polygon, a circle or a polygon encoded in Geobuf format. Including
            multiple selections will return a validation error.


            The [ geofence polygon](https://docs.aws.amazon.com/location-geofences/latest/APIReference/API_GeofenceGeometry.html)
            format supports a maximum of 1,000 vertices. The [Geofence geobuf](https://docs.aws.amazon.com/location-geofences/latest/APIReference/API_GeofenceGeometry.html)
            format supports a maximum of 100,000 vertices.'
        GeofenceProperties:
          allOf:
          - $ref: '#/components/schemas/PropertyMap'
          description: 'Associates one of more properties with the geofence. A property
            is a key-value pair stored with the geofence and added to any geofence
            event triggered with that geofence.


            Format: `"key" : "value"`'
      required:
      - GeofenceId
      - Geometry
      description: Contains geofence geometry details.
    BatchPutGeofenceRequestEntryList:
      type: array
      items:
        $ref: '#/components/schemas/BatchPutGeofenceRequestEntry'
    BatchPutGeofenceResponse:
      type: object
      properties:
        Successes:
          allOf:
          - $ref: '#/components/schemas/BatchPutGeofenceSuccessList'
          description: Contains each geofence that was successfully stored in a geofence
            collection.
        Errors:
          allOf:
          - $ref: '#/components/schemas/BatchPutGeofenceErrorList'
          description: Contains additional error details for each geofence that failed
            to be stored in a geofence collection.
      required:
      - Successes
      - Errors
    BatchPutGeofenceSuccess:
      type: object
      properties:
        GeofenceId:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The geofence successfully stored in a geofence collection.
        CreateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp for when the geofence was stored in a geofence
            collection in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)
            format: `YYYY-MM-DDThh:mm:ss.sssZ`'
        UpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp for when the geofence was last updated in [ISO
            8601](https://www.iso.org/iso-8601-date-and-time-format.html) format:
            `YYYY-MM-DDThh:mm:ss.sssZ`'
      required:
      - GeofenceId
      - CreateTime
      - UpdateTime
      description: Contains a summary of each geofence that was successfully stored
        in a given geofence collection.
    BatchPutGeofenceSuccessList:
      type: array
      items:
        $ref: '#/components/schemas/BatchPutGeofenceSuccess'
    BatchUpdateDevicePositionError:
      type: object
      properties:
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The device associated with the failed location update.
        SampleTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp at which the device position was determined.
            Uses [ ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)
            format: `YYYY-MM-DDThh:mm:ss.sssZ`.'
        Error:
          allOf:
          - $ref: '#/components/schemas/BatchItemError'
          description: Contains details related to the error code such as the error
            code and error message.
      required:
      - DeviceId
      - SampleTime
      - Error
      description: Contains error details for each device that failed to update its
        position.
    BatchUpdateDevicePositionErrorList:
      type: array
      items:
        $ref: '#/components/schemas/BatchUpdateDevicePositionError'
    BatchUpdateDevicePositionRequest:
      type: object
      properties:
        TrackerName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the tracker resource to update.
        Updates:
          allOf:
          - $ref: '#/components/schemas/DevicePositionUpdateList'
          description: Contains the position update details for each device, up to
            10 devices.
      required:
      - TrackerName
      - Updates
    BatchUpdateDevicePositionResponse:
      type: object
      properties:
        Errors:
          allOf:
          - $ref: '#/components/schemas/BatchUpdateDevicePositionErrorList'
          description: Contains error details for each device that failed to update
            its position.
      required:
      - Errors
    BoundingBox:
      type: array
      items:
        type: number
      x-sensitive: true
    CalculateRouteCarModeOptions:
      type: object
      properties:
        AvoidFerries:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'Avoids ferries when calculating routes.


            Default Value: `false`


            Valid Values: `false` | `true`'
        AvoidTolls:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'Avoids tolls when calculating routes.


            Default Value: `false`


            Valid Values: `false` | `true`'
      description: Contains details about additional route preferences for requests
        that specify `TravelMode` as `Car`.
    CalculateRouteMatrixRequest:
      type: object
      properties:
        CalculatorName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the route calculator resource that you want to
            use to calculate the route matrix.
        DeparturePositions:
          allOf:
          - $ref: '#/components/schemas/PositionList'
          description: 'The list of departure (origin) positions for the route matrix.
            An array of points, each of which is itself a 2-value array defined in
            [WGS 84](https://earth-info.nga.mil/GandG/wgs84/index.html) format: `[longitude,
            latitude]`. For example, `[-123.115, 49.285]`.


            Depending on the data provider selected in the route calculator resource
            there may be additional restrictions on the inputs you can choose. See
            [ Position restrictions](https://docs.aws.amazon.com/location/latest/developerguide/calculate-route-matrix.html#matrix-routing-position-limits)
            in the _Amazon Location Service Developer Guide_.


            For route calculators that use Esri as the data provider, if you specify
            a departure that''s not located on a road, Amazon Location [ moves the
            position to the nearest road](https://docs.aws.amazon.com/location/latest/developerguide/snap-to-nearby-road.html).
            The snapped value is available in the result in `SnappedDeparturePositions`.


            Valid Values: `[-180 to 180,-90 to 90]`'
        DestinationPositions:
          allOf:
          - $ref: '#/components/schemas/PositionList'
          description: 'The list of destination positions for the route matrix. An
            array of points, each of which is itself a 2-value array defined in [WGS
            84](https://earth-info.nga.mil/GandG/wgs84/index.html) format: `[longitude,
            latitude]`. For example, `[-122.339, 47.615]`


            Depending on the data provider selected in the route calculator resource
            there may be additional restrictions on the inputs you can choose. See
            [ Position restrictions](https://docs.aws.amazon.com/location/latest/developerguide/calculate-route-matrix.html#matrix-routing-position-limits)
            in the _Amazon Location Service Developer Guide_.


            For route calculators that use Esri as the data provider, if you specify
            a destination that''s not located on a road, Amazon Location [ moves the
            position to the nearest road](https://docs.aws.amazon.com/location/latest/developerguide/snap-to-nearby-road.html).
            The snapped value is available in the result in `SnappedDestinationPositions`.


            Valid Values: `[-180 to 180,-90 to 90]`'
        TravelMode:
          allOf:
          - $ref: '#/components/schemas/TravelMode'
          description: "Specifies the mode of transport when calculating a route.\
            \ Used in estimating the speed of travel and road compatibility.\n\nThe\
            \ `TravelMode` you specify also determines how you specify route preferences:\n\
            \n  * If traveling by `Car` use the `CarModeOptions` parameter.\n\n  *\
            \ If traveling by `Truck` use the `TruckModeOptions` parameter.\n\n`Bicycle`\
            \ or `Motorcycle` are only valid when using `Grab` as a data provider,\
            \ and only within Southeast Asia.\n\n`Truck` is not available for Grab.\n\
            \nFor more information about using Grab as a data provider, see [GrabMaps](https://docs.aws.amazon.com/location/latest/developerguide/grab.html)\
            \ in the _Amazon Location Service Developer Guide_.\n\nDefault Value:\
            \ `Car`"
        DepartureTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: "Specifies the desired time of departure. Uses the given time\
            \ to calculate the route matrix. You can't set both `DepartureTime` and\
            \ `DepartNow`. If neither is set, the best time of day to travel with\
            \ the best traffic conditions is used to calculate the route matrix.\n\
            \nSetting a departure time in the past returns a `400 ValidationException`\
            \ error.\n\n  * In [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)\
            \ format: `YYYY-MM-DDThh:mm:ss.sssZ`. For example, `2020–07-2T12:15:20.000Z+01:00`"
        DepartNow:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'Sets the time of departure as the current time. Uses the current
            time to calculate the route matrix. You can''t set both `DepartureTime`
            and `DepartNow`. If neither is set, the best time of day to travel with
            the best traffic conditions is used to calculate the route matrix.


            Default Value: `false`


            Valid Values: `false` | `true`'
        DistanceUnit:
          allOf:
          - $ref: '#/components/schemas/DistanceUnit'
          description: 'Set the unit system to specify the distance.


            Default Value: `Kilometers`'
        CarModeOptions:
          allOf:
          - $ref: '#/components/schemas/CalculateRouteCarModeOptions'
          description: 'Specifies route preferences when traveling by `Car`, such
            as avoiding routes that use ferries or tolls.


            Requirements: `TravelMode` must be specified as `Car`.'
        TruckModeOptions:
          allOf:
          - $ref: '#/components/schemas/CalculateRouteTruckModeOptions'
          description: 'Specifies route preferences when traveling by `Truck`, such
            as avoiding routes that use ferries or tolls, and truck specifications
            to consider when choosing an optimal road.


            Requirements: `TravelMode` must be specified as `Truck`.'
        Key:
          allOf:
          - $ref: '#/components/schemas/ApiKey'
          description: The optional [API key](https://docs.aws.amazon.com/location/latest/developerguide/using-apikeys.html)
            to authorize the request.
      required:
      - CalculatorName
      - DeparturePositions
      - DestinationPositions
    CalculateRouteMatrixResponse:
      type: object
      properties:
        RouteMatrix:
          allOf:
          - $ref: '#/components/schemas/RouteMatrix'
          description: The calculated route matrix containing the results for all
            pairs of `DeparturePositions` to `DestinationPositions`. Each row corresponds
            to one entry in `DeparturePositions`. Each entry in the row corresponds
            to the route from that entry in `DeparturePositions` to an entry in `DestinationPositions`.
        SnappedDeparturePositions:
          allOf:
          - $ref: '#/components/schemas/PositionList'
          description: For routes calculated using an Esri route calculator resource,
            departure positions are snapped to the closest road. For Esri route calculator
            resources, this returns the list of departure/origin positions used for
            calculation of the `RouteMatrix`.
        SnappedDestinationPositions:
          allOf:
          - $ref: '#/components/schemas/PositionList'
          description: The list of destination positions for the route matrix used
            for calculation of the `RouteMatrix`.
        Summary:
          allOf:
          - $ref: '#/components/schemas/CalculateRouteMatrixSummary'
          description: Contains information about the route matrix, `DataSource`,
            `DistanceUnit`, `RouteCount` and `ErrorCount`.
      required:
      - RouteMatrix
      - Summary
      description: Returns the result of the route matrix calculation.
    CalculateRouteMatrixSummary:
      type: object
      properties:
        DataSource:
          allOf:
          - $ref: '#/components/schemas/String'
          description: "The data provider of traffic and road network data used to\
            \ calculate the routes. Indicates one of the available providers:\n\n\
            \  * `Esri`\n\n  * `Grab`\n\n  * `Here`\n\nFor more information about\
            \ data providers, see [Amazon Location Service data providers](https://docs.aws.amazon.com/location/latest/developerguide/what-is-data-provider.html)."
        RouteCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The count of cells in the route matrix. Equal to the number
            of `DeparturePositions` multiplied by the number of `DestinationPositions`.
        ErrorCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The count of error results in the route matrix. If this number
            is 0, all routes were calculated successfully.
        DistanceUnit:
          allOf:
          - $ref: '#/components/schemas/DistanceUnit'
          description: The unit of measurement for route distances.
      required:
      - DataSource
      - RouteCount
      - ErrorCount
      - DistanceUnit
      description: A summary of the calculated route matrix.
    CalculateRouteRequest:
      type: object
      properties:
        CalculatorName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the route calculator resource that you want to
            use to calculate the route.
        DeparturePosition:
          allOf:
          - $ref: '#/components/schemas/Position'
          description: "The start position for the route. Defined in [World Geodetic\
            \ System (WGS 84)](https://earth-info.nga.mil/index.php?dir=wgs84&action=wgs84)\
            \ format: `[longitude, latitude]`.\n\n  * For example, `[-123.115, 49.285]`\n\
            \nIf you specify a departure that's not located on a road, Amazon Location\
            \ [moves the position to the nearest road](https://docs.aws.amazon.com/location/latest/developerguide/snap-to-nearby-road.html).\
            \ If Esri is the provider for your route calculator, specifying a route\
            \ that is longer than 400 km returns a `400 RoutesValidationException`\
            \ error.\n\nValid Values: `[-180 to 180,-90 to 90]`"
        DestinationPosition:
          allOf:
          - $ref: '#/components/schemas/Position'
          description: "The finish position for the route. Defined in [World Geodetic\
            \ System (WGS 84)](https://earth-info.nga.mil/index.php?dir=wgs84&action=wgs84)\
            \ format: `[longitude, latitude]`.\n\n  * For example, `[-122.339, 47.615]`\n\
            \nIf you specify a destination that's not located on a road, Amazon Location\
            \ [moves the position to the nearest road](https://docs.aws.amazon.com/location/latest/developerguide/snap-to-nearby-road.html).\n\
            \nValid Values: `[-180 to 180,-90 to 90]`"
        WaypointPositions:
          allOf:
          - $ref: '#/components/schemas/WaypointPositionList'
          description: "Specifies an ordered list of up to 23 intermediate positions\
            \ to include along a route between the departure position and destination\
            \ position.\n\n  * For example, from the `DeparturePosition` `[-123.115,\
            \ 49.285]`, the route follows the order that the waypoint positions are\
            \ given `[[-122.757, 49.0021],[-122.349, 47.620]]`\n\nIf you specify a\
            \ waypoint position that's not located on a road, Amazon Location [moves\
            \ the position to the nearest road](https://docs.aws.amazon.com/location/latest/developerguide/snap-to-nearby-road.html).\n\
            \nSpecifying more than 23 waypoints returns a `400 ValidationException`\
            \ error.\n\nIf Esri is the provider for your route calculator, specifying\
            \ a route that is longer than 400 km returns a `400 RoutesValidationException`\
            \ error.\n\nValid Values: `[-180 to 180,-90 to 90]`"
        TravelMode:
          allOf:
          - $ref: '#/components/schemas/TravelMode'
          description: "Specifies the mode of transport when calculating a route.\
            \ Used in estimating the speed of travel and road compatibility. You can\
            \ choose `Car`, `Truck`, `Walking`, `Bicycle` or `Motorcycle` as options\
            \ for the `TravelMode`.\n\n`Bicycle` and `Motorcycle` are only valid when\
            \ using Grab as a data provider, and only within Southeast Asia.\n\n`Truck`\
            \ is not available for Grab.\n\nFor more details on the using Grab for\
            \ routing, including areas of coverage, see [GrabMaps](https://docs.aws.amazon.com/location/latest/developerguide/grab.html)\
            \ in the _Amazon Location Service Developer Guide_.\n\nThe `TravelMode`\
            \ you specify also determines how you specify route preferences:\n\n \
            \ * If traveling by `Car` use the `CarModeOptions` parameter.\n\n  * If\
            \ traveling by `Truck` use the `TruckModeOptions` parameter.\n\nDefault\
            \ Value: `Car`"
        DepartureTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: "Specifies the desired time of departure. Uses the given time\
            \ to calculate the route. Otherwise, the best time of day to travel with\
            \ the best traffic conditions is used to calculate the route.\n\n  * In\
            \ [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format:\
            \ `YYYY-MM-DDThh:mm:ss.sssZ`. For example, `2020–07-2T12:15:20.000Z+01:00`"
        DepartNow:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'Sets the time of departure as the current time. Uses the current
            time to calculate a route. Otherwise, the best time of day to travel with
            the best traffic conditions is used to calculate the route.


            Default Value: `false`


            Valid Values: `false` | `true`'
        DistanceUnit:
          allOf:
          - $ref: '#/components/schemas/DistanceUnit'
          description: 'Set the unit system to specify the distance.


            Default Value: `Kilometers`'
        IncludeLegGeometry:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'Set to include the geometry details in the result for each
            path between a pair of positions.


            Default Value: `false`


            Valid Values: `false` | `true`'
        CarModeOptions:
          allOf:
          - $ref: '#/components/schemas/CalculateRouteCarModeOptions'
          description: 'Specifies route preferences when traveling by `Car`, such
            as avoiding routes that use ferries or tolls.


            Requirements: `TravelMode` must be specified as `Car`.'
        TruckModeOptions:
          allOf:
          - $ref: '#/components/schemas/CalculateRouteTruckModeOptions'
          description: 'Specifies route preferences when traveling by `Truck`, such
            as avoiding routes that use ferries or tolls, and truck specifications
            to consider when choosing an optimal road.


            Requirements: `TravelMode` must be specified as `Truck`.'
        ArrivalTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'Specifies the desired time of arrival. Uses the given time
            to calculate the route. Otherwise, the best time of day to travel with
            the best traffic conditions is used to calculate the route.


            ArrivalTime is not supported Esri.'
        OptimizeFor:
          allOf:
          - $ref: '#/components/schemas/OptimizationMode'
          description: Specifies the distance to optimize for when calculating a route.
        Key:
          allOf:
          - $ref: '#/components/schemas/ApiKey'
          description: The optional [API key](https://docs.aws.amazon.com/location/latest/developerguide/using-apikeys.html)
            to authorize the request.
      required:
      - CalculatorName
      - DeparturePosition
      - DestinationPosition
    CalculateRouteResponse:
      type: object
      properties:
        Legs:
          allOf:
          - $ref: '#/components/schemas/LegList'
          description: "Contains details about each path between a pair of positions\
            \ included along a route such as: `StartPosition`, `EndPosition`, `Distance`,\
            \ `DurationSeconds`, `Geometry`, and `Steps`. The number of legs returned\
            \ corresponds to one fewer than the total number of positions in the request.\n\
            \nFor example, a route with a departure position and destination position\
            \ returns one leg with the positions [snapped to a nearby road](https://docs.aws.amazon.com/location/latest/developerguide/snap-to-nearby-road.html):\n\
            \n  * The `StartPosition` is the departure position.\n\n  * The `EndPosition`\
            \ is the destination position.\n\nA route with a waypoint between the\
            \ departure and destination position returns two legs with the positions\
            \ snapped to a nearby road:\n\n  * Leg 1: The `StartPosition` is the departure\
            \ position . The `EndPosition` is the waypoint positon.\n\n  * Leg 2:\
            \ The `StartPosition` is the waypoint position. The `EndPosition` is the\
            \ destination position."
        Summary:
          allOf:
          - $ref: '#/components/schemas/CalculateRouteSummary'
          description: 'Contains information about the whole route, such as: `RouteBBox`,
            `DataSource`, `Distance`, `DistanceUnit`, and `DurationSeconds`.'
      required:
      - Legs
      - Summary
      description: Returns the result of the route calculation. Metadata includes
        legs and route summary.
    CalculateRouteSummary:
      type: object
      properties:
        RouteBBox:
          allOf:
          - $ref: '#/components/schemas/BoundingBox'
          description: "Specifies a geographical box surrounding a route. Used to\
            \ zoom into a route when displaying it in a map. For example, `[min x,\
            \ min y, max x, max y]`.\n\nThe first 2 `bbox` parameters describe the\
            \ lower southwest corner:\n\n  * The first `bbox` position is the X coordinate\
            \ or longitude of the lower southwest corner. \n\n  * The second `bbox`\
            \ position is the Y coordinate or latitude of the lower southwest corner.\
            \ \n\nThe next 2 `bbox` parameters describe the upper northeast corner:\n\
            \n  * The third `bbox` position is the X coordinate, or longitude of the\
            \ upper northeast corner. \n\n  * The fourth `bbox` position is the Y\
            \ coordinate, or latitude of the upper northeast corner."
        DataSource:
          allOf:
          - $ref: '#/components/schemas/String'
          description: "The data provider of traffic and road network data used to\
            \ calculate the route. Indicates one of the available providers:\n\n \
            \ * `Esri`\n\n  * `Grab`\n\n  * `Here`\n\nFor more information about data\
            \ providers, see [Amazon Location Service data providers](https://docs.aws.amazon.com/location/latest/developerguide/what-is-data-provider.html)."
        Distance:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: 'The total distance covered by the route. The sum of the distance
            travelled between every stop on the route.


            If Esri is the data source for the route calculator, the route distance
            can’t be greater than 400 km. If the route exceeds 400 km, the response
            is a `400 RoutesValidationException` error.'
        DurationSeconds:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The total travel time for the route measured in seconds. The
            sum of the travel time between every stop on the route.
        DistanceUnit:
          allOf:
          - $ref: '#/components/schemas/DistanceUnit'
          description: The unit of measurement for route distances.
      required:
      - RouteBBox
      - DataSource
      - Distance
      - DurationSeconds
      - DistanceUnit
      description: A summary of the calculated route.
    CalculateRouteTruckModeOptions:
      type: object
      properties:
        AvoidFerries:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'Avoids ferries when calculating routes.


            Default Value: `false`


            Valid Values: `false` | `true`'
        AvoidTolls:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'Avoids tolls when calculating routes.


            Default Value: `false`


            Valid Values: `false` | `true`'
        Dimensions:
          allOf:
          - $ref: '#/components/schemas/TruckDimensions'
          description: Specifies the truck's dimension specifications including length,
            height, width, and unit of measurement. Used to avoid roads that can't
            support the truck's dimensions.
        Weight:
          allOf:
          - $ref: '#/components/schemas/TruckWeight'
          description: Specifies the truck's weight specifications including total
            weight and unit of measurement. Used to avoid roads that can't support
            the truck's weight.
      description: Contains details about additional route preferences for requests
        that specify `TravelMode` as `Truck`.
    CellSignals:
      type: object
      properties:
        LteCellDetails:
          allOf:
          - $ref: '#/components/schemas/LteCellDetailsList'
          description: Information about the Long-Term Evolution (LTE) network the
            device is connected to.
      required:
      - LteCellDetails
      description: The cellular network communication infrastructure that the device
        uses.
    Circle:
      type: object
      properties:
        Center:
          allOf:
          - $ref: '#/components/schemas/Position'
          description: A single point geometry, specifying the center of the circle,
            using [WGS 84](https://gisgeography.com/wgs84-world-geodetic-system/)
            coordinates, in the form `[longitude, latitude]`.
        Radius:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The radius of the circle in meters. Must be greater than zero
            and no larger than 100,000 (100 kilometers).
      required:
      - Center
      - Radius
      description: A circle on the earth, as defined by a center point and a radius.
    ConflictException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      required:
      - Message
      description: The request was unsuccessful because of a conflict.
    CountryCode3:
      type: string
      pattern: ^[A-Z]{3}$
      minLength: 3
      maxLength: 3
    CountryCode3OrEmpty:
      type: string
      pattern: ^[A-Z]{3}$|^$
      minLength: 0
      maxLength: 3
    CountryCodeList:
      type: array
      items:
        $ref: '#/components/schemas/CountryCode3'
    CreateGeofenceCollectionRequest:
      type: object
      properties:
        CollectionName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: "A custom name for the geofence collection.\n\nRequirements:\n\
            \n  * Contain only alphanumeric characters (A–Z, a–z, 0–9), hyphens (-),\
            \ periods (.), and underscores (_). \n\n  * Must be a unique geofence\
            \ collection name.\n\n  * No spaces allowed. For example, `ExampleGeofenceCollection`."
        PricingPlan:
          allOf:
          - $ref: '#/components/schemas/PricingPlan'
          description: No longer used. If included, the only allowed value is `RequestBasedUsage`.
        PricingPlanDataSource:
          allOf:
          - $ref: '#/components/schemas/String'
          description: This parameter is no longer used.
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: An optional description for the geofence collection.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: "Applies one or more tags to the geofence collection. A tag\
            \ is a key-value pair helps manage, identify, search, and filter your\
            \ resources by labelling them.\n\nFormat: `\"key\" : \"value\"`\n\nRestrictions:\n\
            \n  * Maximum 50 tags per resource\n\n  * Each resource tag must be unique\
            \ with a maximum of one value.\n\n  * Maximum key length: 128 Unicode\
            \ characters in UTF-8\n\n  * Maximum value length: 256 Unicode characters\
            \ in UTF-8\n\n  * Can use alphanumeric characters (A–Z, a–z, 0–9), and\
            \ the following characters: \\+ - = . _ : / @. \n\n  * Cannot use \"aws:\"\
            \ as a prefix for a key."
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKeyId'
          description: A key identifier for an [Amazon Web Services KMS customer managed
            key](https://docs.aws.amazon.com/kms/latest/developerguide/create-keys.html).
            Enter a key ID, key ARN, alias name, or alias ARN.
      required:
      - CollectionName
    CreateGeofenceCollectionResponse:
      type: object
      properties:
        CollectionName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name for the geofence collection.
        CollectionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: "The Amazon Resource Name (ARN) for the geofence collection\
            \ resource. Used when you need to specify a resource across all Amazon\
            \ Web Services.\n\n  * Format example: `arn:aws:geo:region:account-id:geofence-collection/ExampleGeofenceCollection`"
        CreateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp for when the geofence collection was created
            in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)
            format: `YYYY-MM-DDThh:mm:ss.sssZ`'
      required:
      - CollectionName
      - CollectionArn
      - CreateTime
    CreateKeyRequest:
      type: object
      properties:
        KeyName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: "A custom name for the API key resource.\n\nRequirements:\n\
            \n  * Contain only alphanumeric characters (A–Z, a–z, 0–9), hyphens (-),\
            \ periods (.), and underscores (_). \n\n  * Must be a unique API key name.\n\
            \n  * No spaces allowed. For example, `ExampleAPIKey`."
        Restrictions:
          allOf:
          - $ref: '#/components/schemas/ApiKeyRestrictions'
          description: The API key restrictions for the API key resource.
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: An optional description for the API key resource.
        ExpireTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The optional timestamp for when the API key resource will
            expire in [ ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)
            format: `YYYY-MM-DDThh:mm:ss.sssZ`. One of `NoExpiry` or `ExpireTime`
            must be set.'
        NoExpiry:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Optionally set to `true` to set no expiration time for the
            API key. One of `NoExpiry` or `ExpireTime` must be set.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: "Applies one or more tags to the map resource. A tag is a key-value\
            \ pair that helps manage, identify, search, and filter your resources\
            \ by labelling them.\n\nFormat: `\"key\" : \"value\"`\n\nRestrictions:\n\
            \n  * Maximum 50 tags per resource\n\n  * Each resource tag must be unique\
            \ with a maximum of one value.\n\n  * Maximum key length: 128 Unicode\
            \ characters in UTF-8\n\n  * Maximum value length: 256 Unicode characters\
            \ in UTF-8\n\n  * Can use alphanumeric characters (A–Z, a–z, 0–9), and\
            \ the following characters: \\+ - = . _ : / @. \n\n  * Cannot use \"aws:\"\
            \ as a prefix for a key."
      required:
      - KeyName
      - Restrictions
    CreateKeyResponse:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/ApiKey'
          description: The key value/string of an API key. This value is used when
            making API calls to authorize the call. For example, see [GetMapGlyphs](https://docs.aws.amazon.com/location/latest/APIReference/API_GetMapGlyphs.html).
        KeyArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: "The Amazon Resource Name (ARN) for the API key resource. Used\
            \ when you need to specify a resource across all Amazon Web Services.\n\
            \n  * Format example: `arn:aws:geo:region:account-id:key/ExampleKey`"
        KeyName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the API key resource.
        CreateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp for when the API key resource was created in
            [ ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format:
            `YYYY-MM-DDThh:mm:ss.sssZ`.'
      required:
      - Key
      - KeyArn
      - KeyName
      - CreateTime
    CreateMapRequest:
      type: object
      properties:
        MapName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: "The name for the map resource.\n\nRequirements:\n\n  * Must\
            \ contain only alphanumeric characters (A–Z, a–z, 0–9), hyphens (-), periods\
            \ (.), and underscores (_). \n\n  * Must be a unique map resource name.\
            \ \n\n  * No spaces allowed. For example, `ExampleMap`."
        Configuration:
          allOf:
          - $ref: '#/components/schemas/MapConfiguration'
          description: Specifies the `MapConfiguration`, including the map style,
            for the map resource that you create. The map style defines the look of
            maps and the data provider for your map resource.
        PricingPlan:
          allOf:
          - $ref: '#/components/schemas/PricingPlan'
          description: No longer used. If included, the only allowed value is `RequestBasedUsage`.
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: An optional description for the map resource.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: "Applies one or more tags to the map resource. A tag is a key-value\
            \ pair helps manage, identify, search, and filter your resources by labelling\
            \ them.\n\nFormat: `\"key\" : \"value\"`\n\nRestrictions:\n\n  * Maximum\
            \ 50 tags per resource\n\n  * Each resource tag must be unique with a\
            \ maximum of one value.\n\n  * Maximum key length: 128 Unicode characters\
            \ in UTF-8\n\n  * Maximum value length: 256 Unicode characters in UTF-8\n\
            \n  * Can use alphanumeric characters (A–Z, a–z, 0–9), and the following\
            \ characters: + - = . _ : / @. \n\n  * Cannot use \"aws:\" as a prefix\
            \ for a key."
      required:
      - MapName
      - Configuration
    CreateMapResponse:
      type: object
      properties:
        MapName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the map resource.
        MapArn:
          allOf:
          - $ref: '#/components/schemas/GeoArn'
          description: "The Amazon Resource Name (ARN) for the map resource. Used\
            \ to specify a resource across all Amazon Web Services.\n\n  * Format\
            \ example: `arn:aws:geo:region:account-id:map/ExampleMap`"
        CreateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp for when the map resource was created in [ISO
            8601](https://www.iso.org/iso-8601-date-and-time-format.html) format:
            `YYYY-MM-DDThh:mm:ss.sssZ`.'
      required:
      - MapName
      - MapArn
      - CreateTime
    CreatePlaceIndexRequest:
      type: object
      properties:
        IndexName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: "The name of the place index resource.\n\nRequirements:\n\n\
            \  * Contain only alphanumeric characters (A–Z, a–z, 0–9), hyphens (-),\
            \ periods (.), and underscores (_).\n\n  * Must be a unique place index\
            \ resource name.\n\n  * No spaces allowed. For example, `ExamplePlaceIndex`."
        DataSource:
          allOf:
          - $ref: '#/components/schemas/String'
          description: "Specifies the geospatial data provider for the new place index.\n\
            \nThis field is case-sensitive. Enter the valid values as shown. For example,\
            \ entering `HERE` returns an error.\n\nValid values include:\n\n  * `Esri`\
            \ – For additional information about [Esri](https://docs.aws.amazon.com/location/latest/developerguide/esri.html)'s\
            \ coverage in your region of interest, see [Esri details on geocoding\
            \ coverage](https://developers.arcgis.com/rest/geocode/api-reference/geocode-coverage.htm).\n\
            \n  * `Grab` – Grab provides place index functionality for Southeast Asia.\
            \ For additional information about [GrabMaps](https://docs.aws.amazon.com/location/latest/developerguide/grab.html)'\
            \ coverage, see [GrabMaps countries and areas covered](https://docs.aws.amazon.com/location/latest/developerguide/grab.html#grab-coverage-area).\n\
            \n  * `Here` – For additional information about [HERE Technologies](https://docs.aws.amazon.com/location/latest/developerguide/HERE.html)'\
            \ coverage in your region of interest, see [HERE details on goecoding\
            \ coverage](https://developer.here.com/documentation/geocoder/dev_guide/topics/coverage-geocoder.html).\n\
            \nIf you specify HERE Technologies (`Here`) as the data provider, you\
            \ may not [store results](https://docs.aws.amazon.com/location-places/latest/APIReference/API_DataSourceConfiguration.html)\
            \ for locations in Japan. For more information, see the [Amazon Web Services\
            \ Service Terms](http://aws.amazon.com/service-terms/) for Amazon Location\
            \ Service.\n\nFor additional information , see [Data providers](https://docs.aws.amazon.com/location/latest/developerguide/what-is-data-provider.html)\
            \ on the _Amazon Location Service Developer Guide_."
        PricingPlan:
          allOf:
          - $ref: '#/components/schemas/PricingPlan'
          description: No longer used. If included, the only allowed value is `RequestBasedUsage`.
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The optional description for the place index resource.
        DataSourceConfiguration:
          allOf:
          - $ref: '#/components/schemas/DataSourceConfiguration'
          description: Specifies the data storage option requesting Places.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: "Applies one or more tags to the place index resource. A tag\
            \ is a key-value pair that helps you manage, identify, search, and filter\
            \ your resources.\n\nFormat: `\"key\" : \"value\"`\n\nRestrictions:\n\n\
            \  * Maximum 50 tags per resource.\n\n  * Each tag key must be unique\
            \ and must have exactly one associated value.\n\n  * Maximum key length:\
            \ 128 Unicode characters in UTF-8.\n\n  * Maximum value length: 256 Unicode\
            \ characters in UTF-8.\n\n  * Can use alphanumeric characters (A–Z, a–z,\
            \ 0–9), and the following characters: \\+ - = . _ : / @\n\n  * Cannot\
            \ use \"aws:\" as a prefix for a key."
      required:
      - IndexName
      - DataSource
    CreatePlaceIndexResponse:
      type: object
      properties:
        IndexName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name for the place index resource.
        IndexArn:
          allOf:
          - $ref: '#/components/schemas/GeoArn'
          description: "The Amazon Resource Name (ARN) for the place index resource.\
            \ Used to specify a resource across Amazon Web Services.\n\n  * Format\
            \ example: `arn:aws:geo:region:account-id:place-index/ExamplePlaceIndex`"
        CreateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp for when the place index resource was created
            in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)
            format: `YYYY-MM-DDThh:mm:ss.sssZ`.'
      required:
      - IndexName
      - IndexArn
      - CreateTime
    CreateRouteCalculatorRequest:
      type: object
      properties:
        CalculatorName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: "The name of the route calculator resource.\n\nRequirements:\n\
            \n  * Can use alphanumeric characters (A–Z, a–z, 0–9) , hyphens (-), periods\
            \ (.), and underscores (_).\n\n  * Must be a unique Route calculator resource\
            \ name.\n\n  * No spaces allowed. For example, `ExampleRouteCalculator`."
        DataSource:
          allOf:
          - $ref: '#/components/schemas/String'
          description: "Specifies the data provider of traffic and road network data.\n\
            \nThis field is case-sensitive. Enter the valid values as shown. For example,\
            \ entering `HERE` returns an error.\n\nValid values include:\n\n  * `Esri`\
            \ – For additional information about [Esri](https://docs.aws.amazon.com/location/latest/developerguide/esri.html)'s\
            \ coverage in your region of interest, see [Esri details on street networks\
            \ and traffic coverage](https://doc.arcgis.com/en/arcgis-online/reference/network-coverage.htm).\n\
            \nRoute calculators that use Esri as a data source only calculate routes\
            \ that are shorter than 400 km.\n\n  * `Grab` – Grab provides routing\
            \ functionality for Southeast Asia. For additional information about [GrabMaps](https://docs.aws.amazon.com/location/latest/developerguide/grab.html)'\
            \ coverage, see [GrabMaps countries and areas covered](https://docs.aws.amazon.com/location/latest/developerguide/grab.html#grab-coverage-area).\n\
            \n  * `Here` – For additional information about [HERE Technologies](https://docs.aws.amazon.com/location/latest/developerguide/HERE.html)'\
            \ coverage in your region of interest, see [HERE car routing coverage](https://developer.here.com/documentation/routing-api/dev_guide/topics/coverage/car-routing.html)\
            \ and [HERE truck routing coverage](https://developer.here.com/documentation/routing-api/dev_guide/topics/coverage/truck-routing.html).\n\
            \nFor additional information , see [Data providers](https://docs.aws.amazon.com/location/latest/developerguide/what-is-data-provider.html)\
            \ on the _Amazon Location Service Developer Guide_."
        PricingPlan:
          allOf:
          - $ref: '#/components/schemas/PricingPlan'
          description: No longer used. If included, the only allowed value is `RequestBasedUsage`.
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The optional description for the route calculator resource.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: "Applies one or more tags to the route calculator resource.\
            \ A tag is a key-value pair helps manage, identify, search, and filter\
            \ your resources by labelling them.\n\n  * For example: { `\"tag1\" :\
            \ \"value1\"`, `\"tag2\" : \"value2\"`}\n\nFormat: `\"key\" : \"value\"\
            `\n\nRestrictions:\n\n  * Maximum 50 tags per resource\n\n  * Each resource\
            \ tag must be unique with a maximum of one value.\n\n  * Maximum key length:\
            \ 128 Unicode characters in UTF-8\n\n  * Maximum value length: 256 Unicode\
            \ characters in UTF-8\n\n  * Can use alphanumeric characters (A–Z, a–z,\
            \ 0–9), and the following characters: \\+ - = . _ : / @. \n\n  * Cannot\
            \ use \"aws:\" as a prefix for a key."
      required:
      - CalculatorName
      - DataSource
    CreateRouteCalculatorResponse:
      type: object
      properties:
        CalculatorName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: "The name of the route calculator resource.\n\n  * For example,\
            \ `ExampleRouteCalculator`."
        CalculatorArn:
          allOf:
          - $ref: '#/components/schemas/GeoArn'
          description: "The Amazon Resource Name (ARN) for the route calculator resource.\
            \ Use the ARN when you specify a resource across all Amazon Web Services.\n\
            \n  * Format example: `arn:aws:geo:region:account-id:route-calculator/ExampleCalculator`"
        CreateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: "The timestamp when the route calculator resource was created\
            \ in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)\
            \ format: `YYYY-MM-DDThh:mm:ss.sssZ`.\n\n  * For example, `2020–07-2T12:15:20.000Z+01:00`"
      required:
      - CalculatorName
      - CalculatorArn
      - CreateTime
    CreateTrackerRequest:
      type: object
      properties:
        TrackerName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: "The name for the tracker resource.\n\nRequirements:\n\n  *\
            \ Contain only alphanumeric characters (A-Z, a-z, 0-9) , hyphens (-),\
            \ periods (.), and underscores (_).\n\n  * Must be a unique tracker resource\
            \ name.\n\n  * No spaces allowed. For example, `ExampleTracker`."
        PricingPlan:
          allOf:
          - $ref: '#/components/schemas/PricingPlan'
          description: No longer used. If included, the only allowed value is `RequestBasedUsage`.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKeyId'
          description: A key identifier for an [Amazon Web Services KMS customer managed
            key](https://docs.aws.amazon.com/kms/latest/developerguide/create-keys.html).
            Enter a key ID, key ARN, alias name, or alias ARN.
        PricingPlanDataSource:
          allOf:
          - $ref: '#/components/schemas/String'
          description: This parameter is no longer used.
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: An optional description for the tracker resource.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: "Applies one or more tags to the tracker resource. A tag is\
            \ a key-value pair helps manage, identify, search, and filter your resources\
            \ by labelling them.\n\nFormat: `\"key\" : \"value\"`\n\nRestrictions:\n\
            \n  * Maximum 50 tags per resource\n\n  * Each resource tag must be unique\
            \ with a maximum of one value.\n\n  * Maximum key length: 128 Unicode\
            \ characters in UTF-8\n\n  * Maximum value length: 256 Unicode characters\
            \ in UTF-8\n\n  * Can use alphanumeric characters (A–Z, a–z, 0–9), and\
            \ the following characters: \\+ - = . _ : / @. \n\n  * Cannot use \"aws:\"\
            \ as a prefix for a key."
        PositionFiltering:
          allOf:
          - $ref: '#/components/schemas/PositionFiltering'
          description: "Specifies the position filtering for the tracker resource.\n\
            \nValid values:\n\n  * `TimeBased` \\- Location updates are evaluated\
            \ against linked geofence collections, but not every location update is\
            \ stored. If your update frequency is more often than 30 seconds, only\
            \ one update per 30 seconds is stored for each unique device ID. \n\n\
            \  * `DistanceBased` \\- If the device has moved less than 30 m (98.4\
            \ ft), location updates are ignored. Location updates within this area\
            \ are neither evaluated against linked geofence collections, nor stored.\
            \ This helps control costs by reducing the number of geofence evaluations\
            \ and historical device positions to paginate through. Distance-based\
            \ filtering can also reduce the effects of GPS noise when displaying device\
            \ trajectories on a map. \n\n  * `AccuracyBased` \\- If the device has\
            \ moved less than the measured accuracy, location updates are ignored.\
            \ For example, if two consecutive updates from a device have a horizontal\
            \ accuracy of 5 m and 10 m, the second update is ignored if the device\
            \ has moved less than 15 m. Ignored location updates are neither evaluated\
            \ against linked geofence collections, nor stored. This can reduce the\
            \ effects of GPS noise when displaying device trajectories on a map, and\
            \ can help control your costs by reducing the number of geofence evaluations.\
            \ \n\nThis field is optional. If not specified, the default value is `TimeBased`."
        EventBridgeEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'Whether to enable position `UPDATE` events from this tracker
            to be sent to EventBridge.


            You do not need enable this feature to get `ENTER` and `EXIT` events for
            geofences with this tracker. Those events are always sent to EventBridge.'
        KmsKeyEnableGeospatialQueries:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'Enables `GeospatialQueries` for a tracker that uses a [Amazon
            Web Services KMS customer managed key](https://docs.aws.amazon.com/kms/latest/developerguide/create-keys.html).


            This parameter is only used if you are using a KMS customer managed key.


            If you wish to encrypt your data using your own KMS customer managed key,
            then the Bounding Polygon Queries feature will be disabled by default.
            This is because by using this feature, a representation of your device
            positions will not be encrypted using the your KMS managed key. The exact
            device position, however; is still encrypted using your managed key.


            You can choose to opt-in to the Bounding Polygon Quseries feature. This
            is done by setting the `KmsKeyEnableGeospatialQueries` parameter to true
            when creating or updating a Tracker.'
      required:
      - TrackerName
    CreateTrackerResponse:
      type: object
      properties:
        TrackerName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the tracker resource.
        TrackerArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: "The Amazon Resource Name (ARN) for the tracker resource. Used\
            \ when you need to specify a resource across all Amazon Web Services.\n\
            \n  * Format example: `arn:aws:geo:region:account-id:tracker/ExampleTracker`"
        CreateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp for when the tracker resource was created in
            [ ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format:
            `YYYY-MM-DDThh:mm:ss.sssZ`.'
      required:
      - TrackerName
      - TrackerArn
      - CreateTime
    CustomLayer:
      type: string
      pattern: ^[-._\w]+$
      minLength: 1
      maxLength: 100
    CustomLayerList:
      type: array
      items:
        $ref: '#/components/schemas/CustomLayer'
    DataSourceConfiguration:
      type: object
      properties:
        IntendedUse:
          allOf:
          - $ref: '#/components/schemas/IntendedUse'
          description: "Specifies how the results of an operation will be stored by\
            \ the caller.\n\nValid values include:\n\n  * `SingleUse` specifies that\
            \ the results won't be stored. \n\n  * `Storage` specifies that the result\
            \ can be cached or stored in a database.\n\nDefault value: `SingleUse`"
      description: "Specifies the data storage option chosen for requesting Places.\n\
        \nWhen using Amazon Location Places:\n\n  * If using HERE Technologies as\
        \ a data provider, you can't store results for locations in Japan by setting\
        \ `IntendedUse` to `Storage`. parameter.\n\n  * Under the `MobileAssetTracking`\
        \ or `MobilAssetManagement` pricing plan, you can't store results from your\
        \ place index resources by setting `IntendedUse` to `Storage`. This returns\
        \ a validation exception error.\n\nFor more information, see the [AWS Service\
        \ Terms](https://aws.amazon.com/service-terms/) for Amazon Location Service."
    DeleteGeofenceCollectionRequest:
      type: object
      properties:
        CollectionName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the geofence collection to be deleted.
      required:
      - CollectionName
    DeleteGeofenceCollectionResponse:
      type: object
      properties: {}
    DeleteKeyRequest:
      type: object
      properties:
        KeyName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the API key to delete.
        ForceDelete:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'ForceDelete bypasses an API key''s expiry conditions and deletes
            the key. Set the parameter `true` to delete the key or to `false` to not
            preemptively delete the API key.


            Valid values: `true`, or `false`.


            Required: No


            This action is irreversible. Only use ForceDelete if you are certain the
            key is no longer in use.'
      required:
      - KeyName
    DeleteKeyResponse:
      type: object
      properties: {}
    DeleteMapRequest:
      type: object
      properties:
        MapName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the map resource to be deleted.
      required:
      - MapName
    DeleteMapResponse:
      type: object
      properties: {}
    DeletePlaceIndexRequest:
      type: object
      properties:
        IndexName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the place index resource to be deleted.
      required:
      - IndexName
    DeletePlaceIndexResponse:
      type: object
      properties: {}
    DeleteRouteCalculatorRequest:
      type: object
      properties:
        CalculatorName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the route calculator resource to be deleted.
      required:
      - CalculatorName
    DeleteRouteCalculatorResponse:
      type: object
      properties: {}
    DeleteTrackerRequest:
      type: object
      properties:
        TrackerName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the tracker resource to be deleted.
      required:
      - TrackerName
    DeleteTrackerResponse:
      type: object
      properties: {}
    DescribeGeofenceCollectionRequest:
      type: object
      properties:
        CollectionName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the geofence collection.
      required:
      - CollectionName
    DescribeGeofenceCollectionResponse:
      type: object
      properties:
        CollectionName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the geofence collection.
        CollectionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: "The Amazon Resource Name (ARN) for the geofence collection\
            \ resource. Used when you need to specify a resource across all Amazon\
            \ Web Services.\n\n  * Format example: `arn:aws:geo:region:account-id:geofence-collection/ExampleGeofenceCollection`"
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The optional description for the geofence collection.
        PricingPlan:
          allOf:
          - $ref: '#/components/schemas/PricingPlan'
          description: No longer used. Always returns `RequestBasedUsage`.
        PricingPlanDataSource:
          allOf:
          - $ref: '#/components/schemas/String'
          description: No longer used. Always returns an empty string.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKeyId'
          description: A key identifier for an [Amazon Web Services KMS customer managed
            key](https://docs.aws.amazon.com/kms/latest/developerguide/create-keys.html)
            assigned to the Amazon Location resource
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Displays the key, value pairs of tags associated with this
            resource.
        CreateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp for when the geofence resource was created in
            [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format:
            `YYYY-MM-DDThh:mm:ss.sssZ`'
        UpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp for when the geofence collection was last updated
            in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)
            format: `YYYY-MM-DDThh:mm:ss.sssZ`'
        GeofenceCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of geofences in the geofence collection.
      required:
      - CollectionName
      - CollectionArn
      - Description
      - CreateTime
      - UpdateTime
    DescribeKeyRequest:
      type: object
      properties:
        KeyName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the API key resource.
      required:
      - KeyName
    DescribeKeyResponse:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/ApiKey'
          description: The key value/string of an API key.
        KeyArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: "The Amazon Resource Name (ARN) for the API key resource. Used\
            \ when you need to specify a resource across all Amazon Web Services.\n\
            \n  * Format example: `arn:aws:geo:region:account-id:key/ExampleKey`"
        KeyName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the API key resource.
        Restrictions:
          $ref: '#/components/schemas/ApiKeyRestrictions'
        CreateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp for when the API key resource was created in
            [ ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format:
            `YYYY-MM-DDThh:mm:ss.sssZ`.'
        ExpireTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp for when the API key resource will expire in
            [ ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format:
            `YYYY-MM-DDThh:mm:ss.sssZ`.'
        UpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp for when the API key resource was last updated
            in [ ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)
            format: `YYYY-MM-DDThh:mm:ss.sssZ`.'
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The optional description for the API key resource.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Tags associated with the API key resource.
      required:
      - Key
      - KeyArn
      - KeyName
      - Restrictions
      - CreateTime
      - ExpireTime
      - UpdateTime
    DescribeMapRequest:
      type: object
      properties:
        MapName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the map resource.
      required:
      - MapName
    DescribeMapResponse:
      type: object
      properties:
        MapName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The map style selected from an available provider.
        MapArn:
          allOf:
          - $ref: '#/components/schemas/GeoArn'
          description: "The Amazon Resource Name (ARN) for the map resource. Used\
            \ to specify a resource across all Amazon Web Services.\n\n  * Format\
            \ example: `arn:aws:geo:region:account-id:map/ExampleMap`"
        PricingPlan:
          allOf:
          - $ref: '#/components/schemas/PricingPlan'
          description: No longer used. Always returns `RequestBasedUsage`.
        DataSource:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies the data provider for the associated map tiles.
        Configuration:
          allOf:
          - $ref: '#/components/schemas/MapConfiguration'
          description: Specifies the map tile style selected from a partner data provider.
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The optional description for the map resource.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Tags associated with the map resource.
        CreateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp for when the map resource was created in [ISO
            8601](https://www.iso.org/iso-8601-date-and-time-format.html) format:
            `YYYY-MM-DDThh:mm:ss.sssZ`.'
        UpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp for when the map resource was last update in
            [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format:
            `YYYY-MM-DDThh:mm:ss.sssZ`.'
      required:
      - MapName
      - MapArn
      - DataSource
      - Configuration
      - Description
      - CreateTime
      - UpdateTime
    DescribePlaceIndexRequest:
      type: object
      properties:
        IndexName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the place index resource.
      required:
      - IndexName
    DescribePlaceIndexResponse:
      type: object
      properties:
        IndexName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the place index resource being described.
        IndexArn:
          allOf:
          - $ref: '#/components/schemas/GeoArn'
          description: "The Amazon Resource Name (ARN) for the place index resource.\
            \ Used to specify a resource across Amazon Web Services.\n\n  * Format\
            \ example: `arn:aws:geo:region:account-id:place-index/ExamplePlaceIndex`"
        PricingPlan:
          allOf:
          - $ref: '#/components/schemas/PricingPlan'
          description: No longer used. Always returns `RequestBasedUsage`.
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The optional description for the place index resource.
        CreateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp for when the place index resource was created
            in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)
            format: `YYYY-MM-DDThh:mm:ss.sssZ`.'
        UpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp for when the place index resource was last updated
            in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)
            format: `YYYY-MM-DDThh:mm:ss.sssZ`.'
        DataSource:
          allOf:
          - $ref: '#/components/schemas/String'
          description: "The data provider of geospatial data. Values can be one of\
            \ the following:\n\n  * `Esri`\n\n  * `Grab`\n\n  * `Here`\n\nFor more\
            \ information about data providers, see [Amazon Location Service data\
            \ providers](https://docs.aws.amazon.com/location/latest/developerguide/what-is-data-provider.html)."
        DataSourceConfiguration:
          allOf:
          - $ref: '#/components/schemas/DataSourceConfiguration'
          description: The specified data storage option for requesting Places.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Tags associated with place index resource.
      required:
      - IndexName
      - IndexArn
      - Description
      - CreateTime
      - UpdateTime
      - DataSource
      - DataSourceConfiguration
    DescribeRouteCalculatorRequest:
      type: object
      properties:
        CalculatorName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the route calculator resource.
      required:
      - CalculatorName
    DescribeRouteCalculatorResponse:
      type: object
      properties:
        CalculatorName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the route calculator resource being described.
        CalculatorArn:
          allOf:
          - $ref: '#/components/schemas/GeoArn'
          description: "The Amazon Resource Name (ARN) for the Route calculator resource.\
            \ Use the ARN when you specify a resource across Amazon Web Services.\n\
            \n  * Format example: `arn:aws:geo:region:account-id:route-calculator/ExampleCalculator`"
        PricingPlan:
          allOf:
          - $ref: '#/components/schemas/PricingPlan'
          description: Always returns `RequestBasedUsage`.
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The optional description of the route calculator resource.
        CreateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: "The timestamp when the route calculator resource was created\
            \ in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)\
            \ format: `YYYY-MM-DDThh:mm:ss.sssZ`.\n\n  * For example, `2020–07-2T12:15:20.000Z+01:00`"
        UpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: "The timestamp when the route calculator resource was last\
            \ updated in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)\
            \ format: `YYYY-MM-DDThh:mm:ss.sssZ`.\n\n  * For example, `2020–07-2T12:15:20.000Z+01:00`"
        DataSource:
          allOf:
          - $ref: '#/components/schemas/String'
          description: "The data provider of traffic and road network data. Indicates\
            \ one of the available providers:\n\n  * `Esri`\n\n  * `Grab`\n\n  * `Here`\n\
            \nFor more information about data providers, see [Amazon Location Service\
            \ data providers](https://docs.aws.amazon.com/location/latest/developerguide/what-is-data-provider.html)."
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Tags associated with route calculator resource.
      required:
      - CalculatorName
      - CalculatorArn
      - Description
      - CreateTime
      - UpdateTime
      - DataSource
    DescribeTrackerRequest:
      type: object
      properties:
        TrackerName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the tracker resource.
      required:
      - TrackerName
    DescribeTrackerResponse:
      type: object
      properties:
        TrackerName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the tracker resource.
        TrackerArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: "The Amazon Resource Name (ARN) for the tracker resource. Used\
            \ when you need to specify a resource across all Amazon Web Services.\n\
            \n  * Format example: `arn:aws:geo:region:account-id:tracker/ExampleTracker`"
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The optional description for the tracker resource.
        PricingPlan:
          allOf:
          - $ref: '#/components/schemas/PricingPlan'
          description: Always returns `RequestBasedUsage`.
        PricingPlanDataSource:
          allOf:
          - $ref: '#/components/schemas/String'
          description: No longer used. Always returns an empty string.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags associated with the tracker resource.
        CreateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp for when the tracker resource was created in
            [ ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format:
            `YYYY-MM-DDThh:mm:ss.sssZ`.'
        UpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp for when the tracker resource was last updated
            in [ ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)
            format: `YYYY-MM-DDThh:mm:ss.sssZ`.'
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKeyId'
          description: A key identifier for an [Amazon Web Services KMS customer managed
            key](https://docs.aws.amazon.com/kms/latest/developerguide/create-keys.html)
            assigned to the Amazon Location resource.
        PositionFiltering:
          allOf:
          - $ref: '#/components/schemas/PositionFiltering'
          description: The position filtering method of the tracker resource.
        EventBridgeEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether `UPDATE` events from this tracker in EventBridge are
            enabled. If set to `true` these events will be sent to EventBridge.
        KmsKeyEnableGeospatialQueries:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'Enables `GeospatialQueries` for a tracker that uses a [Amazon
            Web Services KMS customer managed key](https://docs.aws.amazon.com/kms/latest/developerguide/create-keys.html).


            This parameter is only used if you are using a KMS customer managed key.


            If you wish to encrypt your data using your own KMS customer managed key,
            then the Bounding Polygon Queries feature will be disabled by default.
            This is because by using this feature, a representation of your device
            positions will not be encrypted using the your KMS managed key. The exact
            device position, however; is still encrypted using your managed key.


            You can choose to opt-in to the Bounding Polygon Quseries feature. This
            is done by setting the `KmsKeyEnableGeospatialQueries` parameter to true
            when creating or updating a Tracker.'
      required:
      - TrackerName
      - TrackerArn
      - Description
      - CreateTime
      - UpdateTime
    DeviceIdsList:
      type: array
      items:
        $ref: '#/components/schemas/Id'
    DevicePosition:
      type: object
      properties:
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The device whose position you retrieved.
        SampleTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp at which the device''s position was determined.
            Uses [ ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)
            format: `YYYY-MM-DDThh:mm:ss.sssZ`.'
        ReceivedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp for when the tracker resource received the device
            position in [ ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)
            format: `YYYY-MM-DDThh:mm:ss.sssZ`.'
        Position:
          allOf:
          - $ref: '#/components/schemas/Position'
          description: The last known device position.
        Accuracy:
          allOf:
          - $ref: '#/components/schemas/PositionalAccuracy'
          description: The accuracy of the device position.
        PositionProperties:
          allOf:
          - $ref: '#/components/schemas/PositionPropertyMap'
          description: The properties associated with the position.
      required:
      - SampleTime
      - ReceivedTime
      - Position
      description: Contains the device position details.
    DevicePositionList:
      type: array
      items:
        $ref: '#/components/schemas/DevicePosition'
    DevicePositionUpdate:
      type: object
      properties:
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The device associated to the position update.
        SampleTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp at which the device''s position was determined.
            Uses [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)
            format: `YYYY-MM-DDThh:mm:ss.sssZ`'
        Position:
          allOf:
          - $ref: '#/components/schemas/Position'
          description: 'The latest device position defined in [WGS 84](https://earth-info.nga.mil/index.php?dir=wgs84&action=wgs84)
            format: `[X or longitude, Y or latitude]`.'
        Accuracy:
          allOf:
          - $ref: '#/components/schemas/PositionalAccuracy'
          description: The accuracy of the device position.
        PositionProperties:
          allOf:
          - $ref: '#/components/schemas/PositionPropertyMap'
          description: 'Associates one of more properties with the position update.
            A property is a key-value pair stored with the position update and added
            to any geofence event the update may trigger.


            Format: `"key" : "value"`'
      required:
      - DeviceId
      - SampleTime
      - Position
      description: Contains the position update details for a device.
    DevicePositionUpdateList:
      type: array
      items:
        $ref: '#/components/schemas/DevicePositionUpdate'
    DeviceState:
      type: object
      properties:
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The device identifier.
        SampleTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp at which the device''s position was determined.
            Uses [ ISO 8601 ](https://www.iso.org/iso-8601-date-and-time-format.html)
            format: `YYYY-MM-DDThh:mm:ss.sssZ`.'
        Position:
          allOf:
          - $ref: '#/components/schemas/Position'
          description: The last known device position.
        Accuracy:
          $ref: '#/components/schemas/PositionalAccuracy'
        Ipv4Address:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The device's Ipv4 address.
        WiFiAccessPoints:
          allOf:
          - $ref: '#/components/schemas/WiFiAccessPointList'
          description: The Wi-Fi access points the device is using.
        CellSignals:
          allOf:
          - $ref: '#/components/schemas/CellSignals'
          description: The cellular network infrastructure that the device is connected
            to.
      required:
      - DeviceId
      - SampleTime
      - Position
      description: The device's position, IP address, and Wi-Fi access points.
    DimensionUnit:
      type: string
      enum:
      - Meters
      - Feet
    DisassociateTrackerConsumerRequest:
      type: object
      properties:
        TrackerName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the tracker resource to be dissociated from the
            consumer.
        ConsumerArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: "The Amazon Resource Name (ARN) for the geofence collection\
            \ to be disassociated from the tracker resource. Used when you need to\
            \ specify a resource across all Amazon Web Services.\n\n  * Format example:\
            \ `arn:aws:geo:region:account-id:geofence-collection/ExampleGeofenceCollectionConsumer`"
      required:
      - TrackerName
      - ConsumerArn
    DisassociateTrackerConsumerResponse:
      type: object
      properties: {}
    DistanceUnit:
      type: string
      enum:
      - Kilometers
      - Miles
    Earfcn:
      type: integer
      default: 0
      minimum: 0
      maximum: 262143
    EutranCellId:
      type: integer
      default: 0
      minimum: 0
      maximum: 268435455
    FilterPlaceCategoryList:
      type: array
      items:
        $ref: '#/components/schemas/PlaceCategory'
    ForecastGeofenceEventsDeviceState:
      type: object
      properties:
        Position:
          allOf:
          - $ref: '#/components/schemas/Position'
          description: The device's position.
        Speed:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The device's speed.
      required:
      - Position
      description: The device's position, IP address, and WiFi access points.
    ForecastGeofenceEventsRequest:
      type: object
      properties:
        CollectionName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the geofence collection.
        DeviceState:
          allOf:
          - $ref: '#/components/schemas/ForecastGeofenceEventsDeviceState'
          description: The device's state, including current position and speed.
        TimeHorizonMinutes:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: Specifies the time horizon in minutes for the forecasted events.
        DistanceUnit:
          allOf:
          - $ref: '#/components/schemas/DistanceUnit'
          description: 'The distance unit used for the `NearestDistance` property
            returned in a forecasted event. The measurement system must match for
            `DistanceUnit` and `SpeedUnit`; if `Kilometers` is specified for `DistanceUnit`,
            then `SpeedUnit` must be `KilometersPerHour`.


            Default Value: `Kilometers`'
        SpeedUnit:
          allOf:
          - $ref: '#/components/schemas/SpeedUnit'
          description: 'The speed unit for the device captured by the device state.
            The measurement system must match for `DistanceUnit` and `SpeedUnit`;
            if `Kilometers` is specified for `DistanceUnit`, then `SpeedUnit` must
            be `KilometersPerHour`.


            Default Value: `KilometersPerHour`.'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/LargeToken'
          description: 'The pagination token specifying which page of results to return
            in the response. If no token is provided, the default page is the first
            page.


            Default value: `null`'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'An optional limit for the number of resources returned in
            a single call.


            Default value: `20`'
      required:
      - CollectionName
      - DeviceState
    ForecastGeofenceEventsResponse:
      type: object
      properties:
        ForecastedEvents:
          allOf:
          - $ref: '#/components/schemas/ForecastedEventsList'
          description: The list of forecasted events.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/LargeToken'
          description: The pagination token specifying which page of results to return
            in the response. If no token is provided, the default page is the first
            page.
        DistanceUnit:
          allOf:
          - $ref: '#/components/schemas/DistanceUnit'
          description: The distance unit for the forecasted events.
        SpeedUnit:
          allOf:
          - $ref: '#/components/schemas/SpeedUnit'
          description: The speed unit for the forecasted events.
      required:
      - ForecastedEvents
      - DistanceUnit
      - SpeedUnit
    ForecastedEvent:
      type: object
      properties:
        EventId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The forecasted event identifier.
        GeofenceId:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The geofence identifier pertaining to the forecasted event.
        IsDeviceInGeofence:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates if the device is located within the geofence.
        NearestDistance:
          allOf:
          - $ref: '#/components/schemas/NearestDistance'
          description: The closest distance from the device's position to the geofence.
        EventType:
          allOf:
          - $ref: '#/components/schemas/ForecastedGeofenceEventType'
          description: 'The event type, forecasting three states for which a device
            can be in relative to a geofence:


            `ENTER`: If a device is outside of a geofence, but would breach the fence
            if the device is moving at its current speed within time horizon window.


            `EXIT`: If a device is inside of a geofence, but would breach the fence
            if the device is moving at its current speed within time horizon window.


            `IDLE`: If a device is inside of a geofence, and the device is not moving.'
        ForecastedBreachTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The forecasted time the device will breach the geofence in
            [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format:
            `YYYY-MM-DDThh:mm:ss.sssZ`'
        GeofenceProperties:
          allOf:
          - $ref: '#/components/schemas/PropertyMap'
          description: The geofence properties.
      required:
      - EventId
      - GeofenceId
      - IsDeviceInGeofence
      - NearestDistance
      - EventType
      description: A forecasted event represents a geofence event in relation to the
        requested device state, that may occur given the provided device state and
        time horizon.
    ForecastedEventsList:
      type: array
      items:
        $ref: '#/components/schemas/ForecastedEvent'
    ForecastedGeofenceEventType:
      type: string
      enum:
      - ENTER
      - EXIT
      - IDLE
    GeoArn:
      type: string
      pattern: ^arn(:[a-z0-9]+([.-][a-z0-9]+)*):geo(:([a-z0-9]+([.-][a-z0-9]+)*))(:[0-9]+):((\*)|([-a-z]+[/][*-._\w]+))$
      maxLength: 1600
    GeoArnList:
      type: array
      items:
        $ref: '#/components/schemas/GeoArnV2'
    GeoArnV2:
      type: string
      pattern: (^arn(:[a-z0-9]+([.-][a-z0-9]+)*):geo(:([a-z0-9]+([.-][a-z0-9]+)*))(:[0-9]+):((\*)|([-a-z]+[/][*-._\w]+))$)|(^arn(:[a-z0-9]+([.-][a-z0-9]+)*):(geo-routes|geo-places|geo-maps)(:((\*)|([a-z0-9]+([.-][a-z0-9]+)*)))::((provider[\/][*-._\w]+))$)
      maxLength: 1600
    GeofenceGeometry:
      type: object
      properties:
        Polygon:
          allOf:
          - $ref: '#/components/schemas/LinearRings'
          description: 'A polygon is a list of linear rings which are each made up
            of a list of vertices.


            Each vertex is a 2-dimensional point of the form: `[longitude, latitude]`.
            This is represented as an array of doubles of length 2 (so `[double, double]`).


            An array of 4 or more vertices, where the first and last vertex are the
            same (to form a closed boundary), is called a linear ring. The linear
            ring vertices must be listed in counter-clockwise order around the ring’s
            interior. The linear ring is represented as an array of vertices, or an
            array of arrays of doubles (`[[double, double], ...]`).


            A geofence consists of a single linear ring. To allow for future expansion,
            the Polygon parameter takes an array of linear rings, which is represented
            as an array of arrays of arrays of doubles (`[[[double, double], ...],
            ...]`).


            A linear ring for use in geofences can consist of between 4 and 1,000
            vertices.'
        Circle:
          allOf:
          - $ref: '#/components/schemas/Circle'
          description: A circle on the earth, as defined by a center point and a radius.
        Geobuf:
          allOf:
          - $ref: '#/components/schemas/Base64EncodedGeobuf'
          description: 'Geobuf is a compact binary encoding for geographic data that
            provides lossless compression of GeoJSON polygons. The Geobuf must be
            Base64-encoded.


            A polygon in Geobuf format can have up to 100,000 vertices.'
      description: 'Contains the geofence geometry details.


        A geofence geometry is made up of either a polygon or a circle. Can be a polygon,
        a circle or a polygon encoded in Geobuf format. Including multiple selections
        will return a validation error.


        Amazon Location doesn''t currently support polygons with holes, multipolygons,
        polygons that are wound clockwise, or that cross the antimeridian.'
    GetDevicePositionHistoryRequest:
      type: object
      properties:
        TrackerName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The tracker resource receiving the request for the device position
            history.
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The device whose position history you want to retrieve.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: 'The pagination token specifying which page of results to return
            in the response. If no token is provided, the default page is the first
            page.


            Default value: `null`'
        StartTimeInclusive:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: "Specify the start time for the position history in [ ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)\
            \ format: `YYYY-MM-DDThh:mm:ss.sssZ`. By default, the value will be 24\
            \ hours prior to the time that the request is made.\n\nRequirement:\n\n\
            \  * The time specified for `StartTimeInclusive` must be before `EndTimeExclusive`."
        EndTimeExclusive:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: "Specify the end time for the position history in [ ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)\
            \ format: `YYYY-MM-DDThh:mm:ss.sssZ`. By default, the value will be the\
            \ time that the request is made.\n\nRequirement:\n\n  * The time specified\
            \ for `EndTimeExclusive` must be after the time for `StartTimeInclusive`."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'An optional limit for the number of device positions returned
            in a single call.


            Default value: `100`'
      required:
      - TrackerName
      - DeviceId
    GetDevicePositionHistoryResponse:
      type: object
      properties:
        DevicePositions:
          allOf:
          - $ref: '#/components/schemas/DevicePositionList'
          description: Contains the position history details for the requested device.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: A pagination token indicating there are additional pages available.
            You can use the token in a following request to fetch the next set of
            results.
      required:
      - DevicePositions
    GetDevicePositionRequest:
      type: object
      properties:
        TrackerName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The tracker resource receiving the position update.
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The device whose position you want to retrieve.
      required:
      - TrackerName
      - DeviceId
    GetDevicePositionResponse:
      type: object
      properties:
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The device whose position you retrieved.
        SampleTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp at which the device''s position was determined.
            Uses [ ISO 8601 ](https://www.iso.org/iso-8601-date-and-time-format.html)
            format: `YYYY-MM-DDThh:mm:ss.sssZ`.'
        ReceivedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp for when the tracker resource received the device
            position. Uses [ ISO 8601 ](https://www.iso.org/iso-8601-date-and-time-format.html)
            format: `YYYY-MM-DDThh:mm:ss.sssZ`.'
        Position:
          allOf:
          - $ref: '#/components/schemas/Position'
          description: The last known device position.
        Accuracy:
          allOf:
          - $ref: '#/components/schemas/PositionalAccuracy'
          description: The accuracy of the device position.
        PositionProperties:
          allOf:
          - $ref: '#/components/schemas/PositionPropertyMap'
          description: The properties associated with the position.
      required:
      - SampleTime
      - ReceivedTime
      - Position
    GetGeofenceRequest:
      type: object
      properties:
        CollectionName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The geofence collection storing the target geofence.
        GeofenceId:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The geofence you're retrieving details for.
      required:
      - CollectionName
      - GeofenceId
    GetGeofenceResponse:
      type: object
      properties:
        GeofenceId:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The geofence identifier.
        Geometry:
          allOf:
          - $ref: '#/components/schemas/GeofenceGeometry'
          description: Contains the geofence geometry details describing a polygon
            or a circle.
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          description: "Identifies the state of the geofence. A geofence will hold\
            \ one of the following states:\n\n  * `ACTIVE` — The geofence has been\
            \ indexed by the system. \n\n  * `PENDING` — The geofence is being processed\
            \ by the system.\n\n  * `FAILED` — The geofence failed to be indexed by\
            \ the system.\n\n  * `DELETED` — The geofence has been deleted from the\
            \ system index.\n\n  * `DELETING` — The geofence is being deleted from\
            \ the system index."
        CreateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp for when the geofence collection was created
            in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)
            format: `YYYY-MM-DDThh:mm:ss.sssZ`'
        UpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp for when the geofence collection was last updated
            in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)
            format: `YYYY-MM-DDThh:mm:ss.sssZ`'
        GeofenceProperties:
          allOf:
          - $ref: '#/components/schemas/PropertyMap'
          description: 'User defined properties of the geofence. A property is a key-value
            pair stored with the geofence and added to any geofence event triggered
            with that geofence.


            Format: `"key" : "value"`'
      required:
      - GeofenceId
      - Geometry
      - Status
      - CreateTime
      - UpdateTime
    GetMapGlyphsRequest:
      type: object
      properties:
        MapName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The map resource associated with the glyph ﬁle.
        FontStack:
          allOf:
          - $ref: '#/components/schemas/String'
          description: "A comma-separated list of fonts to load glyphs from in order\
            \ of preference. For example, `Noto Sans Regular, Arial Unicode`.\n\n\
            Valid font stacks for [Esri](https://docs.aws.amazon.com/location/latest/developerguide/esri.html)\
            \ styles:\n\n  * VectorEsriDarkGrayCanvas – `Ubuntu Medium Italic` | `Ubuntu\
            \ Medium` | `Ubuntu Italic` | `Ubuntu Regular` | `Ubuntu Bold`\n\n  *\
            \ VectorEsriLightGrayCanvas – `Ubuntu Italic` | `Ubuntu Regular` | `Ubuntu\
            \ Light` | `Ubuntu Bold`\n\n  * VectorEsriTopographic – `Noto Sans Italic`\
            \ | `Noto Sans Regular` | `Noto Sans Bold` | `Noto Serif Regular` | `Roboto\
            \ Condensed Light Italic`\n\n  * VectorEsriStreets – `Arial Regular` |\
            \ `Arial Italic` | `Arial Bold`\n\n  * VectorEsriNavigation – `Arial Regular`\
            \ | `Arial Italic` | `Arial Bold`\n\nValid font stacks for [HERE Technologies](https://docs.aws.amazon.com/location/latest/developerguide/HERE.html)\
            \ styles:\n\n  * VectorHereContrast – `Fira GO Regular` | `Fira GO Bold`\n\
            \n  * VectorHereExplore, VectorHereExploreTruck, HybridHereExploreSatellite\
            \ – `Fira GO Italic` | `Fira GO Map` | `Fira GO Map Bold` | `Noto Sans\
            \ CJK JP Bold` | `Noto Sans CJK JP Light` | `Noto Sans CJK JP Regular`\n\
            \nValid font stacks for [GrabMaps](https://docs.aws.amazon.com/location/latest/developerguide/grab.html)\
            \ styles:\n\n  * VectorGrabStandardLight, VectorGrabStandardDark – `Noto\
            \ Sans Regular` | `Noto Sans Medium` | `Noto Sans Bold`\n\nValid font\
            \ stacks for [Open Data](https://docs.aws.amazon.com/location/latest/developerguide/open-data.html)\
            \ styles:\n\n  * VectorOpenDataStandardLight, VectorOpenDataStandardDark,\
            \ VectorOpenDataVisualizationLight, VectorOpenDataVisualizationDark –\
            \ `Amazon Ember Regular,Noto Sans Regular` | `Amazon Ember Bold,Noto Sans\
            \ Bold` | `Amazon Ember Medium,Noto Sans Medium` | `Amazon Ember Regular\
            \ Italic,Noto Sans Italic` | `Amazon Ember Condensed RC Regular,Noto Sans\
            \ Regular` | `Amazon Ember Condensed RC Bold,Noto Sans Bold` | `Amazon\
            \ Ember Regular,Noto Sans Regular,Noto Sans Arabic Regular` | `Amazon\
            \ Ember Condensed RC Bold,Noto Sans Bold,Noto Sans Arabic Condensed Bold`\
            \ | `Amazon Ember Bold,Noto Sans Bold,Noto Sans Arabic Bold` | `Amazon\
            \ Ember Regular Italic,Noto Sans Italic,Noto Sans Arabic Regular` | `Amazon\
            \ Ember Condensed RC Regular,Noto Sans Regular,Noto Sans Arabic Condensed\
            \ Regular` | `Amazon Ember Medium,Noto Sans Medium,Noto Sans Arabic Medium`\n\
            \nThe fonts used by the Open Data map styles are combined fonts that use\
            \ `Amazon Ember` for most glyphs but `Noto Sans` for glyphs unsupported\
            \ by `Amazon Ember`."
        FontUnicodeRange:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A Unicode range of characters to download glyphs for. Each
            response will contain 256 characters. For example, 0–255 includes all
            characters from range `U+0000` to `00FF`. Must be aligned to multiples
            of 256.
        Key:
          allOf:
          - $ref: '#/components/schemas/ApiKey'
          description: The optional [API key](https://docs.aws.amazon.com/location/latest/developerguide/using-apikeys.html)
            to authorize the request.
      required:
      - MapName
      - FontStack
      - FontUnicodeRange
    GetMapGlyphsResponse:
      type: object
      properties:
        Blob:
          allOf:
          - $ref: '#/components/schemas/Blob'
          description: The glyph, as binary blob.
        ContentType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The map glyph content type. For example, `application/octet-stream`.
        CacheControl:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP Cache-Control directive for the value.
    GetMapSpritesRequest:
      type: object
      properties:
        MapName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The map resource associated with the sprite ﬁle.
        FileName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: "The name of the sprite ﬁle. Use the following ﬁle names for\
            \ the sprite sheet:\n\n  * `sprites.png`\n\n  * `sprites@2x.png` for high\
            \ pixel density displays\n\nFor the JSON document containing image offsets.\
            \ Use the following ﬁle names:\n\n  * `sprites.json`\n\n  * `sprites@2x.json`\
            \ for high pixel density displays"
        Key:
          allOf:
          - $ref: '#/components/schemas/ApiKey'
          description: The optional [API key](https://docs.aws.amazon.com/location/latest/developerguide/using-apikeys.html)
            to authorize the request.
      required:
      - MapName
      - FileName
    GetMapSpritesResponse:
      type: object
      properties:
        Blob:
          allOf:
          - $ref: '#/components/schemas/Blob'
          description: Contains the body of the sprite sheet or JSON offset ﬁle.
        ContentType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The content type of the sprite sheet and offsets. For example,
            the sprite sheet content type is `image/png`, and the sprite offset JSON
            document is `application/json`.
        CacheControl:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP Cache-Control directive for the value.
    GetMapStyleDescriptorRequest:
      type: object
      properties:
        MapName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The map resource to retrieve the style descriptor from.
        Key:
          allOf:
          - $ref: '#/components/schemas/ApiKey'
          description: The optional [API key](https://docs.aws.amazon.com/location/latest/developerguide/using-apikeys.html)
            to authorize the request.
      required:
      - MapName
    GetMapStyleDescriptorResponse:
      type: object
      properties:
        Blob:
          allOf:
          - $ref: '#/components/schemas/Blob'
          description: Contains the body of the style descriptor.
        ContentType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The style descriptor's content type. For example, `application/json`.
        CacheControl:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP Cache-Control directive for the value.
    GetMapTileRequest:
      type: object
      properties:
        MapName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The map resource to retrieve the map tiles from.
        Z:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The zoom value for the map tile.
        X:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The X axis value for the map tile.
        Y:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Y axis value for the map tile.
        Key:
          allOf:
          - $ref: '#/components/schemas/ApiKey'
          description: The optional [API key](https://docs.aws.amazon.com/location/latest/developerguide/using-apikeys.html)
            to authorize the request.
      required:
      - MapName
      - Z
      - X
      - Y
    GetMapTileResponse:
      type: object
      properties:
        Blob:
          allOf:
          - $ref: '#/components/schemas/Blob'
          description: Contains Mapbox Vector Tile (MVT) data.
        ContentType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The map tile's content type. For example, `application/vnd.mapbox-vector-tile`.
        CacheControl:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP Cache-Control directive for the value.
    GetPlaceRequest:
      type: object
      properties:
        IndexName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the place index resource that you want to use for
            the search.
        PlaceId:
          allOf:
          - $ref: '#/components/schemas/PlaceId'
          description: The identifier of the place to find.
        Language:
          allOf:
          - $ref: '#/components/schemas/LanguageTag'
          description: 'The preferred language used to return results. The value must
            be a valid [BCP 47](https://tools.ietf.org/search/bcp47) language tag,
            for example, `en` for English.


            This setting affects the languages used in the results, but not the results
            themselves. If no language is specified, or not supported for a particular
            result, the partner automatically chooses a language for the result.


            For an example, we''ll use the Greek language. You search for a location
            around Athens, Greece, with the `language` parameter set to `en`. The
            `city` in the results will most likely be returned as `Athens`.


            If you set the `language` parameter to `el`, for Greek, then the `city`
            in the results will more likely be returned as `Αθήνα`.


            If the data provider does not have a value for Greek, the result will
            be in a language that the provider does support.'
        Key:
          allOf:
          - $ref: '#/components/schemas/ApiKey'
          description: The optional [API key](https://docs.aws.amazon.com/location/latest/developerguide/using-apikeys.html)
            to authorize the request.
      required:
      - IndexName
      - PlaceId
    GetPlaceResponse:
      type: object
      properties:
        Place:
          allOf:
          - $ref: '#/components/schemas/Place'
          description: Details about the result, such as its address and position.
      required:
      - Place
    Id:
      type: string
      pattern: ^[-._\p{L}\p{N}]+$
      minLength: 1
      maxLength: 100
    IdList:
      type: array
      items:
        $ref: '#/components/schemas/Id'
    InferredState:
      type: object
      properties:
        Position:
          allOf:
          - $ref: '#/components/schemas/Position'
          description: The device position inferred by the provided position, IP address,
            cellular signals, and Wi-Fi- access points.
        Accuracy:
          allOf:
          - $ref: '#/components/schemas/PositionalAccuracy'
          description: The level of certainty of the inferred position.
        DeviationDistance:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The distance between the inferred position and the device's
            self-reported position.
        ProxyDetected:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates if a proxy was used.
      required:
      - ProxyDetected
      description: The inferred state of the device, given the provided position,
        IP address, cellular signals, and Wi-Fi- access points.
    IntendedUse:
      type: string
      enum:
      - SingleUse
      - Storage
    InternalServerException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      required:
      - Message
      description: The request has failed to process because of an unknown server
        error, exception, or failure.
    KmsKeyId:
      type: string
      minLength: 1
      maxLength: 2048
    LanguageTag:
      type: string
      minLength: 2
      maxLength: 35
    LargeToken:
      type: string
      minLength: 1
      maxLength: 60000
    Leg:
      type: object
      properties:
        StartPosition:
          allOf:
          - $ref: '#/components/schemas/Position'
          description: 'The starting position of the leg. Follows the format `[longitude,latitude]`.


            If the `StartPosition` isn''t located on a road, it''s [snapped to a nearby
            road](https://docs.aws.amazon.com/location/latest/developerguide/snap-to-nearby-road.html).'
        EndPosition:
          allOf:
          - $ref: '#/components/schemas/Position'
          description: 'The terminating position of the leg. Follows the format `[longitude,latitude]`.


            If the `EndPosition` isn''t located on a road, it''s [snapped to a nearby
            road](https://docs.aws.amazon.com/location/latest/developerguide/nap-to-nearby-road.html).'
        Distance:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: "The distance between the leg's `StartPosition` and `EndPosition`\
            \ along a calculated route.\n\n  * The default measurement is `Kilometers`\
            \ unless the request specifies a `DistanceUnit` of `Miles`."
        DurationSeconds:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The estimated travel time between the leg's `StartPosition`
            and `EndPosition`. The travel mode and departure time that you specify
            in the request determines the calculated time.
        Geometry:
          allOf:
          - $ref: '#/components/schemas/LegGeometry'
          description: Contains the calculated route's path as a linestring geometry.
        Steps:
          allOf:
          - $ref: '#/components/schemas/StepList'
          description: Contains a list of steps, which represent subsections of a
            leg. Each step provides instructions for how to move to the next step
            in the leg such as the step's start position, end position, travel distance,
            travel duration, and geometry offset.
      required:
      - StartPosition
      - EndPosition
      - Distance
      - DurationSeconds
      - Steps
      description: "Contains the calculated route's details for each path between\
        \ a pair of positions. The number of legs returned corresponds to one fewer\
        \ than the total number of positions in the request.\n\nFor example, a route\
        \ with a departure position and destination position returns one leg with\
        \ the positions [snapped to a nearby road](https://docs.aws.amazon.com/location/latest/developerguide/snap-to-nearby-road.html):\n\
        \n  * The `StartPosition` is the departure position.\n\n  * The `EndPosition`\
        \ is the destination position.\n\nA route with a waypoint between the departure\
        \ and destination position returns two legs with the positions snapped to\
        \ a nearby road:\n\n  * Leg 1: The `StartPosition` is the departure position\
        \ . The `EndPosition` is the waypoint positon.\n\n  * Leg 2: The `StartPosition`\
        \ is the waypoint position. The `EndPosition` is the destination position."
    LegGeometry:
      type: object
      properties:
        LineString:
          allOf:
          - $ref: '#/components/schemas/LineString'
          description: "An ordered list of positions used to plot a route on a map.\n\
            \nThe first position is closest to the start position for the leg, and\
            \ the last position is the closest to the end position for the leg.\n\n\
            \  * For example, `[[-123.117, 49.284],[-123.115, 49.285],[-123.115, 49.285]]`"
      description: Contains the geometry details for each path between a pair of positions.
        Used in plotting a route leg on a map.
    LegList:
      type: array
      items:
        $ref: '#/components/schemas/Leg'
    LineString:
      type: array
      items:
        $ref: '#/components/schemas/Position'
    LinearRing:
      type: array
      items:
        $ref: '#/components/schemas/Position'
    LinearRings:
      type: array
      items:
        $ref: '#/components/schemas/LinearRing'
    ListDevicePositionsRequest:
      type: object
      properties:
        TrackerName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The tracker resource containing the requested devices.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'An optional limit for the number of entries returned in a
            single call.


            Default value: `100`'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: 'The pagination token specifying which page of results to return
            in the response. If no token is provided, the default page is the first
            page.


            Default value: `null`'
        FilterGeometry:
          allOf:
          - $ref: '#/components/schemas/TrackingFilterGeometry'
          description: The geometry used to filter device positions.
      required:
      - TrackerName
    ListDevicePositionsResponse:
      type: object
      properties:
        Entries:
          allOf:
          - $ref: '#/components/schemas/ListDevicePositionsResponseEntryList'
          description: Contains details about each device's last known position.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: A pagination token indicating there are additional pages available.
            You can use the token in a following request to fetch the next set of
            results.
      required:
      - Entries
    ListDevicePositionsResponseEntry:
      type: object
      properties:
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The ID of the device for this position.
        SampleTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp at which the device position was determined.
            Uses [ ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)
            format: `YYYY-MM-DDThh:mm:ss.sssZ`.'
        Position:
          allOf:
          - $ref: '#/components/schemas/Position'
          description: The last known device position. Empty if no positions currently
            stored.
        Accuracy:
          allOf:
          - $ref: '#/components/schemas/PositionalAccuracy'
          description: The accuracy of the device position.
        PositionProperties:
          allOf:
          - $ref: '#/components/schemas/PositionPropertyMap'
          description: The properties associated with the position.
      required:
      - DeviceId
      - SampleTime
      - Position
      description: Contains the tracker resource details.
    ListDevicePositionsResponseEntryList:
      type: array
      items:
        $ref: '#/components/schemas/ListDevicePositionsResponseEntry'
    ListGeofenceCollectionsRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'An optional limit for the number of resources returned in
            a single call.


            Default value: `100`'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: 'The pagination token specifying which page of results to return
            in the response. If no token is provided, the default page is the first
            page.


            Default value: `null`'
    ListGeofenceCollectionsResponse:
      type: object
      properties:
        Entries:
          allOf:
          - $ref: '#/components/schemas/ListGeofenceCollectionsResponseEntryList'
          description: Lists the geofence collections that exist in your Amazon Web
            Services account.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: A pagination token indicating there are additional pages available.
            You can use the token in a following request to fetch the next set of
            results.
      required:
      - Entries
    ListGeofenceCollectionsResponseEntry:
      type: object
      properties:
        CollectionName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the geofence collection.
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The description for the geofence collection
        PricingPlan:
          allOf:
          - $ref: '#/components/schemas/PricingPlan'
          description: No longer used. Always returns `RequestBasedUsage`.
        PricingPlanDataSource:
          allOf:
          - $ref: '#/components/schemas/String'
          description: No longer used. Always returns an empty string.
        CreateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp for when the geofence collection was created
            in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)
            format: `YYYY-MM-DDThh:mm:ss.sssZ`'
        UpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'Specifies a timestamp for when the resource was last updated
            in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)
            format: `YYYY-MM-DDThh:mm:ss.sssZ`'
      required:
      - CollectionName
      - Description
      - CreateTime
      - UpdateTime
      description: 'Contains the geofence collection details.


        The returned geometry will always match the geometry format used when the
        geofence was created.'
    ListGeofenceCollectionsResponseEntryList:
      type: array
      items:
        $ref: '#/components/schemas/ListGeofenceCollectionsResponseEntry'
    ListGeofenceResponseEntry:
      type: object
      properties:
        GeofenceId:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The geofence identifier.
        Geometry:
          allOf:
          - $ref: '#/components/schemas/GeofenceGeometry'
          description: Contains the geofence geometry details describing a polygon
            or a circle.
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          description: "Identifies the state of the geofence. A geofence will hold\
            \ one of the following states:\n\n  * `ACTIVE` — The geofence has been\
            \ indexed by the system. \n\n  * `PENDING` — The geofence is being processed\
            \ by the system.\n\n  * `FAILED` — The geofence failed to be indexed by\
            \ the system.\n\n  * `DELETED` — The geofence has been deleted from the\
            \ system index.\n\n  * `DELETING` — The geofence is being deleted from\
            \ the system index."
        CreateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp for when the geofence was stored in a geofence
            collection in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)
            format: `YYYY-MM-DDThh:mm:ss.sssZ`'
        UpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp for when the geofence was last updated in [ISO
            8601](https://www.iso.org/iso-8601-date-and-time-format.html) format:
            `YYYY-MM-DDThh:mm:ss.sssZ`'
        GeofenceProperties:
          allOf:
          - $ref: '#/components/schemas/PropertyMap'
          description: 'User defined properties of the geofence. A property is a key-value
            pair stored with the geofence and added to any geofence event triggered
            with that geofence.


            Format: `"key" : "value"`'
      required:
      - GeofenceId
      - Geometry
      - Status
      - CreateTime
      - UpdateTime
      description: 'Contains a list of geofences stored in a given geofence collection.


        The returned geometry will always match the geometry format used when the
        geofence was created.'
    ListGeofenceResponseEntryList:
      type: array
      items:
        $ref: '#/components/schemas/ListGeofenceResponseEntry'
    ListGeofencesRequest:
      type: object
      properties:
        CollectionName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the geofence collection storing the list of geofences.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/LargeToken'
          description: 'The pagination token specifying which page of results to return
            in the response. If no token is provided, the default page is the first
            page.


            Default value: `null`'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'An optional limit for the number of geofences returned in
            a single call.


            Default value: `100`'
      required:
      - CollectionName
    ListGeofencesResponse:
      type: object
      properties:
        Entries:
          allOf:
          - $ref: '#/components/schemas/ListGeofenceResponseEntryList'
          description: Contains a list of geofences stored in the geofence collection.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/LargeToken'
          description: A pagination token indicating there are additional pages available.
            You can use the token in a following request to fetch the next set of
            results.
      required:
      - Entries
    ListKeysRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'An optional limit for the number of resources returned in
            a single call.


            Default value: `100`'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: 'The pagination token specifying which page of results to return
            in the response. If no token is provided, the default page is the first
            page.


            Default value: `null`'
        Filter:
          allOf:
          - $ref: '#/components/schemas/ApiKeyFilter'
          description: Optionally filter the list to only `Active` or `Expired` API
            keys.
    ListKeysResponse:
      type: object
      properties:
        Entries:
          allOf:
          - $ref: '#/components/schemas/ListKeysResponseEntryList'
          description: Contains API key resources in your Amazon Web Services account.
            Details include API key name, allowed referers and timestamp for when
            the API key will expire.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: A pagination token indicating there are additional pages available.
            You can use the token in a following request to fetch the next set of
            results.
      required:
      - Entries
    ListKeysResponseEntry:
      type: object
      properties:
        KeyName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the API key resource.
        ExpireTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp for when the API key resource will expire, in
            [ ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format:
            `YYYY-MM-DDThh:mm:ss.sssZ`.'
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The optional description for the API key resource.
        Restrictions:
          $ref: '#/components/schemas/ApiKeyRestrictions'
        CreateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp of when the API key was created, in [ ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)
            format: `YYYY-MM-DDThh:mm:ss.sssZ`.'
        UpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp of when the API key was last updated, in [ ISO
            8601](https://www.iso.org/iso-8601-date-and-time-format.html) format:
            `YYYY-MM-DDThh:mm:ss.sssZ`.'
      required:
      - KeyName
      - ExpireTime
      - Restrictions
      - CreateTime
      - UpdateTime
      description: An API key resource listed in your Amazon Web Services account.
    ListKeysResponseEntryList:
      type: array
      items:
        $ref: '#/components/schemas/ListKeysResponseEntry'
    ListMapsRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'An optional limit for the number of resources returned in
            a single call.


            Default value: `100`'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: 'The pagination token specifying which page of results to return
            in the response. If no token is provided, the default page is the first
            page.


            Default value: `null`'
    ListMapsResponse:
      type: object
      properties:
        Entries:
          allOf:
          - $ref: '#/components/schemas/ListMapsResponseEntryList'
          description: Contains a list of maps in your Amazon Web Services account
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: A pagination token indicating there are additional pages available.
            You can use the token in a following request to fetch the next set of
            results.
      required:
      - Entries
    ListMapsResponseEntry:
      type: object
      properties:
        MapName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the associated map resource.
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The description for the map resource.
        DataSource:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies the data provider for the associated map tiles.
        PricingPlan:
          allOf:
          - $ref: '#/components/schemas/PricingPlan'
          description: No longer used. Always returns `RequestBasedUsage`.
        CreateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp for when the map resource was created in [ISO
            8601](https://www.iso.org/iso-8601-date-and-time-format.html) format:
            `YYYY-MM-DDThh:mm:ss.sssZ`.'
        UpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp for when the map resource was last updated in
            [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format:
            `YYYY-MM-DDThh:mm:ss.sssZ`.'
      required:
      - MapName
      - Description
      - DataSource
      - CreateTime
      - UpdateTime
      description: Contains details of an existing map resource in your Amazon Web
        Services account.
    ListMapsResponseEntryList:
      type: array
      items:
        $ref: '#/components/schemas/ListMapsResponseEntry'
    ListPlaceIndexesRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'An optional limit for the maximum number of results returned
            in a single call.


            Default value: `100`'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: 'The pagination token specifying which page of results to return
            in the response. If no token is provided, the default page is the first
            page.


            Default value: `null`'
    ListPlaceIndexesResponse:
      type: object
      properties:
        Entries:
          allOf:
          - $ref: '#/components/schemas/ListPlaceIndexesResponseEntryList'
          description: Lists the place index resources that exist in your Amazon Web
            Services account
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: A pagination token indicating that there are additional pages
            available. You can use the token in a new request to fetch the next page
            of results.
      required:
      - Entries
    ListPlaceIndexesResponseEntry:
      type: object
      properties:
        IndexName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the place index resource.
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The optional description for the place index resource.
        DataSource:
          allOf:
          - $ref: '#/components/schemas/String'
          description: "The data provider of geospatial data. Values can be one of\
            \ the following:\n\n  * `Esri`\n\n  * `Grab`\n\n  * `Here`\n\nFor more\
            \ information about data providers, see [Amazon Location Service data\
            \ providers](https://docs.aws.amazon.com/location/latest/developerguide/what-is-data-provider.html)."
        PricingPlan:
          allOf:
          - $ref: '#/components/schemas/PricingPlan'
          description: No longer used. Always returns `RequestBasedUsage`.
        CreateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp for when the place index resource was created
            in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)
            format: `YYYY-MM-DDThh:mm:ss.sssZ`.'
        UpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp for when the place index resource was last updated
            in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)
            format: `YYYY-MM-DDThh:mm:ss.sssZ`.'
      required:
      - IndexName
      - Description
      - DataSource
      - CreateTime
      - UpdateTime
      description: A place index resource listed in your Amazon Web Services account.
    ListPlaceIndexesResponseEntryList:
      type: array
      items:
        $ref: '#/components/schemas/ListPlaceIndexesResponseEntry'
    ListRouteCalculatorsRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'An optional maximum number of results returned in a single
            call.


            Default Value: `100`'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: 'The pagination token specifying which page of results to return
            in the response. If no token is provided, the default page is the first
            page.


            Default Value: `null`'
    ListRouteCalculatorsResponse:
      type: object
      properties:
        Entries:
          allOf:
          - $ref: '#/components/schemas/ListRouteCalculatorsResponseEntryList'
          description: Lists the route calculator resources that exist in your Amazon
            Web Services account
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: A pagination token indicating there are additional pages available.
            You can use the token in a subsequent request to fetch the next set of
            results.
      required:
      - Entries
    ListRouteCalculatorsResponseEntry:
      type: object
      properties:
        CalculatorName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the route calculator resource.
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The optional description of the route calculator resource.
        DataSource:
          allOf:
          - $ref: '#/components/schemas/String'
          description: "The data provider of traffic and road network data. Indicates\
            \ one of the available providers:\n\n  * `Esri`\n\n  * `Grab`\n\n  * `Here`\n\
            \nFor more information about data providers, see [Amazon Location Service\
            \ data providers](https://docs.aws.amazon.com/location/latest/developerguide/what-is-data-provider.html)."
        PricingPlan:
          allOf:
          - $ref: '#/components/schemas/PricingPlan'
          description: Always returns `RequestBasedUsage`.
        CreateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: "The timestamp when the route calculator resource was created\
            \ in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)\
            \ format: `YYYY-MM-DDThh:mm:ss.sssZ`.\n\n  * For example, `2020–07-2T12:15:20.000Z+01:00`"
        UpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: "The timestamp when the route calculator resource was last\
            \ updated in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)\
            \ format: `YYYY-MM-DDThh:mm:ss.sssZ`.\n\n  * For example, `2020–07-2T12:15:20.000Z+01:00`"
      required:
      - CalculatorName
      - Description
      - DataSource
      - CreateTime
      - UpdateTime
      description: A route calculator resource listed in your Amazon Web Services
        account.
    ListRouteCalculatorsResponseEntryList:
      type: array
      items:
        $ref: '#/components/schemas/ListRouteCalculatorsResponseEntry'
    ListTagsForResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: "The Amazon Resource Name (ARN) of the resource whose tags\
            \ you want to retrieve.\n\n  * Format example: `arn:aws:geo:region:account-id:resourcetype/ExampleResource`"
      required:
      - ResourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: "Tags that have been applied to the specified resource. Tags\
            \ are mapped from the tag key to the tag value: `\"TagKey\" : \"TagValue\"\
            `.\n\n  * Format example: `{\"tag1\" : \"value1\", \"tag2\" : \"value2\"\
            } `"
    ListTrackerConsumersRequest:
      type: object
      properties:
        TrackerName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The tracker resource whose associated geofence collections
            you want to list.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'An optional limit for the number of resources returned in
            a single call.


            Default value: `100`'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: 'The pagination token specifying which page of results to return
            in the response. If no token is provided, the default page is the first
            page.


            Default value: `null`'
      required:
      - TrackerName
    ListTrackerConsumersResponse:
      type: object
      properties:
        ConsumerArns:
          allOf:
          - $ref: '#/components/schemas/ArnList'
          description: Contains the list of geofence collection ARNs associated to
            the tracker resource.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: A pagination token indicating there are additional pages available.
            You can use the token in a following request to fetch the next set of
            results.
      required:
      - ConsumerArns
    ListTrackersRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'An optional limit for the number of resources returned in
            a single call.


            Default value: `100`'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: 'The pagination token specifying which page of results to return
            in the response. If no token is provided, the default page is the first
            page.


            Default value: `null`'
    ListTrackersResponse:
      type: object
      properties:
        Entries:
          allOf:
          - $ref: '#/components/schemas/ListTrackersResponseEntryList'
          description: Contains tracker resources in your Amazon Web Services account.
            Details include tracker name, description and timestamps for when the
            tracker was created and last updated.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: A pagination token indicating there are additional pages available.
            You can use the token in a following request to fetch the next set of
            results.
      required:
      - Entries
    ListTrackersResponseEntry:
      type: object
      properties:
        TrackerName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the tracker resource.
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The description for the tracker resource.
        PricingPlan:
          allOf:
          - $ref: '#/components/schemas/PricingPlan'
          description: Always returns `RequestBasedUsage`.
        PricingPlanDataSource:
          allOf:
          - $ref: '#/components/schemas/String'
          description: No longer used. Always returns an empty string.
        CreateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp for when the tracker resource was created in
            [ ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format:
            `YYYY-MM-DDThh:mm:ss.sssZ`.'
        UpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp at which the device''s position was determined.
            Uses [ ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)
            format: `YYYY-MM-DDThh:mm:ss.sssZ`.'
      required:
      - TrackerName
      - Description
      - CreateTime
      - UpdateTime
      description: Contains the tracker resource details.
    ListTrackersResponseEntryList:
      type: array
      items:
        $ref: '#/components/schemas/ListTrackersResponseEntry'
    LteCellDetails:
      type: object
      properties:
        CellId:
          allOf:
          - $ref: '#/components/schemas/EutranCellId'
          description: The E-UTRAN Cell Identifier (ECI).
        Mcc:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The Mobile Country Code (MCC).
        Mnc:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The Mobile Network Code (MNC)
        LocalId:
          allOf:
          - $ref: '#/components/schemas/LteLocalId'
          description: The LTE local identification information (local ID).
        NetworkMeasurements:
          allOf:
          - $ref: '#/components/schemas/LteNetworkMeasurementsList'
          description: The network measurements.
        TimingAdvance:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Timing Advance (TA).
        NrCapable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether the LTE object is capable of supporting NR
            (new radio).
        Rsrp:
          allOf:
          - $ref: '#/components/schemas/Rsrp'
          description: Signal power of the reference signal received, measured in
            decibel-milliwatts (dBm).
        Rsrq:
          allOf:
          - $ref: '#/components/schemas/Rsrq'
          description: Signal quality of the reference Signal received, measured in
            decibels (dB).
        Tac:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: LTE Tracking Area Code (TAC).
      required:
      - CellId
      - Mcc
      - Mnc
      description: Details about the Long-Term Evolution (LTE) network.
    LteCellDetailsList:
      type: array
      items:
        $ref: '#/components/schemas/LteCellDetails'
    LteLocalId:
      type: object
      properties:
        Earfcn:
          allOf:
          - $ref: '#/components/schemas/Earfcn'
          description: E-UTRA (Evolved Universal Terrestrial Radio Access) absolute
            radio frequency channel number (EARFCN).
        Pci:
          allOf:
          - $ref: '#/components/schemas/Pci'
          description: Physical Cell ID (PCI).
      required:
      - Earfcn
      - Pci
      description: LTE local identification information (local ID).
    LteNetworkMeasurements:
      type: object
      properties:
        Earfcn:
          allOf:
          - $ref: '#/components/schemas/Earfcn'
          description: E-UTRA (Evolved Universal Terrestrial Radio Access) absolute
            radio frequency channel number (EARFCN).
        CellId:
          allOf:
          - $ref: '#/components/schemas/EutranCellId'
          description: E-UTRAN Cell Identifier (ECI).
        Pci:
          allOf:
          - $ref: '#/components/schemas/Pci'
          description: Physical Cell ID (PCI).
        Rsrp:
          allOf:
          - $ref: '#/components/schemas/Rsrp'
          description: Signal power of the reference signal received, measured in
            dBm (decibel-milliwatts).
        Rsrq:
          allOf:
          - $ref: '#/components/schemas/Rsrq'
          description: Signal quality of the reference Signal received, measured in
            decibels (dB).
      required:
      - Earfcn
      - CellId
      - Pci
      description: LTE network measurements.
    LteNetworkMeasurementsList:
      type: array
      items:
        $ref: '#/components/schemas/LteNetworkMeasurements'
    MapConfiguration:
      type: object
      properties:
        Style:
          allOf:
          - $ref: '#/components/schemas/MapStyle'
          description: "Specifies the map style selected from an available data provider.\n\
            \nValid [Esri map styles](https://docs.aws.amazon.com/location/latest/developerguide/esri.html):\n\
            \n  * `VectorEsriDarkGrayCanvas` – The Esri Dark Gray Canvas map style.\
            \ A vector basemap with a dark gray, neutral background with minimal colors,\
            \ labels, and features that's designed to draw attention to your thematic\
            \ content. \n\n  * `RasterEsriImagery` – The Esri Imagery map style. A\
            \ raster basemap that provides one meter or better satellite and aerial\
            \ imagery in many parts of the world and lower resolution satellite imagery\
            \ worldwide. \n\n  * `VectorEsriLightGrayCanvas` – The Esri Light Gray\
            \ Canvas map style, which provides a detailed vector basemap with a light\
            \ gray, neutral background style with minimal colors, labels, and features\
            \ that's designed to draw attention to your thematic content. \n\n  *\
            \ `VectorEsriTopographic` – The Esri Light map style, which provides a\
            \ detailed vector basemap with a classic Esri map style.\n\n  * `VectorEsriStreets`\
            \ – The Esri Street Map style, which provides a detailed vector basemap\
            \ for the world symbolized with a classic Esri street map style. The vector\
            \ tile layer is similar in content and style to the World Street Map raster\
            \ map.\n\n  * `VectorEsriNavigation` – The Esri Navigation map style,\
            \ which provides a detailed basemap for the world symbolized with a custom\
            \ navigation map style that's designed for use during the day in mobile\
            \ devices.\n\nValid [HERE Technologies map styles](https://docs.aws.amazon.com/location/latest/developerguide/HERE.html):\n\
            \n  * `VectorHereContrast` – The HERE Contrast (Berlin) map style is a\
            \ high contrast detailed base map of the world that blends 3D and 2D rendering.\n\
            \nThe `VectorHereContrast` style has been renamed from `VectorHereBerlin`.\
            \ `VectorHereBerlin` has been deprecated, but will continue to work in\
            \ applications that use it.\n\n  * `VectorHereExplore` – A default HERE\
            \ map style containing a neutral, global map and its features including\
            \ roads, buildings, landmarks, and water features. It also now includes\
            \ a fully designed map of Japan.\n\n  * `VectorHereExploreTruck` – A global\
            \ map containing truck restrictions and attributes (e.g. width / height\
            \ / HAZMAT) symbolized with highlighted segments and icons on top of HERE\
            \ Explore to support use cases within transport and logistics.\n\n  *\
            \ `RasterHereExploreSatellite` – A global map containing high resolution\
            \ satellite imagery.\n\n  * `HybridHereExploreSatellite` – A global map\
            \ displaying the road network, street names, and city labels over satellite\
            \ imagery. This style will automatically retrieve both raster and vector\
            \ tiles, and your charges will be based on total tiles retrieved.\n\n\
            Hybrid styles use both vector and raster tiles when rendering the map\
            \ that you see. This means that more tiles are retrieved than when using\
            \ either vector or raster tiles alone. Your charges will include all tiles\
            \ retrieved.\n\nValid [GrabMaps map styles](https://docs.aws.amazon.com/location/latest/developerguide/grab.html):\n\
            \n  * `VectorGrabStandardLight` – The Grab Standard Light map style provides\
            \ a basemap with detailed land use coloring, area names, roads, landmarks,\
            \ and points of interest covering Southeast Asia.\n\n  * `VectorGrabStandardDark`\
            \ – The Grab Standard Dark map style provides a dark variation of the\
            \ standard basemap covering Southeast Asia.\n\nGrab provides maps only\
            \ for countries in Southeast Asia, and is only available in the Asia Pacific\
            \ (Singapore) Region (`ap-southeast-1`). For more information, see [GrabMaps\
            \ countries and area covered](https://docs.aws.amazon.com/location/latest/developerguide/grab.html#grab-coverage-area).\n\
            \nValid [Open Data map styles](https://docs.aws.amazon.com/location/latest/developerguide/open-data.html):\n\
            \n  * `VectorOpenDataStandardLight` – The Open Data Standard Light map\
            \ style provides a detailed basemap for the world suitable for website\
            \ and mobile application use. The map includes highways major roads, minor\
            \ roads, railways, water features, cities, parks, landmarks, building\
            \ footprints, and administrative boundaries.\n\n  * `VectorOpenDataStandardDark`\
            \ – Open Data Standard Dark is a dark-themed map style that provides a\
            \ detailed basemap for the world suitable for website and mobile application\
            \ use. The map includes highways major roads, minor roads, railways, water\
            \ features, cities, parks, landmarks, building footprints, and administrative\
            \ boundaries.\n\n  * `VectorOpenDataVisualizationLight` – The Open Data\
            \ Visualization Light map style is a light-themed style with muted colors\
            \ and fewer features that aids in understanding overlaid data.\n\n  *\
            \ `VectorOpenDataVisualizationDark` – The Open Data Visualization Dark\
            \ map style is a dark-themed style with muted colors and fewer features\
            \ that aids in understanding overlaid data."
        PoliticalView:
          allOf:
          - $ref: '#/components/schemas/CountryCode3'
          description: 'Specifies the political view for the style. Leave unset to
            not use a political view, or, for styles that support specific political
            views, you can choose a view, such as `IND` for the Indian view.


            Default is unset.


            Not all map resources or styles support political view styles. See [Political
            views](https://docs.aws.amazon.com/location/latest/developerguide/map-concepts.html#political-views)
            for more information.'
        CustomLayers:
          allOf:
          - $ref: '#/components/schemas/CustomLayerList'
          description: 'Specifies the custom layers for the style. Leave unset to
            not enable any custom layer, or, for styles that support custom layers,
            you can enable layer(s), such as POI layer for the VectorEsriNavigation
            style. Default is `unset`.


            Not all map resources or styles support custom layers. See Custom Layers
            for more information.'
      required:
      - Style
      description: Specifies the map tile style selected from an available provider.
    MapConfigurationUpdate:
      type: object
      properties:
        PoliticalView:
          allOf:
          - $ref: '#/components/schemas/CountryCode3OrEmpty'
          description: 'Specifies the political view for the style. Set to an empty
            string to not use a political view, or, for styles that support specific
            political views, you can choose a view, such as `IND` for the Indian view.


            Not all map resources or styles support political view styles. See [Political
            views](https://docs.aws.amazon.com/location/latest/developerguide/map-concepts.html#political-views)
            for more information.'
        CustomLayers:
          allOf:
          - $ref: '#/components/schemas/CustomLayerList'
          description: 'Specifies the custom layers for the style. Leave unset to
            not enable any custom layer, or, for styles that support custom layers,
            you can enable layer(s), such as POI layer for the VectorEsriNavigation
            style. Default is `unset`.


            Not all map resources or styles support custom layers. See Custom Layers
            for more information.'
      description: Specifies the political view for the style.
    MapStyle:
      type: string
      pattern: ^[-._\w]+$
      minLength: 1
      maxLength: 100
    NearestDistance:
      type: number
      format: double
      default: 0
      minimum: 0
    OptimizationMode:
      type: string
      enum:
      - FastestRoute
      - ShortestRoute
    Pci:
      type: integer
      default: 0
      minimum: 0
      maximum: 503
    Place:
      type: object
      properties:
        Label:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The full name and address of the point of interest such as
            a city, region, or country. For example, `123 Any Street, Any Town, USA`.
        Geometry:
          $ref: '#/components/schemas/PlaceGeometry'
        AddressNumber:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The numerical portion of an address, such as a building number.
        Street:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name for a street or a road to identify a location. For
            example, `Main Street`.
        Neighborhood:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of a community district. For example, `Downtown`.
        Municipality:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A name for a local area, such as a city or town name. For example,
            `Toronto`.
        SubRegion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A county, or an area that's part of a larger region. For example,
            `Metro Vancouver`.
        Region:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A name for an area or geographical division, such as a province
            or state name. For example, `British Columbia`.
        Country:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A country/region specified using [ISO 3166](https://www.iso.org/iso-3166-country-codes.html)
            3-digit country/region code. For example, `CAN`.
        PostalCode:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A group of numbers and letters in a country-specific format,
            which accompanies the address for the purpose of identifying a location.
        Interpolated:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: '`True` if the result is interpolated from other known places.


            `False` if the Place is a known place.


            Not returned when the partner does not provide the information.


            For example, returns `False` for an address location that is found in
            the partner data, but returns `True` if an address does not exist in the
            partner data and its location is calculated by interpolating between other
            known addresses.'
        TimeZone:
          allOf:
          - $ref: '#/components/schemas/TimeZone'
          description: The time zone in which the `Place` is located. Returned only
            when using HERE or Grab as the selected partner.
        UnitType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'For addresses with a `UnitNumber`, the type of unit. For example,
            `Apartment`.


            Returned only for a place index that uses Esri as a data provider.'
        UnitNumber:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'For addresses with multiple units, the unit identifier. Can
            include numbers and letters, for example `3B` or `Unit 123`.


            Returned only for a place index that uses Esri or Grab as a data provider.
            Is not returned for `SearchPlaceIndexForPosition`.'
        Categories:
          allOf:
          - $ref: '#/components/schemas/PlaceCategoryList'
          description: 'The Amazon Location categories that describe this Place.


            For more information about using categories, including a list of Amazon
            Location categories, see [Categories and filtering](https://docs.aws.amazon.com/location/latest/developerguide/category-filtering.html),
            in the _Amazon Location Service Developer Guide_.'
        SupplementalCategories:
          allOf:
          - $ref: '#/components/schemas/PlaceSupplementalCategoryList'
          description: Categories from the data provider that describe the Place that
            are not mapped to any Amazon Location categories.
        SubMunicipality:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'An area that''s part of a larger municipality. For example,
            `Blissville ` is a submunicipality in the Queen County in New York.


            This property supported by Esri and OpenData. The Esri property is `district`,
            and the OpenData property is `borough`.'
      required:
      - Geometry
      description: 'Contains details about addresses or points of interest that match
        the search criteria.


        Not all details are included with all responses. Some details may only be
        returned by specific data partners.'
    PlaceCategory:
      type: string
      maxLength: 35
    PlaceCategoryList:
      type: array
      items:
        $ref: '#/components/schemas/PlaceCategory'
    PlaceGeometry:
      type: object
      properties:
        Point:
          allOf:
          - $ref: '#/components/schemas/Position'
          description: "A single point geometry specifies a location for a Place using\
            \ [WGS 84](https://gisgeography.com/wgs84-world-geodetic-system/) coordinates:\n\
            \n  * _x_ — Specifies the x coordinate or longitude. \n\n  * _y_ — Specifies\
            \ the y coordinate or latitude."
      description: Places uses a point geometry to specify a location or a Place.
    PlaceId:
      type: string
    PlaceIndexSearchResultLimit:
      type: integer
      minimum: 1
      maximum: 50
    PlaceSupplementalCategory:
      type: string
      maxLength: 35
    PlaceSupplementalCategoryList:
      type: array
      items:
        $ref: '#/components/schemas/PlaceSupplementalCategory'
    Position:
      type: array
      items:
        type: number
      x-sensitive: true
    PositionFiltering:
      type: string
      enum:
      - TimeBased
      - DistanceBased
      - AccuracyBased
    PositionList:
      type: array
      items:
        $ref: '#/components/schemas/Position'
    PositionPropertyMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    PositionalAccuracy:
      type: object
      properties:
        Horizontal:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: Estimated maximum distance, in meters, between the measured
            position and the true position of a device, along the Earth's surface.
      required:
      - Horizontal
      description: Defines the level of certainty of the position.
    PricingPlan:
      type: string
      enum:
      - RequestBasedUsage
      - MobileAssetTracking
      - MobileAssetManagement
    PropertyMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    PutGeofenceRequest:
      type: object
      properties:
        CollectionName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The geofence collection to store the geofence in.
        GeofenceId:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: An identifier for the geofence. For example, `ExampleGeofence-1`.
        Geometry:
          allOf:
          - $ref: '#/components/schemas/GeofenceGeometry'
          description: 'Contains the details to specify the position of the geofence.
            Can be a polygon, a circle or a polygon encoded in Geobuf format. Including
            multiple selections will return a validation error.


            The [ geofence polygon](https://docs.aws.amazon.com/location-geofences/latest/APIReference/API_GeofenceGeometry.html)
            format supports a maximum of 1,000 vertices. The [Geofence Geobuf](https://docs.aws.amazon.com/location-geofences/latest/APIReference/API_GeofenceGeometry.html)
            format supports a maximum of 100,000 vertices.'
        GeofenceProperties:
          allOf:
          - $ref: '#/components/schemas/PropertyMap'
          description: 'Associates one of more properties with the geofence. A property
            is a key-value pair stored with the geofence and added to any geofence
            event triggered with that geofence.


            Format: `"key" : "value"`'
      required:
      - CollectionName
      - GeofenceId
      - Geometry
    PutGeofenceResponse:
      type: object
      properties:
        GeofenceId:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The geofence identifier entered in the request.
        CreateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp for when the geofence was created in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)
            format: `YYYY-MM-DDThh:mm:ss.sssZ`'
        UpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp for when the geofence was last updated in [ISO
            8601](https://www.iso.org/iso-8601-date-and-time-format.html) format:
            `YYYY-MM-DDThh:mm:ss.sssZ`'
      required:
      - GeofenceId
      - CreateTime
      - UpdateTime
    RefererPattern:
      type: string
      pattern: ^([$\-._+!*\x{60}(),;/?:@=&\w]|%([0-9a-fA-F?]{2}|[0-9a-fA-F?]?[*]))+$
      maxLength: 253
    RefererPatternList:
      type: array
      items:
        $ref: '#/components/schemas/RefererPattern'
    ResourceDescription:
      type: string
      minLength: 0
      maxLength: 1000
    ResourceName:
      type: string
      pattern: ^[-._\w]+$
      minLength: 1
      maxLength: 100
    ResourceNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      required:
      - Message
      description: The resource that you've entered was not found in your AWS account.
    RouteMatrix:
      type: array
      items:
        $ref: '#/components/schemas/RouteMatrixRow'
    RouteMatrixEntry:
      type: object
      properties:
        Distance:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The total distance of travel for the route.
        DurationSeconds:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The expected duration of travel for the route.
        Error:
          allOf:
          - $ref: '#/components/schemas/RouteMatrixEntryError'
          description: An error corresponding to the calculation of a route between
            the `DeparturePosition` and `DestinationPosition`.
      description: The result for the calculated route of one `DeparturePosition`
        `DestinationPosition` pair.
    RouteMatrixEntryError:
      type: object
      properties:
        Code:
          allOf:
          - $ref: '#/components/schemas/RouteMatrixErrorCode'
          description: The type of error which occurred for the route calculation.
        Message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A message about the error that occurred for the route calculation.
      required:
      - Code
      description: "An error corresponding to the calculation of a route between the\
        \ `DeparturePosition` and `DestinationPosition`.\n\nThe error code can be\
        \ one of the following:\n\n  * `RouteNotFound` \\- Unable to find a valid\
        \ route with the given parameters.\n\n  * `RouteTooLong` \\- Route calculation\
        \ went beyond the maximum size of a route and was terminated before completion.\n\
        \n  * `PositionsNotFound` \\- One or more of the input positions were not\
        \ found on the route network.\n\n  * `DestinationPositionNotFound` \\- The\
        \ destination position was not found on the route network.\n\n  * `DeparturePositionNotFound`\
        \ \\- The departure position was not found on the route network.\n\n  * `OtherValidationError`\
        \ \\- The given inputs were not valid or a route was not found. More information\
        \ is given in the error `Message`"
    RouteMatrixErrorCode:
      type: string
      enum:
      - RouteNotFound
      - RouteTooLong
      - PositionsNotFound
      - DestinationPositionNotFound
      - DeparturePositionNotFound
      - OtherValidationError
    RouteMatrixRow:
      type: array
      items:
        $ref: '#/components/schemas/RouteMatrixEntry'
    Rsrp:
      type: integer
      minimum: -140
      maximum: -44
    Rsrq:
      type: number
      format: float
      minimum: -19.5
      maximum: -3
    SearchForPositionResult:
      type: object
      properties:
        Place:
          allOf:
          - $ref: '#/components/schemas/Place'
          description: Details about the search result, such as its address and position.
        Distance:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: 'The distance in meters of a great-circle arc between the query
            position and the result.


            A great-circle arc is the shortest path on a sphere, in this case the
            Earth. This returns the shortest distance between two locations.'
        PlaceId:
          allOf:
          - $ref: '#/components/schemas/PlaceId'
          description: 'The unique identifier of the place. You can use this with
            the `GetPlace` operation to find the place again later.


            For `SearchPlaceIndexForPosition` operations, the `PlaceId` is returned
            only by place indexes that use HERE or Grab as a data provider.'
      required:
      - Place
      - Distance
      description: Contains a search result from a position search query that is run
        on a place index resource.
    SearchForPositionResultList:
      type: array
      items:
        $ref: '#/components/schemas/SearchForPositionResult'
    SearchForSuggestionsResult:
      type: object
      properties:
        Text:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The text of the place suggestion, typically formatted as an
            address string.
        PlaceId:
          allOf:
          - $ref: '#/components/schemas/PlaceId'
          description: 'The unique identifier of the Place. You can use this with
            the `GetPlace` operation to find the place again later, or to get full
            information for the Place.


            The `GetPlace` request must use the same `PlaceIndex` resource as the
            `SearchPlaceIndexForSuggestions` that generated the Place ID.


            For `SearchPlaceIndexForSuggestions` operations, the `PlaceId` is returned
            by place indexes that use Esri, Grab, or HERE as data providers.'
        Categories:
          allOf:
          - $ref: '#/components/schemas/PlaceCategoryList'
          description: 'The Amazon Location categories that describe the Place.


            For more information about using categories, including a list of Amazon
            Location categories, see [Categories and filtering](https://docs.aws.amazon.com/location/latest/developerguide/category-filtering.html),
            in the _Amazon Location Service Developer Guide_.'
        SupplementalCategories:
          allOf:
          - $ref: '#/components/schemas/PlaceSupplementalCategoryList'
          description: Categories from the data provider that describe the Place that
            are not mapped to any Amazon Location categories.
      required:
      - Text
      description: Contains a place suggestion resulting from a place suggestion query
        that is run on a place index resource.
    SearchForSuggestionsResultList:
      type: array
      items:
        $ref: '#/components/schemas/SearchForSuggestionsResult'
    SearchForTextResult:
      type: object
      properties:
        Place:
          allOf:
          - $ref: '#/components/schemas/Place'
          description: Details about the search result, such as its address and position.
        Distance:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: 'The distance in meters of a great-circle arc between the bias
            position specified and the result. `Distance` will be returned only if
            a bias position was specified in the query.


            A great-circle arc is the shortest path on a sphere, in this case the
            Earth. This returns the shortest distance between two locations.'
        Relevance:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: 'The relative confidence in the match for a result among the
            results returned. For example, if more fields for an address match (including
            house number, street, city, country/region, and postal code), the relevance
            score is closer to 1.


            Returned only when the partner selected is Esri or Grab.'
        PlaceId:
          allOf:
          - $ref: '#/components/schemas/PlaceId'
          description: 'The unique identifier of the place. You can use this with
            the `GetPlace` operation to find the place again later.


            For `SearchPlaceIndexForText` operations, the `PlaceId` is returned only
            by place indexes that use HERE or Grab as a data provider.'
      required:
      - Place
      description: Contains a search result from a text search query that is run on
        a place index resource.
    SearchForTextResultList:
      type: array
      items:
        $ref: '#/components/schemas/SearchForTextResult'
    SearchPlaceIndexForPositionRequest:
      type: object
      properties:
        IndexName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the place index resource you want to use for the
            search.
        Position:
          allOf:
          - $ref: '#/components/schemas/Position'
          description: 'Specifies the longitude and latitude of the position to query.


            This parameter must contain a pair of numbers. The first number represents
            the X coordinate, or longitude; the second number represents the Y coordinate,
            or latitude.


            For example, `[-123.1174, 49.2847]` represents a position with longitude
            `-123.1174` and latitude `49.2847`.'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PlaceIndexSearchResultLimit'
          description: 'An optional parameter. The maximum number of results returned
            per request.


            Default value: `50`'
        Language:
          allOf:
          - $ref: '#/components/schemas/LanguageTag'
          description: 'The preferred language used to return results. The value must
            be a valid [BCP 47](https://tools.ietf.org/search/bcp47) language tag,
            for example, `en` for English.


            This setting affects the languages used in the results, but not the results
            themselves. If no language is specified, or not supported for a particular
            result, the partner automatically chooses a language for the result.


            For an example, we''ll use the Greek language. You search for a location
            around Athens, Greece, with the `language` parameter set to `en`. The
            `city` in the results will most likely be returned as `Athens`.


            If you set the `language` parameter to `el`, for Greek, then the `city`
            in the results will more likely be returned as `Αθήνα`.


            If the data provider does not have a value for Greek, the result will
            be in a language that the provider does support.'
        Key:
          allOf:
          - $ref: '#/components/schemas/ApiKey'
          description: The optional [API key](https://docs.aws.amazon.com/location/latest/developerguide/using-apikeys.html)
            to authorize the request.
      required:
      - IndexName
      - Position
    SearchPlaceIndexForPositionResponse:
      type: object
      properties:
        Summary:
          allOf:
          - $ref: '#/components/schemas/SearchPlaceIndexForPositionSummary'
          description: Contains a summary of the request. Echoes the input values
            for `Position`, `Language`, `MaxResults`, and the `DataSource` of the
            place index.
        Results:
          allOf:
          - $ref: '#/components/schemas/SearchForPositionResultList'
          description: Returns a list of Places closest to the specified position.
            Each result contains additional information about the Places returned.
      required:
      - Summary
      - Results
    SearchPlaceIndexForPositionSummary:
      type: object
      properties:
        Position:
          allOf:
          - $ref: '#/components/schemas/Position'
          description: The position specified in the request.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PlaceIndexSearchResultLimit'
          description: 'Contains the optional result count limit that is specified
            in the request.


            Default value: `50`'
        DataSource:
          allOf:
          - $ref: '#/components/schemas/String'
          description: "The geospatial data provider attached to the place index resource\
            \ specified in the request. Values can be one of the following:\n\n  *\
            \ Esri\n\n  * Grab\n\n  * Here\n\nFor more information about data providers,\
            \ see [Amazon Location Service data providers](https://docs.aws.amazon.com/location/latest/developerguide/what-is-data-provider.html)."
        Language:
          allOf:
          - $ref: '#/components/schemas/LanguageTag'
          description: The preferred language used to return results. Matches the
            language in the request. The value is a valid [BCP 47](https://tools.ietf.org/search/bcp47)
            language tag, for example, `en` for English.
      required:
      - Position
      - DataSource
      description: A summary of the request sent by using `SearchPlaceIndexForPosition`.
    SearchPlaceIndexForSuggestionsRequest:
      type: object
      properties:
        IndexName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the place index resource you want to use for the
            search.
        Text:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          description: The free-form partial text to use to generate place suggestions.
            For example, `eiffel tow`.
        BiasPosition:
          allOf:
          - $ref: '#/components/schemas/Position'
          description: 'An optional parameter that indicates a preference for place
            suggestions that are closer to a specified position.


            If provided, this parameter must contain a pair of numbers. The first
            number represents the X coordinate, or longitude; the second number represents
            the Y coordinate, or latitude.


            For example, `[-123.1174, 49.2847]` represents the position with longitude
            `-123.1174` and latitude `49.2847`.


            `BiasPosition` and `FilterBBox` are mutually exclusive. Specifying both
            options results in an error.'
        FilterBBox:
          allOf:
          - $ref: '#/components/schemas/BoundingBox'
          description: 'An optional parameter that limits the search results by returning
            only suggestions within a specified bounding box.


            If provided, this parameter must contain a total of four consecutive numbers
            in two pairs. The first pair of numbers represents the X and Y coordinates
            (longitude and latitude, respectively) of the southwest corner of the
            bounding box; the second pair of numbers represents the X and Y coordinates
            (longitude and latitude, respectively) of the northeast corner of the
            bounding box.


            For example, `[-12.7935, -37.4835, -12.0684, -36.9542]` represents a bounding
            box where the southwest corner has longitude `-12.7935` and latitude `-37.4835`,
            and the northeast corner has longitude `-12.0684` and latitude `-36.9542`.


            `FilterBBox` and `BiasPosition` are mutually exclusive. Specifying both
            options results in an error.'
        FilterCountries:
          allOf:
          - $ref: '#/components/schemas/CountryCodeList'
          description: "An optional parameter that limits the search results by returning\
            \ only suggestions within the provided list of countries.\n\n  * Use the\
            \ [ISO 3166](https://www.iso.org/iso-3166-country-codes.html) 3-digit\
            \ country code. For example, Australia uses three upper-case characters:\
            \ `AUS`."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'An optional parameter. The maximum number of results returned
            per request.


            The default: `5`'
        Language:
          allOf:
          - $ref: '#/components/schemas/LanguageTag'
          description: 'The preferred language used to return results. The value must
            be a valid [BCP 47](https://tools.ietf.org/search/bcp47) language tag,
            for example, `en` for English.


            This setting affects the languages used in the results. If no language
            is specified, or not supported for a particular result, the partner automatically
            chooses a language for the result.


            For an example, we''ll use the Greek language. You search for `Athens,
            Gr` to get suggestions with the `language` parameter set to `en`. The
            results found will most likely be returned as `Athens, Greece`.


            If you set the `language` parameter to `el`, for Greek, then the result
            found will more likely be returned as `Αθήνα, Ελλάδα`.


            If the data provider does not have a value for Greek, the result will
            be in a language that the provider does support.'
        FilterCategories:
          allOf:
          - $ref: '#/components/schemas/FilterPlaceCategoryList'
          description: 'A list of one or more Amazon Location categories to filter
            the returned places. If you include more than one category, the results
            will include results that match _any_ of the categories listed.


            For more information about using categories, including a list of Amazon
            Location categories, see [Categories and filtering](https://docs.aws.amazon.com/location/latest/developerguide/category-filtering.html),
            in the _Amazon Location Service Developer Guide_.'
        Key:
          allOf:
          - $ref: '#/components/schemas/ApiKey'
          description: The optional [API key](https://docs.aws.amazon.com/location/latest/developerguide/using-apikeys.html)
            to authorize the request.
      required:
      - IndexName
      - Text
    SearchPlaceIndexForSuggestionsResponse:
      type: object
      properties:
        Summary:
          allOf:
          - $ref: '#/components/schemas/SearchPlaceIndexForSuggestionsSummary'
          description: Contains a summary of the request. Echoes the input values
            for `BiasPosition`, `FilterBBox`, `FilterCountries`, `Language`, `MaxResults`,
            and `Text`. Also includes the `DataSource` of the place index.
        Results:
          allOf:
          - $ref: '#/components/schemas/SearchForSuggestionsResultList'
          description: A list of place suggestions that best match the search text.
      required:
      - Summary
      - Results
    SearchPlaceIndexForSuggestionsSummary:
      type: object
      properties:
        Text:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          description: The free-form partial text input specified in the request.
        BiasPosition:
          allOf:
          - $ref: '#/components/schemas/Position'
          description: 'Contains the coordinates for the optional bias position specified
            in the request.


            This parameter contains a pair of numbers. The first number represents
            the X coordinate, or longitude; the second number represents the Y coordinate,
            or latitude.


            For example, `[-123.1174, 49.2847]` represents the position with longitude
            `-123.1174` and latitude `49.2847`.'
        FilterBBox:
          allOf:
          - $ref: '#/components/schemas/BoundingBox'
          description: Contains the coordinates for the optional bounding box specified
            in the request.
        FilterCountries:
          allOf:
          - $ref: '#/components/schemas/CountryCodeList'
          description: Contains the optional country filter specified in the request.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Contains the optional result count limit specified in the request.
        DataSource:
          allOf:
          - $ref: '#/components/schemas/String'
          description: "The geospatial data provider attached to the place index resource\
            \ specified in the request. Values can be one of the following:\n\n  *\
            \ Esri\n\n  * Grab\n\n  * Here\n\nFor more information about data providers,\
            \ see [Amazon Location Service data providers](https://docs.aws.amazon.com/location/latest/developerguide/what-is-data-provider.html)."
        Language:
          allOf:
          - $ref: '#/components/schemas/LanguageTag'
          description: The preferred language used to return results. Matches the
            language in the request. The value is a valid [BCP 47](https://tools.ietf.org/search/bcp47)
            language tag, for example, `en` for English.
        FilterCategories:
          allOf:
          - $ref: '#/components/schemas/FilterPlaceCategoryList'
          description: The optional category filter specified in the request.
      required:
      - Text
      - DataSource
      description: A summary of the request sent by using `SearchPlaceIndexForSuggestions`.
    SearchPlaceIndexForTextRequest:
      type: object
      properties:
        IndexName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the place index resource you want to use for the
            search.
        Text:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          description: The address, name, city, or region to be used in the search
            in free-form text format. For example, `123 Any Street`.
        BiasPosition:
          allOf:
          - $ref: '#/components/schemas/Position'
          description: 'An optional parameter that indicates a preference for places
            that are closer to a specified position.


            If provided, this parameter must contain a pair of numbers. The first
            number represents the X coordinate, or longitude; the second number represents
            the Y coordinate, or latitude.


            For example, `[-123.1174, 49.2847]` represents the position with longitude
            `-123.1174` and latitude `49.2847`.


            `BiasPosition` and `FilterBBox` are mutually exclusive. Specifying both
            options results in an error.'
        FilterBBox:
          allOf:
          - $ref: '#/components/schemas/BoundingBox'
          description: 'An optional parameter that limits the search results by returning
            only places that are within the provided bounding box.


            If provided, this parameter must contain a total of four consecutive numbers
            in two pairs. The first pair of numbers represents the X and Y coordinates
            (longitude and latitude, respectively) of the southwest corner of the
            bounding box; the second pair of numbers represents the X and Y coordinates
            (longitude and latitude, respectively) of the northeast corner of the
            bounding box.


            For example, `[-12.7935, -37.4835, -12.0684, -36.9542]` represents a bounding
            box where the southwest corner has longitude `-12.7935` and latitude `-37.4835`,
            and the northeast corner has longitude `-12.0684` and latitude `-36.9542`.


            `FilterBBox` and `BiasPosition` are mutually exclusive. Specifying both
            options results in an error.'
        FilterCountries:
          allOf:
          - $ref: '#/components/schemas/CountryCodeList'
          description: "An optional parameter that limits the search results by returning\
            \ only places that are in a specified list of countries.\n\n  * Valid\
            \ values include [ISO 3166](https://www.iso.org/iso-3166-country-codes.html)\
            \ 3-digit country codes. For example, Australia uses three upper-case\
            \ characters: `AUS`."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PlaceIndexSearchResultLimit'
          description: 'An optional parameter. The maximum number of results returned
            per request.


            The default: `50`'
        Language:
          allOf:
          - $ref: '#/components/schemas/LanguageTag'
          description: 'The preferred language used to return results. The value must
            be a valid [BCP 47](https://tools.ietf.org/search/bcp47) language tag,
            for example, `en` for English.


            This setting affects the languages used in the results, but not the results
            themselves. If no language is specified, or not supported for a particular
            result, the partner automatically chooses a language for the result.


            For an example, we''ll use the Greek language. You search for `Athens,
            Greece`, with the `language` parameter set to `en`. The result found will
            most likely be returned as `Athens`.


            If you set the `language` parameter to `el`, for Greek, then the result
            found will more likely be returned as `Αθήνα`.


            If the data provider does not have a value for Greek, the result will
            be in a language that the provider does support.'
        FilterCategories:
          allOf:
          - $ref: '#/components/schemas/FilterPlaceCategoryList'
          description: 'A list of one or more Amazon Location categories to filter
            the returned places. If you include more than one category, the results
            will include results that match _any_ of the categories listed.


            For more information about using categories, including a list of Amazon
            Location categories, see [Categories and filtering](https://docs.aws.amazon.com/location/latest/developerguide/category-filtering.html),
            in the _Amazon Location Service Developer Guide_.'
        Key:
          allOf:
          - $ref: '#/components/schemas/ApiKey'
          description: The optional [API key](https://docs.aws.amazon.com/location/latest/developerguide/using-apikeys.html)
            to authorize the request.
      required:
      - IndexName
      - Text
    SearchPlaceIndexForTextResponse:
      type: object
      properties:
        Summary:
          allOf:
          - $ref: '#/components/schemas/SearchPlaceIndexForTextSummary'
          description: Contains a summary of the request. Echoes the input values
            for `BiasPosition`, `FilterBBox`, `FilterCountries`, `Language`, `MaxResults`,
            and `Text`. Also includes the `DataSource` of the place index and the
            bounding box, `ResultBBox`, which surrounds the search results.
        Results:
          allOf:
          - $ref: '#/components/schemas/SearchForTextResultList'
          description: 'A list of Places matching the input text. Each result contains
            additional information about the specific point of interest.


            Not all response properties are included with all responses. Some properties
            may only be returned by specific data partners.'
      required:
      - Summary
      - Results
    SearchPlaceIndexForTextSummary:
      type: object
      properties:
        Text:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          description: The search text specified in the request.
        BiasPosition:
          allOf:
          - $ref: '#/components/schemas/Position'
          description: 'Contains the coordinates for the optional bias position specified
            in the request.


            This parameter contains a pair of numbers. The first number represents
            the X coordinate, or longitude; the second number represents the Y coordinate,
            or latitude.


            For example, `[-123.1174, 49.2847]` represents the position with longitude
            `-123.1174` and latitude `49.2847`.'
        FilterBBox:
          allOf:
          - $ref: '#/components/schemas/BoundingBox'
          description: Contains the coordinates for the optional bounding box specified
            in the request.
        FilterCountries:
          allOf:
          - $ref: '#/components/schemas/CountryCodeList'
          description: Contains the optional country filter specified in the request.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/PlaceIndexSearchResultLimit'
          description: Contains the optional result count limit specified in the request.
        ResultBBox:
          allOf:
          - $ref: '#/components/schemas/BoundingBox'
          description: 'The bounding box that fully contains all search results.


            If you specified the optional `FilterBBox` parameter in the request, `ResultBBox`
            is contained within `FilterBBox`.'
        DataSource:
          allOf:
          - $ref: '#/components/schemas/String'
          description: "The geospatial data provider attached to the place index resource\
            \ specified in the request. Values can be one of the following:\n\n  *\
            \ Esri\n\n  * Grab\n\n  * Here\n\nFor more information about data providers,\
            \ see [Amazon Location Service data providers](https://docs.aws.amazon.com/location/latest/developerguide/what-is-data-provider.html)."
        Language:
          allOf:
          - $ref: '#/components/schemas/LanguageTag'
          description: The preferred language used to return results. Matches the
            language in the request. The value is a valid [BCP 47](https://tools.ietf.org/search/bcp47)
            language tag, for example, `en` for English.
        FilterCategories:
          allOf:
          - $ref: '#/components/schemas/FilterPlaceCategoryList'
          description: The optional category filter specified in the request.
      required:
      - Text
      - DataSource
      description: A summary of the request sent by using `SearchPlaceIndexForText`.
    SensitiveString:
      type: string
    ServiceQuotaExceededException:
      type: object
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A message with the reason for the service quota exceeded exception
            error.
      required:
      - Message
      description: The operation was denied because the request would exceed the maximum
        [quota](https://docs.aws.amazon.com/location/latest/developerguide/location-quotas.html)
        set for Amazon Location Service.
    SpeedUnit:
      type: string
      enum:
      - KilometersPerHour
      - MilesPerHour
    Status:
      type: string
      enum:
      - Active
      - Expired
    Step:
      type: object
      properties:
        StartPosition:
          allOf:
          - $ref: '#/components/schemas/Position'
          description: The starting position of a step. If the position is the first
            step in the leg, this position is the same as the start position of the
            leg.
        EndPosition:
          allOf:
          - $ref: '#/components/schemas/Position'
          description: The end position of a step. If the position the last step in
            the leg, this position is the same as the end position of the leg.
        Distance:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The travel distance between the step's `StartPosition` and
            `EndPosition`.
        DurationSeconds:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The estimated travel time, in seconds, from the step's `StartPosition`
            to the `EndPosition`. . The travel mode and departure time that you specify
            in the request determines the calculated time.
        GeometryOffset:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'Represents the start position, or index, in a sequence of
            steps within the leg''s line string geometry. For example, the index of
            the first step in a leg geometry is `0`.


            Included in the response for queries that set `IncludeLegGeometry` to
            `True`.'
      required:
      - StartPosition
      - EndPosition
      - Distance
      - DurationSeconds
      description: Represents an element of a leg within a route. A step contains
        instructions for how to move to the next step in the leg.
    StepList:
      type: array
      items:
        $ref: '#/components/schemas/Step'
    TagKey:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.,:/=+\-@]*)$
      minLength: 1
      maxLength: 128
    TagKeys:
      type: array
      items:
        type: string
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: "The Amazon Resource Name (ARN) of the resource whose tags\
            \ you want to update.\n\n  * Format example: `arn:aws:geo:region:account-id:resourcetype/ExampleResource`"
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: "Applies one or more tags to specific resource. A tag is a\
            \ key-value pair that helps you manage, identify, search, and filter your\
            \ resources.\n\nFormat: `\"key\" : \"value\"`\n\nRestrictions:\n\n  *\
            \ Maximum 50 tags per resource.\n\n  * Each tag key must be unique and\
            \ must have exactly one associated value.\n\n  * Maximum key length: 128\
            \ Unicode characters in UTF-8.\n\n  * Maximum value length: 256 Unicode\
            \ characters in UTF-8.\n\n  * Can use alphanumeric characters (A–Z, a–z,\
            \ 0–9), and the following characters: \\+ - = . _ : / @\n\n  * Cannot\
            \ use \"aws:\" as a prefix for a key."
      required:
      - ResourceArn
      - Tags
    TagResourceResponse:
      type: object
      properties: {}
    TagValue:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.,:/=+\-@]*)$
      minLength: 0
      maxLength: 256
    ThrottlingException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      required:
      - Message
      description: The request was denied because of request throttling.
    TimeZone:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the time zone, following the [ IANA time zone standard](https://www.iana.org/time-zones).
            For example, `America/Los_Angeles`.
        Offset:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The time zone's offset, in seconds, from UTC.
      required:
      - Name
      description: Information about a time zone. Includes the name of the time zone
        and the offset from UTC in seconds.
    Timestamp:
      type: string
      format: date-time
    Token:
      type: string
      minLength: 1
      maxLength: 2000
    TrackingFilterGeometry:
      type: object
      properties:
        Polygon:
          allOf:
          - $ref: '#/components/schemas/LinearRings'
          description: The set of arrays which define the polygon. A polygon can have
            between 4 and 1000 vertices.
      description: The geomerty used to filter device positions.
    TravelMode:
      type: string
      enum:
      - Car
      - Truck
      - Walking
      - Bicycle
      - Motorcycle
    TruckDimensions:
      type: object
      properties:
        Length:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: "The length of the truck.\n\n  * For example, `15.5`.\n\nFor\
            \ routes calculated with a HERE resource, this value must be between 0\
            \ and 300 meters."
        Height:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: "The height of the truck.\n\n  * For example, `4.5`.\n\nFor\
            \ routes calculated with a HERE resource, this value must be between 0\
            \ and 50 meters."
        Width:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: "The width of the truck.\n\n  * For example, `4.5`.\n\nFor\
            \ routes calculated with a HERE resource, this value must be between 0\
            \ and 50 meters."
        Unit:
          allOf:
          - $ref: '#/components/schemas/DimensionUnit'
          description: 'Specifies the unit of measurement for the truck dimensions.


            Default Value: `Meters`'
      description: Contains details about the truck dimensions in the unit of measurement
        that you specify. Used to filter out roads that can't support or allow the
        specified dimensions for requests that specify `TravelMode` as `Truck`.
    TruckWeight:
      type: object
      properties:
        Total:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: "The total weight of the truck.\n\n  * For example, `3500`."
        Unit:
          allOf:
          - $ref: '#/components/schemas/VehicleWeightUnit'
          description: 'The unit of measurement to use for the truck weight.


            Default Value: `Kilograms`'
      description: Contains details about the truck's weight specifications. Used
        to avoid roads that can't support or allow the total weight for requests that
        specify `TravelMode` as `Truck`.
    UntagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: "The Amazon Resource Name (ARN) of the resource from which\
            \ you want to remove tags.\n\n  * Format example: `arn:aws:geo:region:account-id:resourcetype/ExampleResource`"
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeys'
          description: The list of tag keys to remove from the specified resource.
      required:
      - ResourceArn
      - TagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateGeofenceCollectionRequest:
      type: object
      properties:
        CollectionName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the geofence collection to update.
        PricingPlan:
          allOf:
          - $ref: '#/components/schemas/PricingPlan'
          description: No longer used. If included, the only allowed value is `RequestBasedUsage`.
        PricingPlanDataSource:
          allOf:
          - $ref: '#/components/schemas/String'
          description: This parameter is no longer used.
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: Updates the description for the geofence collection.
      required:
      - CollectionName
    UpdateGeofenceCollectionResponse:
      type: object
      properties:
        CollectionName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the updated geofence collection.
        CollectionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: "The Amazon Resource Name (ARN) of the updated geofence collection.\
            \ Used to specify a resource across Amazon Web Services.\n\n  * Format\
            \ example: `arn:aws:geo:region:account-id:geofence-collection/ExampleGeofenceCollection`"
        UpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The time when the geofence collection was last updated in
            [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format:
            `YYYY-MM-DDThh:mm:ss.sssZ`'
      required:
      - CollectionName
      - CollectionArn
      - UpdateTime
    UpdateKeyRequest:
      type: object
      properties:
        KeyName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the API key resource to update.
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: Updates the description for the API key resource.
        ExpireTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'Updates the timestamp for when the API key resource will expire
            in [ ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)
            format: `YYYY-MM-DDThh:mm:ss.sssZ`.'
        NoExpiry:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the API key should expire. Set to `true` to set the
            API key to have no expiration time.
        ForceUpdate:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'The boolean flag to be included for updating `ExpireTime`
            or `Restrictions` details.


            Must be set to `true` to update an API key resource that has been used
            in the past 7 days.


            `False` if force update is not preferred


            Default value: `False`'
        Restrictions:
          allOf:
          - $ref: '#/components/schemas/ApiKeyRestrictions'
          description: Updates the API key restrictions for the API key resource.
      required:
      - KeyName
    UpdateKeyResponse:
      type: object
      properties:
        KeyArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: "The Amazon Resource Name (ARN) for the API key resource. Used\
            \ when you need to specify a resource across all Amazon Web Services.\n\
            \n  * Format example: `arn:aws:geo:region:account-id:key/ExampleKey`"
        KeyName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the API key resource.
        UpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp for when the API key resource was last updated
            in [ ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)
            format: `YYYY-MM-DDThh:mm:ss.sssZ`.'
      required:
      - KeyArn
      - KeyName
      - UpdateTime
    UpdateMapRequest:
      type: object
      properties:
        MapName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the map resource to update.
        PricingPlan:
          allOf:
          - $ref: '#/components/schemas/PricingPlan'
          description: No longer used. If included, the only allowed value is `RequestBasedUsage`.
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: Updates the description for the map resource.
        ConfigurationUpdate:
          allOf:
          - $ref: '#/components/schemas/MapConfigurationUpdate'
          description: Updates the parts of the map configuration that can be updated,
            including the political view.
      required:
      - MapName
    UpdateMapResponse:
      type: object
      properties:
        MapName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the updated map resource.
        MapArn:
          allOf:
          - $ref: '#/components/schemas/GeoArn'
          description: "The Amazon Resource Name (ARN) of the updated map resource.\
            \ Used to specify a resource across AWS.\n\n  * Format example: `arn:aws:geo:region:account-id:map/ExampleMap`"
        UpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp for when the map resource was last updated in
            [ ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format:
            `YYYY-MM-DDThh:mm:ss.sssZ`.'
      required:
      - MapName
      - MapArn
      - UpdateTime
    UpdatePlaceIndexRequest:
      type: object
      properties:
        IndexName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the place index resource to update.
        PricingPlan:
          allOf:
          - $ref: '#/components/schemas/PricingPlan'
          description: No longer used. If included, the only allowed value is `RequestBasedUsage`.
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: Updates the description for the place index resource.
        DataSourceConfiguration:
          allOf:
          - $ref: '#/components/schemas/DataSourceConfiguration'
          description: Updates the data storage option for the place index resource.
      required:
      - IndexName
    UpdatePlaceIndexResponse:
      type: object
      properties:
        IndexName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the updated place index resource.
        IndexArn:
          allOf:
          - $ref: '#/components/schemas/GeoArn'
          description: "The Amazon Resource Name (ARN) of the upated place index resource.\
            \ Used to specify a resource across Amazon Web Services.\n\n  * Format\
            \ example: `arn:aws:geo:region:account-id:place- index/ExamplePlaceIndex`"
        UpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp for when the place index resource was last updated
            in [ ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)
            format: `YYYY-MM-DDThh:mm:ss.sssZ`.'
      required:
      - IndexName
      - IndexArn
      - UpdateTime
    UpdateRouteCalculatorRequest:
      type: object
      properties:
        CalculatorName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the route calculator resource to update.
        PricingPlan:
          allOf:
          - $ref: '#/components/schemas/PricingPlan'
          description: No longer used. If included, the only allowed value is `RequestBasedUsage`.
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: Updates the description for the route calculator resource.
      required:
      - CalculatorName
    UpdateRouteCalculatorResponse:
      type: object
      properties:
        CalculatorName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the updated route calculator resource.
        CalculatorArn:
          allOf:
          - $ref: '#/components/schemas/GeoArn'
          description: "The Amazon Resource Name (ARN) of the updated route calculator\
            \ resource. Used to specify a resource across AWS.\n\n  * Format example:\
            \ `arn:aws:geo:region:account-id:route- calculator/ExampleCalculator`"
        UpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp for when the route calculator was last updated
            in [ ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)
            format: `YYYY-MM-DDThh:mm:ss.sssZ`.'
      required:
      - CalculatorName
      - CalculatorArn
      - UpdateTime
    UpdateTrackerRequest:
      type: object
      properties:
        TrackerName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the tracker resource to update.
        PricingPlan:
          allOf:
          - $ref: '#/components/schemas/PricingPlan'
          description: No longer used. If included, the only allowed value is `RequestBasedUsage`.
        PricingPlanDataSource:
          allOf:
          - $ref: '#/components/schemas/String'
          description: This parameter is no longer used.
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: Updates the description for the tracker resource.
        PositionFiltering:
          allOf:
          - $ref: '#/components/schemas/PositionFiltering'
          description: "Updates the position filtering for the tracker resource.\n\
            \nValid values:\n\n  * `TimeBased` \\- Location updates are evaluated\
            \ against linked geofence collections, but not every location update is\
            \ stored. If your update frequency is more often than 30 seconds, only\
            \ one update per 30 seconds is stored for each unique device ID. \n\n\
            \  * `DistanceBased` \\- If the device has moved less than 30 m (98.4\
            \ ft), location updates are ignored. Location updates within this distance\
            \ are neither evaluated against linked geofence collections, nor stored.\
            \ This helps control costs by reducing the number of geofence evaluations\
            \ and historical device positions to paginate through. Distance-based\
            \ filtering can also reduce the effects of GPS noise when displaying device\
            \ trajectories on a map. \n\n  * `AccuracyBased` \\- If the device has\
            \ moved less than the measured accuracy, location updates are ignored.\
            \ For example, if two consecutive updates from a device have a horizontal\
            \ accuracy of 5 m and 10 m, the second update is ignored if the device\
            \ has moved less than 15 m. Ignored location updates are neither evaluated\
            \ against linked geofence collections, nor stored. This helps educe the\
            \ effects of GPS noise when displaying device trajectories on a map, and\
            \ can help control costs by reducing the number of geofence evaluations."
        EventBridgeEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'Whether to enable position `UPDATE` events from this tracker
            to be sent to EventBridge.


            You do not need enable this feature to get `ENTER` and `EXIT` events for
            geofences with this tracker. Those events are always sent to EventBridge.'
        KmsKeyEnableGeospatialQueries:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'Enables `GeospatialQueries` for a tracker that uses a [Amazon
            Web Services KMS customer managed key](https://docs.aws.amazon.com/kms/latest/developerguide/create-keys.html).


            This parameter is only used if you are using a KMS customer managed key.'
      required:
      - TrackerName
    UpdateTrackerResponse:
      type: object
      properties:
        TrackerName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the updated tracker resource.
        TrackerArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: "The Amazon Resource Name (ARN) of the updated tracker resource.\
            \ Used to specify a resource across AWS.\n\n  * Format example: `arn:aws:geo:region:account-id:tracker/ExampleTracker`"
        UpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp for when the tracker resource was last updated
            in [ ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)
            format: `YYYY-MM-DDThh:mm:ss.sssZ`.'
      required:
      - TrackerName
      - TrackerArn
      - UpdateTime
    Uuid:
      type: string
      pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
    ValidationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
        Reason:
          allOf:
          - $ref: '#/components/schemas/ValidationExceptionReason'
          description: A message with the reason for the validation exception error.
        FieldList:
          allOf:
          - $ref: '#/components/schemas/ValidationExceptionFieldList'
          description: The field where the invalid entry was detected.
      required:
      - Message
      - Reason
      - FieldList
      description: The input failed to meet the constraints specified by the AWS service.
    ValidationExceptionField:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The field name where the invalid entry was detected.
        Message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A message with the reason for the validation exception error.
      required:
      - Name
      - Message
      description: The input failed to meet the constraints specified by the AWS service
        in a specified field.
    ValidationExceptionFieldList:
      type: array
      items:
        $ref: '#/components/schemas/ValidationExceptionField'
    ValidationExceptionReason:
      type: string
      enum:
      - UnknownOperation
      - Missing
      - CannotParse
      - FieldValidationFailed
      - Other
      - UnknownField
    VehicleWeightUnit:
      type: string
      enum:
      - Kilograms
      - Pounds
    VerifyDevicePositionRequest:
      type: object
      properties:
        TrackerName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the tracker resource to be associated with verification
            request.
        DeviceState:
          allOf:
          - $ref: '#/components/schemas/DeviceState'
          description: The device's state, including position, IP address, cell signals
            and Wi-Fi access points.
        DistanceUnit:
          allOf:
          - $ref: '#/components/schemas/DistanceUnit'
          description: 'The distance unit for the verification request.


            Default Value: `Kilometers`'
      required:
      - TrackerName
      - DeviceState
    VerifyDevicePositionResponse:
      type: object
      properties:
        InferredState:
          allOf:
          - $ref: '#/components/schemas/InferredState'
          description: The inferred state of the device, given the provided position,
            IP address, cellular signals, and Wi-Fi- access points.
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The device identifier.
        SampleTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp at which the device''s position was determined.
            Uses [ ISO 8601 ](https://www.iso.org/iso-8601-date-and-time-format.html)
            format: `YYYY-MM-DDThh:mm:ss.sssZ`.'
        ReceivedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp for when the tracker resource received the device
            position in [ ISO 8601 ](https://www.iso.org/iso-8601-date-and-time-format.html)
            format: `YYYY-MM-DDThh:mm:ss.sssZ`.'
        DistanceUnit:
          allOf:
          - $ref: '#/components/schemas/DistanceUnit'
          description: The distance unit for the verification response.
      required:
      - InferredState
      - DeviceId
      - SampleTime
      - ReceivedTime
      - DistanceUnit
    WaypointPositionList:
      type: array
      items:
        $ref: '#/components/schemas/Position'
    WiFiAccessPoint:
      type: object
      properties:
        MacAddress:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Medium access control address (Mac).
        Rss:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Received signal strength (dBm) of the WLAN measurement data.
      required:
      - MacAddress
      - Rss
      description: Wi-Fi access point.
    WiFiAccessPointList:
      type: array
      items:
        $ref: '#/components/schemas/WiFiAccessPoint'
