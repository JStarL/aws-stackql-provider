openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: mwaa
  x-aws-serviceName: mwaa
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2020-07-01'
  title: AmazonMWAA
  description: |-
    Amazon Managed Workflows for Apache Airflow

    This section contains the Amazon Managed Workflows for Apache Airflow (MWAA) API reference documentation. For more information, see [What is Amazon MWAA?](https://docs.aws.amazon.com/mwaa/latest/userguide/what-is-mwaa.html).

    **Endpoints**

      * `api.airflow.{region}.amazonaws.com` \- This endpoint is used for environment management.

        * [CreateEnvironment](https://docs.aws.amazon.com/mwaa/latest/API/API_CreateEnvironment.html)

        * [DeleteEnvironment](https://docs.aws.amazon.com/mwaa/latest/API/API_DeleteEnvironment.html)

        * [GetEnvironment](https://docs.aws.amazon.com/mwaa/latest/API/API_GetEnvironment.html)

        * [ListEnvironments](https://docs.aws.amazon.com/mwaa/latest/API/API_ListEnvironments.html)

        * [ListTagsForResource](https://docs.aws.amazon.com/mwaa/latest/API/API_ListTagsForResource.html)

        * [TagResource](https://docs.aws.amazon.com/mwaa/latest/API/API_TagResource.html)

        * [UntagResource](https://docs.aws.amazon.com/mwaa/latest/API/API_UntagResource.html)

        * [UpdateEnvironment](https://docs.aws.amazon.com/mwaa/latest/API/API_UpdateEnvironment.html)

      * `env.airflow.{region}.amazonaws.com` \- This endpoint is used to operate the Airflow environment.

        * [CreateCliToken](https://docs.aws.amazon.com/mwaa/latest/API/API_CreateCliToken.html )

        * [CreateWebLoginToken](https://docs.aws.amazon.com/mwaa/latest/API/API_CreateWebLoginToken.html)

        * [InvokeRestApi](https://docs.aws.amazon.com/mwaa/latest/API/API_InvokeRestApi.html)

    **Regions**

    For a list of supported regions, see [Amazon MWAA endpoints and quotas](https://docs.aws.amazon.com/general/latest/gr/mwaa.html) in the _Amazon Web Services General Reference_.
servers:
- description: The AmazonMWAA regional endpoint
  url: https://airflow.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /clitoken/{Name}:
    post:
      operationId: CreateCliToken
      description: |-
        Creates a CLI token for the Airflow CLI. To learn more, see [Creating an Apache Airflow CLI token](https://docs.aws.amazon.com/mwaa/latest/userguide/call-mwaa-apis-cli.html).
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EnvironmentName'
      responses:
        '200': {}
        '404':
          description: |-
            ResourceNotFoundException: The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /environments/{Name}:
    put:
      operationId: CreateEnvironment
      description: |-
        Creates an Amazon Managed Workflows for Apache Airflow (Amazon MWAA) environment.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EnvironmentName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ExecutionRoleArn:
                  $ref: '#/components/schemas/IamRoleArn'
                SourceBucketArn:
                  $ref: '#/components/schemas/S3BucketArn'
                DagS3Path:
                  $ref: '#/components/schemas/RelativePath'
                NetworkConfiguration:
                  $ref: '#/components/schemas/NetworkConfiguration'
                PluginsS3Path:
                  $ref: '#/components/schemas/RelativePath'
                PluginsS3ObjectVersion:
                  $ref: '#/components/schemas/S3ObjectVersion'
                RequirementsS3Path:
                  $ref: '#/components/schemas/RelativePath'
                RequirementsS3ObjectVersion:
                  $ref: '#/components/schemas/S3ObjectVersion'
                StartupScriptS3Path:
                  $ref: '#/components/schemas/RelativePath'
                StartupScriptS3ObjectVersion:
                  $ref: '#/components/schemas/S3ObjectVersion'
                AirflowConfigurationOptions:
                  $ref: '#/components/schemas/AirflowConfigurationOptions'
                EnvironmentClass:
                  $ref: '#/components/schemas/EnvironmentClass'
                MaxWorkers:
                  $ref: '#/components/schemas/MaxWorkers'
                KmsKey:
                  $ref: '#/components/schemas/KmsKey'
                AirflowVersion:
                  $ref: '#/components/schemas/AirflowVersion'
                LoggingConfiguration:
                  $ref: '#/components/schemas/LoggingConfigurationInput'
                WeeklyMaintenanceWindowStart:
                  $ref: '#/components/schemas/WeeklyMaintenanceWindowStart'
                Tags:
                  $ref: '#/components/schemas/TagMap'
                WebserverAccessMode:
                  $ref: '#/components/schemas/WebserverAccessMode'
                MinWorkers:
                  $ref: '#/components/schemas/MinWorkers'
                Schedulers:
                  $ref: '#/components/schemas/Schedulers'
                EndpointManagement:
                  $ref: '#/components/schemas/EndpointManagement'
                MinWebservers:
                  $ref: '#/components/schemas/MinWebservers'
                MaxWebservers:
                  $ref: '#/components/schemas/MaxWebservers'
      responses:
        '200': {}
        '500':
          description: |-
            InternalServerException: An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            ValidationException: The provided input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: DeleteEnvironment
      description: |-
        Deletes an Amazon Managed Workflows for Apache Airflow (Amazon MWAA) environment.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EnvironmentName'
      responses:
        '200': {}
        '500':
          description: |-
            InternalServerException: An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            ResourceNotFoundException: The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            ValidationException: The provided input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetEnvironment
      description: |-
        Describes an Amazon Managed Workflows for Apache Airflow (MWAA) environment.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EnvironmentName'
      responses:
        '200': {}
        '500':
          description: |-
            InternalServerException: An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            ResourceNotFoundException: The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            ValidationException: The provided input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateEnvironment
      description: |-
        Updates an Amazon Managed Workflows for Apache Airflow (MWAA) environment.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EnvironmentName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ExecutionRoleArn:
                  $ref: '#/components/schemas/IamRoleArn'
                AirflowVersion:
                  $ref: '#/components/schemas/AirflowVersion'
                SourceBucketArn:
                  $ref: '#/components/schemas/S3BucketArn'
                DagS3Path:
                  $ref: '#/components/schemas/RelativePath'
                PluginsS3Path:
                  $ref: '#/components/schemas/RelativePath'
                PluginsS3ObjectVersion:
                  $ref: '#/components/schemas/S3ObjectVersion'
                RequirementsS3Path:
                  $ref: '#/components/schemas/RelativePath'
                RequirementsS3ObjectVersion:
                  $ref: '#/components/schemas/S3ObjectVersion'
                StartupScriptS3Path:
                  $ref: '#/components/schemas/RelativePath'
                StartupScriptS3ObjectVersion:
                  $ref: '#/components/schemas/S3ObjectVersion'
                AirflowConfigurationOptions:
                  $ref: '#/components/schemas/AirflowConfigurationOptions'
                EnvironmentClass:
                  $ref: '#/components/schemas/EnvironmentClass'
                MaxWorkers:
                  $ref: '#/components/schemas/MaxWorkers'
                NetworkConfiguration:
                  $ref: '#/components/schemas/UpdateNetworkConfigurationInput'
                LoggingConfiguration:
                  $ref: '#/components/schemas/LoggingConfigurationInput'
                WeeklyMaintenanceWindowStart:
                  $ref: '#/components/schemas/WeeklyMaintenanceWindowStart'
                WebserverAccessMode:
                  $ref: '#/components/schemas/WebserverAccessMode'
                MinWorkers:
                  $ref: '#/components/schemas/MinWorkers'
                Schedulers:
                  $ref: '#/components/schemas/Schedulers'
                MinWebservers:
                  $ref: '#/components/schemas/MinWebservers'
                MaxWebservers:
                  $ref: '#/components/schemas/MaxWebservers'
      responses:
        '200': {}
        '500':
          description: |-
            InternalServerException: An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            ResourceNotFoundException: The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            ValidationException: The provided input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /webtoken/{Name}:
    post:
      operationId: CreateWebLoginToken
      description: |-
        Creates a web login token for the Airflow Web UI. To learn more, see [Creating an Apache Airflow web login token](https://docs.aws.amazon.com/mwaa/latest/userguide/call-mwaa-apis-web.html).
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EnvironmentName'
      responses:
        '200': {}
        '403':
          description: |-
            Access to the Apache Airflow Web UI or CLI has been denied due to insufficient permissions. To learn more, see [Accessing an Amazon MWAA environment](https://docs.aws.amazon.com/mwaa/latest/userguide/access-policies.html).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            InternalServerException: An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            ResourceNotFoundException: The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            ValidationException: The provided input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /restapi/{Name}:
    post:
      operationId: InvokeRestApi
      description: |-
        Invokes the Apache Airflow REST API on the webserver with the specified inputs. To learn more, see [Using the Apache Airflow REST API](https://docs.aws.amazon.com/mwaa/latest/userguide/access-mwaa-apache-airflow-rest-api.html)
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EnvironmentName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Path:
                  $ref: '#/components/schemas/RestApiPath'
                Method:
                  $ref: '#/components/schemas/RestApiMethod'
                QueryParameters:
                  $ref: '#/components/schemas/Document'
                Body:
                  $ref: '#/components/schemas/RestApiRequestBody'
      responses:
        '200': {}
        '403':
          description: |-
            Access to the Apache Airflow Web UI or CLI has been denied due to insufficient permissions. To learn more, see [Accessing an Amazon MWAA environment](https://docs.aws.amazon.com/mwaa/latest/userguide/access-policies.html).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            InternalServerException: An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            ResourceNotFoundException: The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            ValidationException: The provided input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /environments:
    get:
      operationId: ListEnvironments
      description: |-
        Lists the Amazon Managed Workflows for Apache Airflow (MWAA) environments.
      parameters:
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
        '500':
          description: |-
            InternalServerException: An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            ValidationException: The provided input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tags/{ResourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Lists the key-value tag pairs associated to the Amazon Managed Workflows for Apache Airflow (MWAA) environment. For example, `"Environment": "Staging"`.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EnvironmentArn'
      responses:
        '200': {}
        '500':
          description: |-
            InternalServerException: An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            ResourceNotFoundException: The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            ValidationException: The provided input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: TagResource
      description: |-
        Associates key-value tag pairs to your Amazon Managed Workflows for Apache Airflow (MWAA) environment.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EnvironmentArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '500':
          description: |-
            InternalServerException: An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            ResourceNotFoundException: The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            ValidationException: The provided input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: UntagResource
      description: |-
        Removes key-value tag pairs associated to your Amazon Managed Workflows for Apache Airflow (MWAA) environment. For example, `"Environment": "Staging"`.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EnvironmentArn'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeyList'
      responses:
        '200': {}
        '500':
          description: |-
            InternalServerException: An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            ResourceNotFoundException: The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            ValidationException: The provided input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /metrics/environments/{EnvironmentName}:
    post:
      operationId: PublishMetrics
      description: |-
        **Internal only**. Publishes environment health metrics to Amazon CloudWatch.
      parameters:
      - name: EnvironmentName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EnvironmentName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MetricData:
                  $ref: '#/components/schemas/MetricData'
      responses:
        '200': {}
        '500':
          description: |-
            InternalServerException: An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            ValidationException: The provided input is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    AccessDeniedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: Access to the Apache Airflow Web UI or CLI has been denied due
        to insufficient permissions. To learn more, see [Accessing an Amazon MWAA
        environment](https://docs.aws.amazon.com/mwaa/latest/userguide/access-policies.html).
    AirflowConfigurationOptions:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ConfigValue'
    AirflowIdentity:
      type: string
      minLength: 1
      maxLength: 64
    AirflowVersion:
      type: string
      pattern: ^[0-9a-z.]+$
      minLength: 1
      maxLength: 32
    CeleryExecutorQueue:
      type: string
      pattern: ^arn:aws(-[a-z]+)?:sqs:[a-z0-9\-]+:\d{12}:[a-zA-Z_0-9+=,.@\-_/]+$
      minLength: 1
      maxLength: 1224
    CloudWatchLogGroupArn:
      type: string
      pattern: ^arn:aws(-[a-z]+)?:logs:[a-z0-9\-]+:\d{12}:log-group:\w+
      minLength: 1
      maxLength: 1224
    ConfigKey:
      type: string
      pattern: ^[a-z]+([a-z0-9._]*[a-z0-9_]+)?$
      minLength: 1
      maxLength: 64
    ConfigValue:
      type: string
      pattern: ^[ -~]+$
      minLength: 1
      maxLength: 65536
    CreateCliTokenRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/EnvironmentName'
          description: The name of the Amazon MWAA environment. For example, `MyMWAAEnvironment`.
      required:
      - Name
    CreateCliTokenResponse:
      type: object
      properties:
        CliToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: An Airflow CLI login token.
        WebServerHostname:
          allOf:
          - $ref: '#/components/schemas/Hostname'
          description: The Airflow web server hostname for the environment.
    CreateEnvironmentInput:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/EnvironmentName'
          description: The name of the Amazon MWAA environment. For example, `MyMWAAEnvironment`.
        ExecutionRoleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          description: The Amazon Resource Name (ARN) of the execution role for your
            environment. An execution role is an Amazon Web Services Identity and
            Access Management (IAM) role that grants MWAA permission to access Amazon
            Web Services services and resources used by your environment. For example,
            `arn:aws:iam::123456789:role/my-execution-role`. For more information,
            see [Amazon MWAA Execution role](https://docs.aws.amazon.com/mwaa/latest/userguide/mwaa-create-role.html).
        SourceBucketArn:
          allOf:
          - $ref: '#/components/schemas/S3BucketArn'
          description: The Amazon Resource Name (ARN) of the Amazon S3 bucket where
            your DAG code and supporting files are stored. For example, `arn:aws:s3:::my-airflow-bucket-unique-name`.
            For more information, see [Create an Amazon S3 bucket for Amazon MWAA](https://docs.aws.amazon.com/mwaa/latest/userguide/mwaa-s3-bucket.html).
        DagS3Path:
          allOf:
          - $ref: '#/components/schemas/RelativePath'
          description: The relative path to the DAGs folder on your Amazon S3 bucket.
            For example, `dags`. For more information, see [Adding or updating DAGs](https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-folder.html).
        NetworkConfiguration:
          allOf:
          - $ref: '#/components/schemas/NetworkConfiguration'
          description: The VPC networking components used to secure and enable network
            traffic between the Amazon Web Services resources for your environment.
            For more information, see [About networking on Amazon MWAA](https://docs.aws.amazon.com/mwaa/latest/userguide/networking-about.html).
        PluginsS3Path:
          allOf:
          - $ref: '#/components/schemas/RelativePath'
          description: The relative path to the `plugins.zip` file on your Amazon
            S3 bucket. For example, `plugins.zip`. If specified, then the `plugins.zip`
            version is required. For more information, see [Installing custom plugins](https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-import-plugins.html).
        PluginsS3ObjectVersion:
          allOf:
          - $ref: '#/components/schemas/S3ObjectVersion'
          description: The version of the plugins.zip file on your Amazon S3 bucket.
            You must specify a version each time a plugins.zip file is updated. For
            more information, see [How S3 Versioning works](https://docs.aws.amazon.com/AmazonS3/latest/userguide/versioning-workflows.html).
        RequirementsS3Path:
          allOf:
          - $ref: '#/components/schemas/RelativePath'
          description: The relative path to the `requirements.txt` file on your Amazon
            S3 bucket. For example, `requirements.txt`. If specified, then a version
            is required. For more information, see [Installing Python dependencies](https://docs.aws.amazon.com/mwaa/latest/userguide/working-dags-dependencies.html).
        RequirementsS3ObjectVersion:
          allOf:
          - $ref: '#/components/schemas/S3ObjectVersion'
          description: The version of the `requirements.txt` file on your Amazon S3
            bucket. You must specify a version each time a requirements.txt file is
            updated. For more information, see [How S3 Versioning works](https://docs.aws.amazon.com/AmazonS3/latest/userguide/versioning-workflows.html).
        StartupScriptS3Path:
          allOf:
          - $ref: '#/components/schemas/RelativePath'
          description: 'The relative path to the startup shell script in your Amazon
            S3 bucket. For example, `s3://mwaa-environment/startup.sh`.


            Amazon MWAA runs the script as your environment starts, and before running
            the Apache Airflow process. You can use this script to install dependencies,
            modify Apache Airflow configuration options, and set environment variables.
            For more information, see [Using a startup script](https://docs.aws.amazon.com/mwaa/latest/userguide/using-startup-script.html).'
        StartupScriptS3ObjectVersion:
          allOf:
          - $ref: '#/components/schemas/S3ObjectVersion'
          description: 'The version of the startup shell script in your Amazon S3
            bucket. You must specify the [version ID](https://docs.aws.amazon.com/AmazonS3/latest/userguide/versioning-workflows.html)
            that Amazon S3 assigns to the file every time you update the script.


            Version IDs are Unicode, UTF-8 encoded, URL-ready, opaque strings that
            are no more than 1,024 bytes long. The following is an example:


            `3sL4kqtJlcpXroDTDmJ+rmSpXd3dIbrHY+MTRCxf3vjVBH40Nr8X8gdRQBpUMLUo`


            For more information, see [Using a startup script](https://docs.aws.amazon.com/mwaa/latest/userguide/using-startup-script.html).'
        AirflowConfigurationOptions:
          allOf:
          - $ref: '#/components/schemas/AirflowConfigurationOptions'
          description: A list of key-value pairs containing the Apache Airflow configuration
            options you want to attach to your environment. For more information,
            see [Apache Airflow configuration options](https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-env-variables.html).
        EnvironmentClass:
          allOf:
          - $ref: '#/components/schemas/EnvironmentClass'
          description: 'The environment class type. Valid values: `mw1.micro`, `mw1.small`,
            `mw1.medium`, `mw1.large`, `mw1.xlarge`, and `mw1.2xlarge`. For more information,
            see [Amazon MWAA environment class](https://docs.aws.amazon.com/mwaa/latest/userguide/environment-class.html).'
        MaxWorkers:
          allOf:
          - $ref: '#/components/schemas/MaxWorkers'
          description: The maximum number of workers that you want to run in your
            environment. MWAA scales the number of Apache Airflow workers up to the
            number you specify in the `MaxWorkers` field. For example, `20`. When
            there are no more tasks running, and no more in the queue, MWAA disposes
            of the extra workers leaving the one worker that is included with your
            environment, or the number you specify in `MinWorkers`.
        KmsKey:
          allOf:
          - $ref: '#/components/schemas/KmsKey'
          description: The Amazon Web Services Key Management Service (KMS) key to
            encrypt the data in your environment. You can use an Amazon Web Services
            owned CMK, or a Customer managed CMK (advanced). For more information,
            see [Create an Amazon MWAA environment](https://docs.aws.amazon.com/mwaa/latest/userguide/create-environment.html).
        AirflowVersion:
          allOf:
          - $ref: '#/components/schemas/AirflowVersion'
          description: 'The Apache Airflow version for your environment. If no value
            is specified, it defaults to the latest version. For more information,
            see [Apache Airflow versions on Amazon Managed Workflows for Apache Airflow
            (Amazon MWAA)](https://docs.aws.amazon.com/mwaa/latest/userguide/airflow-versions.html).


            Valid values: `1.10.12`, `2.0.2`, `2.2.2`, `2.4.3`, `2.5.1`, `2.6.3`,
            `2.7.2`, `2.8.1`, `2.9.2`, `2.10.1`, and `2.10.3`.'
        LoggingConfiguration:
          allOf:
          - $ref: '#/components/schemas/LoggingConfigurationInput'
          description: Defines the Apache Airflow logs to send to CloudWatch Logs.
        WeeklyMaintenanceWindowStart:
          allOf:
          - $ref: '#/components/schemas/WeeklyMaintenanceWindowStart'
          description: 'The day and time of the week in Coordinated Universal Time
            (UTC) 24-hour standard time to start weekly maintenance updates of your
            environment in the following format: `DAY:HH:MM`. For example: `TUE:03:30`.
            You can specify a start time in 30 minute increments only.'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The key-value tag pairs you want to associate to your environment.
            For example, `"Environment": "Staging"`. For more information, see [Tagging
            Amazon Web Services resources](https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).'
        WebserverAccessMode:
          allOf:
          - $ref: '#/components/schemas/WebserverAccessMode'
          description: Defines the access mode for the Apache Airflow _web server_.
            For more information, see [Apache Airflow access modes](https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-networking.html).
        MinWorkers:
          allOf:
          - $ref: '#/components/schemas/MinWorkers'
          description: The minimum number of workers that you want to run in your
            environment. MWAA scales the number of Apache Airflow workers up to the
            number you specify in the `MaxWorkers` field. When there are no more tasks
            running, and no more in the queue, MWAA disposes of the extra workers
            leaving the worker count you specify in the `MinWorkers` field. For example,
            `2`.
        Schedulers:
          allOf:
          - $ref: '#/components/schemas/Schedulers'
          description: "The number of Apache Airflow schedulers to run in your environment.\
            \ Valid values:\n\n  * v2 - For environments larger than mw1.micro, accepts\
            \ values from `2` to `5`. Defaults to `2` for all environment sizes except\
            \ mw1.micro, which defaults to `1`.\n\n  * v1 - Accepts `1`."
        EndpointManagement:
          allOf:
          - $ref: '#/components/schemas/EndpointManagement'
          description: Defines whether the VPC endpoints configured for the environment
            are created, and managed, by the customer or by Amazon MWAA. If set to
            `SERVICE`, Amazon MWAA will create and manage the required VPC endpoints
            in your VPC. If set to `CUSTOMER`, you must create, and manage, the VPC
            endpoints for your VPC. If you choose to create an environment in a shared
            VPC, you must set this value to `CUSTOMER`. In a shared VPC deployment,
            the environment will remain in `PENDING` status until you create the VPC
            endpoints. If you do not take action to create the endpoints within 72
            hours, the status will change to `CREATE_FAILED`. You can delete the failed
            environment and create a new one.
        MinWebservers:
          allOf:
          - $ref: '#/components/schemas/MinWebservers'
          description: 'The minimum number of web servers that you want to run in
            your environment. Amazon MWAA scales the number of Apache Airflow web
            servers up to the number you specify for `MaxWebservers` when you interact
            with your Apache Airflow environment using Apache Airflow REST API, or
            the Apache Airflow CLI. As the transaction-per-second rate, and the network
            load, decrease, Amazon MWAA disposes of the additional web servers, and
            scales down to the number set in `MinxWebserers`.


            Valid values: For environments larger than mw1.micro, accepts values from
            `2` to `5`. Defaults to `2` for all environment sizes except mw1.micro,
            which defaults to `1`.'
        MaxWebservers:
          allOf:
          - $ref: '#/components/schemas/MaxWebservers'
          description: 'The maximum number of web servers that you want to run in
            your environment. Amazon MWAA scales the number of Apache Airflow web
            servers up to the number you specify for `MaxWebservers` when you interact
            with your Apache Airflow environment using Apache Airflow REST API, or
            the Apache Airflow CLI. For example, in scenarios where your workload
            requires network calls to the Apache Airflow REST API with a high transaction-per-second
            (TPS) rate, Amazon MWAA will increase the number of web servers up to
            the number set in `MaxWebserers`. As TPS rates decrease Amazon MWAA disposes
            of the additional web servers, and scales down to the number set in `MinxWebserers`.


            Valid values: For environments larger than mw1.micro, accepts values from
            `2` to `5`. Defaults to `2` for all environment sizes except mw1.micro,
            which defaults to `1`.'
      required:
      - Name
      - ExecutionRoleArn
      - SourceBucketArn
      - DagS3Path
      - NetworkConfiguration
      description: This section contains the Amazon Managed Workflows for Apache Airflow
        (Amazon MWAA) API reference documentation to create an environment. For more
        information, see [Get started with Amazon Managed Workflows for Apache Airflow](https://docs.aws.amazon.com/mwaa/latest/userguide/get-started.html).
    CreateEnvironmentOutput:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/EnvironmentArn'
          description: The Amazon Resource Name (ARN) returned in the response for
            the environment.
    CreateWebLoginTokenRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/EnvironmentName'
          description: The name of the Amazon MWAA environment. For example, `MyMWAAEnvironment`.
      required:
      - Name
    CreateWebLoginTokenResponse:
      type: object
      properties:
        WebToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: An Airflow web server login token.
        WebServerHostname:
          allOf:
          - $ref: '#/components/schemas/Hostname'
          description: The Airflow web server hostname for the environment.
        IamIdentity:
          allOf:
          - $ref: '#/components/schemas/IamIdentity'
          description: The name of the IAM identity creating the web login token.
            This might be an IAM user, or an assumed or federated identity. For example,
            `assumed-role/Admin/your-name`.
        AirflowIdentity:
          allOf:
          - $ref: '#/components/schemas/AirflowIdentity'
          description: The user name of the Apache Airflow identity creating the web
            login token.
    CreatedAt:
      type: string
      format: date-time
    DeleteEnvironmentInput:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/EnvironmentName'
          description: The name of the Amazon MWAA environment. For example, `MyMWAAEnvironment`.
      required:
      - Name
    DeleteEnvironmentOutput:
      type: object
      properties: {}
    Dimension:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: '**Internal only**. The name of the dimension.'
        Value:
          allOf:
          - $ref: '#/components/schemas/String'
          description: '**Internal only**. The value of the dimension.'
      required:
      - Name
      - Value
      description: '**Internal only**. Represents the dimensions of a metric. To learn
        more about the metrics published to Amazon CloudWatch, see [Amazon MWAA performance
        metrics in Amazon CloudWatch](https://docs.aws.amazon.com/mwaa/latest/userguide/cw-metrics.html).'
    Dimensions:
      type: array
      items:
        $ref: '#/components/schemas/Dimension'
    EndpointManagement:
      type: string
      enum:
      - CUSTOMER
      - SERVICE
    Environment:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/EnvironmentName'
          description: The name of the Amazon MWAA environment. For example, `MyMWAAEnvironment`.
        Status:
          allOf:
          - $ref: '#/components/schemas/EnvironmentStatus'
          description: "The status of the Amazon MWAA environment.\n\nValid values:\n\
            \n  * `CREATING` \\- Indicates the request to create the environment is\
            \ in progress.\n\n  * `CREATING_SNAPSHOT` \\- Indicates the request to\
            \ update environment details, or upgrade the environment version, is in\
            \ progress and Amazon MWAA is creating a storage volume snapshot of the\
            \ Amazon RDS database cluster associated with the environment. A database\
            \ snapshot is a backup created at a specific point in time. Amazon MWAA\
            \ uses snapshots to recover environment metadata if the process to update\
            \ or upgrade an environment fails.\n\n  * `CREATE_FAILED` \\- Indicates\
            \ the request to create the environment failed, and the environment could\
            \ not be created.\n\n  * `AVAILABLE` \\- Indicates the request was successful\
            \ and the environment is ready to use.\n\n  * `PENDING` \\- Indicates\
            \ the request was successful, but the process to create the environment\
            \ is paused until you create the required VPC endpoints in your VPC. After\
            \ you create the VPC endpoints, the process resumes.\n\n  * `UPDATING`\
            \ \\- Indicates the request to update the environment is in progress.\n\
            \n  * `ROLLING_BACK` \\- Indicates the request to update environment details,\
            \ or upgrade the environment version, failed and Amazon MWAA is restoring\
            \ the environment using the latest storage volume snapshot.\n\n  * `DELETING`\
            \ \\- Indicates the request to delete the environment is in progress.\n\
            \n  * `DELETED` \\- Indicates the request to delete the environment is\
            \ complete, and the environment has been deleted.\n\n  * `UNAVAILABLE`\
            \ \\- Indicates the request failed, but the environment did not return\
            \ to its previous state and is not stable.\n\n  * `UPDATE_FAILED` \\-\
            \ Indicates the request to update the environment failed, and the environment\
            \ was restored to its previous state successfully and is ready to use.\n\
            \n  * `MAINTENANCE` \\- Indicates that the environment is undergoing maintenance.\
            \ Depending on the type of work Amazon MWAA is performing, your environment\
            \ might become unavailable during this process. After all operations are\
            \ done, your environment will return to its status prior to mainteneace\
            \ operations. \n\nWe recommend reviewing our troubleshooting guide for\
            \ a list of common errors and their solutions. For more information, see\
            \ [Amazon MWAA troubleshooting](https://docs.aws.amazon.com/mwaa/latest/userguide/troubleshooting.html)."
        Arn:
          allOf:
          - $ref: '#/components/schemas/EnvironmentArn'
          description: The Amazon Resource Name (ARN) of the Amazon MWAA environment.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The day and time the environment was created.
        WebserverUrl:
          allOf:
          - $ref: '#/components/schemas/WebserverUrl'
          description: The Apache Airflow _web server_ host name for the Amazon MWAA
            environment. For more information, see [Accessing the Apache Airflow UI](https://docs.aws.amazon.com/mwaa/latest/userguide/access-airflow-ui.html).
        ExecutionRoleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          description: The Amazon Resource Name (ARN) of the execution role in IAM
            that allows MWAA to access Amazon Web Services resources in your environment.
            For example, `arn:aws:iam::123456789:role/my-execution-role`. For more
            information, see [Amazon MWAA Execution role](https://docs.aws.amazon.com/mwaa/latest/userguide/mwaa-create-role.html).
        ServiceRoleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          description: The Amazon Resource Name (ARN) for the service-linked role
            of the environment. For more information, see [Amazon MWAA Service-linked
            role](https://docs.aws.amazon.com/mwaa/latest/userguide/mwaa-slr.html).
        KmsKey:
          allOf:
          - $ref: '#/components/schemas/KmsKey'
          description: The KMS encryption key used to encrypt the data in your environment.
        AirflowVersion:
          allOf:
          - $ref: '#/components/schemas/AirflowVersion'
          description: 'The Apache Airflow version on your environment.


            Valid values: `1.10.12`, `2.0.2`, `2.2.2`, `2.4.3`, `2.5.1`, `2.6.3`,
            `2.7.2`, `2.8.1`, `2.9.2`, `2.10.1`, and `2.10.3`.'
        SourceBucketArn:
          allOf:
          - $ref: '#/components/schemas/S3BucketArn'
          description: The Amazon Resource Name (ARN) of the Amazon S3 bucket where
            your DAG code and supporting files are stored. For example, `arn:aws:s3:::my-airflow-bucket-unique-name`.
            For more information, see [Create an Amazon S3 bucket for Amazon MWAA](https://docs.aws.amazon.com/mwaa/latest/userguide/mwaa-s3-bucket.html).
        DagS3Path:
          allOf:
          - $ref: '#/components/schemas/RelativePath'
          description: The relative path to the DAGs folder in your Amazon S3 bucket.
            For example, `s3://mwaa-environment/dags`. For more information, see [Adding
            or updating DAGs](https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-folder.html).
        PluginsS3Path:
          allOf:
          - $ref: '#/components/schemas/RelativePath'
          description: The relative path to the file in your Amazon S3 bucket. For
            example, `s3://mwaa-environment/plugins.zip`. For more information, see
            [Installing custom plugins](https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-import-plugins.html).
        PluginsS3ObjectVersion:
          allOf:
          - $ref: '#/components/schemas/S3ObjectVersion'
          description: 'The version of the `plugins.zip` file in your Amazon S3 bucket.
            You must specify the [version ID](https://docs.aws.amazon.com/AmazonS3/latest/userguide/versioning-workflows.html)
            that Amazon S3 assigns to the file.


            Version IDs are Unicode, UTF-8 encoded, URL-ready, opaque strings that
            are no more than 1,024 bytes long. The following is an example:


            `3sL4kqtJlcpXroDTDmJ+rmSpXd3dIbrHY+MTRCxf3vjVBH40Nr8X8gdRQBpUMLUo`


            For more information, see [Installing custom plugins](https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-import-plugins.html).'
        RequirementsS3Path:
          allOf:
          - $ref: '#/components/schemas/RelativePath'
          description: The relative path to the `requirements.txt` file in your Amazon
            S3 bucket. For example, `s3://mwaa-environment/requirements.txt`. For
            more information, see [Installing Python dependencies](https://docs.aws.amazon.com/mwaa/latest/userguide/working-dags-dependencies.html).
        RequirementsS3ObjectVersion:
          allOf:
          - $ref: '#/components/schemas/S3ObjectVersion'
          description: 'The version of the `requirements.txt ` file on your Amazon
            S3 bucket. You must specify the [version ID](https://docs.aws.amazon.com/AmazonS3/latest/userguide/versioning-workflows.html)
            that Amazon S3 assigns to the file.


            Version IDs are Unicode, UTF-8 encoded, URL-ready, opaque strings that
            are no more than 1,024 bytes long. The following is an example:


            `3sL4kqtJlcpXroDTDmJ+rmSpXd3dIbrHY+MTRCxf3vjVBH40Nr8X8gdRQBpUMLUo`


            For more information, see [Installing Python dependencies](https://docs.aws.amazon.com/mwaa/latest/userguide/working-dags-dependencies.html).'
        StartupScriptS3Path:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The relative path to the startup shell script in your Amazon
            S3 bucket. For example, `s3://mwaa-environment/startup.sh`.


            Amazon MWAA runs the script as your environment starts, and before running
            the Apache Airflow process. You can use this script to install dependencies,
            modify Apache Airflow configuration options, and set environment variables.
            For more information, see [Using a startup script](https://docs.aws.amazon.com/mwaa/latest/userguide/using-startup-script.html).'
        StartupScriptS3ObjectVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The version of the startup shell script in your Amazon S3
            bucket. You must specify the [version ID](https://docs.aws.amazon.com/AmazonS3/latest/userguide/versioning-workflows.html)
            that Amazon S3 assigns to the file.


            Version IDs are Unicode, UTF-8 encoded, URL-ready, opaque strings that
            are no more than 1,024 bytes long. The following is an example:


            `3sL4kqtJlcpXroDTDmJ+rmSpXd3dIbrHY+MTRCxf3vjVBH40Nr8X8gdRQBpUMLUo`


            For more information, see [Using a startup script](https://docs.aws.amazon.com/mwaa/latest/userguide/using-startup-script.html).'
        AirflowConfigurationOptions:
          allOf:
          - $ref: '#/components/schemas/AirflowConfigurationOptions'
          description: A list of key-value pairs containing the Apache Airflow configuration
            options attached to your environment. For more information, see [Apache
            Airflow configuration options](https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-env-variables.html).
        EnvironmentClass:
          allOf:
          - $ref: '#/components/schemas/EnvironmentClass'
          description: 'The environment class type. Valid values: `mw1.micro`, `mw1.small`,
            `mw1.medium`, `mw1.large`, `mw1.xlarge`, and `mw1.2xlarge`. For more information,
            see [Amazon MWAA environment class](https://docs.aws.amazon.com/mwaa/latest/userguide/environment-class.html).'
        MaxWorkers:
          allOf:
          - $ref: '#/components/schemas/MaxWorkers'
          description: The maximum number of workers that run in your environment.
            For example, `20`.
        NetworkConfiguration:
          allOf:
          - $ref: '#/components/schemas/NetworkConfiguration'
          description: Describes the VPC networking components used to secure and
            enable network traffic between the Amazon Web Services resources for your
            environment. For more information, see [About networking on Amazon MWAA](https://docs.aws.amazon.com/mwaa/latest/userguide/networking-about.html).
        LoggingConfiguration:
          allOf:
          - $ref: '#/components/schemas/LoggingConfiguration'
          description: The Apache Airflow logs published to CloudWatch Logs.
        LastUpdate:
          allOf:
          - $ref: '#/components/schemas/LastUpdate'
          description: The status of the last update on the environment.
        WeeklyMaintenanceWindowStart:
          allOf:
          - $ref: '#/components/schemas/WeeklyMaintenanceWindowStart'
          description: 'The day and time of the week in Coordinated Universal Time
            (UTC) 24-hour standard time that weekly maintenance updates are scheduled.
            For example: `TUE:03:30`.'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The key-value tag pairs associated to your environment. For
            example, `"Environment": "Staging"`. For more information, see [Tagging
            Amazon Web Services resources](https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).'
        WebserverAccessMode:
          allOf:
          - $ref: '#/components/schemas/WebserverAccessMode'
          description: The Apache Airflow _web server_ access mode. For more information,
            see [Apache Airflow access modes](https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-networking.html).
        MinWorkers:
          allOf:
          - $ref: '#/components/schemas/MinWorkers'
          description: The minimum number of workers that run in your environment.
            For example, `2`.
        Schedulers:
          allOf:
          - $ref: '#/components/schemas/Schedulers'
          description: The number of Apache Airflow schedulers that run in your Amazon
            MWAA environment.
        WebserverVpcEndpointService:
          allOf:
          - $ref: '#/components/schemas/VpcEndpointServiceName'
          description: The VPC endpoint for the environment's web server.
        DatabaseVpcEndpointService:
          allOf:
          - $ref: '#/components/schemas/VpcEndpointServiceName'
          description: The VPC endpoint for the environment's Amazon RDS database.
        CeleryExecutorQueue:
          allOf:
          - $ref: '#/components/schemas/CeleryExecutorQueue'
          description: The queue ARN for the environment's [Celery Executor](https://airflow.apache.org/docs/apache-airflow/stable/core-concepts/executor/celery.html).
            Amazon MWAA uses a Celery Executor to distribute tasks across multiple
            workers. When you create an environment in a shared VPC, you must provide
            access to the Celery Executor queue from your VPC.
        EndpointManagement:
          allOf:
          - $ref: '#/components/schemas/EndpointManagement'
          description: Defines whether the VPC endpoints configured for the environment
            are created, and managed, by the customer or by Amazon MWAA. If set to
            `SERVICE`, Amazon MWAA will create and manage the required VPC endpoints
            in your VPC. If set to `CUSTOMER`, you must create, and manage, the VPC
            endpoints in your VPC.
        MinWebservers:
          allOf:
          - $ref: '#/components/schemas/MinWebservers'
          description: 'The minimum number of web servers that you want to run in
            your environment. Amazon MWAA scales the number of Apache Airflow web
            servers up to the number you specify for `MaxWebservers` when you interact
            with your Apache Airflow environment using Apache Airflow REST API, or
            the Apache Airflow CLI. As the transaction-per-second rate, and the network
            load, decrease, Amazon MWAA disposes of the additional web servers, and
            scales down to the number set in `MinxWebserers`.


            Valid values: For environments larger than mw1.micro, accepts values from
            `2` to `5`. Defaults to `2` for all environment sizes except mw1.micro,
            which defaults to `1`.'
        MaxWebservers:
          allOf:
          - $ref: '#/components/schemas/MaxWebservers'
          description: 'The maximum number of web servers that you want to run in
            your environment. Amazon MWAA scales the number of Apache Airflow web
            servers up to the number you specify for `MaxWebservers` when you interact
            with your Apache Airflow environment using Apache Airflow REST API, or
            the Apache Airflow CLI. For example, in scenarios where your workload
            requires network calls to the Apache Airflow REST API with a high transaction-per-second
            (TPS) rate, Amazon MWAA will increase the number of web servers up to
            the number set in `MaxWebserers`. As TPS rates decrease Amazon MWAA disposes
            of the additional web servers, and scales down to the number set in `MinxWebserers`.


            Valid values: For environments larger than mw1.micro, accepts values from
            `2` to `5`. Defaults to `2` for all environment sizes except mw1.micro,
            which defaults to `1`.'
      description: Describes an Amazon Managed Workflows for Apache Airflow (MWAA)
        environment.
    EnvironmentArn:
      type: string
      pattern: ^arn:aws(-[a-z]+)?:airflow:[a-z0-9\-]+:\d{12}:environment/\w+
      minLength: 1
      maxLength: 1224
    EnvironmentClass:
      type: string
      minLength: 1
      maxLength: 1024
    EnvironmentList:
      type: array
      items:
        $ref: '#/components/schemas/EnvironmentName'
    EnvironmentName:
      type: string
      pattern: ^[a-zA-Z][0-9a-zA-Z-_]*$
      minLength: 1
      maxLength: 80
    EnvironmentStatus:
      type: string
      enum:
      - CREATING
      - CREATE_FAILED
      - AVAILABLE
      - UPDATING
      - DELETING
      - DELETED
      - UNAVAILABLE
      - UPDATE_FAILED
      - ROLLING_BACK
      - CREATING_SNAPSHOT
      - PENDING
      - MAINTENANCE
    ErrorCode:
      type: string
    ErrorMessage:
      type: string
      pattern: ^.+$
      minLength: 1
      maxLength: 1024
    GetEnvironmentInput:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/EnvironmentName'
          description: The name of the Amazon MWAA environment. For example, `MyMWAAEnvironment`.
      required:
      - Name
    GetEnvironmentOutput:
      type: object
      properties:
        Environment:
          allOf:
          - $ref: '#/components/schemas/Environment'
          description: An object containing all available details about the environment.
    Hostname:
      type: string
      pattern: ^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9])$
      minLength: 1
      maxLength: 255
    IamIdentity:
      type: string
    IamRoleArn:
      type: string
      pattern: ^arn:aws(-[a-z]+)?:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
      minLength: 1
      maxLength: 1224
    InternalServerException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: 'InternalServerException: An internal error has occurred.'
    InvokeRestApiRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/EnvironmentName'
          description: The name of the Amazon MWAA environment. For example, `MyMWAAEnvironment`.
        Path:
          allOf:
          - $ref: '#/components/schemas/RestApiPath'
          description: The Apache Airflow REST API endpoint path to be called. For
            example, `/dags/123456/clearTaskInstances`. For more information, see
            [Apache Airflow API](https://airflow.apache.org/docs/apache-airflow/stable/stable-rest-api-ref.html)
        Method:
          allOf:
          - $ref: '#/components/schemas/RestApiMethod'
          description: The HTTP method used for making Airflow REST API calls. For
            example, `POST`.
        QueryParameters:
          allOf:
          - $ref: '#/components/schemas/Document'
          description: Query parameters to be included in the Apache Airflow REST
            API call, provided as a JSON object.
        Body:
          allOf:
          - $ref: '#/components/schemas/RestApiRequestBody'
          description: The request body for the Apache Airflow REST API call, provided
            as a JSON object.
      required:
      - Name
      - Path
      - Method
    InvokeRestApiResponse:
      type: object
      properties:
        RestApiStatusCode:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The HTTP status code returned by the Apache Airflow REST API
            call.
        RestApiResponse:
          allOf:
          - $ref: '#/components/schemas/RestApiResponse'
          description: The response data from the Apache Airflow REST API call, provided
            as a JSON object.
    KmsKey:
      type: string
      pattern: ^(((arn:aws(-[a-z]+)?:kms:[a-z]{2}-[a-z]+-\d:\d+:)?key\/)?[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}|(arn:aws(-[a-z]+)?:kms:[a-z]{2}-[a-z]+-\d:\d+:)?alias/.+)$
      minLength: 1
      maxLength: 1224
    LastUpdate:
      type: object
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/UpdateStatus'
          description: The status of the last update on the environment.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/UpdateCreatedAt'
          description: The day and time of the last update on the environment.
        Error:
          allOf:
          - $ref: '#/components/schemas/UpdateError'
          description: The error that was encountered during the last update of the
            environment.
        Source:
          allOf:
          - $ref: '#/components/schemas/UpdateSource'
          description: The source of the last update to the environment. Includes
            internal processes by Amazon MWAA, such as an environment maintenance
            update.
      description: Describes the status of the last update on the environment, and
        any errors that were encountered.
    ListEnvironmentsInput:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Retrieves the next page of the results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of results to retrieve per page. For example,
            `5` environments per page.
    ListEnvironmentsOutput:
      type: object
      properties:
        Environments:
          allOf:
          - $ref: '#/components/schemas/EnvironmentList'
          description: Returns a list of Amazon MWAA environments.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: Retrieves the next page of the results.
      required:
      - Environments
    ListTagsForResourceInput:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/EnvironmentArn'
          description: The Amazon Resource Name (ARN) of the Amazon MWAA environment.
            For example, `arn:aws:airflow:us-east-1:123456789012:environment/MyMWAAEnvironment`.
      required:
      - ResourceArn
    ListTagsForResourceOutput:
      type: object
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The key-value tag pairs associated to your environment. For
            more information, see [Tagging Amazon Web Services resources](https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).
    LoggingConfiguration:
      type: object
      properties:
        DagProcessingLogs:
          allOf:
          - $ref: '#/components/schemas/ModuleLoggingConfiguration'
          description: The Airflow DAG processing logs published to CloudWatch Logs
            and the log level.
        SchedulerLogs:
          allOf:
          - $ref: '#/components/schemas/ModuleLoggingConfiguration'
          description: The Airflow scheduler logs published to CloudWatch Logs and
            the log level.
        WebserverLogs:
          allOf:
          - $ref: '#/components/schemas/ModuleLoggingConfiguration'
          description: The Airflow web server logs published to CloudWatch Logs and
            the log level.
        WorkerLogs:
          allOf:
          - $ref: '#/components/schemas/ModuleLoggingConfiguration'
          description: The Airflow worker logs published to CloudWatch Logs and the
            log level.
        TaskLogs:
          allOf:
          - $ref: '#/components/schemas/ModuleLoggingConfiguration'
          description: The Airflow task logs published to CloudWatch Logs and the
            log level.
      description: Describes the Apache Airflow log types that are published to CloudWatch
        Logs.
    LoggingConfigurationInput:
      type: object
      properties:
        DagProcessingLogs:
          allOf:
          - $ref: '#/components/schemas/ModuleLoggingConfigurationInput'
          description: Publishes Airflow DAG processing logs to CloudWatch Logs.
        SchedulerLogs:
          allOf:
          - $ref: '#/components/schemas/ModuleLoggingConfigurationInput'
          description: Publishes Airflow scheduler logs to CloudWatch Logs.
        WebserverLogs:
          allOf:
          - $ref: '#/components/schemas/ModuleLoggingConfigurationInput'
          description: Publishes Airflow web server logs to CloudWatch Logs.
        WorkerLogs:
          allOf:
          - $ref: '#/components/schemas/ModuleLoggingConfigurationInput'
          description: Publishes Airflow worker logs to CloudWatch Logs.
        TaskLogs:
          allOf:
          - $ref: '#/components/schemas/ModuleLoggingConfigurationInput'
          description: Publishes Airflow task logs to CloudWatch Logs.
      description: Defines the Apache Airflow log types to send to CloudWatch Logs.
    LoggingEnabled:
      type: boolean
    LoggingLevel:
      type: string
      enum:
      - CRITICAL
      - ERROR
      - WARNING
      - INFO
      - DEBUG
    MaxWebservers:
      type: integer
      minimum: 1
    MaxWorkers:
      type: integer
      minimum: 1
    MetricData:
      type: array
      items:
        $ref: '#/components/schemas/MetricDatum'
    MetricDatum:
      type: object
      properties:
        MetricName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: '**Internal only**. The name of the metric.'
        Timestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: '**Internal only**. The time the metric data was received.'
        Dimensions:
          allOf:
          - $ref: '#/components/schemas/Dimensions'
          description: '**Internal only**. The dimensions associated with the metric.'
        Value:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: '**Internal only**. The value for the metric.'
        Unit:
          allOf:
          - $ref: '#/components/schemas/Unit'
          description: '**Internal only**. The unit used to store the metric.'
        StatisticValues:
          allOf:
          - $ref: '#/components/schemas/StatisticSet'
          description: '**Internal only**. The statistical values for the metric.'
      required:
      - MetricName
      - Timestamp
      description: '**Internal only**. Collects Apache Airflow metrics. To learn more
        about the metrics published to Amazon CloudWatch, see [Amazon MWAA performance
        metrics in Amazon CloudWatch](https://docs.aws.amazon.com/mwaa/latest/userguide/cw-metrics.html).'
    MinWebservers:
      type: integer
      minimum: 1
    MinWorkers:
      type: integer
      minimum: 1
    ModuleLoggingConfiguration:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/LoggingEnabled'
          description: Indicates whether the Apache Airflow log type (e.g. `DagProcessingLogs`)
            is enabled.
        LogLevel:
          allOf:
          - $ref: '#/components/schemas/LoggingLevel'
          description: The Apache Airflow log level for the log type (e.g. `DagProcessingLogs`).
        CloudWatchLogGroupArn:
          allOf:
          - $ref: '#/components/schemas/CloudWatchLogGroupArn'
          description: The Amazon Resource Name (ARN) for the CloudWatch Logs group
            where the Apache Airflow log type (e.g. `DagProcessingLogs`) is published.
            For example, `arn:aws:logs:us-east-1:123456789012:log-group:airflow-MyMWAAEnvironment-MwaaEnvironment-DAGProcessing:*`.
      description: Describes the Apache Airflow log details for the log type (e.g.
        `DagProcessingLogs`).
    ModuleLoggingConfigurationInput:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/LoggingEnabled'
          description: Indicates whether to enable the Apache Airflow log type (e.g.
            `DagProcessingLogs`).
        LogLevel:
          allOf:
          - $ref: '#/components/schemas/LoggingLevel'
          description: Defines the Apache Airflow log level (e.g. `INFO`) to send
            to CloudWatch Logs.
      required:
      - Enabled
      - LogLevel
      description: Enables the Apache Airflow log type (e.g. `DagProcessingLogs`)
        and defines the log level to send to CloudWatch Logs (e.g. `INFO`).
    NetworkConfiguration:
      type: object
      properties:
        SubnetIds:
          allOf:
          - $ref: '#/components/schemas/SubnetList'
          description: A list of subnet IDs. For more information, see [About networking
            on Amazon MWAA](https://docs.aws.amazon.com/mwaa/latest/userguide/networking-about.html).
        SecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupList'
          description: A list of security group IDs. For more information, see [Security
            in your VPC on Amazon MWAA](https://docs.aws.amazon.com/mwaa/latest/userguide/vpc-security.html).
      description: Describes the VPC networking components used to secure and enable
        network traffic between the Amazon Web Services resources for your environment.
        For more information, see [About networking on Amazon MWAA](https://docs.aws.amazon.com/mwaa/latest/userguide/networking-about.html).
    NextToken:
      type: string
      maxLength: 2048
    PublishMetricsInput:
      type: object
      properties:
        EnvironmentName:
          allOf:
          - $ref: '#/components/schemas/EnvironmentName'
          description: '**Internal only**. The name of the environment.'
        MetricData:
          allOf:
          - $ref: '#/components/schemas/MetricData'
          description: '**Internal only**. Publishes metrics to Amazon CloudWatch.
            To learn more about the metrics published to Amazon CloudWatch, see [Amazon
            MWAA performance metrics in Amazon CloudWatch](https://docs.aws.amazon.com/mwaa/latest/userguide/cw-metrics.html).'
      required:
      - EnvironmentName
      - MetricData
    PublishMetricsOutput:
      type: object
      properties: {}
    RelativePath:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 1024
    ResourceNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: 'ResourceNotFoundException: The resource is not available.'
    RestApiClientException:
      type: object
      properties:
        RestApiStatusCode:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The HTTP status code returned by the Apache Airflow REST API
            call.
        RestApiResponse:
          allOf:
          - $ref: '#/components/schemas/RestApiResponse'
          description: The error response data from the Apache Airflow REST API call,
            provided as a JSON object.
      description: An exception indicating that a client-side error occurred during
        the Apache Airflow REST API call.
    RestApiMethod:
      type: string
      enum:
      - GET
      - PUT
      - POST
      - PATCH
      - DELETE
    RestApiPath:
      type: string
      minLength: 1
      maxLength: 64
    RestApiRequestBody:
      type: object
      additionalProperties: true
      x-sensitive: true
    RestApiResponse:
      type: object
      additionalProperties: true
      x-sensitive: true
    RestApiServerException:
      type: object
      properties:
        RestApiStatusCode:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The HTTP status code returned by the Apache Airflow REST API
            call.
        RestApiResponse:
          allOf:
          - $ref: '#/components/schemas/RestApiResponse'
          description: The error response data from the Apache Airflow REST API call,
            provided as a JSON object.
      description: An exception indicating that a server-side error occurred during
        the Apache Airflow REST API call.
    S3BucketArn:
      type: string
      pattern: ^arn:aws(-[a-z]+)?:s3:::[a-z0-9.\-]+$
      minLength: 1
      maxLength: 1224
    S3ObjectVersion:
      type: string
      minLength: 1
      maxLength: 1024
    Schedulers:
      type: integer
      maximum: 5
    SecurityGroupId:
      type: string
      pattern: ^sg-[a-zA-Z0-9\-._]+$
      minLength: 1
      maxLength: 1024
    SecurityGroupList:
      type: array
      items:
        $ref: '#/components/schemas/SecurityGroupId'
    StatisticSet:
      type: object
      properties:
        SampleCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: '**Internal only**. The number of samples used for the statistic
            set.'
        Sum:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: '**Internal only**. The sum of values for the sample set.'
        Minimum:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: '**Internal only**. The minimum value of the sample set.'
        Maximum:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: '**Internal only**. The maximum value of the sample set.'
      description: '**Internal only**. Represents a set of statistics that describe
        a specific metric. To learn more about the metrics published to Amazon CloudWatch,
        see [Amazon MWAA performance metrics in Amazon CloudWatch](https://docs.aws.amazon.com/mwaa/latest/userguide/cw-metrics.html).'
    SubnetId:
      type: string
      pattern: ^subnet-[a-zA-Z0-9\-._]+$
      minLength: 1
      maxLength: 1024
    SubnetList:
      type: array
      items:
        $ref: '#/components/schemas/SubnetId'
    TagKey:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TagResourceInput:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/EnvironmentArn'
          description: The Amazon Resource Name (ARN) of the Amazon MWAA environment.
            For example, `arn:aws:airflow:us-east-1:123456789012:environment/MyMWAAEnvironment`.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'The key-value tag pairs you want to associate to your environment.
            For example, `"Environment": "Staging"`. For more information, see [Tagging
            Amazon Web Services resources](https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).'
      required:
      - ResourceArn
      - Tags
    TagResourceOutput:
      type: object
      properties: {}
    TagValue:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 256
    Token:
      type: string
    Unit:
      type: string
      enum:
      - Seconds
      - Microseconds
      - Milliseconds
      - Bytes
      - Kilobytes
      - Megabytes
      - Gigabytes
      - Terabytes
      - Bits
      - Kilobits
      - Megabits
      - Gigabits
      - Terabits
      - Percent
      - Count
      - Bytes/Second
      - Kilobytes/Second
      - Megabytes/Second
      - Gigabytes/Second
      - Terabytes/Second
      - Bits/Second
      - Kilobits/Second
      - Megabits/Second
      - Gigabits/Second
      - Terabits/Second
      - Count/Second
      - None
    UntagResourceInput:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/EnvironmentArn'
          description: The Amazon Resource Name (ARN) of the Amazon MWAA environment.
            For example, `arn:aws:airflow:us-east-1:123456789012:environment/MyMWAAEnvironment`.
        tagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: 'The key-value tag pair you want to remove. For example, `"Environment":
            "Staging"`.'
      required:
      - ResourceArn
      - tagKeys
    UntagResourceOutput:
      type: object
      properties: {}
    UpdateCreatedAt:
      type: string
      format: date-time
    UpdateEnvironmentInput:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/EnvironmentName'
          description: The name of your Amazon MWAA environment. For example, `MyMWAAEnvironment`.
        ExecutionRoleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          description: The Amazon Resource Name (ARN) of the execution role in IAM
            that allows MWAA to access Amazon Web Services resources in your environment.
            For example, `arn:aws:iam::123456789:role/my-execution-role`. For more
            information, see [Amazon MWAA Execution role](https://docs.aws.amazon.com/mwaa/latest/userguide/mwaa-create-role.html).
        AirflowVersion:
          allOf:
          - $ref: '#/components/schemas/AirflowVersion'
          description: 'The Apache Airflow version for your environment. To upgrade
            your environment, specify a newer version of Apache Airflow supported
            by Amazon MWAA.


            Before you upgrade an environment, make sure your requirements, DAGs,
            plugins, and other resources used in your workflows are compatible with
            the new Apache Airflow version. For more information about updating your
            resources, see [Upgrading an Amazon MWAA environment](https://docs.aws.amazon.com/mwaa/latest/userguide/upgrading-environment.html).


            Valid values: `1.10.12`, `2.0.2`, `2.2.2`, `2.4.3`, `2.5.1`, `2.6.3`,
            `2.7.2`, `2.8.1`, `2.9.2`, `2.10.1`, and `2.10.3`.'
        SourceBucketArn:
          allOf:
          - $ref: '#/components/schemas/S3BucketArn'
          description: The Amazon Resource Name (ARN) of the Amazon S3 bucket where
            your DAG code and supporting files are stored. For example, `arn:aws:s3:::my-airflow-bucket-unique-name`.
            For more information, see [Create an Amazon S3 bucket for Amazon MWAA](https://docs.aws.amazon.com/mwaa/latest/userguide/mwaa-s3-bucket.html).
        DagS3Path:
          allOf:
          - $ref: '#/components/schemas/RelativePath'
          description: The relative path to the DAGs folder on your Amazon S3 bucket.
            For example, `dags`. For more information, see [Adding or updating DAGs](https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-folder.html).
        PluginsS3Path:
          allOf:
          - $ref: '#/components/schemas/RelativePath'
          description: The relative path to the `plugins.zip` file on your Amazon
            S3 bucket. For example, `plugins.zip`. If specified, then the plugins.zip
            version is required. For more information, see [Installing custom plugins](https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-import-plugins.html).
        PluginsS3ObjectVersion:
          allOf:
          - $ref: '#/components/schemas/S3ObjectVersion'
          description: The version of the plugins.zip file on your Amazon S3 bucket.
            You must specify a version each time a `plugins.zip` file is updated.
            For more information, see [How S3 Versioning works](https://docs.aws.amazon.com/AmazonS3/latest/userguide/versioning-workflows.html).
        RequirementsS3Path:
          allOf:
          - $ref: '#/components/schemas/RelativePath'
          description: The relative path to the `requirements.txt` file on your Amazon
            S3 bucket. For example, `requirements.txt`. If specified, then a file
            version is required. For more information, see [Installing Python dependencies](https://docs.aws.amazon.com/mwaa/latest/userguide/working-dags-dependencies.html).
        RequirementsS3ObjectVersion:
          allOf:
          - $ref: '#/components/schemas/S3ObjectVersion'
          description: The version of the requirements.txt file on your Amazon S3
            bucket. You must specify a version each time a `requirements.txt` file
            is updated. For more information, see [How S3 Versioning works](https://docs.aws.amazon.com/AmazonS3/latest/userguide/versioning-workflows.html).
        StartupScriptS3Path:
          allOf:
          - $ref: '#/components/schemas/RelativePath'
          description: 'The relative path to the startup shell script in your Amazon
            S3 bucket. For example, `s3://mwaa-environment/startup.sh`.


            Amazon MWAA runs the script as your environment starts, and before running
            the Apache Airflow process. You can use this script to install dependencies,
            modify Apache Airflow configuration options, and set environment variables.
            For more information, see [Using a startup script](https://docs.aws.amazon.com/mwaa/latest/userguide/using-startup-script.html).'
        StartupScriptS3ObjectVersion:
          allOf:
          - $ref: '#/components/schemas/S3ObjectVersion'
          description: 'The version of the startup shell script in your Amazon S3
            bucket. You must specify the [version ID](https://docs.aws.amazon.com/AmazonS3/latest/userguide/versioning-workflows.html)
            that Amazon S3 assigns to the file every time you update the script.


            Version IDs are Unicode, UTF-8 encoded, URL-ready, opaque strings that
            are no more than 1,024 bytes long. The following is an example:


            `3sL4kqtJlcpXroDTDmJ+rmSpXd3dIbrHY+MTRCxf3vjVBH40Nr8X8gdRQBpUMLUo`


            For more information, see [Using a startup script](https://docs.aws.amazon.com/mwaa/latest/userguide/using-startup-script.html).'
        AirflowConfigurationOptions:
          allOf:
          - $ref: '#/components/schemas/AirflowConfigurationOptions'
          description: A list of key-value pairs containing the Apache Airflow configuration
            options you want to attach to your environment. For more information,
            see [Apache Airflow configuration options](https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-env-variables.html).
        EnvironmentClass:
          allOf:
          - $ref: '#/components/schemas/EnvironmentClass'
          description: 'The environment class type. Valid values: `mw1.micro`, `mw1.small`,
            `mw1.medium`, `mw1.large`, `mw1.xlarge`, and `mw1.2xlarge`. For more information,
            see [Amazon MWAA environment class](https://docs.aws.amazon.com/mwaa/latest/userguide/environment-class.html).'
        MaxWorkers:
          allOf:
          - $ref: '#/components/schemas/MaxWorkers'
          description: The maximum number of workers that you want to run in your
            environment. MWAA scales the number of Apache Airflow workers up to the
            number you specify in the `MaxWorkers` field. For example, `20`. When
            there are no more tasks running, and no more in the queue, MWAA disposes
            of the extra workers leaving the one worker that is included with your
            environment, or the number you specify in `MinWorkers`.
        NetworkConfiguration:
          allOf:
          - $ref: '#/components/schemas/UpdateNetworkConfigurationInput'
          description: The VPC networking components used to secure and enable network
            traffic between the Amazon Web Services resources for your environment.
            For more information, see [About networking on Amazon MWAA](https://docs.aws.amazon.com/mwaa/latest/userguide/networking-about.html).
        LoggingConfiguration:
          allOf:
          - $ref: '#/components/schemas/LoggingConfigurationInput'
          description: The Apache Airflow log types to send to CloudWatch Logs.
        WeeklyMaintenanceWindowStart:
          allOf:
          - $ref: '#/components/schemas/WeeklyMaintenanceWindowStart'
          description: 'The day and time of the week in Coordinated Universal Time
            (UTC) 24-hour standard time to start weekly maintenance updates of your
            environment in the following format: `DAY:HH:MM`. For example: `TUE:03:30`.
            You can specify a start time in 30 minute increments only.'
        WebserverAccessMode:
          allOf:
          - $ref: '#/components/schemas/WebserverAccessMode'
          description: The Apache Airflow _Web server_ access mode. For more information,
            see [Apache Airflow access modes](https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-networking.html).
        MinWorkers:
          allOf:
          - $ref: '#/components/schemas/MinWorkers'
          description: The minimum number of workers that you want to run in your
            environment. MWAA scales the number of Apache Airflow workers up to the
            number you specify in the `MaxWorkers` field. When there are no more tasks
            running, and no more in the queue, MWAA disposes of the extra workers
            leaving the worker count you specify in the `MinWorkers` field. For example,
            `2`.
        Schedulers:
          allOf:
          - $ref: '#/components/schemas/Schedulers'
          description: The number of Apache Airflow schedulers to run in your Amazon
            MWAA environment.
        MinWebservers:
          allOf:
          - $ref: '#/components/schemas/MinWebservers'
          description: 'The minimum number of web servers that you want to run in
            your environment. Amazon MWAA scales the number of Apache Airflow web
            servers up to the number you specify for `MaxWebservers` when you interact
            with your Apache Airflow environment using Apache Airflow REST API, or
            the Apache Airflow CLI. As the transaction-per-second rate, and the network
            load, decrease, Amazon MWAA disposes of the additional web servers, and
            scales down to the number set in `MinxWebserers`.


            Valid values: For environments larger than mw1.micro, accepts values from
            `2` to `5`. Defaults to `2` for all environment sizes except mw1.micro,
            which defaults to `1`.'
        MaxWebservers:
          allOf:
          - $ref: '#/components/schemas/MaxWebservers'
          description: 'The maximum number of web servers that you want to run in
            your environment. Amazon MWAA scales the number of Apache Airflow web
            servers up to the number you specify for `MaxWebservers` when you interact
            with your Apache Airflow environment using Apache Airflow REST API, or
            the Apache Airflow CLI. For example, in scenarios where your workload
            requires network calls to the Apache Airflow REST API with a high transaction-per-second
            (TPS) rate, Amazon MWAA will increase the number of web servers up to
            the number set in `MaxWebserers`. As TPS rates decrease Amazon MWAA disposes
            of the additional web servers, and scales down to the number set in `MinxWebserers`.


            Valid values: For environments larger than mw1.micro, accepts values from
            `2` to `5`. Defaults to `2` for all environment sizes except mw1.micro,
            which defaults to `1`.'
      required:
      - Name
    UpdateEnvironmentOutput:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/EnvironmentArn'
          description: The Amazon Resource Name (ARN) of the Amazon MWAA environment.
            For example, `arn:aws:airflow:us-east-1:123456789012:environment/MyMWAAEnvironment`.
    UpdateError:
      type: object
      properties:
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/ErrorCode'
          description: The error code that corresponds to the error with the last
            update.
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: The error message that corresponds to the error code.
      description: Describes the error(s) encountered with the last update of the
        environment.
    UpdateNetworkConfigurationInput:
      type: object
      properties:
        SecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupList'
          description: A list of security group IDs. A security group must be attached
            to the same VPC as the subnets. For more information, see [Security in
            your VPC on Amazon MWAA](https://docs.aws.amazon.com/mwaa/latest/userguide/vpc-security.html).
      required:
      - SecurityGroupIds
      description: Defines the VPC networking components used to secure and enable
        network traffic between the Amazon Web Services resources for your environment.
        For more information, see [About networking on Amazon MWAA](https://docs.aws.amazon.com/mwaa/latest/userguide/networking-about.html).
    UpdateSource:
      type: string
      pattern: ^.+$
      minLength: 1
      maxLength: 256
    UpdateStatus:
      type: string
      enum:
      - SUCCESS
      - PENDING
      - FAILED
    ValidationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: 'ValidationException: The provided input is not valid.'
    VpcEndpointServiceName:
      type: string
      pattern: ^([a-z.-]+)?com\.amazonaws\.vpce\.[a-z0-9\-]+\.[a-zA-Z_0-9+=,.@\-_/]+$
      minLength: 1
      maxLength: 1224
    WebserverAccessMode:
      type: string
      enum:
      - PRIVATE_ONLY
      - PUBLIC_ONLY
    WebserverUrl:
      type: string
      pattern: ^https://.+$
      minLength: 1
      maxLength: 256
    WeeklyMaintenanceWindowStart:
      type: string
      pattern: (MON|TUE|WED|THU|FRI|SAT|SUN):([01]\d|2[0-3]):(00|30)
      minLength: 1
      maxLength: 9
