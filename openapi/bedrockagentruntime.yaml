openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: bedrock_agent_runtime
  x-aws-serviceName: bedrockagentruntime
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2023-07-26'
  title: Agents for Amazon Bedrock Runtime
  description: |-
    Contains APIs related to model invocation and querying of knowledge bases.
servers:
- description: The Agents for Amazon Bedrock Runtime regional endpoint
  url: https://bedrock-agent-runtime.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /sessions/{sessionIdentifier}/invocations/:
    put:
      operationId: CreateInvocation
      description: |-
        Creates a new invocation within a session. An invocation groups the related invocation steps that store the content from a conversation. For more information about sessions, see [Store and retrieve conversation history and context with Amazon Bedrock sessions](https://docs.aws.amazon.com/bedrock/latest/userguide/sessions.html).

        Related APIs

          * [ListInvocations](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_ListInvocations.html)

          * [ListSessions](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_ListSessions.html)

          * [GetSession](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_GetSession.html)
      parameters:
      - name: sessionIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SessionIdentifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                invocationId:
                  $ref: '#/components/schemas/Uuid'
                description:
                  $ref: '#/components/schemas/InvocationDescription'
      responses:
        '201': {}
        '403':
          description: |-
            The request is denied because of missing access permissions. Check your permissions and retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict performing an operation. Resolve the conflict and retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    post:
      operationId: ListInvocations
      description: |-
        Lists all invocations associated with a specific session. For more information about sessions, see [Store and retrieve conversation history and context with Amazon Bedrock sessions](https://docs.aws.amazon.com/bedrock/latest/userguide/sessions.html).
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: sessionIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SessionIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions. Check your permissions and retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /sessions/:
    put:
      operationId: CreateSession
      description: |-
        Creates a session to temporarily store conversations for generative AI (GenAI) applications built with open-source frameworks such as LangGraph and LlamaIndex. Sessions enable you to save the state of conversations at checkpoints, with the added security and infrastructure of Amazon Web Services. For more information, see [Store and retrieve conversation history and context with Amazon Bedrock sessions](https://docs.aws.amazon.com/bedrock/latest/userguide/sessions.html).

        By default, Amazon Bedrock uses Amazon Web Services-managed keys for session encryption, including session metadata, or you can use your own KMS key. For more information, see [Amazon Bedrock session encryption](https://docs.aws.amazon.com/bedrock/latest/userguide/session-encryption.html).

        You use a session to store state and conversation history for generative AI applications built with open-source frameworks. For Amazon Bedrock Agents, the service automatically manages conversation context and associates them with the agent-specific sessionId you specify in the [InvokeAgent](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html) API operation.

        Related APIs:

          * [ListSessions](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_ListSessions.html)

          * [GetSession](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_GetSession.html)

          * [EndSession](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_EndSession.html)

          * [DeleteSession](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_DeleteSession.html)
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sessionMetadata:
                  $ref: '#/components/schemas/SessionMetadataMap'
                encryptionKeyArn:
                  $ref: '#/components/schemas/KmsKeyArn'
                tags:
                  $ref: '#/components/schemas/TagsMap'
      responses:
        '201': {}
        '403':
          description: |-
            The request is denied because of missing access permissions. Check your permissions and retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict performing an operation. Resolve the conflict and retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    post:
      operationId: ListSessions
      description: |-
        Lists all sessions in your Amazon Web Services account. For more information about sessions, see [Store and retrieve conversation history and context with Amazon Bedrock sessions](https://docs.aws.amazon.com/bedrock/latest/userguide/sessions.html).
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions. Check your permissions and retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /agents/{agentId}/agentAliases/{agentAliasId}/memories:
    delete:
      operationId: DeleteAgentMemory
      description: |-
        Deletes memory from the specified memory identifier.
      parameters:
      - name: agentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AgentId'
      - name: agentAliasId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AgentAliasId'
      - name: memoryId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MemoryId'
      - name: sessionId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SessionId'
      responses:
        '202': {}
        '403':
          description: |-
            The request is denied because of missing access permissions. Check your permissions and retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '502':
          description: |-
            There was an issue with a dependency due to a server issue. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '409':
          description: |-
            There was a conflict performing an operation. Resolve the conflict and retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '424':
          description: |-
            There was an issue with a dependency. Check the resource configurations and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependencyFailedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: GetAgentMemory
      description: |-
        Gets the sessions stored in the memory of the agent.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxItems
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: agentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AgentId'
      - name: agentAliasId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AgentAliasId'
      - name: memoryType
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/MemoryType'
      - name: memoryId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/MemoryId'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions. Check your permissions and retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '502':
          description: |-
            There was an issue with a dependency due to a server issue. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '409':
          description: |-
            There was a conflict performing an operation. Resolve the conflict and retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '424':
          description: |-
            There was an issue with a dependency. Check the resource configurations and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependencyFailedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /sessions/{sessionIdentifier}/:
    delete:
      operationId: DeleteSession
      description: |-
        Deletes a session that you ended. You can't delete a session with an `ACTIVE` status. To delete an active session, you must first end it with the [EndSession](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_EndSession.html) API operation. For more information about sessions, see [Store and retrieve conversation history and context with Amazon Bedrock sessions](https://docs.aws.amazon.com/bedrock/latest/userguide/sessions.html).
      parameters:
      - name: sessionIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SessionIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions. Check your permissions and retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict performing an operation. Resolve the conflict and retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetSession
      description: |-
        Retrieves details about a specific session. For more information about sessions, see [Store and retrieve conversation history and context with Amazon Bedrock sessions](https://docs.aws.amazon.com/bedrock/latest/userguide/sessions.html).
      parameters:
      - name: sessionIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SessionIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions. Check your permissions and retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: UpdateSession
      description: |-
        Updates the metadata or encryption settings of a session. For more information about sessions, see [Store and retrieve conversation history and context with Amazon Bedrock sessions](https://docs.aws.amazon.com/bedrock/latest/userguide/sessions.html).
      parameters:
      - name: sessionIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SessionIdentifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sessionMetadata:
                  $ref: '#/components/schemas/SessionMetadataMap'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions. Check your permissions and retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict performing an operation. Resolve the conflict and retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /sessions/{sessionIdentifier}:
    patch:
      operationId: EndSession
      description: |-
        Ends the session. After you end a session, you can still access its content but you can’t add to it. To delete the session and it's content, you use the DeleteSession API operation. For more information about sessions, see [Store and retrieve conversation history and context with Amazon Bedrock sessions](https://docs.aws.amazon.com/bedrock/latest/userguide/sessions.html).
      parameters:
      - name: sessionIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SessionIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions. Check your permissions and retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict performing an operation. Resolve the conflict and retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /generateQuery:
    post:
      operationId: GenerateQuery
      description: |-
        Generates an SQL query from a natural language query. For more information, see [Generate a query for structured data](https://docs.aws.amazon.com/bedrock/latest/userguide/knowledge-base-generate-query.html) in the Amazon Bedrock User Guide.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                queryGenerationInput:
                  $ref: '#/components/schemas/QueryGenerationInput'
                transformationConfiguration:
                  $ref: '#/components/schemas/TransformationConfiguration'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions. Check your permissions and retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '502':
          description: |-
            There was an issue with a dependency due to a server issue. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '409':
          description: |-
            There was a conflict performing an operation. Resolve the conflict and retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '424':
          description: |-
            There was an issue with a dependency. Check the resource configurations and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependencyFailedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /sessions/{sessionIdentifier}/invocationSteps/{invocationStepId}:
    post:
      operationId: GetInvocationStep
      description: |-
        Retrieves the details of a specific invocation step within an invocation in a session. For more information about sessions, see [Store and retrieve conversation history and context with Amazon Bedrock sessions](https://docs.aws.amazon.com/bedrock/latest/userguide/sessions.html).
      parameters:
      - name: invocationStepId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
      - name: sessionIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SessionIdentifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                invocationIdentifier:
                  $ref: '#/components/schemas/InvocationIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions. Check your permissions and retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /agents/{agentId}/agentAliases/{agentAliasId}/sessions/{sessionId}/text:
    post:
      operationId: InvokeAgent
      description: |-
        Sends a prompt for the agent to process and respond to. Note the following fields for the request:

          * To continue the same conversation with an agent, use the same `sessionId` value in the request.

          * To activate trace enablement, turn `enableTrace` to `true`. Trace enablement helps you follow the agent's reasoning process that led it to the information it processed, the actions it took, and the final result it yielded. For more information, see [Trace enablement](https://docs.aws.amazon.com/bedrock/latest/userguide/agents-test.html#trace-events).

          * End a conversation by setting `endSession` to `true`.

          * In the `sessionState` object, you can include attributes for the session or prompt or, if you configured an action group to return control, results from invocation of the action group.

        The response contains both **chunk** and **trace** attributes.

        The final response is returned in the `bytes` field of the `chunk` object. The `InvokeAgent` returns one chunk for the entire interaction.

          * The `attribution` object contains citations for parts of the response.

          * If you set `enableTrace` to `true` in the request, you can trace the agent's steps and reasoning process that led it to the response.

          * If the action predicted was configured to return control, the response returns parameters for the action, elicited from the user, in the `returnControl` field.

          * Errors are also surfaced in the response.
      parameters:
      - name: agentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AgentId'
      - name: agentAliasId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AgentAliasId'
      - name: sessionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SessionId'
      - name: x-amz-source-arn
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AWSResourceARN'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sessionState:
                  $ref: '#/components/schemas/SessionState'
                endSession:
                  $ref: '#/components/schemas/Boolean'
                enableTrace:
                  $ref: '#/components/schemas/Boolean'
                inputText:
                  $ref: '#/components/schemas/InputText'
                memoryId:
                  $ref: '#/components/schemas/MemoryId'
                bedrockModelConfigurations:
                  $ref: '#/components/schemas/BedrockModelConfigurations'
                streamingConfigurations:
                  $ref: '#/components/schemas/StreamingConfigurations'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions. Check your permissions and retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '502':
          description: |-
            There was an issue with a dependency due to a server issue. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '409':
          description: |-
            There was a conflict performing an operation. Resolve the conflict and retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '424':
          description: |-
            The model specified in the request is not ready to serve inference requests. The AWS SDK will automatically retry the operation up to 5 times. For information about configuring automatic retries, see [Retry behavior](https://docs.aws.amazon.com/sdkref/latest/guide/feature-retry-behavior.html) in the _AWS SDKs and Tools_ reference guide.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelNotReadyException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /flows/{flowIdentifier}/aliases/{flowAliasIdentifier}:
    post:
      operationId: InvokeFlow
      description: |-
        Invokes an alias of a flow to run the inputs that you specify and return the output of each node as a stream. If there's an error, the error is returned. For more information, see [Test a flow in Amazon Bedrock](https://docs.aws.amazon.com/bedrock/latest/userguide/flows-test.html) in the [Amazon Bedrock User Guide](https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html).

        The CLI doesn't support streaming operations in Amazon Bedrock, including `InvokeFlow`.
      parameters:
      - name: flowIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FlowIdentifier'
      - name: flowAliasIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FlowAliasIdentifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                inputs:
                  $ref: '#/components/schemas/FlowInputs'
                enableTrace:
                  $ref: '#/components/schemas/Boolean'
                modelPerformanceConfiguration:
                  $ref: '#/components/schemas/ModelPerformanceConfiguration'
                executionId:
                  $ref: '#/components/schemas/FlowExecutionId'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions. Check your permissions and retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '502':
          description: |-
            There was an issue with a dependency due to a server issue. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '409':
          description: |-
            There was a conflict performing an operation. Resolve the conflict and retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '424':
          description: |-
            There was an issue with a dependency. Check the resource configurations and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependencyFailedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /agents/{sessionId}:
    post:
      operationId: InvokeInlineAgent
      description: |-
        Invokes an inline Amazon Bedrock agent using the configurations you provide with the request.

          * Specify the following fields for security purposes.

            * (Optional) `customerEncryptionKeyArn` – The Amazon Resource Name (ARN) of a KMS key to encrypt the creation of the agent.

            * (Optional) `idleSessionTTLinSeconds` – Specify the number of seconds for which the agent should maintain session information. After this time expires, the subsequent `InvokeInlineAgent` request begins a new session.

          * To override the default prompt behavior for agent orchestration and to use advanced prompts, include a `promptOverrideConfiguration` object. For more information, see [Advanced prompts](https://docs.aws.amazon.com/bedrock/latest/userguide/advanced-prompts.html).

          * The agent instructions will not be honored if your agent has only one knowledge base, uses default prompts, has no action group, and user input is disabled.
      parameters:
      - name: sessionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SessionId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customerEncryptionKeyArn:
                  $ref: '#/components/schemas/KmsKeyArn'
                foundationModel:
                  $ref: '#/components/schemas/ModelIdentifier'
                instruction:
                  $ref: '#/components/schemas/Instruction'
                idleSessionTTLInSeconds:
                  $ref: '#/components/schemas/SessionTTL'
                actionGroups:
                  $ref: '#/components/schemas/AgentActionGroups'
                knowledgeBases:
                  $ref: '#/components/schemas/KnowledgeBases'
                guardrailConfiguration:
                  $ref: '#/components/schemas/GuardrailConfigurationWithArn'
                promptOverrideConfiguration:
                  $ref: '#/components/schemas/PromptOverrideConfiguration'
                agentCollaboration:
                  $ref: '#/components/schemas/AgentCollaboration'
                collaboratorConfigurations:
                  $ref: '#/components/schemas/CollaboratorConfigurations'
                endSession:
                  $ref: '#/components/schemas/Boolean'
                enableTrace:
                  $ref: '#/components/schemas/Boolean'
                inputText:
                  $ref: '#/components/schemas/InputText'
                streamingConfigurations:
                  $ref: '#/components/schemas/StreamingConfigurations'
                inlineSessionState:
                  $ref: '#/components/schemas/InlineSessionState'
                collaborators:
                  $ref: '#/components/schemas/Collaborators'
                bedrockModelConfigurations:
                  $ref: '#/components/schemas/InlineBedrockModelConfigurations'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions. Check your permissions and retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '502':
          description: |-
            There was an issue with a dependency due to a server issue. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '409':
          description: |-
            There was a conflict performing an operation. Resolve the conflict and retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '424':
          description: |-
            There was an issue with a dependency. Check the resource configurations and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependencyFailedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /sessions/{sessionIdentifier}/invocationSteps/:
    post:
      operationId: ListInvocationSteps
      description: |-
        Lists all invocation steps associated with a session and optionally, an invocation within the session. For more information about sessions, see [Store and retrieve conversation history and context with Amazon Bedrock sessions](https://docs.aws.amazon.com/bedrock/latest/userguide/sessions.html).
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: sessionIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SessionIdentifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                invocationIdentifier:
                  $ref: '#/components/schemas/InvocationIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions. Check your permissions and retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: PutInvocationStep
      description: |-
        Add an invocation step to an invocation in a session. An invocation step stores fine-grained state checkpoints, including text and images, for each interaction. For more information about sessions, see [Store and retrieve conversation history and context with Amazon Bedrock sessions](https://docs.aws.amazon.com/bedrock/latest/userguide/sessions.html).

        Related APIs:

          * [GetInvocationStep](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_GetInvocationStep.html)

          * [ListInvocationSteps](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_ListInvocationSteps.html)

          * [ListInvocations](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_ListInvocations.html)

          * [ListSessions](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_ListInvocations.html)
      parameters:
      - name: sessionIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SessionIdentifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                invocationIdentifier:
                  $ref: '#/components/schemas/InvocationIdentifier'
                invocationStepTime:
                  $ref: '#/components/schemas/DateTimestamp'
                payload:
                  $ref: '#/components/schemas/InvocationStepPayload'
                invocationStepId:
                  $ref: '#/components/schemas/Uuid'
      responses:
        '201': {}
        '403':
          description: |-
            The request is denied because of missing access permissions. Check your permissions and retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict performing an operation. Resolve the conflict and retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /tags/{resourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        List all the tags for the resource you specify.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TaggableResourcesArn'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions. Check your permissions and retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: TagResource
      description: |-
        Associate tags with a resource. For more information, see [Tagging resources](https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html) in the Amazon Bedrock User Guide.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TaggableResourcesArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/TagsMap'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions. Check your permissions and retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    delete:
      operationId: UntagResource
      description: |-
        Remove tags from a resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TaggableResourcesArn'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeyList'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions. Check your permissions and retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /optimize-prompt:
    post:
      operationId: OptimizePrompt
      description: |-
        Optimizes a prompt for the task that you specify. For more information, see [Optimize a prompt](https://docs.aws.amazon.com/bedrock/latest/userguide/prompt-management-optimize.html) in the [Amazon Bedrock User Guide](https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                input:
                  $ref: '#/components/schemas/InputPrompt'
                targetModelId:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions. Check your permissions and retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '502':
          description: |-
            There was an issue with a dependency due to a server issue. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '424':
          description: |-
            There was an issue with a dependency. Check the resource configurations and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependencyFailedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /rerank:
    post:
      operationId: Rerank
      description: |-
        Reranks the relevance of sources based on queries. For more information, see [Improve the relevance of query responses with a reranker model](https://docs.aws.amazon.com/bedrock/latest/userguide/rerank.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                queries:
                  $ref: '#/components/schemas/RerankQueriesList'
                sources:
                  $ref: '#/components/schemas/RerankSourcesList'
                rerankingConfiguration:
                  $ref: '#/components/schemas/RerankingConfiguration'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions. Check your permissions and retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '502':
          description: |-
            There was an issue with a dependency due to a server issue. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '409':
          description: |-
            There was a conflict performing an operation. Resolve the conflict and retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '424':
          description: |-
            There was an issue with a dependency. Check the resource configurations and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependencyFailedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /knowledgebases/{knowledgeBaseId}/retrieve:
    post:
      operationId: Retrieve
      description: |-
        Queries a knowledge base and retrieves information from it.
      parameters:
      - name: knowledgeBaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/KnowledgeBaseId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                retrievalQuery:
                  $ref: '#/components/schemas/KnowledgeBaseQuery'
                retrievalConfiguration:
                  $ref: '#/components/schemas/KnowledgeBaseRetrievalConfiguration'
                guardrailConfiguration:
                  $ref: '#/components/schemas/GuardrailConfiguration'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions. Check your permissions and retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '502':
          description: |-
            There was an issue with a dependency due to a server issue. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '409':
          description: |-
            There was a conflict performing an operation. Resolve the conflict and retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '424':
          description: |-
            There was an issue with a dependency. Check the resource configurations and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependencyFailedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /retrieveAndGenerate:
    post:
      operationId: RetrieveAndGenerate
      description: |-
        Queries a knowledge base and generates responses based on the retrieved results and using the specified foundation model or [inference profile](https://docs.aws.amazon.com/bedrock/latest/userguide/cross-region-inference.html). The response only cites sources that are relevant to the query.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sessionId:
                  $ref: '#/components/schemas/SessionId'
                input:
                  $ref: '#/components/schemas/RetrieveAndGenerateInput'
                retrieveAndGenerateConfiguration:
                  $ref: '#/components/schemas/RetrieveAndGenerateConfiguration'
                sessionConfiguration:
                  $ref: '#/components/schemas/RetrieveAndGenerateSessionConfiguration'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions. Check your permissions and retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '502':
          description: |-
            There was an issue with a dependency due to a server issue. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '409':
          description: |-
            There was a conflict performing an operation. Resolve the conflict and retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '424':
          description: |-
            There was an issue with a dependency. Check the resource configurations and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependencyFailedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /retrieveAndGenerateStream:
    post:
      operationId: RetrieveAndGenerateStream
      description: |-
        Queries a knowledge base and generates responses based on the retrieved results, with output in streaming format.

        The CLI doesn't support streaming operations in Amazon Bedrock, including `InvokeModelWithResponseStream`.

        This operation requires permission for the ` bedrock:RetrieveAndGenerate` action.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sessionId:
                  $ref: '#/components/schemas/SessionId'
                input:
                  $ref: '#/components/schemas/RetrieveAndGenerateInput'
                retrieveAndGenerateConfiguration:
                  $ref: '#/components/schemas/RetrieveAndGenerateConfiguration'
                sessionConfiguration:
                  $ref: '#/components/schemas/RetrieveAndGenerateSessionConfiguration'
      responses:
        '200': {}
        '403':
          description: |-
            The request is denied because of missing access permissions. Check your permissions and retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '502':
          description: |-
            There was an issue with a dependency due to a server issue. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayException'
        '409':
          description: |-
            There was a conflict performing an operation. Resolve the conflict and retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '424':
          description: |-
            There was an issue with a dependency. Check the resource configurations and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependencyFailedException'
        '500':
          description: |-
            An internal server error occurred. Retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            Input validation failed. Check your request parameters and retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            The number of requests exceeds the limit. Resubmit your request later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
components:
  schemas:
    APISchema:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/S3Identifier'
        description: |-
          Contains details about the S3 object containing the OpenAPI schema for the action group.
      - allOf:
        - $ref: '#/components/schemas/Payload'
        description: |-
          The JSON or YAML-formatted payload defining the OpenAPI schema for the action group.
      description: |-
        Contains details about the OpenAPI schema for the action group. For more information, see [Action group OpenAPI schemas](https://docs.aws.amazon.com/bedrock/latest/userguide/agents-api-schema.html). You can either include the schema directly in the payload field or you can upload it to an S3 bucket and specify the S3 bucket location in the s3 field.
    AWSResourceARN:
      type: string
      pattern: ^arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:agent/[0-9a-zA-Z]{10}$
      maxLength: 2048
    AccessDeniedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/NonBlankString'
      description: The request is denied because of missing access permissions. Check
        your permissions and retry your request.
    ActionGroupExecutor:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/LambdaResourceArn'
        description: |-
          The Amazon Resource Name (ARN) of the Lambda function containing the business logic that is carried out upon invoking the action.
      - allOf:
        - $ref: '#/components/schemas/CustomControlMethod'
        description: |-
          To return the action group invocation results directly in the `InvokeInlineAgent` response, specify `RETURN_CONTROL`.
      description: |-
        Contains details about the Lambda function containing the business logic that is carried out upon invoking the action or the custom control method for handling the information elicited from the user.
    ActionGroupInvocationInput:
      type: object
      properties:
        actionGroupName:
          allOf:
          - $ref: '#/components/schemas/ActionGroupName'
          description: The name of the action group.
        verb:
          allOf:
          - $ref: '#/components/schemas/Verb'
          description: The API method being used, based off the action group.
        apiPath:
          allOf:
          - $ref: '#/components/schemas/ApiPath'
          description: The path to the API to call, based off the action group.
        parameters:
          allOf:
          - $ref: '#/components/schemas/Parameters'
          description: The parameters in the Lambda input event.
        requestBody:
          allOf:
          - $ref: '#/components/schemas/RequestBody'
          description: The parameters in the request body for the Lambda input event.
        function:
          allOf:
          - $ref: '#/components/schemas/Function'
          description: The function in the action group to call.
        executionType:
          allOf:
          - $ref: '#/components/schemas/ExecutionType'
          description: How fulfillment of the action is handled. For more information,
            see [Handling fulfillment of the action](https://docs.aws.amazon.com/bedrock/latest/userguide/action-handle.html).
        invocationId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier of the invocation. Only returned if the
            `executionType` is `RETURN_CONTROL`.
      description: Contains information about the action group being invoked. For
        more information about the possible structures, see the InvocationInput tab
        in [OrchestrationTrace](https://docs.aws.amazon.com/bedrock/latest/userguide/trace-orchestration.html)
        in the [Amazon Bedrock User Guide](https://docs.aws.amazon.com/bedrock/latest/userguide/what-is-service.html).
    ActionGroupInvocationOutput:
      type: object
      properties:
        text:
          allOf:
          - $ref: '#/components/schemas/ActionGroupOutputString'
          description: The JSON-formatted string returned by the API invoked by the
            action group.
      description: Contains the JSON-formatted string returned by the API invoked
        by the action group.
    ActionGroupName:
      type: string
    ActionGroupOutputString:
      type: string
    ActionGroupSignature:
      type: string
      enum:
      - AMAZON.UserInput
      - AMAZON.CodeInterpreter
      - ANTHROPIC.Computer
      - ANTHROPIC.Bash
      - ANTHROPIC.TextEditor
    ActionGroupSignatureParams:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    ActionInvocationType:
      type: string
      enum:
      - RESULT
      - USER_CONFIRMATION
      - USER_CONFIRMATION_AND_RESULT
    AdditionalModelRequestFields:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/AdditionalModelRequestFieldsValue'
    AdditionalModelRequestFieldsKey:
      type: string
      minLength: 1
      maxLength: 100
    AdditionalModelRequestFieldsValue:
      type: object
      additionalProperties: true
    AgentActionGroup:
      type: object
      properties:
        actionGroupName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the action group.
        description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: A description of the action group.
        parentActionGroupSignature:
          allOf:
          - $ref: '#/components/schemas/ActionGroupSignature'
          description: "Specify a built-in or computer use action for this action\
            \ group. If you specify a value, you must leave the `description`, `apiSchema`,\
            \ and `actionGroupExecutor` fields empty for this action group.\n\n  *\
            \ To allow your agent to request the user for additional information when\
            \ trying to complete a task, set this field to `AMAZON.UserInput`. \n\n\
            \  * To allow your agent to generate, run, and troubleshoot code when\
            \ trying to complete a task, set this field to `AMAZON.CodeInterpreter`.\n\
            \n  * To allow your agent to use an Anthropic computer use tool, specify\
            \ one of the following values. \n\nComputer use is a new Anthropic Claude\
            \ model capability (in beta) available with Anthropic Claude 3.7 Sonnet\
            \ and Claude 3.5 Sonnet v2 only. When operating computer use functionality,\
            \ we recommend taking additional security precautions, such as executing\
            \ computer actions in virtual environments with restricted data access\
            \ and limited internet connectivity. For more information, see [Configure\
            \ an Amazon Bedrock Agent to complete tasks with computer use tools](https://docs.aws.amazon.com/bedrock/latest/userguide/agent-computer-use.html).\n\
            \n    * `ANTHROPIC.Computer` \\- Gives the agent permission to use the\
            \ mouse and keyboard and take screenshots.\n\n    * `ANTHROPIC.TextEditor`\
            \ \\- Gives the agent permission to view, create and edit files.\n\n \
            \   * `ANTHROPIC.Bash` \\- Gives the agent permission to run commands\
            \ in a bash shell."
        actionGroupExecutor:
          allOf:
          - $ref: '#/components/schemas/ActionGroupExecutor'
          description: The Amazon Resource Name (ARN) of the Lambda function containing
            the business logic that is carried out upon invoking the action or the
            custom control method for handling the information elicited from the user.
        apiSchema:
          allOf:
          - $ref: '#/components/schemas/APISchema'
          description: Contains either details about the S3 object containing the
            OpenAPI schema for the action group or the JSON or YAML-formatted payload
            defining the schema. For more information, see [Action group OpenAPI schemas](https://docs.aws.amazon.com/bedrock/latest/userguide/agents-api-schema.html).
        functionSchema:
          allOf:
          - $ref: '#/components/schemas/FunctionSchema'
          description: Contains details about the function schema for the action group
            or the JSON or YAML-formatted payload defining the schema.
        parentActionGroupSignatureParams:
          allOf:
          - $ref: '#/components/schemas/ActionGroupSignatureParams'
          description: 'The configuration settings for a computer use action.


            Computer use is a new Anthropic Claude model capability (in beta) available
            with Claude 3.7 Sonnet and Claude 3.5 Sonnet v2 only. For more information,
            see [Configure an Amazon Bedrock Agent to complete tasks with computer
            use tools](https://docs.aws.amazon.com/bedrock/latest/userguide/agent-computer-use.html).'
      required:
      - actionGroupName
      description: Contains details of the inline agent's action group.
    AgentActionGroups:
      type: array
      items:
        $ref: '#/components/schemas/AgentActionGroup'
    AgentAliasArn:
      type: string
      pattern: ^arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:agent-alias/[0-9a-zA-Z]{10}/[0-9a-zA-Z]{10}$
      maxLength: 2048
    AgentAliasId:
      type: string
      pattern: ^[0-9a-zA-Z]+$
      maxLength: 10
    AgentCollaboration:
      type: string
      enum:
      - SUPERVISOR
      - SUPERVISOR_ROUTER
      - DISABLED
    AgentCollaboratorInputPayload:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/PayloadType'
          description: The input type.
        text:
          allOf:
          - $ref: '#/components/schemas/AgentCollaboratorPayloadString'
          description: Input text.
        returnControlResults:
          allOf:
          - $ref: '#/components/schemas/ReturnControlResults'
          description: An action invocation result.
      description: Input for an agent collaborator. The input can be text or an action
        invocation result.
    AgentCollaboratorInvocationInput:
      type: object
      properties:
        agentCollaboratorName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The collaborator's name.
        agentCollaboratorAliasArn:
          allOf:
          - $ref: '#/components/schemas/AgentAliasArn'
          description: The collaborator's alias ARN.
        input:
          allOf:
          - $ref: '#/components/schemas/AgentCollaboratorInputPayload'
          description: Text or action invocation result input for the collaborator.
      description: An agent collaborator invocation input.
    AgentCollaboratorInvocationOutput:
      type: object
      properties:
        agentCollaboratorName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The output's agent collaborator name.
        agentCollaboratorAliasArn:
          allOf:
          - $ref: '#/components/schemas/AgentAliasArn'
          description: The output's agent collaborator alias ARN.
        output:
          allOf:
          - $ref: '#/components/schemas/AgentCollaboratorOutputPayload'
          description: The output's output.
      description: Output from an agent collaborator.
    AgentCollaboratorOutputPayload:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/PayloadType'
          description: The type of output.
        text:
          allOf:
          - $ref: '#/components/schemas/AgentCollaboratorPayloadString'
          description: Text output.
        returnControlPayload:
          allOf:
          - $ref: '#/components/schemas/ReturnControlPayload'
          description: An action invocation result.
      description: Output from an agent collaborator. The output can be text or an
        action invocation result.
    AgentCollaboratorPayloadString:
      type: string
    AgentId:
      type: string
      pattern: ^[0-9a-zA-Z]+$
      maxLength: 10
    AgentVersion:
      type: string
      pattern: ^(DRAFT|[0-9]{0,4}[1-9][0-9]{0,4})$
      minLength: 1
      maxLength: 5
    AnalyzePromptEvent:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A message describing the analysis of the prompt.
      description: An event in which the prompt was analyzed in preparation for optimization.
    ApiContentMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/PropertyParameters'
    ApiInvocationInput:
      type: object
      properties:
        actionGroup:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The action group that the API operation belongs to.
        httpMethod:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP method of the API operation.
        apiPath:
          allOf:
          - $ref: '#/components/schemas/ApiPath'
          description: The path to the API operation.
        parameters:
          allOf:
          - $ref: '#/components/schemas/ApiParameters'
          description: The parameters to provide for the API request, as the agent
            elicited from the user.
        requestBody:
          allOf:
          - $ref: '#/components/schemas/ApiRequestBody'
          description: The request body to provide for the API request, as the agent
            elicited from the user.
        actionInvocationType:
          allOf:
          - $ref: '#/components/schemas/ActionInvocationType'
          description: Contains information about the API operation to invoke.
        agentId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The agent's ID.
        collaboratorName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The agent collaborator's name.
      required:
      - actionGroup
      description: "Contains information about the API operation that the agent predicts\
        \ should be called.\n\nThis data type is used in the following API operations:\n\
        \n  * In the `returnControl` field of the [InvokeAgent response](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html#API_agent-runtime_InvokeAgent_ResponseSyntax)"
    ApiParameter:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the parameter.
        type:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The data type for the parameter.
        value:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The value of the parameter.
      description: "Information about a parameter to provide to the API request.\n\
        \nThis data type is used in the following API operations:\n\n  * [InvokeAgent\
        \ response](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html#API_agent-runtime_InvokeAgent_ResponseSyntax)"
    ApiParameters:
      type: array
      items:
        $ref: '#/components/schemas/ApiParameter'
    ApiPath:
      type: string
    ApiRequestBody:
      type: object
      properties:
        content:
          allOf:
          - $ref: '#/components/schemas/ApiContentMap'
          description: The content of the request body. The key of the object in this
            field is a media type defining the format of the request body.
      description: "The request body to provide for the API request, as the agent\
        \ elicited from the user.\n\nThis data type is used in the following API operations:\n\
        \n  * [InvokeAgent response](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html#API_agent-runtime_InvokeAgent_ResponseSyntax)"
    ApiResult:
      type: object
      properties:
        actionGroup:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The action group that the API operation belongs to.
        httpMethod:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP method for the API operation.
        apiPath:
          allOf:
          - $ref: '#/components/schemas/ApiPath'
          description: The path to the API operation.
        confirmationState:
          allOf:
          - $ref: '#/components/schemas/ConfirmationState'
          description: Controls the API operations or functions to invoke based on
            the user confirmation.
        responseState:
          allOf:
          - $ref: '#/components/schemas/ResponseState'
          description: Controls the final response state returned to end user when
            API/Function execution failed. When this state is FAILURE, the request
            would fail with dependency failure exception. When this state is REPROMPT,
            the API/function response will be sent to model for re-prompt
        httpStatusCode:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'http status code from API execution response (for example:
            200, 400, 500).'
        responseBody:
          allOf:
          - $ref: '#/components/schemas/ResponseBody'
          description: The response body from the API operation. The key of the object
            is the content type (currently, only `TEXT` is supported). The response
            may be returned directly or from the Lambda function.
        agentId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The agent's ID.
      required:
      - actionGroup
      description: "Contains information about the API operation that was called from\
        \ the action group and the response body that was returned.\n\nThis data type\
        \ is used in the following API operations:\n\n  * In the `returnControlInvocationResults`\
        \ of the [InvokeAgent request](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html#API_agent-runtime_InvokeAgent_RequestSyntax)"
    AttributeType:
      type: string
      enum:
      - STRING
      - NUMBER
      - BOOLEAN
      - STRING_LIST
    Attribution:
      type: object
      properties:
        citations:
          allOf:
          - $ref: '#/components/schemas/Citations'
          description: A list of citations and related information for a part of an
            agent response.
      description: Contains citations for a part of an agent response.
    BadGatewayException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/NonBlankString'
        resourceName:
          allOf:
          - $ref: '#/components/schemas/NonBlankString'
          description: The name of the dependency that caused the issue, such as Amazon
            Bedrock, Lambda, or STS.
      description: There was an issue with a dependency due to a server issue. Retry
        your request.
    BasePromptTemplate:
      type: string
      minLength: 1
      maxLength: 100000
    BedrockModelArn:
      type: string
      pattern: ^(arn:aws(-[^:]+)?:(bedrock|sagemaker):[a-z0-9-]{1,20}:([0-9]{12})?:([a-z-]+/)?)?([a-z0-9.-]{1,63}){0,2}(([:][a-z0-9-]{1,63}){0,2})?(/[a-z0-9]{1,12})?$
      minLength: 1
      maxLength: 2048
    BedrockModelConfigurations:
      type: object
      properties:
        performanceConfig:
          allOf:
          - $ref: '#/components/schemas/PerformanceConfiguration'
          description: The performance configuration for the model.
      description: Settings for a model called with InvokeAgent.
    BedrockRerankingConfiguration:
      type: object
      properties:
        numberOfResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of results to return after reranking.
        modelConfiguration:
          allOf:
          - $ref: '#/components/schemas/BedrockRerankingModelConfiguration'
          description: Contains configurations for a reranker model.
      required:
      - modelConfiguration
      description: Contains configurations for an Amazon Bedrock reranker model.
    BedrockRerankingModelArn:
      type: string
      pattern: ^(arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}::foundation-model/(.*))?$
      minLength: 1
      maxLength: 2048
    BedrockRerankingModelConfiguration:
      type: object
      properties:
        modelArn:
          allOf:
          - $ref: '#/components/schemas/BedrockModelArn'
          description: The ARN of the reranker model.
        additionalModelRequestFields:
          allOf:
          - $ref: '#/components/schemas/AdditionalModelRequestFields'
          description: A JSON object whose keys are request fields for the model and
            whose values are values for those fields.
      required:
      - modelArn
      description: Contains configurations for a reranker model.
    BedrockSessionContentBlock:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/String'
        description: |-
          The text in the invocation step.
      - allOf:
        - $ref: '#/components/schemas/ImageBlock'
        description: |-
          The image in the invocation step.
      description: |-
        A block of content that you pass to, or receive from, a Amazon Bedrock session in an invocation step. You pass the content to a session in the `payLoad` of the [PutInvocationStep](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_PutInvocationStep.html) API operation. You retrieve the content with the [GetInvocationStep](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_GetInvocationStep.html) API operation.

        For more information about sessions, see [Store and retrieve conversation history and context with Amazon Bedrock sessions](https://docs.aws.amazon.com/bedrock/latest/userguide/sessions.html).
      x-sensitive: true
    BedrockSessionContentBlocks:
      type: array
      items:
        $ref: '#/components/schemas/BedrockSessionContentBlock'
    ByteContentBlob:
      type: string
      format: byte
      minLength: 1
      maxLength: 10485760
      x-sensitive: true
    ByteContentDoc:
      type: object
      properties:
        identifier:
          allOf:
          - $ref: '#/components/schemas/Identifier'
          description: The file name of the document contained in the wrapper object.
        contentType:
          allOf:
          - $ref: '#/components/schemas/ContentType'
          description: The MIME type of the document contained in the wrapper object.
        data:
          allOf:
          - $ref: '#/components/schemas/ByteContentBlob'
          description: The byte value of the file to upload, encoded as a Base-64
            string.
      required:
      - identifier
      - contentType
      - data
      description: This property contains the document to chat with, along with its
        attributes.
    ByteContentFile:
      type: object
      properties:
        mediaType:
          allOf:
          - $ref: '#/components/schemas/MimeType'
          description: The MIME type of data contained in the file used for chat.
        data:
          allOf:
          - $ref: '#/components/schemas/ByteContentBlob'
          description: The raw bytes of the file to attach. The maximum size of all
            files that is attached is 10MB. You can attach a maximum of 5 files.
      required:
      - mediaType
      - data
      description: The property contains the file to chat with, along with its attributes.
    Caller:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/AgentAliasArn'
        description: |-
          The caller's agent alias ARN.
      description: |-
        Details about a caller.
    CallerChain:
      type: array
      items:
        $ref: '#/components/schemas/Caller'
    Citation:
      type: object
      properties:
        generatedResponsePart:
          allOf:
          - $ref: '#/components/schemas/GeneratedResponsePart'
          description: Contains the generated response and metadata
        retrievedReferences:
          allOf:
          - $ref: '#/components/schemas/RetrievedReferences'
          description: Contains metadata about the sources cited for the generated
            response.
      description: "An object containing a segment of the generated response that\
        \ is based on a source in the knowledge base, alongside information about\
        \ the source.\n\nThis data type is used in the following API operations:\n\
        \n  * [InvokeAgent response](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html#API_agent-runtime_InvokeAgent_ResponseSyntax)\
        \ – in the `citations` field\n\n  * [RetrieveAndGenerate response](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrieveAndGenerate.html#API_agent-runtime_RetrieveAndGenerate_ResponseSyntax)\
        \ – in the `citations` field"
    CitationEvent:
      type: object
      properties:
        citation:
          allOf:
          - $ref: '#/components/schemas/Citation'
          description: The citation.
        generatedResponsePart:
          allOf:
          - $ref: '#/components/schemas/GeneratedResponsePart'
          description: The generated response to the citation event.
        retrievedReferences:
          allOf:
          - $ref: '#/components/schemas/RetrievedReferences'
          description: The retrieved references of the citation event.
      description: A citation event.
    Citations:
      type: array
      items:
        $ref: '#/components/schemas/Citation'
    CodeInterpreterInvocationInput:
      type: object
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The code for the code interpreter to use.
        files:
          allOf:
          - $ref: '#/components/schemas/Files'
          description: Files that are uploaded for code interpreter to use.
      description: Contains information about the code interpreter being invoked.
    CodeInterpreterInvocationOutput:
      type: object
      properties:
        executionOutput:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Contains the successful output returned from code execution
        executionError:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Contains the error returned from code execution.
        files:
          allOf:
          - $ref: '#/components/schemas/Files'
          description: Contains output files, if generated by code execution.
        executionTimeout:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates if the execution of the code timed out.
      description: Contains the JSON-formatted string returned by the API invoked
        by the code interpreter.
    CollaborationInstruction:
      type: string
      minLength: 1
      maxLength: 4000
    Collaborator:
      type: object
      properties:
        customerEncryptionKeyArn:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          description: The Amazon Resource Name (ARN) of the AWS KMS key that encrypts
            the inline collaborator.
        foundationModel:
          allOf:
          - $ref: '#/components/schemas/ModelIdentifier'
          description: The foundation model used by the inline collaborator agent.
        instruction:
          allOf:
          - $ref: '#/components/schemas/Instruction'
          description: Instruction that tell the inline collaborator agent what it
            should do and how it should interact with users.
        idleSessionTTLInSeconds:
          allOf:
          - $ref: '#/components/schemas/SessionTTL'
          description: 'The number of seconds for which the Amazon Bedrock keeps information
            about the user''s conversation with the inline collaborator agent.


            A user interaction remains active for the amount of time specified. If
            no conversation occurs during this time, the session expires and Amazon
            Bedrock deletes any data provided before the timeout.'
        actionGroups:
          allOf:
          - $ref: '#/components/schemas/AgentActionGroups'
          description: List of action groups with each action group defining tasks
            the inline collaborator agent needs to carry out.
        knowledgeBases:
          allOf:
          - $ref: '#/components/schemas/KnowledgeBases'
          description: Knowledge base associated with the inline collaborator agent.
        guardrailConfiguration:
          allOf:
          - $ref: '#/components/schemas/GuardrailConfigurationWithArn'
          description: Details of the guardwrail associated with the inline collaborator.
        promptOverrideConfiguration:
          allOf:
          - $ref: '#/components/schemas/PromptOverrideConfiguration'
          description: Contains configurations to override prompt templates in different
            parts of an inline collaborator sequence. For more information, see [Advanced
            prompts](https://docs.aws.amazon.com/bedrock/latest/userguide/advanced-prompts.html).
        agentCollaboration:
          allOf:
          - $ref: '#/components/schemas/AgentCollaboration'
          description: Defines how the inline supervisor agent handles information
            across multiple collaborator agents to coordinate a final response.
        collaboratorConfigurations:
          allOf:
          - $ref: '#/components/schemas/CollaboratorConfigurations'
          description: Settings of the collaborator agent.
        agentName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: Name of the inline collaborator agent which must be the same
            name as specified for `collaboratorName`.
      required:
      - foundationModel
      - instruction
      description: List of inline collaborators.
    CollaboratorConfiguration:
      type: object
      properties:
        collaboratorName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: Name of the inline collaborator agent which must be the same
            name as specified for `agentName`.
        collaboratorInstruction:
          allOf:
          - $ref: '#/components/schemas/CollaborationInstruction'
          description: Instructions that tell the inline collaborator agent what it
            should do and how it should interact with users.
        agentAliasArn:
          allOf:
          - $ref: '#/components/schemas/AgentAliasArn'
          description: The Amazon Resource Name (ARN) of the inline collaborator agent.
        relayConversationHistory:
          allOf:
          - $ref: '#/components/schemas/RelayConversationHistory'
          description: A relay conversation history for the inline collaborator agent.
      required:
      - collaboratorName
      - collaboratorInstruction
      description: Settings of an inline collaborator agent.
    CollaboratorConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/CollaboratorConfiguration'
    Collaborators:
      type: array
      items:
        $ref: '#/components/schemas/Collaborator'
    ConfirmationState:
      type: string
      enum:
      - CONFIRM
      - DENY
    ConflictException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/NonBlankString'
      description: There was a conflict performing an operation. Resolve the conflict
        and retry your request.
    ContentBlock:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/String'
        description: |-
          The block's text.
      description: |-
        A content block.
      x-sensitive: true
    ContentBlocks:
      type: array
      items:
        $ref: '#/components/schemas/ContentBlock'
    ContentBody:
      type: object
      properties:
        body:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The body of the API response.
        images:
          allOf:
          - $ref: '#/components/schemas/ImageInputs'
          description: Lists details, including format and source, for the image in
            the response from the function call. You can specify only one image and
            the function in the `returnControlInvocationResults` must be a computer
            use action. For more information, see [Configure an Amazon Bedrock Agent
            to complete tasks with computer use tools](https://docs.aws.amazon.com/bedrock/latest/userguide/agent-computer-use.html).
      description: "Contains the body of the API response.\n\nThis data type is used\
        \ in the following API operations:\n\n  * In the `returnControlInvocationResults`\
        \ field of the [InvokeAgent request](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html#API_agent-runtime_InvokeAgent_RequestSyntax)"
    ContentMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Parameters'
    ContentType:
      type: string
      pattern: '[a-z]{1,20}/.{1,20}'
    ConversationHistory:
      type: object
      properties:
        messages:
          allOf:
          - $ref: '#/components/schemas/Messages'
          description: The conversation's messages.
      description: A conversation history.
    ConversationRole:
      type: string
      enum:
      - user
      - assistant
    CreateInvocationRequest:
      type: object
      properties:
        invocationId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: A unique identifier for the invocation in UUID format.
        description:
          allOf:
          - $ref: '#/components/schemas/InvocationDescription'
          description: A description for the interactions in the invocation. For example,
            "User asking about weather in Seattle".
        sessionIdentifier:
          allOf:
          - $ref: '#/components/schemas/SessionIdentifier'
          description: The unique identifier for the associated session for the invocation.
            You can specify either the session's `sessionId` or its Amazon Resource
            Name (ARN).
      required:
      - sessionIdentifier
    CreateInvocationResponse:
      type: object
      properties:
        sessionId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The unique identifier for the session associated with the invocation.
        invocationId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The unique identifier for the invocation.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/DateTimestamp'
          description: The timestamp for when the invocation was created.
      required:
      - sessionId
      - invocationId
      - createdAt
    CreateSessionRequest:
      type: object
      properties:
        sessionMetadata:
          allOf:
          - $ref: '#/components/schemas/SessionMetadataMap'
          description: A map of key-value pairs containing attributes to be persisted
            across the session. For example, the user's ID, their language preference,
            and the type of device they are using.
        encryptionKeyArn:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          description: The Amazon Resource Name (ARN) of the KMS key to use to encrypt
            the session data. The user or role creating the session must have permission
            to use the key. For more information, see [Amazon Bedrock session encryption](https://docs.aws.amazon.com/bedrock/latest/userguide/session-encryption.html).
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          description: Specify the key-value pairs for the tags that you want to attach
            to the session.
    CreateSessionResponse:
      type: object
      properties:
        sessionId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The unique identifier for the session.
        sessionArn:
          allOf:
          - $ref: '#/components/schemas/SessionArn'
          description: The Amazon Resource Name (ARN) of the created session.
        sessionStatus:
          allOf:
          - $ref: '#/components/schemas/SessionStatus'
          description: The current status of the session.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/DateTimestamp'
          description: The timestamp for when the session was created.
      required:
      - sessionId
      - sessionArn
      - sessionStatus
      - createdAt
    CreationMode:
      type: string
      enum:
      - DEFAULT
      - OVERRIDDEN
    CustomControlMethod:
      type: string
      enum:
      - RETURN_CONTROL
    CustomOrchestrationTrace:
      type: object
      properties:
        traceId:
          allOf:
          - $ref: '#/components/schemas/TraceId'
          description: The unique identifier of the trace.
        event:
          allOf:
          - $ref: '#/components/schemas/CustomOrchestrationTraceEvent'
          description: The event details used with the custom orchestration.
      description: The trace behavior for the custom orchestration.
    CustomOrchestrationTraceEvent:
      type: object
      properties:
        text:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The text that prompted the event at this step.
      description: The event in the custom orchestration sequence. Events are the
        responses which the custom orchestration Lambda function sends as response
        to the agent.
    DateTimestamp:
      type: string
      format: date-time
      description: Time Stamp.
    DeleteAgentMemoryRequest:
      type: object
      properties:
        agentId:
          allOf:
          - $ref: '#/components/schemas/AgentId'
          description: The unique identifier of the agent to which the alias belongs.
        agentAliasId:
          allOf:
          - $ref: '#/components/schemas/AgentAliasId'
          description: The unique identifier of an alias of an agent.
        memoryId:
          allOf:
          - $ref: '#/components/schemas/MemoryId'
          description: The unique identifier of the memory.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/SessionId'
          description: The unique session identifier of the memory.
      required:
      - agentId
      - agentAliasId
    DeleteAgentMemoryResponse:
      type: object
      properties: {}
    DeleteSessionRequest:
      type: object
      properties:
        sessionIdentifier:
          allOf:
          - $ref: '#/components/schemas/SessionIdentifier'
          description: The unique identifier for the session to be deleted. You can
            specify either the session's `sessionId` or its Amazon Resource Name (ARN).
      required:
      - sessionIdentifier
    DeleteSessionResponse:
      type: object
      properties: {}
    DependencyFailedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/NonBlankString'
        resourceName:
          allOf:
          - $ref: '#/components/schemas/NonBlankString'
          description: The name of the dependency that caused the issue, such as Amazon
            Bedrock, Lambda, or STS.
      description: There was an issue with a dependency. Check the resource configurations
        and retry the request.
    EndSessionRequest:
      type: object
      properties:
        sessionIdentifier:
          allOf:
          - $ref: '#/components/schemas/SessionIdentifier'
          description: The unique identifier for the session to end. You can specify
            either the session's `sessionId` or its Amazon Resource Name (ARN).
      required:
      - sessionIdentifier
    EndSessionResponse:
      type: object
      properties:
        sessionId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The unique identifier of the session you ended.
        sessionArn:
          allOf:
          - $ref: '#/components/schemas/SessionArn'
          description: The Amazon Resource Name (ARN) of the session you ended.
        sessionStatus:
          allOf:
          - $ref: '#/components/schemas/SessionStatus'
          description: The current status of the session you ended.
      required:
      - sessionId
      - sessionArn
      - sessionStatus
    ExecutionType:
      type: string
      enum:
      - LAMBDA
      - RETURN_CONTROL
    ExternalSource:
      type: object
      properties:
        sourceType:
          allOf:
          - $ref: '#/components/schemas/ExternalSourceType'
          description: The source type of the external source wrapper object.
        s3Location:
          allOf:
          - $ref: '#/components/schemas/S3ObjectDoc'
          description: The S3 location of the external source wrapper object.
        byteContent:
          allOf:
          - $ref: '#/components/schemas/ByteContentDoc'
          description: The identifier, contentType, and data of the external source
            wrapper object.
      required:
      - sourceType
      description: The unique external source of the content contained in the wrapper
        object.
    ExternalSourceType:
      type: string
      enum:
      - S3
      - BYTE_CONTENT
    ExternalSources:
      type: array
      items:
        $ref: '#/components/schemas/ExternalSource'
    ExternalSourcesGenerationConfiguration:
      type: object
      properties:
        promptTemplate:
          allOf:
          - $ref: '#/components/schemas/PromptTemplate'
          description: Contain the textPromptTemplate string for the external source
            wrapper object.
        guardrailConfiguration:
          allOf:
          - $ref: '#/components/schemas/GuardrailConfiguration'
          description: The configuration details for the guardrail.
        inferenceConfig:
          allOf:
          - $ref: '#/components/schemas/InferenceConfig'
          description: Configuration settings for inference when using RetrieveAndGenerate
            to generate responses while using an external source.
        additionalModelRequestFields:
          allOf:
          - $ref: '#/components/schemas/AdditionalModelRequestFields'
          description: Additional model parameters and their corresponding values
            not included in the textInferenceConfig structure for an external source.
            Takes in custom model parameters specific to the language model being
            used.
        performanceConfig:
          allOf:
          - $ref: '#/components/schemas/PerformanceConfiguration'
          description: The latency configuration for the model.
      description: Contains the generation configuration of the external source wrapper
        object.
    ExternalSourcesRetrieveAndGenerateConfiguration:
      type: object
      properties:
        modelArn:
          allOf:
          - $ref: '#/components/schemas/BedrockModelArn'
          description: The model Amazon Resource Name (ARN) for the external source
            wrapper object in the `retrieveAndGenerate` function.
        sources:
          allOf:
          - $ref: '#/components/schemas/ExternalSources'
          description: The document for the external source wrapper object in the
            `retrieveAndGenerate` function.
        generationConfiguration:
          allOf:
          - $ref: '#/components/schemas/ExternalSourcesGenerationConfiguration'
          description: The prompt used with the external source wrapper object with
            the `retrieveAndGenerate` function.
      required:
      - modelArn
      - sources
      description: The configurations of the external source wrapper object in the
        `retrieveAndGenerate` function.
    FailureReasonString:
      type: string
    FailureTrace:
      type: object
      properties:
        traceId:
          allOf:
          - $ref: '#/components/schemas/TraceId'
          description: The unique identifier of the trace.
        failureReason:
          allOf:
          - $ref: '#/components/schemas/FailureReasonString'
          description: The reason the interaction failed.
      description: Contains information about the failure of the interaction.
    FieldForReranking:
      type: object
      properties:
        fieldName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of a metadata field to include in or exclude from
            consideration when reranking.
      required:
      - fieldName
      description: Contains information for a metadata field to include in or exclude
        from consideration when reranking.
    FieldsForReranking:
      type: array
      items:
        $ref: '#/components/schemas/FieldForReranking'
      x-sensitive: true
    FileBody:
      type: string
      format: byte
      maxLength: 1000000
      x-sensitive: true
    FilePart:
      type: object
      properties:
        files:
          allOf:
          - $ref: '#/components/schemas/OutputFiles'
          description: Files containing intermediate response for the user.
      description: Contains intermediate response for code interpreter if any files
        have been generated.
    FileSource:
      type: object
      properties:
        sourceType:
          allOf:
          - $ref: '#/components/schemas/FileSourceType'
          description: The source type of the files to attach.
        s3Location:
          allOf:
          - $ref: '#/components/schemas/S3ObjectFile'
          description: The s3 location of the files to attach.
        byteContent:
          allOf:
          - $ref: '#/components/schemas/ByteContentFile'
          description: The data and the text of the attached files.
      required:
      - sourceType
      description: The source file of the content contained in the wrapper object.
    FileSourceType:
      type: string
      enum:
      - S3
      - BYTE_CONTENT
    FileUseCase:
      type: string
      enum:
      - CODE_INTERPRETER
      - CHAT
    Files:
      type: array
      items:
        type: string
    FilterAttribute:
      type: object
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/FilterKey'
          description: The name that the metadata attribute must match.
        value:
          allOf:
          - $ref: '#/components/schemas/FilterValue'
          description: The value to whcih to compare the value of the metadata attribute.
      required:
      - key
      - value
      description: "Specifies the name that the metadata attribute must match and\
        \ the value to which to compare the value of the metadata attribute. For more\
        \ information, see [Query configurations](https://docs.aws.amazon.com/bedrock/latest/userguide/kb-test-config.html).\n\
        \nThis data type is used in the following API operations:\n\n  * [RetrieveAndGenerate\
        \ request](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrieveAndGenerate.html#API_agent-runtime_RetrieveAndGenerate_RequestSyntax)"
    FilterKey:
      type: string
      minLength: 1
      maxLength: 100
    FilterValue:
      type: object
      additionalProperties: true
    FinalResponse:
      type: object
      properties:
        text:
          allOf:
          - $ref: '#/components/schemas/FinalResponseString'
          description: The text in the response to the user.
      description: Contains details about the response to the user.
    FinalResponseString:
      type: string
    FlowAliasIdentifier:
      type: string
      pattern: ^(arn:aws:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:flow/[0-9a-zA-Z]{10}/alias/[0-9a-zA-Z]{10})|(\bTSTALIASID\b|[0-9a-zA-Z]+)$
      maxLength: 2048
    FlowCompletionEvent:
      type: object
      properties:
        completionReason:
          allOf:
          - $ref: '#/components/schemas/FlowCompletionReason'
          description: The reason that the flow completed.
      required:
      - completionReason
      description: Contains information about why a flow completed.
    FlowCompletionReason:
      type: string
      enum:
      - SUCCESS
      - INPUT_REQUIRED
    FlowExecutionId:
      type: string
      pattern: ^[0-9a-zA-Z._:-]+$
      minLength: 2
      maxLength: 100
    FlowIdentifier:
      type: string
      pattern: ^(arn:aws:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:flow/[0-9a-zA-Z]{10})|([0-9a-zA-Z]{10})$
      maxLength: 2048
    FlowInput:
      type: object
      properties:
        nodeName:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          description: The name of the flow input node that begins the prompt flow.
        nodeOutputName:
          allOf:
          - $ref: '#/components/schemas/NodeOutputName'
          description: The name of the output from the flow input node that begins
            the prompt flow.
        content:
          allOf:
          - $ref: '#/components/schemas/FlowInputContent'
          description: Contains information about an input into the prompt flow.
        nodeInputName:
          allOf:
          - $ref: '#/components/schemas/NodeInputName'
          description: The name of the input from the flow input node.
      required:
      - nodeName
      - content
      description: Contains information about an input into the prompt flow and where
        to send it.
    FlowInputContent:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/Document'
        description: |-
          The input to send to the prompt flow input node.
      description: |-
        Contains information about an input into the flow.
      x-sensitive: true
    FlowInputs:
      type: array
      items:
        $ref: '#/components/schemas/FlowInput'
    FlowMultiTurnInputContent:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/Document'
        description: |-
          The requested additional input to send back to the multi-turn flow node.
      description: |-
        The content structure containing input information for multi-turn flow interactions.
    FlowMultiTurnInputRequestEvent:
      type: object
      properties:
        nodeName:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          description: The name of the node in the flow that is requesting the input.
        nodeType:
          allOf:
          - $ref: '#/components/schemas/NodeType'
          description: The type of the node in the flow that is requesting the input.
        content:
          allOf:
          - $ref: '#/components/schemas/FlowMultiTurnInputContent'
          description: The content payload containing the input request details for
            the multi-turn interaction.
      required:
      - nodeName
      - nodeType
      - content
      description: Response object from the flow multi-turn node requesting additional
        information.
    FlowOutputContent:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/Document'
        description: |-
          The content in the output.
      description: |-
        Contains information about the content in an output from prompt flow invocation.
    FlowOutputEvent:
      type: object
      properties:
        nodeName:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          description: The name of the flow output node that the output is from.
        nodeType:
          allOf:
          - $ref: '#/components/schemas/NodeType'
          description: The type of the node that the output is from.
        content:
          allOf:
          - $ref: '#/components/schemas/FlowOutputContent'
          description: The content in the output.
      required:
      - nodeName
      - nodeType
      - content
      description: Contains information about an output from prompt flow invoction.
    FlowResponseStream:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/FlowOutputEvent'
        description: |-
          Contains information about an output from flow invocation.
      - allOf:
        - $ref: '#/components/schemas/FlowCompletionEvent'
        description: |-
          Contains information about why the flow completed.
      - allOf:
        - $ref: '#/components/schemas/FlowTraceEvent'
        description: |-
          Contains information about a trace, which tracks an input or output for a node in the flow.
      - allOf:
        - $ref: '#/components/schemas/InternalServerException'
        description: |-
          An internal server error occurred. Retry your request.
      - allOf:
        - $ref: '#/components/schemas/ValidationException'
        description: |-
          Input validation failed. Check your request parameters and retry the request.
      - allOf:
        - $ref: '#/components/schemas/ResourceNotFoundException'
        description: |-
          The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
      - allOf:
        - $ref: '#/components/schemas/ServiceQuotaExceededException'
        description: |-
          The number of requests exceeds the service quota. Resubmit your request later.
      - allOf:
        - $ref: '#/components/schemas/ThrottlingException'
        description: |-
          The number of requests exceeds the limit. Resubmit your request later.
      - allOf:
        - $ref: '#/components/schemas/AccessDeniedException'
        description: |-
          The request is denied because of missing access permissions. Check your permissions and retry your request.
      - allOf:
        - $ref: '#/components/schemas/ConflictException'
        description: |-
          There was a conflict performing an operation. Resolve the conflict and retry your request.
      - allOf:
        - $ref: '#/components/schemas/DependencyFailedException'
        description: |-
          There was an issue with a dependency. Check the resource configurations and retry the request.
      - allOf:
        - $ref: '#/components/schemas/BadGatewayException'
        description: |-
          There was an issue with a dependency due to a server issue. Retry your request.
      - allOf:
        - $ref: '#/components/schemas/FlowMultiTurnInputRequestEvent'
        description: |-
          The event stream containing the multi-turn input request information from the flow.
      description: |-
        The output of the flow.
    FlowTrace:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/FlowTraceNodeInputEvent'
        description: |-
          Contains information about the input into a node.
      - allOf:
        - $ref: '#/components/schemas/FlowTraceNodeOutputEvent'
        description: |-
          Contains information about the output from a node.
      - allOf:
        - $ref: '#/components/schemas/FlowTraceConditionNodeResultEvent'
        description: |-
          Contains information about an output from a condition node.
      - allOf:
        - $ref: '#/components/schemas/FlowTraceNodeActionEvent'
        description: |-
          Contains information about an action (operation) called by a node. For more information, see [Track each step in your prompt flow by viewing its trace in Amazon Bedrock](https://docs.aws.amazon.com/bedrock/latest/userguide/flows-trace.html).
      description: |-
        Contains information about an input or output for a node in the flow. For more information, see [Track each step in your prompt flow by viewing its trace in Amazon Bedrock](https://docs.aws.amazon.com/bedrock/latest/userguide/flows-trace.html).
      x-sensitive: true
    FlowTraceCondition:
      type: object
      properties:
        conditionName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the condition.
      required:
      - conditionName
      description: Contains information about a condition that was satisfied. For
        more information, see [Track each step in your prompt flow by viewing its
        trace in Amazon Bedrock](https://docs.aws.amazon.com/bedrock/latest/userguide/flows-trace.html).
    FlowTraceConditionNodeResultEvent:
      type: object
      properties:
        nodeName:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          description: The name of the condition node.
        timestamp:
          allOf:
          - $ref: '#/components/schemas/DateTimestamp'
          description: The date and time that the trace was returned.
        satisfiedConditions:
          allOf:
          - $ref: '#/components/schemas/FlowTraceConditions'
          description: An array of objects containing information about the conditions
            that were satisfied.
      required:
      - nodeName
      - timestamp
      - satisfiedConditions
      description: Contains information about an output from a condition node. For
        more information, see [Track each step in your prompt flow by viewing its
        trace in Amazon Bedrock](https://docs.aws.amazon.com/bedrock/latest/userguide/flows-trace.html).
    FlowTraceConditions:
      type: array
      items:
        $ref: '#/components/schemas/FlowTraceCondition'
    FlowTraceEvent:
      type: object
      properties:
        trace:
          allOf:
          - $ref: '#/components/schemas/FlowTrace'
          description: The trace object containing information about an input or output
            for a node in the flow.
      required:
      - trace
      description: Contains information about a trace, which tracks an input or output
        for a node in the flow. For more information, see [Track each step in your
        prompt flow by viewing its trace in Amazon Bedrock](https://docs.aws.amazon.com/bedrock/latest/userguide/flows-trace.html).
    FlowTraceNodeActionEvent:
      type: object
      properties:
        nodeName:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          description: The name of the node that called the operation.
        timestamp:
          allOf:
          - $ref: '#/components/schemas/DateTimestamp'
          description: The date and time that the operation was called.
        requestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the request that the node made to the operation.
        serviceName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the service that the node called.
        operationName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the operation that the node called.
      required:
      - nodeName
      - timestamp
      - requestId
      - serviceName
      - operationName
      description: Contains information about an action (operation) called by a node
        in an Amazon Bedrock flow. The service generates action events for calls made
        by prompt nodes, agent nodes, and Amazon Web Services Lambda nodes.
    FlowTraceNodeInputContent:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/Document'
        description: |-
          The content of the node input.
      description: |-
        Contains the content of the node input. For more information, see [Track each step in your prompt flow by viewing its trace in Amazon Bedrock](https://docs.aws.amazon.com/bedrock/latest/userguide/flows-trace.html).
      x-sensitive: true
    FlowTraceNodeInputEvent:
      type: object
      properties:
        nodeName:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          description: The name of the node that received the input.
        timestamp:
          allOf:
          - $ref: '#/components/schemas/DateTimestamp'
          description: The date and time that the trace was returned.
        fields:
          allOf:
          - $ref: '#/components/schemas/FlowTraceNodeInputFields'
          description: An array of objects containing information about each field
            in the input.
      required:
      - nodeName
      - timestamp
      - fields
      description: Contains information about the input into a node. For more information,
        see [Track each step in your prompt flow by viewing its trace in Amazon Bedrock](https://docs.aws.amazon.com/bedrock/latest/userguide/flows-trace.html).
    FlowTraceNodeInputField:
      type: object
      properties:
        nodeInputName:
          allOf:
          - $ref: '#/components/schemas/NodeInputName'
          description: The name of the node input.
        content:
          allOf:
          - $ref: '#/components/schemas/FlowTraceNodeInputContent'
          description: The content of the node input.
      required:
      - nodeInputName
      - content
      description: Contains information about a field in the input into a node. For
        more information, see [Track each step in your prompt flow by viewing its
        trace in Amazon Bedrock](https://docs.aws.amazon.com/bedrock/latest/userguide/flows-trace.html).
    FlowTraceNodeInputFields:
      type: array
      items:
        $ref: '#/components/schemas/FlowTraceNodeInputField'
    FlowTraceNodeOutputContent:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/Document'
        description: |-
          The content of the node output.
      description: |-
        Contains the content of the node output. For more information, see [Track each step in your prompt flow by viewing its trace in Amazon Bedrock](https://docs.aws.amazon.com/bedrock/latest/userguide/flows-trace.html).
    FlowTraceNodeOutputEvent:
      type: object
      properties:
        nodeName:
          allOf:
          - $ref: '#/components/schemas/NodeName'
          description: The name of the node that yielded the output.
        timestamp:
          allOf:
          - $ref: '#/components/schemas/DateTimestamp'
          description: The date and time that the trace was returned.
        fields:
          allOf:
          - $ref: '#/components/schemas/FlowTraceNodeOutputFields'
          description: An array of objects containing information about each field
            in the output.
      required:
      - nodeName
      - timestamp
      - fields
      description: Contains information about the output from a node. For more information,
        see [Track each step in your prompt flow by viewing its trace in Amazon Bedrock](https://docs.aws.amazon.com/bedrock/latest/userguide/flows-trace.html).
    FlowTraceNodeOutputField:
      type: object
      properties:
        nodeOutputName:
          allOf:
          - $ref: '#/components/schemas/NodeOutputName'
          description: The name of the node output.
        content:
          allOf:
          - $ref: '#/components/schemas/FlowTraceNodeOutputContent'
          description: The content of the node output.
      required:
      - nodeOutputName
      - content
      description: Contains information about a field in the output from a node. For
        more information, see [Track each step in your prompt flow by viewing its
        trace in Amazon Bedrock](https://docs.aws.amazon.com/bedrock/latest/userguide/flows-trace.html).
    FlowTraceNodeOutputFields:
      type: array
      items:
        $ref: '#/components/schemas/FlowTraceNodeOutputField'
    Function:
      type: string
    FunctionDefinition:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: A name for the function.
        description:
          allOf:
          - $ref: '#/components/schemas/FunctionDescription'
          description: A description of the function and its purpose.
        parameters:
          allOf:
          - $ref: '#/components/schemas/ParameterMap'
          description: The parameters that the agent elicits from the user to fulfill
            the function.
        requireConfirmation:
          allOf:
          - $ref: '#/components/schemas/RequireConfirmation'
          description: Contains information if user confirmation is required to invoke
            the function.
      required:
      - name
      description: Defines parameters that the agent needs to invoke from the user
        to complete the function. Corresponds to an action in an action group.
    FunctionDescription:
      type: string
      minLength: 1
      maxLength: 1200
    FunctionInvocationInput:
      type: object
      properties:
        actionGroup:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The action group that the function belongs to.
        parameters:
          allOf:
          - $ref: '#/components/schemas/FunctionParameters'
          description: A list of parameters of the function.
        function:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the function.
        actionInvocationType:
          allOf:
          - $ref: '#/components/schemas/ActionInvocationType'
          description: Contains information about the function to invoke,
        agentId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The agent's ID.
        collaboratorName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The collaborator's name.
      required:
      - actionGroup
      description: "Contains information about the function that the agent predicts\
        \ should be called.\n\nThis data type is used in the following API operations:\n\
        \n  * In the `returnControl` field of the [InvokeAgent response](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html#API_agent-runtime_InvokeAgent_ResponseSyntax)"
    FunctionParameter:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the parameter.
        type:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The data type of the parameter.
        value:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The value of the parameter.
      description: "Contains information about a parameter of the function.\n\nThis\
        \ data type is used in the following API operations:\n\n  * In the `returnControl`\
        \ field of the [InvokeAgent response](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html#API_agent-runtime_InvokeAgent_ResponseSyntax)"
    FunctionParameters:
      type: array
      items:
        $ref: '#/components/schemas/FunctionParameter'
    FunctionResult:
      type: object
      properties:
        actionGroup:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The action group that the function belongs to.
        confirmationState:
          allOf:
          - $ref: '#/components/schemas/ConfirmationState'
          description: Contains the user confirmation information about the function
            that was called.
        function:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the function that was called.
        responseBody:
          allOf:
          - $ref: '#/components/schemas/ResponseBody'
          description: The response from the function call using the parameters. The
            response might be returned directly or from the Lambda function. Specify
            `TEXT` or `IMAGES`. The key of the object is the content type. You can
            only specify one type. If you specify `IMAGES`, you can specify only one
            image. You can specify images only when the function in the `returnControlInvocationResults`
            is a computer use action. For more information, see [Configure an Amazon
            Bedrock Agent to complete tasks with computer use tools](https://docs.aws.amazon.com/bedrock/latest/userguide/agent-computer-use.html).
        responseState:
          allOf:
          - $ref: '#/components/schemas/ResponseState'
          description: Controls the final response state returned to end user when
            API/Function execution failed. When this state is FAILURE, the request
            would fail with dependency failure exception. When this state is REPROMPT,
            the API/function response will be sent to model for re-prompt
        agentId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The agent's ID.
      required:
      - actionGroup
      description: "Contains information about the function that was called from the\
        \ action group and the response that was returned.\n\nThis data type is used\
        \ in the following API operations:\n\n  * In the `returnControlInvocationResults`\
        \ of the [InvokeAgent request](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html#API_agent-runtime_InvokeAgent_RequestSyntax)"
    FunctionSchema:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/Functions'
        description: |-
          A list of functions that each define an action in the action group.
      description: |-
        Contains details about the function schema for the action group or the JSON or YAML-formatted payload defining the schema.
    Functions:
      type: array
      items:
        $ref: '#/components/schemas/FunctionDefinition'
    GenerateQueryRequest:
      type: object
      properties:
        queryGenerationInput:
          allOf:
          - $ref: '#/components/schemas/QueryGenerationInput'
          description: Specifies information about a natural language query to transform
            into SQL.
        transformationConfiguration:
          allOf:
          - $ref: '#/components/schemas/TransformationConfiguration'
          description: Specifies configurations for transforming the natural language
            query into SQL.
      required:
      - queryGenerationInput
      - transformationConfiguration
    GenerateQueryResponse:
      type: object
      properties:
        queries:
          allOf:
          - $ref: '#/components/schemas/GeneratedQueries'
          description: A list of objects, each of which defines a generated query
            that can correspond to the natural language queries.
    GeneratedQueries:
      type: array
      items:
        $ref: '#/components/schemas/GeneratedQuery'
    GeneratedQuery:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/GeneratedQueryType'
          description: The type of transformed query.
        sql:
          allOf:
          - $ref: '#/components/schemas/String'
          description: An SQL query that corresponds to the natural language query.
      description: Contains information about a query generated for a natural language
        query.
    GeneratedQueryType:
      type: string
      enum:
      - REDSHIFT_SQL
    GeneratedResponsePart:
      type: object
      properties:
        textResponsePart:
          allOf:
          - $ref: '#/components/schemas/TextResponsePart'
          description: Contains metadata about a textual part of the generated response
            that is accompanied by a citation.
      description: "Contains metadata about a part of the generated response that\
        \ is accompanied by a citation.\n\nThis data type is used in the following\
        \ API operations:\n\n  * [InvokeAgent response](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html#API_agent-runtime_InvokeAgent_ResponseSyntax)\
        \ – in the `generatedResponsePart` field\n\n  * [RetrieveAndGenerate response](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrieveAndGenerate.html#API_agent-runtime_RetrieveAndGenerate_ResponseSyntax)\
        \ – in the `generatedResponsePart` field"
    GenerationConfiguration:
      type: object
      properties:
        promptTemplate:
          allOf:
          - $ref: '#/components/schemas/PromptTemplate'
          description: Contains the template for the prompt that's sent to the model
            for response generation. Generation prompts must include the `$search_results$`
            variable. For more information, see [Use placeholder variables](https://docs.aws.amazon.com/bedrock/latest/userguide/prompt-placeholders.html)
            in the user guide.
        guardrailConfiguration:
          allOf:
          - $ref: '#/components/schemas/GuardrailConfiguration'
          description: The configuration details for the guardrail.
        inferenceConfig:
          allOf:
          - $ref: '#/components/schemas/InferenceConfig'
          description: Configuration settings for inference when using RetrieveAndGenerate
            to generate responses while using a knowledge base as a source.
        additionalModelRequestFields:
          allOf:
          - $ref: '#/components/schemas/AdditionalModelRequestFields'
          description: Additional model parameters and corresponding values not included
            in the textInferenceConfig structure for a knowledge base. This allows
            users to provide custom model parameters specific to the language model
            being used.
        performanceConfig:
          allOf:
          - $ref: '#/components/schemas/PerformanceConfiguration'
          description: The latency configuration for the model.
      description: "Contains configurations for response generation based on the knowledge\
        \ base query results.\n\nThis data type is used in the following API operations:\n\
        \n  * [RetrieveAndGenerate request](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrieveAndGenerate.html#API_agent-runtime_RetrieveAndGenerate_RequestSyntax)"
    GetAgentMemoryRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If the total number of results is greater than the maxItems
            value provided in the request, enter the token returned in the `nextToken`
            field in the response in this field to return the next batch of results.
        maxItems:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of items to return in the response. If the
            total number of results is greater than this value, use the token returned
            in the response in the `nextToken` field when making another request to
            return the next batch of results.
        agentId:
          allOf:
          - $ref: '#/components/schemas/AgentId'
          description: The unique identifier of the agent to which the alias belongs.
        agentAliasId:
          allOf:
          - $ref: '#/components/schemas/AgentAliasId'
          description: The unique identifier of an alias of an agent.
        memoryType:
          allOf:
          - $ref: '#/components/schemas/MemoryType'
          description: The type of memory.
        memoryId:
          allOf:
          - $ref: '#/components/schemas/MemoryId'
          description: The unique identifier of the memory.
      required:
      - agentId
      - agentAliasId
      - memoryType
      - memoryId
    GetAgentMemoryResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If the total number of results is greater than the maxItems
            value provided in the request, use this token when making another request
            in the `nextToken` field to return the next batch of results.
        memoryContents:
          allOf:
          - $ref: '#/components/schemas/Memories'
          description: Contains details of the sessions stored in the memory
    GetInvocationStepRequest:
      type: object
      properties:
        invocationIdentifier:
          allOf:
          - $ref: '#/components/schemas/InvocationIdentifier'
          description: The unique identifier for the invocation in UUID format.
        invocationStepId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The unique identifier (in UUID format) for the specific invocation
            step to retrieve.
        sessionIdentifier:
          allOf:
          - $ref: '#/components/schemas/SessionIdentifier'
          description: The unique identifier for the invocation step's associated
            session. You can specify either the session's `sessionId` or its Amazon
            Resource Name (ARN).
      required:
      - invocationIdentifier
      - invocationStepId
      - sessionIdentifier
    GetInvocationStepResponse:
      type: object
      properties:
        invocationStep:
          allOf:
          - $ref: '#/components/schemas/InvocationStep'
          description: The complete details of the requested invocation step.
      required:
      - invocationStep
    GetSessionRequest:
      type: object
      properties:
        sessionIdentifier:
          allOf:
          - $ref: '#/components/schemas/SessionIdentifier'
          description: A unique identifier for the session to retrieve. You can specify
            either the session's `sessionId` or its Amazon Resource Name (ARN).
      required:
      - sessionIdentifier
    GetSessionResponse:
      type: object
      properties:
        sessionId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The unique identifier for the session in UUID format.
        sessionArn:
          allOf:
          - $ref: '#/components/schemas/SessionArn'
          description: The Amazon Resource Name (ARN) of the session.
        sessionStatus:
          allOf:
          - $ref: '#/components/schemas/SessionStatus'
          description: The current status of the session.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/DateTimestamp'
          description: The timestamp for when the session was created.
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/DateTimestamp'
          description: The timestamp for when the session was last modified.
        sessionMetadata:
          allOf:
          - $ref: '#/components/schemas/SessionMetadataMap'
          description: A map of key-value pairs containing attributes persisted across
            the session.
        encryptionKeyArn:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          description: The Amazon Resource Name (ARN) of the Key Management Service
            key used to encrypt the session data. For more information, see [Amazon
            Bedrock session encryption](https://docs.aws.amazon.com/bedrock/latest/userguide/session-encryption.html).
      required:
      - sessionId
      - sessionArn
      - sessionStatus
      - createdAt
      - lastUpdatedAt
    GuadrailAction:
      type: string
      enum:
      - INTERVENED
      - NONE
    GuardrailAction:
      type: string
      enum:
      - INTERVENED
      - NONE
    GuardrailAssessment:
      type: object
      properties:
        topicPolicy:
          allOf:
          - $ref: '#/components/schemas/GuardrailTopicPolicyAssessment'
          description: Topic policy details of the Guardrail.
        contentPolicy:
          allOf:
          - $ref: '#/components/schemas/GuardrailContentPolicyAssessment'
          description: Content policy details of the Guardrail.
        wordPolicy:
          allOf:
          - $ref: '#/components/schemas/GuardrailWordPolicyAssessment'
          description: Word policy details of the Guardrail.
        sensitiveInformationPolicy:
          allOf:
          - $ref: '#/components/schemas/GuardrailSensitiveInformationPolicyAssessment'
          description: Sensitive Information policy details of Guardrail.
      description: Assessment details of the content analyzed by Guardrails.
    GuardrailAssessmentList:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailAssessment'
    GuardrailConfiguration:
      type: object
      properties:
        guardrailId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier for the guardrail.
        guardrailVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The version of the guardrail.
      required:
      - guardrailId
      - guardrailVersion
      description: The configuration details for the guardrail.
    GuardrailConfigurationWithArn:
      type: object
      properties:
        guardrailIdentifier:
          allOf:
          - $ref: '#/components/schemas/GuardrailIdentifierWithArn'
          description: The unique identifier for the guardrail.
        guardrailVersion:
          allOf:
          - $ref: '#/components/schemas/GuardrailVersion'
          description: The version of the guardrail.
      required:
      - guardrailIdentifier
      - guardrailVersion
      description: The configuration details for the guardrail.
    GuardrailContentFilter:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/GuardrailContentFilterType'
          description: The type of content detected in the filter by the Guardrail.
        confidence:
          allOf:
          - $ref: '#/components/schemas/GuardrailContentFilterConfidence'
          description: The confidence level regarding the content detected in the
            filter by the Guardrail.
        action:
          allOf:
          - $ref: '#/components/schemas/GuardrailContentPolicyAction'
          description: The action placed on the content by the Guardrail filter.
      description: Details of the content filter used in the Guardrail.
    GuardrailContentFilterConfidence:
      type: string
      enum:
      - NONE
      - LOW
      - MEDIUM
      - HIGH
    GuardrailContentFilterList:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailContentFilter'
      x-sensitive: true
    GuardrailContentFilterType:
      type: string
      enum:
      - INSULTS
      - HATE
      - SEXUAL
      - VIOLENCE
      - MISCONDUCT
      - PROMPT_ATTACK
    GuardrailContentPolicyAction:
      type: string
      enum:
      - BLOCKED
    GuardrailContentPolicyAssessment:
      type: object
      properties:
        filters:
          allOf:
          - $ref: '#/components/schemas/GuardrailContentFilterList'
          description: The filter details of the policy assessment used in the Guardrails
            filter.
      description: The details of the policy assessment in the Guardrails filter.
    GuardrailCustomWord:
      type: object
      properties:
        match:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The match details for the custom word filter in the Guardrail.
        action:
          allOf:
          - $ref: '#/components/schemas/GuardrailWordPolicyAction'
          description: The action details for the custom word filter in the Guardrail.
      description: The custom word details for the filter in the Guardrail.
    GuardrailCustomWordList:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailCustomWord'
      x-sensitive: true
    GuardrailEvent:
      type: object
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/GuadrailAction'
          description: The guardrail action.
      description: A guardrail event.
    GuardrailIdentifierWithArn:
      type: string
      pattern: ^(([a-z0-9]+)|(arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:guardrail/[a-z0-9]+))$
      maxLength: 2048
    GuardrailManagedWord:
      type: object
      properties:
        match:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The match details for the managed word filter in the Guardrail.
        type:
          allOf:
          - $ref: '#/components/schemas/GuardrailManagedWordType'
          description: The type details for the managed word filter in the Guardrail.
        action:
          allOf:
          - $ref: '#/components/schemas/GuardrailWordPolicyAction'
          description: The action details for the managed word filter in the Guardrail.
      description: The managed word details for the filter in the Guardrail.
    GuardrailManagedWordList:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailManagedWord'
      x-sensitive: true
    GuardrailManagedWordType:
      type: string
      enum:
      - PROFANITY
    GuardrailPiiEntityFilter:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/GuardrailPiiEntityType'
          description: The type of PII the Guardrail filter has identified and removed.
        match:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The match to settings in the Guardrail filter to identify and
            remove PII.
        action:
          allOf:
          - $ref: '#/components/schemas/GuardrailSensitiveInformationPolicyAction'
          description: The action of the Guardrail filter to identify and remove PII.
      description: The Guardrail filter to identify and remove personally identifiable
        information (PII).
    GuardrailPiiEntityFilterList:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailPiiEntityFilter'
      x-sensitive: true
    GuardrailPiiEntityType:
      type: string
      enum:
      - ADDRESS
      - AGE
      - AWS_ACCESS_KEY
      - AWS_SECRET_KEY
      - CA_HEALTH_NUMBER
      - CA_SOCIAL_INSURANCE_NUMBER
      - CREDIT_DEBIT_CARD_CVV
      - CREDIT_DEBIT_CARD_EXPIRY
      - CREDIT_DEBIT_CARD_NUMBER
      - DRIVER_ID
      - EMAIL
      - INTERNATIONAL_BANK_ACCOUNT_NUMBER
      - IP_ADDRESS
      - LICENSE_PLATE
      - MAC_ADDRESS
      - NAME
      - PASSWORD
      - PHONE
      - PIN
      - SWIFT_CODE
      - UK_NATIONAL_HEALTH_SERVICE_NUMBER
      - UK_NATIONAL_INSURANCE_NUMBER
      - UK_UNIQUE_TAXPAYER_REFERENCE_NUMBER
      - URL
      - USERNAME
      - US_BANK_ACCOUNT_NUMBER
      - US_BANK_ROUTING_NUMBER
      - US_INDIVIDUAL_TAX_IDENTIFICATION_NUMBER
      - US_PASSPORT_NUMBER
      - US_SOCIAL_SECURITY_NUMBER
      - VEHICLE_IDENTIFICATION_NUMBER
    GuardrailRegexFilter:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name details for the regex filter used in the Guardrail.
        regex:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The regex details for the regex filter used in the Guardrail.
        match:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The match details for the regex filter used in the Guardrail.
        action:
          allOf:
          - $ref: '#/components/schemas/GuardrailSensitiveInformationPolicyAction'
          description: The action details for the regex filter used in the Guardrail.
      description: The details for the regex filter used in the Guardrail.
    GuardrailRegexFilterList:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailRegexFilter'
      x-sensitive: true
    GuardrailSensitiveInformationPolicyAction:
      type: string
      enum:
      - BLOCKED
      - ANONYMIZED
    GuardrailSensitiveInformationPolicyAssessment:
      type: object
      properties:
        piiEntities:
          allOf:
          - $ref: '#/components/schemas/GuardrailPiiEntityFilterList'
          description: The details of the PII entities used in the sensitive policy
            assessment for the Guardrail.
        regexes:
          allOf:
          - $ref: '#/components/schemas/GuardrailRegexFilterList'
          description: The details of the regexes used in the sensitive policy assessment
            for the Guardrail.
      description: The details of the sensitive policy assessment used in the Guardrail.
    GuardrailTopic:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name details on a specific topic in the Guardrail.
        type:
          allOf:
          - $ref: '#/components/schemas/GuardrailTopicType'
          description: The type details on a specific topic in the Guardrail.
        action:
          allOf:
          - $ref: '#/components/schemas/GuardrailTopicPolicyAction'
          description: The action details on a specific topic in the Guardrail.
      description: The details for a specific topic defined in the Guardrail.
    GuardrailTopicList:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailTopic'
      x-sensitive: true
    GuardrailTopicPolicyAction:
      type: string
      enum:
      - BLOCKED
    GuardrailTopicPolicyAssessment:
      type: object
      properties:
        topics:
          allOf:
          - $ref: '#/components/schemas/GuardrailTopicList'
          description: The topic details of the policy assessment used in the Guardrail.
      description: The details of the policy assessment used in the Guardrail.
    GuardrailTopicType:
      type: string
      enum:
      - DENY
    GuardrailTrace:
      type: object
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/GuardrailAction'
          description: The trace action details used with the Guardrail.
        traceId:
          allOf:
          - $ref: '#/components/schemas/TraceId'
          description: The details of the trace Id used in the Guardrail Trace.
        inputAssessments:
          allOf:
          - $ref: '#/components/schemas/GuardrailAssessmentList'
          description: The details of the input assessments used in the Guardrail
            Trace.
        outputAssessments:
          allOf:
          - $ref: '#/components/schemas/GuardrailAssessmentList'
          description: The details of the output assessments used in the Guardrail
            Trace.
      description: The trace details used in the Guardrail.
    GuardrailVersion:
      type: string
      pattern: ^(([1-9][0-9]{0,7})|(DRAFT))$
      minLength: 1
      maxLength: 5
    GuardrailWordPolicyAction:
      type: string
      enum:
      - BLOCKED
    GuardrailWordPolicyAssessment:
      type: object
      properties:
        customWords:
          allOf:
          - $ref: '#/components/schemas/GuardrailCustomWordList'
          description: The custom word details for words defined in the Guardrail
            filter.
        managedWordLists:
          allOf:
          - $ref: '#/components/schemas/GuardrailManagedWordList'
          description: The managed word lists for words defined in the Guardrail filter.
      description: The assessment details for words defined in the Guardrail filter.
    Identifier:
      type: string
      minLength: 1
      maxLength: 1024
    ImageBlock:
      type: object
      properties:
        format:
          allOf:
          - $ref: '#/components/schemas/ImageFormat'
          description: The format of the image.
        source:
          allOf:
          - $ref: '#/components/schemas/ImageSource'
          description: The source for the image.
      required:
      - format
      - source
      description: Image content for an invocation step.
    ImageFormat:
      type: string
      enum:
      - png
      - jpeg
      - gif
      - webp
    ImageInput:
      type: object
      properties:
        format:
          allOf:
          - $ref: '#/components/schemas/ImageInputFormat'
          description: The type of image in the result.
        source:
          allOf:
          - $ref: '#/components/schemas/ImageInputSource'
          description: The source of the image in the result.
      required:
      - format
      - source
      description: Details about an image in the result from a function in the action
        group invocation. You can specify images only when the function is a computer
        use action. For more information, see [Configure an Amazon Bedrock Agent to
        complete tasks with computer use tools](https://docs.aws.amazon.com/bedrock/latest/userguide/agent-computer-use.html).
    ImageInputFormat:
      type: string
      enum:
      - png
      - jpeg
      - gif
      - webp
    ImageInputSource:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/Blob'
        description: |-
          The raw image bytes for the image. If you use an Amazon Web Services SDK, you don't need to encode the image bytes in base64.
      description: |-
        Details about the source of an input image in the result from a function in the action group invocation.
    ImageInputs:
      type: array
      items:
        $ref: '#/components/schemas/ImageInput'
    ImageSource:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/Blob'
        description: |-
          The raw image bytes for the image. If you use an Amazon Web Services SDK, you don't need to encode the image bytes in base64.
      - allOf:
        - $ref: '#/components/schemas/S3Location'
        description: |-
          The path to the Amazon S3 bucket where the image is stored.
      description: |-
        The source for an image.
    ImplicitFilterConfiguration:
      type: object
      properties:
        metadataAttributes:
          allOf:
          - $ref: '#/components/schemas/MetadataAttributeSchemaList'
          description: Metadata that can be used in a filter.
        modelArn:
          allOf:
          - $ref: '#/components/schemas/BedrockModelArn'
          description: The model that generates the filter.
      required:
      - metadataAttributes
      - modelArn
      description: Settings for implicit filtering, where a model generates a metadata
        filter based on the prompt.
    InferenceConfig:
      type: object
      properties:
        textInferenceConfig:
          allOf:
          - $ref: '#/components/schemas/TextInferenceConfig'
          description: Configuration settings specific to text generation while generating
            responses using RetrieveAndGenerate.
      description: The configuration for inference settings when generating responses
        using RetrieveAndGenerate.
    InferenceConfiguration:
      type: object
      properties:
        temperature:
          allOf:
          - $ref: '#/components/schemas/Temperature'
          description: The likelihood of the model selecting higher-probability options
            while generating a response. A lower value makes the model more likely
            to choose higher-probability options, while a higher value makes the model
            more likely to choose lower-probability options.
        topP:
          allOf:
          - $ref: '#/components/schemas/TopP'
          description: While generating a response, the model determines the probability
            of the following token at each point of generation. The value that you
            set for `Top P` determines the number of most-likely candidates from which
            the model chooses the next token in the sequence. For example, if you
            set `topP` to 0.8, the model only selects the next token from the top
            80% of the probability distribution of next tokens.
        topK:
          allOf:
          - $ref: '#/components/schemas/TopK'
          description: While generating a response, the model determines the probability
            of the following token at each point of generation. The value that you
            set for `topK` is the number of most-likely candidates from which the
            model chooses the next token in the sequence. For example, if you set
            `topK` to 50, the model selects the next token from among the top 50 most
            likely choices.
        maximumLength:
          allOf:
          - $ref: '#/components/schemas/MaximumLength'
          description: The maximum number of tokens allowed in the generated response.
        stopSequences:
          allOf:
          - $ref: '#/components/schemas/StopSequences'
          description: A list of stop sequences. A stop sequence is a sequence of
            characters that causes the model to stop generating the response.
      description: Specifications about the inference parameters that were provided
        alongside the prompt. These are specified in the [PromptOverrideConfiguration](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_PromptOverrideConfiguration.html)
        object that was set when the agent was created or updated. For more information,
        see [Inference parameters for foundation models](https://docs.aws.amazon.com/bedrock/latest/userguide/model-parameters.html).
    InlineAgentFilePart:
      type: object
      properties:
        files:
          allOf:
          - $ref: '#/components/schemas/OutputFiles'
          description: Files containing intermediate response for the user.
      description: Contains intermediate response for code interpreter if any files
        have been generated.
    InlineAgentPayloadPart:
      type: object
      properties:
        bytes:
          allOf:
          - $ref: '#/components/schemas/PartBody'
          description: A part of the agent response in bytes.
        attribution:
          allOf:
          - $ref: '#/components/schemas/Attribution'
          description: Contains citations for a part of an agent response.
      description: Contains a part of an agent response and citations for it.
    InlineAgentResponseStream:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/InlineAgentPayloadPart'
        description: |-
          Contains a part of an agent response and citations for it.
      - allOf:
        - $ref: '#/components/schemas/InlineAgentTracePart'
        description: |-
          Contains information about the agent and session, alongside the agent's reasoning process and results from calling actions and querying knowledge bases and metadata about the trace. You can use the trace to understand how the agent arrived at the response it provided the customer. For more information, see [Trace events](https://docs.aws.amazon.com/bedrock/latest/userguide/trace-events.html).
      - allOf:
        - $ref: '#/components/schemas/InlineAgentReturnControlPayload'
        description: |-
          Contains the parameters and information that the agent elicited from the customer to carry out an action. This information is returned to the system and can be used in your own setup for fulfilling the action.
      - allOf:
        - $ref: '#/components/schemas/InternalServerException'
        description: |-
          An internal server error occurred. Retry your request.
      - allOf:
        - $ref: '#/components/schemas/ValidationException'
        description: |-
          Input validation failed. Check your request parameters and retry the request.
      - allOf:
        - $ref: '#/components/schemas/ResourceNotFoundException'
        description: |-
          The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
      - allOf:
        - $ref: '#/components/schemas/ServiceQuotaExceededException'
        description: |-
          The number of requests exceeds the service quota. Resubmit your request later.
      - allOf:
        - $ref: '#/components/schemas/ThrottlingException'
        description: |-
          The number of requests exceeds the limit. Resubmit your request later.
      - allOf:
        - $ref: '#/components/schemas/AccessDeniedException'
        description: |-
          The request is denied because of missing access permissions. Check your permissions and retry your request.
      - allOf:
        - $ref: '#/components/schemas/ConflictException'
        description: |-
          There was a conflict performing an operation. Resolve the conflict and retry your request.
      - allOf:
        - $ref: '#/components/schemas/DependencyFailedException'
        description: |-
          There was an issue with a dependency. Check the resource configurations and retry the request.
      - allOf:
        - $ref: '#/components/schemas/BadGatewayException'
        description: |-
          There was an issue with a dependency due to a server issue. Retry your request.
      - allOf:
        - $ref: '#/components/schemas/InlineAgentFilePart'
        description: |-
          Contains intermediate response for code interpreter if any files have been generated.
      description: |-
        The response from invoking the agent and associated citations and trace information.
    InlineAgentReturnControlPayload:
      type: object
      properties:
        invocationInputs:
          allOf:
          - $ref: '#/components/schemas/InvocationInputs'
          description: A list of objects that contain information about the parameters
            and inputs that need to be sent into the API operation or function, based
            on what the agent determines from its session with the user.
        invocationId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The identifier of the action group invocation.
      description: 'Contains information to return from the action group that the
        agent has predicted to invoke.


        This data type is used in the [InvokeAgent response](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html#API_agent-runtime_InvokeAgent_ResponseSyntax)
        API operation.'
    InlineAgentTracePart:
      type: object
      properties:
        sessionId:
          allOf:
          - $ref: '#/components/schemas/SessionId'
          description: The unique identifier of the session with the agent.
        trace:
          allOf:
          - $ref: '#/components/schemas/Trace'
          description: Contains one part of the agent's reasoning process and results
            from calling API actions and querying knowledge bases. You can use the
            trace to understand how the agent arrived at the response it provided
            the customer. For more information, see [Trace enablement](https://docs.aws.amazon.com/bedrock/latest/userguide/agents-test.html#trace-enablement).
      description: Contains information about the agent and session, alongside the
        agent's reasoning process and results from calling API actions and querying
        knowledge bases and metadata about the trace. You can use the trace to understand
        how the agent arrived at the response it provided the customer. For more information,
        see [Trace enablement](https://docs.aws.amazon.com/bedrock/latest/userguide/agents-test.html#trace-enablement).
    InlineBedrockModelConfigurations:
      type: object
      properties:
        performanceConfig:
          allOf:
          - $ref: '#/components/schemas/PerformanceConfiguration'
          description: The latency configuration for the model.
      description: Settings for a model called with InvokeInlineAgent.
    InlineSessionState:
      type: object
      properties:
        sessionAttributes:
          allOf:
          - $ref: '#/components/schemas/SessionAttributesMap'
          description: Contains attributes that persist across a session and the values
            of those attributes.
        promptSessionAttributes:
          allOf:
          - $ref: '#/components/schemas/PromptSessionAttributesMap'
          description: Contains attributes that persist across a session and the values
            of those attributes.
        returnControlInvocationResults:
          allOf:
          - $ref: '#/components/schemas/ReturnControlInvocationResults'
          description: 'Contains information about the results from the action group
            invocation. For more information, see [Return control to the agent developer](https://docs.aws.amazon.com/bedrock/latest/userguide/agents-returncontrol.html).


            If you include this field in the `sessionState` field, the `inputText`
            field will be ignored.'
        invocationId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The identifier of the invocation of an action. This value must
            match the `invocationId` returned in the `InvokeInlineAgent` response
            for the action whose results are provided in the `returnControlInvocationResults`
            field. For more information, see [Return control to the agent developer](https://docs.aws.amazon.com/bedrock/latest/userguide/agents-returncontrol.html).
        files:
          allOf:
          - $ref: '#/components/schemas/InputFiles'
          description: Contains information about the files used by code interpreter.
        conversationHistory:
          allOf:
          - $ref: '#/components/schemas/ConversationHistory'
          description: Contains the conversation history that persist across sessions.
      description: Contains parameters that specify various attributes that persist
        across a session or prompt. You can define session state attributes as key-value
        pairs when writing a [Lambda function](https://docs.aws.amazon.com/bedrock/latest/userguide/agents-lambda.html)
        for an action group or pass them when making an `InvokeInlineAgent` request.
        Use session state attributes to control and provide conversational context
        for your inline agent and to help customize your agent's behavior. For more
        information, see [Control session context](https://docs.aws.amazon.com/bedrock/latest/userguide/agents-session-state.html)
    InputFile:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the source file.
        source:
          allOf:
          - $ref: '#/components/schemas/FileSource'
          description: Specifies where the files are located.
        useCase:
          allOf:
          - $ref: '#/components/schemas/FileUseCase'
          description: Specifies how the source files will be used by the code interpreter.
      required:
      - name
      - source
      - useCase
      description: Contains details of the source files.
    InputFiles:
      type: array
      items:
        $ref: '#/components/schemas/InputFile'
    InputPrompt:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/TextPrompt'
        description: |-
          Contains information about the text prompt to optimize.
      description: |-
        Contains information about the prompt to optimize.
    InputQueryType:
      type: string
      enum:
      - TEXT
    InputText:
      type: string
      maxLength: 25000000
    Instruction:
      type: string
      minLength: 40
    InternalServerException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/NonBlankString'
        reason:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The reason for the exception. If the reason is `BEDROCK_MODEL_INVOCATION_SERVICE_UNAVAILABLE`,
            the model invocation service is unavailable. Retry your request.
      description: An internal server error occurred. Retry your request.
    InvocationDescription:
      type: string
      minLength: 1
      maxLength: 200
    InvocationIdentifier:
      type: string
      pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
    InvocationInput:
      type: object
      properties:
        traceId:
          allOf:
          - $ref: '#/components/schemas/TraceId'
          description: The unique identifier of the trace.
        invocationType:
          allOf:
          - $ref: '#/components/schemas/InvocationType'
          description: Specifies whether the agent is invoking an action group or
            a knowledge base.
        actionGroupInvocationInput:
          allOf:
          - $ref: '#/components/schemas/ActionGroupInvocationInput'
          description: Contains information about the action group to be invoked.
        knowledgeBaseLookupInput:
          allOf:
          - $ref: '#/components/schemas/KnowledgeBaseLookupInput'
          description: Contains details about the knowledge base to look up and the
            query to be made.
        codeInterpreterInvocationInput:
          allOf:
          - $ref: '#/components/schemas/CodeInterpreterInvocationInput'
          description: Contains information about the code interpreter to be invoked.
        agentCollaboratorInvocationInput:
          allOf:
          - $ref: '#/components/schemas/AgentCollaboratorInvocationInput'
          description: The collaborator's invocation input.
      description: Contains information pertaining to the action group or knowledge
        base that is being invoked.
    InvocationInputMember:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/ApiInvocationInput'
        description: |-
          Contains information about the API operation that the agent predicts should be called.
      - allOf:
        - $ref: '#/components/schemas/FunctionInvocationInput'
        description: |-
          Contains information about the function that the agent predicts should be called.
      description: |-
        Contains details about the API operation or function that the agent predicts should be called.

        This data type is used in the following API operations:

          * In the `returnControl` field of the [InvokeAgent response](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html#API_agent-runtime_InvokeAgent_ResponseSyntax)
    InvocationInputs:
      type: array
      items:
        $ref: '#/components/schemas/InvocationInputMember'
    InvocationResultMember:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/ApiResult'
        description: |-
          The result from the API response from the action group invocation.
      - allOf:
        - $ref: '#/components/schemas/FunctionResult'
        description: |-
          The result from the function from the action group invocation.
      description: |-
        A result from the invocation of an action. For more information, see [Return control to the agent developer](https://docs.aws.amazon.com/bedrock/latest/userguide/agents-returncontrol.html) and [Control session context](https://docs.aws.amazon.com/bedrock/latest/userguide/agents-session-state.html).

        This data type is used in the following API operations:

          * [InvokeAgent request](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html#API_agent-runtime_InvokeAgent_RequestSyntax)
    InvocationStep:
      type: object
      properties:
        sessionId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The unique identifier of the session containing the invocation
            step.
        invocationId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The unique identifier (in UUID format) for the invocation that
            includes the invocation step.
        invocationStepId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The unique identifier (in UUID format) for the invocation step.
        invocationStepTime:
          allOf:
          - $ref: '#/components/schemas/DateTimestamp'
          description: The timestamp for when the invocation step was created.
        payload:
          allOf:
          - $ref: '#/components/schemas/InvocationStepPayload'
          description: Payload content, such as text and images, for the invocation
            step.
      required:
      - sessionId
      - invocationId
      - invocationStepId
      - invocationStepTime
      - payload
      description: Stores fine-grained state checkpoints, including text and images,
        for each interaction in an invocation in a session. For more information about
        sessions, see [Store and retrieve conversation history and context with Amazon
        Bedrock sessions](https://docs.aws.amazon.com/bedrock/latest/userguide/sessions.html).
    InvocationStepPayload:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/BedrockSessionContentBlocks'
        description: |-
          The content for the invocation step.
      description: |-
        Payload content, such as text and images, for the invocation step.
    InvocationStepSummaries:
      type: array
      items:
        $ref: '#/components/schemas/InvocationStepSummary'
    InvocationStepSummary:
      type: object
      properties:
        sessionId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The unique identifier for the session associated with the invocation
            step.
        invocationId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: A unique identifier for the invocation in UUID format.
        invocationStepId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The unique identifier (in UUID format) for the invocation step.
        invocationStepTime:
          allOf:
          - $ref: '#/components/schemas/DateTimestamp'
          description: The timestamp for when the invocation step was created.
      required:
      - sessionId
      - invocationId
      - invocationStepId
      - invocationStepTime
      description: Contains details about an invocation step within an invocation
        in a session. For more information about sessions, see [Store and retrieve
        conversation history and context with Amazon Bedrock sessions](https://docs.aws.amazon.com/bedrock/latest/userguide/sessions.html).
    InvocationSummaries:
      type: array
      items:
        $ref: '#/components/schemas/InvocationSummary'
    InvocationSummary:
      type: object
      properties:
        sessionId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The unique identifier for the session associated with the invocation.
        invocationId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: A unique identifier for the invocation in UUID format.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/DateTimestamp'
          description: The timestamp for when the invocation was created.
      required:
      - sessionId
      - invocationId
      - createdAt
      description: Contains details about an invocation in a session. For more information
        about sessions, see [Store and retrieve conversation history and context with
        Amazon Bedrock sessions](https://docs.aws.amazon.com/bedrock/latest/userguide/sessions.html).
    InvocationType:
      type: string
      enum:
      - ACTION_GROUP
      - KNOWLEDGE_BASE
      - FINISH
      - ACTION_GROUP_CODE_INTERPRETER
      - AGENT_COLLABORATOR
    InvokeAgentRequest:
      type: object
      properties:
        sessionState:
          allOf:
          - $ref: '#/components/schemas/SessionState'
          description: 'Contains parameters that specify various attributes of the
            session. For more information, see [Control session context](https://docs.aws.amazon.com/bedrock/latest/userguide/agents-session-state.html).


            If you include `returnControlInvocationResults` in the `sessionState`
            field, the `inputText` field will be ignored.'
        agentId:
          allOf:
          - $ref: '#/components/schemas/AgentId'
          description: The unique identifier of the agent to use.
        agentAliasId:
          allOf:
          - $ref: '#/components/schemas/AgentAliasId'
          description: The alias of the agent to use.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/SessionId'
          description: The unique identifier of the session. Use the same value across
            requests to continue the same conversation.
        endSession:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether to end the session with the agent or not.
        enableTrace:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether to turn on the trace or not to track the
            agent's reasoning process. For more information, see [Trace enablement](https://docs.aws.amazon.com/bedrock/latest/userguide/agents-test.html#trace-events).
        inputText:
          allOf:
          - $ref: '#/components/schemas/InputText'
          description: 'The prompt text to send the agent.


            If you include `returnControlInvocationResults` in the `sessionState`
            field, the `inputText` field will be ignored.'
        memoryId:
          allOf:
          - $ref: '#/components/schemas/MemoryId'
          description: The unique identifier of the agent memory.
        bedrockModelConfigurations:
          allOf:
          - $ref: '#/components/schemas/BedrockModelConfigurations'
          description: Model performance settings for the request.
        streamingConfigurations:
          allOf:
          - $ref: '#/components/schemas/StreamingConfigurations'
          description: 'Specifies the configurations for streaming.


            To use agent streaming, you need permissions to perform the `bedrock:InvokeModelWithResponseStream`
            action.'
        sourceArn:
          allOf:
          - $ref: '#/components/schemas/AWSResourceARN'
          description: The ARN of the resource making the request.
      required:
      - agentId
      - agentAliasId
      - sessionId
    InvokeAgentResponse:
      type: object
      properties:
        completion:
          allOf:
          - $ref: '#/components/schemas/ResponseStream'
          description: The agent's response to the user prompt.
        contentType:
          allOf:
          - $ref: '#/components/schemas/MimeType'
          description: The MIME type of the input data in the request. The default
            value is `application/json`.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/SessionId'
          description: The unique identifier of the session with the agent.
        memoryId:
          allOf:
          - $ref: '#/components/schemas/MemoryId'
          description: The unique identifier of the agent memory.
      required:
      - completion
      - contentType
      - sessionId
    InvokeFlowRequest:
      type: object
      properties:
        flowIdentifier:
          allOf:
          - $ref: '#/components/schemas/FlowIdentifier'
          description: The unique identifier of the flow.
        flowAliasIdentifier:
          allOf:
          - $ref: '#/components/schemas/FlowAliasIdentifier'
          description: The unique identifier of the flow alias.
        inputs:
          allOf:
          - $ref: '#/components/schemas/FlowInputs'
          description: A list of objects, each containing information about an input
            into the flow.
        enableTrace:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether to return the trace for the flow or not.
            Traces track inputs and outputs for nodes in the flow. For more information,
            see [Track each step in your prompt flow by viewing its trace in Amazon
            Bedrock](https://docs.aws.amazon.com/bedrock/latest/userguide/flows-trace.html).
        modelPerformanceConfiguration:
          allOf:
          - $ref: '#/components/schemas/ModelPerformanceConfiguration'
          description: Model performance settings for the request.
        executionId:
          allOf:
          - $ref: '#/components/schemas/FlowExecutionId'
          description: The unique identifier for the current flow execution. If you
            don't provide a value, Amazon Bedrock creates the identifier for you.
      required:
      - flowIdentifier
      - flowAliasIdentifier
      - inputs
    InvokeFlowResponse:
      type: object
      properties:
        responseStream:
          allOf:
          - $ref: '#/components/schemas/FlowResponseStream'
          description: The output of the flow, returned as a stream. If there's an
            error, the error is returned.
        executionId:
          allOf:
          - $ref: '#/components/schemas/FlowExecutionId'
          description: The unique identifier for the current flow execution.
      required:
      - responseStream
    InvokeInlineAgentRequest:
      type: object
      properties:
        customerEncryptionKeyArn:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          description: The Amazon Resource Name (ARN) of the Amazon Web Services KMS
            key to use to encrypt your inline agent.
        foundationModel:
          allOf:
          - $ref: '#/components/schemas/ModelIdentifier'
          description: The [model identifier (ID)](https://docs.aws.amazon.com/bedrock/latest/userguide/model-ids.html#model-ids-arns)
            of the model to use for orchestration by the inline agent. For example,
            `meta.llama3-1-70b-instruct-v1:0`.
        instruction:
          allOf:
          - $ref: '#/components/schemas/Instruction'
          description: The instructions that tell the inline agent what it should
            do and how it should interact with users.
        idleSessionTTLInSeconds:
          allOf:
          - $ref: '#/components/schemas/SessionTTL'
          description: 'The number of seconds for which the inline agent should maintain
            session information. After this time expires, the subsequent `InvokeInlineAgent`
            request begins a new session.


            A user interaction remains active for the amount of time specified. If
            no conversation occurs during this time, the session expires and the data
            provided before the timeout is deleted.'
        actionGroups:
          allOf:
          - $ref: '#/components/schemas/AgentActionGroups'
          description: A list of action groups with each action group defining the
            action the inline agent needs to carry out.
        knowledgeBases:
          allOf:
          - $ref: '#/components/schemas/KnowledgeBases'
          description: Contains information of the knowledge bases to associate with.
        guardrailConfiguration:
          allOf:
          - $ref: '#/components/schemas/GuardrailConfigurationWithArn'
          description: The [guardrails](https://docs.aws.amazon.com/bedrock/latest/userguide/guardrails.html)
            to assign to the inline agent.
        promptOverrideConfiguration:
          allOf:
          - $ref: '#/components/schemas/PromptOverrideConfiguration'
          description: Configurations for advanced prompts used to override the default
            prompts to enhance the accuracy of the inline agent.
        agentCollaboration:
          allOf:
          - $ref: '#/components/schemas/AgentCollaboration'
          description: Defines how the inline collaborator agent handles information
            across multiple collaborator agents to coordinate a final response. The
            inline collaborator agent can also be the supervisor.
        collaboratorConfigurations:
          allOf:
          - $ref: '#/components/schemas/CollaboratorConfigurations'
          description: Settings for an inline agent collaborator called with [InvokeInlineAgent](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeInlineAgent.html).
        sessionId:
          allOf:
          - $ref: '#/components/schemas/SessionId'
          description: The unique identifier of the session. Use the same value across
            requests to continue the same conversation.
        endSession:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether to end the session with the inline agent
            or not.
        enableTrace:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether to turn on the trace or not to track the
            agent's reasoning process. For more information, see [Using trace](https://docs.aws.amazon.com/bedrock/latest/userguide/trace-events.html).
        inputText:
          allOf:
          - $ref: '#/components/schemas/InputText'
          description: 'The prompt text to send to the agent.


            If you include `returnControlInvocationResults` in the `sessionState`
            field, the `inputText` field will be ignored.'
        streamingConfigurations:
          allOf:
          - $ref: '#/components/schemas/StreamingConfigurations'
          description: 'Specifies the configurations for streaming.


            To use agent streaming, you need permissions to perform the `bedrock:InvokeModelWithResponseStream`
            action.'
        inlineSessionState:
          allOf:
          - $ref: '#/components/schemas/InlineSessionState'
          description: 'Parameters that specify the various attributes of a sessions.
            You can include attributes for the session or prompt or, if you configured
            an action group to return control, results from invocation of the action
            group. For more information, see [Control session context](https://docs.aws.amazon.com/bedrock/latest/userguide/agents-session-state.html).


            If you include `returnControlInvocationResults` in the `sessionState`
            field, the `inputText` field will be ignored.'
        collaborators:
          allOf:
          - $ref: '#/components/schemas/Collaborators'
          description: List of collaborator inline agents.
        bedrockModelConfigurations:
          allOf:
          - $ref: '#/components/schemas/InlineBedrockModelConfigurations'
          description: Model settings for the request.
      required:
      - foundationModel
      - instruction
      - sessionId
    InvokeInlineAgentResponse:
      type: object
      properties:
        completion:
          allOf:
          - $ref: '#/components/schemas/InlineAgentResponseStream'
          description: ''
        contentType:
          allOf:
          - $ref: '#/components/schemas/MimeType'
          description: The MIME type of the input data in the request. The default
            value is application/json.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/SessionId'
          description: The unique identifier of the session with the agent.
      required:
      - completion
      - contentType
      - sessionId
    KmsKeyArn:
      type: string
      pattern: ^arn:aws(|-cn|-us-gov):kms:[a-zA-Z0-9-]*:[0-9]{12}:key/[a-zA-Z0-9-]{36}$
      minLength: 1
      maxLength: 2048
    KnowledgeBase:
      type: object
      properties:
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/KnowledgeBaseId'
          description: The unique identifier for a knowledge base associated with
            the inline agent.
        description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The description of the knowledge base associated with the inline
            agent.
        retrievalConfiguration:
          allOf:
          - $ref: '#/components/schemas/KnowledgeBaseRetrievalConfiguration'
          description: The configurations to apply to the knowledge base during query.
            For more information, see [Query configurations](https://docs.aws.amazon.com/bedrock/latest/userguide/kb-test-config.html).
      required:
      - knowledgeBaseId
      - description
      description: Details of the knowledge base associated withe inline agent.
    KnowledgeBaseArn:
      type: string
      pattern: ^arn:aws(|-cn|-us-gov):bedrock:[a-zA-Z0-9-]*:[0-9]{12}:knowledge-base/[0-9a-zA-Z]+$
      maxLength: 128
    KnowledgeBaseConfiguration:
      type: object
      properties:
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/KnowledgeBaseId'
          description: The unique identifier for a knowledge base attached to the
            agent.
        retrievalConfiguration:
          allOf:
          - $ref: '#/components/schemas/KnowledgeBaseRetrievalConfiguration'
          description: The configurations to apply to the knowledge base during query.
            For more information, see [Query configurations](https://docs.aws.amazon.com/bedrock/latest/userguide/kb-test-config.html).
      required:
      - knowledgeBaseId
      - retrievalConfiguration
      description: Configurations to apply to a knowledge base attached to the agent
        during query. For more information, see [Knowledge base retrieval configurations](https://docs.aws.amazon.com/bedrock/latest/userguide/agents-session-state.html#session-state-kb).
    KnowledgeBaseConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/KnowledgeBaseConfiguration'
    KnowledgeBaseId:
      type: string
      pattern: ^[0-9a-zA-Z]+$
      maxLength: 10
    KnowledgeBaseLookupInput:
      type: object
      properties:
        text:
          allOf:
          - $ref: '#/components/schemas/KnowledgeBaseLookupInputString'
          description: The query made to the knowledge base.
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/TraceKnowledgeBaseId'
          description: The unique identifier of the knowledge base to look up.
      description: Contains details about the knowledge base to look up and the query
        to be made.
    KnowledgeBaseLookupInputString:
      type: string
    KnowledgeBaseLookupOutput:
      type: object
      properties:
        retrievedReferences:
          allOf:
          - $ref: '#/components/schemas/RetrievedReferences'
          description: Contains metadata about the sources cited for the generated
            response.
      description: Contains details about the results from looking up the knowledge
        base.
    KnowledgeBaseQuery:
      type: object
      properties:
        text:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The text of the query made to the knowledge base.
      required:
      - text
      description: "Contains the query made to the knowledge base.\n\nThis data type\
        \ is used in the following API operations:\n\n  * [Retrieve request](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_Retrieve.html#API_agent-runtime_Retrieve_RequestSyntax)\
        \ – in the `retrievalQuery` field"
    KnowledgeBaseRetrievalConfiguration:
      type: object
      properties:
        vectorSearchConfiguration:
          allOf:
          - $ref: '#/components/schemas/KnowledgeBaseVectorSearchConfiguration'
          description: Contains details about how the results from the vector search
            should be returned. For more information, see [Query configurations](https://docs.aws.amazon.com/bedrock/latest/userguide/kb-test-config.html).
      required:
      - vectorSearchConfiguration
      description: "Contains configurations for knowledge base query. For more information,\
        \ see [Query configurations](https://docs.aws.amazon.com/bedrock/latest/userguide/kb-test-config.html).\n\
        \nThis data type is used in the following API operations:\n\n  * [Retrieve\
        \ request](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_Retrieve.html#API_agent-runtime_Retrieve_RequestSyntax)\
        \ – in the `retrievalConfiguration` field\n\n  * [RetrieveAndGenerate request](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrieveAndGenerate.html#API_agent-runtime_RetrieveAndGenerate_RequestSyntax)\
        \ – in the `retrievalConfiguration` field"
    KnowledgeBaseRetrievalResult:
      type: object
      properties:
        content:
          allOf:
          - $ref: '#/components/schemas/RetrievalResultContent'
          description: Contains information about the content of the chunk.
        location:
          allOf:
          - $ref: '#/components/schemas/RetrievalResultLocation'
          description: Contains information about the location of the data source.
        score:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The level of relevance of the result to the query.
        metadata:
          allOf:
          - $ref: '#/components/schemas/RetrievalResultMetadata'
          description: Contains metadata attributes and their values for the file
            in the data source. For more information, see [Metadata and filtering](https://docs.aws.amazon.com/bedrock/latest/userguide/knowledge-base-ds.html#kb-ds-metadata).
      required:
      - content
      description: "Details about a result from querying the knowledge base.\n\nThis\
        \ data type is used in the following API operations:\n\n  * [Retrieve response](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_Retrieve.html#API_agent-runtime_Retrieve_ResponseSyntax)\
        \ – in the `retrievalResults` field"
    KnowledgeBaseRetrievalResults:
      type: array
      items:
        $ref: '#/components/schemas/KnowledgeBaseRetrievalResult'
      x-sensitive: true
    KnowledgeBaseRetrieveAndGenerateConfiguration:
      type: object
      properties:
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/KnowledgeBaseId'
          description: The unique identifier of the knowledge base that is queried.
        modelArn:
          allOf:
          - $ref: '#/components/schemas/BedrockModelArn'
          description: The ARN of the foundation model or [inference profile](https://docs.aws.amazon.com/bedrock/latest/userguide/cross-region-inference.html)
            used to generate a response.
        retrievalConfiguration:
          allOf:
          - $ref: '#/components/schemas/KnowledgeBaseRetrievalConfiguration'
          description: Contains configurations for how to retrieve and return the
            knowledge base query.
        generationConfiguration:
          allOf:
          - $ref: '#/components/schemas/GenerationConfiguration'
          description: Contains configurations for response generation based on the
            knowledge base query results.
        orchestrationConfiguration:
          allOf:
          - $ref: '#/components/schemas/OrchestrationConfiguration'
          description: Settings for how the model processes the prompt prior to retrieval
            and generation.
      required:
      - knowledgeBaseId
      - modelArn
      description: "Contains details about the resource being queried.\n\nThis data\
        \ type is used in the following API operations:\n\n  * [Retrieve request](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_Retrieve.html#API_agent-runtime_Retrieve_RequestSyntax)\
        \ – in the `knowledgeBaseConfiguration` field\n\n  * [RetrieveAndGenerate\
        \ request](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrieveAndGenerate.html#API_agent-runtime_RetrieveAndGenerate_RequestSyntax)\
        \ – in the `knowledgeBaseConfiguration` field"
    KnowledgeBaseVectorSearchConfiguration:
      type: object
      properties:
        numberOfResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of source chunks to retrieve.
        overrideSearchType:
          allOf:
          - $ref: '#/components/schemas/SearchType'
          description: By default, Amazon Bedrock decides a search strategy for you.
            If you're using an Amazon OpenSearch Serverless vector store that contains
            a filterable text field, you can specify whether to query the knowledge
            base with a `HYBRID` search using both vector embeddings and raw text,
            or `SEMANTIC` search using only vector embeddings. For other vector store
            configurations, only `SEMANTIC` search is available. For more information,
            see [Test a knowledge base](https://docs.aws.amazon.com/bedrock/latest/userguide/knowledge-base-test.html).
        filter:
          allOf:
          - $ref: '#/components/schemas/RetrievalFilter'
          description: Specifies the filters to use on the metadata in the knowledge
            base data sources before returning results. For more information, see
            [Query configurations](https://docs.aws.amazon.com/bedrock/latest/userguide/kb-test-config.html).
        rerankingConfiguration:
          allOf:
          - $ref: '#/components/schemas/VectorSearchRerankingConfiguration'
          description: Contains configurations for reranking the retrieved results.
            For more information, see [Improve the relevance of query responses with
            a reranker model](https://docs.aws.amazon.com/bedrock/latest/userguide/rerank.html).
        implicitFilterConfiguration:
          allOf:
          - $ref: '#/components/schemas/ImplicitFilterConfiguration'
          description: Settings for implicit filtering.
      description: "Configurations for how to perform the search query and return\
        \ results. For more information, see [Query configurations](https://docs.aws.amazon.com/bedrock/latest/userguide/kb-test-config.html).\n\
        \nThis data type is used in the following API operations:\n\n  * [Retrieve\
        \ request](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_Retrieve.html#API_agent-runtime_Retrieve_RequestSyntax)\
        \ – in the `vectorSearchConfiguration` field\n\n  * [RetrieveAndGenerate request](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrieveAndGenerate.html#API_agent-runtime_RetrieveAndGenerate_RequestSyntax)\
        \ – in the `vectorSearchConfiguration` field"
    KnowledgeBases:
      type: array
      items:
        $ref: '#/components/schemas/KnowledgeBase'
    LambdaArn:
      type: string
    LambdaResourceArn:
      type: string
      pattern: ^arn:(aws[a-zA-Z-]*)?:lambda:[a-z]{2}(-gov)?-[a-z]+-\d{1}:\d{12}:function:[a-zA-Z0-9-_\.]+(:(\$LATEST|[a-zA-Z0-9-_]+))?$
      maxLength: 2048
    ListInvocationStepsRequest:
      type: object
      properties:
        invocationIdentifier:
          allOf:
          - $ref: '#/components/schemas/InvocationIdentifier'
          description: The unique identifier (in UUID format) for the invocation to
            list invocation steps for.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If the total number of results is greater than the `maxResults`
            value provided in the request, enter the token returned in the `nextToken`
            field in the response in this field to return the next batch of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in the response. If
            the total number of results is greater than this value, use the token
            returned in the response in the `nextToken` field when making another
            request to return the next batch of results.
        sessionIdentifier:
          allOf:
          - $ref: '#/components/schemas/SessionIdentifier'
          description: The unique identifier for the session associated with the invocation
            steps. You can specify either the session's `sessionId` or its Amazon
            Resource Name (ARN).
      required:
      - sessionIdentifier
    ListInvocationStepsResponse:
      type: object
      properties:
        invocationStepSummaries:
          allOf:
          - $ref: '#/components/schemas/InvocationStepSummaries'
          description: A list of summaries for each invocation step associated with
            a session and if you specified it, an invocation within the session.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If the total number of results is greater than the `maxResults`
            value provided in the request, use this token when making another request
            in the `nextToken` field to return the next batch of results.
      required:
      - invocationStepSummaries
    ListInvocationsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If the total number of results is greater than the `maxResults`
            value provided in the request, enter the token returned in the `nextToken`
            field in the response in this field to return the next batch of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in the response. If
            the total number of results is greater than this value, use the token
            returned in the response in the `nextToken` field when making another
            request to return the next batch of results.
        sessionIdentifier:
          allOf:
          - $ref: '#/components/schemas/SessionIdentifier'
          description: The unique identifier for the session to list invocations for.
            You can specify either the session's `sessionId` or its Amazon Resource
            Name (ARN).
      required:
      - sessionIdentifier
    ListInvocationsResponse:
      type: object
      properties:
        invocationSummaries:
          allOf:
          - $ref: '#/components/schemas/InvocationSummaries'
          description: A list of invocation summaries associated with the session.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If the total number of results is greater than the `maxResults`
            value provided in the request, use this token when making another request
            in the `nextToken` field to return the next batch of results.
      required:
      - invocationSummaries
    ListSessionsRequest:
      type: object
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in the response. If
            the total number of results is greater than this value, use the token
            returned in the response in the `nextToken` field when making another
            request to return the next batch of results.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If the total number of results is greater than the `maxResults`
            value provided in the request, enter the token returned in the `nextToken`
            field in the response in this field to return the next batch of results.
    ListSessionsResponse:
      type: object
      properties:
        sessionSummaries:
          allOf:
          - $ref: '#/components/schemas/SessionSummaries'
          description: A list of summaries for each session in your Amazon Web Services
            account.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If the total number of results is greater than the `maxResults`
            value provided in the request, use this token when making another request
            in the `nextToken` field to return the next batch of results.
      required:
      - sessionSummaries
    ListTagsForResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/TaggableResourcesArn'
          description: The Amazon Resource Name (ARN) of the resource for which to
            list tags.
      required:
      - resourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          description: The key-value pairs for the tags associated with the resource.
    MaxResults:
      type: integer
      minimum: 1
      maximum: 1000
      description: Max Results.
    MaxTokens:
      type: integer
      minimum: 0
      maximum: 65536
    MaximumLength:
      type: integer
      minimum: 0
      maximum: 8192
    Memories:
      type: array
      items:
        $ref: '#/components/schemas/Memory'
    Memory:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/MemorySessionSummary'
        description: |-
          Contains summary of a session.
      description: |-
        Contains sessions summaries.
    MemoryId:
      type: string
      pattern: ^[0-9a-zA-Z._:-]+$
      minLength: 2
      maxLength: 100
    MemorySessionSummary:
      type: object
      properties:
        memoryId:
          allOf:
          - $ref: '#/components/schemas/MemoryId'
          description: The unique identifier of the memory where the session summary
            is stored.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/SessionId'
          description: The identifier for this session.
        sessionStartTime:
          allOf:
          - $ref: '#/components/schemas/DateTimestamp'
          description: The start time for this session.
        sessionExpiryTime:
          allOf:
          - $ref: '#/components/schemas/DateTimestamp'
          description: The time when the memory duration for the session is set to
            end.
        summaryText:
          allOf:
          - $ref: '#/components/schemas/SummaryText'
          description: The summarized text for this session.
      description: Contains details of a session summary.
    MemoryType:
      type: string
      enum:
      - SESSION_SUMMARY
    Message:
      type: object
      properties:
        role:
          allOf:
          - $ref: '#/components/schemas/ConversationRole'
          description: The message's role.
        content:
          allOf:
          - $ref: '#/components/schemas/ContentBlocks'
          description: The message's content.
      required:
      - role
      - content
      description: Details about a message.
    Messages:
      type: array
      items:
        $ref: '#/components/schemas/Message'
    Metadata:
      type: object
      properties:
        usage:
          allOf:
          - $ref: '#/components/schemas/Usage'
          description: Contains details of the foundation model usage.
      description: Provides details of the foundation model.
    MetadataAttributeSchema:
      type: object
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The attribute's key.
        type:
          allOf:
          - $ref: '#/components/schemas/AttributeType'
          description: The attribute's type.
        description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The attribute's description.
      required:
      - key
      - type
      - description
      description: Details about a metadata attribute.
    MetadataAttributeSchemaList:
      type: array
      items:
        $ref: '#/components/schemas/MetadataAttributeSchema'
    MetadataConfigurationForReranking:
      type: object
      properties:
        selectionMode:
          allOf:
          - $ref: '#/components/schemas/RerankingMetadataSelectionMode'
          description: Specifies whether to consider all metadata when reranking,
            or only the metadata that you select. If you specify `SELECTIVE`, include
            the `selectiveModeConfiguration` field.
        selectiveModeConfiguration:
          allOf:
          - $ref: '#/components/schemas/RerankingMetadataSelectiveModeConfiguration'
          description: Contains configurations for the metadata fields to include
            or exclude when considering reranking.
      required:
      - selectionMode
      description: Contains configurations for the metadata to use in reranking.
    MimeType:
      type: string
    ModelIdentifier:
      type: string
      pattern: (^arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:(([0-9]{12}:custom-model/[a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}(([:][a-z0-9-]{1,63}){0,2})?/[a-z0-9]{12})|(:foundation-model/([a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}([.]?[a-z0-9-]{1,63})([:][a-z0-9-]{1,63}){0,2})))|(([a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}([.]?[a-z0-9-]{1,63})([:][a-z0-9-]{1,63}){0,2}))|(([0-9a-zA-Z][_-]?)+))$|(^arn:aws(|-us-gov|-cn|-iso|-iso-b):bedrock:(|[0-9a-z-]{1,20}):(|[0-9]{12}):inference-profile/[a-zA-Z0-9-:.]+)$
      minLength: 1
      maxLength: 2048
    ModelInvocationInput:
      type: object
      properties:
        traceId:
          allOf:
          - $ref: '#/components/schemas/TraceId'
          description: The unique identifier of the trace.
        text:
          allOf:
          - $ref: '#/components/schemas/PromptText'
          description: The text that prompted the agent at this step.
        type:
          allOf:
          - $ref: '#/components/schemas/PromptType'
          description: The step in the agent sequence.
        overrideLambda:
          allOf:
          - $ref: '#/components/schemas/LambdaArn'
          description: The ARN of the Lambda function to use when parsing the raw
            foundation model output in parts of the agent sequence.
        promptCreationMode:
          allOf:
          - $ref: '#/components/schemas/CreationMode'
          description: Specifies whether the default prompt template was `OVERRIDDEN`.
            If it was, the `basePromptTemplate` that was set in the [PromptOverrideConfiguration](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_PromptOverrideConfiguration.html)
            object when the agent was created or updated is used instead.
        inferenceConfiguration:
          allOf:
          - $ref: '#/components/schemas/InferenceConfiguration'
          description: Specifications about the inference parameters that were provided
            alongside the prompt. These are specified in the [PromptOverrideConfiguration](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_PromptOverrideConfiguration.html)
            object that was set when the agent was created or updated. For more information,
            see [Inference parameters for foundation models](https://docs.aws.amazon.com/bedrock/latest/userguide/model-parameters.html).
        parserMode:
          allOf:
          - $ref: '#/components/schemas/CreationMode'
          description: Specifies whether to override the default parser Lambda function
            when parsing the raw foundation model output in the part of the agent
            sequence defined by the `promptType`.
        foundationModel:
          allOf:
          - $ref: '#/components/schemas/ModelIdentifier'
          description: The identifier of a foundation model.
      description: "The input for the pre-processing step.\n\n  * The `type` matches\
        \ the agent step.\n\n  * The `text` contains the prompt.\n\n  * The `inferenceConfiguration`,\
        \ `parserMode`, and `overrideLambda` values are set in the [PromptOverrideConfiguration](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_PromptOverrideConfiguration.html)\
        \ object that was set when the agent was created or updated."
    ModelNotReadyException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/NonBlankString'
      description: The model specified in the request is not ready to serve inference
        requests. The AWS SDK will automatically retry the operation up to 5 times.
        For information about configuring automatic retries, see [Retry behavior](https://docs.aws.amazon.com/sdkref/latest/guide/feature-retry-behavior.html)
        in the _AWS SDKs and Tools_ reference guide.
    ModelPerformanceConfiguration:
      type: object
      properties:
        performanceConfig:
          allOf:
          - $ref: '#/components/schemas/PerformanceConfiguration'
          description: The latency configuration for the model.
      description: The performance configuration for a model called with InvokeFlow.
    Name:
      type: string
      pattern: ^([0-9a-zA-Z][_-]?){1,100}$
    NextToken:
      type: string
      pattern: ^\S*$
      minLength: 1
      maxLength: 2048
    NodeInputName:
      type: string
      pattern: ^[a-zA-Z]([_]?[0-9a-zA-Z]){0,99}$
    NodeName:
      type: string
      pattern: ^[a-zA-Z]([_]?[0-9a-zA-Z]){0,99}$
    NodeOutputName:
      type: string
      pattern: ^[a-zA-Z]([_]?[0-9a-zA-Z]){0,99}$
    NodeType:
      type: string
      enum:
      - FlowInputNode
      - FlowOutputNode
      - LambdaFunctionNode
      - KnowledgeBaseNode
      - PromptNode
      - ConditionNode
      - LexNode
    NonBlankString:
      type: string
      pattern: ^[\s\S]*$
    Observation:
      type: object
      properties:
        traceId:
          allOf:
          - $ref: '#/components/schemas/TraceId'
          description: The unique identifier of the trace.
        type:
          allOf:
          - $ref: '#/components/schemas/Type'
          description: "Specifies what kind of information the agent returns in the\
            \ observation. The following values are possible.\n\n  * `ACTION_GROUP`\
            \ – The agent returns the result of an action group.\n\n  * `KNOWLEDGE_BASE`\
            \ – The agent returns information from a knowledge base.\n\n  * `FINISH`\
            \ – The agent returns a final response to the user with no follow-up.\n\
            \n  * `ASK_USER` – The agent asks the user a question.\n\n  * `REPROMPT`\
            \ – The agent prompts the user again for the same information."
        actionGroupInvocationOutput:
          allOf:
          - $ref: '#/components/schemas/ActionGroupInvocationOutput'
          description: Contains the JSON-formatted string returned by the API invoked
            by the action group.
        agentCollaboratorInvocationOutput:
          allOf:
          - $ref: '#/components/schemas/AgentCollaboratorInvocationOutput'
          description: A collaborator's invocation output.
        knowledgeBaseLookupOutput:
          allOf:
          - $ref: '#/components/schemas/KnowledgeBaseLookupOutput'
          description: Contains details about the results from looking up the knowledge
            base.
        finalResponse:
          allOf:
          - $ref: '#/components/schemas/FinalResponse'
          description: Contains details about the response to the user.
        repromptResponse:
          allOf:
          - $ref: '#/components/schemas/RepromptResponse'
          description: Contains details about the response to reprompt the input.
        codeInterpreterInvocationOutput:
          allOf:
          - $ref: '#/components/schemas/CodeInterpreterInvocationOutput'
          description: Contains the JSON-formatted string returned by the API invoked
            by the code interpreter.
      description: Contains the result or output of an action group or knowledge base,
        or the response to the user.
    OptimizePromptRequest:
      type: object
      properties:
        input:
          allOf:
          - $ref: '#/components/schemas/InputPrompt'
          description: Contains the prompt to optimize.
        targetModelId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier of the model that you want to optimize
            the prompt for.
      required:
      - input
      - targetModelId
    OptimizePromptResponse:
      type: object
      properties:
        optimizedPrompt:
          allOf:
          - $ref: '#/components/schemas/OptimizedPromptStream'
          description: The prompt after being optimized for the task.
      required:
      - optimizedPrompt
    OptimizedPrompt:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/TextPrompt'
        description: |-
          Contains information about the text in the prompt that was optimized.
      description: |-
        Contains information about the optimized prompt.
    OptimizedPromptEvent:
      type: object
      properties:
        optimizedPrompt:
          allOf:
          - $ref: '#/components/schemas/OptimizedPrompt'
          description: Contains information about the optimized prompt.
      description: An event in which the prompt was optimized.
    OptimizedPromptStream:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/OptimizedPromptEvent'
        description: |-
          An event in which the prompt was optimized.
      - allOf:
        - $ref: '#/components/schemas/AnalyzePromptEvent'
        description: |-
          An event in which the prompt was analyzed in preparation for optimization.
      - allOf:
        - $ref: '#/components/schemas/InternalServerException'
        description: |-
          An internal server error occurred. Retry your request.
      - allOf:
        - $ref: '#/components/schemas/ThrottlingException'
        description: |-
          Your request was throttled because of service-wide limitations. Resubmit your request later or in a different region. You can also purchase [Provisioned Throughput](https://docs.aws.amazon.com/bedrock/latest/userguide/prov-throughput.html) to increase the rate or number of tokens you can process.
      - allOf:
        - $ref: '#/components/schemas/ValidationException'
        description: |-
          Input validation failed. Check your request parameters and retry the request.
      - allOf:
        - $ref: '#/components/schemas/DependencyFailedException'
        description: |-
          There was an issue with a dependency. Check the resource configurations and retry the request.
      - allOf:
        - $ref: '#/components/schemas/AccessDeniedException'
        description: |-
          The request is denied because of missing access permissions. Check your permissions and retry your request.
      - allOf:
        - $ref: '#/components/schemas/BadGatewayException'
        description: |-
          There was an issue with a dependency due to a server issue. Retry your request.
      description: |-
        The stream containing events in the prompt optimization process.
    OrchestrationConfiguration:
      type: object
      properties:
        promptTemplate:
          allOf:
          - $ref: '#/components/schemas/PromptTemplate'
          description: Contains the template for the prompt that's sent to the model.
            Orchestration prompts must include the `$conversation_history$` and `$output_format_instructions$`
            variables. For more information, see [Use placeholder variables](https://docs.aws.amazon.com/bedrock/latest/userguide/prompt-placeholders.html)
            in the user guide.
        inferenceConfig:
          allOf:
          - $ref: '#/components/schemas/InferenceConfig'
          description: Configuration settings for inference when using RetrieveAndGenerate
            to generate responses while using a knowledge base as a source.
        additionalModelRequestFields:
          allOf:
          - $ref: '#/components/schemas/AdditionalModelRequestFields'
          description: Additional model parameters and corresponding values not included
            in the textInferenceConfig structure for a knowledge base. This allows
            users to provide custom model parameters specific to the language model
            being used.
        queryTransformationConfiguration:
          allOf:
          - $ref: '#/components/schemas/QueryTransformationConfiguration'
          description: To split up the prompt and retrieve multiple sources, set the
            transformation type to `QUERY_DECOMPOSITION`.
        performanceConfig:
          allOf:
          - $ref: '#/components/schemas/PerformanceConfiguration'
          description: The latency configuration for the model.
      description: Settings for how the model processes the prompt prior to retrieval
        and generation.
    OrchestrationModelInvocationOutput:
      type: object
      properties:
        traceId:
          allOf:
          - $ref: '#/components/schemas/TraceId'
          description: The unique identifier of the trace.
        rawResponse:
          allOf:
          - $ref: '#/components/schemas/RawResponse'
          description: Contains details of the raw response from the foundation model
            output.
        metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          description: Contains information about the foundation model output from
            the orchestration step.
        reasoningContent:
          allOf:
          - $ref: '#/components/schemas/ReasoningContentBlock'
          description: Contains content about the reasoning that the model made during
            the orchestration step.
      description: The foundation model output from the orchestration step.
    OrchestrationTrace:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/Rationale'
        description: |-
          Details about the reasoning, based on the input, that the agent uses to justify carrying out an action group or getting information from a knowledge base.
      - allOf:
        - $ref: '#/components/schemas/InvocationInput'
        description: |-
          Contains information pertaining to the action group or knowledge base that is being invoked.
      - allOf:
        - $ref: '#/components/schemas/Observation'
        description: |-
          Details about the observation (the output of the action group Lambda or knowledge base) made by the agent.
      - allOf:
        - $ref: '#/components/schemas/ModelInvocationInput'
        description: |-
          The input for the orchestration step.

            * The `type` is `ORCHESTRATION`.

            * The `text` contains the prompt.

            * The `inferenceConfiguration`, `parserMode`, and `overrideLambda` values are set in the [PromptOverrideConfiguration](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_PromptOverrideConfiguration.html) object that was set when the agent was created or updated.
      - allOf:
        - $ref: '#/components/schemas/OrchestrationModelInvocationOutput'
        description: |-
          Contains information pertaining to the output from the foundation model that is being invoked.
      description: |-
        Details about the orchestration step, in which the agent determines the order in which actions are executed and which knowledge bases are retrieved.
      x-sensitive: true
    OutputFile:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the file containing response from code interpreter.
        type:
          allOf:
          - $ref: '#/components/schemas/MimeType'
          description: The type of file that contains response from the code interpreter.
        bytes:
          allOf:
          - $ref: '#/components/schemas/FileBody'
          description: The byte count of files that contains response from code interpreter.
      description: Contains details of the response from code interpreter.
    OutputFiles:
      type: array
      items:
        $ref: '#/components/schemas/OutputFile'
    OutputString:
      type: string
    Parameter:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the parameter.
        type:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of the parameter.
        value:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The value of the parameter.
      description: A parameter for the API request or function.
    ParameterDescription:
      type: string
      minLength: 1
      maxLength: 500
    ParameterDetail:
      type: object
      properties:
        description:
          allOf:
          - $ref: '#/components/schemas/ParameterDescription'
          description: A description of the parameter. Helps the foundation model
            determine how to elicit the parameters from the user.
        type:
          allOf:
          - $ref: '#/components/schemas/ParameterType'
          description: The data type of the parameter.
        required:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the parameter is required for the agent to complete
            the function for action group invocation.
      required:
      - type
      description: Contains details about a parameter in a function for an action
        group.
    ParameterList:
      type: array
      items:
        $ref: '#/components/schemas/Parameter'
    ParameterMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ParameterDetail'
    ParameterName:
      type: string
      pattern: ^([0-9a-zA-Z][_-]?){1,100}$
    ParameterType:
      type: string
      enum:
      - string
      - number
      - integer
      - boolean
      - array
    Parameters:
      type: array
      items:
        $ref: '#/components/schemas/Parameter'
    PartBody:
      type: string
      format: byte
      maxLength: 1000000
      x-sensitive: true
    Payload:
      type: string
    PayloadPart:
      type: object
      properties:
        bytes:
          allOf:
          - $ref: '#/components/schemas/PartBody'
          description: A part of the agent response in bytes.
        attribution:
          allOf:
          - $ref: '#/components/schemas/Attribution'
          description: Contains citations for a part of an agent response.
      description: Contains a part of an agent response and citations for it.
    PayloadType:
      type: string
      enum:
      - TEXT
      - RETURN_CONTROL
    PerformanceConfigLatency:
      type: string
      enum:
      - standard
      - optimized
    PerformanceConfiguration:
      type: object
      properties:
        latency:
          allOf:
          - $ref: '#/components/schemas/PerformanceConfigLatency'
          description: To use a latency-optimized version of the model, set to `optimized`.
      description: Performance settings for a model.
    PostProcessingModelInvocationOutput:
      type: object
      properties:
        traceId:
          allOf:
          - $ref: '#/components/schemas/TraceId'
          description: The unique identifier of the trace.
        parsedResponse:
          allOf:
          - $ref: '#/components/schemas/PostProcessingParsedResponse'
          description: Details about the response from the Lambda parsing of the output
            of the post-processing step.
        rawResponse:
          allOf:
          - $ref: '#/components/schemas/RawResponse'
          description: Details of the raw response from the foundation model output.
        metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          description: Contains information about the foundation model output from
            the post-processing step.
        reasoningContent:
          allOf:
          - $ref: '#/components/schemas/ReasoningContentBlock'
          description: Contains content about the reasoning that the model made during
            the post-processing step.
      description: The foundation model output from the post-processing step.
    PostProcessingParsedResponse:
      type: object
      properties:
        text:
          allOf:
          - $ref: '#/components/schemas/OutputString'
          description: The text returned by the parser.
      description: Details about the response from the Lambda parsing of the output
        from the post-processing step.
    PostProcessingTrace:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/ModelInvocationInput'
        description: |-
          The input for the post-processing step.

            * The `type` is `POST_PROCESSING`.

            * The `text` contains the prompt.

            * The `inferenceConfiguration`, `parserMode`, and `overrideLambda` values are set in the [PromptOverrideConfiguration](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_PromptOverrideConfiguration.html) object that was set when the agent was created or updated.
      - allOf:
        - $ref: '#/components/schemas/PostProcessingModelInvocationOutput'
        description: |-
          The foundation model output from the post-processing step.
      description: |-
        Details about the post-processing step, in which the agent shapes the response.
      x-sensitive: true
    PreProcessingModelInvocationOutput:
      type: object
      properties:
        traceId:
          allOf:
          - $ref: '#/components/schemas/TraceId'
          description: The unique identifier of the trace.
        parsedResponse:
          allOf:
          - $ref: '#/components/schemas/PreProcessingParsedResponse'
          description: Details about the response from the Lambda parsing of the output
            of the pre-processing step.
        rawResponse:
          allOf:
          - $ref: '#/components/schemas/RawResponse'
          description: Details of the raw response from the foundation model output.
        metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          description: Contains information about the foundation model output from
            the pre-processing step.
        reasoningContent:
          allOf:
          - $ref: '#/components/schemas/ReasoningContentBlock'
          description: Contains content about the reasoning that the model made during
            the pre-processing step.
      description: The foundation model output from the pre-processing step.
    PreProcessingParsedResponse:
      type: object
      properties:
        rationale:
          allOf:
          - $ref: '#/components/schemas/RationaleString'
          description: The text returned by the parsing of the pre-processing step,
            explaining the steps that the agent plans to take in orchestration, if
            the user input is valid.
        isValid:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the user input is valid or not. If `false`, the agent
            doesn't proceed to orchestration.
      description: Details about the response from the Lambda parsing of the output
        from the pre-processing step.
    PreProcessingTrace:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/ModelInvocationInput'
        description: |-
          The input for the pre-processing step.

            * The `type` is `PRE_PROCESSING`.

            * The `text` contains the prompt.

            * The `inferenceConfiguration`, `parserMode`, and `overrideLambda` values are set in the [PromptOverrideConfiguration](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_PromptOverrideConfiguration.html) object that was set when the agent was created or updated.
      - allOf:
        - $ref: '#/components/schemas/PreProcessingModelInvocationOutput'
        description: |-
          The foundation model output from the pre-processing step.
      description: |-
        Details about the pre-processing step, in which the agent contextualizes and categorizes user inputs.
      x-sensitive: true
    PromptConfiguration:
      type: object
      properties:
        promptType:
          allOf:
          - $ref: '#/components/schemas/PromptType'
          description: The step in the agent sequence that this prompt configuration
            applies to.
        promptCreationMode:
          allOf:
          - $ref: '#/components/schemas/CreationMode'
          description: Specifies whether to override the default prompt template for
            this `promptType`. Set this value to `OVERRIDDEN` to use the prompt that
            you provide in the `basePromptTemplate`. If you leave it as `DEFAULT`,
            the agent uses a default prompt template.
        promptState:
          allOf:
          - $ref: '#/components/schemas/PromptState'
          description: "Specifies whether to allow the inline agent to carry out the\
            \ step specified in the `promptType`. If you set this value to `DISABLED`,\
            \ the agent skips that step. The default state for each `promptType` is\
            \ as follows.\n\n  * `PRE_PROCESSING` – `ENABLED`\n\n  * `ORCHESTRATION`\
            \ – `ENABLED`\n\n  * `KNOWLEDGE_BASE_RESPONSE_GENERATION` – `ENABLED`\n\
            \n  * `POST_PROCESSING` – `DISABLED`"
        basePromptTemplate:
          allOf:
          - $ref: '#/components/schemas/BasePromptTemplate'
          description: Defines the prompt template with which to replace the default
            prompt template. You can use placeholder variables in the base prompt
            template to customize the prompt. For more information, see [Prompt template
            placeholder variables](https://docs.aws.amazon.com/bedrock/latest/userguide/prompt-placeholders.html).
            For more information, see [Configure the prompt templates](https://docs.aws.amazon.com/bedrock/latest/userguide/advanced-prompts-configure.html).
        inferenceConfiguration:
          allOf:
          - $ref: '#/components/schemas/InferenceConfiguration'
          description: Contains inference parameters to use when the agent invokes
            a foundation model in the part of the agent sequence defined by the `promptType`.
            For more information, see [Inference parameters for foundation models](https://docs.aws.amazon.com/bedrock/latest/userguide/model-parameters.html).
        parserMode:
          allOf:
          - $ref: '#/components/schemas/CreationMode'
          description: Specifies whether to override the default parser Lambda function
            when parsing the raw foundation model output in the part of the agent
            sequence defined by the `promptType`. If you set the field as `OVERRIDDEN`,
            the `overrideLambda` field in the [PromptOverrideConfiguration](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_PromptOverrideConfiguration.html)
            must be specified with the ARN of a Lambda function.
        foundationModel:
          allOf:
          - $ref: '#/components/schemas/ModelIdentifier'
          description: The foundation model to use.
        additionalModelRequestFields:
          allOf:
          - $ref: '#/components/schemas/Document'
          description: 'If the Converse or ConverseStream operations support the model,
            `additionalModelRequestFields` contains additional inference parameters,
            beyond the base set of inference parameters in the `inferenceConfiguration`
            field.


            For more information, see _Inference request parameters and response fields
            for foundation models_ in the Amazon Bedrock user guide.'
      description: Contains configurations to override a prompt template in one part
        of an agent sequence. For more information, see [Advanced prompts](https://docs.aws.amazon.com/bedrock/latest/userguide/advanced-prompts.html).
    PromptConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/PromptConfiguration'
    PromptOverrideConfiguration:
      type: object
      properties:
        promptConfigurations:
          allOf:
          - $ref: '#/components/schemas/PromptConfigurations'
          description: Contains configurations to override a prompt template in one
            part of an agent sequence. For more information, see [Advanced prompts](https://docs.aws.amazon.com/bedrock/latest/userguide/advanced-prompts.html).
        overrideLambda:
          allOf:
          - $ref: '#/components/schemas/LambdaResourceArn'
          description: The ARN of the Lambda function to use when parsing the raw
            foundation model output in parts of the agent sequence. If you specify
            this field, at least one of the `promptConfigurations` must contain a
            `parserMode` value that is set to `OVERRIDDEN`. For more information,
            see [Parser Lambda function in Amazon Bedrock Agents](https://docs.aws.amazon.com/bedrock/latest/userguide/lambda-parser.html).
      required:
      - promptConfigurations
      description: Contains configurations to override prompts in different parts
        of an agent sequence. For more information, see [Advanced prompts](https://docs.aws.amazon.com/bedrock/latest/userguide/advanced-prompts.html).
    PromptSessionAttributesMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    PromptState:
      type: string
      enum:
      - ENABLED
      - DISABLED
    PromptTemplate:
      type: object
      properties:
        textPromptTemplate:
          allOf:
          - $ref: '#/components/schemas/TextPromptTemplate'
          description: "The template for the prompt that's sent to the model for response\
            \ generation. You can include prompt placeholders, which become replaced\
            \ before the prompt is sent to the model to provide instructions and context\
            \ to the model. In addition, you can include XML tags to delineate meaningful\
            \ sections of the prompt template.\n\nFor more information, see the following\
            \ resources:\n\n  * [Knowledge base prompt templates](https://docs.aws.amazon.com/bedrock/latest/userguide/kb-test-config.html#kb-test-config-sysprompt)\n\
            \n  * [Use XML tags with Anthropic Claude models](https://docs.anthropic.com/claude/docs/use-xml-tags)"
      description: "Contains the template for the prompt that's sent to the model\
        \ for response generation. For more information, see [Knowledge base prompt\
        \ templates](https://docs.aws.amazon.com/bedrock/latest/userguide/kb-test-config.html#kb-test-config-sysprompt).\n\
        \nThis data type is used in the following API operations:\n\n  * [RetrieveAndGenerate\
        \ request](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrieveAndGenerate.html#API_agent-runtime_RetrieveAndGenerate_RequestSyntax)\
        \ – in the `filter` field"
    PromptText:
      type: string
    PromptType:
      type: string
      enum:
      - PRE_PROCESSING
      - ORCHESTRATION
      - KNOWLEDGE_BASE_RESPONSE_GENERATION
      - POST_PROCESSING
      - ROUTING_CLASSIFIER
    PropertyParameters:
      type: object
      properties:
        properties:
          allOf:
          - $ref: '#/components/schemas/ParameterList'
          description: A list of parameters in the request body.
      description: Contains the parameters in the request body.
    PutInvocationStepRequest:
      type: object
      properties:
        sessionIdentifier:
          allOf:
          - $ref: '#/components/schemas/SessionIdentifier'
          description: The unique identifier for the session to add the invocation
            step to. You can specify either the session's `sessionId` or its Amazon
            Resource Name (ARN).
        invocationIdentifier:
          allOf:
          - $ref: '#/components/schemas/InvocationIdentifier'
          description: The unique identifier (in UUID format) of the invocation to
            add the invocation step to.
        invocationStepTime:
          allOf:
          - $ref: '#/components/schemas/DateTimestamp'
          description: The timestamp for when the invocation step occurred.
        payload:
          allOf:
          - $ref: '#/components/schemas/InvocationStepPayload'
          description: The payload for the invocation step, including text and images
            for the interaction.
        invocationStepId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The unique identifier of the invocation step in UUID format.
      required:
      - sessionIdentifier
      - invocationIdentifier
      - invocationStepTime
      - payload
    PutInvocationStepResponse:
      type: object
      properties:
        invocationStepId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The unique identifier of the invocation step in UUID format.
      required:
      - invocationStepId
    QueryGenerationInput:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/InputQueryType'
          description: The type of the query.
        text:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The text of the query.
      required:
      - type
      - text
      description: Contains information about a natural language query to transform
        into SQL.
    QueryTransformationConfiguration:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/QueryTransformationType'
          description: The type of transformation to apply to the prompt.
      required:
      - type
      description: To split up the prompt and retrieve multiple sources, set the transformation
        type to `QUERY_DECOMPOSITION`.
    QueryTransformationMode:
      type: string
      enum:
      - TEXT_TO_SQL
    QueryTransformationType:
      type: string
      enum:
      - QUERY_DECOMPOSITION
    RAGStopSequences:
      type: array
      items:
        type: string
    Rationale:
      type: object
      properties:
        traceId:
          allOf:
          - $ref: '#/components/schemas/TraceId'
          description: The unique identifier of the trace step.
        text:
          allOf:
          - $ref: '#/components/schemas/RationaleString'
          description: The reasoning or thought process of the agent, based on the
            input.
      description: Contains the reasoning, based on the input, that the agent uses
        to justify carrying out an action group or getting information from a knowledge
        base.
    RationaleString:
      type: string
    RawResponse:
      type: object
      properties:
        content:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The foundation model's raw output content.
      description: Contains the raw output from the foundation model.
    ReasoningContentBlock:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/ReasoningTextBlock'
        description: |-
          Contains information about the reasoning that the model used to return the content in the content block.
      - allOf:
        - $ref: '#/components/schemas/Blob'
        description: |-
          The content in the reasoning that was encrypted by the model provider for trust and safety reasons.
      description: |-
        Contains content regarding the reasoning that the foundation model made with respect to the content in the content block. Reasoning refers to a Chain of Thought (CoT) that the model generates to enhance the accuracy of its final response.
      x-sensitive: true
    ReasoningTextBlock:
      type: object
      properties:
        text:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Text describing the reasoning that the model used to return
            the content in the content block.
        signature:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A hash of all the messages in the conversation to ensure that
            the content in the reasoning text block isn't tampered with. You must
            submit the signature in subsequent `Converse` requests, in addition to
            the previous messages. If the previous messages are tampered with, the
            response throws an error.
      required:
      - text
      description: Contains information about the reasoning that the model used to
        return the content in the content block.
    RelayConversationHistory:
      type: string
      enum:
      - TO_COLLABORATOR
      - DISABLED
    RepromptResponse:
      type: object
      properties:
        text:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The text reprompting the input.
        source:
          allOf:
          - $ref: '#/components/schemas/Source'
          description: Specifies what output is prompting the agent to reprompt the
            input.
      description: Contains details about the agent's response to reprompt the input.
    RequestBody:
      type: object
      properties:
        content:
          allOf:
          - $ref: '#/components/schemas/ContentMap'
          description: The content in the request body.
      description: The parameters in the API request body.
    RequireConfirmation:
      type: string
      enum:
      - ENABLED
      - DISABLED
    RerankDocument:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/RerankDocumentType'
          description: The type of document to rerank.
        textDocument:
          allOf:
          - $ref: '#/components/schemas/RerankTextDocument'
          description: Contains information about a text document to rerank.
        jsonDocument:
          allOf:
          - $ref: '#/components/schemas/Document'
          description: Contains a JSON document to rerank.
      required:
      - type
      description: Contains information about a document to rerank. Choose the `type`
        to define and include the field that corresponds to the type.
    RerankDocumentType:
      type: string
      enum:
      - TEXT
      - JSON
    RerankQueriesList:
      type: array
      items:
        $ref: '#/components/schemas/RerankQuery'
      x-sensitive: true
    RerankQuery:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/RerankQueryContentType'
          description: The type of the query.
        textQuery:
          allOf:
          - $ref: '#/components/schemas/RerankTextDocument'
          description: Contains information about a text query.
      required:
      - type
      - textQuery
      description: Contains information about a query to submit to the reranker model.
    RerankQueryContentType:
      type: string
      enum:
      - TEXT
    RerankRequest:
      type: object
      properties:
        queries:
          allOf:
          - $ref: '#/components/schemas/RerankQueriesList'
          description: An array of objects, each of which contains information about
            a query to submit to the reranker model.
        sources:
          allOf:
          - $ref: '#/components/schemas/RerankSourcesList'
          description: An array of objects, each of which contains information about
            the sources to rerank.
        rerankingConfiguration:
          allOf:
          - $ref: '#/components/schemas/RerankingConfiguration'
          description: Contains configurations for reranking.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If the total number of results was greater than could fit in
            a response, a token is returned in the `nextToken` field. You can enter
            that token in this field to return the next batch of results.
      required:
      - queries
      - sources
      - rerankingConfiguration
    RerankResponse:
      type: object
      properties:
        results:
          allOf:
          - $ref: '#/components/schemas/RerankResultsList'
          description: An array of objects, each of which contains information about
            the results of reranking.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If the total number of results is greater than can fit in the
            response, use this token in the `nextToken` field when making another
            request to return the next batch of results.
      required:
      - results
    RerankResult:
      type: object
      properties:
        index:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The ranking of the document. The lower a number, the higher
            the document is ranked.
        relevanceScore:
          allOf:
          - $ref: '#/components/schemas/Float'
          description: The relevance score of the document.
        document:
          allOf:
          - $ref: '#/components/schemas/RerankDocument'
          description: Contains information about the document.
      required:
      - index
      - relevanceScore
      description: Contains information about a document that was reranked.
    RerankResultsList:
      type: array
      items:
        $ref: '#/components/schemas/RerankResult'
    RerankSource:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/RerankSourceType'
          description: The type of the source.
        inlineDocumentSource:
          allOf:
          - $ref: '#/components/schemas/RerankDocument'
          description: Contains an inline definition of a source for reranking.
      required:
      - type
      - inlineDocumentSource
      description: Contains information about a source for reranking.
    RerankSourceType:
      type: string
      enum:
      - INLINE
    RerankSourcesList:
      type: array
      items:
        $ref: '#/components/schemas/RerankSource'
      x-sensitive: true
    RerankTextDocument:
      type: object
      properties:
        text:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The text of the document.
      description: Contains information about a text document to rerank.
    RerankingConfiguration:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/RerankingConfigurationType'
          description: The type of reranker that the configurations apply to.
        bedrockRerankingConfiguration:
          allOf:
          - $ref: '#/components/schemas/BedrockRerankingConfiguration'
          description: Contains configurations for an Amazon Bedrock reranker.
      required:
      - type
      - bedrockRerankingConfiguration
      description: Contains configurations for reranking.
    RerankingConfigurationType:
      type: string
      enum:
      - BEDROCK_RERANKING_MODEL
    RerankingMetadataSelectionMode:
      type: string
      enum:
      - SELECTIVE
      - ALL
    RerankingMetadataSelectiveModeConfiguration:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/FieldsForReranking'
        description: |-
          An array of objects, each of which specifies a metadata field to include in consideration when reranking. The remaining metadata fields are ignored.
      - allOf:
        - $ref: '#/components/schemas/FieldsForReranking'
        description: |-
          An array of objects, each of which specifies a metadata field to exclude from consideration when reranking.
      description: |-
        Contains configurations for the metadata fields to include or exclude when considering reranking. If you include the `fieldsToExclude` field, the reranker ignores all the metadata fields that you specify. If you include the `fieldsToInclude` field, the reranker uses only the metadata fields that you specify and ignores all others. You can include only one of these fields.
    ResourceDescription:
      type: string
      minLength: 1
      maxLength: 200
    ResourceName:
      type: string
      pattern: ^([0-9a-zA-Z][_-]?){1,100}$
    ResourceNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/NonBlankString'
      description: The specified resource Amazon Resource Name (ARN) was not found.
        Check the Amazon Resource Name (ARN) and try your request again.
    ResponseBody:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ContentBody'
    ResponseState:
      type: string
      enum:
      - FAILURE
      - REPROMPT
    ResponseStream:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/PayloadPart'
        description: |-
          Contains a part of an agent response and citations for it.
      - allOf:
        - $ref: '#/components/schemas/TracePart'
        description: |-
          Contains information about the agent and session, alongside the agent's reasoning process and results from calling actions and querying knowledge bases and metadata about the trace. You can use the trace to understand how the agent arrived at the response it provided the customer. For more information, see [Trace events](https://docs.aws.amazon.com/bedrock/latest/userguide/trace-events.html).
      - allOf:
        - $ref: '#/components/schemas/ReturnControlPayload'
        description: |-
          Contains the parameters and information that the agent elicited from the customer to carry out an action. This information is returned to the system and can be used in your own setup for fulfilling the action.
      - allOf:
        - $ref: '#/components/schemas/InternalServerException'
        description: |-
          An internal server error occurred. Retry your request.
      - allOf:
        - $ref: '#/components/schemas/ValidationException'
        description: |-
          Input validation failed. Check your request parameters and retry the request.
      - allOf:
        - $ref: '#/components/schemas/ResourceNotFoundException'
        description: |-
          The specified resource Amazon Resource Name (ARN) was not found. Check the Amazon Resource Name (ARN) and try your request again.
      - allOf:
        - $ref: '#/components/schemas/ServiceQuotaExceededException'
        description: |-
          The number of requests exceeds the service quota. Resubmit your request later.
      - allOf:
        - $ref: '#/components/schemas/ThrottlingException'
        description: |-
          The number of requests exceeds the limit. Resubmit your request later.
      - allOf:
        - $ref: '#/components/schemas/AccessDeniedException'
        description: |-
          The request is denied because of missing access permissions. Check your permissions and retry your request.
      - allOf:
        - $ref: '#/components/schemas/ConflictException'
        description: |-
          There was a conflict performing an operation. Resolve the conflict and retry your request.
      - allOf:
        - $ref: '#/components/schemas/DependencyFailedException'
        description: |-
          There was an issue with a dependency. Check the resource configurations and retry the request.
      - allOf:
        - $ref: '#/components/schemas/BadGatewayException'
        description: |-
          There was an issue with a dependency due to a server issue. Retry your request.
      - allOf:
        - $ref: '#/components/schemas/ModelNotReadyException'
        description: |-
          The model specified in the request is not ready to serve Inference requests. The AWS SDK will automatically retry the operation up to 5 times. For information about configuring automatic retries, see [Retry behavior](https://docs.aws.amazon.com/sdkref/latest/guide/feature-retry-behavior.html) in the _AWS SDKs and Tools_ reference guide.
      - allOf:
        - $ref: '#/components/schemas/FilePart'
        description: |-
          Contains intermediate response for code interpreter if any files have been generated.
      description: |-
        The response from invoking the agent and associated citations and trace information.
    RetrievalFilter:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/FilterAttribute'
        description: |-
          Knowledge base data sources are returned if they contain a metadata attribute whose name matches the `key` and whose value matches the `value` in this object.

          The following example would return data sources with an `animal` attribute whose value is `cat`:

          `"equals": { "key": "animal", "value": "cat" }`
      - allOf:
        - $ref: '#/components/schemas/FilterAttribute'
        description: |-
          Knowledge base data sources are returned when:

            * It contains a metadata attribute whose name matches the `key` and whose value doesn't match the `value` in this object.

            * The key is not present in the document.

          The following example would return data sources that don't contain an `animal` attribute whose value is `cat`.

          `"notEquals": { "key": "animal", "value": "cat" }`
      - allOf:
        - $ref: '#/components/schemas/FilterAttribute'
        description: |-
          Knowledge base data sources are returned if they contain a metadata attribute whose name matches the `key` and whose value is greater than the `value` in this object.

          The following example would return data sources with an `year` attribute whose value is greater than `1989`:

          `"greaterThan": { "key": "year", "value": 1989 }`
      - allOf:
        - $ref: '#/components/schemas/FilterAttribute'
        description: |-
          Knowledge base data sources are returned if they contain a metadata attribute whose name matches the `key` and whose value is greater than or equal to the `value` in this object.

          The following example would return data sources with an `year` attribute whose value is greater than or equal to `1989`:

          `"greaterThanOrEquals": { "key": "year", "value": 1989 }`
      - allOf:
        - $ref: '#/components/schemas/FilterAttribute'
        description: |-
          Knowledge base data sources are returned if they contain a metadata attribute whose name matches the `key` and whose value is less than the `value` in this object.

          The following example would return data sources with an `year` attribute whose value is less than to `1989`.

          `"lessThan": { "key": "year", "value": 1989 }`
      - allOf:
        - $ref: '#/components/schemas/FilterAttribute'
        description: |-
          Knowledge base data sources are returned if they contain a metadata attribute whose name matches the `key` and whose value is less than or equal to the `value` in this object.

          The following example would return data sources with an `year` attribute whose value is less than or equal to `1989`.

          `"lessThanOrEquals": { "key": "year", "value": 1989 }`
      - allOf:
        - $ref: '#/components/schemas/FilterAttribute'
        description: |-
          Knowledge base data sources are returned if they contain a metadata attribute whose name matches the `key` and whose value is in the list specified in the `value` in this object.

          The following example would return data sources with an `animal` attribute that is either `cat` or `dog`:

          `"in": { "key": "animal", "value": ["cat", "dog"] }`
      - allOf:
        - $ref: '#/components/schemas/FilterAttribute'
        description: |-
          Knowledge base data sources are returned if they contain a metadata attribute whose name matches the `key` and whose value isn't in the list specified in the `value` in this object.

          The following example would return data sources whose `animal` attribute is neither `cat` nor `dog`.

          `"notIn": { "key": "animal", "value": ["cat", "dog"] }`
      - allOf:
        - $ref: '#/components/schemas/FilterAttribute'
        description: |-
          Knowledge base data sources are returned if they contain a metadata attribute whose name matches the `key` and whose value starts with the `value` in this object. This filter is currently only supported for Amazon OpenSearch Serverless vector stores.

          The following example would return data sources with an `animal` attribute starts with `ca` (for example, `cat` or `camel`).

          `"startsWith": { "key": "animal", "value": "ca" }`
      - allOf:
        - $ref: '#/components/schemas/FilterAttribute'
        description: |-
          Knowledge base data sources are returned if they contain a metadata attribute whose name matches the `key` and whose value is a list that contains the `value` as one of its members.

          The following example would return data sources with an `animals` attribute that is a list containing a `cat` member (for example `["dog", "cat"]`).

          `"listContains": { "key": "animals", "value": "cat" }`
      - allOf:
        - $ref: '#/components/schemas/FilterAttribute'
        description: |-
          Knowledge base data sources are returned if they contain a metadata attribute whose name matches the `key` and whose value is one of the following:

            * A string that contains the `value` as a substring. The following example would return data sources with an `animal` attribute that contains the substring `at` (for example `cat`).

          `"stringContains": { "key": "animal", "value": "at" }`

            * A list with a member that contains the `value` as a substring. The following example would return data sources with an `animals` attribute that is a list containing a member that contains the substring `at` (for example `["dog", "cat"]`).

          `"stringContains": { "key": "animals", "value": "at" }`
      - allOf:
        - $ref: '#/components/schemas/RetrievalFilterList'
        description: |-
          Knowledge base data sources are returned if their metadata attributes fulfill all the filter conditions inside this list.
      - allOf:
        - $ref: '#/components/schemas/RetrievalFilterList'
        description: |-
          Knowledge base data sources are returned if their metadata attributes fulfill at least one of the filter conditions inside this list.
      description: |-
        Specifies the filters to use on the metadata attributes in the knowledge base data sources before returning results. For more information, see [Query configurations](https://docs.aws.amazon.com/bedrock/latest/userguide/kb-test-config.html). See the examples below to see how to use these filters.

        This data type is used in the following API operations:

          * [Retrieve request](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_Retrieve.html#API_agent-runtime_Retrieve_RequestSyntax) – in the `filter` field

          * [RetrieveAndGenerate request](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrieveAndGenerate.html#API_agent-runtime_RetrieveAndGenerate_RequestSyntax) – in the `filter` field
      x-sensitive: true
    RetrievalFilterList:
      type: array
      items:
        $ref: '#/components/schemas/RetrievalFilter'
    RetrievalResultConfluenceLocation:
      type: object
      properties:
        url:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Confluence host URL for the data source location.
      description: The Confluence data source location.
    RetrievalResultContent:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/RetrievalResultContentType'
          description: The type of content in the retrieval result.
        text:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The cited text from the data source.
        byteContent:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'A data URI with base64-encoded content from the data source.
            The URI is in the following format: returned in the following format:
            `data:image/jpeg;base64,${base64-encoded string}`.'
        row:
          allOf:
          - $ref: '#/components/schemas/RetrievalResultContentRow'
          description: Specifies information about the rows with the cells to return
            in retrieval.
      description: "Contains information about a chunk of text from a data source\
        \ in the knowledge base. If the result is from a structured data source, the\
        \ cell in the database and the type of the value is also identified.\n\nThis\
        \ data type is used in the following API operations:\n\n  * [Retrieve response](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_Retrieve.html#API_agent-runtime_Retrieve_ResponseSyntax)\
        \ – in the `content` field\n\n  * [RetrieveAndGenerate response](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrieveAndGenerate.html#API_agent-runtime_RetrieveAndGenerate_ResponseSyntax)\
        \ – in the `content` field\n\n  * [InvokeAgent response](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html#API_agent-runtime_InvokeAgent_ResponseSyntax)\
        \ – in the `content` field"
    RetrievalResultContentColumn:
      type: object
      properties:
        columnName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the column.
        columnValue:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The value in the column.
        type:
          allOf:
          - $ref: '#/components/schemas/RetrievalResultContentColumnType'
          description: The data type of the value.
      description: Contains information about a column with a cell to return in retrieval.
    RetrievalResultContentColumnType:
      type: string
      enum:
      - BLOB
      - BOOLEAN
      - DOUBLE
      - 'NULL'
      - LONG
      - STRING
    RetrievalResultContentRow:
      type: array
      items:
        $ref: '#/components/schemas/RetrievalResultContentColumn'
      x-sensitive: true
    RetrievalResultContentType:
      type: string
      enum:
      - TEXT
      - IMAGE
      - ROW
    RetrievalResultCustomDocumentLocation:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the document.
      description: Contains information about the location of a document in a custom
        data source.
    RetrievalResultKendraDocumentLocation:
      type: object
      properties:
        uri:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The document's uri.
      description: The location of a result in Amazon Kendra.
    RetrievalResultLocation:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/RetrievalResultLocationType'
          description: The type of data source location.
        s3Location:
          allOf:
          - $ref: '#/components/schemas/RetrievalResultS3Location'
          description: The S3 data source location.
        webLocation:
          allOf:
          - $ref: '#/components/schemas/RetrievalResultWebLocation'
          description: The web URL/URLs data source location.
        confluenceLocation:
          allOf:
          - $ref: '#/components/schemas/RetrievalResultConfluenceLocation'
          description: The Confluence data source location.
        salesforceLocation:
          allOf:
          - $ref: '#/components/schemas/RetrievalResultSalesforceLocation'
          description: The Salesforce data source location.
        sharePointLocation:
          allOf:
          - $ref: '#/components/schemas/RetrievalResultSharePointLocation'
          description: The SharePoint data source location.
        customDocumentLocation:
          allOf:
          - $ref: '#/components/schemas/RetrievalResultCustomDocumentLocation'
          description: Specifies the location of a document in a custom data source.
        kendraDocumentLocation:
          allOf:
          - $ref: '#/components/schemas/RetrievalResultKendraDocumentLocation'
          description: The location of a document in Amazon Kendra.
        sqlLocation:
          allOf:
          - $ref: '#/components/schemas/RetrievalResultSqlLocation'
          description: Specifies information about the SQL query used to retrieve
            the result.
      required:
      - type
      description: "Contains information about the data source location.\n\nThis data\
        \ type is used in the following API operations:\n\n  * [Retrieve response](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_Retrieve.html#API_agent-runtime_Retrieve_ResponseSyntax)\
        \ – in the `location` field\n\n  * [RetrieveAndGenerate response](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrieveAndGenerate.html#API_agent-runtime_RetrieveAndGenerate_ResponseSyntax)\
        \ – in the `location` field\n\n  * [InvokeAgent response](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html#API_agent-runtime_InvokeAgent_ResponseSyntax)\
        \ – in the `location` field"
    RetrievalResultLocationType:
      type: string
      enum:
      - S3
      - WEB
      - CONFLUENCE
      - SALESFORCE
      - SHAREPOINT
      - CUSTOM
      - KENDRA
      - SQL
    RetrievalResultMetadata:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/RetrievalResultMetadataValue'
    RetrievalResultMetadataKey:
      type: string
      minLength: 1
      maxLength: 100
    RetrievalResultMetadataValue:
      type: object
      additionalProperties: true
    RetrievalResultS3Location:
      type: object
      properties:
        uri:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The S3 URI for the data source location.
      description: "The S3 data source location.\n\nThis data type is used in the\
        \ following API operations:\n\n  * [Retrieve response](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_Retrieve.html#API_agent-runtime_Retrieve_ResponseSyntax)\
        \ – in the `s3Location` field\n\n  * [RetrieveAndGenerate response](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrieveAndGenerate.html#API_agent-runtime_RetrieveAndGenerate_ResponseSyntax)\
        \ – in the `s3Location` field\n\n  * [InvokeAgent response](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html#API_agent-runtime_InvokeAgent_ResponseSyntax)\
        \ – in the `s3Location` field"
    RetrievalResultSalesforceLocation:
      type: object
      properties:
        url:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Salesforce host URL for the data source location.
      description: The Salesforce data source location.
    RetrievalResultSharePointLocation:
      type: object
      properties:
        url:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The SharePoint site URL for the data source location.
      description: The SharePoint data source location.
    RetrievalResultSqlLocation:
      type: object
      properties:
        query:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The SQL query used to retrieve the result.
      description: Contains information about the SQL query used to retrieve the result.
    RetrievalResultWebLocation:
      type: object
      properties:
        url:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The web URL/URLs for the data source location.
      description: The web URL/URLs data source location.
    RetrieveAndGenerateConfiguration:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/RetrieveAndGenerateType'
          description: 'The type of resource that contains your data for retrieving
            information and generating responses.


            If you choose to use `EXTERNAL_SOURCES`, then currently only Anthropic
            Claude 3 Sonnet models for knowledge bases are supported.'
        knowledgeBaseConfiguration:
          allOf:
          - $ref: '#/components/schemas/KnowledgeBaseRetrieveAndGenerateConfiguration'
          description: Contains details about the knowledge base for retrieving information
            and generating responses.
        externalSourcesConfiguration:
          allOf:
          - $ref: '#/components/schemas/ExternalSourcesRetrieveAndGenerateConfiguration'
          description: The configuration for the external source wrapper object in
            the `retrieveAndGenerate` function.
      required:
      - type
      description: "Contains details about the resource being queried.\n\nThis data\
        \ type is used in the following API operations:\n\n  * [RetrieveAndGenerate\
        \ request](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrieveAndGenerate.html#API_agent-runtime_RetrieveAndGenerate_RequestSyntax)\
        \ – in the `retrieveAndGenerateConfiguration` field"
    RetrieveAndGenerateInput:
      type: object
      properties:
        text:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The query made to the knowledge base.
      required:
      - text
      description: "Contains the query made to the knowledge base.\n\nThis data type\
        \ is used in the following API operations:\n\n  * [RetrieveAndGenerate request](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrieveAndGenerate.html#API_agent-runtime_RetrieveAndGenerate_RequestSyntax)\
        \ – in the `input` field"
    RetrieveAndGenerateOutput:
      type: object
      properties:
        text:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The response generated from querying the knowledge base.
      required:
      - text
      description: "Contains the response generated from querying the knowledge base.\n\
        \nThis data type is used in the following API operations:\n\n  * [RetrieveAndGenerate\
        \ response](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrieveAndGenerate.html#API_agent-runtime_RetrieveAndGenerate_ResponseSyntax)\
        \ – in the `output` field"
    RetrieveAndGenerateOutputEvent:
      type: object
      properties:
        text:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A text response.
      required:
      - text
      description: A retrieve and generate output event.
    RetrieveAndGenerateRequest:
      type: object
      properties:
        sessionId:
          allOf:
          - $ref: '#/components/schemas/SessionId'
          description: The unique identifier of the session. When you first make a
            `RetrieveAndGenerate` request, Amazon Bedrock automatically generates
            this value. You must reuse this value for all subsequent requests in the
            same conversational session. This value allows Amazon Bedrock to maintain
            context and knowledge from previous interactions. You can't explicitly
            set the `sessionId` yourself.
        input:
          allOf:
          - $ref: '#/components/schemas/RetrieveAndGenerateInput'
          description: Contains the query to be made to the knowledge base.
        retrieveAndGenerateConfiguration:
          allOf:
          - $ref: '#/components/schemas/RetrieveAndGenerateConfiguration'
          description: Contains configurations for the knowledge base query and retrieval
            process. For more information, see [Query configurations](https://docs.aws.amazon.com/bedrock/latest/userguide/kb-test-config.html).
        sessionConfiguration:
          allOf:
          - $ref: '#/components/schemas/RetrieveAndGenerateSessionConfiguration'
          description: Contains details about the session with the knowledge base.
      required:
      - input
    RetrieveAndGenerateResponse:
      type: object
      properties:
        sessionId:
          allOf:
          - $ref: '#/components/schemas/SessionId'
          description: The unique identifier of the session. When you first make a
            `RetrieveAndGenerate` request, Amazon Bedrock automatically generates
            this value. You must reuse this value for all subsequent requests in the
            same conversational session. This value allows Amazon Bedrock to maintain
            context and knowledge from previous interactions. You can't explicitly
            set the `sessionId` yourself.
        output:
          allOf:
          - $ref: '#/components/schemas/RetrieveAndGenerateOutput'
          description: Contains the response generated from querying the knowledge
            base.
        citations:
          allOf:
          - $ref: '#/components/schemas/Citations'
          description: A list of segments of the generated response that are based
            on sources in the knowledge base, alongside information about the sources.
        guardrailAction:
          allOf:
          - $ref: '#/components/schemas/GuadrailAction'
          description: Specifies if there is a guardrail intervention in the response.
      required:
      - sessionId
      - output
    RetrieveAndGenerateSessionConfiguration:
      type: object
      properties:
        kmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          description: The ARN of the KMS key encrypting the session.
      required:
      - kmsKeyArn
      description: "Contains configuration about the session with the knowledge base.\n\
        \nThis data type is used in the following API operations:\n\n  * [RetrieveAndGenerate\
        \ request](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrieveAndGenerate.html#API_agent-runtime_RetrieveAndGenerate_RequestSyntax)\
        \ – in the `sessionConfiguration` field"
    RetrieveAndGenerateStreamRequest:
      type: object
      properties:
        sessionId:
          allOf:
          - $ref: '#/components/schemas/SessionId'
          description: The unique identifier of the session. When you first make a
            `RetrieveAndGenerate` request, Amazon Bedrock automatically generates
            this value. You must reuse this value for all subsequent requests in the
            same conversational session. This value allows Amazon Bedrock to maintain
            context and knowledge from previous interactions. You can't explicitly
            set the `sessionId` yourself.
        input:
          allOf:
          - $ref: '#/components/schemas/RetrieveAndGenerateInput'
          description: Contains the query to be made to the knowledge base.
        retrieveAndGenerateConfiguration:
          allOf:
          - $ref: '#/components/schemas/RetrieveAndGenerateConfiguration'
          description: Contains configurations for the knowledge base query and retrieval
            process. For more information, see [Query configurations](https://docs.aws.amazon.com/bedrock/latest/userguide/kb-test-config.html).
        sessionConfiguration:
          allOf:
          - $ref: '#/components/schemas/RetrieveAndGenerateSessionConfiguration'
          description: Contains details about the session with the knowledge base.
      required:
      - input
    RetrieveAndGenerateStreamResponse:
      type: object
      properties:
        stream:
          allOf:
          - $ref: '#/components/schemas/RetrieveAndGenerateStreamResponseOutput'
          description: A stream of events from the model.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/SessionId'
          description: The session ID.
      required:
      - stream
      - sessionId
    RetrieveAndGenerateStreamResponseOutput:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/RetrieveAndGenerateOutputEvent'
        description: |-
          An output event.
      - allOf:
        - $ref: '#/components/schemas/CitationEvent'
        description: |-
          A citation event.
      - allOf:
        - $ref: '#/components/schemas/GuardrailEvent'
        description: |-
          A guardrail event.
      - allOf:
        - $ref: '#/components/schemas/InternalServerException'
        description: |-
          An internal server error occurred. Retry your request.
      - allOf:
        - $ref: '#/components/schemas/ValidationException'
        description: |-
          The input fails to satisfy the constraints specified by _Amazon Bedrock_. For troubleshooting this error, see [ValidationError](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-validation-error) in the Amazon Bedrock User Guide.
      - allOf:
        - $ref: '#/components/schemas/ResourceNotFoundException'
        description: |-
          The specified resource ARN was not found. For troubleshooting this error, see [ResourceNotFound](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-resource-not-found) in the Amazon Bedrock User Guide.
      - allOf:
        - $ref: '#/components/schemas/ServiceQuotaExceededException'
        description: |-
          Your request exceeds the service quota for your account. You can view your quotas at [Viewing service quotas](https://docs.aws.amazon.com/servicequotas/latest/userguide/gs-request-quota.html). You can resubmit your request later.
      - allOf:
        - $ref: '#/components/schemas/ThrottlingException'
        description: |-
          Your request was denied due to exceeding the account quotas for _Amazon Bedrock_. For troubleshooting this error, see [ThrottlingException](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-throttling-exception) in the Amazon Bedrock User Guide.
      - allOf:
        - $ref: '#/components/schemas/AccessDeniedException'
        description: |-
          The request is denied because you do not have sufficient permissions to perform the requested action. For troubleshooting this error, see [AccessDeniedException](https://docs.aws.amazon.com/bedrock/latest/userguide/troubleshooting-api-error-codes.html#ts-access-denied) in the Amazon Bedrock User Guide.
      - allOf:
        - $ref: '#/components/schemas/ConflictException'
        description: |-
          Error occurred because of a conflict while performing an operation.
      - allOf:
        - $ref: '#/components/schemas/DependencyFailedException'
        description: |-
          The request failed due to a dependency error.
      - allOf:
        - $ref: '#/components/schemas/BadGatewayException'
        description: |-
          The request failed due to a bad gateway error.
      description: |-
        A retrieve and generate stream response output.
    RetrieveAndGenerateType:
      type: string
      enum:
      - KNOWLEDGE_BASE
      - EXTERNAL_SOURCES
    RetrieveRequest:
      type: object
      properties:
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/KnowledgeBaseId'
          description: The unique identifier of the knowledge base to query.
        retrievalQuery:
          allOf:
          - $ref: '#/components/schemas/KnowledgeBaseQuery'
          description: Contains the query to send the knowledge base.
        retrievalConfiguration:
          allOf:
          - $ref: '#/components/schemas/KnowledgeBaseRetrievalConfiguration'
          description: Contains configurations for the knowledge base query and retrieval
            process. For more information, see [Query configurations](https://docs.aws.amazon.com/bedrock/latest/userguide/kb-test-config.html).
        guardrailConfiguration:
          allOf:
          - $ref: '#/components/schemas/GuardrailConfiguration'
          description: Guardrail settings.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are more results than can fit in the response, the
            response returns a `nextToken`. Use this token in the `nextToken` field
            of another request to retrieve the next batch of results.
      required:
      - knowledgeBaseId
      - retrievalQuery
    RetrieveResponse:
      type: object
      properties:
        retrievalResults:
          allOf:
          - $ref: '#/components/schemas/KnowledgeBaseRetrievalResults'
          description: A list of results from querying the knowledge base.
        guardrailAction:
          allOf:
          - $ref: '#/components/schemas/GuadrailAction'
          description: Specifies if there is a guardrail intervention in the response.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are more results than can fit in the response, the
            response returns a `nextToken`. Use this token in the `nextToken` field
            of another request to retrieve the next batch of results.
      required:
      - retrievalResults
    RetrievedReference:
      type: object
      properties:
        content:
          allOf:
          - $ref: '#/components/schemas/RetrievalResultContent'
          description: Contains the cited text from the data source.
        location:
          allOf:
          - $ref: '#/components/schemas/RetrievalResultLocation'
          description: Contains information about the location of the data source.
        metadata:
          allOf:
          - $ref: '#/components/schemas/RetrievalResultMetadata'
          description: Contains metadata attributes and their values for the file
            in the data source. For more information, see [Metadata and filtering](https://docs.aws.amazon.com/bedrock/latest/userguide/knowledge-base-ds.html#kb-ds-metadata).
      description: "Contains metadata about a source cited for the generated response.\n\
        \nThis data type is used in the following API operations:\n\n  * [RetrieveAndGenerate\
        \ response](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrieveAndGenerate.html#API_agent-runtime_RetrieveAndGenerate_ResponseSyntax)\
        \ – in the `retrievedReferences` field\n\n  * [InvokeAgent response](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html#API_agent-runtime_InvokeAgent_ResponseSyntax)\
        \ – in the `retrievedReferences` field"
    RetrievedReferences:
      type: array
      items:
        $ref: '#/components/schemas/RetrievedReference'
    ReturnControlInvocationResults:
      type: array
      items:
        $ref: '#/components/schemas/InvocationResultMember'
    ReturnControlPayload:
      type: object
      properties:
        invocationInputs:
          allOf:
          - $ref: '#/components/schemas/InvocationInputs'
          description: A list of objects that contain information about the parameters
            and inputs that need to be sent into the API operation or function, based
            on what the agent determines from its session with the user.
        invocationId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The identifier of the action group invocation.
      description: "Contains information to return from the action group that the\
        \ agent has predicted to invoke.\n\nThis data type is used in the following\
        \ API operations:\n\n  * [InvokeAgent response](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html#API_agent-runtime_InvokeAgent_ResponseSyntax)"
    ReturnControlResults:
      type: object
      properties:
        invocationId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The action's invocation ID.
        returnControlInvocationResults:
          allOf:
          - $ref: '#/components/schemas/ReturnControlInvocationResults'
          description: The action invocation result.
      description: An action invocation result.
    RoutingClassifierModelInvocationOutput:
      type: object
      properties:
        traceId:
          allOf:
          - $ref: '#/components/schemas/TraceId'
          description: The invocation's trace ID.
        rawResponse:
          allOf:
          - $ref: '#/components/schemas/RawResponse'
          description: The invocation's raw response.
        metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          description: The invocation's metadata.
      description: Invocation output from a routing classifier model.
    RoutingClassifierTrace:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/InvocationInput'
        description: |-
          The classifier's invocation input.
      - allOf:
        - $ref: '#/components/schemas/Observation'
        description: |-
          The classifier's observation.
      - allOf:
        - $ref: '#/components/schemas/ModelInvocationInput'
        description: |-
          The classifier's model invocation input.
      - allOf:
        - $ref: '#/components/schemas/RoutingClassifierModelInvocationOutput'
        description: |-
          The classifier's model invocation output.
      description: |-
        A trace for a routing classifier.
      x-sensitive: true
    S3BucketName:
      type: string
      pattern: ^[a-z0-9][\.\-a-z0-9]{1,61}[a-z0-9]$
      minLength: 3
      maxLength: 63
    S3Identifier:
      type: object
      properties:
        s3BucketName:
          allOf:
          - $ref: '#/components/schemas/S3BucketName'
          description: The name of the S3 bucket.
        s3ObjectKey:
          allOf:
          - $ref: '#/components/schemas/S3ObjectKey'
          description: The S3 object key for the S3 resource.
      description: The identifier information for an Amazon S3 bucket.
    S3Location:
      type: object
      properties:
        uri:
          allOf:
          - $ref: '#/components/schemas/S3Uri'
          description: The path to the Amazon S3 bucket where the image is stored.
      required:
      - uri
      description: Information about the Amazon S3 bucket where the image is stored.
    S3ObjectDoc:
      type: object
      properties:
        uri:
          allOf:
          - $ref: '#/components/schemas/S3Uri'
          description: The file location of the S3 wrapper object.
      required:
      - uri
      description: The unique wrapper object of the document from the S3 location.
    S3ObjectFile:
      type: object
      properties:
        uri:
          allOf:
          - $ref: '#/components/schemas/S3Uri'
          description: The uri of the s3 object.
      required:
      - uri
      description: Contains details of the s3 object where the source file is located.
    S3ObjectKey:
      type: string
      pattern: ^[\.\-\!\*\_\'\(\)a-zA-Z0-9][\.\-\!\*\_\'\(\)\/a-zA-Z0-9]*$
      minLength: 1
      maxLength: 1024
    S3Uri:
      type: string
      pattern: ^s3://[a-z0-9][a-z0-9.-]{1,61}[a-z0-9]/.{1,1024}$
      minLength: 1
      maxLength: 1024
    SearchType:
      type: string
      enum:
      - HYBRID
      - SEMANTIC
    ServiceQuotaExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/NonBlankString'
      description: The number of requests exceeds the service quota. Resubmit your
        request later.
    SessionArn:
      type: string
      pattern: ^arn:aws(-[^:]+)?:bedrock:[a-z0-9-]+:[0-9]{12}:session/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
    SessionAttributesMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    SessionId:
      type: string
      pattern: ^[0-9a-zA-Z._:-]+$
      minLength: 2
      maxLength: 100
    SessionIdentifier:
      type: string
      pattern: ^(arn:aws(-[^:]+)?:bedrock:[a-z0-9-]+:[0-9]{12}:session/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})|([a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})$
    SessionMetadataKey:
      type: string
      minLength: 1
      maxLength: 100
    SessionMetadataMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/SessionMetadataValue'
    SessionMetadataValue:
      type: string
      minLength: 0
      maxLength: 5000
    SessionState:
      type: object
      properties:
        sessionAttributes:
          allOf:
          - $ref: '#/components/schemas/SessionAttributesMap'
          description: Contains attributes that persist across a session and the values
            of those attributes. If `sessionAttributes` are passed to a supervisor
            agent in [multi-agent collaboration](https://docs.aws.amazon.com/bedrock/latest/userguide/agents-multi-agent-collaboration.html),
            it will be forwarded to all agent collaborators.
        promptSessionAttributes:
          allOf:
          - $ref: '#/components/schemas/PromptSessionAttributesMap'
          description: "Contains attributes that persist across a prompt and the values\
            \ of those attributes.\n\n  * In orchestration prompt template, these\
            \ attributes replace the $prompt_session_attributes$ placeholder variable.\
            \ For more information, see [Prompt template placeholder variables](https://docs.aws.amazon.com/bedrock/latest/userguide/prompt-placeholders.html).\n\
            \n  * In [multi-agent collaboration](https://docs.aws.amazon.com/bedrock/latest/userguide/agents-multi-agent-collaboration.html),\
            \ the `promptSessionAttributes` will only be used by supervisor agent\
            \ when $prompt_session_attributes$ is present in prompt template."
        returnControlInvocationResults:
          allOf:
          - $ref: '#/components/schemas/ReturnControlInvocationResults'
          description: 'Contains information about the results from the action group
            invocation. For more information, see [Return control to the agent developer](https://docs.aws.amazon.com/bedrock/latest/userguide/agents-returncontrol.html)
            and [Control session context](https://docs.aws.amazon.com/bedrock/latest/userguide/agents-session-state.html).


            If you include this field, the `inputText` field will be ignored.'
        invocationId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The identifier of the invocation of an action. This value must
            match the `invocationId` returned in the `InvokeAgent` response for the
            action whose results are provided in the `returnControlInvocationResults`
            field. For more information, see [Return control to the agent developer](https://docs.aws.amazon.com/bedrock/latest/userguide/agents-returncontrol.html)
            and [Control session context](https://docs.aws.amazon.com/bedrock/latest/userguide/agents-session-state.html).
        files:
          allOf:
          - $ref: '#/components/schemas/InputFiles'
          description: Contains information about the files used by code interpreter.
        knowledgeBaseConfigurations:
          allOf:
          - $ref: '#/components/schemas/KnowledgeBaseConfigurations'
          description: An array of configurations, each of which applies to a knowledge
            base attached to the agent.
        conversationHistory:
          allOf:
          - $ref: '#/components/schemas/ConversationHistory'
          description: The state's conversation history.
      description: Contains parameters that specify various attributes that persist
        across a session or prompt. You can define session state attributes as key-value
        pairs when writing a [Lambda function](https://docs.aws.amazon.com/bedrock/latest/userguide/agents-lambda.html)
        for an action group or pass them when making an [InvokeAgent](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html)
        request. Use session state attributes to control and provide conversational
        context for your agent and to help customize your agent's behavior. For more
        information, see [Control session context](https://docs.aws.amazon.com/bedrock/latest/userguide/agents-session-state.html).
    SessionStatus:
      type: string
      enum:
      - ACTIVE
      - EXPIRED
      - ENDED
    SessionSummaries:
      type: array
      items:
        $ref: '#/components/schemas/SessionSummary'
    SessionSummary:
      type: object
      properties:
        sessionId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The unique identifier for the session.
        sessionArn:
          allOf:
          - $ref: '#/components/schemas/SessionArn'
          description: The Amazon Resource Name (ARN) of the session.
        sessionStatus:
          allOf:
          - $ref: '#/components/schemas/SessionStatus'
          description: The current status of the session.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/DateTimestamp'
          description: The timestamp for when the session was created.
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/DateTimestamp'
          description: The timestamp for when the session was last modified.
      required:
      - sessionId
      - sessionArn
      - sessionStatus
      - createdAt
      - lastUpdatedAt
      description: Contains details about a session. For more information about sessions,
        see [Store and retrieve conversation history and context with Amazon Bedrock
        sessions](https://docs.aws.amazon.com/bedrock/latest/userguide/sessions.html).
    SessionTTL:
      type: integer
      minimum: 60
      maximum: 3600
    Source:
      type: string
      enum:
      - ACTION_GROUP
      - KNOWLEDGE_BASE
      - PARSER
    Span:
      type: object
      properties:
        start:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Where the text with a citation starts in the generated output.
        end:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Where the text with a citation ends in the generated output.
      description: "Contains information about where the text with a citation begins\
        \ and ends in the generated output.\n\nThis data type is used in the following\
        \ API operations:\n\n  * [RetrieveAndGenerate response](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrieveAndGenerate.html#API_agent-runtime_RetrieveAndGenerate_ResponseSyntax)\
        \ – in the `span` field\n\n  * [InvokeAgent response](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html#API_agent-runtime_InvokeAgent_ResponseSyntax)\
        \ – in the `span` field"
    StopSequences:
      type: array
      items:
        type: string
    StreamingConfigurations:
      type: object
      properties:
        streamFinalResponse:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether to enable streaming for the final response.
            This is set to `false` by default.
        applyGuardrailInterval:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'The guardrail interval to apply as response is generated.
            By default, the guardrail interval is set to 50 characters. If a larger
            interval is specified, the response will be generated in larger chunks
            with fewer `ApplyGuardrail` calls. The following examples show the response
            generated for _Hello, I am an agent_ input string.


            **Example response in chunks: Interval set to 3 characters**


            `''Hel'', ''lo, '',''I am'', '' an'', '' Age'', ''nt''`


            Each chunk has at least 3 characters except for the last chunk


            **Example response in chunks: Interval set to 20 or more characters**


            `Hello, I am an Agent`'
      description: Configurations for streaming.
    SummaryText:
      type: string
      minLength: 0
      maxLength: 25000000
    TagKey:
      type: string
      pattern: ^[a-zA-Z0-9\s._:/=+@-]*$
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      description: List of Tag Keys
    TagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/TaggableResourcesArn'
          description: The Amazon Resource Name (ARN) of the resource to tag.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          description: An object containing key-value pairs that define the tags to
            attach to the resource.
      required:
      - resourceArn
      - tags
    TagResourceResponse:
      type: object
      properties: {}
    TagValue:
      type: string
      pattern: ^[a-zA-Z0-9\s._:/=+@-]*$
      minLength: 0
      maxLength: 256
    TaggableResourcesArn:
      type: string
      pattern: (^arn:aws(-[^:]+)?:bedrock:[a-zA-Z0-9-]+:[0-9]{12}:(session)/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$)
      minLength: 20
      maxLength: 1011
    TagsMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      description: A map of tag keys and values
    Temperature:
      type: number
      format: float
      minimum: 0
      maximum: 1
    TextInferenceConfig:
      type: object
      properties:
        temperature:
          allOf:
          - $ref: '#/components/schemas/Temperature'
          description: Controls the random-ness of text generated by the language
            model, influencing how much the model sticks to the most predictable next
            words versus exploring more surprising options. A lower temperature value
            (e.g. 0.2 or 0.3) makes model outputs more deterministic or predictable,
            while a higher temperature (e.g. 0.8 or 0.9) makes the outputs more creative
            or unpredictable.
        topP:
          allOf:
          - $ref: '#/components/schemas/TopP'
          description: A probability distribution threshold which controls what the
            model considers for the set of possible next tokens. The model will only
            consider the top p% of the probability distribution when generating the
            next token.
        maxTokens:
          allOf:
          - $ref: '#/components/schemas/MaxTokens'
          description: The maximum number of tokens to generate in the output text.
            Do not use the minimum of 0 or the maximum of 65536. The limit values
            described here are arbitary values, for actual values consult the limits
            defined by your specific model.
        stopSequences:
          allOf:
          - $ref: '#/components/schemas/RAGStopSequences'
          description: A list of sequences of characters that, if generated, will
            cause the model to stop generating further tokens. Do not use a minimum
            length of 1 or a maximum length of 1000. The limit values described here
            are arbitary values, for actual values consult the limits defined by your
            specific model.
      description: 'Configuration settings for text generation using a language model
        via the RetrieveAndGenerate operation. Includes parameters like temperature,
        top-p, maximum token count, and stop sequences.


        The valid range of `maxTokens` depends on the accepted values for your chosen
        model''s inference parameters. To see the inference parameters for your model,
        see [Inference parameters for foundation models.](https://docs.aws.amazon.com/bedrock/latest/userguide/model-parameters.html)'
    TextPrompt:
      type: object
      properties:
        text:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The text in the text prompt to optimize.
      required:
      - text
      description: Contains information about the text prompt to optimize.
    TextPromptTemplate:
      type: string
      minLength: 1
      maxLength: 4000
    TextResponsePart:
      type: object
      properties:
        text:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The part of the generated text that contains a citation.
        span:
          allOf:
          - $ref: '#/components/schemas/Span'
          description: Contains information about where the text with a citation begins
            and ends in the generated output.
      description: "Contains the part of the generated text that contains a citation,\
        \ alongside where it begins and ends.\n\nThis data type is used in the following\
        \ API operations:\n\n  * [RetrieveAndGenerate response](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_RetrieveAndGenerate.html#API_agent-runtime_RetrieveAndGenerate_ResponseSyntax)\
        \ – in the `textResponsePart` field\n\n  * [InvokeAgent response](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html#API_agent-runtime_InvokeAgent_ResponseSyntax)\
        \ – in the `textResponsePart` field"
    TextToSqlConfiguration:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/TextToSqlConfigurationType'
          description: The type of resource to use in transformation.
        knowledgeBaseConfiguration:
          allOf:
          - $ref: '#/components/schemas/TextToSqlKnowledgeBaseConfiguration'
          description: Specifies configurations for a knowledge base to use in transformation.
      required:
      - type
      description: Contains configurations for transforming text to SQL.
    TextToSqlConfigurationType:
      type: string
      enum:
      - KNOWLEDGE_BASE
    TextToSqlKnowledgeBaseConfiguration:
      type: object
      properties:
        knowledgeBaseArn:
          allOf:
          - $ref: '#/components/schemas/KnowledgeBaseArn'
          description: The ARN of the knowledge base
      required:
      - knowledgeBaseArn
      description: Contains configurations for a knowledge base to use in transformation.
    ThrottlingException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/NonBlankString'
      description: The number of requests exceeds the limit. Resubmit your request
        later.
    TopK:
      type: integer
      minimum: 0
      maximum: 500
    TopP:
      type: number
      format: float
      minimum: 0
      maximum: 1
    Trace:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/GuardrailTrace'
        description: |-
          The trace details for a trace defined in the Guardrail filter.
      - allOf:
        - $ref: '#/components/schemas/PreProcessingTrace'
        description: |-
          Details about the pre-processing step, in which the agent contextualizes and categorizes user inputs.
      - allOf:
        - $ref: '#/components/schemas/OrchestrationTrace'
        description: |-
          Details about the orchestration step, in which the agent determines the order in which actions are executed and which knowledge bases are retrieved.
      - allOf:
        - $ref: '#/components/schemas/PostProcessingTrace'
        description: |-
          Details about the post-processing step, in which the agent shapes the response..
      - allOf:
        - $ref: '#/components/schemas/RoutingClassifierTrace'
        description: |-
          A routing classifier's trace.
      - allOf:
        - $ref: '#/components/schemas/FailureTrace'
        description: |-
          Contains information about the failure of the interaction.
      - allOf:
        - $ref: '#/components/schemas/CustomOrchestrationTrace'
        description: |-
          Details about the custom orchestration step in which the agent determines the order in which actions are executed.
      description: |-
        Contains one part of the agent's reasoning process and results from calling API actions and querying knowledge bases. You can use the trace to understand how the agent arrived at the response it provided the customer. For more information, see [Trace enablement](https://docs.aws.amazon.com/bedrock/latest/userguide/agents-test.html#trace-enablement).
      x-sensitive: true
    TraceId:
      type: string
      minLength: 2
      maxLength: 16
    TraceKnowledgeBaseId:
      type: string
    TracePart:
      type: object
      properties:
        sessionId:
          allOf:
          - $ref: '#/components/schemas/SessionId'
          description: The unique identifier of the session with the agent.
        trace:
          allOf:
          - $ref: '#/components/schemas/Trace'
          description: Contains one part of the agent's reasoning process and results
            from calling API actions and querying knowledge bases. You can use the
            trace to understand how the agent arrived at the response it provided
            the customer. For more information, see [Trace enablement](https://docs.aws.amazon.com/bedrock/latest/userguide/agents-test.html#trace-enablement).
        agentId:
          allOf:
          - $ref: '#/components/schemas/AgentId'
          description: The unique identifier of the agent.
        agentAliasId:
          allOf:
          - $ref: '#/components/schemas/AgentAliasId'
          description: The unique identifier of the alias of the agent.
        agentVersion:
          allOf:
          - $ref: '#/components/schemas/AgentVersion'
          description: The version of the agent.
        callerChain:
          allOf:
          - $ref: '#/components/schemas/CallerChain'
          description: The part's caller chain.
        eventTime:
          allOf:
          - $ref: '#/components/schemas/DateTimestamp'
          description: The time of the trace.
        collaboratorName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The part's collaborator name.
      description: Contains information about the agent and session, alongside the
        agent's reasoning process and results from calling API actions and querying
        knowledge bases and metadata about the trace. You can use the trace to understand
        how the agent arrived at the response it provided the customer. For more information,
        see [Trace enablement](https://docs.aws.amazon.com/bedrock/latest/userguide/agents-test.html#trace-enablement).
    TransformationConfiguration:
      type: object
      properties:
        mode:
          allOf:
          - $ref: '#/components/schemas/QueryTransformationMode'
          description: The mode of the transformation.
        textToSqlConfiguration:
          allOf:
          - $ref: '#/components/schemas/TextToSqlConfiguration'
          description: Specifies configurations for transforming text to SQL.
      required:
      - mode
      description: Contains configurations for transforming the natural language query
        into SQL.
    Type:
      type: string
      enum:
      - ACTION_GROUP
      - AGENT_COLLABORATOR
      - KNOWLEDGE_BASE
      - FINISH
      - ASK_USER
      - REPROMPT
    UntagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/TaggableResourcesArn'
          description: The Amazon Resource Name (ARN) of the resource from which to
            remove tags.
        tagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: A list of keys of the tags to remove from the resource.
      required:
      - resourceArn
      - tagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateSessionRequest:
      type: object
      properties:
        sessionMetadata:
          allOf:
          - $ref: '#/components/schemas/SessionMetadataMap'
          description: A map of key-value pairs containing attributes to be persisted
            across the session. For example the user's ID, their language preference,
            and the type of device they are using.
        sessionIdentifier:
          allOf:
          - $ref: '#/components/schemas/SessionIdentifier'
          description: The unique identifier of the session to modify. You can specify
            either the session's `sessionId` or its Amazon Resource Name (ARN).
      required:
      - sessionIdentifier
    UpdateSessionResponse:
      type: object
      properties:
        sessionId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The unique identifier of the session you updated.
        sessionArn:
          allOf:
          - $ref: '#/components/schemas/SessionArn'
          description: The Amazon Resource Name (ARN) of the session that was updated.
        sessionStatus:
          allOf:
          - $ref: '#/components/schemas/SessionStatus'
          description: The status of the session you updated.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/DateTimestamp'
          description: The timestamp for when the session was created.
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/DateTimestamp'
          description: The timestamp for when the session was last modified.
      required:
      - sessionId
      - sessionArn
      - sessionStatus
      - createdAt
      - lastUpdatedAt
    Usage:
      type: object
      properties:
        inputTokens:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Contains information about the input tokens from the foundation
            model usage.
        outputTokens:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Contains information about the output tokens from the foundation
            model usage.
      description: Contains information of the usage of the foundation model.
    Uuid:
      type: string
      pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
    ValidationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/NonBlankString'
      description: Input validation failed. Check your request parameters and retry
        the request.
    VectorSearchBedrockRerankingConfiguration:
      type: object
      properties:
        modelConfiguration:
          allOf:
          - $ref: '#/components/schemas/VectorSearchBedrockRerankingModelConfiguration'
          description: Contains configurations for the reranker model.
        numberOfRerankedResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of results to return after reranking.
        metadataConfiguration:
          allOf:
          - $ref: '#/components/schemas/MetadataConfigurationForReranking'
          description: Contains configurations for the metadata to use in reranking.
      required:
      - modelConfiguration
      description: Contains configurations for reranking with an Amazon Bedrock reranker
        model.
    VectorSearchBedrockRerankingModelConfiguration:
      type: object
      properties:
        modelArn:
          allOf:
          - $ref: '#/components/schemas/BedrockRerankingModelArn'
          description: The ARN of the reranker model to use.
        additionalModelRequestFields:
          allOf:
          - $ref: '#/components/schemas/AdditionalModelRequestFields'
          description: A JSON object whose keys are request fields for the model and
            whose values are values for those fields.
      required:
      - modelArn
      description: Contains configurations for an Amazon Bedrock reranker model.
    VectorSearchRerankingConfiguration:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/VectorSearchRerankingConfigurationType'
          description: The type of reranker model.
        bedrockRerankingConfiguration:
          allOf:
          - $ref: '#/components/schemas/VectorSearchBedrockRerankingConfiguration'
          description: Contains configurations for an Amazon Bedrock reranker model.
      required:
      - type
      description: Contains configurations for reranking the retrieved results.
    VectorSearchRerankingConfigurationType:
      type: string
      enum:
      - BEDROCK_RERANKING_MODEL
    Verb:
      type: string
